### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.AutomationElement
  id: AutomationElement
  children:
  - System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  - System.Windows.Automation.AutomationElement.AccessKeyProperty
  - System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  - System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  - System.Windows.Automation.AutomationElement.AutomationIdProperty
  - System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  - System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  - System.Windows.Automation.AutomationElement.Cached
  - System.Windows.Automation.AutomationElement.CachedChildren
  - System.Windows.Automation.AutomationElement.CachedParent
  - System.Windows.Automation.AutomationElement.ClassNameProperty
  - System.Windows.Automation.AutomationElement.ClickablePointProperty
  - System.Windows.Automation.AutomationElement.ControlTypeProperty
  - System.Windows.Automation.AutomationElement.CultureProperty
  - System.Windows.Automation.AutomationElement.Current
  - System.Windows.Automation.AutomationElement.Equals(System.Object)
  - System.Windows.Automation.AutomationElement.Finalize
  - System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  - System.Windows.Automation.AutomationElement.FocusedElement
  - System.Windows.Automation.AutomationElement.FrameworkIdProperty
  - System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  - System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  - System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  - System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetClickablePoint
  - System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  - System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  - System.Windows.Automation.AutomationElement.GetHashCode
  - System.Windows.Automation.AutomationElement.GetRuntimeId
  - System.Windows.Automation.AutomationElement.GetSupportedPatterns
  - System.Windows.Automation.AutomationElement.GetSupportedProperties
  - System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  - System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  - System.Windows.Automation.AutomationElement.HelpTextProperty
  - System.Windows.Automation.AutomationElement.IsContentElementProperty
  - System.Windows.Automation.AutomationElement.IsControlElementProperty
  - System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsEnabledProperty
  - System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  - System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsOffscreenProperty
  - System.Windows.Automation.AutomationElement.IsPasswordProperty
  - System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  - System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  - System.Windows.Automation.AutomationElement.ItemStatusProperty
  - System.Windows.Automation.AutomationElement.ItemTypeProperty
  - System.Windows.Automation.AutomationElement.LabeledByProperty
  - System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  - System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  - System.Windows.Automation.AutomationElement.MenuClosedEvent
  - System.Windows.Automation.AutomationElement.MenuOpenedEvent
  - System.Windows.Automation.AutomationElement.NameProperty
  - System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  - System.Windows.Automation.AutomationElement.NotSupported
  - System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  - System.Windows.Automation.AutomationElement.OrientationProperty
  - System.Windows.Automation.AutomationElement.ProcessIdProperty
  - System.Windows.Automation.AutomationElement.RootElement
  - System.Windows.Automation.AutomationElement.RuntimeIdProperty
  - System.Windows.Automation.AutomationElement.SetFocus
  - System.Windows.Automation.AutomationElement.StructureChangedEvent
  - System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  - System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  - System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  - System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  - System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  langs:
  - csharp
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
  type: Class
  summary: "表す、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]内の要素、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]ツリー、および UI オートメーション クライアント アプリケーションによって識別子として使用される値が含まれています。"
  remarks: "部分に対応する AutomationElement[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]基になる実装に関係なく、(など[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]または[!INCLUDE[TLA#tla_win32](~/add/includes/tlasharptla-win32-md.md)])。"
  syntax:
    content: public sealed class AutomationElement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  id: AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AcceleratorKey*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       アクセラレータ キーの組み合わせでは、アクションを呼び出します。 CTRL + O が多くの場合、呼び出しに使用など、**開く**ファイル コモン ダイアログ ボックス。 <xref:System.Windows.Automation.AutomationElement>実装では常に<xref:System.Windows.Automation.InvokePattern>クラス</xref:System.Windows.Automation.InvokePattern>を設定するアクセラレータ キー プロパティを持つ</xref:System.Windows.Automation.AutomationElement>       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は プロパティの既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#124](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#124)]\n [!code-vb[UIAClient_snip#124](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#124)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#125](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#125)]\n [!code-vb[UIAClient_snip#125](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#125)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AcceleratorKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  id: AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AccessKey*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       アクセス キーは、メニューのメニュー項目または関連付けられたメニュー機能をアクティブにするボタンなどのコントロールのラベルのテキスト内の文字です。 たとえば、文字&quot;O&quot;は多くの場合、ために使用を呼び出す、**ファイルを開く**からコモン ダイアログ ボックス、**ファイル**メニュー。       アクセス キー値の種類は<xref:System.String>あり、要素のアクセス キーとして登録されている文字</xref:System.String>。 文字列の既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#127](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#127)]\n [!code-vb[UIAClient_snip#127](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#127)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#128](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#128)]\n [!code-vb[UIAClient_snip#128](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#128)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AccessKeyProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  id: AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "非同期のコンテンツの読み込み中に発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このイベントは、非同期でコンテンツを読み込んでイベントが発生したことを示すためにプロバイダーによって主に使用します。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AsyncContentLoadedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  id: AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "フォーカスが変更されたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationFocusChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  id: AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>プロパティで、要素の識別に使用します</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は プロパティの既定値は、空の文字列です。       使用可能になるときに常にローカルの言語に関係なく、アプリケーションの任意のインスタンスで同じ値を要素の AutomationIdProperty が必要です。 値は、デスクトップ全体で、兄弟要素間で一意であるが、必ずしも一意ではありませんをする必要があります。 たとえば、アプリケーションの複数のインスタンスまたは Microsoft Windows エクスプ ローラーで、複数のフォルダー ビューでは、や、同じ AutomationIdProperty の要素を含む可能性があります。       サポートを中に、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>常にお勧めテストの容易性が向上させる場合、このプロパティは必須ではありません</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>。 これはサポートされている場合、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>は UI の言語に関係なく実行するスクリプトを自動テストの作成に便利です</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>。 クライアントでは何も想定しないように注意してに関して、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>他のアプリケーションによって公開されている s</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> 。 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>は必ずしも限りません安定した異なるリリース間であるか、アプリケーションのビルドします</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A>。       インスタンス[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]で、デスクトップ上の要素を一意に識別されます、<xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>プロパティ</xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty>。      > [!NOTE] > AutomationIdProperty が最上位のアプリケーションの windows 以外のコントロール ビュー内のすべての UI オートメーション要素によってサポートされている、UI オートメーション要素から派生した[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]ID または X:uid、およびから派生した UI オートメーション要素が存在しないコントロール[!INCLUDE[TLA2#tla_win32](~/add/includes/tla2sharptla-win32-md.md)]コントロール ID がないコントロール"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#129](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#129)]\n [!code-vb[UIAClient_snip#129](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#129)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#130](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#130)]\n [!code-vb[UIAClient_snip#130](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#130)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty AutomationIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  id: AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "プロパティ変更イベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent AutomationPropertyChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  id: BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.BoundingRectangle*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       外接する四角形が型<xref:System.Windows.Rect>。</xref:System.Windows.Rect> 返される四角形は、物理的な画面座標でです。 既定値は<xref:System.Windows.Rect.Empty%2A>。</xref:System.Windows.Rect.Empty%2A> <xref:System.Windows.Rect.Empty%2A>項目が現在表示されていないかどうかに返される、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]です。</xref:System.Windows.Rect.Empty%2A>       返される四角形は、クリック可能なポイントを含めることができます。 場合、これが発生するインスタンスに含める、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]項目は、不規則な形状またはクリック可能な領域、または他のことが隠される[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#131](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#131)]\n [!code-vb[UIAClient_snip#131](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#131)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#132](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#132)]\n [!code-vb[UIAClient_snip#132](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#132)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty BoundingRectangleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Cached
  id: Cached
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得、キャッシュされた[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティ値をこの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクト。"
  remarks: "アクセサーを[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティがキャッシュから返される構造のプロパティとして表されます。 構造体を取得する必要はありません。そのメンバーは、次の例のように、直接アクセスできます。 使用可能なプロパティおよびその使用方法の詳細については、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>を参照してください。       現在の値を取得する[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティをこの要素を使用して、<xref:System.Windows.Automation.AutomationElement.Current%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Current%2A>。"
  example:
  - "The following example shows how the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> property can be cached and then retrieved by using the Cached property.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Cached { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "キャッシュされたプロパティを含む構造体の値を<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.Cached*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "キャッシュされたプロパティはありません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  id: CachedChildren
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "この要素のキャッシュされた子を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "によって返されるコレクションの表示が決定されます、<xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>の条件、<xref:System.Windows.Automation.CacheRequest>をアクティブであった場合にこの<xref:System.Windows.Automation.AutomationElement>オブジェクトを取得します</xref:System.Windows.Automation.AutomationElement></xref:System.Windows.Automation.CacheRequest></xref:System.Windows.Automation.CacheRequest.TreeFilter%2A>。       場合にのみ、子はキャッシュのスコープ、<xref:System.Windows.Automation.CacheRequest>含まれている<xref:System.Windows.Automation.TreeScope>、 <xref:System.Windows.Automation.TreeScope>、または<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.CacheRequest>       場合、<xref:System.Windows.Automation.CacheRequest>子がこのレベルでキャッシュすることが、子が存在しない、このプロパティの値は 0 を指定します</xref:System.Windows.Automation.CacheRequest>。 ただし、このレベルの子をキャッシュする要求が行われていない場合、プロパティを取得しようとすると、例外を発生させます。"
  example:
  - "In the following example, a list box element is obtained from the parent window element while a <xref:System.Windows.Automation.CacheRequest> is active and <xref:System.Windows.Automation.CacheRequest.TreeScope%2A> is <xref:System.Windows.Automation.TreeScope>. The specified properties of the child elements (that is, the list items) are stored in the cache and can be retrieved from the CachedChildren of the list box.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection CachedChildren { get; }
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "子要素のコレクション。 このコレクションは、要素が子を持っていない場合は、空にすることはできます。"
  overload: System.Windows.Automation.AutomationElement.CachedChildren*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "この要素の子をキャッシュする要求はされませんでした。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CachedParent
  id: CachedParent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このキャッシュされた親を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: ''
  example:
  - "In the following example, the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name%2A> properties of a list box and its list items are cached. The list box element is available in the CachedParent property of each list item element.  \n  \n [!code-vb[UIAClient_snip#119](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#119)]\n [!code-cs[UIAClient_snip#119](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#119)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement CachedParent { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "親要素です。 戻り値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>指定された要素に親があるない場合-の例では、この要素はルート ノードです。"
  overload: System.Windows.Automation.AutomationElement.CachedParent*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "親要素はキャッシュされません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  id: ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ClassName*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       クラス名は、UI オートメーション プロバイダーの実装に依存し、そのため、標準形式である時にカウントされることはできません。 ただし、クラス名がわかっている場合行うこともできますが、予期されると、アプリケーションが動作していることを確認する[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]要素。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は 既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#133](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#133)]\n [!code-vb[UIAClient_snip#133](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#133)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#134](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#134)]\n [!code-vb[UIAClient_snip#134](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#134)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClassNameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  id: ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "クリック可能なポイントのプロパティを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       <xref:System.Windows.Automation.AutomationElement>は完全に別のウィンドウによって隠されている場合にクリック可能ではありません</xref:System.Windows.Automation.AutomationElement>。       プロパティの戻り値の種類<xref:System.Windows.Point>。</xref:System.Windows.Point>は 既定値は `null` です。       返される値は、物理的な画面座標でです。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#135](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#135)]\n [!code-vb[UIAClient_snip#135](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#135)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#166](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#166)]\n [!code-vb[UIAClient_snip#166](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#166)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ClickablePointProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  id: ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ControlType*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの既定値は<xref:System.Windows.Automation.ControlType.Custom></xref:System.Windows.Automation.ControlType.Custom>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#136](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#136)]\n [!code-vb[UIAClient_snip#136](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#136)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#137](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#137)]\n [!code-vb[UIAClient_snip#137](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#137)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  id: CultureProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "カルチャ プロパティを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       内で、 [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] framework、報告される既定値が必ず`en-US`ため、 [!INCLUDE[TLA#tla_winfx](~/add/includes/ajax-current-ext-md.md)] framework 自動的に既定の英語にします。 その他の[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]フレームワークこのプロパティに明示的に設定するかあります公開されません。       このプロパティは、コントロールごとでは、上に存在ことができますが、通常はのみ使用可能なアプリケーション レベルでします。       プロパティの戻り値の種類<xref:System.Globalization.CultureInfo>。</xref:System.Globalization.CultureInfo>は"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#138](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#138)]\n [!code-vb[UIAClient_snip#138](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#138)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty CultureProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Current
  id: Current
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "現在のプロパティ値を取得、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "アクセサーを[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティは現在によって返される構造のプロパティとして表されます。 構造体を取得する必要はありません。そのメンバーは、次の例のように、直接アクセスできます。 使用可能なプロパティおよびその使用方法の詳細については、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>。</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation>を参照してください。       キャッシュされた値を取得する[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]この要素のプロパティを使用して、<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A>。"
  example:
  - "The following example shows how the Current property is used to retrieve the name of an item that has been selected in a list.  \n  \n [!code-vb[UIAClient_snip#106](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#106)]\n [!code-cs[UIAClient_snip#106](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#106)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement.AutomationElementInformation Current { get; }
    return:
      type: System.Windows.Automation.AutomationElement.AutomationElementInformation
      description: "現在のプロパティ値を含む構造体。"
  overload: System.Windows.Automation.AutomationElement.Current*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "決定するかどうか、指定した<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>これと同じ値を持つ<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "等しいとを比較する&2; つの要素には、さまざまな地点から別のキャッシュされた情報を含めることがあります。 等しいかどうかチェックしたテストのみ、<xref:System.Windows.Automation.AutomationElement>オブジェクトが同一の基になるユーザー インターフェイス要素を参照してくださいつまり、同じランタイム識別子があること。</xref:System.Windows.Automation.AutomationElement> 。       このメソッドは、実行時の識別子を比較することも、等値演算子と同じです。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>がこれに等しい<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.Finalize
  id: Finalize
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~AutomationElement ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "すべてを返します<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>指定した条件に適合するオブジェクト。"
  remarks: "検索のスコープは、メソッドが呼び出される、要素に対して相対的です。 要素は、ツリーで検出された順序で返されます。       最上位レベルの windows デスクトップで、検索するときに必ず指定して<xref:System.Windows.Automation.TreeScope>で`scope`ではなく、 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> デスクトップのサブツリー全体を検索は、何千もの項目を反復処理する可能性があります、スタック オーバーフローが発生する原因とすることがあります。       場合は、クライアント アプリケーションは、独自のユーザー インターフェイス内の要素を検索しようとする可能性があります、する必要がありますすべて[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]を別のスレッドで呼び出します。"
  example:
  - "The following example shows how to use FindAll to locate all enabled buttons in a window.  \n  \n [!code-vb[UIAClient_snip#116](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#116)]\n [!code-cs[UIAClient_snip#116](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#116)]"
  syntax:
    content: public System.Windows.Automation.AutomationElementCollection FindAll (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "検索のスコープを指定する値のビットごとの組み合わせ。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "照合する検索条件を格納するオブジェクト。"
    return:
      type: System.Windows.Automation.AutomationElementCollection
      description: "指定した条件を満たすオブジェクトのコレクション。 一致がない、空のコレクションが返されます。"
  overload: System.Windows.Automation.AutomationElement.FindAll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  id: FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "指定した条件に一致する最初の子または子孫要素を返します。"
  remarks: "検索のスコープは、メソッドが呼び出される、要素に対して相対的です。       デスクトップ上のトップレベル ウィンドウを検索するときは必ず指定して<xref:System.Windows.Automation.TreeScope>で`scope`ではなく、 <xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> デスクトップのサブツリー全体を検索は、何千もの項目を反復処理する可能性があります、スタック オーバーフローが発生する原因とすることがあります。       場合は、クライアント アプリケーションは、独自のユーザー インターフェイス内の要素を検索しようとする可能性があります、する必要がありますすべて[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]を別のスレッドで呼び出します。"
  example:
  - "The following example shows how to find a child window from its identifier.  \n  \n [!code-vb[UIAClient_snip#110](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#110)]\n [!code-cs[UIAClient_snip#110](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#110)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement FindFirst (System.Windows.Automation.TreeScope scope, System.Windows.Automation.Condition condition);
    parameters:
    - id: scope
      type: System.Windows.Automation.TreeScope
      description: "検索のスコープを指定する値のビットごとの組み合わせ。"
    - id: condition
      type: System.Windows.Automation.Condition
      description: "照合する検索条件を格納するオブジェクト。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "条件を満たす最初の要素または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>一致が検出されない場合。"
  overload: System.Windows.Automation.AutomationElement.FindFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  id: FocusedElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>現在フォーカスがあること。"
  remarks: "場合は、クライアント アプリケーションは、独自のユーザー インターフェイス内の要素を検索しようとする可能性があります、する必要がありますすべて[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]を別のスレッドで呼び出します。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FocusedElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "フォーカスがある[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素。"
  overload: System.Windows.Automation.AutomationElement.FocusedElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  id: FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.FrameworkId*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は 既定値は、空の文字列です。       このプロパティは、全体の UI フレームワークに特殊なケースを適用するアプリケーションを使用します。 プロパティの値には、&quot;Win32&quot;、&quot;WinForm&quot;、&quot;DirectUI&quot;などがあります。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#139](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#139)]\n [!code-vb[UIAClient_snip#139](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#139)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty FrameworkIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "新しいを取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクトに対して、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]指定したウィンドウ ハンドルによって参照される項目。"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromHandle (IntPtr hwnd);
    parameters:
    - id: hwnd
      type: System.IntPtr
      description: "ハンドル、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "An <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref> for the [!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)] item identified by <code>hwnd</code>."
  overload: System.Windows.Automation.AutomationElement.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  id: FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "新しい取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクトをローカルから<xref href=&quot;System.Windows.Automation.Provider.IRawElementProviderSimple&quot;></xref>実装します。"
  remarks: "このメソッドは、独自のネイティブ要素型にアクセスする、呼び出し元を有効にするクライアント ヘルパー ライブラリで使用可能性があります。 たとえば、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]を返すことができるように、このメソッドを内部的に使用する<xref:System.Windows.Automation.AutomationElement>を取得するクライアントに、 [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)] <xref:System.Windows.UIElement>.</xref:System.Windows.UIElement>から直接要素</xref:System.Windows.Automation.AutomationElement>"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromLocalProvider (System.Windows.Automation.Provider.IRawElementProviderSimple localImpl);
    parameters:
    - id: localImpl
      type: System.Windows.Automation.Provider.IRawElementProviderSimple
      description: "プロバイダー オブジェクト。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "<xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>プロバイダー オブジェクトによって提供された要素を表すです。"
  overload: System.Windows.Automation.AutomationElement.FromLocalProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  id: FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "新しいを取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクトに対して、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]デスクトップ上の指定したポイントにある項目。"
  remarks: "FromPoint は、ルート要素に最も近い論理ツリー内の要素を返します。       場合は、クライアント アプリケーションは、独自のユーザー インターフェイス内の要素を検索しようとする可能性があります、する必要がありますすべて[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]を別のスレッドで呼び出します。       返されたの外接する四角形内のポイントは<xref:System.Windows.Automation.AutomationElement>とは限りませんコントロールのクリック可能な部分です</xref:System.Windows.Automation.AutomationElement>。 たとえば、round ボタンは、近くの外接する四角形の角のいずれかのクリック可能なできない可能性があります。"
  example:
  - "The following example retrieves the <xref:System.Windows.Automation.AutomationElement> at the system cursor location.  \n  \n [!code-vb[UIAClient_snip#181](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#181)]\n [!code-cs[UIAClient_snip#181](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#181)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement FromPoint (System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "検索する位置を示す、デスクトップ上の物理的な画面座標、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]指定した位置に項目。"
  overload: System.Windows.Automation.AutomationElement.FromPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  id: GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このキャッシュから指定したパターンを取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "GetCachedPattern は、キャッシュから指定したパターンを取得します。 指定したパターンの現在のオブジェクトを取得するには、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>。</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>を呼び出します       このメソッドは、要求したパターンが既にキャッシュされていない場合に例外をスローします。"
  example:
  - "The following example shows how to cache and retrieve a pattern.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "取得するパターンの識別子。"
    return:
      type: System.Object
      description: "指定したパターンを表すオブジェクト。 、の一致パターンがない場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>が返されます。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求されたパターンでは、キャッシュされていないと、要素でサポートされていないです。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このキャッシュから指定したプロパティの値を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。 ターゲットによって明示的にサポートされているプロパティのプロパティの型の適切な既定値が返される[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]要素。"
  remarks: "要素自体の UI オートメーション プロバイダーは、プロパティをサポートする場合、プロパティの値が返されます。 それ以外の場合、既定値に指定されたプロパティによって[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください<xref:System.Windows.Automation.AutomationElement>、 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>など</xref:System.Windows.Automation.AutomationElement>。       GetCachedPropertyValue から指定したプロパティの取得、 <xref:System.Windows.Automation.AutomationElement>&quot;s をキャッシュします</xref:System.Windows.Automation.AutomationElement>。 指定したプロパティ呼び出し<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>の現在のオブジェクトを取得するには       このメソッドは、要求されたプロパティが既にキャッシュされていない場合に例外をスローします。"
  example:
  - "The following shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "取得するプロパティの識別子。"
    return:
      type: System.Object
      description: "指定したプロパティの値を格納するオブジェクト。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求されたプロパティは、キャッシュではありません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]の<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このキャッシュから指定したプロパティの値を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>で、必要に応じて既定のプロパティは無視されます。"
  remarks: "<xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A><xref:System.Windows.Automation.AutomationElement>。</xref:System.Windows.Automation.AutomationElement>キャッシュから指定したプロパティを取得します。</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A> 現在のプロパティを取得するには、 <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>を呼び出します       渡す`false`で`ignoreDefaultValue` <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>を呼び出すことと同じです       要素自体の UI オートメーション プロバイダーは、プロパティをサポートする場合、プロパティの値が返されます。 それ以外の場合`ignoreDefaultValue`は`false`、既定のプロパティで指定された[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください<xref:System.Windows.Automation.AutomationElement>、 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>など</xref:System.Windows.Automation.AutomationElement>。       このメソッドは、要求されたプロパティが既にキャッシュされていない場合に例外をスローします。"
  example:
  - "The following example shows how this method can be used to retrieve a cached property.  \n  \n [!code-vb[UIAClient_snip#108](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#108)]\n [!code-cs[UIAClient_snip#108](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#108)]"
  syntax:
    content: public object GetCachedPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "取得するプロパティの識別子。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "指定したプロパティがサポートされていない場合に、既定値を無視するかどうかを指定する値。"
    return:
      type: System.Object
      description: "指定したプロパティの値を格納するオブジェクトまたは<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>要素が値を指定しない場合および<code> ignoreDefaultValue </code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要求されたプロパティは、キャッシュではありません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  id: GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "ポイントを取得、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>をクリックすることができます。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>は完全に別のウィンドウによって隠されている場合にクリック可能ではありません</xref:System.Windows.Automation.AutomationElement>。       <xref:System.Windows.Automation.AutomationElement>は、次の条件を満たす場合にクリック可能な:-がプログラムで表示されで利用可能な[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]ツリー</xref:System.Windows.Automation.AutomationElement> 。      スクロールして完全に、親コンテナー内に存在する場合。 要素がクリップされる場合、クリック可能なである保証はありません。      -要素は他の UI 要素によって隠されていません。 場合は、要素はその先祖以外の UI 要素によって部分的に隠されて、クリック可能なできない可能性があります。      要素を含むウィンドウ自体もクリック可能です。 たとえば、格納先ウィンドウが完全に透過的な場合は、ウィンドウはクリック可能なできません。 マウスのクリックは順番にクリックして、その下のウィンドウのため、透明なウィンドウ内のコントロールには、クリック可能なポイントは返しません。      でポイントが必要、要素が (リストまたはツリー ビュー) などのコンテナーである場合は、クリックされると発生する場合は、フォーカスをコントロールの背景。 コンテナー コントロールのすべての部分が、子要素で使用されている場合は、クリック可能なことはできません。       保証はありません、コントロールが処理を行う定義される時点でクリックされたときに、クリック可能な UI オートメーション プロバイダーによってです。 コントロールに対するアクションを実行するコントロール パターンの代わりに使用を検討してください。"
  example:
  - "The following code retrieves a clickable point for a control and moves the system cursor to that point.  \n  \n [!code-vb[UIAClient_snip#179](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#179)]\n [!code-cs[UIAClient_snip#179](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#179)]"
  syntax:
    content: public System.Windows.Point GetClickablePoint ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "この要素上をクリックする、クライアントで使用できるポイントの物理的な画面座標。"
  overload: System.Windows.Automation.AutomationElement.GetClickablePoint*
  exceptions:
  - type: System.Windows.Automation.NoClickablePointException
    commentId: T:System.Windows.Automation.NoClickablePointException
    description: "クリック可能なポイントはありません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  id: GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "これで、指定したパターン オブジェクトを取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "GetCurrentPattern では、呼び出し時に、可用性に基づいて、指定されたパターンを取得します。       形式によって[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]、このメソッドは、プロセス間のパフォーマンス オーバーヘッドを発生させます。 アプリケーションは、パターンがキャッシュされ、 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>。</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>を使用して取得する方法でオーバーヘッドが集中できます。"
  example:
  - "The following example shows how to use this method to retrieve a <xref:System.Windows.Automation.SelectionItemPattern>, which is then used to select an item in a list box.  \n  \n [!code-vb[UIAClient_snip#103](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#103)]\n [!code-cs[UIAClient_snip#103](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#103)]  \n  \n> [!NOTE]\n>  For often-repeated tasks such as the one in the example, it would be more efficient to cache the pattern and use <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>."
  syntax:
    content: public object GetCurrentPattern (System.Windows.Automation.AutomationPattern pattern);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "取得するパターンの識別子。"
    return:
      type: System.Object
      description: "によって指定されたパターンが現在サポートされている場合は、パターン オブジェクト、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要素では、パターンがサポートされていません。"
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "これで指定したプロパティの値を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。 ターゲットによって明示的にサポートされているプロパティのプロパティの型の適切な既定値が返される[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]要素。"
  remarks: "GetCurrentPropertyValue メソッドによって返される値は、呼び出された時点で最新です。 他のアプリケーションとの対話で値を変更できます、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]です。       要素自体の UI オートメーション プロバイダーは、プロパティをサポートする場合、プロパティの値が返されます。 それ以外の場合、既定値に指定されたプロパティによって[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください<xref:System.Windows.Automation.AutomationElement>、 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>など</xref:System.Windows.Automation.AutomationElement>。       形式によって[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]、このメソッドは、プロセス間のパフォーマンス オーバーヘッドを発生させます。 プロパティをキャッシュし、 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>。</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>を使用して取得する方法"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティの識別子を取得するプロパティを指定することです。"
    return:
      type: System.Object
      description: "指定したプロパティの値を格納するオブジェクト。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  id: GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "これで指定したプロパティの値を取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>で、必要に応じて既定のプロパティは無視されます。"
  remarks: "渡す`false`で`ignoreDefaultValue` <xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>.</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%28System.Windows.Automation.AutomationProperty%29?displayProperty=fullName>を呼び出すことと同じです       要素自体の UI オートメーション プロバイダーは、プロパティをサポートする場合、プロパティの値が返されます。 それ以外の場合`ignoreDefaultValue`は`false`、既定のプロパティで指定された[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]が返されます。 既定のプロパティについては、のプロパティの識別子のフィールドを参照してください<xref:System.Windows.Automation.AutomationElement>、 <xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>。</xref:System.Windows.Automation.AutomationElement.AcceleratorKeyProperty>など</xref:System.Windows.Automation.AutomationElement>。       GetCurrentPropertyValue メソッドによって返される値は、呼び出された時点で最新です。 他のアプリケーションとの対話で値を変更できます、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]です。       形式によって[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]、このメソッドは、プロセス間のパフォーマンス オーバーヘッドを発生させます。 アプリケーションは、プロパティがキャッシュされ、 <xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>。</xref:System.Windows.Automation.AutomationElement.GetCachedPropertyValue%2A>を使用して取得する方法でオーバーヘッドが集中できます。"
  example:
  - "The following example retrieves the current value of the <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText%2A> property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public object GetCurrentPropertyValue (System.Windows.Automation.AutomationProperty property, bool ignoreDefaultValue);
    parameters:
    - id: property
      type: System.Windows.Automation.AutomationProperty
      description: "[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]プロパティの識別子を取得するプロパティを指定することです。"
    - id: ignoreDefaultValue
      type: System.Boolean
      description: "指定したプロパティがサポートされている場合に、既定値を無視するかどうかを指定する値。"
    return:
      type: System.Object
      description: "指定したプロパティの値を格納するオブジェクトまたは<xref href=&quot;System.Windows.Automation.AutomationElement.NotSupported&quot;></xref>要素が値を指定しない場合および<code> ignoreDefaultValue </code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  id: GetHashCode
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "このハッシュ コードを取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.Windows.Automation.AutomationElement.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  id: GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "割り当てられている一意の識別子を取得、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目。"
  remarks: "識別子がのみに一意であることが保証、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]が生成されたデスクトップのです。 識別子は、時間の経過と共に再利用することができます。       実行時の識別子の形式は、将来のリリースで変更があります。 返される識別子を非透過の値として扱われます、のみ比較です。 使用する必要があります。例についてを決定するかどうか、<xref:System.Windows.Automation.AutomationElement>がキャッシュにします</xref:System.Windows.Automation.AutomationElement>。"
  example:
  - "The following example shows how to retrieve the run-time identifier of an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#111](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#111)]\n [!code-cs[UIAClient_snip#111](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#111)]"
  syntax:
    content: public int[] GetRuntimeId ();
    parameters: []
    return:
      type: System.Int32[]
      description: "実行時の id を表す整数の配列。"
  overload: System.Windows.Automation.AutomationElement.GetRuntimeId*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  id: GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "取得、コントロール パターンのこの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>をサポートしています。"
  remarks: "このメソッドのデバッグ通常使用されます。 呼び出しに必要な大量の処理、クエリ、<xref:System.Windows.Automation.AutomationElement>のすべての可能なパターンです</xref:System.Windows.Automation.AutomationElement>。 <xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A> <xref:System.Windows.Automation.AutomationElement>。</xref:System.Windows.Automation.AutomationElement>から特定のコントロール パターンを取得</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>して通常 特定のパターンがサポートされているかどうかを確認するには、適切なプロパティを確認しますたとえば、 <xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>。</xref:System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty>"
  example:
  - "The following example shows how to retrieve the control patterns supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#114](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#114)]\n [!code-cs[UIAClient_snip#114](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#114)]"
  syntax:
    content: public System.Windows.Automation.AutomationPattern[] GetSupportedPatterns ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationPattern[]
      description: "配列<xref href=&quot;System.Windows.Automation.AutomationPattern&quot;></xref>サポートされているコントロール パターンを表すオブジェクト。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  id: GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "要素でサポートされるプロパティの識別子を取得します。"
  remarks: "返される配列は、この要素でサポートされているすべてのプロパティを識別します。ただし、含めることも重複するエントリやプロパティを含む`null`または空の値。 ほとんどの目的を使用する方がよい<xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>プロパティは現在サポートされているかどうかを判断し、その現在の値を取得します</xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A>。"
  example:
  - "The following example shows how to retrieve the properties supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#115](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#115)]\n [!code-cs[UIAClient_snip#115](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#115)]"
  syntax:
    content: public System.Windows.Automation.AutomationProperty[] GetSupportedProperties ();
    parameters: []
    return:
      type: System.Windows.Automation.AutomationProperty[]
      description: "サポートされているプロパティの識別子の配列。"
  overload: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  id: GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "新しい取得<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>で更新されたキャッシュします。"
  remarks: "元の<xref:System.Windows.Automation.AutomationElement>は変更されません</xref:System.Windows.Automation.AutomationElement>。 GetUpdatedCache 返します新しい<xref:System.Windows.Automation.AutomationElement>を参照する同じ[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]あり同じ<xref:System.Windows.Automation.AutomationElement>.</xref:System.Windows.Automation.AutomationElement> </xref:System.Windows.Automation.AutomationElement>"
  example:
  - "The following example demonstrates how a cache might be updated whenever the selection in a combo box changes.  \n  \n [!code-vb[UIAClient_snip#109](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#109)]\n [!code-cs[UIAClient_snip#109](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#109)]"
  syntax:
    content: public System.Windows.Automation.AutomationElement GetUpdatedCache (System.Windows.Automation.CacheRequest request);
    parameters:
    - id: request
      type: System.Windows.Automation.CacheRequest
      description: "パターンと更新されたキャッシュに含めるプロパティ。"
    return:
      type: System.Windows.Automation.AutomationElement
      description: "新しい<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>を含む更新されたキャッシュします。"
  overload: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  id: HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HasKeyboardFocus*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#140](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#140)]\n [!code-vb[UIAClient_snip#140](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#140)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HasKeyboardFocusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  id: HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.HelpText*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       この情報は、プロバイダーによって指定されたツールヒントから通常取得されます。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は プロパティの既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-vb[UIAClient_snip#126](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#126)]\n [!code-cs[UIAClient_snip#126](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#126)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty HelpTextProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  id: IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsContentElement*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       コンテンツ ビュー、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]ツリーのビューを提供する、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]のみ内のデータを表す要素を格納している、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]です。       要素は、コンテンツを保持できるコントロールである必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`true`します。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#141](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#141)]\n [!code-vb[UIAClient_snip#141](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#141)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#142](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#142)]\n [!code-vb[UIAClient_snip#142](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#142)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsContentElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  id: IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsControlElement*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       コントロールは、対話型または親の情報として、ユーザーに認識要素、[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]です。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`true`します。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#143](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#143)]\n [!code-vb[UIAClient_snip#143](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#143)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#144](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#144)]\n [!code-vb[UIAClient_snip#144](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#144)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsControlElementProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  id: IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.DockPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example  ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsDockPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  id: IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>プロパティを指定するかどうか、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]によって参照された項目、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>が有効になっています</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。       コントロールの有効な状態のときは`false`、子コントロールを無効になってもいると見なされます。 親の状態の変更を制御する場合は、子要素のプロパティ変更イベントを期待できません。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#146](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#146)]\n [!code-vb[UIAClient_snip#146](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#146)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsEnabledProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  id: IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.ExpandCollapsePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example retrieves a value that specifies whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsExpandCollapsePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  id: IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.GridItemPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  id: IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.GridPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsGridPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  id: IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsInvokePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  id: IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.ItemContainerPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsItemContainerPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  id: IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsKeyboardFocusable*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティが正しく機能するために必要な情報を提供、<xref:System.Windows.Automation.AutomationElement.SetFocus%2A>メソッド</xref:System.Windows.Automation.AutomationElement.SetFocus%2A>。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#147](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#147)]\n [!code-vb[UIAClient_snip#147](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#147)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsKeyboardFocusableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  id: IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.MultipleViewPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsMultipleViewPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  id: IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>かを示すプロパティかどうか、[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]項目が画面に表示されます</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       型の戻り値は、 <xref:System.Boolean>、既定値は、 `false`</xref:System.Boolean> 。       このプロパティは、場合の詳細については`true`、 <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>.</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>を参照してください。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#148](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#148)]\n [!code-vb[UIAClient_snip#148](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#148)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#149](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#149)]\n [!code-vb[UIAClient_snip#149](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#149)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsOffscreenProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  id: IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       このプロパティの戻り値は<xref:System.Boolean>。</xref:System.Boolean> 返します`true`コンテンツがそれ以外の保護されていることを示す`false`です。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#150](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#150)]\n [!code-vb[UIAClient_snip#150](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#150)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsPasswordProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  id: IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.RangeValuePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRangeValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  id: IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsRequiredForForm*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       このプロパティの戻り値が型<xref:System.Boolean>、既定値は、 `false`</xref:System.Boolean> 。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#151](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#151)]\n [!code-vb[UIAClient_snip#151](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#151)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsRequiredForFormProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  id: IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.ScrollItemPattern&quot;> </xref>コントロール パターンは、この<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  id: IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.ScrollPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsScrollPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  id: IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.SelectionItemPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  id: IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.SelectionPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSelectionPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  id: IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.SynchronizedInputPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsSynchronizedInputPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  id: IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.TableItemPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTableItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  id: IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.TablePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTablePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  id: IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.TextPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTextPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  id: IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.TogglePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTogglePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  id: IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.TransformPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsTransformPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  id: IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.ValuePattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsValuePatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  id: IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.VirtualizedItemPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsVirtualizedItemPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  id: IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示すプロパティを識別するかどうか、 <xref href=&quot;System.Windows.Automation.WindowPattern&quot;> </xref>コントロール パターンは、こちらの<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       プロパティの戻り値の種類<xref:System.Boolean>。</xref:System.Boolean>は プロパティの既定値は`false`します。"
  example:
  - "The following example ascertains whether a specified control pattern is supported by an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-cs[UIAClient_snip#145](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#145)]\n [!code-vb[UIAClient_snip#145](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#145)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty IsWindowPatternAvailableProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  id: ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>プロパティは、複雑な項目の視覚的表現のステータスを指定します</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemStatus*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       戻り値がコントロールで定義<xref:System.String>。</xref:System.String> 既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#152](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#152)]\n [!code-vb[UIAClient_snip#152](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#152)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#153](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#153)]\n [!code-vb[UIAClient_snip#153](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#153)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemStatusProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  id: ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ItemType*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       戻り値がコントロールで定義<xref:System.String>。</xref:System.String> 既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#154](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#154)]\n [!code-vb[UIAClient_snip#154](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#154)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, an application-defined string is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#155](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#155)]\n [!code-vb[UIAClient_snip#155](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#155)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ItemTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  id: LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>プロパティで、コントロールに関連付けられているラベルを識別します</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LabeledBy*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.Windows.Automation.AutomationElement>。</xref:System.Windows.Automation.AutomationElement>は プロパティの既定値は`null`します。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#156](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#156)]\n [!code-vb[UIAClient_snip#156](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#156)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#157](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#157)]\n [!code-vb[UIAClient_snip#157](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#157)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LabeledByProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  id: LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "レイアウトが無効になったときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       多くの要素の表示情報が変更されるたびに、要素のコンテナーがこのイベントが発生します。  このイベントは、クライアントを更新する必要があることを示すインジケーターとして使用、<xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>と<xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty>については、ツリー内の要素のキャッシュされている可能性があります</xref:System.Windows.Automation.AutomationElement.IsOffscreenProperty></xref:System.Windows.Automation.AutomationElement.BoundingRectangleProperty>。 このイベントをトリガーする推奨される変更の数は 25 です。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent LayoutInvalidatedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  id: LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>ローカル言語でのプロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.LocalizedControlType*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       適切に定義されたコントロールの種類がないカスタム コントロールを表す場合は、このプロパティを公開するには、プロバイダーが必要です。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は プロパティの既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#158](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#158)]\n [!code-vb[UIAClient_snip#158](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#158)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#159](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#159)]\n [!code-vb[UIAClient_snip#159](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#159)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty LocalizedControlTypeProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  id: MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "メニューを閉じたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  id: MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "メニューを開いたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent MenuOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NameProperty
  id: NameProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Name*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.String>。</xref:System.String>は プロパティの既定値は、空の文字列です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#160](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#160)]\n [!code-vb[UIAClient_snip#160](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#160)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#161](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#161)]\n [!code-vb[UIAClient_snip#161](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#161)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NameProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  id: NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.NativeWindowHandle*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.Int32>。</xref:System.Int32>は プロパティの既定値は 0 です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#162](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#162)]\n [!code-vb[UIAClient_snip#162](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#162)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#163](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#163)]\n [!code-vb[UIAClient_snip#163](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#163)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty NativeWindowHandleProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.NotSupported
  id: NotSupported
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "プロパティがサポートされていないことを示します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  example:
  - "The following example retrieves the help text property for an <xref:System.Windows.Automation.AutomationElement>, specifying that NotSupported should be returned if the control does not support that property.  \n  \n [!code-vb[UIAClient_snip#123](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#123)]\n [!code-cs[UIAClient_snip#123](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#123)]"
  syntax:
    content: public static readonly object NotSupported;
    return:
      type: System.Object
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示す値を返すかどうか、指定した<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクトが同じを参照してください[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]要素。"
  remarks: "2 つ<xref:System.Windows.Automation.AutomationElement>等しいとを比較するオブジェクトは、さまざまな地点から別のキャッシュされた情報を含めることがあります</xref:System.Windows.Automation.AutomationElement>。 等値テストのみが同じ基になるオブジェクトが参照している[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素。"
  syntax:
    content: public static bool op_Equality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "最初の<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>を比較します。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "2 番目<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つ<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクトを参照する同じ[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  id: op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  type: Operator
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "示す値を返すかどうか、指定した<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>オブジェクト参照に異なる[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]要素。"
  syntax:
    content: public static bool op_Inequality (System.Windows.Automation.AutomationElement left, System.Windows.Automation.AutomationElement right);
    parameters:
    - id: left
      type: System.Windows.Automation.AutomationElement
      description: "最初の<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>を比較します。"
    - id: right
      type: System.Windows.Automation.AutomationElement
      description: "2 番目<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクト参照に異なる場合[!INCLUDE[TLA2#tla_ui](~/add/includes/ajax-current-ext-md.md)]要素以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  id: OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.Orientation*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの値が型<xref:System.Windows.Automation.OrientationType>。</xref:System.Windows.Automation.OrientationType> 既定値は<xref:System.Windows.Automation.OrientationType>。</xref:System.Windows.Automation.OrientationType>"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#164](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#164)]\n [!code-vb[UIAClient_snip#164](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#164)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported> is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#165](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#165)]\n [!code-vb[UIAClient_snip#165](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#165)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty OrientationProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  id: ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.ProcessId*>。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       このプロパティからも取得できます、<xref:System.Windows.Automation.AutomationElement.Current%2A>または<xref:System.Windows.Automation.AutomationElement.Cached%2A>プロパティ</xref:System.Windows.Automation.AutomationElement.Cached%2A></xref:System.Windows.Automation.AutomationElement.Current%2A>。       プロパティの戻り値の種類<xref:System.Int32>。</xref:System.Int32>は プロパティの既定値は 0 です。"
  example:
  - "The following example retrieves the current value of the property. The default value is returned if the element does not provide one.  \n  \n [!code-cs[UIAClient_snip#167](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#167)]\n [!code-vb[UIAClient_snip#167](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#167)]  \n  \n The following example retrieves the current value of the property, but specifies that if the element itself does not provide a value for the property, <xref:System.Windows.Automation.AutomationElement.NotSupported>is to be returned instead of a default value.  \n  \n [!code-cs[UIAClient_snip#168](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#168)]\n [!code-vb[UIAClient_snip#168](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#168)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty ProcessIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RootElement
  id: RootElement
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
  type: Property
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "ルートを取得します<xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>現在のデスクトップにします。"
  remarks: "できますルート要素を開始点として、他の要素を検索するため使用して使用する、<xref:System.Windows.Automation.AutomationElement.FindAll%2A>と<xref:System.Windows.Automation.AutomationElement.FindFirst%2A>メソッド</xref:System.Windows.Automation.AutomationElement.FindFirst%2A></xref:System.Windows.Automation.AutomationElement.FindAll%2A>。       ルート要素を検索する場合は必ず指定して<xref:System.Windows.Automation.TreeScope>、検索のスコープでない<xref:System.Windows.Automation.TreeScope>.</xref:System.Windows.Automation.TreeScope> </xref:System.Windows.Automation.TreeScope> デスクトップのサブツリー全体を検索は、何千もの項目を反復処理する可能性があります、スタック オーバーフローが発生する原因とすることがあります。"
  example:
  - "The following example code retrieves a collection of all the immediate children of the desktop.  \n  \n [!code-vb[UIAClient_snip#201](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#201)]\n [!code-cs[UIAClient_snip#201](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#201)]"
  syntax:
    content: public static System.Windows.Automation.AutomationElement RootElement { get; }
    return:
      type: System.Windows.Automation.AutomationElement
      description: "ルート要素です。"
  overload: System.Windows.Automation.AutomationElement.RootElement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  id: RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "要素のランタイム識別子を格納するプロパティを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       ランタイム[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]プロパティを指定します、[!INCLUDE[TLA2#tla_id](~/add/includes/tla2sharptla-id-md.md)]の<xref:System.Windows.Automation.AutomationElement>デスクトップ上で一意である</xref:System.Windows.Automation.AutomationElement>。       プロパティの戻り値は型<xref:System.Int32>。</xref:System.Int32>の配列 既定値はありません。"
  example:
  - "The following example retrieves the current value of the property.  \n  \n [!code-cs[UIAClient_snip#169](~/add/codesnippet/csharp/CustomElementClient/PropertySnips.cs#169)]\n [!code-vb[UIAClient_snip#169](~/add/codesnippet/visualbasic/UIAClient_snip/PropertySnips.vb#169)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationProperty RuntimeIdProperty;
    return:
      type: System.Windows.Automation.AutomationProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.SetFocus
  id: SetFocus
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "フォーカスを設定、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;></xref>です。"
  remarks: "このメソッドの動作は、要素の UI オートメーション プロバイダーによって実装に依存します。 フォーカスを設定しません必ずしもが前面に、要素の表示または表示されるようにします。"
  syntax:
    content: public void SetFocus ();
    parameters: []
  overload: System.Windows.Automation.AutomationElement.SetFocus*
  exceptions:
  - type: System.Windows.Automation.ElementNotAvailableException
    commentId: T:System.Windows.Automation.ElementNotAvailableException
    description: "UI、 <xref href=&quot;System.Windows.Automation.AutomationElement&quot;> </xref>は存在しません。"
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  id: StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別するイベントをいつ発生するか、[!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]ツリー構造が変更されました。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent StructureChangedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  id: ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "ツールヒントが閉じたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipClosedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  id: ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "ツールヒントが開いたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは、 <xref:System.Windows.Automation.AutomationElementIdentifiers>。</xref:System.Windows.Automation.AutomationElementIdentifiers>内と同等の識別子を使用する必要があります。       ツールヒントは、デスクトップで、一時的なし、クライアントがイベントを受け取るとき、ツールヒント、既に閉じている可能性があります。"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent ToolTipOpenedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "キャッシュからコントロール パターンを取得します。"
  remarks: ''
  example:
  - "The following example shows how to cache and retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#107](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#107)]\n [!code-cs[UIAClient_snip#107](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#107)]"
  syntax:
    content: public bool TryGetCachedPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "取得するコントロール パターンの識別子。"
    - id: patternObject
      type: System.Object
      description: "キャッシュ内にある場合、返された場合、パターンが含まれていますそれ以外の場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>パターンがキャッシュ内にある場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ことがない場合、キャッシュ内でかサポートされています。"
  overload: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  id: TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "クリックして可能な要素内のポイントを取得します。"
  remarks: "<xref:System.Windows.Automation.AutomationElement>は完全に別のウィンドウによって隠されている場合にクリック可能ではありません</xref:System.Windows.Automation.AutomationElement>。"
  example:
  - "The following example attempts to retrieve a clickable point on an <xref:System.Windows.Automation.AutomationElement>.  \n  \n [!code-vb[UIAClient_snip#112](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#112)]\n [!code-cs[UIAClient_snip#112](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#112)]"
  syntax:
    content: public bool TryGetClickablePoint (out System.Windows.Point pt);
    parameters:
    - id: pt
      type: System.Windows.Point
      description: "このメソッドが戻るときに、クリック可能なポイントの物理的な画面座標が含まれています。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クリック可能な; である点がある場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  id: TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  langs:
  - csharp
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "コントロール パターンを実装するオブジェクトを取得します。"
  remarks: "形式によって[!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)]、このメソッドは、プロセス間のパフォーマンス オーバーヘッドを発生させます。 アプリケーションは、パターンがキャッシュされ、 <xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>。</xref:System.Windows.Automation.AutomationElement.GetCachedPattern%2A>を使用して取得する方法でオーバーヘッドが集中できます。"
  example:
  - "The following example shows how to use this method to retrieve a control pattern.  \n  \n [!code-vb[UIAClient_snip#113](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#113)]\n [!code-cs[UIAClient_snip#113](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#113)]"
  syntax:
    content: public bool TryGetCurrentPattern (System.Windows.Automation.AutomationPattern pattern, out object patternObject);
    parameters:
    - id: pattern
      type: System.Windows.Automation.AutomationPattern
      description: "取得するコントロール パターンの識別子。"
    - id: patternObject
      type: System.Object
      description: "制御が戻るとき、サポートされている場合、コントロール パターンそれ以外の場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、パターンがサポートされています。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotAvailableException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotAvailableException
  nameWithType: ElementNotAvailableException
  fullName: System.Windows.Automation.ElementNotAvailableException
- uid: System.Windows.Automation.NoClickablePointException
  parent: System.Windows.Automation
  isExternal: false
  name: NoClickablePointException
  nameWithType: NoClickablePointException
  fullName: System.Windows.Automation.NoClickablePointException
- uid: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AcceleratorKeyProperty
  nameWithType: AutomationElement.AcceleratorKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AcceleratorKeyProperty
- uid: System.Windows.Automation.AutomationProperty
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty
- uid: System.Windows.Automation.AutomationElement.AccessKeyProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AccessKeyProperty
  nameWithType: AutomationElement.AccessKeyProperty
  fullName: System.Windows.Automation.AutomationElement.AccessKeyProperty
- uid: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AsyncContentLoadedEvent
  nameWithType: AutomationElement.AsyncContentLoadedEvent
  fullName: System.Windows.Automation.AutomationElement.AsyncContentLoadedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationFocusChangedEvent
  nameWithType: AutomationElement.AutomationFocusChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationFocusChangedEvent
- uid: System.Windows.Automation.AutomationElement.AutomationIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationIdProperty
  nameWithType: AutomationElement.AutomationIdProperty
  fullName: System.Windows.Automation.AutomationElement.AutomationIdProperty
- uid: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: AutomationPropertyChangedEvent
  nameWithType: AutomationElement.AutomationPropertyChangedEvent
  fullName: System.Windows.Automation.AutomationElement.AutomationPropertyChangedEvent
- uid: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: BoundingRectangleProperty
  nameWithType: AutomationElement.BoundingRectangleProperty
  fullName: System.Windows.Automation.AutomationElement.BoundingRectangleProperty
- uid: System.Windows.Automation.AutomationElement.Cached
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
  fullName: System.Windows.Automation.AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.AutomationElementInformation
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement+AutomationElementInformation
  nameWithType: AutomationElement+AutomationElementInformation
  fullName: System.Windows.Automation.AutomationElement+AutomationElementInformation
- uid: System.Windows.Automation.AutomationElement.CachedChildren
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
  fullName: System.Windows.Automation.AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElementCollection
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElementCollection
  nameWithType: AutomationElementCollection
  fullName: System.Windows.Automation.AutomationElementCollection
- uid: System.Windows.Automation.AutomationElement.CachedParent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
  fullName: System.Windows.Automation.AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationElement
  nameWithType: AutomationElement
  fullName: System.Windows.Automation.AutomationElement
- uid: System.Windows.Automation.AutomationElement.ClassNameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClassNameProperty
  nameWithType: AutomationElement.ClassNameProperty
  fullName: System.Windows.Automation.AutomationElement.ClassNameProperty
- uid: System.Windows.Automation.AutomationElement.ClickablePointProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ClickablePointProperty
  nameWithType: AutomationElement.ClickablePointProperty
  fullName: System.Windows.Automation.AutomationElement.ClickablePointProperty
- uid: System.Windows.Automation.AutomationElement.ControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ControlTypeProperty
  nameWithType: AutomationElement.ControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.CultureProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CultureProperty
  nameWithType: AutomationElement.CultureProperty
  fullName: System.Windows.Automation.AutomationElement.CultureProperty
- uid: System.Windows.Automation.AutomationElement.Current
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
  fullName: System.Windows.Automation.AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals(System.Object)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals(Object)
  nameWithType: AutomationElement.Equals(Object)
  fullName: System.Windows.Automation.AutomationElement.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.AutomationElement.Finalize
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize()
  nameWithType: AutomationElement.Finalize()
  fullName: System.Windows.Automation.AutomationElement.Finalize()
- uid: System.Windows.Automation.AutomationElement.FindAll(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll(TreeScope,Condition)
  nameWithType: AutomationElement.FindAll(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindAll(TreeScope,Condition)
- uid: System.Windows.Automation.TreeScope
  parent: System.Windows.Automation
  isExternal: false
  name: TreeScope
  nameWithType: TreeScope
  fullName: System.Windows.Automation.TreeScope
- uid: System.Windows.Automation.Condition
  parent: System.Windows.Automation
  isExternal: false
  name: Condition
  nameWithType: Condition
  fullName: System.Windows.Automation.Condition
- uid: System.Windows.Automation.AutomationElement.FindFirst(System.Windows.Automation.TreeScope,System.Windows.Automation.Condition)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst(TreeScope,Condition)
  nameWithType: AutomationElement.FindFirst(TreeScope,Condition)
  fullName: System.Windows.Automation.AutomationElement.FindFirst(TreeScope,Condition)
- uid: System.Windows.Automation.AutomationElement.FocusedElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
  fullName: System.Windows.Automation.AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FrameworkIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FrameworkIdProperty
  nameWithType: AutomationElement.FrameworkIdProperty
  fullName: System.Windows.Automation.AutomationElement.FrameworkIdProperty
- uid: System.Windows.Automation.AutomationElement.FromHandle(System.IntPtr)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: AutomationElement.FromHandle(IntPtr)
  fullName: System.Windows.Automation.AutomationElement.FromHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider(System.Windows.Automation.Provider.IRawElementProviderSimple)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider(IRawElementProviderSimple)
  nameWithType: AutomationElement.FromLocalProvider(IRawElementProviderSimple)
  fullName: System.Windows.Automation.AutomationElement.FromLocalProvider(IRawElementProviderSimple)
- uid: System.Windows.Automation.Provider.IRawElementProviderSimple
  parent: System.Windows.Automation.Provider
  isExternal: false
  name: IRawElementProviderSimple
  nameWithType: IRawElementProviderSimple
  fullName: System.Windows.Automation.Provider.IRawElementProviderSimple
- uid: System.Windows.Automation.AutomationElement.FromPoint(System.Windows.Point)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint(Point)
  nameWithType: AutomationElement.FromPoint(Point)
  fullName: System.Windows.Automation.AutomationElement.FromPoint(Point)
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCachedPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCachedPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint()
  nameWithType: AutomationElement.GetClickablePoint()
  fullName: System.Windows.Automation.AutomationElement.GetClickablePoint()
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern(System.Windows.Automation.AutomationPattern)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern(AutomationPattern)
  nameWithType: AutomationElement.GetCurrentPattern(AutomationPattern)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPattern(AutomationPattern)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty)
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(System.Windows.Automation.AutomationProperty,System.Boolean)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue(AutomationProperty,Boolean)
  nameWithType: AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
  fullName: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue(AutomationProperty,Boolean)
- uid: System.Windows.Automation.AutomationElement.GetHashCode
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode()
  nameWithType: AutomationElement.GetHashCode()
  fullName: System.Windows.Automation.AutomationElement.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId()
  nameWithType: AutomationElement.GetRuntimeId()
  fullName: System.Windows.Automation.AutomationElement.GetRuntimeId()
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns()
  nameWithType: AutomationElement.GetSupportedPatterns()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedPatterns()
- uid: System.Windows.Automation.AutomationPattern[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationPattern
    name: AutomationPattern
    nameWithType: AutomationPattern
    fullName: AutomationPattern[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties()
  nameWithType: AutomationElement.GetSupportedProperties()
  fullName: System.Windows.Automation.AutomationElement.GetSupportedProperties()
- uid: System.Windows.Automation.AutomationProperty[]
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationProperty
  nameWithType: AutomationProperty
  fullName: System.Windows.Automation.AutomationProperty[]
  spec.csharp:
  - uid: System.Windows.Automation.AutomationProperty
    name: AutomationProperty
    nameWithType: AutomationProperty
    fullName: AutomationProperty[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache(System.Windows.Automation.CacheRequest)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache(CacheRequest)
  nameWithType: AutomationElement.GetUpdatedCache(CacheRequest)
  fullName: System.Windows.Automation.AutomationElement.GetUpdatedCache(CacheRequest)
- uid: System.Windows.Automation.CacheRequest
  parent: System.Windows.Automation
  isExternal: false
  name: CacheRequest
  nameWithType: CacheRequest
  fullName: System.Windows.Automation.CacheRequest
- uid: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HasKeyboardFocusProperty
  nameWithType: AutomationElement.HasKeyboardFocusProperty
  fullName: System.Windows.Automation.AutomationElement.HasKeyboardFocusProperty
- uid: System.Windows.Automation.AutomationElement.HelpTextProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: HelpTextProperty
  nameWithType: AutomationElement.HelpTextProperty
  fullName: System.Windows.Automation.AutomationElement.HelpTextProperty
- uid: System.Windows.Automation.AutomationElement.IsContentElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsContentElementProperty
  nameWithType: AutomationElement.IsContentElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsContentElementProperty
- uid: System.Windows.Automation.AutomationElement.IsControlElementProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsControlElementProperty
  nameWithType: AutomationElement.IsControlElementProperty
  fullName: System.Windows.Automation.AutomationElement.IsControlElementProperty
- uid: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsDockPatternAvailableProperty
  nameWithType: AutomationElement.IsDockPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsDockPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsEnabledProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsEnabledProperty
  nameWithType: AutomationElement.IsEnabledProperty
  fullName: System.Windows.Automation.AutomationElement.IsEnabledProperty
- uid: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsExpandCollapsePatternAvailableProperty
  nameWithType: AutomationElement.IsExpandCollapsePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsExpandCollapsePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridItemPatternAvailableProperty
  nameWithType: AutomationElement.IsGridItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsGridPatternAvailableProperty
  nameWithType: AutomationElement.IsGridPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsGridPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsInvokePatternAvailableProperty
  nameWithType: AutomationElement.IsInvokePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsInvokePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsItemContainerPatternAvailableProperty
  nameWithType: AutomationElement.IsItemContainerPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsItemContainerPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsKeyboardFocusableProperty
  nameWithType: AutomationElement.IsKeyboardFocusableProperty
  fullName: System.Windows.Automation.AutomationElement.IsKeyboardFocusableProperty
- uid: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsMultipleViewPatternAvailableProperty
  nameWithType: AutomationElement.IsMultipleViewPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsMultipleViewPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsOffscreenProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsOffscreenProperty
  nameWithType: AutomationElement.IsOffscreenProperty
  fullName: System.Windows.Automation.AutomationElement.IsOffscreenProperty
- uid: System.Windows.Automation.AutomationElement.IsPasswordProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsPasswordProperty
  nameWithType: AutomationElement.IsPasswordProperty
  fullName: System.Windows.Automation.AutomationElement.IsPasswordProperty
- uid: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRangeValuePatternAvailableProperty
  nameWithType: AutomationElement.IsRangeValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsRangeValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsRequiredForFormProperty
  nameWithType: AutomationElement.IsRequiredForFormProperty
  fullName: System.Windows.Automation.AutomationElement.IsRequiredForFormProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollItemPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsScrollPatternAvailableProperty
  nameWithType: AutomationElement.IsScrollPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsScrollPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionItemPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSelectionPatternAvailableProperty
  nameWithType: AutomationElement.IsSelectionPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSelectionPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsSynchronizedInputPatternAvailableProperty
  nameWithType: AutomationElement.IsSynchronizedInputPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsSynchronizedInputPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTableItemPatternAvailableProperty
  nameWithType: AutomationElement.IsTableItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTableItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTablePatternAvailableProperty
  nameWithType: AutomationElement.IsTablePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTablePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTextPatternAvailableProperty
  nameWithType: AutomationElement.IsTextPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTextPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTogglePatternAvailableProperty
  nameWithType: AutomationElement.IsTogglePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTogglePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsTransformPatternAvailableProperty
  nameWithType: AutomationElement.IsTransformPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsTransformPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsValuePatternAvailableProperty
  nameWithType: AutomationElement.IsValuePatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsValuePatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsVirtualizedItemPatternAvailableProperty
  nameWithType: AutomationElement.IsVirtualizedItemPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsVirtualizedItemPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: IsWindowPatternAvailableProperty
  nameWithType: AutomationElement.IsWindowPatternAvailableProperty
  fullName: System.Windows.Automation.AutomationElement.IsWindowPatternAvailableProperty
- uid: System.Windows.Automation.AutomationElement.ItemStatusProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemStatusProperty
  nameWithType: AutomationElement.ItemStatusProperty
  fullName: System.Windows.Automation.AutomationElement.ItemStatusProperty
- uid: System.Windows.Automation.AutomationElement.ItemTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ItemTypeProperty
  nameWithType: AutomationElement.ItemTypeProperty
  fullName: System.Windows.Automation.AutomationElement.ItemTypeProperty
- uid: System.Windows.Automation.AutomationElement.LabeledByProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LabeledByProperty
  nameWithType: AutomationElement.LabeledByProperty
  fullName: System.Windows.Automation.AutomationElement.LabeledByProperty
- uid: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LayoutInvalidatedEvent
  nameWithType: AutomationElement.LayoutInvalidatedEvent
  fullName: System.Windows.Automation.AutomationElement.LayoutInvalidatedEvent
- uid: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: LocalizedControlTypeProperty
  nameWithType: AutomationElement.LocalizedControlTypeProperty
  fullName: System.Windows.Automation.AutomationElement.LocalizedControlTypeProperty
- uid: System.Windows.Automation.AutomationElement.MenuClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuClosedEvent
  nameWithType: AutomationElement.MenuClosedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuClosedEvent
- uid: System.Windows.Automation.AutomationElement.MenuOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: MenuOpenedEvent
  nameWithType: AutomationElement.MenuOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.MenuOpenedEvent
- uid: System.Windows.Automation.AutomationElement.NameProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NameProperty
  nameWithType: AutomationElement.NameProperty
  fullName: System.Windows.Automation.AutomationElement.NameProperty
- uid: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NativeWindowHandleProperty
  nameWithType: AutomationElement.NativeWindowHandleProperty
  fullName: System.Windows.Automation.AutomationElement.NativeWindowHandleProperty
- uid: System.Windows.Automation.AutomationElement.NotSupported
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: NotSupported
  nameWithType: AutomationElement.NotSupported
  fullName: System.Windows.Automation.AutomationElement.NotSupported
- uid: System.Windows.Automation.AutomationElement.op_Equality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Equality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Equality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.op_Inequality(System.Windows.Automation.AutomationElement,System.Windows.Automation.AutomationElement)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality(AutomationElement,AutomationElement)
  nameWithType: AutomationElement.op_Inequality(AutomationElement,AutomationElement)
  fullName: System.Windows.Automation.AutomationElement.op_Inequality(AutomationElement,AutomationElement)
- uid: System.Windows.Automation.AutomationElement.OrientationProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: OrientationProperty
  nameWithType: AutomationElement.OrientationProperty
  fullName: System.Windows.Automation.AutomationElement.OrientationProperty
- uid: System.Windows.Automation.AutomationElement.ProcessIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ProcessIdProperty
  nameWithType: AutomationElement.ProcessIdProperty
  fullName: System.Windows.Automation.AutomationElement.ProcessIdProperty
- uid: System.Windows.Automation.AutomationElement.RootElement
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
  fullName: System.Windows.Automation.AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.RuntimeIdProperty
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RuntimeIdProperty
  nameWithType: AutomationElement.RuntimeIdProperty
  fullName: System.Windows.Automation.AutomationElement.RuntimeIdProperty
- uid: System.Windows.Automation.AutomationElement.SetFocus
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus()
  nameWithType: AutomationElement.SetFocus()
  fullName: System.Windows.Automation.AutomationElement.SetFocus()
- uid: System.Windows.Automation.AutomationElement.StructureChangedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: StructureChangedEvent
  nameWithType: AutomationElement.StructureChangedEvent
  fullName: System.Windows.Automation.AutomationElement.StructureChangedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipClosedEvent
  nameWithType: AutomationElement.ToolTipClosedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipClosedEvent
- uid: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: ToolTipOpenedEvent
  nameWithType: AutomationElement.ToolTipOpenedEvent
  fullName: System.Windows.Automation.AutomationElement.ToolTipOpenedEvent
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCachedPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint(System.Windows.Point@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint(Point)
  nameWithType: AutomationElement.TryGetClickablePoint(Point)
  fullName: System.Windows.Automation.AutomationElement.TryGetClickablePoint(Point)
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(System.Windows.Automation.AutomationPattern,System.Object@)
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern(AutomationPattern,Object)
  nameWithType: AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
  fullName: System.Windows.Automation.AutomationElement.TryGetCurrentPattern(AutomationPattern,Object)
- uid: System.Windows.Automation.AutomationElement.Cached*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Cached
  nameWithType: AutomationElement.Cached
- uid: System.Windows.Automation.AutomationElement.CachedChildren*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedChildren
  nameWithType: AutomationElement.CachedChildren
- uid: System.Windows.Automation.AutomationElement.CachedParent*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: CachedParent
  nameWithType: AutomationElement.CachedParent
- uid: System.Windows.Automation.AutomationElement.Current*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Current
  nameWithType: AutomationElement.Current
- uid: System.Windows.Automation.AutomationElement.Equals*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Equals
  nameWithType: AutomationElement.Equals
- uid: System.Windows.Automation.AutomationElement.Finalize*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: Finalize
  nameWithType: AutomationElement.Finalize
- uid: System.Windows.Automation.AutomationElement.FindAll*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindAll
  nameWithType: AutomationElement.FindAll
- uid: System.Windows.Automation.AutomationElement.FindFirst*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FindFirst
  nameWithType: AutomationElement.FindFirst
- uid: System.Windows.Automation.AutomationElement.FocusedElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FocusedElement
  nameWithType: AutomationElement.FocusedElement
- uid: System.Windows.Automation.AutomationElement.FromHandle*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromHandle
  nameWithType: AutomationElement.FromHandle
- uid: System.Windows.Automation.AutomationElement.FromLocalProvider*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromLocalProvider
  nameWithType: AutomationElement.FromLocalProvider
- uid: System.Windows.Automation.AutomationElement.FromPoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: FromPoint
  nameWithType: AutomationElement.FromPoint
- uid: System.Windows.Automation.AutomationElement.GetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPattern
  nameWithType: AutomationElement.GetCachedPattern
- uid: System.Windows.Automation.AutomationElement.GetCachedPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCachedPropertyValue
  nameWithType: AutomationElement.GetCachedPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetClickablePoint
  nameWithType: AutomationElement.GetClickablePoint
- uid: System.Windows.Automation.AutomationElement.GetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPattern
  nameWithType: AutomationElement.GetCurrentPattern
- uid: System.Windows.Automation.AutomationElement.GetCurrentPropertyValue*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetCurrentPropertyValue
  nameWithType: AutomationElement.GetCurrentPropertyValue
- uid: System.Windows.Automation.AutomationElement.GetHashCode*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetHashCode
  nameWithType: AutomationElement.GetHashCode
- uid: System.Windows.Automation.AutomationElement.GetRuntimeId*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetRuntimeId
  nameWithType: AutomationElement.GetRuntimeId
- uid: System.Windows.Automation.AutomationElement.GetSupportedPatterns*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedPatterns
  nameWithType: AutomationElement.GetSupportedPatterns
- uid: System.Windows.Automation.AutomationElement.GetSupportedProperties*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetSupportedProperties
  nameWithType: AutomationElement.GetSupportedProperties
- uid: System.Windows.Automation.AutomationElement.GetUpdatedCache*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: GetUpdatedCache
  nameWithType: AutomationElement.GetUpdatedCache
- uid: System.Windows.Automation.AutomationElement.op_Equality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Equality
  nameWithType: AutomationElement.op_Equality
- uid: System.Windows.Automation.AutomationElement.op_Inequality*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: op_Inequality
  nameWithType: AutomationElement.op_Inequality
- uid: System.Windows.Automation.AutomationElement.RootElement*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: RootElement
  nameWithType: AutomationElement.RootElement
- uid: System.Windows.Automation.AutomationElement.SetFocus*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: SetFocus
  nameWithType: AutomationElement.SetFocus
- uid: System.Windows.Automation.AutomationElement.TryGetCachedPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCachedPattern
  nameWithType: AutomationElement.TryGetCachedPattern
- uid: System.Windows.Automation.AutomationElement.TryGetClickablePoint*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetClickablePoint
  nameWithType: AutomationElement.TryGetClickablePoint
- uid: System.Windows.Automation.AutomationElement.TryGetCurrentPattern*
  parent: System.Windows.Automation.AutomationElement
  isExternal: false
  name: TryGetCurrentPattern
  nameWithType: AutomationElement.TryGetCurrentPattern
