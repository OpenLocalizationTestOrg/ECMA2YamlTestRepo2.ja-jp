### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.ApplicationDeployment
  id: ApplicationDeployment
  children:
  - System.Deployment.Application.ApplicationDeployment.ActivationUri
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  - System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  - System.Deployment.Application.ApplicationDeployment.CurrentVersion
  - System.Deployment.Application.ApplicationDeployment.DataDirectory
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  - System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  - System.Deployment.Application.ApplicationDeployment.IsFirstRun
  - System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  - System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  - System.Deployment.Application.ApplicationDeployment.Update
  - System.Deployment.Application.ApplicationDeployment.UpdateAsync
  - System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  - System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  - System.Deployment.Application.ApplicationDeployment.UpdateLocation
  - System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  langs:
  - csharp
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
  type: Class
  summary: "プログラムでは、現在の展開の更新をサポートし、ファイルのオンデマンドのダウンロードを処理します。 このクラスは継承できません。"
  remarks: "構成することができます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新プログラムを確認し、それらを使用して自動的にインストールするアプリケーション、`subscription`配置マニフェストの要素。 一部のアプリケーションには、その更新プログラムをより細かく制御ただし、必要があります。 プログラムでは、必要な更新プログラムをインストールし、必要に応じて省略可能な更新プログラムのインストールをユーザーに要求することがあります。 配置マニフェストでサブスクリプションの更新をオフにして、アプリケーションのポリシーの更新を完全に制御を実行できます。 これにより ApplicationDeployment と組み合わせて自動サブスクリプションを使用する代わりに、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]がリリース後すぐに重要な更新プログラムをダウンロードするアプリケーションを定期的には使用 ApplicationDeployment を更新します。       配置に使用して、使用可能な更新プログラムがあるかどうかをテストすることができます、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>または<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>メソッドです後者の方法が発生し、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>正常終了時にイベント。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> 。 <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>そのバージョン番号と現在のユーザーの必要な更新プログラムであるかどうかなど、更新プログラムに関する重要な情報を返します。</xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> 更新プログラムがある場合を使用してインストールできます<xref:System.Deployment.Application.ApplicationDeployment.Update%2A>または<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; 後者のメソッド、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>、更新プログラムのインストールが完了した後のイベント</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted></xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.Update%2A>。 大きな更新プログラムを介して進行状況の通知を受け取ることができます、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>と<xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>イベント内の情報を使用して<xref:System.ComponentModel.ProgressChangedEventArgs>ダウンロードの状態のユーザーに通知します</xref:System.ComponentModel.ProgressChangedEventArgs></xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged></xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>。       また、大きなファイルや必要に応じてアセンブリをダウンロードするのに ApplicationDeployment を使用することができます。 これらのファイルは、インストール中にダウンロードされないように、デプロイのアプリケーション マニフェスト内で&quot;optional&quot;としてマークする必要があります。 使用して、アプリケーションの期間内に任意の時点でファイルをダウンロードすることができます、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>または<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>。 <xref:System.AppDomain.AssemblyResolve><xref:System.AppDomain>クラス</xref:System.AppDomain>のイベント</xref:System.AppDomain.AssemblyResolve>のイベント ハンドラーを指定することによってメモリに読み込まれる前に、アセンブリをダウンロードすることができます。 詳細については、次を参照してください。[チュートリアル: ClickOnce 配置 API を使用して、デザイナーで必要に応じてアセンブリをダウンロードする](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > を更新する場合、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション、アプリケーションの実行中に、ユーザーは表示されません、更新プログラム<xref:System.Windows.Forms.Application.Restart%2A><xref:System.Windows.Forms.Application>アプリケーションの現在の実行中のインスタンスを閉じるし、それをすぐに再起動は、</xref:System.Windows.Forms.Application>メソッド</xref:System.Windows.Forms.Application.Restart%2A>が呼び出されるまで       ApplicationDeployment にパブリック コンス トラクターがありません。内のクラスのインスタンスを取得する、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションを通じて、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>プロパティ</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>。 使用する、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>プロパティを現在のアプリケーションがあることを確認、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>。       更新プログラムをチェックし、新しいを使用して非同期的に更新されたファイルをダウンロードする ApplicationDeployment をサポートしている[- イベント ベースの非同期パターンの概要](~/add/includes/ajax-current-ext-md.md)クラスのイベントとして完了コールバックを公開します。 ApplicationDeployment は、開始し、スレッドを管理し、アプリケーションに、正しい UI スレッドでコールバックします。 このクラスを使って、ユーザーは更新プログラムのインストール中の作業を継続できるように、アプリケーションをロックすることがなく更新できます。 ユーザーは、更新が行われるときに、すべての作業を停止する必要がある場合、は、代わりに、同期メソッドを使用することを検討します。      > [!NOTE] > 非同期更新を実行するには、アプリケーションが、両方をインポートする必要があります、<xref:System.Deployment.Application>と<xref:System.ComponentModel>名前空間</xref:System.ComponentModel></xref:System.Deployment.Application>。"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously. This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public sealed class ApplicationDeployment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  id: ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "アプリケーションの配置マニフェストの起動に使用する URL を取得します。"
  remarks: "このプロパティは、完全に信頼できると部分的に信頼されたアプリケーションの両方で機能します。"
  example:
  - "The following code shows how to retrieve the URL parameters by using ActivationUri, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[ClickOnceQueryString#1](~/add/codesnippet/csharp/ClickOnceQueryString/Form1.cs#1)]\n [!code-vb[ClickOnceQueryString#1](~/add/codesnippet/visualbasic/ClickOnceQueryStringVB/Form1.vb#1)]"
  syntax:
    content: public Uri ActivationUri { get; }
    return:
      type: System.Uri
      description: "長さ&0; の文字列、`TrustUrlParameters`は配置マニフェストのプロパティが<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、または UNC を開くには、展開が提供されているか、ローカルで開いたがします。 それ以外の場合、戻り値は、すべてのパラメーターを含む、アプリケーションの起動に使用される完全 URL です。"
  overload: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  id: CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "同じ操作を実行<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>、利用可能な更新に関する拡張情報が返されます</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>。"
  remarks: "CheckForDetailedUpdate メソッドにより、同期呼び出し元が非同期呼び出し元が、<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>クラス</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>を使用して取得する拡張情報を入手"
  example:
  - "The following code example uses CheckForDetailedUpdate to retrieve the information about the latest update. If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.  \n  \n [!code-cs[ClickOnceAPI#7](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#7)]\n [!code-cpp[ClickOnceAPI#7](~/add/codesnippet/cpp/m-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#7](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#7)]"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();
    parameters: []
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref>使用可能な更新します。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のアプリケーションが、更新をサポートするために構成されていないか、または既に進行中の別の更新チェック操作があります。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "配置マニフェストをダウンロードすることはできません。 この例外は、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>のプロパティ、 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref>イベント</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "配置マニフェストが壊れています。 このアプリケーションをユーザーに展開する前に、アプリケーションのマニフェストを再生成します。 この例外は、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>のプロパティ、 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref>イベント</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  id: CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "同じ操作を実行<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>、利用可能な更新に関する拡張情報が返されます</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>。"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>更新プログラムをサイレント モードで適用されます、およびダイアログ ボックスは表示されません。"
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref>使用可能な更新します。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  id: CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "チェック<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>を新しい更新プログラムが利用できるかどうかを判断します</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>。"
  remarks: "CheckForUpdate メソッド<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>。</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>で見つかった、配置マニフェストで指定されたバージョンで、現在インストールされている展開のバージョンを比較します。 返します、サーバー上のバージョンがインストールされているバージョンから異なる`true`です。       このメソッドは、チェックが完了するまでブロックします。 非同期的に更新プログラムを確認するには、使用、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>メソッド代わりにします</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>。      > [!NOTE] > 場合 CheckForUpdate は更新プログラムがあるしをインストールしないように、ユーザーが選択したことを検出[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新プログラムが、次回アプリケーションを実行するユーザーを促します。 このプロンプトを無効にする方法はありません。 (アプリケーションが必要な更新プログラムが場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]メッセージを表示せずにインストールされます)。"
  example:
  - "The following code example checks for an application update; if one is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#5](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#5)]\n [!code-cpp[ClickOnceAPI#5](~/add/codesnippet/cpp/m-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#5](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#5)]"
  syntax:
    content: public bool CheckForUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しい更新プログラムがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新が進行中は既に CheckForUpdate メソッドを呼び出す場合は、すぐにこの例外をスローします。'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "配置マニフェストをダウンロードすることはできません。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "配置マニフェストが壊れています。 この問題を解決するアプリケーションを再配置する必要があります。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  id: CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "チェック<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>を新しい更新プログラムが利用できるかどうかを判断します</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>。"
  syntax:
    content: public bool CheckForUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>更新プログラムをサイレント モードで適用されます、およびダイアログ ボックスは表示されません。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しい更新プログラムがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  id: CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "チェック<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>新しい更新プログラムが利用できるかどうかを決定するには、非同期的にします</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>。"
  remarks: "CheckForUpdateAsync は直ちに返され、更新されたアプリケーションをダウンロードするための別のスレッドを開始します。 場合は、メソッドは、完了するかが取り消されたが発生、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>イベント</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>。 使用することができます<xref:System.ComponentModel.AsyncCompletedEventArgs>操作が取り消されたかどうか、または更新中に例外が発生したかどうかを判断するには、このイベント ハンドラーでします</xref:System.ComponentModel.AsyncCompletedEventArgs>。       <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>。</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>を呼び出すことにより非同期更新をキャンセルすることができます。      > [!NOTE] > 場合<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>更新プログラムがあるしをインストールしないように、ユーザーが選択したことを検出[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新プログラムが、次回アプリケーションを実行するユーザーを促します</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>。 このプロンプトを無効にする方法はありません。 (アプリケーションが必要な更新プログラムが場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]メッセージを表示せずにインストールされます)。"
  example:
  - "The following example checks for an update asynchronously, and installs the update if one exists.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void CheckForUpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]更新が進行中は既に CheckForUpdateAsync メソッドを呼び出す場合は、すぐにこの例外をスローします。'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "配置マニフェストをダウンロードすることはできません。 この例外が表示されます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>のプロパティ、 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref>イベント</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "配置マニフェストが壊れています。 この問題を解決するアプリケーションを再配置する必要があります。 この例外が表示されます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>のプロパティ、 <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref>イベント</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  id: CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "非同期更新チェックをキャンセルします。"
  remarks: "このメソッドを使用して開始更新チェックを [キャンセル] を使用して、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>。       このメソッドは可能性のある既に進行中でバック グラウンドの更新をキャンセルしていないサブスクリプションの一部として更新プログラムが開始されたなどです。 サブスクリプションの詳細については、次を参照してください。 [ClickOnce の更新方法の選択](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void CheckForUpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  id: CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "発生したときに<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>が完了しました</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>。"
  remarks: "<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>クラスところ、他のもの、更新プログラムのバージョン、大きさ、更新プログラムがおよび、使用可能な更新プログラムが必須またはオプションかどうかの間</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>。"
  example:
  - "The following code example uses CheckForUpdateCompleted to decide whether to ask the user to install the available application update. If the update is a mandatory upgrade, the CheckForUpdateCompleted event handler does not prompt the user. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;
    return:
      type: System.Deployment.Application.CheckForUpdateCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  id: CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "進行状況の更新が 利用可能なときに発生、<xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>呼び出します</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>。"
  remarks: "CheckForUpdateProgressChanged、ダウンロードの状態をレポート アプリケーションの配置マニフェストします。 低速ネットワーク接続経由で展開をダウンロードするユーザーにとって重要な情報を指定できます。"
  example:
  - "The following code example uses the CheckForUpdateProgressChanged event to inform the user how much of the deployment manifest is left to download. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/d621aa2f-b92e-4e9d-b698-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  id: CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "現在を返して<xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;></xref>この展開します。"
  remarks: "インスタンスを作成できない<xref:System.Deployment.Application.ApplicationDeployment>直接アプリケーション内で取得する必要が有効なインスタンス、キャッシュ プロパティを使用します</xref:System.Deployment.Application.ApplicationDeployment>。       キャッシュの静的プロパティを使用して配置されたアプリケーション内からのみ有効[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]です。 非からこのプロパティを呼び出そうとすると[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション例外がスローされます。 使用して展開する可能性がありますいないまたは可能性のあるアプリケーションを開発している場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]を使用して、<xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>現在のプログラムがあるかどうかをテストするプロパティ、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>。"
  example:
  - "The following code example retrieves CurrentDeployment and checks to determine whether the application has been updated in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_12_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "現在の配置。"
  overload: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "この静的プロパティ以外から呼び出してしようとしています。[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションです。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  id: CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "アプリケーションの現在の実行中のインスタンスの配置のバージョンを取得します。"
  remarks: "CurrentVersion、<xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>新しい更新プログラムがインストールされているが、 <xref:System.Windows.Forms.Application.Restart%2A>。</xref:System.Windows.Forms.Application.Restart%2A>がされていないと呼ばれる場合</xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>とは異なります 配置マニフェストは、自動更新を実行するように構成は、これら&2; つのかどうかは、アプリケーションを再起動する必要がありますを決定する値を比較できます。"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_7_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public Version CurrentVersion { get; }
    return:
      type: System.Version
      description: "現在の配置のバージョン。"
  overload: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  id: DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "パスを取得、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]データ ディレクトリ。"
  syntax:
    content: public string DataDirectory { get; }
    return:
      type: System.String
      description: "ローカル ディスク上のアプリケーションのデータ ディレクトリへのパスを含む文字列。"
  overload: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  id: DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "一連の要求時に省略可能なファイルをダウンロードします。"
  remarks: "[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション、初期化または更新中に、アプリケーション マニフェストで&quot;optional&quot;のマークを付けたファイルはダウンロードされません。 DownloadFileGroup メソッドを使用すると、消費しませんネットワーク リソースとディスク領域が、ユーザーで必要なことを確認できるまでように、すべての要求に応じて、名前付きグループに属するファイルをダウンロードします。 たとえば、特定のユーザーは、他のユーザー呼び出さない可能性がありますが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。       で DownloadFileGroup をダウンロードしているアセンブリを使用するには、 <xref:System.AppDomain.AssemblyResolve> <xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>イベント</xref:System.AppDomain.AssemblyResolve>をイベント リスナーをアタッチします。 例については、次を参照してください。 =[チュートリアル: ClickOnce 配置 API を使用して、デザイナーで必要に応じてアセンブリをダウンロードする](~/add/includes/ajax-current-ext-md.md)です。       すべてのファイルにダウンロードされます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション キャッシュがアプリケーションの現在のバージョンにします。 たとえば、アプリケーションがファイル グループをダウンロードした後で、ユーザーがそのアプリケーションの新しいバージョンをインストールしても、後で、アプリケーションの以前のバージョンに戻ることがします。 この例では、以前のバージョンには、最初にダウンロードしてファイルのコピーがあります。 データ ファイルへのアクセスの詳細については、次を参照してください。[ローカルへのアクセスと ClickOnce アプリケーションでのリモート データ](~/add/includes/ajax-current-ext-md.md)です。       DownloadFileGroup は機能、部分的に信頼されたアプリケーションでは、いずれかで[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]で実行されるアプリケーションがアクセス許可を制限します。 ただし、動的アセンブリをロードしようとする場合、アプリケーションに完全な信頼が必要です。       データ ファイルのオンデマンドのダウンロードは現在サポートされていません。       アプリケーションはユーザー DownloadFileGroup メソッドが戻るまでの入力に応答できません。 使用して、ユーザーのワークフローに割り込むことがなくファイルをダウンロードする必要がある場合、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>メソッド代わりにします</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。       ファイル名だけで&1; つのファイルをダウンロードすることはできません。 1 つのファイルをダウンロードするには、名前に割り当てるグループで、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]展開し、このメソッドを使用して、グループをダウンロードします。"
  example:
  - "The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.  \n  \n [!code-cs[ClickOnceOnDemandCmdLine#2](~/add/codesnippet/csharp/6f3e5fcc-9a7b-4ff6-a5e4-_1.cs)]"
  syntax:
    content: public void DownloadFileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "ダウンロードするファイルの名前付きグループです。 すべてのファイルが&quot;optional&quot;でマークされている、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション グループ名が必要です。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>パラメーターが null または長さが&0; です。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  id: DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "バック グラウンドで省略可能なファイルのセットをオンデマンドでダウンロードされます。"
  remarks: "[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション、初期化または更新中に、アプリケーション マニフェストで&quot;optional&quot;のマークを付けたファイルはダウンロードされません。 DownloadFileGroupAsync メソッドを使用すると、消費しませんネットワーク リソースとディスク領域が、ユーザーで必要なことを確認できるまでように、すべての要求に応じて、名前付きグループに属するファイルをダウンロードします。 この方法は、静的ファイルだけでなく、アプリケーションが必要としないアセンブリについても動作します。 たとえば、特定のユーザーは、他のユーザー呼び出さない可能性がありますが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。       必要に応じてアセンブリをダウンロードするには、するには、 <xref:System.AppDomain.AssemblyResolve> <xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>イベント</xref:System.AppDomain.AssemblyResolve>をイベント リスナーをアタッチします。 例については、次を参照してください。[チュートリアル: ClickOnce 配置 API で必要に応じてアセンブリをダウンロードする](~/add/includes/ajax-current-ext-md.md)です。       すべてのアセンブリ、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション キャッシュします。       すべての静的ファイルにダウンロードされます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションのデータ ディレクトリがアプリケーションの現在のバージョンにします。 たとえば、アプリケーションがファイル グループをダウンロードした後で、ユーザーがそのアプリケーションの新しいバージョンをインストールしても、後で、アプリケーションの以前のバージョンに戻ることがします。 この例では、以前のバージョンには、最初にダウンロードしてファイルのコピーがあります。 静的ファイルへのアクセスの詳細については、次を参照してください。[ローカルへのアクセスと ClickOnce アプリケーションでのリモート データ](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>を同時に使用する複数のファイル グループをダウンロードすることができます。 使用してそれらの間に識別できます、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>のプロパティ、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>に渡されるクラス、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>イベント</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged></xref:System.Deployment.Application.DeploymentProgressChangedEventArgs></xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>。 使用することがより複雑な状態を渡す必要がある場合<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>を渡す、`state`オブジェクト</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>いずれかでは、部分的に信頼されたアプリケーションで、動作[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]で実行されるアプリケーションがアクセス許可を制限します。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> ただし、動的アセンブリをロードしようとしている場合、アプリケーションに完全な信頼が必要です。       データ ファイルのオンデマンドのダウンロードは現在サポートされていません。       ファイル名だけで&1; つのファイルをダウンロードすることはできません。 1 つのファイルをダウンロードするには、名前に割り当てるグループで、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]展開し、このメソッドを使用して、グループをダウンロードします。       非同期のダウンロードを取り消す場合に、呼び出し、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>。"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "ダウンロードするファイルの名前付きグループです。 すべてのファイルが&quot;optional&quot;でマークされている、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション グループ名が必要です。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>パラメーターが null または長さが&0; です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "2 つ以上のダウンロードを開始することはできません<code> groupName </code>一度にです。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  id: DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "バック グラウンドで省略可能なファイルのセットをオンデマンドでダウンロードし、イベント コールバックにアプリケーションの状態の一部を渡します。"
  remarks: "[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション、初期化または更新中に、アプリケーション マニフェストで&quot;optional&quot;のマークを付けたファイルはダウンロードされません。 使用することができます、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>を消費しませんネットワーク リソースとディスク領域が、ユーザーで必要なことを確認できるまでように、すべての要求に応じて、名前付きグループに属するファイルをダウンロードするメソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>。 この方法は、静的ファイルだけでなく、アプリケーションが必要としないアセンブリについても動作します。 たとえば、特定のユーザーは、他のユーザー呼び出さない可能性がありますが、日常的に、アプリケーションに含まれるデータ分析パッケージを使用する必要があります。 必要に応じてアセンブリをダウンロードするには、するには、 <xref:System.AppDomain.AssemblyResolve> <xref:System.AppDomain.CurrentDomain%2A>。</xref:System.AppDomain.CurrentDomain%2A>イベント</xref:System.AppDomain.AssemblyResolve>をイベント リスナーをアタッチします。       DownloadFileGroupAsync メソッドを使用して、複数のファイル グループを同時にダウンロードできます。 使用してそれらの間に識別できます、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>のプロパティ、<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>に渡されるクラス、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>イベント</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged></xref:System.Deployment.Application.DeploymentProgressChangedEventArgs></xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>。 渡す DownloadFileGroupAsync を使用するにはより複雑な状態を渡す必要がある場合、`state`オブジェクト。       すべての静的ファイルにダウンロードされます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションのデータ ディレクトリがアプリケーションの現在のバージョンにします。 静的ファイルへのアクセスの詳細については、次を参照してください。[ローカルへのアクセスと ClickOnce アプリケーションでのリモート データ](~/add/includes/ajax-current-ext-md.md)です。 。 たとえば後、アプリケーションがファイル グループをダウンロードし、ユーザー、アプリケーションの新しいバージョンをインストールが、後で、アプリケーションの以前のバージョンに戻ることができます。 この例では、以前のバージョンには、最初にダウンロードしてファイルのコピーがあります。       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>いずれかでは、部分的に信頼されたアプリケーションで、動作[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]で実行されるアプリケーションがアクセス許可を制限します。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> ただし、動的アセンブリをロードしようとしている場合、アプリケーションに完全な信頼が必要です。       データ ファイルのオンデマンドのダウンロードは現在サポートされていません。       非同期のダウンロードを取り消す場合に、呼び出し、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>。"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName, object userState);
    parameters:
    - id: groupName
      type: System.String
      description: "ダウンロードするファイルの名前付きグループです。 すべてのファイルが&quot;optional&quot;でマークされている、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション グループ名が必要です。"
    - id: userState
      type: System.Object
      description: "非同期操作の状態情報を含む任意のオブジェクト。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code>パラメーターが null または長さが&0; です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "2 つ以上のダウンロードを開始することはできません<code> groupName </code>一度にです。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  id: DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "非同期のファイル ダウンロードを取り消します。"
  syntax:
    content: public void DownloadFileGroupAsyncCancel (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "ダウンロードするファイルの名前付きグループです。 すべてのファイルが&quot;optional&quot;でマークされている、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション グループ名が必要です。"
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupName</code>ことはできません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  id: DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "ファイルのダウンロードが完了すると、アプリケーションのメイン スレッドで発生します。"
  remarks: "DownloadFileGroupCompleted イベントは、アプリケーションのメイン スレッドで呼び出されます。 これは、安全にこのコールバック内で直接、アプリケーションの Windows フォーム コントロールを呼び出すスレッドです。       チェック、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>のプロパティ、<xref:System.ComponentModel.AsyncCompletedEventArgs>このコールバックを指定します</xref:System.ComponentModel.AsyncCompletedEventArgs></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。 場合は、このプロパティは`null`、ダウンロードがない場合は成功した`null`、インストールが成功せず、およびを通じてインストール エラーの詳細についてを見つけることができます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/d8c90486-6b41-4c55-b911-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;
    return:
      type: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  id: DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "ステータス情報が<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>。</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>への呼び出しによって開始されたファイルのダウンロード操作で使用できるときに発生します。"
  remarks: "DownloadFileGroupProgressChanged イベントは、アプリケーションのメイン スレッドで呼び出されます。 これは、安全にこのコールバック内で直接、アプリケーションの Windows フォーム コントロールを呼び出すスレッドです。       指定された情報を使用して<xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>をユーザーに進行状況に関する情報を通信するためにします</xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>。"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/dd149587-df74-4c6a-9251-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  id: IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "名前付きファイル グループが、クライアント コンピューターに既にダウンロードされているかどうかを確認します。"
  remarks: "IsFileGroupDownloaded は、セキュリティ確認要求なしに部分的に信頼されたアプリケーションで機能します。       アプリケーションを更新するときに[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]新しいバージョンのデータ ディレクトリに、以前のバージョンからのオンデマンドのデータ ファイルをコピーします。 これらのファイルの新しいバージョンをダウンロードする場合は、以前のバージョンを保持し、新しいバージョンに移動するすべてのデータを削除してください。"
  example:
  - "The following code example downloads all of the files in the `HelpFiles` group to disk.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/ff7c4993-a9b0-4966-b9a0-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public bool IsFileGroupDownloaded (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "ダウンロードするファイルの名前付きグループです。 すべてのファイルが&quot;optional&quot;でマークされている、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーション グループ名が必要です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル グループは既にこのアプリケーションの現在のバージョンのダウンロード済みの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 かどうか、アプリケーションの新しいバージョンがインストールされて、新しいバージョンがない追加、削除、またはファイル グループ内のファイルを変更、IsFileGroupDownloaded 関数<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "<code>groupName</code>アプリケーション マニフェストで定義されているファイル グループではありません。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  id: IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "これは、最初にこのアプリケーションがクライアント コンピューターで実行するかどうかを示す値を取得します。"
  remarks: "手動で呼び出す場合を使用すると、アプリケーションを実行する最初の時間に&1; 回だけ初期化操作を実行する必要があるかどうかを判断できます。       限らないことを手動で呼び出す場合の設定は`true`アプリケーションのこのインスタンスがユーザーにそのユーザー インターフェイスを表示する最初の&1; つであることを示します。 方法のため、システム プロセスをスケジュールする、アプリケーションの&1; つのインスタンスがあります、手動で呼び出す場合のプロパティを設定`true`が別のインスタンスで最初に、画面に表示する可能性があります。 このプロパティの値は、次に、ユーザーが&1; つのバージョンからアップグレードするたびにリセットされます。 アプリケーションを実行には、最初の時間の任意のバージョンだけ操作を実行する場合は、最初の時刻を作成したファイルの有無を確認またはフラグを使用して、格納するなど、追加のテストを実行する必要があります**アプリケーション設定**です。"
  example:
  - "The following code example uses IsFirstRun to decide whether to check for an update to the file group `HelpFiles`. If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.  \n  \n [!code-cs[ClickOnceAPI#9](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#9)]\n [!code-vb[ClickOnceAPI#9](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#9)]"
  syntax:
    content: public bool IsFirstRun { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このバージョンのアプリケーションが; の前に、クライアント コンピューターで実行していない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "現在のアプリケーションがあるかどうかを示す値を取得、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションです。"
  remarks: "内部および外部の両方を実行するアプリケーションの場合、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]展開 (たとえば、展開する前に、ローカル コンピューターでアプリケーションをデバッグする必要がある場合)、アクセスする前に IsNetworkDeployed のテスト、<xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>プロパティ</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>。       IsNetworkDeployed が返されます`true`アプリケーションがインストールされているまたはオンラインでホストされているかどうかに関係なく、Web サイト、ファイル共有、または CD-ROM からインストールされたかどうかに関係なく。"
  example:
  - "The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using IsNetworkDeployed first to ensure that the reference is not `null`.  \n  \n [!code-cs[ClickOnceAPI#2](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#2)]\n [!code-cpp[ClickOnceAPI#2](~/add/codesnippet/cpp/p-system.deployment.appl_0_1.cpp)]"
  syntax:
    content: public static bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  id: TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "日付と時刻を取得[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションの更新プログラムの最終確認日時。"
  remarks: "A[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションは、サブスクリプションの更新用に構成することができます。 このシナリオで[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]配置マニフェストで定義された間隔で自動的にアプリケーションの配置場所をポーリングし、使用可能な更新プログラムがあるかどうかを決定します。 TimeOfLastUpdateCheck がかどうかが開始されたサブスクリプションか、明示的なチェックを使用してに関係なく、最後の更新チェックの時刻を返します、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>、 <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>、 <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>、または<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.Update%2A></xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A></xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>。       更新プログラムのチェックが実行されていません、アプリケーションがインストールされて以来、TimeOfLastUpdateCheck は、インストール時間を返します。"
  example:
  - "The following code example checks whether a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_8_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public DateTime TimeOfLastUpdateCheck { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>の最後の更新チェック</xref:System.DateTime>。"
  overload: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.Update
  id: Update
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "同期ダウンロードし、このアプリケーションの最新バージョンのインストールを開始します。"
  remarks: "アプリケーションは、新しいバージョンので指定された場所にアプリケーションを発行するときに更新されたと見なされます<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>、アプリケーションの配置マニフェストのバージョン番号は、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号より大きい</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>。       更新プログラムをクライアント コンピューターにダウンロードされにインストールされるまで、更新プログラムの呼び出しはブロックされます、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]キャッシュです。 この期間中に、アプリケーション応答しなくなりますをユーザーにします。 アプリケーションの応答性を維持またはダウンロードで使用中に、進行状況レポートを表示する場合、<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>メソッド代わりにします</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>。       更新プログラムは、すべてのアプリケーション マニフェストで「省略可能」とマークされていないファイルをダウンロードします。 使用してオンデマンドで省略可能なファイルをダウンロードすることができます、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>または<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>。       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]既に更新することがアプリケーションに自動的に更新メソッドを呼び出すときこのメソッドを呼び出すが<xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>をスローする場合は、       配置内の&1; つまたは複数のファイルが更新されましたが、アプリケーション マニフェストを更新していない場合、 <xref:System.Deployment.Application.InvalidDeploymentException>。</xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。 ほとんどの再配置、[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]アプリケーションはこの問題を解決します。 配置マニフェストまたはアプリケーション マニフェストの公開キー署名が無効か存在しない場合は、この例外も表示されます。       更新プログラムは、アプリケーションの以前のバージョンより高いレベルのローカル コンピューター上の信頼を要求可能性があります。 アプリケーションでは、信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) の信頼マネージャーは有効な信頼ライセンスが含まれているかどうかを決定する、配置マニフェストを調べます。 配置マニフェストに、有効な信頼ライセンスが含まれていない場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]、インストールが中止され、 <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException>がスローされます Update メソッドを実行するアプリケーションのアクセス許可を付与するかどうかをユーザーに求めるメッセージが表示されことはありません。"
  example:
  - "The following code example checks for an application update; if an update is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/m-system.deployment.appl_6_1.cpp)]\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]"
  syntax:
    content: public bool Update ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アプリケーションが更新されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Deployment.Application.ApplicationDeployment.Update*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "ローカル コンピューターは、アプリケーションを実行することを要求するアクセス許可レベルを付与しませんでした。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]展開が破損しています。 ヒントを診断し、問題を解決する方法については、次を参照してください。 [ClickOnce 配置のトラブルシューティング](~/add/includes/ajax-current-ext-md.md)です。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "ネットワーク上の場所から、新しい展開をダウンロードできませんでした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アプリケーションは現在更新中です。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  id: UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "非同期のダウンロードとこのアプリケーションの最新バージョンのインストールを開始します。"
  remarks: "アプリケーションは、新しいバージョンので指定された場所にアプリケーションを発行するときに更新されたと見なされます<xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>、アプリケーションの配置マニフェストのバージョン番号は、ユーザーのコンピューターに現在インストールされているアプリケーションのバージョン番号より大きい</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>。       更新プログラムのダウンロード中に[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]を発生させる、 <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>、ダウンロードの状態を通知するためにアプリケーションのメイン スレッドでイベント ハンドラー</xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> 。 非同期更新が完了するか、例外が発生したときに[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]を発生させる、<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>メイン アプリケーション スレッドでイベント</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>。 確認、 <xref:System.ComponentModel.AsyncCompletedEventArgs>、更新プログラムが成功したかどうかを決定するには、このイベントを指定します</xref:System.ComponentModel.AsyncCompletedEventArgs>。       使用したが、例外がスローされた場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]呼び出し<xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>設定と、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>プロパティ<xref:System.ComponentModel.AsyncCompletedEventArgs>スローされた例外を</xref:System.ComponentModel.AsyncCompletedEventArgs></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A></xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>。       使用したアプリケーション マニフェストで&quot;optional&quot;としてマークされていない展開内のすべてのファイルがダウンロードされます。 使用してオンデマンドで省略可能なファイルをダウンロードすることができます、<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>または<xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>メソッド</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A></xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>。       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]既に更新することがアプリケーションに自動的に使用したメソッドを呼び出すときこのメソッドを呼び出すが<xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>をスローする場合は、       配置内の&1; つまたは複数のファイルが更新されましたが、アプリケーション マニフェストを更新していない場合、 <xref:System.Deployment.Application.InvalidDeploymentException>。</xref:System.Deployment.Application.InvalidDeploymentException>が表示されます。 ほとんどの場合は、この問題を解決してアプリケーション マニフェストを再構築します。 配置マニフェストまたはアプリケーション マニフェストの公開キー署名が無効か存在しない場合は、この例外も表示されます。       更新プログラムは、アプリケーションの以前のバージョンより高いレベルのローカル コンピューター上の信頼を要求可能性があります。 アプリケーションでは、信頼されたアプリケーションの配置を使用する場合、共通言語ランタイム (CLR) の信頼マネージャーは有効な信頼ライセンスが含まれているかどうかを決定する、配置マニフェストを調べます。 配置マニフェストに、有効な信頼ライセンスが含まれていない場合[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]、インストールが中止され、 <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException>がスローされます 使用したを実行するアプリケーションのアクセス許可を付与するかどうかをユーザーに求めるプロンプトは表示されません。"
  example:
  - "The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void UpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "ローカル コンピューターはこのアプリケーションを実行することを要求するアクセス許可レベルを付与しませんでした。"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]展開が破損しています。 ヒントを診断し、問題を解決する方法については、次を参照してください。 [ClickOnce 配置のトラブルシューティング](~/add/includes/ajax-current-ext-md.md)です。"
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "ネットワーク上の場所から、新しい展開をダウンロードできませんでした。"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  id: UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>。</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>によって開始される非同期更新を取り消します"
  remarks: "UpdateAsyncCancel にへの呼び出しによって開始された更新プログラムだけが取り消されます<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; サブスクリプションの一部として開始された更新は取り消されません</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>。"
  syntax:
    content: public void UpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  id: UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "発生したときに[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>への呼び出しの結果として、アプリケーションのアップグレードを完了しました"
  remarks: "UpdateCompleted イベントは、アプリケーションのメイン スレッドで呼び出されます。 例外をトリガーすることがなくこのコールバック内で直接、アプリケーションの Windows フォーム コントロールを呼び出すことができます。       チェック、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>のプロパティ、<xref:System.ComponentModel.AsyncCompletedEventArgs>このコールバックを指定します</xref:System.ComponentModel.AsyncCompletedEventArgs></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。 このプロパティは、する場合`null`、インストールが成功した; されていない場合`null`、インストールが成功せず、およびを介してこのインストールの失敗の詳細についてを見つけることができます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。 更新プログラムをダウンロードするを呼び出す必要があります、<xref:System.Windows.Forms.Application.Restart%2A>メソッドを<xref:System.Windows.Forms.Application>、アプリケーションの新しいバージョンを使用する</xref:System.Windows.Forms.Application></xref:System.Windows.Forms.Application.Restart%2A>。       呼び出しによって、更新プログラムのインストールが取り消されましたかどうか<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>、<xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>のプロパティ、<xref:System.ComponentModel.AsyncCompletedEventArgs>クラス`true`</xref:System.ComponentModel.AsyncCompletedEventArgs></xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A></xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>。       このイベント ハンドラーを使用する、アプリケーションする必要があります両方をインポート、<xref:System.Deployment.Application>と<xref:System.ComponentModel>名前空間</xref:System.ComponentModel></xref:System.Deployment.Application>。"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  id: UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "更新された後は、アプリケーションの完全な名前を取得します。"
  syntax:
    content: public string UpdatedApplicationFullName { get; }
    return:
      type: System.String
      description: "A<xref:System.String>アプリケーションの完全な名前を格納している</xref:System.String>。"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  id: UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "最近ダウンロードされた更新プログラムのバージョンを取得します。"
  remarks: "変更した後では、<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>新しい更新プログラムがインストールされているが、 <xref:System.Windows.Forms.Application.Restart%2A> <xref:System.Windows.Forms.Application>。</xref:System.Windows.Forms.Application></xref:System.Windows.Forms.Application.Restart%2A>呼び出したされていないかどうか</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>によって異なります。 アプリケーションの配置マニフェストは、自動更新を実行するように構成は、これら&2; つのアプリケーションを再起動する必要があるかどうかを決定する値を比較できます。       場合は、アプリケーションが更新されていない、変更した後で、同じ値を返します<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>。</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>として"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#4](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#4)]\n [!code-cpp[ClickOnceAPI#4](~/add/codesnippet/cpp/p-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#4](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#4)]"
  syntax:
    content: public Version UpdatedVersion { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>、更新プログラムのバージョンを示すします</xref:System.Version>。"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  id: UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Web サイトまたはファイル共有をこのアプリケーションの更新を取得します。"
  remarks: "UpdateLocation は、更新のリダイレクトを使用するアプリケーションの配置が構成されている場合、最初にアプリケーションをダウンロードするために使用する Web サイトから異なる場合があります。       この値は、アプリケーションの配置マニフェストでのみ変更できます。"
  syntax:
    content: public Uri UpdateLocation { get; }
    return:
      type: System.Uri
      description: "HTTP、HTTPS、またはファイルの URL で表される、更新プログラムのパスまたは、Windows とネットワーク ファイルのパス (UNC) します。"
  overload: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  id: UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "発生したときに[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]呼び出しによって開始された更新操作のステータス情報が新しい、<xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>メソッド</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>。"
  remarks: "UpdateProgressChanged イベントは、アプリケーションのメイン スレッドで呼び出されます。 例外をトリガーすることがなくこのコールバック内で直接、アプリケーションの Windows フォーム コントロールを呼び出すことができます。"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.DeploymentDownloadException
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentDownloadException
  nameWithType: DeploymentDownloadException
  fullName: System.Deployment.Application.DeploymentDownloadException
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Deployment.Application.TrustNotGrantedException
  parent: System.Deployment.Application
  isExternal: false
  name: TrustNotGrantedException
  nameWithType: TrustNotGrantedException
  fullName: System.Deployment.Application.TrustNotGrantedException
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
- uid: System.Deployment.Application.UpdateCheckInfo
  parent: System.Deployment.Application
  isExternal: false
  name: UpdateCheckInfo
  nameWithType: UpdateCheckInfo
  fullName: System.Deployment.Application.UpdateCheckInfo
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
- uid: System.Deployment.Application.CheckForUpdateCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: CheckForUpdateCompletedEventHandler
  nameWithType: CheckForUpdateCompletedEventHandler
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
- uid: System.Deployment.Application.DeploymentProgressChangedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentProgressChangedEventHandler
  nameWithType: DeploymentProgressChangedEventHandler
  fullName: System.Deployment.Application.DeploymentProgressChangedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
- uid: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DownloadFileGroupCompletedEventHandler
  nameWithType: DownloadFileGroupCompletedEventHandler
  fullName: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Deployment.Application.ApplicationDeployment.Update
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate
  nameWithType: ApplicationDeployment.CheckForUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync
  nameWithType: ApplicationDeployment.CheckForUpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup
  nameWithType: ApplicationDeployment.DownloadFileGroup
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.Deployment.Application.ApplicationDeployment.Update*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update
  nameWithType: ApplicationDeployment.Update
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync
  nameWithType: ApplicationDeployment.UpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel
  nameWithType: ApplicationDeployment.UpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
