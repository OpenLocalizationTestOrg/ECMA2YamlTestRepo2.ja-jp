### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlAttribute
  id: SamlAttribute
  children:
  - System.IdentityModel.Tokens.SamlAttribute.#ctor
  - System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  - System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  - System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  - System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  - System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  - System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  - System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  - System.IdentityModel.Tokens.SamlAttribute.Name
  - System.IdentityModel.Tokens.SamlAttribute.Namespace
  - System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  - System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlAttribute
  nameWithType: SamlAttribute
  fullName: System.IdentityModel.Tokens.SamlAttribute
  type: Class
  summary: "サブジェクトに関連付けられている属性を表す、 <xref href=&quot;System.IdentityModel.Tokens.SamlAttributeStatement&quot;></xref>です。"
  remarks: "SamlAttribute クラスに対応して、 `<saml:Attribute>` OASIS SAML 1.1 仕様で定義されている XML 要素です。       SamlAttribute インスタンスには、 <xref:System.IdentityModel.Claims.Rights.PossessProperty%2A> <xref:System.IdentityModel.Tokens.SamlAttributeStatement>。</xref:System.IdentityModel.Tokens.SamlAttributeStatement>の件名の信頼性情報</xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>が含まれています。 たとえば、SamlAttribute が含まれます、`Over21`に種類を指定すると、要求、<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>プロパティとリソースがコレクションのメンバーとして指定された、<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>プロパティ</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>。 ときに、<xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A>メソッドは、この`Over21`要求がによって返される、<xref:System.IdentityModel.Tokens.SamlAttributeStatement></xref:System.IdentityModel.Tokens.SamlAttributeStatement>から返された承認ポリシーに追加</xref:System.IdentityModel.Tokens.SamlStatement.CreatePolicy%2A>。 ときに、<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>プロパティには、複数の要素が含まれていますその各要素に対して&1; つの要求が返されます。</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 。       SAML オブジェクト階層内の SamlAttribute 位置: <xref:System.IdentityModel.Tokens.SamlSecurityToken> <xref:System.IdentityModel.Tokens.SamlAssertion> <xref:System.IdentityModel.Tokens.SamlAttributeStatement>SamlAttribute</xref:System.IdentityModel.Tokens.SamlAttributeStatement>       </xref:System.IdentityModel.Tokens.SamlAssertion>       </xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  example:
  - >-
    [!code-vb[SamlAttribute#1](~/add/codesnippet/visualbasic/t-system.identitymodel.t_0_1.vb)]
     [!code-cs[SamlAttribute#1](~/add/codesnippet/csharp/t-system.identitymodel.t_0_1.cs)]
  syntax:
    content: public class SamlAttribute
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute()
  nameWithType: SamlAttribute.SamlAttribute()
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public SamlAttribute ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  id: '#ctor(System.IdentityModel.Claims.Claim)'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute(Claim)
  nameWithType: SamlAttribute.SamlAttribute(Claim)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(Claim)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>クラスの指定したクレームを使用します。"
  remarks: "このコンス トラクターを使用して、クレームを SAML 属性に変換します。 SAML 属性に変換する、<xref:System.IdentityModel.Claims.Claim.Right%2A>プロパティである必要があります<xref:System.IdentityModel.Claims.Rights.PossessProperty%2A>、<xref:System.IdentityModel.Claims.Claim.Resource%2A>プロパティが型でなければなりません<xref:System.String>、および<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>プロパティは、の形式である必要があります`namespace/name`</xref:System.IdentityModel.Claims.Claim.ClaimType%2A></xref:System.String></xref:System.IdentityModel.Claims.Claim.Resource%2A></xref:System.IdentityModel.Claims.Rights.PossessProperty%2A></xref:System.IdentityModel.Claims.Claim.Right%2A>。       次の表では、新機能を指定します、`claim`パラメーター セット、 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>、 <xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>、および<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>プロパティ</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>。      |プロパティ |プロパティ、`claim`プロパティの設定を使用するパラメーター |  |--------------|----------------------------------------------------------------|  |<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|<xref:System.IdentityModel.Claims.Claim.Resource%2A>プロパティの値がコレクションに追加します |。  |<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|最後の後の文字列部分<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>プロパティに &quot;/&quot; 文字です |。  |<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|最後の前に、の文字列の部分に &quot;/&quot; 文字、<xref:System.IdentityModel.Claims.Claim.ClaimType%2A>プロパティです |</xref:System.IdentityModel.Claims.Claim.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A> </xref:System.IdentityModel.Claims.Claim.ClaimType%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A> </xref:System.IdentityModel.Claims.Claim.Resource%2A> </xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A> 。"
  syntax:
    content: public SamlAttribute (System.IdentityModel.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.IdentityModel.Claims.Claim
      description: "A <xref href=&quot;System.IdentityModel.Claims.Claim&quot;> </xref>のサブジェクトの属性を表す、 <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref>セキュリティ トークン。"
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<> </> *> プロパティ<code> claim </code> <xref:System.String>型ではありません。      -or-       The <>*> property of <code>claim</code> is not <>*>.      - または -、 <> </> *> プロパティ<code> claim </code>は &quot;/&quot; 文字がないか、最初と最後のインデックス位置にある</xref:System.String>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: SamlAttribute(String,String,IEnumerable<String>)
  nameWithType: SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SamlAttribute&quot;> </xref>クラスの指定した属性名、XML 名前空間と属性値を使用します。"
  remarks: "次の表では、このコンス トラクターのパラメーターが設定されているプロパティを指定します。      |プロパティ |パラメーター |  |--------------|---------------|  |<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>|`attributeValues`|  |<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>|`attributeName`|  |<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>|`attributeNamespace`|</xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A></xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>"
  syntax:
    content: public SamlAttribute (string attributeNamespace, string attributeName, System.Collections.Generic.IEnumerable<string> attributeValues);
    parameters:
    - id: attributeNamespace
      type: System.String
      description: "いる XML 名前空間、`attributeName`パラメーターを定義します。"
    - id: attributeName
      type: System.String
      description: "SAML 属性の名前。"
    - id: attributeValues
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "&lt;Xref:System.Collections.Generic.IEnumerable%601&gt; SAML 属性の値を含むです。"
  overload: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>attributeNamespace</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>attributeName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>attributeValues</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<> </> *> プロパティ<code> claim </code> <xref:System.String>型ではありません。      -or-       The <>*> property of <code>claim</code> is not <>*>.      - または -、 <> </> *> プロパティ<code> claim </code>は &quot;/&quot; 文字がないか、最初と最後のインデックス位置にある</xref:System.String>。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  id: AttributeValues
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "SAML 属性の属性値のコレクションを取得します。"
  remarks: "A SAML attribute may contain more than one attribute value.  \n  \n The AttributeValues property corresponds to the `\\<saml:AttributeValue>` element that is defined in the Assertions and Protocol for the OASIS Security Assertion Markup Language (SAML) specification."
  syntax:
    content: public System.Collections.Generic.IList<string> AttributeValues { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "A &lt;xref:System.Collections.Generic.IList%601&gt; SAML 属性の属性値のセットを格納します。"
  overload: System.IdentityModel.Tokens.SamlAttribute.AttributeValues*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  id: AttributeValueXsiType
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または SAML 属性に含まれる値の xsi:type を設定します。"
  remarks: "AttributeValueXsiType プロパティに対応して、`type`の属性、 `<saml:AttributeValue>` OASIS Security Assertion Markup Language (SAML) 仕様のアサーションおよびプロトコルで定義されている要素です。 この属性が必要です。"
  syntax:
    content: public string AttributeValueXsiType { get; set; }
    return:
      type: System.String
      description: "Xsi:type を含む文字列です。 既定値は<xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ある値を設定しようとすると、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空が発生します。       または、異常な値を設定しようとします。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  id: ExtractClaims
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: ExtractClaims()
  nameWithType: SamlAttribute.ExtractClaims()
  fullName: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "この SAML 属性が表しているクレームのコレクションを取得します。"
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>セキュリティ トークンでは、セキュリティ トークンが表すサブジェクトに関する属性を指定する、SAML アサーションを使用してそのクレームを指定します。</xref:System.IdentityModel.Tokens.SamlSecurityToken> SAML 属性をクレームのセットに変換するのにには、ExtractClaims メソッドを使用します。"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.Claim> ExtractClaims ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.Claim}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Claims.Claim&quot;></xref>この SAML 属性が表しているクレームのセットを格納します。"
  overload: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのプロパティは読み取り専用であるかどうかを示す値を取得します。"
  remarks: "インスタンスがこのようにする、<xref:System.IdentityModel.Tokens.SamlAttribute>クラスの読み取り専用の呼び出し、<xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A>メソッド</xref:System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly%2A></xref:System.IdentityModel.Tokens.SamlAttribute>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合のこのインスタンスのプロパティは読み取り専用です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlAttribute.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り専用にするには、このインスタンスが発生します。"
  remarks: "MakeReadOnly メソッドが呼び出されたときに、<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A>プロパティに設定されている`true`されのこのインスタンスのプロパティを設定不要になったことができます</xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly%2A>。"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.Name
  id: Name
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: Name
  nameWithType: SamlAttribute.Name
  fullName: System.IdentityModel.Tokens.SamlAttribute.Name
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または SAML 属性の名前を設定します。"
  remarks: "この SAML 属性に関連付けられている値を指定するには、設定、<xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>プロパティ Name プロパティに対応して、`AttributeName`の属性、 `<Attribute>` OASIS Security Assertion Markup Language (SAML) 仕様のアサーションおよびプロトコルで定義されている要素です</xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "SAML 属性の名前。"
  overload: System.IdentityModel.Tokens.SamlAttribute.Name*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Name プロパティが設定され、<xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*>プロパティは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*> 。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Name プロパティに設定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace
  id: Namespace
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: SamlAttribute.Namespace
  fullName: System.IdentityModel.Tokens.SamlAttribute.Namespace
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または SAML 属性の名前が定義されている XML 名前空間を設定します。"
  remarks: "SAML 属性の名前を設定するには、設定、<xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>プロパティ</xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>。       Namespace プロパティに対応して、`AttributeNamespace`の属性、 `<AttributeDesignator>` OASIS Security Assertion Markup Language (SAML) 仕様のアサーションおよびプロトコルで定義されている要素です。"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "SAML 属性の名前が定義されている XML 名前空間。"
  overload: System.IdentityModel.Tokens.SamlAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  id: OriginalIssuer
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
  fullName: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または SAML 属性の OriginalIssuer を表す文字列を設定します。"
  syntax:
    content: public string OriginalIssuer { get; set; }
    return:
      type: System.String
      description: "SAML 属性の元の発行者。"
  overload: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "空の文字列である値を設定しようとすると、発生します。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML リーダーから SAML 属性を読み取ります。"
  remarks: "ReadXml メソッドのセット、 <xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>、 <xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A>、および<xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A>プロパティ</xref:System.IdentityModel.Tokens.SamlAttribute.Namespace%2A></xref:System.IdentityModel.Tokens.SamlAttribute.Name%2A></xref:System.IdentityModel.Tokens.SamlAttribute.AttributeValues%2A>。"
  syntax:
    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "A <xref:System.Xml.XmlDictionaryReader>SAML 属性を読み取れません</xref:System.Xml.XmlDictionaryReader>。"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> SAML 仕様で XML 要素を読み取るができます。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>を読み取る、 <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref>デジタル署名の句。"
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref>デジタル署名を作成したセキュリティ トークンを指定します。"
  overload: System.IdentityModel.Tokens.SamlAttribute.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>reader</code>持たない XML 要素を指す、 <xref uid=&quot;langword_csharp_AttributeName&quot; name=&quot;AttributeName&quot; href=&quot;&quot;> </xref>と<xref uid=&quot;langword_csharp_AttributeNamespace&quot; name=&quot;AttributeNamespace&quot; href=&quot;&quot;></xref>属性。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAttribute
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML シリアライザーに SAML 属性を書き込みます。"
  syntax:
    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "A <xref:System.Xml.XmlDictionaryWriter>SAML 属性を書き込む</xref:System.Xml.XmlDictionaryWriter>。"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref>が SAML アサーション内で XML 要素を書き込み可能です。"
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "A <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref>の書き込みができる<xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;></xref>句。"
  overload: System.IdentityModel.Tokens.SamlAttribute.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute()
  nameWithType: SamlAttribute.SamlAttribute()
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute()
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.IdentityModel.Claims.Claim)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute(Claim)
  nameWithType: SamlAttribute.SamlAttribute(Claim)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(Claim)
- uid: System.IdentityModel.Claims.Claim
  parent: System.IdentityModel.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.IdentityModel.Claims.Claim
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute(String,String,IEnumerable<String>)
  nameWithType: SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlAttribute.SamlAttribute(String,String,IEnumerable<String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValues
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
  fullName: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ExtractClaims()
  nameWithType: SamlAttribute.ExtractClaims()
  fullName: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Claims.Claim}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Claim>
  nameWithType: ReadOnlyCollection<Claim>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlAttribute.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlAttribute.Name
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Name
  nameWithType: SamlAttribute.Name
  fullName: System.IdentityModel.Tokens.SamlAttribute.Name
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Namespace
  nameWithType: SamlAttribute.Namespace
  fullName: System.IdentityModel.Tokens.SamlAttribute.Namespace
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
  fullName: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlAttribute.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlAttribute.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlAttribute.#ctor*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: SamlAttribute
  nameWithType: SamlAttribute.SamlAttribute
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValues*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValues
  nameWithType: SamlAttribute.AttributeValues
- uid: System.IdentityModel.Tokens.SamlAttribute.AttributeValueXsiType*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: AttributeValueXsiType
  nameWithType: SamlAttribute.AttributeValueXsiType
- uid: System.IdentityModel.Tokens.SamlAttribute.ExtractClaims*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ExtractClaims
  nameWithType: SamlAttribute.ExtractClaims
- uid: System.IdentityModel.Tokens.SamlAttribute.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlAttribute.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlAttribute.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlAttribute.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlAttribute.Name*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Name
  nameWithType: SamlAttribute.Name
- uid: System.IdentityModel.Tokens.SamlAttribute.Namespace*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: Namespace
  nameWithType: SamlAttribute.Namespace
- uid: System.IdentityModel.Tokens.SamlAttribute.OriginalIssuer*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: OriginalIssuer
  nameWithType: SamlAttribute.OriginalIssuer
- uid: System.IdentityModel.Tokens.SamlAttribute.ReadXml*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: ReadXml
  nameWithType: SamlAttribute.ReadXml
- uid: System.IdentityModel.Tokens.SamlAttribute.WriteXml*
  parent: System.IdentityModel.Tokens.SamlAttribute
  isExternal: false
  name: WriteXml
  nameWithType: SamlAttribute.WriteXml
