### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderBase
  id: ProviderBase
  children:
  - System.Configuration.Provider.ProviderBase.#ctor
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  langs:
  - csharp
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
  type: Class
  summary: "拡張可能なプロバイダー モデルの基本実装を提供します。"
  remarks: "プロバイダー モデルは、メンバーシップ、プロファイル、および保護された構成など、ASP.NET の複数の機能の一部またはすべてをカプセル化するためのものです。 これにより、開発者をカプセル化された機能の複数の実装を提供するサポート クラスを作成します。 さらに、開発者は、プロバイダー モデルを使用して新しい機能を記述できます。 機能コードを複製するか、実装メソッドを変更する必要がある場合は、アプリケーション層を変更せずに、機能の複数の実装をサポートする効果的な方法を指定できます。       ProviderBase クラスは、単純とのみを含む、いくつかの基本的な方法は、すべてのプロバイダーに共通するプロパティです。 機能固有のプロバイダー (など<xref:System.Web.Security.MembershipProvider>) ProviderBase から継承し、必要なメソッドとその機能の実装に固有のプロバイダーをサポートする必要があるプロパティを確立します</xref:System.Web.Security.MembershipProvider>。 実装に固有のプロバイダー (など<xref:System.Web.Security.SqlMembershipProvider>) 機能固有のプロバイダーからさらに継承 (この場合、 <xref:System.Web.Security.MembershipProvider>).</xref:System.Web.Security.MembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>       プロバイダー モデルの最も重要な点は、(たとえば、かどうかデータが保存される、テキスト ファイルとして、またはデータベース内) の実装は、アプリケーション コードから切り離されます。 特定の機能の実装に固有のプロバイダーの種類は、構成ファイルで指定されます。 機能レベルのプロバイダーを構成ファイルからの型に読み込んで、機能コードに対するファクトリとして機能します。 アプリケーション開発者は、アプリケーション コードで機能のクラスを使用できます。 実装の種類ことができますにスワップ アウトする構成ファイルで別の実装方法に合わせてコードを書き換える必要があります。       ASP.NET に含まれているプロバイダーは、主に、データの永続性機能の実装プロファイルやメンバーシップなどの抽象化です。 ただし、このモデルは、抽象化され、複数の方法で実装されている可能性があります機能の他の任意の種類に適用できます。"
  example:
  - For an example of how to use the ProviderBase class, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract class ProviderBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref>クラスです。"
  syntax:
    content: protected ProviderBase ();
    parameters: []
  overload: System.Configuration.Provider.ProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Description
  id: Description
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "管理ツールまたはその他のユーザー インターフェイス (Ui) での表示に適した簡単でわかりやすい説明を取得します。"
  remarks: "構成されているプロバイダーが、説明の値を指定しないかどうか、<xref:System.Configuration.Provider.ProviderBase.Name%2A>プロパティは、既定値として返されます</xref:System.Configuration.Provider.ProviderBase.Name%2A>。"
  syntax:
    content: public virtual string Description { get; }
    return:
      type: System.String
      description: "簡単でわかりやすい説明管理ツールまたは他の Ui での表示に適したです。"
  overload: System.Configuration.Provider.ProviderBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "プロバイダーを初期化します。"
  remarks: "基本クラスの実装を内部的に追跡回数、プロバイダーの`Initialize`メソッドが呼び出されました。 プロバイダーが複数回初期化される場合、`InvalidOperationException`プロバイダーが既に初期化されていることを示すがスローされます。       ほとんどの機能のプロバイダーの呼び出しは、プロバイダー固有の初期化を実行する前に初期化するため、このメソッドは、二重の初期化を回避するための中央の場所をします。"
  example:
  - For an example of how to use Initialize, see [Profile Provider Implementation Example](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "プロバイダーのフレンドリ名。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "このプロバイダーの構成で指定されたプロバイダーに固有の属性を表す名前/値ペアのコレクション。"
  overload: System.Configuration.Provider.ProviderBase.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "プロバイダーの名前は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロバイダーの名前が、長さが&0; です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "プロバイダーは既に初期化された後、プロバイダーの初期化を呼びしようとしました。"
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderBase.Name
  id: Name
  parent: System.Configuration.Provider.ProviderBase
  langs:
  - csharp
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "構成時にプロバイダーを参照するために使用するフレンドリ名を取得します。"
  remarks: 'この文字列の推奨パターンは: [*プロバイダー作成者*] [*実装型*] [*機能*] プロバイダー。 ただし、<xref:System.Configuration.Provider.ProviderBase.Description%2A>プロパティでは、わかりやすい説明もでは、Name プロパティがプロバイダーの識別子として使用します</xref:System.Configuration.Provider.ProviderBase.Description%2A>。'
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "構成時にプロバイダーを参照するために使用するフレンドリ名。"
  overload: System.Configuration.Provider.ProviderBase.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Configuration.Provider.ProviderBase.#ctor
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase()
  nameWithType: ProviderBase.ProviderBase()
  fullName: System.Configuration.Provider.ProviderBase.ProviderBase()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: System.Configuration.Provider.ProviderBase.Description
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: ProviderBase.Initialize(String,NameValueCollection)
  fullName: System.Configuration.Provider.ProviderBase.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: System.Configuration.Provider.ProviderBase.Name
- uid: System.Configuration.Provider.ProviderBase.#ctor*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase.ProviderBase
- uid: System.Configuration.Provider.ProviderBase.Description*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize
  nameWithType: ProviderBase.Initialize
- uid: System.Configuration.Provider.ProviderBase.Name*
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
