### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IEditableCollectionView
  id: IEditableCollectionView
  children:
  - System.ComponentModel.IEditableCollectionView.AddNew
  - System.ComponentModel.IEditableCollectionView.CanAddNew
  - System.ComponentModel.IEditableCollectionView.CanCancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelNew
  - System.ComponentModel.IEditableCollectionView.CanRemove
  - System.ComponentModel.IEditableCollectionView.CommitEdit
  - System.ComponentModel.IEditableCollectionView.CommitNew
  - System.ComponentModel.IEditableCollectionView.CurrentAddItem
  - System.ComponentModel.IEditableCollectionView.CurrentEditItem
  - System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  - System.ComponentModel.IEditableCollectionView.IsAddingNew
  - System.ComponentModel.IEditableCollectionView.IsEditingItem
  - System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  - System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  - System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  langs:
  - csharp
  name: IEditableCollectionView
  nameWithType: IEditableCollectionView
  fullName: System.ComponentModel.IEditableCollectionView
  type: Interface
  summary: "メソッドとプロパティを定義する、 <xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref>を実装してコレクションに編集機能を提供します。"
  remarks: "コレクション ビューが IEditableCollectionView インターフェイスを実装すると、メソッドと、コレクションの種類に関係なく、IEditableCollectionView を公開するプロパティを使用して、に対する変更を許可する場合、基になるコレクションを直接変更することができます。       種類<xref:System.Windows.Controls.ItemCollection>、 <xref:System.Windows.Data.BindingListCollectionView>、および<xref:System.Windows.Data.ListCollectionView>に付属している種類[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] <xref:System.Windows.Data.CollectionView>.</xref:System.Windows.Data.CollectionView>から継承する</xref:System.Windows.Data.ListCollectionView></xref:System.Windows.Data.BindingListCollectionView></xref:System.Windows.Controls.ItemCollection>  これらの型では、それらの型のいずれかを使用するコレクションを編集できるように、IEditableCollectionView も実装します。  <xref:System.Windows.Controls.ItemCollection>、具体的には、多くの場合、ため、<xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName>プロパティは<xref:System.Windows.Controls.ItemCollection>。</xref:System.Windows.Controls.ItemCollection> </xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName></xref:System.Windows.Controls.ItemCollection>"
  example:
  - "The following example shows how to add an item to a collection by using methods that are defined by IEditableCollectionView.  This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.  When the user adds or edits an item, a form prompts the user to enter a new item.  If the user submits the form, the item is committed to the collection.  If the user cancels the form, the item is discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public interface IEditableCollectionView
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  id: AddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "新しい項目をコレクションに追加します。"
  remarks: "AddNew を呼び出すと、追加トランザクションが開始します。  呼び出す必要があります<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>追加トランザクションを終了します</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A></xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>。 新しい項目は、コレクション ビューに常に表示されます。 任意のフィルター処理、並べ替えはグループ化に適用される新しいビューが適用されるアイテムの場合に<xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>と呼びます</xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>。"
  example:
  - "The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.  Then it calls AddNew to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "コレクションに追加される新しい項目。"
  overload: System.ComponentModel.IEditableCollectionView.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  id: CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "新しい項目をコレクションに追加できるかどうかを示す値を取得します。"
  remarks: "<xref:System.ComponentModel.IEditableCollectionView>次に該当する場合、新しい項目を追加できます:-アイテムを基になるコレクションに追加することができます</xref:System.ComponentModel.IEditableCollectionView>。  たとえば、コレクションが読み取り専用の場合は、CanAddNew は`false`します。      -<xref:System.ComponentModel.IEditableCollectionView>コレクションに含まれる型のオブジェクトを作成することができます</xref:System.ComponentModel.IEditableCollectionView>。  たとえば、型のコレクションは、 <xref:System.Collections.ObjectModel.ObservableCollection%601>、<xref:System.ComponentModel.IEditableCollectionView>型のオブジェクトを作成できる必要があります`T`</xref:System.ComponentModel.IEditableCollectionView></xref:System.Collections.ObjectModel.ObservableCollection%601>。"
  example:
  - "The following example checks whether an item can be added to the collection.  If CanAddNew is `false`, the example tells the user that an item cannot be added.  Otherwise, it shows a form that prompts the user to add a new item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public bool CanAddNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションへ新しい項目を追加できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.IEditableCollectionView.CanAddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "コレクション ビューが保留中の変更を破棄し、編集されたオブジェクトの元の値を復元するかどうかを示す値を取得します。"
  remarks: "CanCancelEdit は`true`ビューが現在編集済みの項目に「保留中の変更」の概念をサポートするかどうか。   たとえば、コレクション ビューを返す可能性があります`true`編集済みの項目を実装する場合<xref:System.ComponentModel.IEditableObject>、ビューがロールを使用すると、項目の状態に関する情報を持つかどうか、または変更をバックアップします</xref:System.ComponentModel.IEditableObject>。 CanCancelEdit は`false`場合は、ビューは、オブジェクトに対する変更を戻すことはできません。  その場合は、呼び出す<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>状態の編集を終了し、編集されたオブジェクトでの変更を元に戻すロジックを提供するビューが発生する</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。"
  example:
  - "The following example gets CanCancelEdit to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.   For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public bool CanCancelEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクション ビューが保留中の変更を破棄し、編集されたオブジェクトの元の値を復元する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  id: CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "編集トランザクションを終了し、可能であれば、元の値を項目を復元します。"
  remarks: "CancelEdit セット<xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>に`null`コレクション ビューで状態の編集を終了するとします</xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>。  場合<xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>は`true`CancelEdit も編集されたオブジェクトの元の値を復元します</xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>。"
  example:
  - "The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls CancelEdit.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls CancelEdit. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  id: CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "追加トランザクションを終了し、保留中の新しい項目を破棄します。"
  remarks: ''
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.  If the user cancels the form, the example calls CancelNew to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CancelNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  id: CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "コレクションから項目を削除できるかどうかを示す値を取得します。"
  remarks: "CanRemove は`false`基になるコレクションが読み取り専用の場合。"
  example:
  - "The following example calls CanRemove to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public bool CanRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションから項目を削除することができる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.IEditableCollectionView.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  id: CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "編集トランザクションを終了し、保留中の変更を保存します。"
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the example calls CommitEdit to save the changes to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void CommitEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  id: CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "追加トランザクションを終了し、保留中の新しい項目を保存します。"
  remarks: "任意のフィルター処理、並べ替えはグループ化に適用される、 <xref:System.Windows.Data.CollectionView>CommitNew が呼び出されたときに、新しい項目に適用します</xref:System.Windows.Data.CollectionView>。"
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls CommitNew to add the item to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CommitNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "現在の中に追加される項目を取得トランザクションを追加します。"
  syntax:
    content: public object CurrentAddItem { get; }
    return:
      type: System.Object
      description: "場合は追加される項目<xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*> 。"
  overload: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "編集されているコレクション内の項目を取得します。"
  syntax:
    content: public object CurrentEditItem { get; }
    return:
      type: System.Object
      description: "コレクションの場合は編集されている<xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*> 。"
  overload: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "指定した項目の編集トランザクションを開始します。"
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the changes are committed to the collection.  If the user cancels the form, the changes are discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void EditItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "編集する項目。"
  overload: System.ComponentModel.IEditableCollectionView.EditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  id: IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "追加トランザクションが進行中かどうかを示す値を取得します。"
  remarks: "<xref:System.ComponentModel.IEditableCollectionView.AddNew%2A><xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>。</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A></xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>を呼び出すことによって、追加のトランザクションを終了して、</xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>呼び出すことによって追加トランザクションを開始します。"
  syntax:
    content: public bool IsAddingNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>追加トランザクションが実行中である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  id: IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "編集トランザクションが進行中かどうかを示す値を取得します。"
  remarks: "<xref:System.ComponentModel.IEditableCollectionView.EditItem%2A><xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>または<xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>。</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A></xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>を呼び出すことによって、トランザクションを終了して、</xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>呼び出すことによって編集トランザクションを開始します。"
  syntax:
    content: public bool IsEditingItem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>編集トランザクションが実行中である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "取得またはコレクション ビューに新しい項目のプレース ホルダーの位置を設定します。"
  syntax:
    content: public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
      description: "コレクション ビューに新しい項目のプレース ホルダーの位置を指定する列挙値の&1; つ。"
  overload: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "指定した項目をコレクションから削除します。"
  remarks: "場合`item`はないコレクションの削除は何もしません。"
  example:
  - "The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls Remove if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public void Remove (object item);
    parameters:
    - id: item
      type: System.Object
      description: "削除する項目。"
  overload: System.ComponentModel.IEditableCollectionView.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "指定した位置にある項目をコレクションから削除します。"
  remarks: '`index`コレクション ビュー、コレクションではなく相対パスです。  たとえば、コレクションは、10 個のアイテムとビューの場合は、 <xref:System.ComponentModel.ICollectionView.Filter%2A>7 個の項目の表示、有効な値のように`index`は 0 から 6 までです</xref:System.ComponentModel.ICollectionView.Filter%2A>。'
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "削除する項目の位置。"
  overload: System.ComponentModel.IEditableCollectionView.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満か、コレクション ビュー内の項目の数を超えています。"
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IEditableCollectionView.AddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew
  nameWithType: IEditableCollectionView.AddNew
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit
  nameWithType: IEditableCollectionView.CancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew
  nameWithType: IEditableCollectionView.CancelNew
- uid: System.ComponentModel.IEditableCollectionView.CanRemove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit
  nameWithType: IEditableCollectionView.CommitEdit
- uid: System.ComponentModel.IEditableCollectionView.CommitNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew
  nameWithType: IEditableCollectionView.CommitNew
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem
  nameWithType: IEditableCollectionView.EditItem
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove
  nameWithType: IEditableCollectionView.Remove
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt
  nameWithType: IEditableCollectionView.RemoveAt
