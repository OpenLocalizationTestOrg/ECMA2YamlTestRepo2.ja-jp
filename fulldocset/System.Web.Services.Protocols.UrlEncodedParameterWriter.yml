### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter
  id: UrlEncodedParameterWriter
  children:
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)
  - System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
  langs:
  - csharp
  name: UrlEncodedParameterWriter
  nameWithType: UrlEncodedParameterWriter
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter
  type: Class
  summary: "URL エンコードの SOAP ことがなく HTTP を使用して実装されている Web サービス クライアントの要求パラメーターを発信ライターの機能を提供します。"
  remarks: "UrlEncodedParameterWriter とその他のクラスの<xref:System.Web.Services.Protocols>名前空間は、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装をサポートします</xref:System.Web.Services.Protocols>。 Web サービスのライター、リーダー シリアル化および逆、それぞれ、パラメーターまたは Web メソッドの戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。 Web サービスのライター、リーダーは、HTTP トランスポートを使用しますが、SOAP 標準を使用してメッセージを交換しません。       抽象 UrlEncodedParameterWriter クラスは、抽象型から継承<xref:System.Web.Services.Protocols.MimeParameterWriter>クラス、URL エンコードの HTTP 要求のストリームに Web メソッドのパラメーターのクライアント側の書き込み機能を追加します</xref:System.Web.Services.Protocols.MimeParameterWriter>。       通常、UrlEncodedParameterWriter またはその派生クラスを直接使用する必要はありません。 代わりに、Wsdl.exe ツールは、HTTP GET または HTTP POST の実装に応じて、クライアント プロキシ コードを生成するときに適用されます、<xref:System.Web.Services.Protocols.HttpMethodAttribute>各 Web メソッドに属性の設定と<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>プロパティを適切な型です</xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A></xref:System.Web.Services.Protocols.HttpMethodAttribute>。      > [!NOTE] > 使用が指定されて、ハイパー テキスト転送プロトコル--http/1.1 自体により、Multipurpose Internet Mail Extensions (MIME) メッセージ形式のバリエーションの電子メール メッセージ、テキストとバイナリの両方のさまざまなコンテンツの種類を指定します。"
  syntax:
    content: 'public abstract class UrlEncodedParameterWriter : System.Web.Services.Protocols.MimeParameterWriter'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeParameterWriter
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeParameterWriter.GetRequestUrl(System.String,System.Object[])
  - System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])
  - System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest
  - System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: UrlEncodedParameterWriter()
  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter()
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.UrlEncodedParameterWriter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.UrlEncodedParameterWriter&quot;> </xref>クラスです。"
  syntax:
    content: protected UrlEncodedParameterWriter ();
    parameters: []
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])
  id: Encode(System.IO.TextWriter,System.Object[])
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: Encode(TextWriter,Object[])
  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,Object[])
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,Object[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Web メソッドのすべてのパラメーター値をエンコードし、指定されたライターに書き込みます。"
  remarks: "このエンコード メソッドのオーバー ロードは、その他のオーバー ロードを呼び出します<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>、パラメーターの値ごとに、配列内の個々 の項目を含むします</xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>。"
  syntax:
    content: protected void Encode (System.IO.TextWriter writer, object[] values);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>の HTTP 要求への書き込みを行うオブジェクト</xref:System.IO.TextWriter>。"
    - id: values
      type: System.Object[]
      description: "Web メソッドのパラメーター値。"
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)
  id: Encode(System.IO.TextWriter,System.String,System.Object)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: Encode(TextWriter,String,Object)
  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,String,Object)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,String,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定されたパラメーター値をエンコードし、指定されたライターに書き込みます。"
  remarks: "他のエンコード メソッドのシグネチャ<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>、Web メソッドごとに呼び出されるか、呼び出し、パラメーターの各エンコード メソッドのこの署名値、配列内の各項目を含む</xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode%2A>。"
  syntax:
    content: protected void Encode (System.IO.TextWriter writer, string name, object value);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>の HTTP 要求への書き込みを行うオブジェクト</xref:System.IO.TextWriter>。"
    - id: name
      type: System.String
      description: "エンコードされるパラメーターの名前。"
    - id: value
      type: System.Object
      description: "エンコードされるパラメーターの値。"
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定したメソッドの初期化子を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>。 <xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>クラス初期化子がありの値、<xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A>プロパティ、入力の<xref:System.Web.Services.Protocols.LogicalMethodInfo>オブジェクト</xref:System.Web.Services.Protocols.LogicalMethodInfo></xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters%2A></xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>。 プロパティは、<xref:System.Reflection.ParameterInfo>配列です。サービスの初期化中に、GetInitializer メソッドが呼び出されます</xref:System.Reflection.ParameterInfo>。 後で、要求の作成時点で、初期化子が渡されたオブジェクトを<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>別のメソッド<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter>インスタンス</xref:System.Web.Services.Protocols.UrlEncodedParameterWriter></xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize%2A>。 その他のオブジェクトでは、実際に書き込みを実行します。"
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>初期化子を取得する Web メソッドを指定します。"
    return:
      type: System.Object
      description: "<xref:System.Object>、指定したメソッドの初期化子を格納している</xref:System.Object>。"
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: UrlEncodedParameterWriter.Initialize(Object)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "インスタンスを初期化します。"
  remarks: "Initialize メソッドが要求の作成時に呼び出されます。       入力パラメーター `initializer`、呼び出すことによって取得されて、<xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>クライアントの初期化中に別のインスタンス上のメソッド</xref:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer%2A>。"
  syntax:
    content: public override void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "A<xref:System.Reflection.ParameterInfo>を介して配列が取得された、<xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*>のプロパティ、 <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>クラス</xref:System.Web.Services.Protocols.LogicalMethodInfo.InParameters*></xref:System.Reflection.ParameterInfo>"
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
  id: RequestEncoding
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  langs:
  - csharp
  name: RequestEncoding
  nameWithType: UrlEncodedParameterWriter.RequestEncoding
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または HTTP 要求へのパラメーターを書き込むために使用するエンコーディングを設定します。"
  remarks: "エンコードで表される、<xref:System.Text.Encoding>クラス、文字をバイト シーケンスに変換する方法を定義します</xref:System.Text.Encoding>。"
  syntax:
    content: public override System.Text.Encoding RequestEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "HTTP 要求へのパラメーターを書き込むために使用するエンコーディングします。"
  overload: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeParameterWriter
  isExternal: false
  name: System.Web.Services.Protocols.MimeParameterWriter
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: UrlEncodedParameterWriter()
  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter()
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.UrlEncodedParameterWriter()
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: Encode(TextWriter,Object[])
  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,Object[])
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,Object[])
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: Encode(TextWriter,String,Object)
  nameWithType: UrlEncodedParameterWriter.Encode(TextWriter,String,Object)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(TextWriter,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: Initialize(Object)
  nameWithType: UrlEncodedParameterWriter.Initialize(Object)
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(Object)
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: RequestEncoding
  nameWithType: UrlEncodedParameterWriter.RequestEncoding
  fullName: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor*
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: UrlEncodedParameterWriter
  nameWithType: UrlEncodedParameterWriter.UrlEncodedParameterWriter
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode*
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: Encode
  nameWithType: UrlEncodedParameterWriter.Encode
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer*
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: GetInitializer
  nameWithType: UrlEncodedParameterWriter.GetInitializer
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize*
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: Initialize
  nameWithType: UrlEncodedParameterWriter.Initialize
- uid: System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding*
  parent: System.Web.Services.Protocols.UrlEncodedParameterWriter
  isExternal: false
  name: RequestEncoding
  nameWithType: UrlEncodedParameterWriter.RequestEncoding
