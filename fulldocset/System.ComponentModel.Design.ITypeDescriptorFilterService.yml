### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService
  id: ITypeDescriptorFilterService
  children:
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  - System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  langs:
  - csharp
  name: ITypeDescriptorFilterService
  nameWithType: ITypeDescriptorFilterService
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService
  type: Interface
  summary: "デザイン モードでコンポーネントのメンバー記述子の設定を変更するインターフェイスを提供します。"
  remarks: "ITypeDescriptorFilterService インターフェイスでは、デザイン時に、プロパティ、イベント、およびコンポーネントのクラス レベルの属性を変更できるようにするインターフェイスを提供します。 一連のコンポーネントが<xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>を通じて提供記述子を使用してこの変更が行われる 型記述子 ITypeDescriptorFilterService サービスのコンポーネントのサイトがクエリを実行し、型記述子がこのサービスに収集したすべてのメタデータを渡すことがある場合。 サービスは、追加、削除、およびコンポーネントの既存の特性を変更してメタデータを変更できます。       コンポーネントのプロパティを変更して、呼び出すことによってなど、<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>メソッド</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>。 フィルター サービスがプロパティ名と型<xref:System.ComponentModel.PropertyDescriptor>。</xref:System.ComponentModel.PropertyDescriptor>の場合は、そのプロパティ記述子を格納するディクショナリを取得します。 変更は、次のロジックを使用して実装されます。      |変更 |実装 |  |------------------|--------------------|  |削除 |ディクショナリ内の対応するエントリを削除します |。  |加算 |ディクショナリに適切なエントリを追加します |。  |変更を加える |既存のプロパティ記述子のメソッドを呼び出して、関連付けられているプロパティ記述子のエントリを置換または全体のプロパティのキー/値ペアのディクショナリを置き換えます |。      戻り値<xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>このプロパティのセットは固定されているかどうかを決定します</xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties%2A>。 このメソッドが戻る場合`true`、<xref:System.ComponentModel.TypeDescriptor>のこのコンポーネントは、結果をキャッシュできます</xref:System.ComponentModel.TypeDescriptor>。 いずれかのコンポーネントがガベージ コレクションされるまで、このキャッシュが保持されますまたは<xref:System.ComponentModel.TypeDescriptor.Refresh%2A>型記述子のメソッドが呼び出されます</xref:System.ComponentModel.TypeDescriptor.Refresh%2A>。"
  example:
  - "The following code example demonstrates a designer that uses the ITypeDescriptorFilterService to filter the attributes collection of any new or existing <xref:System.Windows.Forms.Button> to add a designer attribute for a new designer before loading or reloading the designer for the button.  \n  \n To use the example, add the code to a Windows Forms project and load the components from the class library into the Toolbox.  \n  \n Also see [Walkthrough: Automatically Populating the Toolbox with Custom Components](http://msdn.microsoft.com/library/fw694kde\\(v=vs.110\\).aspx).  \n  \n Add some buttons to your form. Add a `ButtonDesignerFilterComponent` to your form, and it will appear in the component tray. The `ButtonDesignerFilterComponent` will add a `ButtonDesignerFilterService`, which implements ITypeDescriptorFilterService, as a design mode service provider. Existing or new <xref:System.Windows.Forms.Button> objects on the form will begin color cycling after the `ButtonDesignerFilterService` replaces the designer for each existing and new button with a `ColorCycleButtonDesigner`. The buttons will color cycle when you move the mouse pointer over them, and alternately continue cycling or reset the background and foreground colors on `MouseLeave` events. New <xref:System.Windows.Forms.Button> objects will be given the `ColorCycleButtonDesigner` through the <xref:System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes%2A> method of the `ButtonDesignerFilterService` that has been loaded, until the `ButtonDesignerFilterComponent` is disposed and replaces the original ITypeDescriptorFilterService. The `ColorCycleButton` class in this example is a <xref:System.Windows.Forms.Button> associated with a `ColorCycleButtonDesigner`.  \n  \n [!code-cs[ITypeDescriptorFilterService#1](~/add/codesnippet/csharp/t-system.componentmodel._32_1.cs)]\n [!code-vb[ITypeDescriptorFilterService#1](~/add/codesnippet/visualbasic/t-system.componentmodel._32_1.vb)]\n [!code-cpp[ITypeDescriptorFilterService#1](~/add/codesnippet/cpp/t-system.componentmodel._32_1.cpp)]"
  syntax:
    content: public interface ITypeDescriptorFilterService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "属性を通じてコンポーネントが公開されるフィルター処理、 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>です。"
  remarks: "このメソッドは、ユーザーが、コンポーネントの属性のセットを要求したときに呼び出されます。 属性の属性を使用してディクショナリに追加<xref:System.Attribute.TypeId%2A>キーと値として実際の属性です</xref:System.Attribute.TypeId%2A>。 このサービスを実装は、追加、削除、またはディクショナリ内の既存の属性エントリを変更できます。"
  syntax:
    content: public bool FilterAttributes (System.ComponentModel.IComponent component, System.Collections.IDictionary attributes);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "属性をフィルター処理するコンポーネント。"
    - id: attributes
      type: System.Collections.IDictionary
      description: "変更可能な属性のディクショナリ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>フィルター選択された属性のセットがキャッシュに保存する場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、フィルター サービスが再照会する必要があります。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "通じてコンポーネントが公開するイベントをフィルター処理、 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>です。"
  remarks: "このメソッドは、ユーザーが、コンポーネントのイベントのセットを要求したときに呼び出されます。 イベントは、キーと、対応するイベント名を使用してディクショナリに追加されます<xref:System.ComponentModel.EventDescriptor>値としてオブジェクト</xref:System.ComponentModel.EventDescriptor>。 このサービスを実装は、追加、削除、またはディクショナリ内のイベント エントリを変更できます。"
  syntax:
    content: public bool FilterEvents (System.ComponentModel.IComponent component, System.Collections.IDictionary events);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "イベントをフィルター処理コンポーネントです。"
    - id: events
      type: System.Collections.IDictionary
      description: "変更可能なイベントのディクショナリ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>フィルター選択されたイベントのセットがキャッシュに保存する場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、フィルター サービスが再照会する必要があります。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  id: FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  langs:
  - csharp
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "通じてコンポーネントが公開するプロパティをフィルター処理、 <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;></xref>です。"
  remarks: "このメソッドは、ユーザーは、一連のコンポーネントのプロパティを要求したときに呼び出されます。 プロパティは、キーと、対応するとしてプロパティ名を使用してディクショナリに追加されます<xref:System.ComponentModel.PropertyDescriptor>値としてオブジェクト</xref:System.ComponentModel.PropertyDescriptor>。 このサービスを実装は、追加、削除、またはディクショナリ内のエントリのプロパティを変更できます。"
  syntax:
    content: public bool FilterProperties (System.ComponentModel.IComponent component, System.Collections.IDictionary properties);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "プロパティをフィルター処理するコンポーネント。"
    - id: properties
      type: System.Collections.IDictionary
      description: "変更できるプロパティのディクショナリ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>フィルター選択されたプロパティのセットがキャッシュに保存する場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、フィルター サービスが再照会する必要があります。"
  overload: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes(IComponent,IDictionary)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(System.ComponentModel.IComponent,System.Collections.IDictionary)
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties(IComponent,IDictionary)
  nameWithType: ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
  fullName: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties(IComponent,IDictionary)
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterAttributes*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterAttributes
  nameWithType: ITypeDescriptorFilterService.FilterAttributes
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterEvents*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterEvents
  nameWithType: ITypeDescriptorFilterService.FilterEvents
- uid: System.ComponentModel.Design.ITypeDescriptorFilterService.FilterProperties*
  parent: System.ComponentModel.Design.ITypeDescriptorFilterService
  isExternal: false
  name: FilterProperties
  nameWithType: ITypeDescriptorFilterService.FilterProperties
