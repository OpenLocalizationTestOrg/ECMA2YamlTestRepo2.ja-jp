### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Adapters.ControlAdapter
  id: ControlAdapter
  children:
  - System.Web.UI.Adapters.ControlAdapter.#ctor
  - System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.Browser
  - System.Web.UI.Adapters.ControlAdapter.Control
  - System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  - System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  - System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  - System.Web.UI.Adapters.ControlAdapter.Page
  - System.Web.UI.Adapters.ControlAdapter.PageAdapter
  - System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  - System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  langs:
  - csharp
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
  type: Class
  summary: "アダプターをアタッチする、既定のマークアップまたは特定のブラウザーの動作を変更する派生したコントロールの表示をカスタマイズし、アダプターを継承するすべてのコントロールから基本クラスです。"
  remarks: "管理アダプターは、特定のオーバーライド コンポーネント<xref:System.Web.UI.Control>クラス メソッドやブラウザーまたはマークアップ固有の処理を許可する実行のライフ サイクルのイベント</xref:System.Web.UI.Control>。 .NET Framework がマップに&1; つの派生コントロール アダプター、<xref:System.Web.UI.Control>クライアント要求ごとのオブジェクト</xref:System.Web.UI.Control>。       アダプターでは、特定のブラウザーまたはブラウザーのクラスのコントロールを変更するか、一部の機能に対しては任意のフィルターとして機能します。 通常、アダプターは、(たとえば、XHTML または HTML 3.2) ブラウザーで使用するマークアップ言語によって定義されます。 レンダリング動作に適応性の多くは、特化された<xref:System.Web.UI.HtmlTextWriter>クラス</xref:System.Web.UI.HtmlTextWriter>から派生するクラスにカプセル化できます。 したがって、さまざまなブラウザー クラスの動作、またはその信頼に適応性の&1; つのアダプターを使用できることが可能性が、<xref:System.Web.UI.HtmlTextWriter>クラスを不要なコントロール アダプターの使用して使用する可能性があります</xref:System.Web.UI.HtmlTextWriter>。       コントロール クラスのアダプターは、専用のアダプターが存在しない限り、そのクラスから継承するすべてのコントロールに適用されます。 たとえば、アダプターを<xref:System.Web.UI.WebControls.BaseValidator>すべてのクラスを使用できます`Validator`オブジェクト</xref:System.Web.UI.WebControls.BaseValidator>。       アダプター通常を継承しませんが、コントロール型と対象のブラウザーや必要な特定の表示に固有の追加機能を提供するターゲット固有のアダプターの基本クラスのいずれかからある ControlAdapter クラスから直接。       コントロール自体では、アダプターは必ずしも必要はありません。 コントロールは、コンポジションを介して拡張は場合、通常、子コントロールのアダプターで十分です。       各コントロールには、.browser 定義ファイルからアダプターへの明示的なマッピングがあります。 したがって、いずれかへのアクセスを<xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>プロパティの使用、<xref:System.Web.HttpBrowserCapabilities>コントロール アダプターのマッピングの参照を実行するブラウザー定義ファイルから抽出されるオブジェクト</xref:System.Web.HttpBrowserCapabilities></xref:System.Web.UI.Control.Adapter%2A?displayProperty=fullName>。       処理中には、.NET Framework は、ターゲット固有の可能性があるコントロールのオーバーライド可能なメソッドの呼び出しを受け取ります。 コントロール アダプターが接続されている場合、.NET Framework は、関連付けられているアダプターのメソッドを呼び出します。       アダプターを使用してコントロールのレンダリングを実行する、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。 オーバーライドされると場合、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>可能性のある呼び出さないでください基本クラスの実装に呼び出しを実行するため、<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>メソッド。</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> </xref:System.Web.UI.Adapters.ControlAdapter.Render%2A> 。 アダプターの&1; 回で&1; 回、およびコントロールで&2; 回、発生するレンダリングする可能性があります。       <xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>メソッドの呼び出しをに基づいて、<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>コントロールのメソッド</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName></xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。 したがって、オーバーライドする場合は<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>を実装するレンダリングはでさらに提供する場合を除き、基本クラスの実装を呼び出す必要がありますいない<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>コントロールの</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName></xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。       .NET Framework 実行するインターセプション子コントロールのアダプターを確認する必要があります。 呼び出すことによってこれを行う、<xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>呼び出すメソッドの基本、 <xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName>、コントロールのメソッドから、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>をオーバーライドします</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A></xref:System.Web.UI.Control.RenderChildren%2A?displayProperty=fullName></xref:System.Web.UI.Adapters.ControlAdapter.RenderChildren%2A>。       <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>と<xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>メソッドがコントロールによって呼び出される直前と直後にコントロールの呼び出し (それぞれ)、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A></xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A></xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>。 前と後のレンダリングは唯一のブラウザー固有処理<xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A><xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A><xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>をオーバーライドする必要がないことを行うことがあります</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>と</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>を使用して、必要なタスク <xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A><xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>メソッドは、 <xref:System.Web.UI.HtmlTextWriter>。</xref:System.Web.UI.HtmlTextWriter>の対応するメソッドを呼び出す</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>と</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>既定の動作       コントロール アダプターには、独自の状態情報を維持するには、オーバーライド、 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>、および<xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>。 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>、および<xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>プライベート コントロールとビューの状態が保存され、それぞれ読み込まれるときに呼び出される。</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A> </xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A></xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>       <xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A>、 <xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A>、および<xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A>base 対応に戻すメソッドの呼び出し<xref:System.Web.UI.Control>クラス メソッド</xref:System.Web.UI.Control></xref:System.Web.UI.Adapters.ControlAdapter.OnUnload%2A></xref:System.Web.UI.Adapters.ControlAdapter.OnPreRender%2A></xref:System.Web.UI.Adapters.ControlAdapter.OnLoad%2A></xref:System.Web.UI.Adapters.ControlAdapter.OnInit%2A>。 したがって、オーバーライドされたこれらのある ControlAdapter メソッドのいずれかの基本メソッドを呼び出す必要があります。イベントに関連付けられているそれ以外の場合、<xref:System.Web.UI.Control>クラスのメソッドは発生しません</xref:System.Web.UI.Control>。       コントロールとアダプターが必要に応じて実装の<xref:System.Web.UI.IPostBackDataHandler>と<xref:System.Web.UI.IPostBackEventHandler>インターフェイス</xref:System.Web.UI.IPostBackEventHandler></xref:System.Web.UI.IPostBackDataHandler>。 .NET Framework は、アダプターが存在するかどうかと、アダプターがこれらのインターフェイスを実装するかどうかを判断します。 場合は、アダプターをオーバーライドする必要があります、 <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>、 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A>、および<xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A>メソッドは、必要に応じて</xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A></xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A></xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A>。 ポストバック データが、アダプターで認識されない場合は、それを処理するコントロールにコールバックする必要があります。 後続のイベント ハンドラーは、コントロールに戻る呼び出す必要があります。"
  syntax:
    content: public abstract class ControlAdapter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref>クラスです。"
  remarks: ".NET Framework は、対応する、作成時に内部的にこのアダプターを構築<xref:System.Web.UI.Control>オブジェクト</xref:System.Web.UI.Control>。"
  syntax:
    content: protected ControlAdapter ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  id: BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "コントロールのレンダリングの前に呼び出されます。 アダプターの派生クラスである特定のターゲットに必要な HTML ブラウザーを必要としませんが、開始タグを生成します。"
  remarks: "BeginRender メソッドが直前に呼び出されます、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>メソッド、コントロールのレンダリングの前にターゲット固有の処理を実行するために使用します</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。       組み合わせて BeginRender メソッドを使用して、<xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>メソッドを開始タグと終了タグの整合性を確認してください</xref:System.Web.UI.Adapters.ControlAdapter.EndRender%2A>。"
  syntax:
    content: protected virtual void BeginRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ターゲット固有の出力を表示するためにメソッドを含むです。"
  overload: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  id: Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "現在の HTTP 要求を行っているクライアントのブラウザーの機能への参照を取得します。"
  remarks: "A<xref:System.Web.UI.Adapters.ControlAdapter>オブジェクトからクライアント ブラウザーの性能を決定する、<xref:System.Web.HttpBrowserCapabilities>ブラウザー プロパティによって返されるオブジェクト</xref:System.Web.HttpBrowserCapabilities></xref:System.Web.UI.Adapters.ControlAdapter>。 これにより、<xref:System.Web.UI.Adapters.ControlAdapter>ブラウザー固有のマークアップを表示するか、それ以外の場合、 <xref:System.Web.UI.Control>。</xref:System.Web.UI.Control>の動作を変更するオブジェクト</xref:System.Web.UI.Adapters.ControlAdapter>"
  example:
  - "The following code example shows how to use the Browser property to access the details of the requesting browser. In this example, the code checks to determine whether the browser is compatible with JavaScript, and then allows the developer to render customized output in that case.  \n  \n [!code-cpp[ControlAdapter_Browser#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_1_1.cpp)]\n [!code-vb[ControlAdapter_Browser#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_1_1.vb)]\n [!code-cs[ControlAdapter_Browser#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_1_1.cs)]"
  syntax:
    content: protected System.Web.HttpBrowserCapabilities Browser { get; }
    return:
      type: System.Web.HttpBrowserCapabilities
      description: "<xref href=&quot;System.Web.HttpBrowserCapabilities&quot;> </xref>クライアント ブラウザーおよびマークアップの機能を指定します。"
  overload: System.Web.UI.Adapters.ControlAdapter.Browser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  id: Control
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "このコントロール アダプターが接続されているコントロールへの参照を取得します。"
  remarks: "派生コントロール アダプターがコントロールに関連付けられている場合、.NET Framework は、コントロールのメンバーではなく特定のアダプター メンバーを呼び出します。"
  example:
  - "The following code example shows how to derive a custom control from the <xref:System.Web.UI.Control> class, and then create a corresponding adapter that inherits from the <xref:System.Web.UI.Adapters.ControlAdapter> class. The adapter overrides the Control property and returns a strongly-typed reference to the control.  \n  \n [!code-cs[ControlAdapter.Control#1](~/add/codesnippet/csharp/p-system.web.ui.adapters_0_1.cs)]\n [!code-vb[ControlAdapter.Control#1](~/add/codesnippet/visualbasic/p-system.web.ui.adapters_0_1.vb)]\n [!code-cpp[ControlAdapter.Control#1](~/add/codesnippet/cpp/p-system.web.ui.adapters_0_1.cpp)]"
  syntax:
    content: protected System.Web.UI.Control Control { get; }
    return:
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>先である<xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;></xref>がアタッチされています。"
  overload: System.Web.UI.Adapters.ControlAdapter.Control*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "ターゲット固有の子の複合コントロールのコントロールを作成します。"
  remarks: "派生コントロール アダプターに接続がある場合、<xref:System.Web.UI.Control>の代わりに、上書きと呼ばれるオブジェクトとメソッドがオーバーライド CreateChildControls、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName></xref:System.Web.UI.Control>。 したがって、CreateChildControls を使用して、ターゲット固有の子コントロールのセットを作成できます。       詳細については、新しいコントロールを作成するコントロールを組み合わせて、次を参照してください。[複合コントロール](http://msdn.microsoft.com/en-us/fb174677-d845-467c-8bf3-cc096b2490b0)です。"
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  id: EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "コントロールのレンダリング後に呼び出されます。 アダプターの派生クラスでタグと終了タグにある特定のターゲットに必要な HTML ブラウザーを必要としませんが生成されます。"
  remarks: "EndRender メソッドの直後に、<xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>メソッド、コントロールのレンダリング後にターゲット固有の後処理を実行するために使用されます</xref:System.Web.UI.Adapters.ControlAdapter.Render%2A>。       組み合わせて EndRender メソッドを使用して、<xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>メソッドを開始タグと終了タグの整合性を確認してください</xref:System.Web.UI.Adapters.ControlAdapter.BeginRender%2A>。"
  syntax:
    content: protected virtual void EndRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ターゲット固有の出力を表示するためにメソッドを含むです。"
  overload: System.Web.UI.Adapters.ControlAdapter.EndRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  id: LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "によって保存されたアダプター コントロールの状態情報を読み込みます<xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>このコントロール アダプターに関連付けられているコントロールが存在するページに前の要求中に</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*>。"
  remarks: "コントロールの状態は、重要な状態情報のビュー ステートが無効になっている場合でも必要です。 アダプターは、独自のコントロールの状態情報を維持する必要があります、ときに、LoadAdapterControlState をオーバーライドできますと<xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState%2A>。       アダプターは、状態を要求、関連付けられたコントロールの状態から独立して間で維持する必要がある機能がある場合は、コントロールの状態情報を維持する必要があります。 大規模なテキスト形式で表示およびのグループから成る複合コントロールなど、<xref:System.Web.UI.WebControls.RadioButton>コントロールは、デスクトップ コンピューター ブラウザー上で&1; つのビューとしてレンダリング可能性があります</xref:System.Web.UI.WebControls.RadioButton>。 他のブラウザーで分割、レンダリング-テキストの表示は、もう一方のラジオ ボタン グループの&1; つのビューです。 アダプターは、現在アクティブなビューに関する独自のターゲット固有情報を保持する必要があります。       直後後に LoadAdapterControlState メソッドが呼び出される、<xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>メソッドで、`LoadState`ライフ サイクルの段階</xref:System.Web.UI.Control.LoadControlState%2A?displayProperty=fullName>。 アダプターのコントロールの状態は、独立したコントロールのコントロールの状態だけでなくです。"
  syntax:
    content: protected virtual void LoadAdapterControlState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>として、アダプターのコントロールの状態情報を含む、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref></xref:System.Object> 。"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  id: LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "によって保存されたアダプター ビュー状態情報を読み込みます<xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>このコントロール アダプターに関連付けられているコントロールが存在するページに前の要求中に</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*>。"
  remarks: "アダプターは、独自のビュー状態情報を保持する必要があります、ときに、LoadAdapterViewState をオーバーライドできますと<xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState%2A>。       アダプターは、データが関連付けられたコントロールのビューステートから独立しての要求にわたって保持する必要があるときに、ビュー状態情報を維持する必要があります。 たとえば、デスクトップ コンピューター ブラウザー上のグリッド コントロールは、行の&1; つのビューと値の列としてレンダリング可能性があります。 他のブラウザーで、レンダリングの行と&1; つの行の詳細の一覧などの複数のビューに分割します。 アダプターは、ビューいない現在アクティブな状態にあるビューのデータを維持する必要があります。       LoadAdapterViewState メソッドは、直前に呼び出されますが、<xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>メソッドで、`LoadState`ライフ サイクルの段階</xref:System.Web.UI.Control.LoadViewState%2A?displayProperty=fullName>。 アダプターのビュー状態とは別されてだけでなく、コントロールのビュー ステート。"
  syntax:
    content: protected virtual void LoadAdapterViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>としてアダプター ビュー状態情報を格納する、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref></xref:System.Object> 。"
  overload: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "上書き、<xref:System.Web.UI.Control.OnInit*>関連付けられたコントロールのメソッド</xref:System.Web.UI.Control.OnInit*>。"
  remarks: "アダプターが接続がある場合、<xref:System.Web.UI.Control>オブジェクトとメソッドがオーバーライド OnInit、オーバーライド メソッドは呼び出される代わりに、<xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.OnInit%2A?displayProperty=fullName></xref:System.Web.UI.Control>。       オーバーライドのターゲット固有の処理を実行する OnInit、`Initialize`コントロール ライフ サイクルの段階です。 通常、これらは、コントロールが作成されるときに実行される関数です。"
  example:
  - "The following code sample derives a custom control adapter from the <xref:System.Web.UI.Adapters.ControlAdapter> class. It then overrides the OnInit method to set a property on the associated control and call the base method to complete the control initialization.  \n  \n [!code-cs[ControlAdapter_OnInit#1](~/add/codesnippet/csharp/m-system.web.ui.adapters_1.cs)]\n [!code-vb[ControlAdapter_OnInit#1](~/add/codesnippet/visualbasic/m-system.web.ui.adapters_1.vb)]\n [!code-cpp[ControlAdapter_OnInit#1](~/add/codesnippet/cpp/m-system.web.ui.adapters_1.cpp)]"
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Adapters.ControlAdapter.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "上書き、<xref:System.Web.UI.Control.OnLoad*>関連付けられたコントロールのメソッド</xref:System.Web.UI.Control.OnLoad*>。"
  remarks: "アダプターが接続がある場合、<xref:System.Web.UI.Control>の代わりにオーバーライド メソッドを呼び出すオブジェクトとメソッドをオーバーライドするオンロード、<xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.OnLoad%2A?displayProperty=fullName></xref:System.Web.UI.Control>。       ターゲット固有の処理を実行するオンロード メソッドをオーバーライドして、`Load`コントロール ライフ サイクルの段階です。 通常、これらは、クライアント要求ごとに実行する必要がある機能です。"
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "上書き、<xref:System.Web.UI.Control.OnPreRender*>関連付けられたコントロールのメソッド</xref:System.Web.UI.Control.OnPreRender*>。"
  remarks: "アダプターが接続がある場合、<xref:System.Web.UI.Control>オブジェクトとメソッドがオーバーライド OnPreRender、オーバーライド メソッドは呼び出される代わりに、<xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.OnPreRender%2A?displayProperty=fullName></xref:System.Web.UI.Control>。       ターゲット固有の処理を実行する OnPreRender メソッドをオーバーライドして、`PreRender`コントロール ライフ サイクルの段階です。 通常、これらは、コントロールの出力の表示の直前にある機能です。"
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "上書き、<xref:System.Web.UI.Control.OnUnload*>関連付けられたコントロールのメソッド</xref:System.Web.UI.Control.OnUnload*>。"
  remarks: "アダプターが接続がある場合、<xref:System.Web.UI.Control>オブジェクトとメソッドがオーバーライド OnUnload では、オーバーライド メソッドは呼び出される代わりに、<xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.Control.OnUnload%2A?displayProperty=fullName></xref:System.Web.UI.Control>。       ターゲット固有の処理を行う OnUnload メソッドをオーバーライドして、`Unload`コントロール ライフ サイクルの段階です。 通常、これらは、コントロールの破棄を直前のクリーンアップ機能です。"
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  id: Page
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "このアダプターに関連付けられているコントロールが存在するページへの参照を取得します。"
  remarks: "ページのプロパティへのアクセスを提供する、<xref:System.Web.UI.Page?displayProperty=fullName>コントロールが置かれているオブジェクト</xref:System.Web.UI.Page?displayProperty=fullName>。"
  syntax:
    content: protected System.Web.UI.Page Page { get; }
    return:
      type: System.Web.UI.Page
      description: "A <xref href=&quot;System.Web.UI.Page&quot;> </xref>関連付けられたコントロールの配置場所ページ インスタンスへのアクセスを提供します。"
  overload: System.Web.UI.Adapters.ControlAdapter.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "関連付けられているコントロールが存在するページのページ アダプターへの参照を取得します。"
  remarks: "PageAdapter プロパティへのアクセスを提供する、<xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>オブジェクトに対する、<xref:System.Web.UI.Page>オブジェクト場所、<xref:System.Web.UI.Control>に現在関連付けられているオブジェクト<xref:System.Web.UI.Adapters.ControlAdapter>オブジェクトを配置します</xref:System.Web.UI.Adapters.ControlAdapter></xref:System.Web.UI.Control></xref:System.Web.UI.Page></xref:System.Web.UI.Adapters.PageAdapter?displayProperty=fullName>。       PageAdapter プロパティは、ページ上のいくつかのコントロール型に適用できる共通のターゲットに固有の機能など、ページ アダプター レベルであるその他のアイテムへのアクセスに使用できます。"
  syntax:
    content: protected System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "A <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> 、現在のコントロールが関連付けられているページの<xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;></xref>位置します。"
  overload: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "コントロール アダプターが接続されているコントロールのターゲット固有マークアップを生成します。"
  remarks: "クライアントのブラウザーに送信するターゲット固有マークアップを生成する Render メソッドをオーバーライドします。 Render メソッドの代わりに、<xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>メソッド場合、<xref:System.Web.UI.Adapters.ControlAdapter>オブジェクトにアタッチされて、<xref:System.Web.UI.Control>オブジェクト</xref:System.Web.UI.Control></xref:System.Web.UI.Adapters.ControlAdapter></xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>。"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ターゲット固有の出力を表示するために使用します。"
  overload: System.Web.UI.Adapters.ControlAdapter.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "コントロール アダプターが接続されている複合コントロールで子コントロールのターゲット固有マークアップを生成します。"
  remarks: "個々 の子コントロールのマークアップだけでなく、複合コントロールの子コントロール セットのターゲット固有マークアップを生成する必要がある場合は、RenderChildren メソッドをオーバーライドします。"
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ターゲット固有の出力を表示するために使用します。"
  overload: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  id: SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "コントロールのコントロール アダプターの状態情報を保存します。"
  remarks: "コントロールの状態は、重要な状態情報のビュー ステートが無効になっている場合でも必要です。 アダプターは、独自のコントロールの状態情報を維持する必要があります、ときに、SaveAdapterControlState をオーバーライドできますと<xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState%2A>。       アダプターは、状態を要求、関連付けられたコントロールの状態から独立して間で維持する必要がある機能がある場合は、コントロールの状態情報を維持する必要があります。 大規模なテキスト形式で表示およびのグループから成る複合コントロールなど、<xref:System.Web.UI.WebControls.RadioButton>コントロールは、デスクトップ コンピューター ブラウザー上で&1; つのビューとしてレンダリング可能性があります</xref:System.Web.UI.WebControls.RadioButton>。 他のブラウザーで分割、レンダリング-テキストの表示は、もう一方のラジオ ボタン グループの&1; つのビューです。 アダプターは、現在アクティブなビューに関する独自のターゲット固有情報を保持する必要があります。       直後後に SaveAdapterControlState メソッドが呼び出される、<xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>メソッドで、`SaveState`ライフ サイクルの段階</xref:System.Web.UI.Control.SaveControlState%2A?displayProperty=fullName>。 アダプターのコントロールの状態は、独立したコントロールのコントロールの状態だけでなくです。"
  syntax:
    content: protected virtual object SaveAdapterControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>として、アダプターのコントロールの状態情報を含む、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref></xref:System.Object> 。"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  id: SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  langs:
  - csharp
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.Adapters
  summary: "節約は、コントロール アダプターの状態情報を表示します。"
  remarks: "アダプターは、独自のビュー状態情報を保持する必要があります、ときに、SaveAdapterViewState をオーバーライドできますと<xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>メソッド</xref:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState%2A>。       アダプターは、データがコントロールの関連するビュー状態から独立しての要求にわたって保持する必要があるときに状態情報を維持する必要があります。 たとえば、デスクトップ コンピューター ブラウザー上のグリッド コントロールは、行の&1; つのビューと値の列としてレンダリング可能性があります。 他のブラウザーで、レンダリングの行と&1; つの行の詳細の一覧などの複数のビューに分割します。 アダプターは、ビューいない現在アクティブな状態にあるビューのデータを維持する必要があります。       SaveAdapterViewState メソッドは、直前に呼び出されますが、<xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>メソッドで、`SaveState`ライフ サイクルの段階</xref:System.Web.UI.Control.SaveViewState%2A?displayProperty=fullName>。 アダプターのビュー状態とは別されてだけでなく、コントロールのビュー ステート。"
  syntax:
    content: protected virtual object SaveAdapterViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>としてアダプター ビュー状態情報を格納する、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref></xref:System.Object> 。"
  overload: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter()
  nameWithType: ControlAdapter.ControlAdapter()
  fullName: System.Web.UI.Adapters.ControlAdapter.ControlAdapter()
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender(HtmlTextWriter)
  nameWithType: ControlAdapter.BeginRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.BeginRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Adapters.ControlAdapter.Browser
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
  fullName: System.Web.UI.Adapters.ControlAdapter.Browser
- uid: System.Web.HttpBrowserCapabilities
  parent: System.Web
  isExternal: false
  name: HttpBrowserCapabilities
  nameWithType: HttpBrowserCapabilities
  fullName: System.Web.HttpBrowserCapabilities
- uid: System.Web.UI.Adapters.ControlAdapter.Control
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
  fullName: System.Web.UI.Adapters.ControlAdapter.Control
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls()
  nameWithType: ControlAdapter.CreateChildControls()
  fullName: System.Web.UI.Adapters.ControlAdapter.CreateChildControls()
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender(HtmlTextWriter)
  nameWithType: ControlAdapter.EndRender(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.EndRender(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState(Object)
  nameWithType: ControlAdapter.LoadAdapterControlState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState(Object)
  nameWithType: ControlAdapter.LoadAdapterViewState(Object)
  fullName: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(Object)
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ControlAdapter.OnInit(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: ControlAdapter.OnLoad(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnLoad(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: ControlAdapter.OnPreRender(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnPreRender(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload(System.EventArgs)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: ControlAdapter.OnUnload(EventArgs)
  fullName: System.Web.UI.Adapters.ControlAdapter.OnUnload(EventArgs)
- uid: System.Web.UI.Adapters.ControlAdapter.Page
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
  fullName: System.Web.UI.Adapters.ControlAdapter.Page
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: ControlAdapter.Render(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.Render(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: ControlAdapter.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Adapters.ControlAdapter.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState()
  nameWithType: ControlAdapter.SaveAdapterControlState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState()
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState()
  nameWithType: ControlAdapter.SaveAdapterViewState()
  fullName: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState()
- uid: System.Web.UI.Adapters.ControlAdapter.#ctor*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter.ControlAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.BeginRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: BeginRender
  nameWithType: ControlAdapter.BeginRender
- uid: System.Web.UI.Adapters.ControlAdapter.Browser*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Browser
  nameWithType: ControlAdapter.Browser
- uid: System.Web.UI.Adapters.ControlAdapter.Control*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Control
  nameWithType: ControlAdapter.Control
- uid: System.Web.UI.Adapters.ControlAdapter.CreateChildControls*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: CreateChildControls
  nameWithType: ControlAdapter.CreateChildControls
- uid: System.Web.UI.Adapters.ControlAdapter.EndRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: EndRender
  nameWithType: ControlAdapter.EndRender
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterControlState
  nameWithType: ControlAdapter.LoadAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: LoadAdapterViewState
  nameWithType: ControlAdapter.LoadAdapterViewState
- uid: System.Web.UI.Adapters.ControlAdapter.OnInit*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnInit
  nameWithType: ControlAdapter.OnInit
- uid: System.Web.UI.Adapters.ControlAdapter.OnLoad*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnLoad
  nameWithType: ControlAdapter.OnLoad
- uid: System.Web.UI.Adapters.ControlAdapter.OnPreRender*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnPreRender
  nameWithType: ControlAdapter.OnPreRender
- uid: System.Web.UI.Adapters.ControlAdapter.OnUnload*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: OnUnload
  nameWithType: ControlAdapter.OnUnload
- uid: System.Web.UI.Adapters.ControlAdapter.Page*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Page
  nameWithType: ControlAdapter.Page
- uid: System.Web.UI.Adapters.ControlAdapter.PageAdapter*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: PageAdapter
  nameWithType: ControlAdapter.PageAdapter
- uid: System.Web.UI.Adapters.ControlAdapter.Render*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: Render
  nameWithType: ControlAdapter.Render
- uid: System.Web.UI.Adapters.ControlAdapter.RenderChildren*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: RenderChildren
  nameWithType: ControlAdapter.RenderChildren
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterControlState
  nameWithType: ControlAdapter.SaveAdapterControlState
- uid: System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState*
  parent: System.Web.UI.Adapters.ControlAdapter
  isExternal: false
  name: SaveAdapterViewState
  nameWithType: ControlAdapter.SaveAdapterViewState
