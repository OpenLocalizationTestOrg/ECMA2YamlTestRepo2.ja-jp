### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.StringDictionary
  id: StringDictionary
  children:
  - System.Collections.Specialized.StringDictionary.#ctor
  - System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  - System.Collections.Specialized.StringDictionary.Clear
  - System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  - System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  - System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.StringDictionary.Count
  - System.Collections.Specialized.StringDictionary.GetEnumerator
  - System.Collections.Specialized.StringDictionary.IsSynchronized
  - System.Collections.Specialized.StringDictionary.Item(System.String)
  - System.Collections.Specialized.StringDictionary.Keys
  - System.Collections.Specialized.StringDictionary.Remove(System.String)
  - System.Collections.Specialized.StringDictionary.SyncRoot
  - System.Collections.Specialized.StringDictionary.Values
  langs:
  - csharp
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
  type: Class
  summary: "オブジェクトではなく、文字列であることを厳密に型指定された、キーと値を持つハッシュ テーブルを実装します。"
  remarks: "キーには`null`値のことができますが、します。       大文字と小文字でキーが処理されます。文字列ディクショナリを使用する前に小文字に変換されます。       .NET framework バージョン 1.0 では、このクラスは、カルチャに依存した文字列比較を使用します。 ただし、.NET framework version 1.1 以降では、このクラスを使用して<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>文字列を比較するときにします</xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName>。 比較と並べ替えのカルチャのしくみの詳細については、次を参照してください。[カルチャを認識しない文字列操作の実行](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates several of the properties and methods of StringDictionary.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/t-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/t-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/t-system.collections.spe_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer("System.Diagnostics.Design.StringDictionaryCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class StringDictionary : System.Collections.IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: StringDictionary()
  nameWithType: StringDictionary.StringDictionary()
  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、o (1) 操作です。"
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/cpp/m-system.collections.spe_11_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/csharp/m-system.collections.spe_11_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#1](~/add/codesnippet/visualbasic/m-system.collections.spe_11_1.vb)]"
  syntax:
    content: public StringDictionary ();
    parameters: []
  overload: System.Collections.Specialized.StringDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: StringDictionary.Add(String,String)
  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "指定したキーと値を持つエントリを追加、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: "大文字と小文字でキーが処理されます。文字列ディクショナリに追加される前に小文字に変換されます。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/24bf4a19-6a1d-4d4c-ba1b-_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/24bf4a19-6a1d-4d4c-ba1b-_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/24bf4a19-6a1d-4d4c-ba1b-_1.vb)]"
  syntax:
    content: public virtual void Add (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "追加するエントリのキー。"
    - id: value
      type: System.String
      description: "追加するエントリの値。 値を指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.StringDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "同じキーを持つエントリは既に、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: StringDictionary.Clear()
  fullName: System.Collections.Specialized.StringDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "すべてのエントリを削除、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: "このメソッドは、O (`n`) 操作では、ここで`n` <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>は、"
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_10_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_10_1.vb)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Collections.Specialized.StringDictionary.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: StringDictionary.ContainsKey(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "かどうかを<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>特定のキーが含まれています。"
  remarks: "大文字と小文字でキーが処理されます。使用前に小文字に変換されます。       このメソッドは、o (1) 操作です。       以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を決定するかどうか`item`が存在します</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。 .NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`コレクション内のオブジェクトのパラメーターです</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_27_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_27_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_27_1.vb)]"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "内で検索するキー、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref> 、指定したエントリを含むキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.StringDictionary.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  id: ContainsValue(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: ContainsValue(String)
  nameWithType: StringDictionary.ContainsValue(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "かどうかを<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>特定の値が含まれています。"
  remarks: "StringDictionary の要素の値を使用して、指定した値に比較されます、<xref:System.Object.Equals%2A?displayProperty=fullName>メソッド</xref:System.Object.Equals%2A?displayProperty=fullName>。       このメソッドは、一方向の検索を実行します。したがって、平均実行時間は<xref:System.Collections.Specialized.StringDictionary.Count%2A>。</xref:System.Collections.Specialized.StringDictionary.Count%2A>に比例して つまり、このメソッドは、O (`n`) 操作では、ここで`n` <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>は、       以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`item`を決定するかどうか`item`が存在します</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。 .NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`item`コレクション内のオブジェクトのパラメーターです</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_40_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_40_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_40_1.vb)]"
  syntax:
    content: public virtual bool ContainsValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "内で検索する値、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。 値を指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>指定した値を持つ要素が含まれています。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.StringDictionary.ContainsValue*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: StringDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "文字列ディクショナリの値を&1; 次元にコピー<xref:System.Array>インスタンスの指定したインデックス位置</xref:System.Array>。"
  remarks: "CopyTo に型をキャストできますオブジェクト<xref:System.Collections.DictionaryEntry?displayProperty=fullName>。</xref:System.Collections.DictionaryEntry?displayProperty=fullName>にコピーします。 <xref:System.Collections.DictionaryEntry>キーと値の両方が含まれています。</xref:System.Collections.DictionaryEntry>       要素がコピーに<xref:System.Array>は、列挙子が<xref:System.Collections.Specialized.StringDictionary>。</xref:System.Collections.Specialized.StringDictionary>を反復処理するのと同じ順序で並べ替えられます</xref:System.Array>       このメソッドは、O (`n`) 操作では、ここで`n` <xref:System.Collections.Specialized.StringDictionary.Count%2A>.</xref:System.Collections.Specialized.StringDictionary.Count%2A>は、"
  example:
  - "The following code example shows how a StringDictionary can be copied to an array.  \n  \n [!code-cpp[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/cpp/9e0b7952-2449-4de8-9ce1-_1.cpp)]\n [!code-cs[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/csharp/9e0b7952-2449-4de8-9ce1-_1.cs)]\n [!code-vb[System.Collections.Specialized.StringDictionary.CopyTo#1](~/add/codesnippet/visualbasic/9e0b7952-2449-4de8-9ce1-_1.vb)]"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 次元<xref:System.Array>からコピーされた値の変換先は、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref></xref:System.Array> 。"
    - id: index
      type: System.Int32
      description: "コピー開始位置、配列内のインデックス。"
  overload: System.Collections.Specialized.StringDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - 内の要素の数、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>から使用可能な領域より大きくなって<code>index</code>の末尾に<code>array</code>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>下限値よりも小さい<code>array</code>です。"
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Count
  id: Count
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Count
  nameWithType: StringDictionary.Count
  fullName: System.Collections.Specialized.StringDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "キー/値ペアの数を取得、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_0_1.vb)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "キー/値の数のペアで、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。       このプロパティの値を取得するは、o (1) 操作です。"
  overload: System.Collections.Specialized.StringDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: StringDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "文字列ディクショナリを反復処理する列挙子を返します。"
  remarks: "`foreach` C# 言語のステートメント (`for each` Visual Basic で)、列挙子の複雑さが隠されています。  したがってを使用して`foreach`列挙子を直接操作せずにお勧めします。       列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。       最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。 <xref:System.Collections.IEnumerator.Reset%2A>列挙子をこの位置に戻さ点もあります。</xref:System.Collections.IEnumerator.Reset%2A>  この位置にある<xref:System.Collections.IEnumerator.Current%2A>が定義されていません</xref:System.Collections.IEnumerator.Current%2A>。 したがって、 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.Current%2A>の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに</xref:System.Collections.IEnumerator.MoveNext%2A>呼び出す必要があります。       <xref:System.Collections.IEnumerator.Current%2A>いずれかのまで同じオブジェクトを返します<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>と呼びます</xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>設定<xref:System.Collections.IEnumerator.Current%2A>次の要素にします</xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>       場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`</xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`</xref:System.Collections.IEnumerator.MoveNext%2A>。 最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 <xref:System.Collections.IEnumerator.Current%2A>再度、コレクションの最初の要素に<xref:System.Collections.IEnumerator.Reset%2A><xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>続けて</xref:System.Collections.IEnumerator.Reset%2A>を呼び出すことができます</xref:System.Collections.IEnumerator.Current%2A>を設定するには       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。       列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。  列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。  読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/m-system.collections.spe_35_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/m-system.collections.spe_35_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/m-system.collections.spe_35_1.vb)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>文字列ディクショナリを反復処理する</xref:System.Collections.IEnumerator>。"
  overload: System.Collections.Specialized.StringDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "アクセスをするかどうかを示す値を取得、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>が同期されている (スレッド セーフである)。"
  remarks: "A<xref:System.Collections.Specialized.StringDictionary>インスタンスが同期されていません</xref:System.Collections.Specialized.StringDictionary>。 派生クラスでの同期されたバージョンを提供できる、<xref:System.Collections.Specialized.StringDictionary>を使用して、<xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A>プロパティ</xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A></xref:System.Collections.Specialized.StringDictionary>。       コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。"
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.StringDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_13_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_13_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_13_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセス、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>が同期 (スレッド セーフな) です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.StringDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Item(System.String)
  id: Item(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Item(String)
  nameWithType: StringDictionary.Item(String)
  fullName: System.Collections.Specialized.StringDictionary.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "取得または指定されたキーに関連付けられている値を設定します。"
  remarks: "大文字と小文字でキーが処理されます。使用前に小文字に変換されます。       キーには`null`値のことができますが、します。 区別するために`null`指定したキーが見つからないため、返されると`null`指定したキーの値が返される`null`を使用して、<xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A>一覧で、キーが存在するかどうかを決定するメソッド</xref:System.Collections.Specialized.StringDictionary.ContainsKey%2A>。       C# 言語では、キーワードを使用して、項目のプロパティを実装する代わりにインデクサーを定義します。 Visual Basic では、同様のインデックス機能を提供する既定のプロパティとして項目を実装します。       このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。"
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_17_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_17_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_17_1.vb)]"
  syntax:
    content: public virtual string this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "キー値を取得または設定します。"
    return:
      type: System.String
      description: "指定したキーに関連付けられている値。 かどうか、指定したキーが見つからない、Get を返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、し、セットが指定されたキーに新しいエントリを作成します。"
  overload: System.Collections.Specialized.StringDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: StringDictionary.Keys
  fullName: System.Collections.Specialized.StringDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "内のキーのコレクションを取得、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: "内のキーの順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられている値と同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Collections.Specialized.StringDictionary.Values%2A>メソッド</xref:System.Collections.Specialized.StringDictionary.Values%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。       返された<xref:System.Collections.ICollection>静的コピーではありません代わりに、 <xref:System.Collections.ICollection> <xref:System.Collections.Specialized.StringDictionary>。</xref:System.Collections.Specialized.StringDictionary>は元のキーを逆参照</xref:System.Collections.ICollection></xref:System.Collections.ICollection>。 そのため、変更<xref:System.Collections.Specialized.StringDictionary><xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>反映されるまでに続行</xref:System.Collections.Specialized.StringDictionary>するには       このプロパティの値を取得するは、o (1) 操作です。"
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/cpp/p-system.collections.spe_4_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/csharp/p-system.collections.spe_4_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#1](~/add/codesnippet/visualbasic/p-system.collections.spe_4_1.vb)]"
  syntax:
    content: public virtual System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>内のキーを提供する、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Collections.Specialized.StringDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)
  id: Remove(System.String)
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Remove(String)
  nameWithType: StringDictionary.Remove(String)
  fullName: System.Collections.Specialized.StringDictionary.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "文字列ディクショナリから指定したキーを持つエントリを削除します。"
  remarks: "場合、<xref:System.Collections.Specialized.StringDictionary>指定のキーを持つ要素が含まれていない、<xref:System.Collections.Specialized.StringDictionary>は変更されません</xref:System.Collections.Specialized.StringDictionary></xref:System.Collections.Specialized.StringDictionary>。 例外はスローされません。       大文字と小文字でキーが処理されます。文字列ディクショナリから削除するエントリを見つけるためには、使用前に小文字に変換されます。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example demonstrates how to add and remove elements from a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_25_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_25_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_25_1.vb)]"
  syntax:
    content: public virtual void Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "削除するエントリのキー。"
  overload: System.Collections.Specialized.StringDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The key is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
  fullName: System.Collections.Specialized.StringDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: "派生クラスは、独自の同期されたバージョンを指定できます、 <xref:System.Collections.Specialized.StringDictionary>SyncRoot プロパティを使用します</xref:System.Collections.Specialized.StringDictionary>。 同期されたコードでの操作を実行する必要があります、 <xref:System.Collections.Specialized.StringDictionary>、 <xref:System.Collections.Specialized.StringDictionary>.</xref:System.Collections.Specialized.StringDictionary>で直接</xref:System.Collections.Specialized.StringDictionary> これにより、他のオブジェクトから派生したコレクションを適切に操作します。 具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<xref:System.Collections.Specialized.StringDictionary>オブジェクト</xref:System.Collections.Specialized.StringDictionary>。       コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。"
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cpp[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/cpp/p-system.collections.spe_16_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/csharp/p-system.collections.spe_16_1.cs)]\n [!code-vb[System.Collection.Specialized.StringDictionary#2](~/add/codesnippet/visualbasic/p-system.collections.spe_16_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>へのアクセスを同期するために使用できる、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref></xref:System.Object> 。"
  overload: System.Collections.Specialized.StringDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.StringDictionary.Values
  id: Values
  parent: System.Collections.Specialized.StringDictionary
  langs:
  - csharp
  name: Values
  nameWithType: StringDictionary.Values
  fullName: System.Collections.Specialized.StringDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "値のコレクションを取得、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;></xref>です。"
  remarks: "内の値の順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられているキーと同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Collections.Specialized.StringDictionary.Keys%2A>メソッド</xref:System.Collections.Specialized.StringDictionary.Keys%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。       返された<xref:System.Collections.ICollection>静的コピーではありません代わりに、 <xref:System.Collections.ICollection> <xref:System.Collections.Specialized.StringDictionary>。</xref:System.Collections.Specialized.StringDictionary>は元の値を逆参照</xref:System.Collections.ICollection></xref:System.Collections.ICollection>。 そのため、変更<xref:System.Collections.Specialized.StringDictionary><xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>反映されるまでに続行</xref:System.Collections.Specialized.StringDictionary>するには       このプロパティの値を取得するは、o (1) 操作です。"
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.StringDictionary>.  \n  \n [!code-vb[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/visualbasic/p-system.collections.spe_18_1.vb)]\n [!code-cpp[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/cpp/p-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collection.Specialized.StringDictionary_Enumeration#2](~/add/codesnippet/csharp/p-system.collections.spe_18_1.cs)]"
  syntax:
    content: public virtual System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>内の値を提供する、 <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Collections.Specialized.StringDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Collections.Specialized.StringDictionary.#ctor
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: StringDictionary()
  nameWithType: StringDictionary.StringDictionary()
  fullName: System.Collections.Specialized.StringDictionary.StringDictionary()
- uid: System.Collections.Specialized.StringDictionary.Add(System.String,System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Add(String,String)
  nameWithType: StringDictionary.Add(String,String)
  fullName: System.Collections.Specialized.StringDictionary.Add(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.StringDictionary.Clear
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Clear()
  nameWithType: StringDictionary.Clear()
  fullName: System.Collections.Specialized.StringDictionary.Clear()
- uid: System.Collections.Specialized.StringDictionary.ContainsKey(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsKey(String)
  nameWithType: StringDictionary.ContainsKey(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsKey(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.StringDictionary.ContainsValue(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsValue(String)
  nameWithType: StringDictionary.ContainsValue(String)
  fullName: System.Collections.Specialized.StringDictionary.ContainsValue(String)
- uid: System.Collections.Specialized.StringDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: StringDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.StringDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.StringDictionary.Count
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Count
  nameWithType: StringDictionary.Count
  fullName: System.Collections.Specialized.StringDictionary.Count
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: StringDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.StringDictionary.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
  fullName: System.Collections.Specialized.StringDictionary.IsSynchronized
- uid: System.Collections.Specialized.StringDictionary.Item(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Item(String)
  nameWithType: StringDictionary.Item(String)
  fullName: System.Collections.Specialized.StringDictionary.Item(String)
- uid: System.Collections.Specialized.StringDictionary.Keys
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Keys
  nameWithType: StringDictionary.Keys
  fullName: System.Collections.Specialized.StringDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.StringDictionary.Remove(System.String)
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Remove(String)
  nameWithType: StringDictionary.Remove(String)
  fullName: System.Collections.Specialized.StringDictionary.Remove(String)
- uid: System.Collections.Specialized.StringDictionary.SyncRoot
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
  fullName: System.Collections.Specialized.StringDictionary.SyncRoot
- uid: System.Collections.Specialized.StringDictionary.Values
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Values
  nameWithType: StringDictionary.Values
  fullName: System.Collections.Specialized.StringDictionary.Values
- uid: System.Collections.Specialized.StringDictionary.#ctor*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary.StringDictionary
- uid: System.Collections.Specialized.StringDictionary.Add*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Add
  nameWithType: StringDictionary.Add
- uid: System.Collections.Specialized.StringDictionary.Clear*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Clear
  nameWithType: StringDictionary.Clear
- uid: System.Collections.Specialized.StringDictionary.ContainsKey*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsKey
  nameWithType: StringDictionary.ContainsKey
- uid: System.Collections.Specialized.StringDictionary.ContainsValue*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: ContainsValue
  nameWithType: StringDictionary.ContainsValue
- uid: System.Collections.Specialized.StringDictionary.CopyTo*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: CopyTo
  nameWithType: StringDictionary.CopyTo
- uid: System.Collections.Specialized.StringDictionary.Count*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Count
  nameWithType: StringDictionary.Count
- uid: System.Collections.Specialized.StringDictionary.GetEnumerator*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: StringDictionary.GetEnumerator
- uid: System.Collections.Specialized.StringDictionary.IsSynchronized*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: StringDictionary.IsSynchronized
- uid: System.Collections.Specialized.StringDictionary.Item*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Item
  nameWithType: StringDictionary.Item
- uid: System.Collections.Specialized.StringDictionary.Keys*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Keys
  nameWithType: StringDictionary.Keys
- uid: System.Collections.Specialized.StringDictionary.Remove*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Remove
  nameWithType: StringDictionary.Remove
- uid: System.Collections.Specialized.StringDictionary.SyncRoot*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: StringDictionary.SyncRoot
- uid: System.Collections.Specialized.StringDictionary.Values*
  parent: System.Collections.Specialized.StringDictionary
  isExternal: false
  name: Values
  nameWithType: StringDictionary.Values
