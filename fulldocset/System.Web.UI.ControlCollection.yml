### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlCollection
  id: ControlCollection
  children:
  - System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  - System.Web.UI.ControlCollection.Clear
  - System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.ControlCollection.Count
  - System.Web.UI.ControlCollection.GetEnumerator
  - System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.IsReadOnly
  - System.Web.UI.ControlCollection.IsSynchronized
  - System.Web.UI.ControlCollection.Item(System.Int32)
  - System.Web.UI.ControlCollection.Owner
  - System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  - System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  - System.Web.UI.ControlCollection.SyncRoot
  langs:
  - csharp
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
  type: Class
  summary: "その子コントロールの一覧を維持するために ASP.NET サーバー コントロールを有効にするコレクション コンテナーを提供します。"
  remarks: "任意のプロパティとを通じて ControlCollection クラスのメソッドにアクセスできる、<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>プロパティ</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>。 以降、<xref:System.Web.UI.Control>クラスは、すべての ASP.NET サーバー コントロールの基底クラス、すべてのサーバー コントロールは、このプロパティを継承します</xref:System.Web.UI.Control>。       コレクションの詳細については、次を参照してください。[コレクションとデータ構造体](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example overrides the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method to create two controls, both instances of the custom class named `ChildControl`, which has a string property named `Message`. When created, the two controls are added to the ControlCollection. The <xref:System.Web.UI.ControlCollection.Add%2A> method is called on each of these controls to add them to the class that contains this version of <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>. The <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` so that these controls will not be created again unnecessarily.  \n  \n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlc_0_1.vb)]\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/t-system.web.ui.controlc_0_1.cs)]"
  syntax:
    content: 'public class ControlCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  id: '#ctor(System.Web.UI.Control)'
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>指定された親サーバー コントロールのクラスです。"
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the constructor to write messages (which include the name of the <xref:System.Web.UI.ControlCollection.Owner%2A> property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_10_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_10_1.vb)]"
  syntax:
    content: public ControlCollection (System.Web.UI.Control owner);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "ASP.NET サーバー コントロールのコントロール コレクションを作成します。"
  overload: System.Web.UI.ControlCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "場合に発生、 <code> owner </code>パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  id: Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定した追加<xref href=&quot;System.Web.UI.Control&quot;></xref>オブジェクトをコレクション。"
  remarks: "新しいコントロールは、序数に基づくインデックスの配列の末尾に追加されます。 コントロールは、ASP.NET サーバー コントロールを作成すると、カスタム サーバー コントロールまたはリテラル コントロールのインスタンスを指定できます。       コレクションの特定のインデックス位置にコントロールを追加するには、使用、<xref:System.Web.UI.ControlCollection.AddAt%2A>メソッド</xref:System.Web.UI.ControlCollection.AddAt%2A>。"
  example:
  - "The following code example uses the Add method to add a series of template items, the number of which are taken from the server control's view state, to a custom templated control.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_5_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_5_1.vb)]"
  syntax:
    content: public virtual void Add (System.Web.UI.Control child);
    parameters:
    - id: child
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>コレクションに追加します。"
  overload: System.Web.UI.ControlCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "場合にスローされます、 <code> child </code>パラメーターで、コントロールが指定されていません。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "場合にスローされます、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  id: AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定した追加<xref href=&quot;System.Web.UI.Control&quot;></xref>オブジェクトを指定したインデックス位置にあるコレクション。"
  remarks: "追加したコントロールには、ASP.NET サーバー コントロールを作成すると、カスタム サーバー コントロールまたはリテラル コントロールのインスタンスを指定できます。"
  example:
  - "The following code example uses the AddAt method to create a new <xref:System.Web.UI.LiteralControl> named `ChildControl2` and add it to the `myButton` control's <xref:System.Web.UI.ControlCollection> collection at the index location of 1.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_0_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_0_1.aspx)]"
  syntax:
    content: public virtual void AddAt (int index, System.Web.UI.Control child);
    parameters:
    - id: index
      type: System.Int32
      description: "子コントロールを追加する位置を示す、配列内の位置。"
    - id: child
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>コレクションに追加します。"
  overload: System.Web.UI.ControlCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> child </code>パラメーターで、コントロールが指定されていません。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>パラメーターが&0; より大きいか小さい、 &lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;プロパティです。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Clear
  id: Clear
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "現在のサーバー コントロールのすべてのコントロールを削除<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>オブジェクト。"
  remarks: "このメソッドを使用して、空のカスタム コントロールの<xref:System.Web.UI.ControlCollection>オーバーライドする場合、<xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName>と<xref:System.Web.UI.Control.DataBind%2A>メソッド</xref:System.Web.UI.Control.DataBind%2A></xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName></xref:System.Web.UI.ControlCollection>。 複合、テンプレートのコントロールまたはテンプレート宣言されたデータ バインド コントロールを開発する際に、これを行います。"
  example:
  - "The following code example demonstrates overriding the <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=fullName> method, and using the Clear method to delete all child controls previously in the <xref:System.Web.UI.ControlCollection> object. In this case, you must do this so that outdated objects in your control's <xref:System.Web.UI.ControlCollection> are not displayed inappropriately.  \n  \n [!code-cs[TemplatedDataBoundControl#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_6_1.cs)]\n [!code-vb[TemplatedDataBoundControl#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_6_1.vb)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Web.UI.ControlCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  id: Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定されたサーバー コントロールが、親サーバー コントロールの内かどうかを決定<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_3_1.aspx)]
     [!code-vb[System.Web.UI.ctrlCollection_Contains#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_3_1.aspx)]
  syntax:
    content: public virtual bool Contains (System.Web.UI.Control c);
    parameters:
    - id: c
      type: System.Web.UI.Control
      description: "コレクション内で検索するサーバー コントロール。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたサーバー コントロールは、コレクションに存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "子コントロールが格納されているコピー、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクトを&lt;xref:System.Array?displayProperty=fullName&gt;で指定したインデックス位置から、オブジェクト、 &lt;xref:System.Array?displayProperty=fullName&gt;です。"
  syntax:
    content: public virtual void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "&lt;Xref:System.Array?displayProperty=fullName&gt;に子コントロールをコピーします。"
    - id: index
      type: System.Int32
      description: "0 から始まる相対インデックス`array`コピー開始位置。"
  overload: System.Web.UI.ControlCollection.CopyTo*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>array</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と次元されません。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Count
  id: Count
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "サーバー コントロールの数を取得、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>指定の ASP.NET サーバー コントロールのオブジェクト。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Count property to iterate through a control's <xref:System.Web.UI.ControlCollection> object. The use of the <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> property verifies that the control has child controls. If <xref:System.Web.UI.Control.HasControls%2A?displayProperty=fullName> returns `false`, the remaining code does not run.  \n  \n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_1_1.vb)]\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_1_1.cs)]"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "サーバー コントロールの数、 <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>です。"
  overload: System.Web.UI.ControlCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "反復処理できる列挙子を取得、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクト。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is completed, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_1_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/m-system.web.ui.controlc_1_1.aspx)]"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "コレクションを反復処理する列挙子。"
  overload: System.Web.UI.ControlCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  id: IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したインデックスを取得<xref href=&quot;System.Web.UI.Control&quot;></xref>コレクション内のオブジェクト。"
  remarks: "指定されたサーバー コントロールでのインデックス位置を決定するには、このメソッドを使用して、<xref:System.Web.UI.ControlCollection>オブジェクト</xref:System.Web.UI.ControlCollection>。"
  example:
  - "The following code example uses the IndexOf method to write the index location of a control, `myLiteralControl`, in the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control named `myButton`.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_4_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#1](~/add/codesnippet/csharp/m-system.web.ui.controlc_4_1.aspx)]"
  syntax:
    content: public virtual int IndexOf (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>のインデックスが返されます。"
    return:
      type: System.Int32
      description: "指定されたサーバー コントロールのインデックス。 場合は、サーバー コントロールは、現在のコレクションのメンバーではない、-1 を返します。"
  overload: System.Web.UI.ControlCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクトは読み取り専用です。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the IsReadOnly property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_5_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_5_1.aspx)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールが読み取り専用の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクトが同期されています。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the IsSynchronized property is checked to see if the operation is thread safe, and if it is not, the <xref:System.Web.UI.ControlCollection.SyncRoot%2A> property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_6_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_6_1.aspx)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "このプロパティは常に<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.ControlCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したインデックス位置にある、サーバー コントロールへの参照を取得、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクト。"
  remarks: ''
  example:
  - "The following code example uses the Item property to specify the index location of a child control that is removed in a <xref:System.Web.UI.ControlCollection.Remove%2A> method call. This is performed by the `myButton.Controls.Remove` syntax.  \n  \n [!code-vb[ControlCollection_ReSubmit_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_2_1.aspx)]\n [!code-cs[ControlCollection_ReSubmit_2#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_2_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "内のサーバー コントロールの場所、 <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>です。"
    return:
      type: System.Web.UI.Control
      description: "コントロールへの参照。"
  overload: System.Web.UI.ControlCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>パラメーターが&0; 未満またはより大きいか等しい&lt;xref:System.Web.UI.ControlCollection.Count%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Owner
  id: Owner
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ASP.NET サーバー コントロールを取得、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクトが属しています。"
  remarks: ''
  example:
  - "The following code example is a custom <xref:System.Web.UI.ControlCollection> class that overrides the <xref:System.Web.UI.ControlCollection.%23ctor%2A> method to write messages (which include the name of the Owner property) to the trace log when an instance of the collection is created. You must enable tracing for the page or application for this example to work.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/csharp/p-system.web.ui.controlc_4_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_4_1.vb)]"
  syntax:
    content: protected System.Web.UI.Control Owner { get; }
    return:
      type: System.Web.UI.Control
      description: "<xref href=&quot;System.Web.UI.Control&quot;> </xref>先、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>が属しています。"
  overload: System.Web.UI.ControlCollection.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  id: Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定されたサーバー コントロールから親サーバー コントロールの削除<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>オブジェクト。"
  remarks: "インデックス位置からコントロールを削除するには、使用、<xref:System.Web.UI.ControlCollection.RemoveAt%2A>メソッド</xref:System.Web.UI.ControlCollection.RemoveAt%2A>。"
  example:
  - "The following code example uses the Remove method to delete a child control from the `myButton` server control. First the code uses the <xref:System.Web.UI.ControlCollection.Contains%2A> method to determine whether the `myChildControl` is contained in the <xref:System.Web.UI.ControlCollection> object, and, if it is, removes it.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_9_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#4](~/add/codesnippet/csharp/m-system.web.ui.controlc_9_1.aspx)]"
  syntax:
    content: public virtual void Remove (System.Web.UI.Control value);
    parameters:
    - id: value
      type: System.Web.UI.Control
      description: "削除するサーバー コントロール。"
  overload: System.Web.UI.ControlCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "指定したインデックス位置の子コントロールから削除、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>オブジェクト。"
  remarks: "コントロール コレクションから削除する、その値に基づいて、使用、<xref:System.Web.UI.ControlCollection.Remove%2A>メソッド</xref:System.Web.UI.ControlCollection.Remove%2A>。"
  example:
  - "The following code example uses the RemoveAt method to delete a child control from the `myButton` server control. The method call first specifies an index location of 1 from which the control is deleted. The example then writes to the containing page a text message saying that the control at that location has been deleted from the <xref:System.Web.UI.ControlCollection> collection.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/visualbasic/m-system.web.ui.controlc_7_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#5](~/add/codesnippet/csharp/m-system.web.ui.controlc_7_1.aspx)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "コレクションから削除するサーバー コントロールの序数インデックス。"
  overload: System.Web.UI.ControlCollection.RemoveAt*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "場合にスローされます、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Web.UI.ControlCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.ControlCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールのコレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: ''
  example:
  - "The following code example creates a method that enumerates through the <xref:System.Web.UI.ControlCollection> collection of a <xref:System.Web.UI.WebControls.Button> control, `myButton`. When the enumerator is created, the <xref:System.Web.UI.ControlCollection.IsSynchronized%2A> property is checked to see if the operation is thread safe, and if it is not, the SyncRoot property is used to obtain an object to make the operation thread safe. When the enumeration is complete, the value of the <xref:System.Web.UI.ControlCollection.IsReadOnly%2A> property is written as the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control on the containing page.  \n  \n [!code-vb[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/visualbasic/p-system.web.ui.controlc_3_1.aspx)]\n [!code-cs[System.Web.UI.ControlCollection_NewSamples#2](~/add/codesnippet/csharp/p-system.web.ui.controlc_3_1.aspx)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>コレクションを同期するために使用します</xref:System.Object>。"
  overload: System.Web.UI.ControlCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.ControlCollection.#ctor(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection(Control)
  nameWithType: ControlCollection.ControlCollection(Control)
  fullName: System.Web.UI.ControlCollection.ControlCollection(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.ControlCollection.Add(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add(Control)
  nameWithType: ControlCollection.Add(Control)
  fullName: System.Web.UI.ControlCollection.Add(Control)
- uid: System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt(Int32,Control)
  nameWithType: ControlCollection.AddAt(Int32,Control)
  fullName: System.Web.UI.ControlCollection.AddAt(Int32,Control)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlCollection.Clear
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear()
  nameWithType: ControlCollection.Clear()
  fullName: System.Web.UI.ControlCollection.Clear()
- uid: System.Web.UI.ControlCollection.Contains(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains(Control)
  nameWithType: ControlCollection.Contains(Control)
  fullName: System.Web.UI.ControlCollection.Contains(Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ControlCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.ControlCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.ControlCollection.Count
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
  fullName: System.Web.UI.ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ControlCollection.GetEnumerator()
  fullName: System.Web.UI.ControlCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf(Control)
  nameWithType: ControlCollection.IndexOf(Control)
  fullName: System.Web.UI.ControlCollection.IndexOf(Control)
- uid: System.Web.UI.ControlCollection.IsReadOnly
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
  fullName: System.Web.UI.ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
  fullName: System.Web.UI.ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ControlCollection.Item(Int32)
  fullName: System.Web.UI.ControlCollection.Item(Int32)
- uid: System.Web.UI.ControlCollection.Owner
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
  fullName: System.Web.UI.ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove(Control)
  nameWithType: ControlCollection.Remove(Control)
  fullName: System.Web.UI.ControlCollection.Remove(Control)
- uid: System.Web.UI.ControlCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ControlCollection.RemoveAt(Int32)
  fullName: System.Web.UI.ControlCollection.RemoveAt(Int32)
- uid: System.Web.UI.ControlCollection.SyncRoot
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
  fullName: System.Web.UI.ControlCollection.SyncRoot
- uid: System.Web.UI.ControlCollection.#ctor*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection.ControlCollection
- uid: System.Web.UI.ControlCollection.Add*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Add
  nameWithType: ControlCollection.Add
- uid: System.Web.UI.ControlCollection.AddAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: AddAt
  nameWithType: ControlCollection.AddAt
- uid: System.Web.UI.ControlCollection.Clear*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Clear
  nameWithType: ControlCollection.Clear
- uid: System.Web.UI.ControlCollection.Contains*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Contains
  nameWithType: ControlCollection.Contains
- uid: System.Web.UI.ControlCollection.CopyTo*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: CopyTo
  nameWithType: ControlCollection.CopyTo
- uid: System.Web.UI.ControlCollection.Count*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Count
  nameWithType: ControlCollection.Count
- uid: System.Web.UI.ControlCollection.GetEnumerator*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ControlCollection.GetEnumerator
- uid: System.Web.UI.ControlCollection.IndexOf*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IndexOf
  nameWithType: ControlCollection.IndexOf
- uid: System.Web.UI.ControlCollection.IsReadOnly*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ControlCollection.IsReadOnly
- uid: System.Web.UI.ControlCollection.IsSynchronized*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ControlCollection.IsSynchronized
- uid: System.Web.UI.ControlCollection.Item*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Item
  nameWithType: ControlCollection.Item
- uid: System.Web.UI.ControlCollection.Owner*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Owner
  nameWithType: ControlCollection.Owner
- uid: System.Web.UI.ControlCollection.Remove*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: Remove
  nameWithType: ControlCollection.Remove
- uid: System.Web.UI.ControlCollection.RemoveAt*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ControlCollection.RemoveAt
- uid: System.Web.UI.ControlCollection.SyncRoot*
  parent: System.Web.UI.ControlCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ControlCollection.SyncRoot
