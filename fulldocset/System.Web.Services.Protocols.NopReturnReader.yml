### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.NopReturnReader
  id: NopReturnReader
  children:
  - System.Web.Services.Protocols.NopReturnReader.#ctor
  - System.Web.Services.Protocols.NopReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.NopReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.NopReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: NopReturnReader
  nameWithType: NopReturnReader
  fullName: System.Web.Services.Protocols.NopReturnReader
  type: Class
  summary: "受信応答の非実行リーダーとして機能は、HTTP を使用して実装されている Web サービス クライアントが SOAP せずに値を返します。"
  remarks: "NopReturnReader とその他のクラスの<xref:System.Web.Services.Protocols>名前空間は、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装をサポートします</xref:System.Web.Services.Protocols>。 Web サービスのライター、リーダー シリアル化および逆、それぞれ、パラメーターまたは Web メソッドの戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。 Web サービスのライター、リーダーは、HTTP トランスポートを使用しますが、SOAP 標準を使用してメッセージを交換しません。       NopReturnReader クラス<xref:System.Web.Services.Protocols.MimeReturnReader>。</xref:System.Web.Services.Protocols.MimeReturnReader> 、抽象クラスのインターフェイスのない読み取り実装を提供します。       通常、NopReturnReader クラスを使用する必要はありません。 代わりに、Wsdl.exe ツールは、HTTP GET または HTTP POST の実装に応じて、クライアント プロキシ コードを生成するときが適用される<xref:System.Web.Services.Protocols.HttpMethodAttribute>各 Web メソッドと既定では、属性の<xref:System.Web.Services.Protocols.XmlReturnReader><xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>プロパティ</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A></xref:System.Web.Services.Protocols.XmlReturnReader>を設定します。</xref:System.Web.Services.Protocols.HttpMethodAttribute> それ以外の場合、値を決定することがない場合、Wsdl.exe は NopReturnReader にプロパティを設定します。"
  syntax:
    content: 'public class NopReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.NopReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.NopReturnReader
  langs:
  - csharp
  name: NopReturnReader()
  nameWithType: NopReturnReader.NopReturnReader()
  fullName: System.Web.Services.Protocols.NopReturnReader.NopReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.NopReturnReader&quot;> </xref>クラスです。"
  syntax:
    content: public NopReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.NopReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.NopReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.NopReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: NopReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.NopReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定したメソッドの初期化子を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.NopReturnReader.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.NopReturnReader.Initialize%2A>。 <xref:System.Web.Services.Protocols.NopReturnReader>クラス初期化子があり、キーワードで参照されるインスタンス`this`</xref:System.Web.Services.Protocols.NopReturnReader>。"
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>初期化子を取得する Web メソッドを指定します。"
    return:
      type: System.Object
      description: "指定したメソッドの初期化子。"
  overload: System.Web.Services.Protocols.NopReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.NopReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.NopReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: NopReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.NopReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "インスタンスを初期化します。"
  remarks: "Initialize メソッドは、何も行われません。 応答の処理時に呼び出されます。 入力パラメーター、`initializer`は、クライアントの初期化中に取得されているクラスの別のインスタンス。"
  syntax:
    content: public override void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "別のインスタンス、 <xref href=&quot;System.Web.Services.Protocols.NopReturnReader&quot;> </xref>をクラス、<xref:System.Web.Services.Protocols.NopReturnReader.GetInitializer*>メソッドが以前に呼び出されます</xref:System.Web.Services.Protocols.NopReturnReader.GetInitializer*>。"
  overload: System.Web.Services.Protocols.NopReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.NopReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.NopReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: NopReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.NopReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Web メソッドに HTTP 応答ストリームを逆シリアル化の値を返します。"
  remarks: "<xref:System.Web.Services.Protocols.NopReturnReader>のクラスの実装、<xref:System.Web.Services.Protocols.MimeReturnReader.Read%2A>メソッドでは、読み込みは行われません</xref:System.Web.Services.Protocols.MimeReturnReader.Read%2A></xref:System.Web.Services.Protocols.NopReturnReader>。 代わりに返します`null`です。 応答ストリームも閉じられます。"
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "A<xref:System.Net.WebResponse>操作の出力メッセージを含むオブジェクト</xref:System.Net.WebResponse>。"
    - id: responseStream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>コンテンツを持つ、HTTP 応答の本体で表される、`response`パラメーター</xref:System.IO.Stream> 。"
    return:
      type: System.Object
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.NopReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.NopReturnReader.#ctor
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: NopReturnReader()
  nameWithType: NopReturnReader.NopReturnReader()
  fullName: System.Web.Services.Protocols.NopReturnReader.NopReturnReader()
- uid: System.Web.Services.Protocols.NopReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: NopReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.NopReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.NopReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: NopReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.NopReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.NopReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: NopReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.NopReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.NopReturnReader.#ctor*
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: NopReturnReader
  nameWithType: NopReturnReader.NopReturnReader
- uid: System.Web.Services.Protocols.NopReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: NopReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.NopReturnReader.Initialize*
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: Initialize
  nameWithType: NopReturnReader.Initialize
- uid: System.Web.Services.Protocols.NopReturnReader.Read*
  parent: System.Web.Services.Protocols.NopReturnReader
  isExternal: false
  name: Read
  nameWithType: NopReturnReader.Read
