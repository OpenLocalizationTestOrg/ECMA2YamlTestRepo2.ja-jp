### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  id: PersonalizationStateInfoCollection
  children:
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  - System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: PersonalizationStateInfoCollection
  nameWithType: PersonalizationStateInfoCollection
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  type: Class
  summary: "コレクションを提供<xref href=&quot;System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&quot;></xref>と<xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;></xref>オブジェクト。"
  remarks: "しましたクラス ラッパーを提供、コレクション ベースのセットに対して<xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>と<xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>インスタンス</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo></xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>。 これらのインスタンスをコレクションを順番に反復処理して、序数に基づくインデックスまたはキーの値が取得されます。       インスタンスは、パスとユーザー名の組み合わせでインデックスを作成します。 これは、必要なため<xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>共有のデータを表すインスタンスは、インデックスに従って<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A>オブジェクト、一方<xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>インスタンスの両方に応じてインデックスが作成、<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A>オブジェクトおよび<xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username%2A>オブジェクト</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username%2A></xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A></xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo></xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A></xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>。       プロバイダーから受信した順序でコレクションには、オブジェクトの情報が保持されます。 インスタンスの順序を変更したり、コレクション内の特定の並べ替え順序を維持するは、コレクションが行われません。"
  syntax:
    content: 'public sealed class PersonalizationStateInfoCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: PersonalizationStateInfoCollection()
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、空のコレクションを初期化します。"
  syntax:
    content: public PersonalizationStateInfoCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  id: Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Add(PersonalizationStateInfo)
  nameWithType: PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "追加、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-コレクションの末尾にインスタンスを派生します。"
  remarks: "このメソッドは、追加、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>-コレクションの末尾に派生インスタンス</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>。 内部的には、コレクションの数は&1; ずつインクリメントされます。 コレクションに対して現在アクティブな列挙子が無効になります。"
  syntax:
    content: public void Add (System.Web.UI.WebControls.WebParts.PersonalizationStateInfo data);
    parameters:
    - id: data
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-派生インスタンスを追加します。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "コレクションは読み取り専用とマークされました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "オブジェクトと同じ共有インスタンスのコレクションに追加しようとしましたが、またはユーザーごとの状態は、コレクションに既に存在します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "データのパラメーターが null です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PersonalizationStateInfoCollection.Clear()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "すべての項目のコレクションをクリアします。"
  remarks: "コレクションに対して現在アクティブな列挙子が無効になります。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "コレクションは読み取り専用とマークされました。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: CopyTo(PersonalizationStateInfo[],Int32)
  nameWithType: PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "要素をコピー、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref>のコレクションを<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;></xref>指定位置にある開始位置として、配列。"
  remarks: "作成する場合は、このメソッドを使用して、<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>配列</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>。 このメソッドを呼び出すだけ、<xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>メソッドおよびパス、`array`と`index`パラメーター</xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName> 。"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
      description: "配列にコレクション内の要素がコピーされます。"
    - id: index
      type: System.Int32
      description: "コピー操作を開始する位置。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コレクション内の項目数を取得します。"
  remarks: "例のように、コレクションを反復処理するコレクション内の項目の数を使用できます。"
  example:
  - "The following code example demonstrates how to use the Count property.  \n  \n [!code-cs[WebParts_PersAdmin#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_61_1.ascx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "コレクション内の項目の数。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コレクションを反復処理できる標準の列挙子を返します。 このメソッドは継承できません。"
  remarks: "列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。       最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。 <xref:System.Collections.IEnumerator.Reset%2A>メソッドがこの位置に戻さも、列挙子を表示します</xref:System.Collections.IEnumerator.Reset%2A>。 この位置にある、<xref:System.Collections.IEnumerator.Current%2A>プロパティが定義されていません</xref:System.Collections.IEnumerator.Current%2A>。 したがって、 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.Current%2A>の値を読み取る前に、コレクションの最初の要素に列挙子を進めるメソッド</xref:System.Collections.IEnumerator.MoveNext%2A>を呼び出す必要があります。 列挙子の詳細については、 <xref:System.Collections.IEnumerator>。</xref:System.Collections.IEnumerator>を参照してください。       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。       `foreach` C# 言語のステートメント (`for each` Visual Basic で)、列挙子の複雑さが隠されています。 したがってを使用して`foreach`列挙子を直接操作せずにお勧めします。       列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。 列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。 読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>コレクションを反復処理に使用できる</xref:System.Collections.IEnumerator>。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "アクセスをするかどうかを示す値を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref>コレクションが同期されている (スレッド セーフである)。"
  remarks: "コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。       <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A>プロパティは<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>。</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>へのアクセスを同期するために使用できるオブジェクトを返す</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションへのアクセスが同期されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 値は常に<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref> Web パーツ コントロール セットによって作成されたオブジェクト。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PersonalizationStateInfoCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>インスタンスがコレクション内の指定した序数インデックスにあります。"
  remarks: "このプロパティを取得、<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>インスタンスがコレクション内の指定した序数インデックスにある</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>。"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "取得するオブジェクトの序数インデックス。"
    return:
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>インスタンスがコレクション内の指定した序数インデックスにあります。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n \\- or -  \n  \n <code>index</code> is greater than <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  id: Item(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Item(String,String)
  nameWithType: PersonalizationStateInfoCollection.Item(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(String,String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "指定したパラメーターに基づくコレクションから要素を取得します。"
  remarks: "このプロパティは、コレクションの既定のインデクサーです。 だけの場合`path`を指定すると、このプロパティを返します、<xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>インスタンス</xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>。 両方`path`と`username`プロパティを返す、提供される、<xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>インスタンスの組み合わせの`path`と`username`</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>。       場合`path`(の場合を`username`に設定されている`null`) が存在しない場合、または`username`と`path`が存在しない`null`が返されます。"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.PersonalizationStateInfo this[string path, string username] { get; }
    parameters:
    - id: path
      type: System.String
      description: "パーソナル化状態オブジェクトを取得するのアプリケーションの相対パス。"
    - id: username
      type: System.String
      description: "ユーザー名、 <xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;> </xref>を取得するオブジェクト。"
    return:
      type: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
      description: "指定したパラメーターに基づくコレクションの要素。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  id: Remove(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: Remove(String,String)
  nameWithType: PersonalizationStateInfoCollection.Remove(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "削除、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>-オブジェクトをコレクションから派生します。"
  remarks: "このメソッドは、削除、 <xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>-コレクションからの派生インスタンス</xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo>。 削除されたインスタンスの後の要素は、空いた位置を占めるように移動されます。 内部的には、コレクションの数は&1; だけデクリメントします。 コレクションに対して現在アクティブな列挙子が無効になります。       だけの場合`path`が指定されて、<xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>そのパスが削除されるをインスタンス化します</xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo>。 両方`path`と`username`提供される、<xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>の組み合わせのインスタンス`path`と`username`が削除された</xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo>。      > [!NOTE] > 存在していない項目をコレクションから削除しようとすることができます。 この操作は、例外は発生しません。"
  syntax:
    content: public void Remove (string path, string username);
    parameters:
    - id: path
      type: System.String
      description: "パーソナル化状態オブジェクトを削除するのアプリケーションの相対パス。"
    - id: username
      type: System.String
      description: "ユーザー名、 <xref href=&quot;System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&quot;> </xref>-派生オブジェクトを削除します。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "コレクションは読み取り専用とマークされました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code> is null.  \n  \n \\- or -  \n  \n both parameters are null."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "読み取り専用コレクションをマークします。"
  remarks: "メソッドなど、読み取り専用コレクションを変更しようとする<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add%2A>と<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove%2A>、スロー、<xref:System.NotSupportedException>例外です</xref:System.NotSupportedException></xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove%2A></xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add%2A>。      > [!NOTE] > コレクションで、SetReadOnly メソッド複数回を呼び出すことができます。 これは、例外は発生しません。"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;> </xref>インスタンス。"
  remarks: "コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。       派生クラスでは、SyncRoot プロパティを使用して、コレクションの同期された独自バージョンを提供できます。 同期されたコードは、コレクションの SyncRoot コレクション自体で直接、操作を実行する必要があります。 これにより、他のオブジェクトから派生したコレクションを適切に操作します。 具体的には、コレクション インスタンスを同時に変更する可能性がある別スレッドとの適切な同期を維持します。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用できるオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&quot;></xref>です。 Web パーツ コントロール セットでは、現在のコレクション オブジェクトへの参照を返します。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "基本の実装<xref:System.Collections.ICollection.CopyTo*>メソッド</xref:System.Collections.ICollection.CopyTo*>。"
  remarks: "このメソッドと同様、<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection>クラスの<xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo%2A>メソッドを呼び出すだけ、<xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName>メソッドおよびパス、`array`と`index`パラメーター</xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo%2A> </xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection> 。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "先の配列のコレクション<xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;></xref>オブジェクトがコピーされます。"
    - id: index
      type: System.Int32
      description: "内のポイント`array`のコピーを開始する位置を示す、 <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: PersonalizationStateInfoCollection()
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.PersonalizationStateInfoCollection()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Add(PersonalizationStateInfo)
  nameWithType: PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add(PersonalizationStateInfo)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationStateInfo
  nameWithType: PersonalizationStateInfo
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Clear()
  nameWithType: PersonalizationStateInfoCollection.Clear()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[],System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: CopyTo(PersonalizationStateInfo[],Int32)
  nameWithType: PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo(PersonalizationStateInfo[],Int32)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationStateInfo
  nameWithType: PersonalizationStateInfo
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfo
    name: PersonalizationStateInfo
    nameWithType: PersonalizationStateInfo
    fullName: PersonalizationStateInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PersonalizationStateInfoCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item(String,String)
  nameWithType: PersonalizationStateInfoCollection.Item(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Remove(String,String)
  nameWithType: PersonalizationStateInfoCollection.Remove(String,String)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove(String,String)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly()
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly()
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.#ctor*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: PersonalizationStateInfoCollection
  nameWithType: PersonalizationStateInfoCollection.PersonalizationStateInfoCollection
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Add
  nameWithType: PersonalizationStateInfoCollection.Add
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Clear*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Clear
  nameWithType: PersonalizationStateInfoCollection.Clear
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: CopyTo
  nameWithType: PersonalizationStateInfoCollection.CopyTo
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Count
  nameWithType: PersonalizationStateInfoCollection.Count
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PersonalizationStateInfoCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: PersonalizationStateInfoCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Item*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Item
  nameWithType: PersonalizationStateInfoCollection.Item
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: Remove
  nameWithType: PersonalizationStateInfoCollection.Remove
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: PersonalizationStateInfoCollection.SetReadOnly
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: SyncRoot
  nameWithType: PersonalizationStateInfoCollection.SyncRoot
- uid: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: PersonalizationStateInfoCollection.System.Collections.ICollection.CopyTo
