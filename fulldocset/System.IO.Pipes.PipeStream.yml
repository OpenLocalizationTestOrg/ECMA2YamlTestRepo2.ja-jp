### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeStream
  id: PipeStream
  children:
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  - System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.ReadMode
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.TransmissionMode
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: PipeStream
  nameWithType: PipeStream
  fullName: System.IO.Pipes.PipeStream
  type: Class
  summary: "公開、<xref:System.IO.Stream>両方匿名パイプと名前付きパイプをサポートする、パイプの周囲のオブジェクト</xref:System.IO.Stream>。"
  remarks: "PipeStream クラスは、.NET Framework で、匿名の名前付きパイプ操作の基本クラスを提供します。 使用して、<xref:System.IO.Pipes.NamedPipeServerStream>と<xref:System.IO.Pipes.NamedPipeClientStream>名前付きパイプ操作のためのクラス</xref:System.IO.Pipes.NamedPipeClientStream></xref:System.IO.Pipes.NamedPipeServerStream>。 使用して、<xref:System.IO.Pipes.AnonymousPipeServerStream>と<xref:System.IO.Pipes.AnonymousPipeClientStream>匿名パイプ操作のためのクラス</xref:System.IO.Pipes.AnonymousPipeClientStream></xref:System.IO.Pipes.AnonymousPipeServerStream>。       パイプの詳細については、次を参照してください。[パイプ](~/add/includes/ajax-current-ext-md.md)です。 匿名パイプの例は、次を参照してください。[する方法: ローカルのプロセス間通信に使用する匿名パイプ](~/add/includes/ajax-current-ext-md.md)です。 名前付きパイプの例は、次を参照してください。[する方法: ネットワーク プロセス間通信に使用する名前付きパイプ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public abstract class PipeStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>クラス<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値とバッファー サイズ。"
  remarks: "このコンス トラクターが<xref:System.IO.Pipes.PipeTransmissionMode>。</xref:System.IO.Pipes.PipeTransmissionMode>パイプ送信モードを使用します"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "1 つ、 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>パイプ オブジェクトの方向を示す値。"
    - id: bufferSize
      type: System.Int32
      description: "正<xref:System.Int32>バッファー サイズを示す 0 以上の値</xref:System.Int32>。"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。       - または -<code>bufferSize</code>が 0 未満です。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)'
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>クラス<xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>、 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>、およびバッファー サイズ。"
  syntax:
    content: protected PipeStream (System.IO.Pipes.PipeDirection direction, System.IO.Pipes.PipeTransmissionMode transmissionMode, int outBufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "1 つ、 <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>パイプ オブジェクトの方向を示す値。"
    - id: transmissionMode
      type: System.IO.Pipes.PipeTransmissionMode
      description: "1 つ、 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>パイプ オブジェクトの転送モードを示す値。"
    - id: outBufferSize
      type: System.Int32
      description: "正<xref:System.Int32>バッファー サイズを示す 0 以上の値</xref:System.Int32>。"
  overload: System.IO.Pipes.PipeStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>値。       - または -<code>transmissionMode</code>が無効です<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>値。       - または -<code>bufferSize</code>が 0 未満です。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "非同期の読み取り操作を開始します。"
  remarks: "返された渡す<xref:System.IAsyncResult>オブジェクトを<xref:System.IO.Pipes.PipeStream.EndRead%2A>読み取られたバイト数を決定しの読み取りに使用されているオペレーティング システム リソースを解放するメソッド</xref:System.IO.Pipes.PipeStream.EndRead%2A></xref:System.IAsyncResult>。 <xref:System.IO.Pipes.PipeStream.EndRead%2A>beginread 呼び出しごとに&1; 回呼び出す必要があります。</xref:System.IO.Pipes.PipeStream.EndRead%2A> これは、BeginRead を呼び出した同じコードまたは BeginRead に渡されたコールバックでは実行できます。       使用して、<xref:System.IO.Pipes.PipeStream.CanRead%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる読み取り操作</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanRead%2A>。       パイプは閉じて BeginRead に無効な引数が渡される場合、適切な例外が直ちに発生します。 非同期要求を読み取り中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。 コードを呼び出すときに例外が発生した、<xref:System.IO.Pipes.PipeStream.EndRead%2A>メソッド</xref:System.IO.Pipes.PipeStream.EndRead%2A>。"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "データを読み取るバッファー。"
    - id: offset
      type: System.Int32
      description: "内のバイト オフセット`buffer`読み取りを開始する位置。"
    - id: count
      type: System.Int32
      description: "読み取るバイトの最大数。"
    - id: callback
      type: System.AsyncCallback
      description: "非同期の読み取り操作したときに呼び出すメソッドが完了するとします。"
    - id: state
      type: System.Object
      description: "この特定の非同期読み取り要求を他の要求と区別するユーザー指定のオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>読み取り、非同期参照するオブジェクト</xref:System.IAsyncResult>。"
  overload: System.IO.Pipes.PipeStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 未満です。       - または -<code>count</code>が 0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>使用できるバイト数よりも大きい<code>buffer</code>です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプでは、読み取り操作はサポートしません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "非同期の書き込み操作を開始します。"
  remarks: "<xref:System.IO.Pipes.PipeStream.EndWrite%2A>BeginWrite を呼び出すたびに&1; 回呼び出す必要があります。</xref:System.IO.Pipes.PipeStream.EndWrite%2A> これは、BeginWrite を呼び出した同じコードまたは BeginWrite に渡されたコールバックでは実行できます。       使用して、<xref:System.IO.Pipes.PipeStream.CanWrite%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる書き込み操作です</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanWrite%2A>。       パイプは閉じて BeginWrite に無効な引数が渡される場合、適切な例外が直ちに発生します。 非同期書き込み要求中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。 コードを呼び出すときに例外が発生した、<xref:System.IO.Pipes.PipeStream.EndWrite%2A>メソッド</xref:System.IO.Pipes.PipeStream.EndWrite%2A>。"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "現在のストリームに書き込むデータを格納しているバッファー。"
    - id: offset
      type: System.Int32
      description: "内の&0; から始まるバイト オフセット`buffer`現在のストリームにバイトのコピーを開始する位置。"
    - id: count
      type: System.Int32
      description: "書き込むバイトの最大数。"
    - id: callback
      type: System.AsyncCallback
      description: "非同期の書き込み操作が完了したときに呼び出すメソッド。"
    - id: state
      type: System.Object
      description: "この特定の非同期書き込み要求を他の要求と区別するユーザー指定のオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期の書き込み操作を参照するオブジェクト</xref:System.IAsyncResult>。"
  overload: System.IO.Pipes.PipeStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 未満です。       - または -<code>count</code>が 0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>使用できるバイト数よりも大きい<code>buffer</code>です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプは書き込み操作をサポートしていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanRead
  id: CanRead
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のストリームが読み取り操作をサポートするかどうかを示す値を取得します。"
  remarks: "場合、<xref:System.IO.Pipes.PipeStream>オブジェクトが閉じられると、このプロパティを返します`false`</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ストリームをサポートしている場合は、読み取り操作です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanSeek
  id: CanSeek
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "シーク操作を現在のストリームをサポートしているかどうかを示す値を取得します。"
  remarks: "場合、<xref:System.IO.Pipes.PipeStream>オブジェクトが閉じられると、このプロパティを返します`false`</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.IO.Pipes.PipeStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CanWrite
  id: CanWrite
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のストリームが書き込み操作をサポートするかどうかを示す値を取得します。"
  remarks: "場合、<xref:System.IO.Pipes.PipeStream>オブジェクトが閉じられると、このプロパティを返します`false`</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ストリームが書き込み操作をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  id: CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプが取得または設定のプロパティに対して適切な状態であることを確認します。"
  syntax:
    content: protected virtual void CheckPipePropertyOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  id: CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプが読み取り操作に対して接続状態であることを確認します。"
  syntax:
    content: protected void CheckReadOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckReadOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  id: CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプが書き込み操作に対して接続状態であることを確認します。"
  syntax:
    content: protected void CheckWriteOperations ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.CheckWriteOperations*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>クラスし、必要に応じてマネージ リソースも解放します。"
  remarks: "このメソッドは、パブリック<xref:System.ComponentModel.Component.Dispose%2A>メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A></xref:System.ComponentModel.Component.Dispose%2A>。 <xref:System.ComponentModel.Component.Dispose%2A>保護された Dispose メソッドを呼び出し、`disposing`パラメーターに設定`true`です。</xref:System.ComponentModel.Component.Dispose%2A> <xref:System.Object.Finalize%2A>Dispose を呼び出す`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A> Disposing パラメーターがの場合`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.IO.Pipes.PipeStream>オブジェクト参照。</xref:System.IO.Pipes.PipeStream> 。 このメソッドは、参照される各オブジェクトの Dispose メソッドを呼び出します。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.IO.Pipes.PipeStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "保留中の非同期読み込み要求を終了します。"
  remarks: "このメソッドが戻る<xref:System.IO.Pipes.PipeStream.BeginRead%2A>。</xref:System.IO.Pipes.PipeStream.BeginRead%2A>以前の呼び出しによって指定されたバイト配列に読み取ったバイト数       返された渡す<xref:System.IAsyncResult>EndRead メソッドを読み取られたバイト数を確認しの読み取りに使用するオペレーティング システム リソースを解放するオブジェクト</xref:System.IAsyncResult>。 EndRead は<xref:System.IO.Pipes.PipeStream.BeginRead%2A>。</xref:System.IO.Pipes.PipeStream.BeginRead%2A>呼び出しごとに&1; 回呼び出す必要があります。 これ行う<xref:System.IO.Pipes.PipeStream.BeginRead%2A>または<xref:System.IO.Pipes.PipeStream.BeginRead%2A>。</xref:System.IO.Pipes.PipeStream.BeginRead%2A>に渡されるコールバック</xref:System.IO.Pipes.PipeStream.BeginRead%2A>を呼び出した同じコードのいずれか       使用して、<xref:System.IO.Pipes.PipeStream.CanRead%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる読み取り操作</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanRead%2A>。       パイプが閉じられたか、無効な引数が渡されました<xref:System.IO.Pipes.PipeStream.BeginRead%2A>、すぐに、適切な例外が生成されます</xref:System.IO.Pipes.PipeStream.BeginRead%2A>。 非同期要求を読み取り中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。 例外は、コードが EndRead メソッドを呼び出すときに発生します。"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "保留中の非同期要求への参照。"
    return:
      type: System.Int32
      description: "読み取られたバイト数。 戻り値は 0 では、(パイプが閉じられました) ストリームの末尾を示します。"
  overload: System.IO.Pipes.PipeStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>取得されませんでした、<xref:System.IO.Pipes.PipeStream.BeginRead*>メソッドを現在のストリーム。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ストリームが閉じているか、内部エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "保留中の非同期書き込み要求を終了します。"
  remarks: "EndWrite は<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>。</xref:System.IO.Pipes.PipeStream.BeginWrite%2A>呼び出しごとに&1; 回呼び出す必要があります。 これ行う<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>または<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>。</xref:System.IO.Pipes.PipeStream.BeginWrite%2A>に渡されるコールバック</xref:System.IO.Pipes.PipeStream.BeginWrite%2A>を呼び出した同じコードのいずれか       使用して、<xref:System.IO.Pipes.PipeStream.CanWrite%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる書き込み操作です</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanWrite%2A>。       パイプが閉じられたか、無効な引数が渡されました<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>、すぐに、適切な例外が生成されます</xref:System.IO.Pipes.PipeStream.BeginWrite%2A>。 非同期書き込み要求中に発生したエラーは、要求を実行しているスレッド プールのスレッドで発生します。 例外が発生したときに、コード呼び出し EndWrite メソッドです。"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "保留中の非同期要求への参照。"
  overload: System.IO.Pipes.PipeStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>取得されませんでした、<xref:System.IO.Pipes.PipeStream.BeginWrite*>メソッドを現在のストリーム。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ストリームが閉じているか、内部エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Flush
  id: Flush
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のストリームのバッファーをクリアし、基になるデバイスに書き込まれるバッファー内のデータします。"
  remarks: "Flush メソッドはサポートされていません、<xref:System.IO.Pipes.PipeStream>クラスと呼び出された場合に何もしません</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプは書き込み操作をサポートしていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  id: GetAccessControl
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得、 <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref>現在が示すパイプのアクセス制御リスト (ACL) エントリをカプセル化するオブジェクト<xref href=&quot;System.IO.Pipes.PipeStream&quot;></xref>オブジェクト。"
  remarks: 'アクセス制御リスト (ACL) は、個人やグループがある、またはなくても、指定されたファイルの特定のアクションを実行する権限について説明します。 詳細については、次を参照してください。[する方法: 追加または削除するアクセス制御リスト エントリ](~/add/includes/ajax-current-ext-md.md)です。'
  syntax:
    content: public System.IO.Pipes.PipeSecurity GetAccessControl ();
    parameters: []
    return:
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref>現在が示すパイプのアクセス制御リスト (ACL) エントリをカプセル化するオブジェクト<xref href=&quot;System.IO.Pipes.PipeStream&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.PipeStream.GetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InBufferSize
  id: InBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプの着信バッファーのバイト単位のサイズを取得します。"
  remarks: "受信バッファー サイズが 0 の場合は、必要に応じて、バッファーのサイズが割り当てられます。"
  syntax:
    content: public virtual int InBufferSize { get; }
    return:
      type: System.Int32
      description: "着信バッファーのサイズ、(バイト単位) を表す整数値。"
  overload: System.IO.Pipes.PipeStream.InBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ストリームが読み取り可能ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプは、接続を待機しています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  id: InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "初期化、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>から、指定したオブジェクト<xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;></xref>オブジェクト。"
  remarks: "パイプが接続状態である場合は、このメソッドは設定も、<xref:System.IO.Pipes.PipeStream.IsConnected%2A>プロパティを`true`</xref:System.IO.Pipes.PipeStream.IsConnected%2A>。"
  syntax:
    content: protected void InitializeHandle (Microsoft.Win32.SafeHandles.SafePipeHandle handle, bool isExposed, bool isAsync);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "<xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref>を初期化するパイプのオブジェクト。"
    - id: isExposed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハンドルを公開するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: isAsync
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハンドルが非同期的に開かれたことを示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.InitializeHandle*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ハンドルは、パイプにバインドできません。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsAsync
  id: IsAsync
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクトが非同期的または同期的に開かれました。"
  remarks: "このプロパティを使用するコードを使用して、<xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>プロパティ正しく</xref:System.IO.Pipes.PipeStream.SafePipeHandle%2A>。"
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>非同期的に、それ以外のオブジェクトが開かれた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsConnected
  id: IsConnected
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクトが接続されています。"
  remarks: "操作のプロパティから返される`true`場合にのみ、<xref:System.IO.Pipes.PipeStream>オブジェクトが接続されている</xref:System.IO.Pipes.PipeStream>。 このプロパティを返す場合`false`、パイプ可能性がある、接続を待機している可能性があります切断されているを閉じると、または分割します。"
  syntax:
    content: public bool IsConnected { get; protected set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクトが接続されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  id: IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "ハンドルかどうかを示す値を取得、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクトを公開します。"
  remarks: "現在のカプセル化されているパイプへのハンドルを取得するときにこのプロパティの値が設定されて<xref:System.IO.Pipes.PipeStream>オブジェクト</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: protected bool IsHandleExposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのハンドル、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクトが公開されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.IsHandleExposed*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  id: IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "最新の読み取り操作から返されたメッセージでより多くのデータがあるかどうかを示す値を取得します。"
  remarks: "このプロパティは、該当する場合、パイプの<xref:System.IO.Pipes.PipeStream.ReadMode%2A>プロパティ<xref:System.IO.Pipes.PipeTransmissionMode><xref:System.IO.Pipes.PipeStream.Read%2A>または<xref:System.IO.Pipes.PipeStream.EndRead%2A>.</xref:System.IO.Pipes.PipeStream.EndRead%2A></xref:System.IO.Pipes.PipeStream.Read%2A>に最新の呼び出しによって</xref:System.IO.Pipes.PipeTransmissionMode>に設定されました</xref:System.IO.Pipes.PipeStream.ReadMode%2A>"
  syntax:
    content: public bool IsMessageComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メッセージを読み取る文字がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Pipes.PipeStream.IsMessageComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが接続されていません。       - または - パイプ ハンドルが設定されていません。       - または - パイプの<xref:System.IO.Pipes.PipeStream.ReadMode*>プロパティの値が<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref></xref:System.IO.Pipes.PipeStream.ReadMode*> 。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Length
  id: Length
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "バイト単位のストリームの長さを取得します。"
  remarks: "<xref:System.IO.Pipes.PipeStream>クラスは、Length プロパティをサポートしていません</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "常に&0; を返します。"
  overload: System.IO.Pipes.PipeStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  id: OutBufferSize
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプの発信バッファーのバイト単位のサイズを取得します。"
  remarks: "送信バッファー サイズが 0 の場合は、必要に応じて、バッファーのサイズが割り当てられます。"
  syntax:
    content: public virtual int OutBufferSize { get; }
    return:
      type: System.Int32
      description: "発信バッファーのサイズ (バイト)。"
  overload: System.IO.Pipes.PipeStream.OutBufferSize*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "ストリームが書き込み可能ではありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプは、接続を待機しています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Position
  id: Position
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得または現在のストリームの現在の位置を設定します。"
  remarks: "<xref:System.IO.Pipes.PipeStream>クラスは、Position プロパティをサポートしていません</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "常に&0; を返します。"
  overload: System.IO.Pipes.PipeStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "常にスローされます。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "ストリームからバイトのブロックを読み取り、データを指定されたバッファーに書き込みます。"
  remarks: "使用して、<xref:System.IO.Pipes.PipeStream.CanRead%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる読み取り操作</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanRead%2A>。       Read メソッドを呼び出すまでブロック`count`バイトが読み取られるか、ストリームの末尾に到達します。 非同期の読み取り操作<xref:System.IO.Pipes.PipeStream.BeginRead%2A>および<xref:System.IO.Pipes.PipeStream.EndRead%2A>。</xref:System.IO.Pipes.PipeStream.EndRead%2A></xref:System.IO.Pipes.PipeStream.BeginRead%2A>参照してください。"
  example:
  - "The following example creates an anonymous pipe client and pipe server. The pipe server uses the Read method to read a series of bytes from the pipe client as a validation code. Both the pipe client and the pipe server are part of the same example. The server portion of the example creates a client process and passes it an anonymous pipe handle as an argument.  \n  \n [!code-cs[System.IO.Pipes.PipeStream#1](~/add/codesnippet/csharp/m-system.io.pipes.pipest_1.cs)]\n [!code-vb[System.IO.Pipes.PipeStream#1](~/add/codesnippet/visualbasic/m-system.io.pipes.pipest_1.vb)]\n [!code-cpp[System.IO.Pipes.PipeStream#1](~/add/codesnippet/cpp/m-system.io.pipes.pipest_1.cpp)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "このメソッドが戻るときまでの値が指定したバイト配列が含まれています。`offset`と (`offset`  +  `count` - 1) 現在のソースから読み取られたバイトに置き換えられます。"
    - id: offset
      type: System.Int32
      description: "内のバイト オフセット、`buffer`が読み取られるバイトが配置される配列。"
    - id: count
      type: System.Int32
      description: "読み取るバイトの最大数。"
    return:
      type: System.Int32
      description: "読み取られるバイトの総数<code> buffer</code>です。 そのバイト数が現在使用できないかどうかに要求したバイト数よりも小さくなることや、ストリームの末尾に達した場合は 0 です。"
  overload: System.IO.Pipes.PipeStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 未満です。       - または -<code>count</code>が 0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>使用できるバイト数よりも大きい<code>buffer</code>です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプでは、読み取り操作はサポートしません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "何らかの I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadByte
  id: ReadByte
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプからバイトを読み取ります。"
  remarks: "使用して、<xref:System.IO.Pipes.PipeStream.CanRead%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる読み取り操作</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanRead%2A>。"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "キャストしたバイト<xref:System.Int32>、-1 (パイプが閉じられました) ストリームの末尾</xref:System.Int32>。"
  overload: System.IO.Pipes.PipeStream.ReadByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプでは、読み取り操作はサポートしません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "何らかの I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "取得または設定の読み取りモード、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>オブジェクト。"
  remarks: "匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode>モードのメッセージの送信</xref:System.IO.Pipes.PipeTransmissionMode>。"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode ReadMode { get; set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "いずれか、 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>を示す値、 <xref href=&quot;System.IO.Pipes.PipeStream&quot;> </xref>パイプからオブジェクトを読み取ります。"
  overload: System.IO.Pipes.PipeStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された値が有効な<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>値。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "指定された値は、サポートされていません<xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;></xref>このパイプ ストリームの値。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ハンドルが設定されていません。       - または - パイプが名前付きクライアントで接続を待機しています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、名前付きクライアントで I/O エラーが発生します。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  id: SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "パイプのローカルの終端のセーフ ハンドルを取得、現在<xref href=&quot;System.IO.Pipes.PipeStream&quot;></xref>オブジェクトによってカプセル化します。"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle SafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafePipeHandle&quot;> </xref>オブジェクトは、現在のカプセル化されるパイプの<xref href=&quot;System.IO.Pipes.PipeStream&quot;></xref>オブジェクト。"
  overload: System.IO.Pipes.PipeStream.SafePipeHandle*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプ ハンドルが設定されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "指定した値を現在のストリームの現在の位置を設定します。"
  remarks: "Seek メソッドは、パイプ、および発生でサポートされていません、<xref:System.NotSupportedException>が呼び出される場合</xref:System.NotSupportedException>。"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "相対的に、ポイント`origin`、シークの開始。"
    - id: origin
      type: System.IO.SeekOrigin
      description: "参照ポイントとして先頭、末尾、または現在位置を示す`offset`、 <xref:System.IO.SeekOrigin>.</xref:System.IO.SeekOrigin>型の値を使用します。"
    return:
      type: System.Int64
      description: "ストリームの新しい位置。"
  overload: System.IO.Pipes.PipeStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  id: SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "指定されたアクセス制御リスト (ACL) エントリを適用する<xref href=&quot;System.IO.Pipes.PipeSecurity&quot;></xref>オブジェクトを現在の指定されたパイプに<xref href=&quot;System.IO.Pipes.PipeStream&quot;></xref>オブジェクト。"
  remarks: 'アクセス制御リスト (ACL) は、個人やグループがある、またはなくても、指定されたファイルの特定のアクションを実行する権限について説明します。 詳細については、次を参照してください。[する方法: 追加または削除するアクセス制御リスト エントリ](~/add/includes/ajax-current-ext-md.md)です。'
  syntax:
    content: public void SetAccessControl (System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "A <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref>を現在のパイプに適用するアクセス制御リスト (ACL) エントリを指定するオブジェクト。"
  overload: System.IO.Pipes.PipeStream.SetAccessControl*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pipeSecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "セキュリティ情報の設定を基になる呼び出しが失敗しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のストリームの長さを指定した値に設定します。"
  remarks: "<xref:System.IO.Pipes.PipeStream>クラスは SetLength メソッドをサポートしていません</xref:System.IO.Pipes.PipeStream>。"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "ストリームの新しい長さ。"
  overload: System.IO.Pipes.PipeStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のパイプでサポートされるパイプ送信モードを取得します。"
  remarks: "匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode>モードのメッセージの送信</xref:System.IO.Pipes.PipeTransmissionMode>。"
  syntax:
    content: public virtual System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "1 つ、 <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>を現在のパイプでサポートされている送信モードを示す値。"
  overload: System.IO.Pipes.PipeStream.TransmissionMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ハンドルが設定されていません。       - または - パイプが匿名クライアント/サーバー操作、または名前付きクライアントでの接続を待機しています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  id: WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "送信されたすべてのバイトを読み取り、パイプのもう一方の端まで待機します。"
  remarks: "WaitForPipeDrain メソッドは、パイプのもう一方の端が送信されたすべてのバイトを読み取るまでをブロックします。"
  syntax:
    content: public void WaitForPipeDrain ();
    parameters: []
  overload: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプは書き込み操作をサポートしていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "バッファーからデータを使用して現在のストリームにバイトのブロックを書き込みます。"
  remarks: "使用して、<xref:System.IO.Pipes.PipeStream.CanWrite%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる書き込み操作です</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanWrite%2A>。       書き込みメソッドを呼び出すまでブロック`count`バイトが読み取られるか、ストリームの末尾に到達します。 非同期の読み取り操作<xref:System.IO.Pipes.PipeStream.BeginWrite%2A>および<xref:System.IO.Pipes.PipeStream.EndWrite%2A>。</xref:System.IO.Pipes.PipeStream.EndWrite%2A></xref:System.IO.Pipes.PipeStream.BeginWrite%2A>参照してください。"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "パイプに書き込むデータを格納しているバッファー。"
    - id: offset
      type: System.Int32
      description: "内の&0; から始まるバイト オフセット`buffer`現在のストリームにバイトのコピーを開始する位置。"
    - id: count
      type: System.Int32
      description: "現在のストリームに書き込むバイトの最大数。"
  overload: System.IO.Pipes.PipeStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 未満です。       - または -<code>count</code>が 0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>count</code>使用できるバイト数よりも大きい<code>buffer</code>です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプは書き込み操作をサポートしていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "現在のストリームにバイトを書き込みます。"
  remarks: "使用して、<xref:System.IO.Pipes.PipeStream.CanWrite%2A>プロパティを決定するかどうか、現在<xref:System.IO.Pipes.PipeStream>オブジェクトでサポートされる書き込み操作です</xref:System.IO.Pipes.PipeStream></xref:System.IO.Pipes.PipeStream.CanWrite%2A>。"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "ストリームに書き込むバイト。"
  overload: System.IO.Pipes.PipeStream.WriteByte*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "パイプは閉じています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "パイプは書き込み操作をサポートしていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "パイプが切断されているが、接続を待機しているか、ハンドルが設定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "パイプが壊れているか、別の I/O エラーが発生しました。"
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,Int32)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.PipeStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.Pipes.PipeTransmissionMode,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  nameWithType: PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
  fullName: System.IO.Pipes.PipeStream.PipeStream(PipeDirection,PipeTransmissionMode,Int32)
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.Pipes.PipeStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.Pipes.PipeStream.CanRead
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
  fullName: System.IO.Pipes.PipeStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.PipeStream.CanSeek
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
  fullName: System.IO.Pipes.PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
  fullName: System.IO.Pipes.PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations()
  nameWithType: PipeStream.CheckPipePropertyOperations()
  fullName: System.IO.Pipes.PipeStream.CheckPipePropertyOperations()
- uid: System.IO.Pipes.PipeStream.CheckReadOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations()
  nameWithType: PipeStream.CheckReadOperations()
  fullName: System.IO.Pipes.PipeStream.CheckReadOperations()
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations()
  nameWithType: PipeStream.CheckWriteOperations()
  fullName: System.IO.Pipes.PipeStream.CheckWriteOperations()
- uid: System.IO.Pipes.PipeStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: PipeStream.Dispose(Boolean)
  fullName: System.IO.Pipes.PipeStream.Dispose(Boolean)
- uid: System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: PipeStream.EndRead(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndRead(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: PipeStream.EndWrite(IAsyncResult)
  fullName: System.IO.Pipes.PipeStream.EndWrite(IAsyncResult)
- uid: System.IO.Pipes.PipeStream.Flush
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush()
  nameWithType: PipeStream.Flush()
  fullName: System.IO.Pipes.PipeStream.Flush()
- uid: System.IO.Pipes.PipeStream.GetAccessControl
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl()
  nameWithType: PipeStream.GetAccessControl()
  fullName: System.IO.Pipes.PipeStream.GetAccessControl()
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.PipeStream.InBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
  fullName: System.IO.Pipes.PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle(SafePipeHandle,Boolean,Boolean)
  nameWithType: PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
  fullName: System.IO.Pipes.PipeStream.InitializeHandle(SafePipeHandle,Boolean,Boolean)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
  fullName: System.IO.Pipes.PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
  fullName: System.IO.Pipes.PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
  fullName: System.IO.Pipes.PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
  fullName: System.IO.Pipes.PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
  fullName: System.IO.Pipes.PipeStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Pipes.PipeStream.OutBufferSize
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
  fullName: System.IO.Pipes.PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
  fullName: System.IO.Pipes.PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: PipeStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Read(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.ReadByte
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte()
  nameWithType: PipeStream.ReadByte()
  fullName: System.IO.Pipes.PipeStream.ReadByte()
- uid: System.IO.Pipes.PipeStream.ReadMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
  fullName: System.IO.Pipes.PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
  fullName: System.IO.Pipes.PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: PipeStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.Pipes.PipeStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl(PipeSecurity)
  nameWithType: PipeStream.SetAccessControl(PipeSecurity)
  fullName: System.IO.Pipes.PipeStream.SetAccessControl(PipeSecurity)
- uid: System.IO.Pipes.PipeStream.SetLength(System.Int64)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: PipeStream.SetLength(Int64)
  fullName: System.IO.Pipes.PipeStream.SetLength(Int64)
- uid: System.IO.Pipes.PipeStream.TransmissionMode
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
  fullName: System.IO.Pipes.PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain()
  nameWithType: PipeStream.WaitForPipeDrain()
  fullName: System.IO.Pipes.PipeStream.WaitForPipeDrain()
- uid: System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: PipeStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.Pipes.PipeStream.Write(Byte[],Int32,Int32)
- uid: System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: PipeStream.WriteByte(Byte)
  fullName: System.IO.Pipes.PipeStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.Pipes.PipeStream.#ctor*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: PipeStream
  nameWithType: PipeStream.PipeStream
- uid: System.IO.Pipes.PipeStream.BeginRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginRead
  nameWithType: PipeStream.BeginRead
- uid: System.IO.Pipes.PipeStream.BeginWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: BeginWrite
  nameWithType: PipeStream.BeginWrite
- uid: System.IO.Pipes.PipeStream.CanRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanRead
  nameWithType: PipeStream.CanRead
- uid: System.IO.Pipes.PipeStream.CanSeek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanSeek
  nameWithType: PipeStream.CanSeek
- uid: System.IO.Pipes.PipeStream.CanWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CanWrite
  nameWithType: PipeStream.CanWrite
- uid: System.IO.Pipes.PipeStream.CheckPipePropertyOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckPipePropertyOperations
  nameWithType: PipeStream.CheckPipePropertyOperations
- uid: System.IO.Pipes.PipeStream.CheckReadOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckReadOperations
  nameWithType: PipeStream.CheckReadOperations
- uid: System.IO.Pipes.PipeStream.CheckWriteOperations*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: CheckWriteOperations
  nameWithType: PipeStream.CheckWriteOperations
- uid: System.IO.Pipes.PipeStream.Dispose*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Dispose
  nameWithType: PipeStream.Dispose
- uid: System.IO.Pipes.PipeStream.EndRead*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndRead
  nameWithType: PipeStream.EndRead
- uid: System.IO.Pipes.PipeStream.EndWrite*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: EndWrite
  nameWithType: PipeStream.EndWrite
- uid: System.IO.Pipes.PipeStream.Flush*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Flush
  nameWithType: PipeStream.Flush
- uid: System.IO.Pipes.PipeStream.GetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: GetAccessControl
  nameWithType: PipeStream.GetAccessControl
- uid: System.IO.Pipes.PipeStream.InBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InBufferSize
  nameWithType: PipeStream.InBufferSize
- uid: System.IO.Pipes.PipeStream.InitializeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: InitializeHandle
  nameWithType: PipeStream.InitializeHandle
- uid: System.IO.Pipes.PipeStream.IsAsync*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsAsync
  nameWithType: PipeStream.IsAsync
- uid: System.IO.Pipes.PipeStream.IsConnected*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsConnected
  nameWithType: PipeStream.IsConnected
- uid: System.IO.Pipes.PipeStream.IsHandleExposed*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsHandleExposed
  nameWithType: PipeStream.IsHandleExposed
- uid: System.IO.Pipes.PipeStream.IsMessageComplete*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: IsMessageComplete
  nameWithType: PipeStream.IsMessageComplete
- uid: System.IO.Pipes.PipeStream.Length*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Length
  nameWithType: PipeStream.Length
- uid: System.IO.Pipes.PipeStream.OutBufferSize*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: OutBufferSize
  nameWithType: PipeStream.OutBufferSize
- uid: System.IO.Pipes.PipeStream.Position*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Position
  nameWithType: PipeStream.Position
- uid: System.IO.Pipes.PipeStream.Read*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Read
  nameWithType: PipeStream.Read
- uid: System.IO.Pipes.PipeStream.ReadByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadByte
  nameWithType: PipeStream.ReadByte
- uid: System.IO.Pipes.PipeStream.ReadMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: ReadMode
  nameWithType: PipeStream.ReadMode
- uid: System.IO.Pipes.PipeStream.SafePipeHandle*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SafePipeHandle
  nameWithType: PipeStream.SafePipeHandle
- uid: System.IO.Pipes.PipeStream.Seek*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Seek
  nameWithType: PipeStream.Seek
- uid: System.IO.Pipes.PipeStream.SetAccessControl*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetAccessControl
  nameWithType: PipeStream.SetAccessControl
- uid: System.IO.Pipes.PipeStream.SetLength*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: SetLength
  nameWithType: PipeStream.SetLength
- uid: System.IO.Pipes.PipeStream.TransmissionMode*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: TransmissionMode
  nameWithType: PipeStream.TransmissionMode
- uid: System.IO.Pipes.PipeStream.WaitForPipeDrain*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WaitForPipeDrain
  nameWithType: PipeStream.WaitForPipeDrain
- uid: System.IO.Pipes.PipeStream.Write*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: Write
  nameWithType: PipeStream.Write
- uid: System.IO.Pipes.PipeStream.WriteByte*
  parent: System.IO.Pipes.PipeStream
  isExternal: false
  name: WriteByte
  nameWithType: PipeStream.WriteByte
