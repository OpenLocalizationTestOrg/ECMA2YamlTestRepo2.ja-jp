### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlClientPermission
  id: SqlClientPermission
  children:
  - System.Data.SqlClient.SqlClientPermission.#ctor
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  - System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  - System.Data.SqlClient.SqlClientPermission.Copy
  langs:
  - csharp
  name: SqlClientPermission
  nameWithType: SqlClientPermission
  fullName: System.Data.SqlClient.SqlClientPermission
  type: Class
  summary: "SQL server ユーザーがデータ ソースにアクセスするための十分なセキュリティ レベルを持っているかどうかを確認するには、.NET Framework Data Provider を使用できます。"
  remarks: "<xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>プロパティよりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティ</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A></xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>。 そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A>に`false`をユーザーが、空白のパスワードを使用して接続するを防ぐ</xref:System.Data.Common.DBDataPermission.IsUnrestricted%2A></xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>。      > [!NOTE] > を ADO.NET のコード アクセス セキュリティのアクセス許可を使用する場合、適切なパターンが、最も制限の厳しいケース (権限なし) を開始し、コードが実行する必要がある特定のタスクに必要な特定のアクセス許可を追加します。 同じ接続文字列を表現するさまざまな方法があるために、すべての権限と、特定の権限を拒否して、逆のパターンは、セキュリティで保護されたではありません。 たとえば、すべての権限と、接続文字列の使用を拒否しようとし、&quot;server = someserver&quot;、&quot;server=someserver.mycompany.com&quot;という文字列は許可されます。 常に権限をまったく与えない状態から開始は、権限セットに穴がある可能性を低減します。"
  syntax:
    content: 'public sealed class SqlClientPermission : System.Data.Common.DBDataPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Data.Common.DBDataPermission
  implements: []
  inheritedMembers:
  - System.Data.Common.DBDataPermission.AllowBlankPassword
  - System.Data.Common.DBDataPermission.Clear
  - System.Data.Common.DBDataPermission.CreateInstance
  - System.Data.Common.DBDataPermission.FromXml(System.Security.SecurityElement)
  - System.Data.Common.DBDataPermission.Intersect(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsSubsetOf(System.Security.IPermission)
  - System.Data.Common.DBDataPermission.IsUnrestricted
  - System.Data.Common.DBDataPermission.ToXml
  - System.Data.Common.DBDataPermission.Union(System.Security.IPermission)
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref>クラスです。"
  syntax:
    content: public SqlClientPermission ();
    parameters: []
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref>クラスです。"
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  id: '#ctor(System.Security.Permissions.PermissionState,System.Boolean)'
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref>クラスです。"
  remarks: "<xref:System.Security.Permissions.PermissionState>列挙型よりも優先、<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>プロパティ</xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A></xref:System.Security.Permissions.PermissionState>。 そのため、設定した場合<xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>に`false`、設定する必要もあります<xref:System.Security.Permissions.PermissionState>に`None`をユーザーが、空白のパスワードを使用して接続するを防ぐ</xref:System.Security.Permissions.PermissionState></xref:System.Data.Common.DBDataPermission.AllowBlankPassword%2A>。 セキュリティ要求を使用する方法を示す例では、次を参照してください。[コード アクセス セキュリティと ADO.NET](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public SqlClientPermission (System.Security.Permissions.PermissionState state, bool allowBlankPassword);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
    - id: allowBlankPassword
      type: System.Boolean
      description: "空のパスワードを許可するかどうかを示します。"
  overload: System.Data.SqlClient.SqlClientPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  id: Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しい接続文字列およびに制限されているキーワードのセットを追加、 <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref>オブジェクト。"
  remarks: "このメソッドを使用すると、特定のアクセス許可オブジェクトで許可される接続文字列を構成できます。 たとえば、のみの特定の接続文字列およびそれ以外のものを許可する場合に次のコード フラグメントを使用:`permission.Add(&quot;server=MyServer; database=MyDatabase; Integrated Security=true&quot;, &quot;&quot;, KeyRestrictionBehavior.AllowOnly)`次の例では任意のユーザー名とパスワードの組み合わせとその他の接続文字列キーワードが含まれていない&quot;myserver&quot;をという名前のサーバーでのみが、任意のデータベースを使用する接続文字列:`permission.Add(&quot;server=MyServer;&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`次の例は上と同じシナリオを使用してがにより使用できるように構成サーバーに接続するときにミラーリングのフェールオーバー パートナーの: `permission.Add(&quot;server=MyServer; failover partner=MyMirrorServer&quot;, &quot;database=; user id=; password=;&quot;, KeyRestrictionBehavior.AllowOnly)`       >  [!NOTE] > を ADO.NET のコード アクセス セキュリティのアクセス許可を使用する場合、適切なパターンが、最も制限の厳しいケース (権限なし) を開始し、コードが実行する必要がある特定のタスクに必要な特定のアクセス許可を追加します。 同じ接続文字列を表現するさまざまな方法があるために、すべての権限と、特定の権限を拒否しよう、逆のパターンは、セキュリティで保護されたではありません。 たとえば、すべての権限と、接続文字列の使用を拒否しようとし、&quot;server = someserver&quot;、&quot;server=someserver.mycompany.com&quot;という文字列は許可されます。 常に権限をまったく与えない状態から開始は、権限セットに穴がある可能性を低減します。"
  syntax:
    content: public override void Add (string connectionString, string restrictions, System.Data.KeyRestrictionBehavior behavior);
    parameters:
    - id: connectionString
      type: System.String
      description: "接続文字列。"
    - id: restrictions
      type: System.String
      description: "キーの制限。"
    - id: behavior
      type: System.Data.KeyRestrictionBehavior
      description: "1 つ、 <xref href=&quot;System.Data.KeyRestrictionBehavior&quot;> </xref>列挙体です。"
  overload: System.Data.SqlClient.SqlClientPermission.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  id: Copy
  parent: System.Data.SqlClient.SqlClientPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Returns the <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref> as an <xref href=&quot;System.Security.IPermission&quot;></xref>."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可オブジェクトのコピー。"
  overload: System.Data.SqlClient.SqlClientPermission.Copy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DBDataPermission
  isExternal: false
  name: System.Data.Common.DBDataPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission()
  nameWithType: SqlClientPermission.SqlClientPermission()
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission()
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Data.SqlClient.SqlClientPermission.#ctor(System.Security.Permissions.PermissionState,System.Boolean)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission(PermissionState,Boolean)
  nameWithType: SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
  fullName: System.Data.SqlClient.SqlClientPermission.SqlClientPermission(PermissionState,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlClientPermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add(String,String,KeyRestrictionBehavior)
  nameWithType: SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
  fullName: System.Data.SqlClient.SqlClientPermission.Add(String,String,KeyRestrictionBehavior)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.KeyRestrictionBehavior
  parent: System.Data
  isExternal: false
  name: KeyRestrictionBehavior
  nameWithType: KeyRestrictionBehavior
  fullName: System.Data.KeyRestrictionBehavior
- uid: System.Data.SqlClient.SqlClientPermission.Copy
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy()
  nameWithType: SqlClientPermission.Copy()
  fullName: System.Data.SqlClient.SqlClientPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Data.SqlClient.SqlClientPermission.#ctor*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: SqlClientPermission
  nameWithType: SqlClientPermission.SqlClientPermission
- uid: System.Data.SqlClient.SqlClientPermission.Add*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Add
  nameWithType: SqlClientPermission.Add
- uid: System.Data.SqlClient.SqlClientPermission.Copy*
  parent: System.Data.SqlClient.SqlClientPermission
  isExternal: false
  name: Copy
  nameWithType: SqlClientPermission.Copy
