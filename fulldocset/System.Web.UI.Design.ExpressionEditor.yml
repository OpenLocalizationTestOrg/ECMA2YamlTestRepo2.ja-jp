### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditor
  id: ExpressionEditor
  children:
  - System.Web.UI.Design.ExpressionEditor.#ctor
  - System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
  type: Class
  summary: "デザイン時と式エディター ダイアログ ボックスで使用するためのビジュアル デ ザイン ホストに式エディター シートを提供するコントロールのプロパティに関連付けられている式の評価のプロパティとメソッドのセットを定義します。 このクラスは抽象クラスです。"
  remarks: "ビジュアルなデザイナー ホストなど[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]をユーザーが現在のカスタム式エディター シートに ExpressionEditor クラスを使用して、デザイン時のレンダリングについて、選択した式を評価します。       参照すると、<xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>コントロールのプロパティをデザイン時プロパティ グリッドで、ビジュアル デザイナーがコントロールのプロパティの式を設定するダイアログ ボックスを表示します</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>。 式のプレフィックスのリストに基づく式の型を選択することができます。 ビジュアル デザイナーが関連付けられている ExpressionEditor を使用して、一覧から式のプレフィックスを選択すると、<xref:System.Web.UI.Design.ExpressionEditorSheet>オブジェクトを設定するには、評価、および、その種類の式の構文に基づく式の文字列に変換します</xref:System.Web.UI.Design.ExpressionEditorSheet>。 ビジュアル デザイナーでは、関連付けられたコントロール プロパティの式を設定し、評価された式の結果を使用して、コントロールがデザイン サーフェイスにレンダリングされるプロパティ値を割り当てます。       静的な<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、特定の式のプレフィックスまたは式に関連付けられている式エディターを取得します</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>。 <xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>ExpressionEditor オブジェクトのプロパティが構成されている式のプレフィックスを取得します</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>。 <xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>メソッドは、入力式の文字列を評価します</xref:System.Web.UI.Design.ExpressionEditor.EvaluateExpression%2A>。 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドを返します、<xref:System.Web.UI.Design.ExpressionEditorSheet>式 ダイアログ ボックスでカスタム式のプロパティの使用を要求する実装</xref:System.Web.UI.Design.ExpressionEditorSheet></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>。       通常、デザイン時に新しい式の型をサポートするために一意の式のプレフィックスを定義し、提供するカスタム、<xref:System.Web.Compilation.ExpressionBuilder>と ExpressionEditor の実装</xref:System.Web.Compilation.ExpressionBuilder>。 必要に応じて、カスタムを指定できます<xref:System.Web.UI.Design.ExpressionEditorSheet>式 ダイアログ ボックス内の式の形成に使用されるプロパティを定義する実装</xref:System.Web.UI.Design.ExpressionEditorSheet>。       式のプレフィックスは、カスタム式の種類を識別し、式を式ビルダーと式エディターに関連付けます。 関連付けられているインスタンスを作成する式のプレフィックスが使用されるページでは、ユーザー定義の式が解析される、ときに<xref:System.Web.Compilation.ExpressionBuilder>と ExpressionEditor クラス</xref:System.Web.Compilation.ExpressionBuilder>。 式のプレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders` Web 構成ファイル内の要素</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.Compilation.ExpressionEditorAttribute>。 プレフィックスは必須ではありませんが、強くお勧めします。"
  example:
  - "The following code example demonstrates how to derive from the ExpressionEditor class to define a custom expression editor.  \n  \n [!code-cs[CustomExpressionEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.e_0_1.cs)]"
  syntax:
    content: public abstract class ExpressionEditor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.Design.ExpressionEditor>クラスは抽象クラスのインスタンスを作成することはできません、<xref:System.Web.UI.Design.ExpressionEditor>クラス ExpressionEditor コンス トラクターを直接使用します</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.UI.Design.ExpressionEditor>。"
  syntax:
    content: protected ExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.ExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "式の文字列を評価し、コントロールのプロパティのデザイン時の値を提供します。"
  remarks: "ビジュアル デザイナー ホストでは、式の評価メソッドを使用して、式を評価し、関連付けられているコントロールのデザイン時の値を提供します。       ビジュアル デザイナーを使用して、<xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName>をデザイン時に、式の文字列を解析し解析された式のデータを持つ式の評価メソッドを呼び出します</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression%2A?displayProperty=fullName>。 ビジュアル デザイナーでは、評価された式の結果を使用してコントロールのデザイン サーフェイスに表示されるプロパティの値を割り当てます。"
  syntax:
    content: public abstract object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "評価する式の文字列。 式では、式のプレフィックスは含まれません。"
    - id: parseTimeData
      type: System.Object
      description: "評価するための追加の解析情報を含むオブジェクト`expression`です。 これは通常、式ビルダーによって提供されます。"
    - id: propertyType
      type: System.Type
      description: "コントロール プロパティの型`expression`がバインドされています。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Object
      description: "式の評価が成功した場合、式の評価結果の文字列によって参照されるオブジェクトそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "式エディターの実装でサポートされている式の文字列を識別する式のプレフィックスを取得します。"
  remarks: "式のプレフィックスは、カスタム式の種類を識別し、式を式ビルダーと式エディターに関連付けます。 関連付けられているインスタンスを作成する式のプレフィックスが使用されるページでは、ユーザー定義の式が解析される、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.Compilation.ExpressionBuilder>。 式のプレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders` Web 構成ファイル内の要素</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.Compilation.ExpressionEditorAttribute>。       通常、派生クラスでは、されてプロパティはオーバーライドされません。 基本<xref:System.Web.UI.Design.ExpressionEditor>クラスに基づいたされて値の設定、<xref:System.Web.Compilation.ExpressionPrefixAttribute>関連付けられている属性<xref:System.Web.Compilation.ExpressionBuilder>オブジェクト</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.UI.Design.ExpressionEditor>。"
  syntax:
    content: public string ExpressionPrefix { get; }
    return:
      type: System.String
      description: "派生したクラスでサポートされている式にプレフィックスを表す文字列を<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>以外の場合、空の文字列 (&quot;&quot;)、式エディターには、関連付けられている式のプレフィックスがない場合、します。"
  overload: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  id: GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "返します、 <xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>指定された式のプレフィックスに関連付けられている実装します。"
  remarks: "静的なを使用して<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>を検索するメソッドのオーバー ロード、<xref:System.Web.UI.Design.ExpressionEditor>式ビルダー型、または特定の式のプレフィックスに関連付けられているオブジェクト</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>。       各カスタムの式の型は、式のプレフィックスは、関連付けられている式ビルダーと式エディターを識別します。 関連付けられているインスタンスを作成する式のプレフィックスが使用されるページでは、ユーザー定義の式が解析される、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.Compilation.ExpressionBuilder>。       式のプレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders` Web 構成ファイル内の要素</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.Compilation.ExpressionEditorAttribute>。       式のプレフィックス、関連付けられた式エディターが見つかりません、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、使用可能な列挙<xref:System.Web.Compilation.ExpressionBuilder>、対応するプレフィックスの実装</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>。 <xref:System.Web.Compilation.ExpressionBuilder>での実装を構成することができます、 `expressionBuilders` Web 構成ファイルのセクション</xref:System.Web.Compilation.ExpressionBuilder>。 場合は、使用可能な<xref:System.Web.Compilation.ExpressionBuilder>実装で式のプレフィックスを定義、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドで指定されている型を返す、<xref:System.Web.Compilation.ExpressionEditorAttribute>の属性、<xref:System.Web.Compilation.ExpressionBuilder>メタデータ</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionEditorAttribute></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A></xref:System.Web.Compilation.ExpressionBuilder>。"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (string expressionPrefix, IServiceProvider serviceProvider);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "式のプレフィックスが関連付けられている式エディターの検索に使用します。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>に関連付けられた実装<code> expressionPrefix </code>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、 <code> expressionPrefix </code>が定義されていないか、関連付けられていない、 <xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>です。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  id: GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "返します、 <xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>指定された式ビルダーの型に関連付けられている実装します。"
  remarks: "静的なを使用して<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>を検索するオーバー ロード、<xref:System.Web.UI.Design.ExpressionEditor>式ビルダー型、または特定の式のプレフィックスに関連付けられているオブジェクト</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>。       各カスタムの式の型は、式のプレフィックスは、関連付けられている式ビルダーと式エディターを識別します。 関連付けられているインスタンスを作成する式のプレフィックスが使用されるページでは、ユーザー定義の式が解析される、ときに<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>クラス</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.Compilation.ExpressionBuilder>。       式のプレフィックスを式ビルダーと式エディターに関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>と<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Compilation.ExpressionBuilder>クラスし、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders` Web 構成ファイル内の要素</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.Compilation.ExpressionEditorAttribute>。       <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドは、使用可能な列挙<xref:System.Web.Compilation.ExpressionBuilder>検索を実装する`expressionBuilderType`</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>。 <xref:System.Web.Compilation.ExpressionBuilder>での実装を構成することができます、 `expressionBuilders` Web 構成ファイルのセクション</xref:System.Web.Compilation.ExpressionBuilder>。 場合`expressionBuilderType`が利用可能なセットで見つかった<xref:System.Web.Compilation.ExpressionBuilder>実装では、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A>メソッドで指定されている型を返す、<xref:System.Web.Compilation.ExpressionEditorAttribute>の属性、<xref:System.Web.Compilation.ExpressionBuilder>メタデータ</xref:System.Web.Compilation.ExpressionBuilder></xref:System.Web.Compilation.ExpressionEditorAttribute></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor%2A></xref:System.Web.Compilation.ExpressionBuilder>。"
  syntax:
    content: public static System.Web.UI.Design.ExpressionEditor GetExpressionEditor (Type expressionBuilderType, IServiceProvider serviceProvider);
    parameters:
    - id: expressionBuilderType
      type: System.Type
      description: "関連付けられている式エディターを検索するため、派生した式ビルダー クラスの型。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Web.UI.Design.ExpressionEditor
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;> </xref>に関連付けられた実装<code> expressionBuilderType </code>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、 <code> expressionBuilderType </code>が見つからないかに関連しない<xref href=&quot;System.Web.UI.Design.ExpressionEditor&quot;></xref>です。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expressionBuilderType</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>serviceProvider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "現在の式エディターに関連付けられている式エディターのシートを返します。"
  remarks: "GetExpressionEditorSheet メソッドを返します、<xref:System.Web.UI.Design.ExpressionEditorSheet>文字列を結合して、カスタム式を定義する実装</xref:System.Web.UI.Design.ExpressionEditorSheet>。 ビジュアル デザイナーでは、式エディター シートを使用して、カスタム式に結合する&1; つ以上の文字列の入力を求めます。 基本クラスのメソッドでは、式を作成する&1; つの入力文字列を使用して、既定の式のエディター シートを返します。 式エディター シートでは、式のプロパティ グリッドを定義します。 そのため、式エディターを公開するプロパティ ダイアログ ボックスで式を定義できるプロパティになります。       派生するクラス、<xref:System.Web.UI.Design.ExpressionEditor>クラスは必要に応じて、カスタム式エディターのシートを提供する GetExpressionEditorSheet メソッドをオーバーライドできます</xref:System.Web.UI.Design.ExpressionEditor>。 カスタム式エディターのシートには、フォーム、式の文字列に結合されますが、複数のプロパティをデザイン時に入力を許可できます。       たとえば、<xref:System.Web.UI.Design.ResourceExpressionEditor>から派生したクラス、<xref:System.Web.UI.Design.ExpressionEditor>クラスおよび評価して、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.UI.Design.ResourceExpressionEditor>。 <xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられた`Resources`と<xref:System.Web.UI.Design.ResourceExpressionEditor>実装</xref:System.Web.UI.Design.ResourceExpressionEditor></xref:System.Web.Compilation.ResourceExpressionBuilder>。 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>メソッドを返します、 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>、リソースの参照式が形成する個々 のプロパティを定義します</xref:System.Web.UI.Design.ResourceExpressionEditorSheet></xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "式エディターのシートを初期化するために使用される、コントロール プロパティを設定する式の文字列。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "<xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref>カスタム式のプロパティを定義します。"
  overload: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.Design.ExpressionEditor.#ctor
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor()
  nameWithType: ExpressionEditor.ExpressionEditor()
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionEditor()
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
  fullName: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor
  fullName: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor(Type,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(Type,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditor.#ctor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionEditor
  nameWithType: ExpressionEditor.ExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.ExpressionEditor.ExpressionPrefix*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionEditor.ExpressionPrefix
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditor*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditor
  nameWithType: ExpressionEditor.GetExpressionEditor
- uid: System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: ExpressionEditor.GetExpressionEditorSheet
