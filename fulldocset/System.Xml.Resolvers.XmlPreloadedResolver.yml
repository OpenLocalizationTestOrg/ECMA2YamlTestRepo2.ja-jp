### YamlMime:ManagedReference
items:
- uid: System.Xml.Resolvers.XmlPreloadedResolver
  id: XmlPreloadedResolver
  children:
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  - System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  - System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  - System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  - System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver
  fullName: System.Xml.Resolvers.XmlPreloadedResolver
  type: Class
  summary: "Dtd または XML でキャッシュを事前に設定するために使用するクラスを表すストリーム。"
  remarks: "XmlPreloadedResolver 型は、ネットワークに自動の呼び出しが必要ではないかは不可能な場合に競合回避モジュールとして使用されます。 たとえば、キャッシュされた外部 Dtd を読み込むためのこの型を使用できます。 または、XHTML 1.0 で定義されている既知の Dtd を事前に読み込む XmlPreloadedResolver を使用する場合があります。 よく知られている Dtd を事前読み込みしても、ネットワーク接続は起動しませんこれらの Dtd は既に System.Xml.Utils アセンブリに埋め込まれているため。 現在、XmlPreloadedResolver には、XHTML 1.0 および RSS 0.91 で定義されている Dtd が含まれています。"
  syntax:
    content: 'public class XmlPreloadedResolver : System.Xml.XmlResolver'
  inheritance:
  - System.Object
  - System.Xml.XmlResolver
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  id: '#ctor'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>クラスです。"
  syntax:
    content: public XmlPreloadedResolver ();
    parameters: []
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>指定したクラスは、よく知られている Dtd をプリロードします。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "よく知られている Dtd キャッシュに事前に設定する必要があります。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  id: '#ctor(System.Xml.XmlResolver)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>指定した代替競合回避モジュールを持つクラス。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>、または独自のリゾルバー。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>指定した代替競合回避モジュールでクラスし、よく知られている Dtd をプリロードします。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>、または独自のリゾルバー。"
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "よく知られている Dtd キャッシュに事前に設定する必要があります。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  id: '#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})'
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>指定フォールバック リゾルバー、事前に読み込むのよく知られている Dtd を持つクラスと URI の等値比較子。"
  remarks: "URI の比較をカスタマイズする場合は、このコンス トラクター オーバー ロードを使用します。"
  syntax:
    content: public XmlPreloadedResolver (System.Xml.XmlResolver fallbackResolver, System.Xml.Resolvers.XmlKnownDtds preloadedDtds, System.Collections.Generic.IEqualityComparer<Uri> uriComparer);
    parameters:
    - id: fallbackResolver
      type: System.Xml.XmlResolver
      description: "<xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_XmlXapResolver&quot; name=&quot;XmlXapResolver&quot; href=&quot;&quot;> </xref>、または独自のリゾルバー。"
    - id: preloadedDtds
      type: System.Xml.Resolvers.XmlKnownDtds
      description: "よく知られている Dtd キャッシュに事前に設定する必要があります。"
    - id: uriComparer
      type: System.Collections.Generic.IEqualityComparer{System.Uri}
      description: "実装、 &lt;xref:System.Collections.Generic.IEqualityComparer%601&gt; Uri を比較するときに使用するジェネリック インターフェイス。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  id: Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "バイト配列を追加、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>保存し、URI にマップします。 ストアには、同じ URI のマッピングが既に含まれています、既存のマッピングはオーバーライドされます。"
  syntax:
    content: public void Add (Uri uri, byte[] value);
    parameters:
    - id: uri
      type: System.Uri
      description: "追加されているデータの URI、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>を格納します。"
    - id: value
      type: System.Byte[]
      description: "指定された URI に対応するデータのバイト配列。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  id: Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "追加、<xref:System.IO.Stream>を<xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>保存し、URI にマップします</xref:System.IO.Stream>。 ストアには、同じ URI のマッピングが既に含まれています、既存のマッピングはオーバーライドされます。"
  syntax:
    content: public void Add (Uri uri, System.IO.Stream value);
    parameters:
    - id: uri
      type: System.Uri
      description: "追加されているデータの URI、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>を格納します。"
    - id: value
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>指定された URI に対応するデータを使用します</xref:System.IO.Stream>。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  id: Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "プリロードされているデータに文字列を追加、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>保存し、URI にマップします。 ストアには、同じ URI のマッピングが既に含まれています、既存のマッピングはオーバーライドされます。"
  syntax:
    content: public void Add (Uri uri, string value);
    parameters:
    - id: uri
      type: System.Uri
      description: "追加されているデータの URI、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>を格納します。"
    - id: value
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>指定された URI に対応するデータを使用します。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  id: Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "バイト配列を追加、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>保存し、URI にマップします。 ストアには、同じ URI のマッピングが既に含まれています、既存のマッピングはオーバーライドされます。"
  syntax:
    content: public void Add (Uri uri, byte[] value, int offset, int count);
    parameters:
    - id: uri
      type: System.Uri
      description: "追加されているデータの URI、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>を格納します。"
    - id: value
      type: System.Byte[]
      description: "指定された URI に対応するデータのバイト配列。"
    - id: offset
      type: System.Int32
      description: "データの開始場所の指定されたバイト配列内のオフセット。"
    - id: count
      type: System.Int32
      description: "指定したオフセットで開始するバイト配列から読み取るバイト数。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>または<code>count</code>が 0 未満です。       - または - の長さ、<code>value</code>マイナス<code>offset</code>はより小さい<code>count.</code>"
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  id: Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "基になる<xref:System.Net.WebRequest>。</xref:System.Net.WebRequest>の認証に使用される資格情報を設定します。"
  syntax:
    content: public override System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "基になる web 要求の認証に使用される資格情報。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "URI を実際のリソースを格納しているオブジェクトをマップします。"
  remarks: "<xref:System.Xml.Resolvers.XmlPreloadedResolver>プリロードされているデータのストア内のリソースを検索するにはまず</xref:System.Xml.Resolvers.XmlPreloadedResolver>。 検出できない場合、フォールバックのリゾルバーが呼び出されます`GetEntity`メソッドです。 フォールバック競合回避モジュールが提供されなかった場合、<xref:System.Xml.Resolvers.XmlPreloadedResolver>コンス トラクターを例外がスローされます</xref:System.Xml.Resolvers.XmlPreloadedResolver>。"
  syntax:
    content: public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "<xref:System.Xml.XmlResolver.ResolveUri*>。</xref:System.Xml.XmlResolver.ResolveUri*>から返された URI"
    - id: role
      type: System.String
      description: "Silverlight の .NET Framework の現在のバージョンは、Uri を解決するときに、このパラメーターを使用しません。 このパラメーターは将来の拡張のために提供されます。 たとえば、このパラメーターを xlink:role におよびその他のシナリオの実装に固有の引数として使用します。"
    - id: ofObjectToReturn
      type: System.Type
      description: "返すオブジェクトの型。 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>サポート<xref:System.IO.Stream>オブジェクトおよび<xref:System.IO.TextReader>オブジェクトとして追加された Uri の<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref></xref:System.IO.TextReader> </xref:System.IO.Stream> 。 要求された型が、競合回避モジュールでサポートされない場合、例外がスローされます。 使用して、<xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>特定かを判断するメソッド<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>この競合回避モジュールでサポートされています</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>。"
    return:
      type: System.Object
      description: "A<xref:System.IO.Stream>または<xref:System.IO.TextReader>実際のソースに対応するオブジェクト</xref:System.IO.TextReader></xref:System.IO.Stream>。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "渡された URI を解決できない<code> absoluteUri</code>です。       - または - <code> ofObjectToReturn </code>のサポートされている型はありません。"
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "URI を実際のリソースを格納しているオブジェクトを非同期的にマップします。"
  syntax:
    content: public override System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "<xref:System.Xml.XmlResolver.ResolveUri*>。</xref:System.Xml.XmlResolver.ResolveUri*>から返された URI"
    - id: role
      type: System.String
      description: "Silverlight の .NET Framework の現在のバージョンは、Uri を解決するときに、このパラメーターを使用しません。 このパラメーターは将来の拡張のために提供されます。 たとえば、このパラメーターを xlink:role におよびその他のシナリオの実装に固有の引数として使用します。"
    - id: ofObjectToReturn
      type: System.Type
      description: "返すオブジェクトの型。 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>サポート<xref:System.IO.Stream>オブジェクトおよび<xref:System.IO.TextReader>オブジェクトとして追加された Uri の<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref></xref:System.IO.TextReader> </xref:System.IO.Stream> 。 要求された型が、競合回避モジュールでサポートされない場合、例外がスローされます。 使用して、<xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>特定かを判断するメソッド<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;></xref>この競合回避モジュールでサポートされています</xref:System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*>。"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "A<xref:System.IO.Stream>または<xref:System.IO.TextReader>実際のソースに対応するオブジェクト</xref:System.IO.TextReader></xref:System.IO.Stream>。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  id: PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "プリロードされている Uri のコレクションを取得します。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Uri> PreloadedUris { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: "プリロードされている Uri のコレクション。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "元の URI に対応するデータの削除、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;></xref>です。"
  remarks: "ストア内のデータが存在しない場合、例外はスローされません。"
  syntax:
    content: public void Remove (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "削除するか、データの URI、 <xref href=&quot;System.Xml.Resolvers.XmlPreloadedResolver&quot;> </xref>を格納します。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "ベース uri と相対 Uri から絶対 URI を解決します。"
  syntax:
    content: public override Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "ベース URI は相対 URI の解決に使用されます。"
    - id: relativeUri
      type: System.String
      description: "解決するのには URI です。 絶対パスまたは相対 URI でもかまいません。 かどうか絶対で、この値は効果的に置き換え、`baseUri`値。 かどうか、相対それを組み合わせて、`baseUri`絶対 URI を作成します。"
    return:
      type: System.Uri
      description: "<xref:System.Uri>を表す絶対 URI または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>相対 URI を解決できない場合</xref:System.Uri>。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Resolvers
  summary: "競合回避モジュールが他の<xref:System.Type>単なる<xref:System.IO.Stream>。</xref:System.IO.Stream>より s</xref:System.Type>をサポートするかどうかを決定します。"
  syntax:
    content: public override bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "絶対 URI を確認します。"
    - id: type
      type: System.Type
      description: "<xref:System.Type>を返します</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Type>はサポートされている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Type> 。"
  overload: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>uri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Xml.XmlResolver
  isExternal: false
  name: System.Xml.XmlResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver()
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver()
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver()
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlKnownDtds
  parent: System.Xml.Resolvers
  isExternal: false
  name: XmlKnownDtds
  nameWithType: XmlKnownDtds
  fullName: System.Xml.Resolvers.XmlKnownDtds
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor(System.Xml.XmlResolver,System.Xml.Resolvers.XmlKnownDtds,System.Collections.Generic.IEqualityComparer{System.Uri})
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.XmlPreloadedResolver(XmlResolver,XmlKnownDtds,IEqualityComparer<Uri>)
- uid: System.Collections.Generic.IEqualityComparer{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<Uri>
  nameWithType: IEqualityComparer<Uri>
  fullName: System.Collections.Generic.IEqualityComparer<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: IEqualityComparer<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[])
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[])
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[])
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[])
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.IO.Stream)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Stream)
  nameWithType: XmlPreloadedResolver.Add(Uri,Stream)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,String)
  nameWithType: XmlPreloadedResolver.Add(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add(System.Uri,System.Byte[],System.Int32,System.Int32)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add(Uri,Byte[],Int32,Int32)
  nameWithType: XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Add(Uri,Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity(Uri,String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove(System.Uri)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove(Uri)
  nameWithType: XmlPreloadedResolver.Remove(Uri)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.Remove(Uri)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlPreloadedResolver.ResolveUri(Uri,String)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri(Uri,String)
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlPreloadedResolver.SupportsType(Uri,Type)
  fullName: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Resolvers.XmlPreloadedResolver.#ctor*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: XmlPreloadedResolver
  nameWithType: XmlPreloadedResolver.XmlPreloadedResolver
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Add*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Add
  nameWithType: XmlPreloadedResolver.Add
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Credentials*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlPreloadedResolver.Credentials
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntity*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlPreloadedResolver.GetEntity
- uid: System.Xml.Resolvers.XmlPreloadedResolver.GetEntityAsync*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlPreloadedResolver.GetEntityAsync
- uid: System.Xml.Resolvers.XmlPreloadedResolver.PreloadedUris*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: PreloadedUris
  nameWithType: XmlPreloadedResolver.PreloadedUris
- uid: System.Xml.Resolvers.XmlPreloadedResolver.Remove*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: Remove
  nameWithType: XmlPreloadedResolver.Remove
- uid: System.Xml.Resolvers.XmlPreloadedResolver.ResolveUri*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlPreloadedResolver.ResolveUri
- uid: System.Xml.Resolvers.XmlPreloadedResolver.SupportsType*
  parent: System.Xml.Resolvers.XmlPreloadedResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlPreloadedResolver.SupportsType
