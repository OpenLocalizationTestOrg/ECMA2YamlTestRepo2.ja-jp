### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebRequestInformation
  id: WebRequestInformation
  children:
  - System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebRequestInformation.Principal
  - System.Web.Management.WebRequestInformation.RequestPath
  - System.Web.Management.WebRequestInformation.RequestUrl
  - System.Web.Management.WebRequestInformation.ThreadAccountName
  - System.Web.Management.WebRequestInformation.UserHostAddress
  langs:
  - csharp
  name: WebRequestInformation
  nameWithType: WebRequestInformation
  fullName: System.Web.Management.WebRequestInformation
  type: Class
  summary: "現在の Web 要求に関する情報を提供します。"
  remarks: "配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。 <xref:System.Web.Management>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています</xref:System.Web.Management>。 正常性イベントの管理を支援するサポート型も含まれています。       WebRequestInformation クラスのインスタンスには使用して取得される情報が含まれて、 <xref:System.Web.Management.WebRequestEvent>、 <xref:System.Web.Management.WebAuditEvent>、 <xref:System.Web.Management.WebErrorEvent>、または<xref:System.Web.Management.WebRequestErrorEvent>型です</xref:System.Web.Management.WebRequestErrorEvent></xref:System.Web.Management.WebErrorEvent></xref:System.Web.Management.WebAuditEvent></xref:System.Web.Management.WebRequestEvent>。       アプリケーションでは、この型によって提供される保護された情報にアクセスする適切なアクセス許可が必要です。      > [!NOTE] > ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。 独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。 カスタム イベント クラスの作成の例は、このトピックで例を参照してください。"
  example:
  - "The following code example shows how to implement a custom event that uses the WebRequestInformation type.  \n  \n Also shown is an excerpt of the configuration file that enables ASP.NET to use this custom event.  \n  \n Ensure that your custom event is raised at the proper time, that is, when the equivalent system health event it replaces would be raised.  \n  \n```  \n<healthMonitoring  \n  heartBeatInterval=\"0\" enabled=\"true\">  \n  \n  <profiles>  \n    <add name=\"Custom\"   \n      minInstances=\"1\"   \n      maxLimit=\"Infinite\"   \n      minInterval=\"00:00:00\" />  \n  </profiles>  \n  \n  <eventMappings>  \n  \n    <add   \n      name=\"SampleWebRequestInformation\"   \n      type=\"SamplesAspNet.SampleWebRequestInformation,webrequestinformation,Version=1.0.1782.28745, Culture=neutral, PublicKeyToken=79955d9b8521c250,processorArchitecture=MSIL\" />  \n  \n  </eventMappings>  \n  \n  <rules>  \n  \n    <add name=\"Custom Web Request Info Event\"   \n      eventName=\"SampleWebRequestInformation\"   \n      provider=\"EventLogProvider\"  \n      profile=\"Custom\" />  \n  \n  </rules>  \n  \n</healthMonitoring>  \n```  \n  \n [!code-cs[System.Web.Management.WebRequestInformation#1](~/add/codesnippet/csharp/t-system.web.management._11_1.cs)]\n [!code-vb[System.Web.Management.WebRequestInformation#1](~/add/codesnippet/visualbasic/t-system.web.management._11_1.vb)]"
  syntax:
    content: public sealed class WebRequestInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)
  id: FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: FormatToString(WebEventFormatter)
  nameWithType: WebRequestInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebRequestInformation.FormatToString(WebEventFormatter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Web 要求の情報を書式設定します。"
  remarks: "FormatToString メソッドは、イベントについては、イベント データをログに記録され後で、ユーザーに提示する必要がある場合に便利です、同一の形式を提供します。 プロバイダーは、のいずれかを呼び出したときに内部的に呼び出されます、<xref:System.Web.Management.WebBaseEvent.ToString%2A>メソッド</xref:System.Web.Management.WebBaseEvent.ToString%2A>。"
  example:
  - "The following code example shows how to format custom information.  \n  \n [!code-cs[System.Web.Management.WebRequestInformation#9](~/add/codesnippet/csharp/ca29f60b-9b94-4c78-a2ae-_1.cs)]\n [!code-vb[System.Web.Management.WebRequestInformation#9](~/add/codesnippet/visualbasic/ca29f60b-9b94-4c78-a2ae-_1.vb)]"
  syntax:
    content: public void FormatToString (System.Web.Management.WebEventFormatter formatter);
    parameters:
    - id: formatter
      type: System.Web.Management.WebEventFormatter
      description: "<xref href=&quot;System.Web.Management.WebEventFormatter&quot;> </xref> Web 状態のイベント情報を書式設定に使用タブとインデントの設定値を格納します。"
  overload: System.Web.Management.WebRequestInformation.FormatToString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.Principal
  id: Principal
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: Principal
  nameWithType: WebRequestInformation.Principal
  fullName: System.Web.Management.WebRequestInformation.Principal
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Web 要求に関連付けられているマネージ コードのプリンシパルのインスタンスを取得します。"
  remarks: "プリンシパルは、Web 要求を発行した認証されたエンティティを意味します。"
  example:
  - "The following code example shows how to use the principal associated with the Web request.  \n  \n [!code-cs[System.Web.Management.WebRequestInformation#8](~/add/codesnippet/csharp/p-system.web.management._39_1.cs)]\n [!code-vb[System.Web.Management.WebRequestInformation#8](~/add/codesnippet/visualbasic/p-system.web.management._39_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal Principal { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>要求イベントに関連付けられているインスタンス</xref:System.Security.Principal.IPrincipal>。"
  overload: System.Web.Management.WebRequestInformation.Principal*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.RequestPath
  id: RequestPath
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: RequestPath
  nameWithType: WebRequestInformation.RequestPath
  fullName: System.Web.Management.WebRequestInformation.RequestPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Web 要求の物理パスを取得します。"
  remarks: ''
  example:
  - "The following code example shows how to get the Web-request path.  \n  \n [!code-cs[System.Web.Management.WebRequestInformation#5](~/add/codesnippet/csharp/p-system.web.management._0_1.cs)]\n [!code-vb[System.Web.Management.WebRequestInformation#5](~/add/codesnippet/visualbasic/p-system.web.management._0_1.vb)]"
  syntax:
    content: public string RequestPath { get; }
    return:
      type: System.String
      description: "要求の物理パス。"
  overload: System.Web.Management.WebRequestInformation.RequestPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.RequestUrl
  id: RequestUrl
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: RequestUrl
  nameWithType: WebRequestInformation.RequestUrl
  fullName: System.Web.Management.WebRequestInformation.RequestUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "要求の論理パスを取得します。"
  remarks: "次のコード例では、Web 要求の論理パスを取得する方法を示します。       [!code-cs[System.Web.Management.WebRequestInformation#6](~/add/codesnippet/csharp/p-system.web.management._10_1.cs)][!code-vb[System.Web.Management.WebRequestInformation#6  ](~/add/codesnippet/visualbasic/p-system.web.management._10_1.vb)]"
  syntax:
    content: public string RequestUrl { get; }
    return:
      type: System.String
      description: "要求の論理パス。"
  overload: System.Web.Management.WebRequestInformation.RequestUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.ThreadAccountName
  id: ThreadAccountName
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: ThreadAccountName
  nameWithType: WebRequestInformation.ThreadAccountName
  fullName: System.Web.Management.WebRequestInformation.ThreadAccountName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "コードが実行されている対象ユーザーの Windows ログオン名を表す文字列を取得します。"
  remarks: "このプロパティの値は、現在によって決まります<xref:System.Security.Principal.WindowsIdentity>オブジェクトの<xref:System.Security.Principal.WindowsIdentity.Name%2A>プロパティ</xref:System.Security.Principal.WindowsIdentity.Name%2A></xref:System.Security.Principal.WindowsIdentity>。"
  syntax:
    content: public string ThreadAccountName { get; }
    return:
      type: System.String
      description: "コードが実行されている対象ユーザーの Windows ログオン名。"
  overload: System.Web.Management.WebRequestInformation.ThreadAccountName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebRequestInformation.UserHostAddress
  id: UserHostAddress
  parent: System.Web.Management.WebRequestInformation
  langs:
  - csharp
  name: UserHostAddress
  nameWithType: WebRequestInformation.UserHostAddress
  fullName: System.Web.Management.WebRequestInformation.UserHostAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "ユーザー ホスト アドレスを取得します。"
  remarks: "次のコード例では、ユーザーのホスト アドレスを取得する方法を示します。       [!code-cs[System.Web.Management.WebRequestInformation#7](~/add/codesnippet/csharp/p-system.web.management._4_1.cs)][!code-vb[System.Web.Management.WebRequestInformation#7  ](~/add/codesnippet/visualbasic/p-system.web.management._4_1.vb)]"
  syntax:
    content: public string UserHostAddress { get; }
    return:
      type: System.String
      description: "ユーザーのホスト アドレス。"
  overload: System.Web.Management.WebRequestInformation.UserHostAddress*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Management.WebRequestInformation.FormatToString(System.Web.Management.WebEventFormatter)
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: FormatToString(WebEventFormatter)
  nameWithType: WebRequestInformation.FormatToString(WebEventFormatter)
  fullName: System.Web.Management.WebRequestInformation.FormatToString(WebEventFormatter)
- uid: System.Web.Management.WebEventFormatter
  parent: System.Web.Management
  isExternal: false
  name: WebEventFormatter
  nameWithType: WebEventFormatter
  fullName: System.Web.Management.WebEventFormatter
- uid: System.Web.Management.WebRequestInformation.Principal
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: Principal
  nameWithType: WebRequestInformation.Principal
  fullName: System.Web.Management.WebRequestInformation.Principal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.Management.WebRequestInformation.RequestPath
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: RequestPath
  nameWithType: WebRequestInformation.RequestPath
  fullName: System.Web.Management.WebRequestInformation.RequestPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Management.WebRequestInformation.RequestUrl
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: RequestUrl
  nameWithType: WebRequestInformation.RequestUrl
  fullName: System.Web.Management.WebRequestInformation.RequestUrl
- uid: System.Web.Management.WebRequestInformation.ThreadAccountName
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: ThreadAccountName
  nameWithType: WebRequestInformation.ThreadAccountName
  fullName: System.Web.Management.WebRequestInformation.ThreadAccountName
- uid: System.Web.Management.WebRequestInformation.UserHostAddress
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: UserHostAddress
  nameWithType: WebRequestInformation.UserHostAddress
  fullName: System.Web.Management.WebRequestInformation.UserHostAddress
- uid: System.Web.Management.WebRequestInformation.FormatToString*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: FormatToString
  nameWithType: WebRequestInformation.FormatToString
- uid: System.Web.Management.WebRequestInformation.Principal*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: Principal
  nameWithType: WebRequestInformation.Principal
- uid: System.Web.Management.WebRequestInformation.RequestPath*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: RequestPath
  nameWithType: WebRequestInformation.RequestPath
- uid: System.Web.Management.WebRequestInformation.RequestUrl*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: RequestUrl
  nameWithType: WebRequestInformation.RequestUrl
- uid: System.Web.Management.WebRequestInformation.ThreadAccountName*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: ThreadAccountName
  nameWithType: WebRequestInformation.ThreadAccountName
- uid: System.Web.Management.WebRequestInformation.UserHostAddress*
  parent: System.Web.Management.WebRequestInformation
  isExternal: false
  name: UserHostAddress
  nameWithType: WebRequestInformation.UserHostAddress
