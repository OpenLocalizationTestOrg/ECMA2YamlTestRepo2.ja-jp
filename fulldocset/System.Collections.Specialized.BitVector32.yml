### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.BitVector32
  id: BitVector32
  children:
  - System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  - System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateMask
  - System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  - System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Data
  - System.Collections.Specialized.BitVector32.Equals(System.Object)
  - System.Collections.Specialized.BitVector32.GetHashCode
  - System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  - System.Collections.Specialized.BitVector32.Item(System.Int32)
  - System.Collections.Specialized.BitVector32.ToString
  - System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  langs:
  - csharp
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
  type: Struct
  summary: "ブール値と小さい整数をメモリに 32 ビットで格納する単純な構造体を提供します。"
  remarks: "BitVector32 方がより効率的<xref:System.Collections.BitArray>のブール値と小さい整数を内部的に使用されます</xref:System.Collections.BitArray>。 A<xref:System.Collections.BitArray>必要に応じて、無制限に拡張できますが、クラスのインスタンスを必要とするメモリおよびパフォーマンスのオーバーヘッドがある</xref:System.Collections.BitArray>。 これに対し、BitVector32 は、32 ビットのみを使用します。       いずれかのセクションでは小さい整数のまたはブール値、ビット フラグを格納する状態が、両方は必要ありません、BitVector32 構造体を設定できます。 <xref:System.Collections.Specialized.BitVector32.Section>BitVector32 にウィンドウは、 <xref:System.Collections.Specialized.BitVector32.CreateSection%2A>。</xref:System.Collections.Specialized.BitVector32.CreateSection%2A>で指定された最大値を持つことができる連続するビット数の最小の構成</xref:System.Collections.Specialized.BitVector32.Section> たとえば、1 ビットだけは、5 のセクションで、最大値は 3 つのビットで構成されますが、1 の最大値を持つセクションをで構成されます。 作成することができます、<xref:System.Collections.Specialized.BitVector32.Section>ブール値として使用する場合は 1 の最大値は、使用できるため、同じ BitVector32 に整数やブール値を格納することです</xref:System.Collections.Specialized.BitVector32.Section>。       一部のメンバーは、設定されているセクションでは、としてのいずれかのビット フラグとして設定されている他のメンバーを使用できますが BitVector32 を使用できます。 たとえば、<xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>プロパティは、セクションとして設定されている BitVector32 のインデクサーと<xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName>プロパティは、ビット フラグとして設定されている BitVector32 のインデクサー</xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> </xref:System.Collections.Specialized.BitVector32.Item%2A?displayProperty=fullName> 。 <xref:System.Collections.Specialized.BitVector32.CreateMask%2A>一連のビット フラグとして設定されている BitVector32 内の個々 のビットにアクセスするために使用するマスクを作成します。</xref:System.Collections.Specialized.BitVector32.CreateMask%2A>       セクションでは、予期しない結果を引き起こす可能性がありますに設定されている BitVector32 のマスクを使用します。"
  example:
  - "The following code example uses a BitVector32 as a collection of bit flags.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/csharp/t-system.collections.spe_10_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_1.vb)]\n [!code-cpp[System.Collections.Specialized.BitVector32_BitFlags#1](~/add/codesnippet/cpp/t-system.collections.spe_10_1.cpp)]  \n  \n The following code example uses a BitVector32 as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/t-system.collections.spe_10_2.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/t-system.collections.spe_10_2.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/t-system.collections.spe_10_2.vb)]"
  syntax:
    content: public struct BitVector32
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  id: '#ctor(System.Collections.Specialized.BitVector32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>既存で表されるデータを含む構造体<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>構造体。"
  remarks: "このコンス トラクターは、o (1) 操作です。"
  syntax:
    content: public BitVector32 (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "A <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>コピーするデータを格納する構造体。"
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>整数で表されるデータを含む構造体。"
  remarks: "このコンス トラクターは、o (1) 操作です。"
  syntax:
    content: public BitVector32 (int data);
    parameters:
    - id: data
      type: System.Int32
      description: "新しいデータを表す整数を<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask
  id: CreateMask
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "内の個々 のビットを取得するために使用するマスクの系列の最初のマスクを作成、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>ビット フラグとして設定されています。"
  remarks: "使用して`CreateMask()`系列の最初のマスクを作成して`CreateMask(int)`の後続のすべてのマスク。       複数のマスクは、同じビット フラグを参照してくださいを作成することができます。       結果として得られるマスク<xref:System.Collections.Specialized.BitVector32>。</xref:System.Collections.Specialized.BitVector32>のみ&1; ビット フラグを分離します。 ビットごとの OR 演算を使用して、 <xref:System.Collections.Specialized.BitVector32>。</xref:System.Collections.Specialized.BitVector32>で複数のビット フラグを分離するマスクを作成するマスクを組み合わせることができます。       マスクを使用して、<xref:System.Collections.Specialized.BitVector32>セットアップされたセクションが予期しない結果を引き起こす可能性があります</xref:System.Collections.Specialized.BitVector32>。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_3_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_3_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_3_1.vb)]"
  syntax:
    content: public static int CreateMask ();
    parameters: []
    return:
      type: System.Int32
      description: "最初のビット フラグを分離するマスク、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  id: CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "次の一連の内の個々 のビットを取得するために使用するマスクの指定したマスク追加のマスクを作成、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>ビット フラグとして設定されています。"
  remarks: "使用して`CreateMask()`系列の最初のマスクを作成して`CreateMask(int)`の後続のすべてのマスク。       複数のマスクは、同じビット フラグを参照してくださいを作成することができます。       結果として得られるマスク<xref:System.Collections.Specialized.BitVector32>。</xref:System.Collections.Specialized.BitVector32>のみ&1; ビット フラグを分離します。 ビットごとの OR 演算を使用して、 <xref:System.Collections.Specialized.BitVector32>。</xref:System.Collections.Specialized.BitVector32>で複数のビット フラグを分離するマスクを作成するマスクを組み合わせることができます。       マスクを使用して、<xref:System.Collections.Specialized.BitVector32>セットアップされたセクションが予期しない結果を引き起こす可能性があります</xref:System.Collections.Specialized.BitVector32>。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example shows how to create and use masks.  \n  \n [!code-cs[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/csharp/m-system.collections.spe_5_1.cs)]\n [!code-cpp[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/cpp/m-system.collections.spe_5_1.cpp)]\n [!code-vb[System.Collections.Specialized.BitVector32.CreateMasks#1](~/add/codesnippet/visualbasic/m-system.collections.spe_5_1.vb)]"
  syntax:
    content: public static int CreateMask (int previous);
    parameters:
    - id: previous
      type: System.Int32
      description: "マスクは、以前のビット フラグを示します。"
    return:
      type: System.Int32
      description: "ビットを分離するマスクを次のいずれか、フラグ<code> previous </code>で指す<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.CreateMask*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>previous</code>最後のビット フラグを示す、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  id: CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "最初の作成<xref:System.Collections.Specialized.BitVector32.Section>一連の小さい整数を含むセクションでします</xref:System.Collections.Specialized.BitVector32.Section>。"
  remarks: "A<xref:System.Collections.Specialized.BitVector32.Section>にウィンドウ、<xref:System.Collections.Specialized.BitVector32>と最小 CreateSection で指定された最大値を含めることができる連続するビット数で構成され</xref:System.Collections.Specialized.BitVector32></xref:System.Collections.Specialized.BitVector32.Section>。 たとえば、1 ビットだけは、5 のセクションで、最大値は 3 つのビットで構成されますが、1 の最大値を持つセクションをで構成されます。 <xref:System.Collections.Specialized.BitVector32.Section>で、最大値を Boolean として機能するように 1 はできるため、ストアの整数と同じ<xref:System.Collections.Specialized.BitVector32>。</xref:System.Collections.Specialized.BitVector32>ブール値を</xref:System.Collections.Specialized.BitVector32.Section>作成できます。       内のセクションに存在しない場合、 <xref:System.Collections.Specialized.BitVector32>、これらのセクションではアクセス可能ですしかし、重複する部分が原因で予期しない結果。</xref:System.Collections.Specialized.BitVector32> 。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example uses a <xref:System.Collections.Specialized.BitVector32> as a collection of sections.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/cpp/m-system.collections.spe_18_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/csharp/m-system.collections.spe_18_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32_Sections#1](~/add/codesnippet/visualbasic/m-system.collections.spe_18_1.vb)]"
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "新しい<xref:System.Collections.Specialized.BitVector32.Section>。</xref:System.Collections.Specialized.BitVector32.Section>の最大値を指定する 16 ビット符号付き整数"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "A <xref:System.Collections.Specialized.BitVector32.Section>0 から番号を保持する<code> maxValue </code></xref:System.Collections.Specialized.BitVector32.Section> 。"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>maxValue</code>1 より小さいです。"
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  id: CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public static System.Collections.Specialized.BitVector32.Section CreateSection (short maxValue, System.Collections.Specialized.BitVector32.Section previous);
    parameters:
    - id: maxValue
      type: System.Int16
      description: "追加します。"
    - id: previous
      type: System.Collections.Specialized.BitVector32.Section
      description: "追加します。"
    return:
      type: System.Collections.Specialized.BitVector32.Section
      description: "追加します。"
  overload: System.Collections.Specialized.BitVector32.CreateSection*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Data
  id: Data
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "値を取得、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>整数として。"
  remarks: "個々 のセクションでは、の値にアクセスまたはビット フラグを使用する、<xref:System.Collections.Specialized.BitVector32.Item%2A>プロパティ</xref:System.Collections.Specialized.BitVector32.Item%2A>。       このプロパティの値を取得するは、o (1) 操作です。"
  syntax:
    content: public int Data { get; }
    return:
      type: System.Int32
      description: "値、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>整数として。"
  overload: System.Collections.Specialized.BitVector32.Data*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "指定したオブジェクトと等しいかどうかを判断、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  remarks: "オブジェクト`o`に等しいと見なされますが、<xref:System.Collections.Specialized.BitVector32>場合の種類`o`と互換性が、<xref:System.Collections.Specialized.BitVector32>型場合の値`o` <xref:System.Collections.Specialized.BitVector32.Data%2A>.</xref:System.Collections.Specialized.BitVector32.Data%2A>の値と等しい</xref:System.Collections.Specialized.BitVector32></xref:System.Collections.Specialized.BitVector32>       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example compares a <xref:System.Collections.Specialized.BitVector32> with another <xref:System.Collections.Specialized.BitVector32> and with an <xref:System.Int32>.  \n  \n [!code-cpp[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/cpp/m-system.collections.spe_34_1.cpp)]\n [!code-cs[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/csharp/m-system.collections.spe_34_1.cs)]\n [!code-vb[System.Collections.Specialized.BitVector32.Equals#1](~/add/codesnippet/visualbasic/m-system.collections.spe_34_1.vb)]"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "現在と比較するオブジェクト<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したオブジェクトが等しい場合、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  id: GetHashCode
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "ハッシュ関数として機能、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  remarks: "<xref:System.Collections.Specialized.BitVector32> <xref:System.Collections.Specialized.BitVector32.Data%2A>。</xref:System.Collections.Specialized.BitVector32.Data%2A>の値に基づく</xref:System.Collections.Specialized.BitVector32>のハッシュ コード 2 つのインスタンス<xref:System.Collections.Specialized.BitVector32>の値が同じ<xref:System.Collections.Specialized.BitVector32.Data%2A>も同じハッシュ コードが生成されます</xref:System.Collections.Specialized.BitVector32.Data%2A></xref:System.Collections.Specialized.BitVector32>。       このメソッドは、o (1) 操作です。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "ハッシュ コード、 <xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  id: Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  syntax:
    content: public int this[System.Collections.Specialized.BitVector32.Section section] { get; set; }
    parameters:
    - id: section
      type: System.Collections.Specialized.BitVector32.Section
      description: "追加します。"
    return:
      type: System.Int32
      description: "追加します。"
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "取得または指定したマスクが指すビット フラグの状態を設定します。"
  remarks: "項目 [セクション] プロパティのインデクサーは、<xref:System.Collections.Specialized.BitVector32>セクションとしてセットアップされた、項目 [int] プロパティのインデクサー、<xref:System.Collections.Specialized.BitVector32>ビット フラグとしてセットアップされた</xref:System.Collections.Specialized.BitVector32></xref:System.Collections.Specialized.BitVector32>。       このプロパティを使用して、<xref:System.Collections.Specialized.BitVector32>セットアップされたセクションが予期しない結果を引き起こす可能性があります</xref:System.Collections.Specialized.BitVector32>。       C# 言語では、キーワードを使用して、項目のプロパティを実装する代わりにインデクサーを定義します。 Visual Basic では、同様のインデックス機能を提供する既定のプロパティとして項目を実装します。       O (1) 操作は、このプロパティの値を取得します。プロパティの設定は、o (1) 操作ではもです。"
  syntax:
    content: public bool this[int bit] { get; set; }
    parameters:
    - id: bit
      type: System.Int32
      description: "取得または設定するビットを示すマスクです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、指定したビット フラグがオン (1) です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString
  id: ToString
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "現在を表す文字列を返します<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  remarks: "このメソッドは<xref:System.Object.ToString%2A?displayProperty=fullName>。</xref:System.Object.ToString%2A?displayProperty=fullName>       このメソッドは、o (1) 操作です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在を表す文字列<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  id: ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  langs:
  - csharp
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "表す、指定した文字列を返します<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  remarks: "このメソッドは、o (1) 操作です。"
  syntax:
    content: public static string ToString (System.Collections.Specialized.BitVector32 value);
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: "<xref href=&quot;System.Collections.Specialized.BitVector32&quot;> </xref>を表します。"
    return:
      type: System.String
      description: "表す、指定した文字列<xref href=&quot;System.Collections.Specialized.BitVector32&quot;></xref>です。"
  overload: System.Collections.Specialized.BitVector32.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(BitVector32)
  nameWithType: BitVector32.BitVector32(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(BitVector32)
- uid: System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized.BitVector32.#ctor(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32(Int32)
  nameWithType: BitVector32.BitVector32(Int32)
  fullName: System.Collections.Specialized.BitVector32.BitVector32(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.BitVector32.CreateMask
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask()
  nameWithType: BitVector32.CreateMask()
  fullName: System.Collections.Specialized.BitVector32.CreateMask()
- uid: System.Collections.Specialized.BitVector32.CreateMask(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask(Int32)
  nameWithType: BitVector32.CreateMask(Int32)
  fullName: System.Collections.Specialized.BitVector32.CreateMask(Int32)
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16)
  nameWithType: BitVector32.CreateSection(Int16)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16)
- uid: System.Collections.Specialized.BitVector32.Section
  parent: System.Collections.Specialized
  isExternal: false
  name: BitVector32+Section
  nameWithType: BitVector32+Section
  fullName: System.Collections.Specialized.BitVector32+Section
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Collections.Specialized.BitVector32.CreateSection(System.Int16,System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection(Int16,BitVector32+Section)
  nameWithType: BitVector32.CreateSection(Int16,BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.CreateSection(Int16,BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Data
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
  fullName: System.Collections.Specialized.BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals(System.Object)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals(Object)
  nameWithType: BitVector32.Equals(Object)
  fullName: System.Collections.Specialized.BitVector32.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Specialized.BitVector32.GetHashCode
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode()
  nameWithType: BitVector32.GetHashCode()
  fullName: System.Collections.Specialized.BitVector32.GetHashCode()
- uid: System.Collections.Specialized.BitVector32.Item(System.Collections.Specialized.BitVector32.Section)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(BitVector32+Section)
  nameWithType: BitVector32.Item(BitVector32+Section)
  fullName: System.Collections.Specialized.BitVector32.Item(BitVector32+Section)
- uid: System.Collections.Specialized.BitVector32.Item(System.Int32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item(Int32)
  nameWithType: BitVector32.Item(Int32)
  fullName: System.Collections.Specialized.BitVector32.Item(Int32)
- uid: System.Collections.Specialized.BitVector32.ToString
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString()
  nameWithType: BitVector32.ToString()
  fullName: System.Collections.Specialized.BitVector32.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.BitVector32.ToString(System.Collections.Specialized.BitVector32)
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString(BitVector32)
  nameWithType: BitVector32.ToString(BitVector32)
  fullName: System.Collections.Specialized.BitVector32.ToString(BitVector32)
- uid: System.Collections.Specialized.BitVector32.#ctor*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: BitVector32
  nameWithType: BitVector32.BitVector32
- uid: System.Collections.Specialized.BitVector32.CreateMask*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateMask
  nameWithType: BitVector32.CreateMask
- uid: System.Collections.Specialized.BitVector32.CreateSection*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: CreateSection
  nameWithType: BitVector32.CreateSection
- uid: System.Collections.Specialized.BitVector32.Data*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Data
  nameWithType: BitVector32.Data
- uid: System.Collections.Specialized.BitVector32.Equals*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Equals
  nameWithType: BitVector32.Equals
- uid: System.Collections.Specialized.BitVector32.GetHashCode*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: GetHashCode
  nameWithType: BitVector32.GetHashCode
- uid: System.Collections.Specialized.BitVector32.Item*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: Item
  nameWithType: BitVector32.Item
- uid: System.Collections.Specialized.BitVector32.ToString*
  parent: System.Collections.Specialized.BitVector32
  isExternal: false
  name: ToString
  nameWithType: BitVector32.ToString
