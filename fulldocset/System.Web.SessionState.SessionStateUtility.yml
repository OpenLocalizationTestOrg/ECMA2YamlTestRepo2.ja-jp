### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateUtility
  id: SessionStateUtility
  children:
  - System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  - System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  - System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  langs:
  - csharp
  name: SessionStateUtility
  nameWithType: SessionStateUtility
  fullName: System.Web.SessionState.SessionStateUtility
  type: Class
  summary: "セッション状態モジュールおよびセッション状態で使用されるヘルパー メソッドのストア プロバイダーは、ASP.NET アプリケーションのセッション情報の管理を提供します。 このクラスは継承できません。"
  remarks: "SessionStateUtility クラスは、セッション状態モジュールまたはセッション状態ストアのプロバイダーによって使用される静的ヘルパー メソッドを提供します。 アプリケーション開発者は、そのコードからこれらのメソッドを呼び出す必要はありません。       次の表では、セッション状態モジュールとセッション状態ストアのプロバイダーは、メソッドを使用する方法について説明します。      |メソッド |使用する |  |------------|---------|  |<xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>メソッド |既存のセッションのセッション情報を取得するか、新しいセッションのセッション情報を作成するカスタムのセッション状態モジュールで使用できます |。  |<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>メソッド |現在<xref:System.Web.HttpContext>にセッション データを追加し、<xref:System.Web.HttpContext.Session%2A>プロパティを通じてアプリケーション コードを使用できるように、セッション状態モジュールによって呼び出されます |。  |<xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A>メソッド |<xref:System.Web.HttpApplication.ReleaseRequestState>中に、セッション状態モジュールによって呼び出される、または現在<xref:System.Web.HttpContext>からセッション データをクリアする、要求の最後に<xref:System.Web.HttpApplication.EndRequest>イベントです |。  |<xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>メソッド |参照を取得するセッション状態モジュールによって呼び出される、<xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A>に基づいて Global.asax ファイルで定義されているオブジェクトのコレクション</xref:System.Web.SessionState.HttpSessionState.StaticObjects%2A></xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A></xref:System.Web.HttpApplication.EndRequest></xref:System.Web.HttpContext></xref:System.Web.HttpApplication.ReleaseRequestState></xref:System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext%2A></xref:System.Web.HttpContext.Session%2A></xref:System.Web.HttpContext></xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A></xref:System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext%2A>。 現在<xref:System.Web.HttpContext>に追加されたセッション データに含まれて<xref:System.Web.HttpStaticObjectsCollection>コレクションが返されます |。      セッション データに渡され、現在から取得した<xref:System.Web.HttpContext>として、<xref:System.Web.SessionState.HttpSessionStateContainer>オブジェクトまたは任意の有効な実装、<xref:System.Web.SessionState.IHttpSessionState>インターフェイス</xref:System.Web.SessionState.IHttpSessionState></xref:System.Web.SessionState.HttpSessionStateContainer></xref:System.Web.HttpContext></xref:System.Web.HttpStaticObjectsCollection></xref:System.Web.HttpContext>。       セッション状態ストアのプロバイダーを実装する方法の詳細については、次を参照してください。[セッション状態ストアのプロバイダーを実装する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example shows a custom session-state module implementation that stores session information in memory using a <xref:System.Collections.Hashtable>. The module uses the SessionStateUtility class to reference the current <xref:System.Web.HttpContext> and <xref:System.Web.SessionState.SessionIDManager>, retrieve the current <xref:System.Web.HttpStaticObjectsCollection>, and raise the **Session_OnEnd** event defined in the Global.asax file for the ASP.NET application. This application does not prevent simultaneous Web requests from using the same session identifier.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_6_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#1](~/add/codesnippet/csharp/t-system.web.sessionstat_6_1.cs)]  \n  \n To use this custom session-state module in an ASP.NET application, you can replace the existing <xref:System.Web.SessionState.SessionStateModule> reference in the Web.config file, as shown in the following example.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <httpModules>  \n      <remove name=\"Session\" />  \n      <add name=\"Session\"  \n      type=\"Samples.AspNet.SessionState.MySessionStateModule\" />  \n    </httpModules>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public static class SessionStateUtility
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  id: AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の要求のコンテキストにセッション データを適用します。"
  remarks: "AddHttpSessionStateToContext メソッドは、セッション データを現在の要求に適用するセッション状態モジュールによって使用されます。 中に発生したこの、<xref:System.Web.HttpApplication.AcquireRequestState>要求の開始時のイベント</xref:System.Web.HttpApplication.AcquireRequestState>。 現在の要求のセッション データが既存のセッションを取得または新しいセッションを作成します。 セッション データは、<xref:System.Web.SessionState.IHttpSessionState>現在<xref:System.Web.HttpContext>。</xref:System.Web.HttpContext>と共に AddHttpSessionStateToContext メソッドに渡される、実装のインスタンス</xref:System.Web.SessionState.IHttpSessionState>にカプセル化します。 提供されているセッション データは、利用できるを通じてアプリケーション コードに、 <xref:System.Web.HttpContext.Session%2A>、現在のコンテキストのプロパティ</xref:System.Web.HttpContext.Session%2A>。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The custom module retrieves existing session information or creates new session information and uses the AddHttpSessionStateToContext method to add it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/5c9b7582-11c3-42e9-975d-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/5c9b7582-11c3-42e9-975d-_1.cs)]"
  syntax:
    content: public static void AddHttpSessionStateToContext (System.Web.HttpContext context, System.Web.SessionState.IHttpSessionState container);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>を追加するオブジェクト、 <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>オブジェクト。"
    - id: container
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>指定された HTTP コンテキストに追加するインスタンスを実装します。"
  overload: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref>オブジェクトの現在のセッションは既に追加されて、指定した<code> context</code>です。"
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  id: GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の要求のコンテキストからセッション データを取得します。"
  remarks: "現在の要求からセッション データを取得するセッション状態モジュールによって GetHttpSessionStateFromContext メソッドを使用できます。 中に発生したこの、<xref:System.Web.HttpApplication.ReleaseRequestState>要求の終了時にイベント</xref:System.Web.HttpApplication.ReleaseRequestState>。 返されたセッション データは、セッション データ ストアに記述できます。 セッション データをデータ ストアから削除されることができます、セッションが破棄されると場合、および<xref:System.Web.HttpContext>、および**Session_OnEnd**イベントを実行することができます</xref:System.Web.HttpContext>。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The module retrieves session data from the <xref:System.Web.HttpContext> for the current request using the GetHttpSessionStateFromContext method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/9c400b1a-e4b0-47ca-aaa3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/9c400b1a-e4b0-47ca-aaa3-_1.cs)]"
  syntax:
    content: public static System.Web.SessionState.IHttpSessionState GetHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>元となると、セッション データを取得します。"
    return:
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>実装のインスタンスの現在の要求のセッション データを設定します。"
  overload: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  id: GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "指定したコンテキストの静的オブジェクトのコレクションへの参照を取得します。"
  remarks: "GetSessionStaticObjects メソッドを使用して、ASP.NET アプリケーションの Global.asax ファイルで定義された静的オブジェクトのコレクションを取得します。 セッション状態モジュールの実装を提供、返された<xref:System.Web.HttpStaticObjectsCollection>コレクションに、<xref:System.Web.SessionState.IHttpSessionState>実装のインスタンスを使用して現在のコンテキストに追加される、<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>メソッド</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A></xref:System.Web.SessionState.IHttpSessionState></xref:System.Web.HttpStaticObjectsCollection>。       A<xref:System.Web.SessionState.SessionStateStoreProviderBase>も行えます GetSessionStaticObjects メソッドを作成するとき、<xref:System.Web.SessionState.SessionStateStoreData>オブジェクト</xref:System.Web.SessionState.SessionStateStoreData></xref:System.Web.SessionState.SessionStateStoreProviderBase>。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.AcquireRequestState> event in a custom session-state module. The module retrieves existing session information or creates new session information, including the <xref:System.Web.HttpStaticObjectsCollection> collection returned from the GetSessionStaticObjects method, and adds it to the <xref:System.Web.HttpContext> of the current request. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/visualbasic/ce95f35b-c097-49c6-952e-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#4](~/add/codesnippet/csharp/ce95f35b-c097-49c6-952e-_1.cs)]"
  syntax:
    content: public static System.Web.HttpStaticObjectsCollection GetSessionStaticObjects (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>静的オブジェクトのコレクションを取得します。"
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref>コレクションに読み込ま、<xref:System.Web.SessionState.HttpSessionState.StaticObjects*>プロパティ値を指定<xref href=&quot;System.Web.HttpContext&quot;> </xref></xref:System.Web.SessionState.HttpSessionState.StaticObjects*> 。"
  overload: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  id: IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態が、指定された読み取り専用かどうかを示す値を取得<xref href=&quot;System.Web.HttpContext&quot;></xref>です。"
  syntax:
    content: public static bool IsSessionStateReadOnly (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "指定します、 <xref href=&quot;System.Web.HttpContext&quot;> </xref>を確認します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、セッション状態は読み取り専用です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  id: IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態が、指定されたために必要かどうかを示す値を取得<xref href=&quot;System.Web.HttpContext&quot;></xref>です。"
  syntax:
    content: public static bool IsSessionStateRequired (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "指定します、 <xref href=&quot;System.Web.HttpContext&quot;> </xref>を確認します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セッション状態が必要な場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  id: RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "実行、 **Session_OnEnd** ASP.NET アプリケーションの Global.asax ファイルで定義されたイベント。"
  remarks: "RaiseSessionEnd メソッドが実行するセッション状態モジュールによって使用される、 **Session_OnEnd** ASP.NET アプリケーションの Global.asax ファイルで定義されたイベント。 セッション状態モジュールは、セッションが破棄されると、セッションの有効期限が切れる場合、または RaiseSessionEnd メソッドを呼び出します。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. If the session has been abandoned, the module executes the **Session_OnEnd** event defined in the Global.asax file for the application using the RaiseSessionEnd method. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/cd86aefd-3df6-4b8a-826f-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/cd86aefd-3df6-4b8a-826f-_1.cs)]"
  syntax:
    content: public static void RaiseSessionEnd (System.Web.SessionState.IHttpSessionState session, object eventSource, EventArgs eventArgs);
    parameters:
    - id: session
      type: System.Web.SessionState.IHttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.IHttpSessionState&quot;> </xref>が終了したセッションのインスタンスを実装します。"
    - id: eventSource
      type: System.Object
      description: "イベントのソース オブジェクトを提供する、 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref>イベント。"
    - id: eventArgs
      type: System.EventArgs
      description: "<xref:System.EventArgs>を提供するオブジェクト、 <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref>イベント</xref:System.EventArgs>。"
  overload: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  id: RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "指定したコンテキストからセッション データを削除します。"
  remarks: "RemoveHttpSessionStateFromContext メソッドは、指定した<xref:System.Web.HttpContext>。</xref:System.Web.HttpContext>からセッション データをクリアします。 ハンドラーで、セッション状態モジュールが RemoveHttpSessionStateFromContext メソッドを呼び出して、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント</xref:System.Web.HttpApplication.ReleaseRequestState>。"
  example:
  - "The following code example shows the handler for the <xref:System.Web.HttpApplication.ReleaseRequestState> event in a custom session-state module. The event handler removes session data from the current <xref:System.Web.HttpContext>. This code example is part of a larger example provided for the <xref:System.Web.SessionState.SessionStateUtility> class.  \n  \n [!code-vb[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/visualbasic/db56662a-8b24-4084-9ec3-_1.vb)]\n [!code-cs[System.Web.SessionState.SessionStateUtility#5](~/add/codesnippet/csharp/db56662a-8b24-4084-9ec3-_1.cs)]"
  syntax:
    content: public static void RemoveHttpSessionStateFromContext (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>セッション データを削除します。"
  overload: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  id: SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  langs:
  - csharp
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得またはセッションのシリアル化のカスタマイズに使用されるシリアル化サロゲート セレクターを設定します。"
  syntax:
    content: public static System.Runtime.Serialization.ISurrogateSelector SerializationSurrogateSelector { get; set; }
    return:
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "シリアル化サロゲート セレクター。"
  overload: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(System.Web.HttpContext,System.Web.SessionState.IHttpSessionState)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
  fullName: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext(HttpContext,IHttpSessionState)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.IHttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects(HttpContext)
  nameWithType: SessionStateUtility.GetSessionStaticObjects(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects(HttpContext)
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateReadOnly(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly(HttpContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired(HttpContext)
  nameWithType: SessionStateUtility.IsSessionStateRequired(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(System.Web.SessionState.IHttpSessionState,System.Object,System.EventArgs)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  nameWithType: SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
  fullName: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd(IHttpSessionState,Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext(HttpContext)
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
  fullName: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext(HttpContext)
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
  fullName: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: AddHttpSessionStateToContext
  nameWithType: SessionStateUtility.AddHttpSessionStateToContext
- uid: System.Web.SessionState.SessionStateUtility.GetHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetHttpSessionStateFromContext
  nameWithType: SessionStateUtility.GetHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: GetSessionStaticObjects
  nameWithType: SessionStateUtility.GetSessionStaticObjects
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateReadOnly*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateReadOnly
  nameWithType: SessionStateUtility.IsSessionStateReadOnly
- uid: System.Web.SessionState.SessionStateUtility.IsSessionStateRequired*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: IsSessionStateRequired
  nameWithType: SessionStateUtility.IsSessionStateRequired
- uid: System.Web.SessionState.SessionStateUtility.RaiseSessionEnd*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RaiseSessionEnd
  nameWithType: SessionStateUtility.RaiseSessionEnd
- uid: System.Web.SessionState.SessionStateUtility.RemoveHttpSessionStateFromContext*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: RemoveHttpSessionStateFromContext
  nameWithType: SessionStateUtility.RemoveHttpSessionStateFromContext
- uid: System.Web.SessionState.SessionStateUtility.SerializationSurrogateSelector*
  parent: System.Web.SessionState.SessionStateUtility
  isExternal: false
  name: SerializationSurrogateSelector
  nameWithType: SessionStateUtility.SerializationSurrogateSelector
