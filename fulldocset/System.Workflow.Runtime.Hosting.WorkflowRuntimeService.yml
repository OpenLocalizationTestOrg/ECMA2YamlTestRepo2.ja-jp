### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  id: WorkflowRuntimeService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  langs:
  - csharp
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  type: Class
  summary: "ワークフロー ランタイム エンジンのコア サービスの派生元となる抽象基本クラスを表します。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]WorkflowRuntimeService クラスから派生したサービスを開始し、ワークフロー ランタイム エンジンによって停止できます。 順序、サービスを開始または停止すると、ただしが不確定であると、サービスによって正しくとそれらが開始されると、逆に、必要があります自体を初期化するために他のサービスのサポートが必要と、他のサービスに正しくサポートするためにシャット ダウンは、停止されたときにします。 この問題に対処するには、ワークフロー ランタイム エンジンを開始およびサービスを停止するための&2; フェーズ機構を提供します。 ときに<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>が呼び出されると、ワークフロー ランタイム エンジン<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>の各 WorkflowRuntimeService クラスから派生したサービスのメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>を呼び出します</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>  これらすべてのサービスの開始後に、ワークフロー ランタイム エンジンを発生させます、<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>これにより、イベント、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>ワークフロー ランタイム エンジンのサービスごとに呼び出されるメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A></xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>。 サービスを上書きできます、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>この&2; つの段階のプロセスに参加するメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>。 同様に、<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>が呼び出されると、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>メソッド、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>イベント、および<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>メソッドは、この&2; フェーズ機構を提供します</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A></xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A></xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。  State プロパティが含まれています、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>サービスが開始または停止処理を行っていますか、完全に開始または停止しているかどうかを示す値</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>。       WorkflowRuntimeService クラスから派生したサービスは、 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName> <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A>を呼び出すことによってハンドルされない例外の原因となる条件を検出したときにイベント</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>を発生させることができます。       この<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>クラスをこの<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>クラス<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>クラス、および<xref:System.Workflow.Runtime.Tracking.TrackingService>クラスは、最終的に WorkflowRuntimeService クラスから派生</xref:System.Workflow.Runtime.Tracking.TrackingService></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService></xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService></xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService>から派生したサービス"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowRuntimeService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスで実装された場合の新しいインスタンスを初期化、 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>クラスです。"
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>.</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>に初期化されます。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>"
  syntax:
    content: protected WorkflowRuntimeService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスでオーバーライドされると、ワークフロー ランタイム エンジンが発生したときに呼び出されるメソッドを表す、 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Started&quot;> </xref>イベント。"
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>クラスは、2 フェーズ開始機構を実装、ワークフロー ランタイム エンジンのサービスは、ワークフロー ランタイム エンジンが呼び出された後に、その他のサービスに依存する初期化を行うことがあります、 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>、ワークフロー ランタイム エンジンのサービスのすべてのメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。 後、ワークフロー ランタイム エンジンと呼ばれる、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>を生成、ワークフロー ランタイム エンジンのサービスのすべてのメソッドを<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>イベント</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。 サービスが必要、最終的なスタートアップ機能を提供する OnStarted メソッドをオーバーライドすることができる場合、<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>イベントが発生します</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>。 サブスクリプションとサブスクリプションからのしくみ、<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>イベントは内部で処理されます</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>。      > [!NOTE] > への呼び出しによって、ワークフロー ランタイム エンジンに、サービスを追加<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、ワークフロー ランタイム エンジンは既に開始されて、ワークフロー ランタイム エンジンは呼び出します<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>サービスに対して</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A></xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。 ただし、このような状況では、<xref:System.Workflow.Runtime.WorkflowRuntime.Started>イベントが既に発生した、このため、サービスは、内部から OnStarted で通常実行する任意の初期化を実行する必要があります、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>メソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A></xref:System.Workflow.Runtime.WorkflowRuntime.Started>。 テストすることができます<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>、ワークフロー ランタイム エンジンが起動されているかどうかを確認する</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>。       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>設定されている<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>OnStarted を呼び出す前にします</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  OnStarted の既定の実装には、操作は実行されません。"
  syntax:
    content: protected virtual void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  id: OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスでオーバーライドされると、ワークフロー ランタイム エンジンが発生したときに呼び出されるメソッドを表す、 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.Stopped&quot;> </xref>イベント。"
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>クラスは、ワークフロー ランタイム エンジンのサービスの後に一部の機能が保持できるように、2 フェーズ停止機構を実装、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>で順序が、必要に応じて、サポートされる他のサービスのシャット ダウン メソッドがワークフロー ランタイム エンジンによって呼び出されます</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。 ワークフロー ランタイム エンジンがという名前のした、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>を生成、ワークフロー ランタイム エンジンのサービスのすべてのメソッド、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>イベントです</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。 サービスが必要、最終的なシャット ダウン機能を提供する OnStopped メソッドをオーバーライドすることができる場合、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>イベントが発生します</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>。 サブスクリプションとサブスクリプションからのしくみ、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>イベントは内部で処理されます</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>。      > [!NOTE] > 場合、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>への呼び出しによってワークフロー ランタイム エンジンから削除<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>、ワークフロー ランタイム エンジンの実行中に、ワークフロー ランタイム エンジンを呼び出す<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>サービスに対して</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A></xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。 ただし、このような状況で、OnStopped メソッドは、サービスに対しては呼び出されませんするされます。 そのため、サービスは、内部から OnStopped で通常実行する最終的なシャット ダウンを実行する必要があります、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>メソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。 テストすることができます<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>をワークフロー ランタイム エンジンが実行されているかどうかを判断します</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>。       <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>設定されている<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>OnStopped を呼び出す前にします</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A>  OnStopped の既定の実装には、操作は実行されません。"
  syntax:
    content: protected virtual void OnStopped ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  id: RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "発生させる、 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&quot;> </xref>イベント。"
  remarks: "サービスは、発生させる RaiseServicesExceptionNotHandledEvent を呼び出すことができます、<xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>実行中に処理できない例外が発生したときにイベント</xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=fullName>。 渡す必要があります、<xref:System.Guid>未処理の例外に関連付けられたワークフロー インスタンスの</xref:System.Guid>。 たとえば、タイマー サービス渡し、<xref:System.Guid>例外が発生したタイマーに関連付けられている</xref:System.Guid>。"
  syntax:
    content: protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "この例外を処理できませんでした。"
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>未処理の例外に関連付けられたワークフロー インスタンスの</xref:System.Guid>。"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  id: Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "取得、 <xref href=&quot;System.Workflow.Runtime.WorkflowRuntime&quot;> </xref>このサービスを使用します。"
  remarks: "呼び出す前に、ワークフロー ランタイム エンジンがこのプロパティを設定<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>サービス</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。"
  syntax:
    content: protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }
    return:
      type: System.Workflow.Runtime.WorkflowRuntime
      description: "<xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;> </xref>オブジェクト。"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  id: Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスでオーバーライドされると、サービスとの変更が開始、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>に<xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*> 。"
  remarks: "派生したそのサービスのすべてのワークフロー ランタイム エンジンによって開始が呼び出される、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>クラス<xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>と呼びます</xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。       呼び出しによってワークフロー ランタイム エンジンのサービスがワークフロー ランタイム エンジンに追加されるとに、開始がワークフロー ランタイム エンジンによって呼び出されますも<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、ワークフロー ランタイム エンジンは既に開始した後</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。 開始の既定の実装では、サービスは開始されており、この情報を使用して、既に実行中に、サービスが開始された場合は、適切な例外をスローするかどうかを追跡します。       このメソッドをオーバーライドすることで、ワークフロー ランタイム エンジンによって開始された、サービスが必要な追加機能を提供できます。 これに関する保証はありません、ワークフロー ランタイム エンジンは、サービスの開始を呼び出したときに存在する場合、サービスが実行されています。 そのため、開始の方法で行う必要がありますのみが他のサービスによって提供される機能に依存しない、初期化します。 これには、スケジューラ サービスなどのコア サービスによって提供される機能が含まれます。 ワークフロー ランタイム エンジンを発生させる、<xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>ランタイム エンジンのサービスのすべてのワークフローの Start メソッドを呼び出した後のイベント</xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=fullName>。 サービスでは、すべてのワークフロー ランタイム エンジン サービスが開始された後、追加の初期化が必要とする場合は、上書き、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>開始イベントが発生したときに、この初期化を実行するためにメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>。      > [!NOTE] > への呼び出しによって、ワークフロー ランタイム エンジンに、サービスを追加<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>、ワークフロー ランタイム エンジンが、サービスの開始を呼び出し、ワークフロー ランタイム エンジンが起動された後です</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。 ただし、このような状況では、<xref:System.Workflow.Runtime.WorkflowRuntime.Started>イベントが既に発生した、そのため、サービスで通常実行する任意の初期化を実行する必要があります<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>から開始メソッドの内部</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A></xref:System.Workflow.Runtime.WorkflowRuntime.Started>。 テストすることができます<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>、ワークフロー ランタイム エンジンが起動されているかどうかを確認する</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>。       開始は、ワークフロー ランタイム エンジンによってのみ呼び出す必要があります。"
  example:
  - "The following example demonstrates calling the Start method on an object derived from <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>, TerminationTrackingService.  This example is from the Termination Tracking Service SDK sample.  For more information, see [Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#112](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#112)]\n [!code-vb[WF_Samples#112](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#112)]"
  syntax:
    content: protected virtual void Start ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) - または - サービスが既に開始されています。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  id: State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "状態を取得、 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeService&quot;></xref>です。"
  remarks: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>クラスは両方の開始とワークフロー ランタイム エンジンのサービスの停止の&2; フェーズ機構を実装します</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。 開始機構の最初のフェーズを開始、ワークフロー ランタイム エンジンの実装を呼び出すときに、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>サービスのメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。 このメソッドは<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>状態を設定する</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>の基本実装を呼び出す必要があります。 ワークフロー ランタイム エンジンの開始後にそのすべてのワークフロー ランタイム エンジン サービスを発生させるときに、2 番目のフェーズが発生した、<xref:System.Workflow.Runtime.WorkflowRuntime.Started>イベント</xref:System.Workflow.Runtime.WorkflowRuntime.Started>。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>内部でこのイベントへのサブスクリプションを管理し、そのハンドラーは<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>状態を設定</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。       ワークフロー ランタイム エンジンの実装を呼び出すときに、ワークフロー ランタイム エンジンのサービスを停止するための&2; フェーズ機構が開始され、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>サービスのメソッド</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。 このメソッドは<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A><xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>状態を設定する</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>の基本実装を呼び出す必要があります。 そのすべてのワークフロー ランタイム エンジン サービスが停止、した後、ワークフロー ランタイム エンジンを発生させます、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>イベント</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped>。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>内部でこのイベントへのサブスクリプションを管理し、そのハンドラーは<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState>状態を設定</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。"
  syntax:
    content: protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }
    return:
      type: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
      description: "1 つ、 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref>値。"
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  langs:
  - csharp
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスでオーバーライドされると、停止、サービスと変更、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*>に<xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState&quot;> </xref></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*> 。"
  remarks: "停止がから派生したそのサービスのすべてのワークフロー ランタイム エンジンによって呼び出される、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>場合にクラス<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>と呼びます</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。  停止は呼び出すことも、ワークフロー ランタイム エンジンによって<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>。</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>への呼び出しによって、ワークフロー ランタイム エンジンからワークフロー ランタイム エンジンのサービスが削除されたときに 停止の既定の実装では、サービスが開始されたこの情報を使ってが開始される前に、サービスが停止している場合は、適切な例外をスローするかどうかを追跡します。       このメソッドをオーバーライドすることで、ワークフロー ランタイム エンジンによって停止、サービスが必要な追加機能を提供できます。 場合は、いずれかのサービスが、これには、に関する保証はありませんを停止するか、サービスの停止が呼び出されたときに実行します。 ワークフロー ランタイム エンジンを発生させる、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>ランタイム エンジンのサービスのワークフローのすべての Stop メソッドを呼び出した後のイベント</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>。 サービスは、ワークフロー ランタイム エンジンのすべてのサービスの停止メソッドが、ワークフロー ランタイム エンジンによって呼び出されるあるまで、他のサービスをサポートするためにいくつかの残留機能を保持する必要があります。 オーバーライドすることができる場合は、サービスでは、このような機能を保持する必要があります、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>メソッドをサービスの停止を完了するために必要な追加アクションを実行するときに、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName>イベントが発生します</xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=fullName></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>。      > [!NOTE] > 場合、<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>への呼び出しによってワークフロー ランタイム エンジンから削除<xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>、ワークフロー ランタイム エンジンが、サービスの停止を呼び出して、ワークフロー ランタイム エンジンの実行中に</xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A></xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService>。 ただし、このような状況では、 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>、サービスのメソッドは呼び出されません</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>。 そのため、サービスは通常で実行する追加のシャット ダウン機能はすべてを実行する必要があります<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>から停止メソッドの内部</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>。 テストすることができます<xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>をワークフロー ランタイム エンジンが実行されているかどうかを判断します</xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A>。       停止は、ワークフロー ランタイム エンジンによってのみ呼び出す必要があります。"
  syntax:
    content: protected virtual void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。</xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*>       または、サービスが開始されていません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService()
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.WorkflowRuntimeService()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted()
  nameWithType: WorkflowRuntimeService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped()
  nameWithType: WorkflowRuntimeService.OnStopped()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception,Guid)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.WorkflowRuntime
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowRuntime
  nameWithType: WorkflowRuntime
  fullName: System.Workflow.Runtime.WorkflowRuntime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start()
  nameWithType: WorkflowRuntimeService.Start()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
  parent: System.Workflow.Runtime.Hosting
  isExternal: false
  name: WorkflowRuntimeServiceState
  nameWithType: WorkflowRuntimeServiceState
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop()
  nameWithType: WorkflowRuntimeService.Stop()
  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop()
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: WorkflowRuntimeService
  nameWithType: WorkflowRuntimeService.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStarted
  nameWithType: WorkflowRuntimeService.OnStarted
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: OnStopped
  nameWithType: WorkflowRuntimeService.OnStopped
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: RaiseServicesExceptionNotHandledEvent
  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Runtime
  nameWithType: WorkflowRuntimeService.Runtime
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Start
  nameWithType: WorkflowRuntimeService.Start
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: State
  nameWithType: WorkflowRuntimeService.State
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop*
  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: Stop
  nameWithType: WorkflowRuntimeService.Stop
