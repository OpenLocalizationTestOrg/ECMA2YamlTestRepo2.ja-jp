### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  id: ProxyWebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  langs:
  - csharp
  name: ProxyWebPartManager
  nameWithType: ProxyWebPartManager
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  type: Class
  summary: "開発者が static として宣言するための手段を提供、コンテンツ内の接続ページ、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>コントロールはコンテンツ ページの関連マスター ページで宣言されています。"
  remarks: "ときに特定のシナリオのコンテンツで静的接続を宣言するコントロールが存在する ProxyWebPartManager ページ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページで、コントロールは既に宣言されています</xref:System.Web.UI.WebControls.WebParts.WebPartManager>。       いずれか (および&1; つだけ) 仕様では、Web パーツ コントロールを使用する Web ページがあります<xref:System.Web.UI.WebControls.WebParts.WebPartManager>ページ上のすべての Web パーツ コントロールを管理するコントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 Web パーツ アプリケーションでは、マスター ページを使用する場合は通常を配置する、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>すべてのコンテンツ ページは、マスター ページと実行時間と、1 つにマージされますので、マスター ページで制御<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールは、すべてのコンテンツ ページのすべての Web パーツ コントロールを管理する</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 ただし、開発者は、このようなアプリケーションのコンテンツ ページで静的接続を宣言する場合は、制限が見えるかもしれません。 静的な Web パーツ接続を追加するだけで宣言することができます、`asp:webpartconnection>`の子要素として、`<staticconnections>`要素自体の子である必要があります、`<asp:webpartmanager>`要素。 ので、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールがマスター ページで、既に宣言されて、許可、1 つは<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール、開発者は、追加で宣言できません<xref:System.Web.UI.WebControls.WebParts.WebPartManager>静的な接続を追加するコンテンツ ページのコントロールです</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。       ProxyWebPartManager コントロールに代わる、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>このシナリオでのコントロールです</xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 開発者は、宣言、`<asp:proxywebpartmanager>`要素の代わりに、`<asp:webpartmanager>`要素、コンテンツ ページとは、宣言する静的な接続の子として要素。 追加するだけ ProxyWebPartManager コントロールでは、接続、実行時に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>のコレクション、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>を制御し、その他の任意の接続と同様に扱われます</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A>。       ProxyWebPartManager コントロールがこの特定の開発のシナリオでのみ使用され、その機能にはより制限<xref:System.Web.UI.WebControls.WebParts.WebPartManager>クラス</xref:System.Web.UI.WebControls.WebParts.WebPartManager>よりも 実際には、ProxyWebPartManager コントロール用の静的な接続を格納するプロキシとして動作ですが、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール コンテンツ ページで、継承していないから、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。 直接継承、<xref:System.Web.UI.Control>クラス、および基本メンバーの一部のみをオーバーライドします</xref:System.Web.UI.Control>。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>、 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A>、および<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A>プロパティがオーバーライドされから使用されるように値を割り当てる</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID%2A></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible%2A></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming%2A>。 基本プロパティと同じ動作がそれ以外の場合では、デザイン時動作を調整するその他の継承されたプロパティが上書きされます。 ように、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>と<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID%2A></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls%2A>。 最後に、ProxyWebPartManager クラスには、1 つの非継承プロパティがあります。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティは、静的な接続の独自のコレクションを返します (、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection>オブジェクト).</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection> </xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>       メソッドと ProxyWebPartManager クラスは同様にそれらの使用を制限するには、ほとんどの場合のいくつかメソッドをオーバーライドします。 継承された<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>メソッドが呼び出された場合に例外をスローして使用不可に行った</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus%2A>。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>メソッドは常にコントロールのコレクションを含めることができない原因の影響は、空のコントロール コレクションを返します</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection%2A>。 最後に、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>メソッドを選択し、基本のメソッドを呼び出しによって参照される接続のコレクションを割り当てます、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>のプロパティ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit%2A>。 これは、ロールアップするすべてのコンテンツ ページで宣言されているすべての静的な接続の効果にすることによって管理される接続のコレクションの一部と、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページ内のコントロールです</xref:System.Web.UI.WebControls.WebParts.WebPartManager>。"
  example:
  - "The following code example demonstrates how to use the ProxyWebPartManager class to declare static connections on content pages in an application that uses master pages. The example has five parts:  \n  \n-   A user control that enables you to change the Web Parts display mode on a page.  \n  \n-   Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.  \n  \n-   A master Web page that hosts the user control, the content pages, and the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control for the application.  \n  \n-   A content Web page that hosts a ProxyWebPartManager control, the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a static connection to connect the two controls.  \n  \n-   An explanation of how to run the example page.  \n  \n The first part of this code example is the user control that enables users to change display modes on a Web page. Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting master page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_1.ascx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_1.ascx)]  \n  \n The second part of the code example is the source code for the interface and controls. The source file contains a simple interface named `IZipCode`. There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control. Its `ProvideIZipCode` method is the callback method that implements the interface's only member. The method simply returns an instance of the interface. Note that the method is marked with a `ConnectionProvider` attribute in its metadata. This is the mechanism for identifying the method as the callback method for the provider's connection point. The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection. This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control. Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#4](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_2.cs)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#4](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_2.vb)]  \n  \n The third part of the code example is the master page. You should take the following source code and save it in a file, naming it MasterPageCS.master or MasterPageVB.master (depending on which language you use). Note that the master page contains a `Register` directive to register the user control, and it references the user control itself in the body of the page. The master page also declares the single `<asp:webpartmanager>` element used for this page and all related content pages. Finally, the master page has an `<asp: contentplaceholder>` element that declares the point in the page where the content page is inserted.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The fourth part of the code example is the content page. You should copy the following source code and save it in a file with an .aspx extension. Notice that its `Page` directive contains a `MasterFile` attribute to refer to the master page. Also, this page has a `Register` directive to register the file in the App_Code folder that contains the dynamically compiled custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that participate in the connection. Within the `<asp:content>` tags of the page, there is an <`asp:proxywebpartmanager>` element, with a child `<staticconnections>` element, which in turn has a child `<asp:webpartconnection>` element to declare the details of the connection. Within the `<script>` tags on the page, the `Button1_Click` method adds some code that accesses the main <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page and the ProxyWebPartManager control in the content page, and writes some of their details to the page.  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_112_4.aspx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_112_4.aspx)]  \n  \n After you load the page in a browser, click the **WebPartManager Information** button and observe the information about the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page, and the ProxyWebPartManager control in the content page. For example, note that they both have the same count in their respective properties that track static connections (the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A> property). Note also that although the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control has a <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> property that tracks the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls it manages, the ProxyWebPartManager control has no such property, as its only purpose is to contain static connections."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class ProxyWebPartManager : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: ProxyWebPartManager()
  nameWithType: ProxyWebPartManager.ProxyWebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ProxyWebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartManager&quot;> </xref>クラスです。"
  syntax:
    content: public ProxyWebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ASP.NET によって生成される HTML マークアップのコントロールの ID を取得します。"
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "ASP.NET によって生成される HTML マークアップのコントロール ID。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得、 <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> UI 階層内の指定されたサーバー コントロールの子コントロールを表すオブジェクト。"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "指定されたサーバー コントロールの子コントロールのコレクションです。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: ProxyWebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "防ぐために基本プロパティをオーバーライドします<xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartManager&quot;></xref>からコントロールを含むコントロールです。"
  remarks: "CreateControlCollection メソッドのオーバーライドを防ぐために、基本メソッド、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールが含まれていると、コントロールのコレクションを返すからです</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。 唯一の目的では、マスター ページを使用するアプリケーション内のコンテンツ ページで宣言する静的な接続を有効にします。"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "常に返します、 <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "テーマが使用されていることを防ぐために、基本プロパティをオーバーライドします。"
  remarks: "EnableTheming プロパティをテーマがで使用されていることを防ぐために基本プロパティをオーバーライドします<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。 これで使用されている任意のテーマでの競合に入ってくることがないように、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>マスター ページ内のコントロール (その<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=fullName>プロパティは常に返します`true`).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>をテーマが使用されていることを防ぐためにします。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出し元は、このプロパティに値を代入しようとします。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: ProxyWebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "メソッドが呼び出されないようにする基本メソッドをオーバーライドします。"
  remarks: "フォーカス メソッドは、基本メソッドをオーバーライドし、メソッドを呼び出すしようとしている任意の呼び出し元は例外をスローします。 これは、継承された<xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>メソッドがユーザー インターフェイス (UI) を持つコントロール用に設計されたが、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロールが UI がないと、そのため、フォーカスを設定する必要がない</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager></xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>。"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出し元は、このメソッドを呼び出すしようとします。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: ProxyWebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "発生させます、 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref>イベントと、コントロールを初期化します。"
  remarks: "OnInit メソッドが基本メソッドを呼び出しおよび初期化するためにタスクを実行し、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。 によって参照される接続のコレクションに割り当てるには、このメソッドの重要なタスク、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールの<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>コレクションです</xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections%2A>。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>関連マスター ページからコントロールが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "値が割り当てられていることを防ぐための基本プロパティをオーバーライドします。"
  remarks: "使用されないプロパティを回避するという効果を持つ値が、それに割り当てられていることを防ぐための基本プロパティをオーバーライド SkinID スキン、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。 これは、コントロールがページ上のユーザー インターフェイス (UI) を公開しないためです。 によって、同じ動作が実装される、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>の制御、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "常に空の文字列を返します (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出し元は、このプロパティに値を代入しようとします。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "内で宣言された静的な接続のコレクションを取得、 <xref uid=&quot;langword_csharp_&lt;asp:proxywebpartmanager&gt;&quot; name=&quot;&lt;asp:proxywebpartmanager&gt;&quot; href=&quot;&quot;> </xref>コンテンツ ページの要素。"
  remarks: "StaticConnections プロパティのコレクションを参照する<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>で宣言されているオブジェクト、`<asp:proxywebpartmanager>`要素</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>。 静的な接続をこのコレクションに含まれている接続が追加、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール (により参照されているその<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName>コレクション)、他の接続に関連付けられているのと同じように扱われます、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.WebParts.WebPartManager>。       StaticConnections プロパティに対応する宣言型の要素は、`<staticconnections>`要素。 マスター ページを使用するアプリケーションで、`<staticconnections>`の子として要素を追加、`<asp:proxywebpartmanager>`コンテンツ ページでは、上の要素と`<asp:webpartconnection>`要素が追加の子としてしてさらに、`<staticconnections>`要素。 複数`<asp:webpartconnection>`要素は、いずれかに追加できる`<staticconnections>`要素、および複数のコンテンツ ページは、マスター ページ アプリケーションの一部として静的接続を宣言できます。"
  example:
  - "The following code example demonstrates how to use the StaticConnections property on the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> class. This code example shows only the relevant portion of the code from the content page that declares the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control and the static connection. For the other pages required to run the code example, and a description of how to set them up, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> class overview.  \n  \n The following code is the content page that declares the `<staticconnections>` element as a child of the `<asp:proxywebpartmanager>` element. Also note that the `Button1_Click` method checks the count of the StaticConnections property on the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control and writes it to the page.  \n  \n [!code-cs[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1319_1.aspx)]\n [!code-vb[WebParts_ProxyWebPartManager_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1319_1.aspx)]  \n  \n After you load the page in a browser, click the **WebPartManager Information** button and observe the information about the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control in the master page, and the <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager> control in the content page. For example, note that they both have the same count in their respective properties that track static connections (the StaticConnections property)."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection&quot;> </xref>を含むすべての静的<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;></xref>内で宣言されたオブジェクト、 <xref uid=&quot;langword_csharp_&lt;asp:proxywebpartmanager&gt;&quot; name=&quot;&lt;asp:proxywebpartmanager&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "値が割り当てられていることを防ぐための基本プロパティをオーバーライドします。"
  remarks: "Visible プロパティを防ぐために基本プロパティをオーバーライドする、<xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>表示が行われるコントロール</xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。 <xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>制御と同様に、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>制御をユーザー インターフェイス (UI) を持たず、ユーザーには表示されません</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.ProxyWebPartManager>。"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>コントロールが表示されないようにします。"
  overload: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出し元は、このプロパティに値を代入しようとします。"
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ProxyWebPartManager()
  nameWithType: ProxyWebPartManager.ProxyWebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ProxyWebPartManager()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: ProxyWebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Focus()
  nameWithType: ProxyWebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: ProxyWebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProxyWebPartConnectionCollection
  nameWithType: ProxyWebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ProxyWebPartManager
  nameWithType: ProxyWebPartManager.ProxyWebPartManager
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.ClientID*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: ClientID
  nameWithType: ProxyWebPartManager.ClientID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Controls
  nameWithType: ProxyWebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: ProxyWebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: ProxyWebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Focus
  nameWithType: ProxyWebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: OnInit
  nameWithType: ProxyWebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: SkinID
  nameWithType: ProxyWebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: ProxyWebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.ProxyWebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.ProxyWebPartManager
  isExternal: false
  name: Visible
  nameWithType: ProxyWebPartManager.Visible
