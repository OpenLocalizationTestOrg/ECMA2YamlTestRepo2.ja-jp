### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNode
  id: TreeNode
  children:
  - System.Web.UI.WebControls.TreeNode.#ctor
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.Checked
  - System.Web.UI.WebControls.TreeNode.ChildNodes
  - System.Web.UI.WebControls.TreeNode.Clone
  - System.Web.UI.WebControls.TreeNode.Collapse
  - System.Web.UI.WebControls.TreeNode.CollapseAll
  - System.Web.UI.WebControls.TreeNode.DataBound
  - System.Web.UI.WebControls.TreeNode.DataItem
  - System.Web.UI.WebControls.TreeNode.DataPath
  - System.Web.UI.WebControls.TreeNode.Depth
  - System.Web.UI.WebControls.TreeNode.Expand
  - System.Web.UI.WebControls.TreeNode.ExpandAll
  - System.Web.UI.WebControls.TreeNode.Expanded
  - System.Web.UI.WebControls.TreeNode.ImageToolTip
  - System.Web.UI.WebControls.TreeNode.ImageUrl
  - System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.NavigateUrl
  - System.Web.UI.WebControls.TreeNode.Parent
  - System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.SaveViewState
  - System.Web.UI.WebControls.TreeNode.Select
  - System.Web.UI.WebControls.TreeNode.SelectAction
  - System.Web.UI.WebControls.TreeNode.Selected
  - System.Web.UI.WebControls.TreeNode.ShowCheckBox
  - System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNode.Target
  - System.Web.UI.WebControls.TreeNode.Text
  - System.Web.UI.WebControls.TreeNode.ToggleExpandState
  - System.Web.UI.WebControls.TreeNode.ToolTip
  - System.Web.UI.WebControls.TreeNode.TrackViewState
  - System.Web.UI.WebControls.TreeNode.Value
  - System.Web.UI.WebControls.TreeNode.ValuePath
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
  type: Class
  summary: "内のノードを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>コントロールで構成されたノード</xref:System.Web.UI.WebControls.TreeView>。 ツリー内の各エントリは、ノードが呼び出され、TreeNode オブジェクトによって表されます。 その他のノードを含むノードと呼びます、*親ノード*です。 呼ばれる別のノードが含まれているノード、*子ノード*です。 子ノードを持たないノードと呼ばれる、*リーフ ノード*です。 他のノードに含まれていないが、その他のすべてのノードの先祖ノードが、*ルート ノード*です。 ノードが親と子要素が、ルートの親の両方を指定でき、リーフ ノードは相互に排他的です。 ノードのいくつかの外観および動作プロパティは、ノードがかどうかによって決まります、*ルート*、*親*、または*リーフ*ノード。       一般的なツリーが&1; つだけのルート ノードがありますが、<xref:System.Web.UI.WebControls.TreeView>コントロールでは、ツリー構造に複数のルート ノードを追加することができます</xref:System.Web.UI.WebControls.TreeView>。 これは、製品カテゴリの一覧と同様に、1 つの主要なルート ノードを表示せずに項目の一覧を表示するときに便利です。       ノードは、2 つのプロパティにデータを格納する、主に、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティおよび<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 値、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>でプロパティを表示、<xref:System.Web.UI.WebControls.TreeView>コントロール、および<xref:System.Web.UI.WebControls.TreeNode.Value%2A>ポストバック イベントを処理するために使用されるデータなど、ノードに関するその他のデータを格納するプロパティを使用します</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 ノードも、ノードからの場合は、そのルート ノードへのパスを格納、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティは、ルート ノードに対する相対的なノードの位置を示します</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。      > [!NOTE] > 同じレベルのノードそれぞれ、一意の値が必要、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ以外の場合は、<xref:System.Web.UI.WebControls.TreeView>コントロールが同じ値を持つ同じレベルの異なるノード間で区別できません</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 このシナリオでは、ユーザーが、重複する値を持つノードをクリックすると、ノードをで最初に表示、<xref:System.Web.UI.WebControls.TreeView>コントロールを選択します</xref:System.Web.UI.WebControls.TreeView>。       TreeNode オブジェクトで構成される、次の&4; つのユーザー インターフェイス (UI) 要素をカスタマイズしたり非表示になっている:-ノードが展開された、折りたたまれた、または非展開するかどうかを示すために使用する拡張ノード インジケーターのアイコン。      -オプションのチェック ボックス、ノードに関連付けられています。      -省略可能なノード イメージです。      -ノードのテキスト。       設定して、展開可能な折りたたみ可能なおよび非展開可能なノード指標のカスタム イメージを指定できます、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A><xref:System.Web.UI.WebControls.TreeView>クラス</xref:System.Web.UI.WebControls.TreeView>のプロパティ</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 拡張ノードのインジケーター アイコンも非表示にできる設定することで、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>クラスを`false`</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。       ノードの横にあるチェック ボックスを表示するには、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A><xref:System.Web.UI.WebControls.TreeView>クラス</xref:System.Web.UI.WebControls.TreeView>のプロパティ</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>を設定します。 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティが以外の値に設定`TreeNodeType.Node`、指定したノードの種類の横にあるチェック ボックスが表示されます</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>。 そのノードの個々 のノードのチェック ボックスを選択的にオーバーライドできます<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>。 チェック ボックスが表示されたらを使用して、<xref:System.Web.UI.WebControls.TreeNode.Checked%2A>チェック ボックスをオンになっているかどうかを決定するプロパティ</xref:System.Web.UI.WebControls.TreeNode.Checked%2A>。       設定して、ノードのイメージを表示することができます、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。 このイメージは、ノードのテキストの横に表示されます。       内のノードのテキスト、<xref:System.Web.UI.WebControls.TreeView>コントロールで&2; つのモードのいずれかであることができます選択モードまたはナビゲーション モード。</xref:System.Web.UI.WebControls.TreeView> 。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、そのノードの<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティを空の文字列以外の値 (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> ノードを選択モードにする設定、そのノードの<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティを空の文字列にします</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。      > [!NOTE] > 一部のインターネット ブラウザーのパフォーマンスに影響を与える制限がある、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 たとえば、Microsoft Internet Explorer 6.0 には、ポストバック 2067 文字の URL の文字数制限があります。 ノードの URL の文字数が数よりも大きい場合は、そのノードの展開は失敗し、例外はスローされません。       既定では、選択モードになっているノードをクリックすると、ページ ポスト バックするサーバーとが発生し、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベント</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>。 必要に応じて別のノードの設定によって発生させるイベントを指定することができます`SelectAction`プロパティです。 詳細については、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>を参照してください。 選択モードでクリックしてされたノードを特定するのには、使用、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>。       ノードは、ナビゲーション モードでは、選択範囲のすべてのイベントがそのノードに対して無効になります。 指定した URL にユーザーをダイレクトするナビゲーション モードで、ノードをクリックします。 必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>ウィンドウまたはリンクされたコンテンツを表示するフレームを指定するプロパティ</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。       ツリー ノード クラスには、ノードの状態の格納に使用されるいくつかのプロパティが含まれています。 使用して、<xref:System.Web.UI.WebControls.TreeNode.Selected%2A>ノードが選択されているかどうかを決定するプロパティ</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>。 ノードが展開されているかどうかを判断するのには、使用、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>ノードがデータにバインドされているかどうかを決定するプロパティを使用します</xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>。 使用して基になるデータ項目にアクセスすることができます、ノードがデータにバインドされている場合、<xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>。       クラスは、ツリー内の他のノードを基準に、ノードの位置を決定するのに役立ついくつかのプロパティを提供します。 使用して、<xref:System.Web.UI.WebControls.TreeNode.Depth%2A>ノードの深さを判断するプロパティ</xref:System.Web.UI.WebControls.TreeNode.Depth%2A>。 ルート ノードを使用して、現在のノードからノードの区切られた一覧を取得できます、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。 ノードの親ノードを確認するには<xref:System.Web.UI.WebControls.TreeNode.Parent%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Parent%2A>。 子ノードがアクセスを使用して、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>コレクションです</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。       場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 ノードは、実行時に展開されているときに設定できます。 非同期に作成されたノードを保存する場合は、予期しない動作を取得できることに注意してください。 たとえば、バック グラウンド ワーカー スレッドを使用してノードを非同期に作成する場合、ノード ツリー可能性があります設定されませんすぐにコントロールがページの有効期間の残りの部分が続行されます。 ポストバックでコントロールのビュー ステートが読み込まれましたが、ノード ツリーが完全に作成されていないときに、ノードの遅延作成によって問題が発生することができます。  動的なノードの詳細については、次を参照してください、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティ。</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> 。       ツリー ノードのインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>コンス トラクター。</xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> 。"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to create TreeNode objects in the <xref:System.Web.UI.WebControls.TreeView> control. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildNodes")]

      public class TreeNode : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラス テキストまたは値がない場合。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.TreeNode>クラスの既定値を使用します</xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > このコンス トラクターを使用する場合、すべてのプロパティ、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトは、既定値に設定されます</xref:System.Web.UI.WebControls.TreeNode>。 オブジェクトを作成した後、必要に応じて、プロパティを設定することを確認します。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_241_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_241_1.aspx)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラス、指定したテキストを使用します。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.TreeNode>クラスで指定されたテキストを使用して、`text`パラメーター</xref:System.Web.UI.WebControls.TreeNode> 。       次の表は、 <xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|値、`text`パラメーターです |</xref:System.Web.UI.WebControls.TreeNode.Text%2A> 。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_234_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_234_1.aspx)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>ノードのコントロールです。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラスの指定したテキストと値を使用します。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.TreeNode>クラスのテキストとで指定された値を使用して、`text`と`value`パラメーターをそれぞれ</xref:System.Web.UI.WebControls.TreeNode>。       次の表は、 <xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|値、`text`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|値、`value`パラメーターです |</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_51_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>ノードのコントロールです。"
    - id: value
      type: System.String
      description: "ポストバック イベントを処理するために使用されるデータなど、ノードに関連付けられている補足データ。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラスの指定したオーナーを使用します。"
  syntax:
    content: protected TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeView
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>を含む新しい<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>です。"
    - id: isRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>ルート ノード以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラスの値を指定したテキストを使用して、画像の URL。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.TreeNode>クラス、値、テキストを使用して、画像の URL で指定された、 `text`、 `value`、および`imageUrl`パラメーターをそれぞれ</xref:System.Web.UI.WebControls.TreeNode>。       次の表は、 <xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|値、`text`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|値、`value`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|値、`imageUrl`パラメーターです |</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/3795fa87-8785-4a78-ab89-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/3795fa87-8785-4a78-ab89-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>ノードのコントロールです。"
    - id: value
      type: System.String
      description: "ポストバック イベントを処理するために使用されるデータなど、ノードに関連付けられている補足データ。"
    - id: imageUrl
      type: System.String
      description: "ノードの横に表示されるイメージの URL です。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラス、指定したテキスト、値、イメージの URL、ナビゲーション URL、およびターゲットを使用します。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.TreeNode>クラスのテキスト、値、イメージおよびナビゲーションの Url を使用しで指定したターゲットを表示、 `text`、 `value`、 `imageUrl`、 `navigateUrl`、および`target`パラメーターをそれぞれ</xref:System.Web.UI.WebControls.TreeNode>。       次の表は、 <xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|値、`text`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|値、`value`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|値、`imageUrl`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|値、`navigateUrl`パラメーターです |。  |<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|値、`target`パラメーターです |</xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> 。"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/731d6a74-0b18-423b-841c-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/731d6a74-0b18-423b-841c-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>ノードのコントロールです。"
    - id: value
      type: System.String
      description: "ポストバック イベントを処理するために使用されるデータなど、ノードに関連付けられている補足データ。"
    - id: imageUrl
      type: System.String
      description: "ノードの横に表示されるイメージの URL です。"
    - id: navigateUrl
      type: System.String
      description: "ノードがクリックされたときにリンクする URL です。"
    - id: target
      type: System.String
      description: "ターゲット ウィンドウまたはフレームを Web ページの内容を表示するときに、リンク、ノードをクリックします。"
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Checked
  id: Checked
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードのチェック ボックスをオンになっているかどうかを示す値を設定します。"
  remarks: "ノードには、チェック ボックスが表示されたら、チェックされたプロパティは、チェック ボックスをオンになっているかどうかを指定するよく使用されます。 ノードが自動的に追加するノードに関連付けられているチェック ボックスがオンの場合、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>のコレクション、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>。 Checked プロパティは、チェック ボックスをオンになっているかどうかを決定するも使用できます。      > [!NOTE] > 内のどのノードを決定する方が一般的である、<xref:System.Web.UI.WebControls.TreeView>コントロールを反復処理して選択するチェック ボックスがある、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A></xref:System.Web.UI.WebControls.TreeView>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the Checked property to specify whether a node's check box is selected. It initializes the check boxes of nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_280_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_280_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ノードのチェック ボックスがオンの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  id: ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>を現在のノードの直下の子ノードを含むコレクション。"
  remarks: "ChildNodes プロパティを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection>を現在のノードの直下の子ノードを含むコレクション</xref:System.Web.UI.WebControls.TreeNodeCollection>。 このコレクションは、すべての最初のレベルの子ノードを反復処理するか、現在のノードの特定の最初のレベルの子ノードにアクセスするによく使用されます。       ChildNodes プロパティは、最初のレベルの子ノード内の現在のノードをプログラムで管理するも使用できます。 追加、挿入、削除、および取得<xref:System.Web.UI.WebControls.TreeNode>コレクションからオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 コレクションへの更新が自動的に反映されます、 <xref:System.Web.UI.WebControls.TreeView>、[次へ] のページが更新された日時を制御します</xref:System.Web.UI.WebControls.TreeView>。       ツリーの下層さらに、子ノードにアクセスするに次のレベルの子ノードの ChildNodes プロパティを使用して、ノードのレベルを下へ移動します。"
  example:
  - "The following code example demonstrates how to use the ChildNodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_95_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>現在のノードの直下の子ノードを格納しています。"
  overload: System.Web.UI.WebControls.TreeNode.ChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Clone
  id: Clone
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 、現在のプロパティを持つクラス<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>インスタンス。"
  remarks: "これは、 <xref:System.ICloneable> <xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>によって実装されたインターフェイス</xref:System.ICloneable>をサポートするヘルパー メソッド"
  syntax:
    content: protected virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しいインスタンスを<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> 、現在のプロパティを持つ<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>インスタンス。"
  overload: System.Web.UI.WebControls.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  id: Collapse
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のツリー ノードを折りたたみます。"
  remarks: "簡単に、現在のノードを折りたたむには、折りたたみメソッドを使用します。      > [!NOTE] > 代わりに、設定することも、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティを`false`</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。       現在のノードとそのすべての子ノードを折りたたむには、使用を検討して、<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>。       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>ツリー全体のすべてのノードを折りたたみます。</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the Collapse method to programmatically collapse a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_20_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のノードとそのすべての子ノードを折りたたみます。"
  remarks: "簡単に、現在のノードとそのすべての子ノードを折りたたむには、すべて折りたたみメソッドを使用します。      > [!NOTE] > 代わりに、設定することも、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティの現在のノードとする場合は、その子ノードの各`false`</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。       現在のノードのみを折りたたむには、するには、使用を検討して、<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>。       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>ツリー全体のすべてのノードを折りたたみます。</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to programmatically collapse a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ バインディングによって、ノードが作成されたかどうかを示す値を取得します。"
  remarks: "データ バインドされたプロパティを使用すると、プログラムによって、ノードがデータ バインドによって作成されたかどうかを確認します。 設定するときに、同じノードには、動的および静的なコンテンツを混在させることはできません、ためこのプロパティは通常使用、<xref:System.Web.UI.WebControls.TreeView>ノードが静的なコンテンツを含むかどうかを決定するには、動的に制御します</xref:System.Web.UI.WebControls.TreeView>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ バインディングによって、ノードが作成された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールにバインドされているデータ項目を取得します。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.TreeView>コントロールがなどのデータ ソースにバインドが、<xref:System.Web.UI.WebControls.XmlDataSource>オブジェクト、このプロパティがこの特定のノードにバインドされているデータ アイテムに設定します</xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.TreeView>。 このプロパティはデータ項目の値にアクセスする一般的な使用します。      > [!NOTE] > このプロパティは、データ バインディングが発生した後にのみ使用します。"
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;コントロールにバインドされているデータ項目を表すです。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ノードがどのデータ項目にバインドされていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNode.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードにバインドされたデータへのパスを取得します。"
  remarks: "呼び出すときに通常データパス プロパティの値は使用、<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>データへのパスを指定するメソッドが、現在のノードにバインドします</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>。 このメソッドは、<xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>指定されたパスにデータを格納しているオブジェクト</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>を返します       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "データへのパスは、ノードにバインドされます。 この値が、階層的なデータ ソース コントロールには、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールがバインドされています。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNode.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの深さを取得します。"
  remarks: "ノードの深さを判断するのには、深さのプロパティを使用します。 深さは、ノードとルート ノード間の階層のレベル数を表します。 たとえば、ルート ノードが深さ&0; です。 ルート ノードの子は、1 つ、およびなの深さを持っています。"
  example:
  - "The following code example demonstrates how use the Depth property to determine the depth of a node. It initializes all nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1355_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1355_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "ノードの深さです。"
  overload: System.Web.UI.WebControls.TreeNode.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expand
  id: Expand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のツリー ノードを展開します。"
  remarks: "拡張メソッドを使用すると、簡単に、現在のノードを展開します。      > [!NOTE] > 代わりに、設定することも、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティを`true`</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。       現在のノードとそのすべての子ノードを展開するには、使用を検討して、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>。       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>ツリー全体のすべてのノードを展開します。</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the Expand method to programmatically expand a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_91_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のノードとそのすべての子ノードを展開します。"
  remarks: "すべて展開メソッドを使用すると、簡単に、現在のノードとそのすべての子ノードを展開します。      > [!NOTE] > 代わりに、設定することも、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティの現在のノードとする場合は、その子ノードの各`true`</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。       現在のノードだけを展開するには、使用を検討して、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.Expand%2A>。       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>ツリー全体のすべてのノードを展開します。</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to programmatically expand a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_213_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_213_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  id: Expanded
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードが展開されているかどうかを示す値を設定します。"
  remarks: "指定するか、ノードが展開されているかどうかを判断するには、拡張プロパティを使用します。       展開し、呼び出すことによって、ノードを折りたたむことができます、<xref:System.Web.UI.WebControls.TreeNode.Expand%2A>と<xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>メソッド、それぞれ</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A></xref:System.Web.UI.WebControls.TreeNode.Expand%2A>。 展開し、呼び出すことによって、ノードとそのすべての子ノードを折りたたむことができます、<xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>と<xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>メソッド、それぞれ</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A></xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>。       次の c# のコード スニペットに、コンパイル エラーが発生、拡張プロパティは、3 つの状態プロパティであるため:```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ```中 VB.Net が暗黙的にキャスト、`Boolean`値を`NullableBoolean`C# ではありません。 そのため、明示的にプロパティの状態をチェックするベスト プラクティスを勧めします。 たとえば、Visual Basic および C# の場合は、次のコード例では、明示的に拡張プロパティの値をテストします。       次の Visual Basic のコード例は、明示的に拡張プロパティの値をテストします。 この例をテスト、拡張プロパティが設定されている場合`True`。 したがって`Nothing`と`False`フォール スルー、`If`ステートメントです。      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```この c# コード例は、明示的に拡張プロパティの値をテストします。 この例をテスト、拡張プロパティが設定されている場合`True`。 したがって`Null`と`False`フォール スルー、`If`ステートメントです。      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```"
  example:
  - "The following code example demonstrates how to use the Expanded property to programmatically expand a node. It initializes all nodes with a depth of one to an expanded state. Notice that when the root node is expanded, its child nodes are already expanded. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeExpanded#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_746_1.aspx)]\n [!code-cs[TreeNodeExpanded#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_746_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> Expanded { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ノードを展開すると、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ノードが展開されていない場合または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.Expanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードの横に表示されるイメージのツールヒントのテキストを設定します。"
  remarks: "ノードの横にあるイメージが表示される場合 (ときに、<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>プロパティが設定)、ImageToolTip プロパティを使用して、ユーザーが画像の上にマウス ポインターを置いたときに、表示されるツールヒントを指定します</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for an image displayed next to a node. For this example to work correctly, you must provide your own images.  \n  \n [!code-vb[TreeNodeImageToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_911_1.aspx)]\n [!code-cs[TreeNodeImageToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_911_1.aspx)]"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "ノードの横に表示されるイメージのツールヒント テキスト。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードの横に表示されるイメージの URL を設定します。"
  remarks: "ImageUrl プロパティの現在のノードにカスタム イメージを指定を使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このイメージは、ノードの横に表示されますが、クライアントのブラウザーでサポートされている限り、任意のファイル形式 (.jpg、.gif、.bmp など) することができます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to provide a custom image for a node. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1020_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1020_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "ノードの横に表示されるカスタム イメージの URL です。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNode.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードがそのビュー ステートの変更を保存しているかどうかを示す値を取得します。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがその状態を保存するマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの以前に保存したビューステートを読み込みます。"
  remarks: "LoadViewState がノードの以前に保存したビューステートの読み込みに使用されるヘルパー メソッドです。"
  syntax:
    content: protected virtual void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>ノードの状態を表す</xref:System.Object>。"
  overload: System.Web.UI.WebControls.TreeNode.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードをクリックすると移動先の URL を設定します。"
  remarks: "ノードのテキストを&2; つのモードのいずれかで指定できます。 選択モードまたはナビゲーション モード。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにするには、空の文字列以外の値に、ノードの NavigateUrl プロパティを設定します。       ノードは、ナビゲーション モードでは、選択範囲のすべてのイベントがそのノードに対して無効になります。 ナビゲーション モードでノードをクリックすると、ユーザーが指定された URL にリンクします。 必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.Target%2A>ウィンドウまたはリンクされたコンテンツを表示するフレームを指定するプロパティ</xref:System.Web.UI.WebControls.TreeNode.Target%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_1.aspx)]  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when the node is clicked. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_2.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "ノードがクリックされたときに移動する URL です。 既定値は空の文字列 (&quot;&quot;)、このプロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Parent
  id: Parent
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のノードの親ノードを取得します。"
  remarks: "親プロパティから返される、<xref:System.Web.UI.WebControls.TreeNode>を現在のノードの親ノードを表すオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 親ノードの確認や、親ノードのプロパティにアクセスするよく使用されます。      > [!NOTE] > ルート ノードには、親ノードはありません。       現在のノードの子ノードにアクセスするには、使用、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。"
  example:
  - "The following code example demonstrates how to use the Parent property to access the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of the current node's parent node.  \n  \n [!code-vb[TreeNodeParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_132_1.aspx)]\n [!code-cs[TreeNodeParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_132_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode Parent { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>を表す、現在のノードの親ノードです。"
  overload: System.Web.UI.WebControls.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードが動的に読み込まれるかどうかを示す値を設定します。"
  remarks: "場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 ノードの PopulateOnDemand プロパティに設定するときに`true`、そのノードは、ノードが展開されている場合、ポストバック イベントを介して実行時に設定されます。 ノードを動的に設定するノードのメンバーを追加するイベント ハンドラー メソッドを定義する必要があります、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベント</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>。       サポートされているブラウザーでは、クライアント側のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>が原因で、サーバーに投稿する必要が動的にそのノードを展開すると、クライアント上のノードを挿入するコントロール</xref:System.Web.UI.WebControls.TreeView>。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the PopulateOnDemand property to indicate that a node is populated dynamically.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_774_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_774_1.aspx)]"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ノードを動的に設定するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  id: RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードに追加の表示を追加するコントロールを使用できます。"
  remarks: "このメソッドは、ノードが表示された後に、追加の表示を追加するコントロールの開発者によってオーバーライドできます。"
  syntax:
    content: protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Web ページへのコンテンツを書き込むために使用する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeNode.RenderPostText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  id: RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードに追加の表示を追加するコントロールを使用できます。"
  remarks: "このメソッドは、ノードが表示される前に追加の表示を追加するコントロールの開発者によってオーバーライドできます。"
  syntax:
    content: protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Web ページへのコンテンツを書き込むために使用する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeNode.RenderPreText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの現在のビューステートを保存します。"
  remarks: "SaveViewState メソッドは、その状態を保存するノードと呼ばれるヘルパー メソッドです。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>ノードの保存された状態を格納している</xref:System.Object>。"
  overload: System.Web.UI.WebControls.TreeNode.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Select
  id: Select
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のノードを選択、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "現在のノードを選択する Select メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。       **注**代わりに、選択することも、現在のノードを設定して、<xref:System.Web.UI.WebControls.TreeNode.Selected%2A>プロパティを`true`</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>。"
  example:
  - "The following code example demonstrates how to use the Select method to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_189_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_189_1.aspx)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードが選択されているときに発生するイベントを設定します。"
  remarks: "内のノードのテキスト、<xref:System.Web.UI.WebControls.TreeView>コントロールで&2; つのモードのいずれかであることができます選択モードまたはナビゲーション モード。</xref:System.Web.UI.WebControls.TreeView> 。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、そのノードの<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティを空の文字列以外の値 (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> ノードを選択モードにする設定、そのノードの<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>プロパティを空の文字列にします</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>。      > [!NOTE] > ノードは、ナビゲーション モードでは、選択イベントでは、そのノードの無効になっています。 ノードをクリックすると、指定した URL ではなくサーバーにページ送信とイベントを発生させるのにユーザーに指示されます。       選択モードでのノードがある場合は、ノードが選択されているときに発生するイベントまたはイベントを指定する SelectAction プロパティを使用します。 次の表には、使用可能なオプションが一覧表示します。      |選択アクション |説明 |  |----------------------|-----------------|  |`TreeNodeSelectAction.Expand`|ノードの展開と折りたたみを切り替えます。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>イベントまたは必要に応じて<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>イベントを発生させます |。  |`TreeNodeSelectAction.None`|ノードが選択されているときにイベントを発生させません |。  |`TreeNodeSelectAction.Select`|ノードを選択すると、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベントを発生させます |。  |`TreeNodeSelectAction.SelectExpand`|両方を生成、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>と<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ノードが選択されているときにイベント</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>。 ノードのみを展開、折りたたむことはできません |。     > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>その SelectAction プロパティを設定して、ノードのプロパティがレンダリングされません`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1227_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1227_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Selected
  id: Selected
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードが選択されているかどうかを示す値を設定します。"
  remarks: "指定するか、ノードが選択されているかどうかを判断するには、選択したプロパティを使用します。      > [!NOTE] > を使用する方が一般的では、ノードが選択されているかどうかを決定するプロパティを使用できますが、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティ</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>。       一度に&1; つのノードを選択することができます、<xref:System.Web.UI.WebControls.TreeView>このプロパティを使用する場合を制御します</xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] > 代わりに、選択することも、ノードを使用して、<xref:System.Web.UI.WebControls.TreeNode.Select%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.Select%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the Selected property to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_559_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_559_1.aspx)]"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ノードを選択します。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードの横にあるチェック ボックスを表示するかどうかを示す値を設定します。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>コントロールでは、ノードのイメージの横にあるチェック ボックスを表示することができます</xref:System.Web.UI.WebControls.TreeView>。 ShowCheckBox プロパティを使用して、または現在のノードのチェック ボックスを非表示にします。       使用する方が一般的では、ShowCheckBox プロパティを使用して、チェック ボックスを表示できますが、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>。 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>プロパティ、ただし、プロパティによって指定されるすべてのノード型以外の場合は、ShowCheckBox プロパティは多くの場合であるため、個々 のノードでその設定を上書きする</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>。       以降、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>プロパティは、3 つの状態プロパティを次の c# のコード スニペットに、コンパイル エラーが発生:```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ```中 VB.Net が暗黙的にキャスト、`Boolean`値を`NullableBoolean`C# ではありません</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>。 そのため、明示的にプロパティの状態をチェックするベスト プラクティスを勧めします。 たとえば、Visual Basic および C# の場合は、次のコード例で明示的の値がテスト、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。       Visual Basic のコード例を次の値を明示的にテストする、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。 この例、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティに設定されている`True`ですそのため`Nothing`と`False`フォール スルー、`If`ステートメント。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> 。      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```この c# コード例は、の値を明示的にテスト、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。 この例、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティに設定されている`True`ですそのため`Null`と`False`フォール スルー、`If`ステートメント。</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> 。      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ShowCheckBox property to programmatically show and hide the check box for a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_833_1.aspx)]\n [!code-cs[TreeNodeShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_833_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>チェック ボックスを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コピーを作成、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクト。"
  remarks: "ICloneable.Clone メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNode>自体のコピーを作成するクラス</xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>のコピーを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>オブジェクト</xref:System.Object>。"
  overload: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.IStateManager.IsTrackingViewState*>。</xref:System.Web.UI.IStateManager.IsTrackingViewState*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.TreeNode>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "ノードがそのビュー ステートの変更を保存しているかどうかを示す値。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの以前保存したビューステートを読み込みます。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "A &lt;xref:System.Object?displayProperty=fullName&gt;保存されているビュー ステートの値を格納しています。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビュー状態の変更を保存、 &lt;xref:System.Object?displayProperty=fullName&gt;です。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "&lt;Xref:System.Object?displayProperty=fullName&gt;ビュー ステートの変化を格納しています。"
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>ビューステートへの変更を追跡するオブジェクト。"
  remarks: "サーバー コントロールでは、このメソッドが呼び出された後、<xref:System.Web.UI.Control.IsTrackingViewState%2A>プロパティから返される`true`</xref:System.Web.UI.Control.IsTrackingViewState%2A>。"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、ターゲットのウィンドウまたはフレームをノードに関連付けられている Web ページの内容を表示します。"
  remarks: "ウィンドウまたはフレームを表示するのにために Web コンテンツ ノードにリンクしてそのノードがクリックされたときに指定するのにには、ターゲット プロパティを使用します。      > [!NOTE] > このプロパティの設定、<xref:System.Web.UI.WebControls.TreeView.Target%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.Target%2A>。      > [!NOTE] > として Target プロパティが表示されます、`target`属性。 `target`属性`anchor`要素は、XHTML 1.1 ドキュメント型定義で許可されていません。 場合は、対象となるプロパティを設定しないでください、表示される出力を<xref:System.Web.UI.WebControls.TreeNode>XHTML 1.1 に準拠したオブジェクトでなければなりません</xref:System.Web.UI.WebControls.TreeNode>。 詳細については、次を参照してください。 [Visual Studio および ASP.NET で XHTML 標準](~/add/includes/ajax-current-ext-md.md)です。   >> をアクセス可能な Web ページを作成する場合は、別のウィンドウを対象とするターゲット プロパティを使用しないようにするを強くお勧めします。 詳細については、次を参照してください。 [NIB: ASP.NET のユーザー補助](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae)です。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to set up the frames for the next example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_1.aspx)]  \n  \n The following code example demonstrates how to use the Target property to specify the frame in which to display the linked content. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_2.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "ターゲット ウィンドウまたはリンクされた Web ページの内容を表示するフレーム。 値は、範囲の A ~ Z (大文字)、次の表に示すように、アンダー スコアで始まる特殊な値以外の文字で始まる必要があります。       <table><thead><tr><th> 対象の値       </th><th> 説明       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> 新しいウィンドウ フレームを使用せずにコンテンツをレンダリングします。       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 直前のフレーム セットの親に内容を表示します。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> [検索] ウィンドウの内容を表示します。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> フォーカスのあるフレームのコンテンツをレンダリングします。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> フル ウィンドウ フレームを使用せずにコンテンツをレンダリングします。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    決定する、ブラウザーのマニュアルを確認するかどうか、 <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref>値はサポートされています。 たとえば、Microsoft Internet Explorer 5.0、以降のサポート、 <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref>ターゲット値。      </div>       既定値は空の文字列 (&quot;&quot;)、ウィンドウまたはフォーカスのあるフレームが更新されます。"
  overload: System.Web.UI.WebControls.TreeNode.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定内のノードに表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "テキスト プロパティを指定するか、ノードに表示されるテキストを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] > Text プロパティが含まれている場合`null`、`get`アクセサーの値を返します、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 場合、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティが含まれています、 `null`、<xref:System.String.Empty>が返されます</xref:System.String.Empty></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text for a node.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_843_1.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_843_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "内のノードに表示されるテキスト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  id: ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードの展開と折りたたみの状態を切り替えます。"
  remarks: "ノードを展開し、折りたたまれた状態の間で切り替えられるように ToggleExpandState メソッドを使用します。 たとえば、ノードが折りたたまれている場合、ToggleExpandState メソッドを呼び出すノードを展開します、およびその逆です。      > [!NOTE] > 代わりに、として設定することができます、<xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>プロパティを直接</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>。"
  example:
  - "The following code example demonstrates how to use the ToggleExpandState method to alternate between an expanded and a collapsed state for the root node of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeToggleExpandState#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_18_1.aspx)]\n [!code-cs[TreeNodeToggleExpandState#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public void ToggleExpandState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードのツールヒントのテキストを設定します。"
  remarks: "ToolTip プロパティを使用すると、ノードのツールヒントのテキストを指定できます。 ノード上にマウス ポインターを置くと、ツールヒントのテキストが表示されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the ToolTip property to provide ToolTips for the nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_69_1.aspx)]\n [!code-vb[TreeNodeToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "ノードのツールヒント テキスト。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNode.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "開始位置を示す追跡ビューステートの保存へと変更、ノードの開始点をマークします。"
  syntax:
    content: protected void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはポストバック イベントを処理するために使用されるデータなど、ノードに関するその他のデータの格納に使用される非表示の値を設定します。"
  remarks: "値プロパティを使用を補足するものを<xref:System.Web.UI.WebControls.TreeNode.Text%2A>ノードに関連付けられている追加のデータを格納することによりプロパティ</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 この値は、コントロールでは表示されず、一般的にポストバック イベントを処理するためのデータを格納するために使用します。      > [!NOTE] > Value プロパティが含まれている場合`null`、`get`アクセサーの値を返します、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 場合、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティが含まれています、 `null`、<xref:System.String.Empty>が返されます</xref:System.String.Empty></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。      > [!NOTE] > それぞれの同じレベルのノードが値プロパティに一意の値が必要、<xref:System.Web.UI.WebControls.TreeView>コントロールが同じ値を持つ同じレベルの異なるノード間で区別できません</xref:System.Web.UI.WebControls.TreeView>。 このシナリオでは、ユーザーが、重複する値を持つノードをクリックすると、ノードをで最初に表示、<xref:System.Web.UI.WebControls.TreeView>コントロールを選択します</xref:System.Web.UI.WebControls.TreeView>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the Value property to store the key field.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1316_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1316_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "表示されていないノードについての補足データ。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.TreeNode.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ルート ノードから現在のノードへのパスを取得します。"
  remarks: "ValuePath プロパティには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 使用して、<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>プロパティ ノードの値を区切るために使用する区切り文字を指定します</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>。 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A><xref:System.Web.UI.WebControls.TreeView>クラス</xref:System.Web.UI.WebControls.TreeView>のメソッド</xref:System.Web.UI.WebControls.TreeView.FindNode%2A>に引数として渡すまたは個々 の値の一覧を解析するときに通常この値に使用します。       表示される値に応じて、<xref:System.Web.UI.WebControls.TreeView>コントロール、区切り文字は、すべての競合を防ぐために変更する必要があります</xref:System.Web.UI.WebControls.TreeView>。 たとえば、コンマを区切り文字を設定した場合に表示される値含めることはできませんコンマそれ以外の場合、ValuePath プロパティを正確に解析できません。      > [!NOTE] > 同じレベルのノードそれぞれ、一意の値が必要、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ以外の場合は、<xref:System.Web.UI.WebControls.TreeView>コントロールが同じ値を持つ同じレベルの異なるノード間で区別できません</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 このシナリオでは、ユーザーが、重複する値を持つノードをクリックすると、ノードをで最初に表示、<xref:System.Web.UI.WebControls.TreeView>コントロールを選択します</xref:System.Web.UI.WebControls.TreeView>。"
  example:
  - "The following code example demonstrates how to parse the ValuePath property.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧。"
  overload: System.Web.UI.WebControls.TreeNode.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
- uid: System.Web.UI.WebControls.TreeView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.Checked
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNode.Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNode.Expand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.Select
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Target
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Value
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
- uid: System.Web.UI.WebControls.TreeNode.#ctor*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.Checked*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNode.Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Web.UI.WebControls.TreeNode.Collapse*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll
  nameWithType: TreeNode.CollapseAll
- uid: System.Web.UI.WebControls.TreeNode.DataBound*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
- uid: System.Web.UI.WebControls.TreeNode.Expand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Web.UI.WebControls.TreeNode.Expanded*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState
  nameWithType: TreeNode.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText
  nameWithType: TreeNode.RenderPostText
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText
  nameWithType: TreeNode.RenderPreText
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState
  nameWithType: TreeNode.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.Select*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select
  nameWithType: TreeNode.Select
- uid: System.Web.UI.WebControls.TreeNode.SelectAction*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNode.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Target*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState
  nameWithType: TreeNode.ToggleExpandState
- uid: System.Web.UI.WebControls.TreeNode.ToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState
  nameWithType: TreeNode.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Value*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
