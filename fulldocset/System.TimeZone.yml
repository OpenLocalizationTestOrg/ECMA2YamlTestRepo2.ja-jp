### YamlMime:ManagedReference
items:
- uid: System.TimeZone
  id: TimeZone
  children:
  - System.TimeZone.#ctor
  - System.TimeZone.CurrentTimeZone
  - System.TimeZone.DaylightName
  - System.TimeZone.GetDaylightChanges(System.Int32)
  - System.TimeZone.GetUtcOffset(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime)
  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  - System.TimeZone.StandardName
  - System.TimeZone.ToLocalTime(System.DateTime)
  - System.TimeZone.ToUniversalTime(System.DateTime)
  langs:
  - csharp
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
  type: Class
  summary: "タイム ゾーンを表します。"
  remarks: "タイム ゾーンは、同じ標準時が使用されている地理的領域です。      > [!IMPORTANT] >、可能な限り<xref:System.TimeZoneInfo>、タイム ゾーン クラスではなくクラス</xref:System.TimeZoneInfo>を使用します。       現在のタイム ゾーンに関する情報を取得し、現地時刻を世界協定時刻 (UTC) またはその逆から時刻を変換するには、タイム ゾーン クラスを使用することができます。 ただし、ローカルのゾーン以外のタイム ゾーンを表示または別に&1; つのタイム ゾーンから日付と時刻の変換を処理するタイム ゾーンのクラスを使用できません。 このため、<xref:System.TimeZoneInfo>クラス</xref:System.TimeZoneInfo>を使用します。 このクラスを使用すると、カスタムのタイム ゾーンを作成し、時刻を別の&1; つのタイム ゾーンに変換するのに、ローカルのシステムで定義されている任意のタイム ゾーンの情報を取得します。       タイム ゾーンのクラスでは、ローカル タイム ゾーンの&1; つの夏時間の調整規則のみをサポートしています。 その結果、タイムゾーン クラス正確に夏時間情報を報告したり、最新の調整規則の有効期間にのみ、UTC と現地時刻の間で変換できます。 これに対し、<xref:System.TimeZoneInfo>クラスは、過去のタイム ゾーン データを操作できるようになります、複数の調整規則をサポートしています</xref:System.TimeZoneInfo>。"
  example:
  - "The following example references and displays selected `TimeZone` class elements.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/t-system.timezone_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/t-system.timezone_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/t-system.timezone_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TimeZone
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.TimeZone.#ctor
  id: '#ctor'
  parent: System.TimeZone
  langs:
  - csharp
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.TimeZone&quot;> </xref>クラスです。"
  syntax:
    content: protected TimeZone ();
    parameters: []
  overload: System.TimeZone.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.CurrentTimeZone
  id: CurrentTimeZone
  parent: System.TimeZone
  langs:
  - csharp
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "現在のコンピューターのタイム ゾーンを取得します。"
  remarks: "CurrentTimeZone プロパティに対応して、<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>。"
  example:
  - "The following example references the `CurrentTimeZone` property and displays the names for standard time and daylight saving time for the local time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.curren_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.curren_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.curren_1.cs)]"
  syntax:
    content: public static TimeZone CurrentTimeZone { get; }
    return:
      type: System.TimeZone
      description: "A <xref href=&quot;System.TimeZone&quot;> </xref>を現在のローカル タイム ゾーンを表すオブジェクト。"
  overload: System.TimeZone.CurrentTimeZone*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.DaylightName
  id: DaylightName
  parent: System.TimeZone
  langs:
  - csharp
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "夏時間のタイム ゾーンの名前を取得します。"
  remarks: "夏時間がタイム ゾーン、空の文字列で使用されていない場合 (&quot;&quot;) が返されます。       DaylightName プロパティに対応して、<xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.DaylightName%2A?displayProperty=fullName>。"
  example:
  - "The following example references and displays the `DaylightName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.daylig_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.daylig_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.daylig_1.cs)]"
  syntax:
    content: public abstract string DaylightName { get; }
    return:
      type: System.String
      description: "夏時間のタイム ゾーンの名前。"
  overload: System.TimeZone.DaylightName*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  id: GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "特定の年の夏時間の期間を返します。"
  remarks: "1 年あたり&1; つだけの夏時間期間はサポートされています。       現在のタイム ゾーンの夏時間の期間を使用しない場合、戻り値は、<xref:System.Globalization.DaylightTime>オブジェクト、場所の値<xref:System.Globalization.DaylightTime.Start%2A>と<xref:System.Globalization.DaylightTime.End%2A>は<xref:System.DateTime.MinValue?displayProperty=fullName>の値と<xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName>は、<xref:System.TimeSpan>タイマー刻みの 0 に初期化します</xref:System.TimeSpan></xref:System.Globalization.DaylightTime.Delta%2A?displayProperty=fullName></xref:System.DateTime.MinValue?displayProperty=fullName></xref:System.Globalization.DaylightTime.End%2A></xref:System.Globalization.DaylightTime.Start%2A></xref:System.Globalization.DaylightTime>。"
  syntax:
    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "夏時間の期間が適用される年。"
    return:
      type: System.Globalization.DaylightTime
      description: "A <xref href=&quot;System.Globalization.DaylightTime&quot;> </xref>オブジェクトに夏時間の開始と終了日を含む<code> year</code>です。"
  overload: System.TimeZone.GetDaylightChanges*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>1 より小さいか、9999 を超えてです。"
  platform:
  - net462
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  id: GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "指定したローカル時間の世界協定時刻 (UTC) オフセットを返します。"
  remarks: "このメソッドを返しますのオフセットまたは差を間、`time`パラメーターと世界協定時刻 (UTC)。 つまり: `time` = UTC + メソッドでは、解釈のタイム ゾーン オフセット`time`に基づいてその<xref:System.DateTime.Kind%2A>プロパティ</xref:System.DateTime.Kind%2A>。 場合の値、<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind?displayProperty=fullName>または<xref:System.DateTimeKind?displayProperty=fullName>、メソッドは、ローカル タイム ゾーンのオフセットを返します</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime.Kind%2A>。 場合、<xref:System.DateTime.Kind%2A>プロパティは<xref:System.DateTimeKind?displayProperty=fullName>メソッドが<xref:System.TimeSpan.Zero?displayProperty=fullName>.</xref:System.TimeSpan.Zero?displayProperty=fullName>に等しいオフセットを返します</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime.Kind%2A>の値       GetUtcOffset が現在の調整規則を適用する場合は、ローカル タイム ゾーンが夏時間に従って、`time`ローカル タイム ゾーンのオフセットを決定するとき。 つまり、GetUtcOffset によって返されたオフセットが反映されるかどうか`time`がタイム ゾーンの標準時かその夏時間に該当します。      > [!NOTE] >、GetUtcOffset メソッドは現在夏時間調整規則のみがローカル タイム ゾーンの認識します。 その結果を正確に最新の調整規則の有効期間中にのみ、UTC のオフセットのローカル時刻を返すことが保証されます。 場合は不正確な結果が返される`time`は過去の日付と時刻の値以前の調整規則の対象となった。       GetUtcOffset メソッドに対応して、<xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.GetUtcOffset%2A?displayProperty=fullName>。       日付と時刻の値がによって表されるため`time`および UTC からのこの値のオフセット密結合されていない、特定のローカルまたは未指定の日付と時刻の値と異なるコンピューター上で実行または異なるタイム ゾーンの下にある同じコンピューターで実行すると別のオフセット値を返すことができます。 この動作が望ましくない場合を使用して、<xref:System.DateTimeOffset>値の代わりにします</xref:System.DateTimeOffset>。 <xref:System.DateTimeOffset>データ型と密日付と時刻の値のオフセット (utc) から</xref:System.DateTimeOffset>。"
  syntax:
    content: public abstract TimeSpan GetUtcOffset (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "日付と時刻の値です。"
    return:
      type: System.TimeSpan
      description: "世界協定時刻 (UTC) オフセットから<code> time</code>です。"
  overload: System.TimeZone.GetUtcOffset*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  id: IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "指定した日付と時刻が、夏時間の期間内かどうかを示す値を返します。"
  remarks: "夏時間の期間を適用する年がから派生した、`time`パラメーター。       <xref:System.TimeZone>クラスは、1 つの夏時間の調整規則をサポートしている、IsDaylightSavingTime メソッドでは、したかどうか調整規則では有効にその日付に関係なく、任意の日付に現在の調整規則が適用されます</xref:System.TimeZone>。 使用してより正確な結果が利用可能な正確な履歴夏時間データは、オペレーティング システム自体では、想定されるので、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual bool IsDaylightSavingTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "日付と時刻。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> time </code>夏時間タイム期間です。 それ以外の場合には、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "指定した日付と時刻が、指定の夏時間の期間内かどうかを示す値を返します。"
  remarks: "<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>メソッドはこの IsDaylightSavingTime メソッドのオーバー ロードと同じ機能を提供します</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.IsDaylightSavingTime%2A?displayProperty=fullName>。"
  syntax:
    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);
    parameters:
    - id: time
      type: System.DateTime
      description: "日付と時刻。"
    - id: daylightTimes
      type: System.Globalization.DaylightTime
      description: "追加します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>time</code> is in <code>daylightTimes</code>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.TimeZone.IsDaylightSavingTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>daylightTimes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.TimeZone.StandardName
  id: StandardName
  parent: System.TimeZone
  langs:
  - csharp
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "標準時ゾーンの名前を取得します。"
  remarks: "StandardName プロパティに対応して、<xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>。 可能な限り、使用、<xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>プロパティ</xref:System.TimeZoneInfo.StandardName%2A?displayProperty=fullName>。"
  example:
  - "The following example references and displays the `StandardName` property of the current time zone.  \n  \n [!code-cpp[System.TimeZone.Class#1](~/add/codesnippet/cpp/p-system.timezone.standa_1.cpp)]\n [!code-vb[System.TimeZone.Class#1](~/add/codesnippet/visualbasic/p-system.timezone.standa_1.vb)]\n [!code-cs[System.TimeZone.Class#1](~/add/codesnippet/csharp/p-system.timezone.standa_1.cs)]"
  syntax:
    content: public abstract string StandardName { get; }
    return:
      type: System.String
      description: "標準時ゾーンの名前。"
  overload: System.TimeZone.StandardName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "このプロパティを設定しようとしましたが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  id: ToLocalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "指定した日付と時刻の値に対応するローカル時刻を返します。"
  remarks: "次の表は、関係を示しています、`time`パラメーターおよび<xref:System.DateTime>このメソッドによって返される値</xref:System.DateTime>。      |`time`パラメーター |動作 |戻り値 |  |----------------------|--------------|------------------|  |世界協定時刻 (UTC) 時刻 (<xref:System.DateTimeKind?displayProperty=fullName>). |時刻を UTC からのローカル時刻に変換します |。値が現地時刻に対応する<xref:System.DateTime>オブジェクト`time`|。  |ローカル時刻 (<xref:System.DateTimeKind?displayProperty=fullName>). |変換は必要ありません |。によって表される同じ<xref:System.DateTime>値、`time`パラメーターです |。  |指定されていない時刻 (<xref:System.DateTimeKind?displayProperty=fullName>). |時刻が utc (utc) から現地時刻に変換するいると見なします |。値が現地時刻に対応する<xref:System.DateTime>オブジェクト`time`|。      ToLocalTime が現在の調整規則を適用する場合は、ローカル タイム ゾーンが夏時間に従って、`time`変換を実行するときにします</xref:System.DateTime></xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime></xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime></xref:System.DateTimeKind?displayProperty=fullName>。      > [!NOTE] >、ToLocalTime メソッドは現在夏時間調整規則のみがローカル タイム ゾーンの認識します。 その結果、最新の調整規則の有効期間中にのみ特定の UTC 時刻に対応するローカル時間を正確に返されることが保証されます。 場合は不正確な結果が返される`time`は過去の日付と時刻の値以前の調整規則の対象となった。       ToLocalTime メソッドに対応して、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>メソッドをその`destinationTimeZone` <xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>.</xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName>にパラメーターが設定</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName> 可能な限り、使用、<xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>メソッド</xref:System.TimeZoneInfo.ConvertTimeFromUtc%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual DateTime ToLocalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "世界協定時刻 (UTC) 時刻。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>値があるオブジェクトに対応する現地時刻<code> time </code></xref:System.DateTime> 。"
  overload: System.TimeZone.ToLocalTime*
  exceptions: []
  platform:
  - net462
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  id: ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  langs:
  - csharp
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "指定された時間を世界協定時刻 (UTC) 対応するを返します。"
  remarks: "ToUniversalTime が現在の調整規則を適用する場合は、ローカル タイム ゾーンが夏時間に従って、`time`パラメーターの変換を実行するときにします。      > [!NOTE] >、ToUniversalTime メソッドはのみ現在夏時間の調整規則がローカル タイム ゾーンの認識します。 その結果、正確に最新の調整規則の有効期間中にのみ特定のローカル時刻に対応する世界協定時刻 (UTC) を返すことが保証されます。 場合は不正確な結果が返される`time`は過去の日付と時刻の値以前の調整規則の対象となった。       場合、`time`パラメーターがあいまいな時刻、メソッドは、標準時であることを想定しています。 (あいまいな時刻がいずれかの標準時またはローカルのタイム ゾーンが夏時間のいずれかにマップできます。)場合`time`無効な時間は、メソッドが単純にローカル タイム ゾーンの UTC を返す (utc) オフセットからローカル時刻を減算します。 (無効な時刻は夏時間調整規則の適用のために存在しません。)     `time`解釈が現在のシステムの現在のタイム ゾーンに関連して日付と時刻がこのメソッドによって返されることができる場合、異なる実行するアプリケーションが別のコンピューターまたは同じコンピューターに別のタイム ゾーンを含むです。 日付と時刻の値が時刻で、単一であいまいさを表す必要がありますの場合、使用、<xref:System.DateTimeOffset>ローカル時刻を表す値</xref:System.DateTimeOffset>。       ToUniversalTime メソッドに対応して、<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>メソッドのオーバー ロードで、<xref:System.DateTime>パラメーター<xref:System.DateTime.Kind%2A>プロパティが<xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName>と等しくない</xref:System.DateTime.Kind%2A></xref:System.DateTime></xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName> 可能な限り、使用、<xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>メソッドのオーバー ロード</xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%29?displayProperty=fullName>。"
  syntax:
    content: public virtual DateTime ToUniversalTime (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "日付と時刻。"
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト値を持つ、世界協定時刻 (UTC) に対応する<code> time </code></xref:System.DateTime> 。"
  overload: System.TimeZone.ToUniversalTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.TimeZone.#ctor
  parent: System.TimeZone
  isExternal: false
  name: TimeZone()
  nameWithType: TimeZone.TimeZone()
  fullName: System.TimeZone.TimeZone()
- uid: System.TimeZone.CurrentTimeZone
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
  fullName: System.TimeZone.CurrentTimeZone
- uid: System.TimeZone
  parent: System
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone
  fullName: System.TimeZone
- uid: System.TimeZone.DaylightName
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
  fullName: System.TimeZone.DaylightName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.TimeZone.GetDaylightChanges(System.Int32)
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges(Int32)
  nameWithType: TimeZone.GetDaylightChanges(Int32)
  fullName: System.TimeZone.GetDaylightChanges(Int32)
- uid: System.Globalization.DaylightTime
  parent: System.Globalization
  isExternal: false
  name: DaylightTime
  nameWithType: DaylightTime
  fullName: System.Globalization.DaylightTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.TimeZone.GetUtcOffset(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset(DateTime)
  nameWithType: TimeZone.GetUtcOffset(DateTime)
  fullName: System.TimeZone.GetUtcOffset(DateTime)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime(DateTime,DaylightTime)
  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)
- uid: System.TimeZone.StandardName
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
  fullName: System.TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime(DateTime)
  nameWithType: TimeZone.ToLocalTime(DateTime)
  fullName: System.TimeZone.ToLocalTime(DateTime)
- uid: System.TimeZone.ToUniversalTime(System.DateTime)
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime(DateTime)
  nameWithType: TimeZone.ToUniversalTime(DateTime)
  fullName: System.TimeZone.ToUniversalTime(DateTime)
- uid: System.TimeZone.#ctor*
  parent: System.TimeZone
  isExternal: false
  name: TimeZone
  nameWithType: TimeZone.TimeZone
- uid: System.TimeZone.CurrentTimeZone*
  parent: System.TimeZone
  isExternal: false
  name: CurrentTimeZone
  nameWithType: TimeZone.CurrentTimeZone
- uid: System.TimeZone.DaylightName*
  parent: System.TimeZone
  isExternal: false
  name: DaylightName
  nameWithType: TimeZone.DaylightName
- uid: System.TimeZone.GetDaylightChanges*
  parent: System.TimeZone
  isExternal: false
  name: GetDaylightChanges
  nameWithType: TimeZone.GetDaylightChanges
- uid: System.TimeZone.GetUtcOffset*
  parent: System.TimeZone
  isExternal: false
  name: GetUtcOffset
  nameWithType: TimeZone.GetUtcOffset
- uid: System.TimeZone.IsDaylightSavingTime*
  parent: System.TimeZone
  isExternal: false
  name: IsDaylightSavingTime
  nameWithType: TimeZone.IsDaylightSavingTime
- uid: System.TimeZone.StandardName*
  parent: System.TimeZone
  isExternal: false
  name: StandardName
  nameWithType: TimeZone.StandardName
- uid: System.TimeZone.ToLocalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToLocalTime
  nameWithType: TimeZone.ToLocalTime
- uid: System.TimeZone.ToUniversalTime*
  parent: System.TimeZone
  isExternal: false
  name: ToUniversalTime
  nameWithType: TimeZone.ToUniversalTime
