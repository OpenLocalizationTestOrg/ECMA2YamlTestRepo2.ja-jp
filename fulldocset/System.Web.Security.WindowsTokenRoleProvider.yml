### YamlMime:ManagedReference
items:
- uid: System.Web.Security.WindowsTokenRoleProvider
  id: WindowsTokenRoleProvider
  children:
  - System.Web.Security.WindowsTokenRoleProvider.#ctor
  - System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  - System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  - System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  - System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider
  fullName: System.Web.Security.WindowsTokenRoleProvider
  type: Class
  summary: "Windows グループのメンバーシップから ASP.NET アプリケーションにロール情報を取得します。"
  remarks: "WindowsTokenRoleProvider クラスは、Windows セキュリティ グループに基づく Windows ユーザーのロール情報を取得する読み取り専用のロールのメンバーシップ プロバイダーです。 Windows 認証モードを使用して、IIS の認証設定が匿名認証を無効にされる ASP.NET アプリケーションで最も便利です。 許可するか、特定の Windows グループのユーザーのメンバーシップに基づいてアクセスを拒否する ASP.NET アプリケーションを構成することができます。       作成またはロールを削除または Windows グループのメンバーシップに基づいているロールのメンバーシップを変更する WindowsTokenRoleProvider クラスを使用することはできません。 この機能は、Windows オペレーティング システムによって管理されます。 WindowsTokenRoleProvider クラスのみをサポート、<xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>および<xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A><xref:System.Web.Security.RoleProvider>抽象クラス</xref:System.Web.Security.RoleProvider>のメソッド</xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A></xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A>"
  example:
  - "The following example shows the Web.config file for an ASP.NET application. It specifies that the application uses both Windows authentication and the WindowsTokenRoleProvider class to retrieve role information for Windows users. The  element specifies that only users in the BUILTIN\\Administrators group are allowed access to the application.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Windows\" />  \n  \n    <authorization>  \n      <allow roles=\"BUILTIN\\Administrators\" />  \n        <deny users=\"*\" />  \n      </authorization>  \n  \n    <roleManager defaultProvider=\"WindowsProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"false\">  \n      <providers>  \n        <add  \n          name=\"WindowsProvider\"  \n          type=\"System.Web.Security.WindowsTokenRoleProvider\" />  \n      </providers>  \n    </roleManager>  \n  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスです。"
  remarks: "インスタンスを作成する ASP.NET によって WindowsTokenRoleProvider コンス トラクターが呼び出されます、<xref:System.Web.Security.WindowsTokenRoleProvider>アプリケーションの構成で指定したクラスです</xref:System.Web.Security.WindowsTokenRoleProvider>。 このコンス トラクターは、コードから使用するものではありません。"
  syntax:
    content: public WindowsTokenRoleProvider ();
    parameters: []
  overload: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  remarks: "このメソッド<xref:System.Web.Security.WindowsTokenRoleProvider>クラスし、 <xref:System.Configuration.Provider.ProviderException>。</xref:System.Configuration.Provider.ProviderException>は常にスロー</xref:System.Web.Security.WindowsTokenRoleProvider>によってサポートされていません"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "指定したロールに追加するユーザー名の文字列配列。"
    - id: roleNames
      type: System.String[]
      description: "指定されたユーザー名を追加するロール名の文字列配列。"
  overload: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得またはアプリケーションの名前を設定します。"
  remarks: "などの他のロール プロバイダーとは異なり、 <xref:System.Web.Security.SqlRoleProvider>、<xref:System.Web.Security.WindowsTokenRoleProvider>クラスは、アプリケーションにロール情報を関連付けません</xref:System.Web.Security.WindowsTokenRoleProvider></xref:System.Web.Security.SqlRoleProvider>。 代わりに、ロールの詳細については、ローカル コンピューター上の Windows グループから取得されます。 使用する同じサーバー上の複数のアプリケーション、<xref:System.Web.Security.WindowsTokenRoleProvider>クラスは、常に同じロール情報を共有します</xref:System.Web.Security.WindowsTokenRoleProvider>。 ただし、`applicationName`ロール情報を取得するプロパティは使用されません ApplicationName、アプリケーションの Web.config ファイルで構成できます。"
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.WindowsTokenRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"WindowsProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"false\">  \n  <providers>  \n    <add  \n      name=\"WindowsProvider\"  \n      type=\"System.Web.Security.WindowsTokenRoleProvider\"   \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "アプリケーションの名前。"
  overload: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "しようとしましたが、ApplicationName プロパティの設定がない呼び出し元によって<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> ASP.NET ホスティング アクセス許可。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "256 文字より長い文字列に ApplicationName を設定しようとしました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  remarks: "このメソッド<xref:System.Web.Security.WindowsTokenRoleProvider>クラスし、 <xref:System.Configuration.Provider.ProviderException>。</xref:System.Configuration.Provider.ProviderException>は常にスロー</xref:System.Web.Security.WindowsTokenRoleProvider>によってサポートされていません"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "作成するロールの名前。"
  overload: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "削除するロールの名前。"
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、1 つまたは複数のメンバーを格納しているロールを削除しようとすると、例外がスローされます。"
    return:
      type: System.Boolean
      description: "ありません。 メソッドでサポートされていない、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスと常にスロー、 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "検索対象のロール。"
    - id: usernameToMatch
      type: System.String
      description: "ロールで検索するユーザー名。"
    return:
      type: System.String[]
      description: "ありません。 メソッドでサポートされていない、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスと常にスロー、 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "ありません。 メソッドでサポートされていない、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスと常にスロー、 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーが、Windows グループの一覧を取得します。"
  remarks: "このメソッドは<xref:System.Web.Security.Roles>、Windows オペレーティング システムから、指定したユーザーがインチである Windows グループの一覧を取得するクラス</xref:System.Web.Security.Roles> GetRolesForUser メソッドは、LOGON_USER サーバー変数で識別される、現在ログオンしているユーザーに対してのみ呼び出すことができます。 値が指定した場合、`username`パラメーターが、現在ログオンしているユーザーの名前ではありません、<xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>がスローされます</xref:System.Configuration.Provider.ProviderException?displayProperty=fullName>。       詳細については、ASP.NET と Windows 認証は、次を参照してください。 [ASP.NET 認証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example uses the GetRolesForUser method to retrieve a list of roles for a specified user and binds the list of roles to a <xref:System.Web.UI.WebControls.GridView> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.wi_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.wi_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Domain \\username という形式での Windows グループの一覧を取得するユーザー。"
    return:
      type: System.String[]
      description: "指定したユーザーが含まれているすべての Windows グループの名前を含んでいる文字列配列。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "現在実行中のユーザーが認証された持たない<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;です。 HTTP 以外の場合、現在実行中のユーザーが認証された<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;です。       - または - <code> username </code>と一致しません、 <xref:System.Security.Principal.WindowsIdentity.Name*>、現在の<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref></xref:System.Security.Principal.WindowsIdentity.Name*> 。       または、ユーザーの Windows グループ情報の取得中にエラーが発生しました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "信頼レベルより小さい<xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "ユーザーの一覧を取得するロールの名前。"
    return:
      type: System.String[]
      description: "ありません。 メソッドでサポートされていない、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスと常にスロー、 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ASP.NET アプリケーションの構成ファイルで指定されたプロパティ値を持つ Windows トークンのロール プロバイダーを初期化します。 このメソッドは、コードから直接使用するものではありません。"
  remarks: "Initialize メソッドを初期化、<xref:System.Web.Security.WindowsTokenRoleProvider>プロパティ値を持つクラスは、ASP.NET アプリケーション構成ファイル (Web.config) で指定し、コードから直接使用するものではありません</xref:System.Web.Security.WindowsTokenRoleProvider>。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>インスタンスを初期化します。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>のオプションの名前と構成の値を含むコンス トラクター、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスです。"
  overload: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>構成には属性が 256 文字より長い。       - または - このアプリケーション構成ファイル<xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;></xref>インスタンスには、認識されない属性が含まれています。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  id: IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定したユーザーが指定されたビルトイン Windows ロールかどうかを示す値を取得します。"
  remarks: "IsUserInRole メソッドでは、ユーザーがで説明されている一般的な Windows の役割のいずれかでがかどうかを確認することができます、<xref:System.Security.Principal.WindowsBuiltInRole>列挙体です</xref:System.Security.Principal.WindowsBuiltInRole>。 このメソッドは、複数の言語にローカライズされているアプリケーションに役立ちます。 IsUserInRole メソッドのこのオーバー ロードがの一部、<xref:System.Web.Security.RoleProvider>基底クラスと、キャストによってのみアクセスできる、<xref:System.Web.Security.Roles.Provider%2A>のプロパティ、<xref:System.Web.Security.Roles>クラスの<xref:System.Web.Security.WindowsTokenRoleProvider>型です</xref:System.Web.Security.WindowsTokenRoleProvider></xref:System.Web.Security.Roles></xref:System.Web.Security.Roles.Provider%2A></xref:System.Web.Security.RoleProvider>。       LOGON_USER サーバー変数で識別される、現在ログオンしているユーザーに対してのみ IsUserInRole メソッドを呼び出すことができます。 値が指定した場合、`username`パラメーターが、現在ログオンしているユーザーの名前ではありません、<xref:System.Web.HttpException>がスローされます</xref:System.Web.HttpException>。       IsUserInRole メソッドは、LOGON_USER サーバー変数によって識別される現在ログオンしているユーザーに対してのみ呼び出すことができます。 現在ログオンしているユーザーは、Windows 認証済みユーザーである必要があります。 ASP.NET および Windows 認証の詳細については、次を参照してください。 [ASP.NET 認証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/csharp/f88a5130-a7a7-46a8-84f9-_1.aspx)]\n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/add/codesnippet/visualbasic/f88a5130-a7a7-46a8-84f9-_1.aspx)]"
  syntax:
    content: public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);
    parameters:
    - id: username
      type: System.String
      description: "Domain \\username という形式で検索するユーザー名。"
    - id: role
      type: System.Security.Principal.WindowsBuiltInRole
      description: "検索対象の Windows ロール。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したユーザーが指定された Windows ロールの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "現在実行中のユーザーが認証された持たない<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;です。 HTTP 以外の場合、現在実行中のユーザーが認証された<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;です。       - または - <code> username </code>と一致しません、 <xref:System.Security.Principal.WindowsIdentity.Name*>、現在の<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref></xref:System.Security.Principal.WindowsIdentity.Name*> 。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定したユーザーが指定された Windows グループかどうかを示す値を取得します。"
  remarks: "IsUserInRole メソッドによって呼び出されます、<xref:System.Web.Security.Roles>クラスおよび<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Web.UI.Page.User%2A>プロパティをユーザーが Windows グループかどうかを判断します</xref:System.Web.UI.Page.User%2A></xref:System.Security.Principal.IPrincipal.IsInRole%2A></xref:System.Web.Security.Roles>。 LOGON_USER サーバー変数で識別される、現在ログオンしているユーザーに対してのみ IsUserInRole メソッドを呼び出すことができます。 現在ログオンしているユーザーは、Windows 認証済みユーザーである必要があります。 ASP.NET および Windows 認証の詳細については、次を参照してください。 [ASP.NET 認証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example programmatically checks whether the currently logged-on user is in the Administrators role before allowing the user to view roles information for the application. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.WindowsTokenRoleProvider>.  \n  \n [!code-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/visualbasic/e3ad81d7-d695-40b8-8e62-_1.aspx)]\n [!code-cs[System.Web.Security.WindowsTokenRoleProvider#1](~/add/codesnippet/csharp/e3ad81d7-d695-40b8-8e62-_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Domain \\username という形式で検索するユーザー名。"
    - id: roleName
      type: System.String
      description: "フォーム DOMAIN\\rolename で検索する Windows グループです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたユーザー名が指定された Windows グループの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>roleName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "現在実行中のユーザーが認証された持たない<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Web.UI.Page.User%2A?displayProperty=fullName&gt;です。 HTTP 以外の場合、現在実行中のユーザーが認証された<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;></xref>にアタッチされている&lt;xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName&gt;です。       - または - <code> username </code>と一致しません、 <xref:System.Security.Principal.WindowsIdentity.Name*>、現在の<xref href=&quot;System.Security.Principal.WindowsIdentity&quot;> </xref></xref:System.Security.Principal.WindowsIdentity.Name*> 。       または、ユーザーの Windows グループ情報の取得中にエラーが発生しました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  remarks: "このメソッド<xref:System.Web.Security.WindowsTokenRoleProvider>クラスし、 <xref:System.Configuration.Provider.ProviderException>。</xref:System.Configuration.Provider.ProviderException>は常にスロー</xref:System.Web.Security.WindowsTokenRoleProvider>によってサポートされていません"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "指定したロールに追加するユーザー名の文字列配列。"
    - id: roleNames
      type: System.String[]
      description: "指定されたユーザー名を追加するロール名の文字列配列。"
  overload: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメソッドは、Windows トークンのロール プロバイダーによってサポートされていません。"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "データ ソース内で検索するロールの名前。"
    return:
      type: System.Boolean
      description: "ありません。 メソッドでサポートされていない、 <xref href=&quot;System.Web.Security.WindowsTokenRoleProvider&quot;> </xref>クラスと常にスロー、 <xref href=&quot;System.Configuration.Provider.ProviderException&quot;></xref>です。"
  overload: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "サポートされていないメソッドが呼び出されました。"
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider()
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider()
  fullName: System.Web.Security.WindowsTokenRoleProvider.WindowsTokenRoleProvider()
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
  fullName: System.Web.Security.WindowsTokenRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: WindowsTokenRoleProvider.CreateRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.CreateRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: WindowsTokenRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.WindowsTokenRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: WindowsTokenRoleProvider.GetAllRoles()
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles()
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.WindowsTokenRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,WindowsBuiltInRole)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,WindowsBuiltInRole)
- uid: System.Security.Principal.WindowsBuiltInRole
  parent: System.Security.Principal
  isExternal: false
  name: WindowsBuiltInRole
  nameWithType: WindowsBuiltInRole
  fullName: System.Security.Principal.WindowsBuiltInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: WindowsTokenRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: WindowsTokenRoleProvider.RoleExists(String)
  fullName: System.Web.Security.WindowsTokenRoleProvider.RoleExists(String)
- uid: System.Web.Security.WindowsTokenRoleProvider.#ctor*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: WindowsTokenRoleProvider
  nameWithType: WindowsTokenRoleProvider.WindowsTokenRoleProvider
- uid: System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: WindowsTokenRoleProvider.AddUsersToRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.ApplicationName*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: WindowsTokenRoleProvider.ApplicationName
- uid: System.Web.Security.WindowsTokenRoleProvider.CreateRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: WindowsTokenRoleProvider.CreateRole
- uid: System.Web.Security.WindowsTokenRoleProvider.DeleteRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: WindowsTokenRoleProvider.DeleteRole
- uid: System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: WindowsTokenRoleProvider.FindUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.GetAllRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: WindowsTokenRoleProvider.GetAllRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: WindowsTokenRoleProvider.GetRolesForUser
- uid: System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: WindowsTokenRoleProvider.GetUsersInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.Initialize*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: WindowsTokenRoleProvider.Initialize
- uid: System.Web.Security.WindowsTokenRoleProvider.IsUserInRole*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: WindowsTokenRoleProvider.IsUserInRole
- uid: System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: WindowsTokenRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.WindowsTokenRoleProvider.RoleExists*
  parent: System.Web.Security.WindowsTokenRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: WindowsTokenRoleProvider.RoleExists
