### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TextWriterTraceListener
  id: TextWriterTraceListener
  children:
  - System.Diagnostics.TextWriterTraceListener.#ctor
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  - System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.TextWriterTraceListener.Close
  - System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TextWriterTraceListener.Flush
  - System.Diagnostics.TextWriterTraceListener.Write(System.String)
  - System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  - System.Diagnostics.TextWriterTraceListener.Writer
  langs:
  - csharp
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener
  fullName: System.Diagnostics.TextWriterTraceListener
  type: Class
  summary: "トレース出力またはデバッグ出力を転送する<xref:System.IO.TextWriter>または、<xref:System.IO.Stream>など<xref href=&quot;System.IO.FileStream&quot;> </xref></xref:System.IO.Stream> </xref:System.IO.TextWriter> 。"
  remarks: "TextWriterTraceListener クラスは、提供、<xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>を取得またはテキスト ライターの設定のプロパティは、トレース出力またはデバッグ出力を受け取ります</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>。      > [!IMPORTANT] > この型は、<xref:System.IDisposable>インターフェイス</xref:System.IDisposable>。 型を使用してが完了したらを直接的または間接的にその破棄する必要があります。 型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロック</xref:System.IDisposable.Dispose%2A>。 直接ことのない破棄する場合など、言語コンストラクトを使用して`using`(C# の場合) または`Using`(Visual Basic で)。 詳細についてを参照してください&quot;を使用して、オブジェクトを実装する IDisposable&quot;、<xref:System.IDisposable>インターフェイスに関するトピック</xref:System.IDisposable>。       このクラスは、メソッドも用意されています<xref:System.Diagnostics.TextWriterTraceListener.Close%2A>、<xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>トレース出力またはデバッグ出力、がを受信しないように<xref:System.Diagnostics.TextWriterTraceListener.Flush%2A>の出力バッファーに、 <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>、および<xref:System.Diagnostics.TextWriterTraceListener.Write%2A><xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>。</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A>のメッセージ</xref:System.Diagnostics.TextWriterTraceListener.Write%2A>を</xref:System.Diagnostics.TextWriterTraceListener.Writer%2A></xref:System.Diagnostics.TextWriterTraceListener.Flush%2A></xref:System.Diagnostics.TextWriterTraceListener.Writer%2A></xref:System.Diagnostics.TextWriterTraceListener.Close%2A>。       トレースまたはトレース リスナーを使用してデバッグを有効にする必要があります。 次の構文は、コンパイラに固有です。 以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。      -C# でのデバッグを有効にするには、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。 Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。      -C# でのトレースを有効にするには、`/d:TRACE`フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。 Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。       トレース リスナーを追加するには、アプリケーションの名前に対応する構成ファイルを編集します。 このファイル内でことができます、リスナーを追加、その型およびパラメーターの設定、リスナーの削除またはオフにするアプリケーションで設定したすべてのリスナーです。 構成ファイルは、次の例のようにフォーマットされている必要があります。      ```   <configuration>     <system.diagnostics>       <trace autoflush=&quot;false&quot; indentsize=&quot;4&quot;>         <listeners>           <add name=&quot;myListener&quot;              type=&quot;System.Diagnostics.TextWriterTraceListener&quot;              initializeData=&quot;TextWriterOutput.log&quot; />           <remove name=&quot;Default&quot; />         </listeners>       </trace>     </system.diagnostics>   </configuration>   ```      > [!NOTE]> か使用されているファイルへの書き込みしようとしましたが利用できない、ファイル名を自動的に付けた GUID。"
  example:
  - "The following example implements an instance of the TextWriterTraceListener class that uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. First the example creates a file for output. Then it creates the <xref:System.IO.StreamWriter> for the first text writer, assigns it the output file, and adds it to the <xref:System.Diagnostics.Trace.Listeners%2A>. Then, the code outputs one line of text to the file. Finally, the example flushes the output buffer.  \n  \n After running this sample, you can open the `TestFile.txt` file to see the output.  \n  \n [!code-cpp[Classic TextWriterTraceListener Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tex_1.vb)]"
  syntax:
    content: 'public class TextWriterTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.GetSupportedAttributes
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>クラス<xref:System.IO.TextWriter>出力宛先として</xref:System.IO.TextWriter>。"
  remarks: "このコンス トラクターを使用して、<xref:System.IO.TextWriter>トレース出力またはデバッグ出力の受信者としてのストリーム</xref:System.IO.TextWriter>。 その<xref:System.Diagnostics.TraceListener.Name%2A>プロパティは、空の文字列に初期化 (&quot;&quot;、または<xref:System.String.Empty?displayProperty=fullName>).</xref:System.String.Empty?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. It sets the <xref:System.Diagnostics.TextWriterTraceListener.Writer%2A> property to console output, and then adds the <xref:System.Diagnostics.TextWriterTraceListener> to the <xref:System.Diagnostics.TraceListenerCollection>. It writes a message in two segments, and then closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_3_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_3_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_3_1.cs)]"
  syntax:
    content: public TextWriterTraceListener ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>クラス、デバッグ出力およびトレース出力の受信者としてのストリームを使用します。"
  remarks: "このコンス トラクター、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_5_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_5_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>ストリームを表す、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>を書き込みます</xref:System.IO.Stream>。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ストリームが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  id: '#ctor(System.IO.TextWriter)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>クラス、トレース出力またはデバッグ出力の受信者として指定したライターを使用します。"
  remarks: "このコンス トラクター、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>, then closes this <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_6_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_6_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_6_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>からの出力を受け取る、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref></xref:System.IO.TextWriter> 。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ライターが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>クラス、デバッグ出力およびトレース出力の受信者としてファイルを使用します。"
  remarks: "このコンス トラクター、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを空の文字列 (&quot;&quot;).</xref:System.Diagnostics.TraceListener.Name%2A>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/csharp/m-system.diagnostics.tex_1_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#3](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_1_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "ファイルの名前、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>を書き込みます。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ファイルが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>ストリームを使用して、デバッグの受信者として出力およびトレース出力は、指定した名前のクラスです。"
  remarks: "このコンス トラクターを初期化します、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを`name`パラメーターまたは空の文字列 (&quot;&quot;) 場合は、`name`パラメーターは`null`</xref:System.Diagnostics.TraceListener.Name%2A>。"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor and adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example then writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener> and writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/csharp/904be5a7-d634-4f01-8e66-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#2](~/add/codesnippet/visualbasic/904be5a7-d634-4f01-8e66-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.Stream stream, string name);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>ストリームを表す、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>を書き込みます</xref:System.IO.Stream>。"
    - id: name
      type: System.String
      description: "新しいインスタンスの名前。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ストリームが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  id: '#ctor(System.IO.TextWriter,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>トレースの受信者として指定したライターを使用して出力またはデバッグ出力は、指定した名前のクラスです。"
  remarks: ''
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor. The example creates a <xref:System.IO.StreamWriter>, then references the <xref:System.IO.StreamWriter> when it creates the <xref:System.Diagnostics.TextWriterTraceListener>, which it then adds to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/csharp/81bb968a-b680-446b-b301-_1.cs)]\n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#5](~/add/codesnippet/visualbasic/81bb968a-b680-446b-b301-_1.vb)]"
  syntax:
    content: public TextWriterTraceListener (System.IO.TextWriter writer, string name);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>からの出力を受け取る、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref></xref:System.IO.TextWriter> 。"
    - id: name
      type: System.String
      description: "新しいインスタンスの名前。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ライターが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>デバッグの受信者としてファイルを使用して出力およびトレース出力は、指定した名前のクラスです。"
  remarks: "このコンス トラクターを初期化します、<xref:System.Diagnostics.TraceListener.Name%2A>プロパティを`name`パラメーターまたは空の文字列 (&quot;&quot;) 場合は、`name`パラメーターは`null`</xref:System.Diagnostics.TraceListener.Name%2A>。"
  example:
  - "The following code example creates a <xref:System.Diagnostics.TextWriterTraceListener> using the TextWriterTraceListener constructor, then adds it to the <xref:System.Diagnostics.TraceListenerCollection>. The example writes two messages to this <xref:System.Diagnostics.TextWriterTraceListener>, then writes a message to all <xref:System.Diagnostics.TraceListener> objects in the <xref:System.Diagnostics.TraceListenerCollection>. Finally, it flushes and closes the <xref:System.Diagnostics.TextWriterTraceListener>.  \n  \n [!code-vb[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/visualbasic/9ea7970a-0298-4bde-b5e1-_1.vb)]\n [!code-cs[System.Diagnostics.TextWriterTraceListener.Ctor#4](~/add/codesnippet/csharp/9ea7970a-0298-4bde-b5e1-_1.cs)]"
  syntax:
    content: public TextWriterTraceListener (string fileName, string name);
    parameters:
    - id: fileName
      type: System.String
      description: "ファイルの名前、 <xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;> </xref>を書き込みます。"
    - id: name
      type: System.String
      description: "新しいインスタンスの名前。"
  overload: System.Diagnostics.TextWriterTraceListener.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ストリームが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Close
  id: Close
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "閉じる、<xref:System.Diagnostics.TextWriterTraceListener.Writer*>トレース出力またはデバッグ出力を受信しないようにします</xref:System.Diagnostics.TextWriterTraceListener.Writer*>。"
  remarks: "呼び出す、<xref:System.Diagnostics.TextWriterTraceListener.Write%2A>または<xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A>ストリームを再び自動的に閉じるの呼び出し後にします</xref:System.Diagnostics.TextWriterTraceListener.WriteLine%2A></xref:System.Diagnostics.TextWriterTraceListener.Write%2A>。"
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_2_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_2_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_2_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "これを破棄する<xref href=&quot;System.Diagnostics.TextWriterTraceListener&quot;></xref>オブジェクト。"
  remarks: "使用して、<xref:System.Diagnostics.TextWriterTraceListener.Close%2A>のメソッド、<xref:System.Diagnostics.TextWriterTraceListener>のマネージ リソースを解放するクラス、<xref:System.Diagnostics.TextWriterTraceListener>オブジェクト</xref:System.Diagnostics.TextWriterTraceListener></xref:System.Diagnostics.TextWriterTraceListener></xref:System.Diagnostics.TextWriterTraceListener.Close%2A>。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ リソースを解放するには場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>Dispose が影響を与えません。"
  overload: System.Diagnostics.TextWriterTraceListener.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "<xref:System.Diagnostics.TextWriterTraceListener.Writer*>。</xref:System.Diagnostics.TextWriterTraceListener.Writer*>出力バッファーをフラッシュします。"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myTextListener`, which uses a <xref:System.IO.StreamWriter> called `myOutputWriter` to write to a file named `TestFile.txt`. The example creates the file, stream, and text writer, writes one line of text to the file, and then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_7_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_7_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Close Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_7_1.vb)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Diagnostics.TextWriterTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このインスタンスの<xref:System.Diagnostics.TextWriterTraceListener.Writer*>。</xref:System.Diagnostics.TextWriterTraceListener.Writer*>にメッセージを書き込みます"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_0_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_0_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Write Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_0_1.vb)]"
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
  overload: System.Diagnostics.TextWriterTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "このインスタンスのメッセージを書き込みます<xref:System.Diagnostics.TextWriterTraceListener.Writer*>続けて行終端記号</xref:System.Diagnostics.TextWriterTraceListener.Writer*>。 既定の行終端記号は、キャリッジ リターンとライン フィード (\\r) です。"
  remarks: ''
  example:
  - "The following example implements a <xref:System.Diagnostics.TextWriterTraceListener> named `myWriter` to write to the console screen. The example writes two lines to the console screen. Note the second write appears on the same line as the first write. The example then flushes and closes the stream.  \n  \n [!code-cpp[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tex_4_1.cpp)]\n [!code-vb[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tex_4_1.vb)]\n [!code-cs[Classic TextWriterTraceListener.WriteLine Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tex_4_1.cs)]"
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
  overload: System.Diagnostics.TextWriterTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  id: Writer
  parent: System.Diagnostics.TextWriterTraceListener
  langs:
  - csharp
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得または設定をトレース出力またはデバッグ出力を受け取るテキスト ライター。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. Then the code adds the new trace listener to the <xref:System.Diagnostics.Trace.Listeners%2A> in the trace class.  \n  \n [!code-cpp[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tex_1.cpp)]\n [!code-cs[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tex_1.cs)]\n [!code-vb[Classic TextWriterTraceListener.Writer Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tex_1.vb)]"
  syntax:
    content: public System.IO.TextWriter Writer { get; set; }
    return:
      type: System.IO.TextWriter
      description: "A<xref:System.IO.TextWriter>トレース出力またはデバッグ出力を受信するライターを表す</xref:System.IO.TextWriter>。"
  overload: System.Diagnostics.TextWriterTraceListener.Writer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Diagnostics.TextWriterTraceListener.#ctor
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener()
  nameWithType: TextWriterTraceListener.TextWriterTraceListener()
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener()
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.Stream,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(Stream,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(Stream,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(Stream,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.IO.TextWriter,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(TextWriter,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(TextWriter,String)
- uid: System.Diagnostics.TextWriterTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener(String,String)
  nameWithType: TextWriterTraceListener.TextWriterTraceListener(String,String)
  fullName: System.Diagnostics.TextWriterTraceListener.TextWriterTraceListener(String,String)
- uid: System.Diagnostics.TextWriterTraceListener.Close
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close()
  nameWithType: TextWriterTraceListener.Close()
  fullName: System.Diagnostics.TextWriterTraceListener.Close()
- uid: System.Diagnostics.TextWriterTraceListener.Dispose(System.Boolean)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextWriterTraceListener.Dispose(Boolean)
  fullName: System.Diagnostics.TextWriterTraceListener.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TextWriterTraceListener.Flush
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush()
  nameWithType: TextWriterTraceListener.Flush()
  fullName: System.Diagnostics.TextWriterTraceListener.Flush()
- uid: System.Diagnostics.TextWriterTraceListener.Write(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: TextWriterTraceListener.Write(String)
  fullName: System.Diagnostics.TextWriterTraceListener.Write(String)
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: TextWriterTraceListener.WriteLine(String)
  fullName: System.Diagnostics.TextWriterTraceListener.WriteLine(String)
- uid: System.Diagnostics.TextWriterTraceListener.Writer
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
  fullName: System.Diagnostics.TextWriterTraceListener.Writer
- uid: System.Diagnostics.TextWriterTraceListener.#ctor*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: TextWriterTraceListener
  nameWithType: TextWriterTraceListener.TextWriterTraceListener
- uid: System.Diagnostics.TextWriterTraceListener.Close*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Close
  nameWithType: TextWriterTraceListener.Close
- uid: System.Diagnostics.TextWriterTraceListener.Dispose*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Dispose
  nameWithType: TextWriterTraceListener.Dispose
- uid: System.Diagnostics.TextWriterTraceListener.Flush*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Flush
  nameWithType: TextWriterTraceListener.Flush
- uid: System.Diagnostics.TextWriterTraceListener.Write*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Write
  nameWithType: TextWriterTraceListener.Write
- uid: System.Diagnostics.TextWriterTraceListener.WriteLine*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: TextWriterTraceListener.WriteLine
- uid: System.Diagnostics.TextWriterTraceListener.Writer*
  parent: System.Diagnostics.TextWriterTraceListener
  isExternal: false
  name: Writer
  nameWithType: TextWriterTraceListener.Writer
