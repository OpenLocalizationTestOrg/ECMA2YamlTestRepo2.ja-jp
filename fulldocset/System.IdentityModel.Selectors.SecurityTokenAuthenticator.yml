### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  id: SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  type: Class
  summary: "セキュリティ トークンを認証します。"
  remarks: "SecurityTokenAuthenticator クラスとそこから派生するクラスは、セキュリティ トークンを認証します。 通常、派生に限られますクラス SecurityTokenAuthenticator から直接、カスタム セキュリティ トークンを作成するときにします。 <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>。</xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator>など SecurityTokenAuthenticator から派生したクラスのいずれかから派生して組み込みのセキュリティ トークンの既定の認証または承認の動作をオーバーライドする場合は、       SecurityTokenAuthenticator からクラスを派生するときは、次の&2; つのメソッドをオーバーライドします<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A><xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>。</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A> 。 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>メソッドでは、このセキュリティ トークン認証システムが特定のセキュリティ トークンを認証できるかどうかを判断します</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>。 <xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>メソッドがセキュリティ トークンを認証および承認の承認ポリシーのセットを確立します</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>。 承認ポリシーは、アプリケーションで必要なクレームをセキュリティ トークンで検出されたクレームをマップします。"
  syntax:
    content: public abstract class SecurityTokenAuthenticator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenAuthenticator&quot;> </xref>クラスです。"
  syntax:
    content: protected SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "このセキュリティ トークン認証システムで指定したセキュリティ トークンを検証できるかどうかを示す値を取得します。"
  remarks: "CanValidateToken メソッドをチェックするかどうか、トークン パラメーター`null`しを呼び出して、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>このセキュリティ トークン認証システムがセキュリティ トークンの種類を認証できるかどうかを判定メソッド`token`</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore%2A>。"
  syntax:
    content: public bool CanValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トークンを検証できる場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、このセキュリティ トークン認証システムで指定したセキュリティ トークンを検証できるかどうかを示す値を取得します。"
  remarks: "CanValidateTokenCore メソッドによって呼び出されます、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>このセキュリティ トークン認証システムがセキュリティ トークンの種類を認証できるかどうかを判定メソッド`token`</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>。 これは、セキュリティ トークンを認証しません。によって実行される、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>。"
  syntax:
    content: protected abstract bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ときに<code> token </code>検証済みである、それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したセキュリティ トークンを認証し、セキュリティ トークンの承認ポリシーのセットを返します。"
  remarks: "ValidateToken メソッド チェックするかどうか、`token`パラメーターは`null`、呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>このセキュリティ トークン認証システムがこのセキュリティ トークンを認証することができ、可能な場合を呼び出しますかを判別する方法、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore%2A></xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken%2A>。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>このアプリケーションに対して有効な承認ポリシーのセットを格納します。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "<code>token</code>このセキュリティ トークン認証システムによって認証されることはできません - または -<code>token</code>が認証されていません。"
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、指定したセキュリティ トークンを認証し、セキュリティ トークンの承認ポリシーのセットを返します。"
  remarks: "特定のセキュリティ トークンの種類の認証に ValidateTokenCore メソッドをオーバーライドします。       ValidateTokenCore メソッドがオーバーライドされると、これらのガイドラインに従います: に渡したセキュリティ トークンとするときに、`token`パラメーターを指定できません検証されると、スロー、<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>。      -このアプリケーションに対して有効な承認ポリシーがない場合戻り値、空<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.IdentityModel.Policy.IAuthorizationPolicy>。</xref:System.IdentityModel.Policy.IAuthorizationPolicy>の種類</xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       ときに`null`このメソッドによって返される[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]スロー、<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>。       ValidateTokenCore メソッドによって呼び出されます、<xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken%2A>。"
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>このアプリケーションに対して有効な承認ポリシーのセットを格納します。"
  overload: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator()
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: SecurityTokenAuthenticator
  nameWithType: SecurityTokenAuthenticator.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateToken
  nameWithType: SecurityTokenAuthenticator.CanValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateToken
  nameWithType: SecurityTokenAuthenticator.ValidateToken
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: SecurityTokenAuthenticator.ValidateTokenCore
