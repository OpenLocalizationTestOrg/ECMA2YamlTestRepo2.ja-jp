### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ResourceExpressionEditor
  id: ResourceExpressionEditor
  children:
  - System.Web.UI.Design.ResourceExpressionEditor.#ctor
  - System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  - System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  langs:
  - csharp
  name: ResourceExpressionEditor
  nameWithType: ResourceExpressionEditor
  fullName: System.Web.UI.Design.ResourceExpressionEditor
  type: Class
  summary: "評価およびデザイン時にリソースの式を編集するためのプロパティとメソッドを提供します。"
  remarks: "ResourceExpressionEditor クラスの派生元の<xref:System.Web.UI.Design.ExpressionEditor>クラスし、を評価して、デザイン時にコントロール プロパティを持つリソースの参照を関連付けることの実装を提供します</xref:System.Web.UI.Design.ExpressionEditor>。 リソースの式にコントロール プロパティの値をバインドするなど、 `Resources:submitText`、という名前のリソースを使用してコントロールのプロパティ値を設定することを示します`submitText`です。       ビジュアルなデザイナー ホストなど[!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)]リソース クラスを指定する、ResourceExpressionEditor クラスの使用、キー、およびデザイナーの既定値はリソースの式の値およびデザイン時のレンダリングの選択したリソースの式を評価します。       参照すると、 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>、デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナーで、コントロール プロパティの実行時の値を提供するセット式に、ダイアログ ボックスが表示されます</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>。 式のプレフィックスのリストに基づく式の型を選択することができます。 選択した場合、**リソース**一覧、ビジュアル デザイナーで式のプレフィックスは、設定、評価、およびリソースの式の構文に基づく式を変換する ResourceExpressionEditor メソッドを使用します。 ビジュアル デザイナーでは、評価された式の結果を使用してコントロールのデザイン サーフェイスに表示されるプロパティの値を割り当てます。       基本<xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=fullName>プロパティを<xref:System.Web.Compilation.ResourceExpressionBuilder>文字列を返します`Resources`</xref:System.Web.Compilation.ResourceExpressionBuilder></xref:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix%2A?displayProperty=fullName>。 <xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられた`Resources`と ResourceExpressionEditor 実装</xref:System.Web.Compilation.ResourceExpressionBuilder>。       <xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>メソッドは入力リソース式を評価します</xref:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression%2A>。 <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドを返します、<xref:System.Web.UI.Design.ExpressionEditorSheet>リソース名、クラス、およびデザイナーの既定値を選択し、選択したリソース値からリソースの式のフォームを使用する実装</xref:System.Web.UI.Design.ExpressionEditorSheet></xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>。"
  example:
  - "The following code example demonstrates how to bind the <xref:System.Web.UI.WebControls.HyperLink.Text%2A> property of a <xref:System.Web.UI.WebControls.HyperLink> control to a resource expression using the ResourceExpressionEditor class.  \n  \n1.  In a Web Forms project, add a new resource file named Strings.resx to the App_LocalResources directory.  \n  \n2.  Add a string named myLinkText to the Strings.resx resource file, and then set the value to the text for a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n     For example, set the `myLinkText` string value to `This is a good link`.  \n  \n3.  In a Web Forms page, add a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n4.  For the `Hyperlink` control, in Properties, click **Expressions**, and then click the ellipsis button (**...**).  \n  \n     The `<Hyperlinkname>`**Expressions** dialog box appears.  \n  \n5.  Under **Bindable properties**, click **Text**, and then in the **Expression type** list, enter **Resources**.  \n  \n     The resource expression properties that are defined by the <xref:System.Web.UI.Design.ResourceExpressionEditorSheet> class appear.  \n  \n6.  Under **Expression Properties** set **ClassName** to **Strings**, which is the class name for the compiled Strings.resx resource file and set **ResourceKey** to **myLinkText**, which is the string name in Strings.resx.  \n  \n The visual designer uses the ResourceExpressionEditor to assign the resource expression for the `Text` property. The following .aspx source shows an example of a property value that is set by using a resource expression.  \n  \n [!code-vb[ControlsUsingExpressions#3](~/add/codesnippet/visualbasic/t-system.web.ui.design.r_0_1.aspx)]\n [!code-cs[ControlsUsingExpressions#3](~/add/codesnippet/csharp/t-system.web.ui.design.r_0_1.aspx)]\n [!code-xml[ControlsUsingExpressions#3](~/add/codesnippet/xml/t-system.web.ui.design.r_0_1.xml)]"
  syntax:
    content: 'public class ResourceExpressionEditor : System.Web.UI.Design.ExpressionEditor'
  inheritance:
  - System.Object
  - System.Web.UI.Design.ExpressionEditor
  implements: []
  inheritedMembers:
  - System.Web.UI.Design.ExpressionEditor.ExpressionPrefix
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: ResourceExpressionEditor()
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor()
  fullName: System.Web.UI.Design.ResourceExpressionEditor.ResourceExpressionEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Design.ResourceExpressionEditor&quot;> </xref>クラスです。"
  remarks: "A<xref:System.Web.UI.Design.ResourceExpressionEditor>と共に基底クラスによってオブジェクトが構成されている、<xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A>プロパティに設定`Resources`</xref:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix%2A></xref:System.Web.UI.Design.ResourceExpressionEditor>。"
  syntax:
    content: public ResourceExpressionEditor ();
    parameters: []
  overload: System.Web.UI.Design.ResourceExpressionEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  id: EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "リソースの式を評価し、コントロールのプロパティのデザイン時の値を提供します。"
  remarks: "式の評価方法がで指定されているリソースを検索`expression`、リソースを返します。       ビジュアル デザイナーでは、式の評価メソッドを使用して、リソースの式を評価し、関連付けられているコントロールのデザイン時の値を提供します。 ページのパーサーを使用して、実行時に、<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>と<xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A>メソッドの対応する<xref:System.Web.Compilation.ResourceExpressionBuilder>式を評価し、関連するコントロール プロパティの実行時の値を提供する実装</xref:System.Web.Compilation.ResourceExpressionBuilder></xref:System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression%2A></xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>。       ビジュアル デザイナーを使用して、<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>をデザイン時に、式の文字列を解析し解析された式のデータを持つ式の評価メソッドを呼び出します</xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression%2A>。"
  syntax:
    content: public override object EvaluateExpression (string expression, object parseTimeData, Type propertyType, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "リソースの式を評価します。 `expression`含まれません、 <xref uid=&quot;langword_csharp_Resources&quot; name=&quot;Resources&quot; href=&quot;&quot;> </xref>式のプレフィックス。"
    - id: parseTimeData
      type: System.Object
      description: "形式で、追加の解析データを提供するオブジェクト、 <xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;> </xref>値。"
    - id: propertyType
      type: System.Type
      description: "コントロールのプロパティの型。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Object
      description: "式の評価が成功した場合、式の評価結果の文字列によって参照されるオブジェクトそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  id: GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  langs:
  - csharp
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "入力式の文字列とサービス プロバイダーの実装で初期化される、リソースの式エディターのシートを返します。"
  remarks: "GetExpressionEditorSheet メソッドでは、リソースの式のシート実装式エディターを返します。 ビジュアル デザイナー ホストは、その [式] ダイアログ ボックスで式エディターのシートを使用します。"
  syntax:
    content: public override System.Web.UI.Design.ExpressionEditorSheet GetExpressionEditorSheet (string expression, IServiceProvider serviceProvider);
    parameters:
    - id: expression
      type: System.String
      description: "リソース式、式エディターのシートを初期化するために使用します。"
    - id: serviceProvider
      type: System.IServiceProvider
      description: "式エディターのシートを初期化するために使用される、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
    return:
      type: System.Web.UI.Design.ExpressionEditorSheet
      description: "A <xref href=&quot;System.Web.UI.Design.ResourceExpressionEditorSheet&quot;> </xref>リソース プロパティに式を定義します。"
  overload: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Design.ExpressionEditor
  isExternal: false
  name: System.Web.UI.Design.ExpressionEditor
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: ResourceExpressionEditor()
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor()
  fullName: System.Web.UI.Design.ResourceExpressionEditor.ResourceExpressionEditor()
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: EvaluateExpression(String,Object,Type,IServiceProvider)
  nameWithType: ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(String,Object,Type,IServiceProvider)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet(String,IServiceProvider)
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
  fullName: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(String,IServiceProvider)
- uid: System.Web.UI.Design.ExpressionEditorSheet
  parent: System.Web.UI.Design
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
- uid: System.Web.UI.Design.ResourceExpressionEditor.#ctor*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: ResourceExpressionEditor
  nameWithType: ResourceExpressionEditor.ResourceExpressionEditor
- uid: System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionEditor.EvaluateExpression
- uid: System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet*
  parent: System.Web.UI.Design.ResourceExpressionEditor
  isExternal: false
  name: GetExpressionEditorSheet
  nameWithType: ResourceExpressionEditor.GetExpressionEditorSheet
