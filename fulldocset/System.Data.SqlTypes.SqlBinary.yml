### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlBinary
  id: SqlBinary
  children:
  - System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  - System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  - System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  - System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.GetHashCode
  - System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  - System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.IsNull
  - System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  - System.Data.SqlTypes.SqlBinary.Length
  - System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.Null
  - System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  - System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  - System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  - System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  - System.Data.SqlTypes.SqlBinary.ToSqlGuid
  - System.Data.SqlTypes.SqlBinary.ToString
  - System.Data.SqlTypes.SqlBinary.Value
  langs:
  - csharp
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
  type: Struct
  summary: "格納されているか、データベースから取得するバイナリ データの可変長のストリームを表します。"
  syntax:
    content: >-
      [System.Xml.Serialization.XmlSchemaProvider("GetXsdType")]

      public struct SqlBinary : IComparable, System.Data.SqlTypes.INullable, System.Xml.Serialization.IXmlSerializable
  inheritance:
  - System.ValueType
  implements:
  - System.Data.SqlTypes.INullable
  - System.IComparable
  - System.Xml.Serialization.IXmlSerializable
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: SqlBinary(Byte[])
  nameWithType: SqlBinary.SqlBinary(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>設定構造、<xref:System.Data.SqlTypes.SqlBinary.Value*>プロパティを指定したバイト配列の内容</xref:System.Data.SqlTypes.SqlBinary.Value*>。"
  syntax:
    content: public SqlBinary (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "保存または取得するバイト配列。"
  overload: System.Data.SqlTypes.SqlBinary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Add(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定した&2; つを連結<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>新しいを作成する値<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
  remarks: '`x`結果の先頭に表示されます<xref:System.Data.SqlTypes.SqlBinary>で始まり、 `y`</xref:System.Data.SqlTypes.SqlBinary> 。'
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary Add (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref> x の連結された値であると y です。"
  overload: System.Data.SqlTypes.SqlBinary.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  id: CompareTo(System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: CompareTo(SqlBinary)
  nameWithType: SqlBinary.CompareTo(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "これと比較<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>を指定されたオブジェクト<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>オブジェクトし、これらの相対値を示す値を返します。"
  syntax:
    content: public int CompareTo (System.Data.SqlTypes.SqlBinary value);
    parameters:
    - id: value
      type: System.Data.SqlTypes.SqlBinary
      description: "<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>これと比較するオブジェクト<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
    return:
      type: System.Int32
      description: "これの相対値を示す符号付き数値<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造とオブジェクト。       <table><thead><tr><th> 戻り値       </th><th> 条件       </th></tr></thead><tbody><tr><td> 0 より小さい値       </td><td> この値<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>オブジェクトがオブジェクトより小さい。       </td></tr><tr><td> 0       </td><td> これは、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>オブジェクトは、オブジェクトと同じです。       </td></tr><tr><td> 0 より大きい値       </td><td> これは、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>オブジェクトがオブジェクトより大きい。       - または - オブジェクトが null 参照です。       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBinary.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  id: CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: CompareTo(Object)
  nameWithType: SqlBinary.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "これと比較<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>オブジェクトを指定したオブジェクトにこれらの相対値を示す値を返します。"
  syntax:
    content: public int CompareTo (object value);
    parameters:
    - id: value
      type: System.Object
      description: "これと比較するオブジェクト<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
    return:
      type: System.Int32
      description: "これの相対値を示す符号付き数値<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造とオブジェクト。       <table><thead><tr><th> 戻り値       </th><th> 条件       </th></tr></thead><tbody><tr><td> 0 より小さい値       </td><td> この値<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>オブジェクトがオブジェクトより小さい。       </td></tr><tr><td> 0       </td><td> これは、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>オブジェクトは、オブジェクトと同じです。       </td></tr><tr><td> 0 より大きい値       </td><td> これは、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>オブジェクトがオブジェクトより大きい。       - または - オブジェクトが null 参照です。       </td></tr></tbody></table>"
  overload: System.Data.SqlTypes.SqlBinary.CompareTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Concat(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つを連結<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>を新規作成する構造体を<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary Concat (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "連結された値、 <code> x </code>と<code> y </code>パラメーター。"
  overload: System.Data.SqlTypes.SqlBinary.Concat*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SqlBinary.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定したオブジェクトのパラメーターを<xref:System.Data.SqlTypes.SqlBinary.Value*>のプロパティ、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>オブジェクト</xref:System.Data.SqlTypes.SqlBinary.Value*>。"
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>オブジェクトのインスタンスでは場合<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref> 、それ以外の&2; つ<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Equals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体をそれらが等しいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean Equals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つの値が等しい場合は。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 どちらのインスタンスが null の場合、 <xref uid=&quot;langword_csharp_SqlBinary&quot; name=&quot;SqlBinary&quot; href=&quot;&quot;> </xref>は null になります。"
  overload: System.Data.SqlTypes.SqlBinary.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode
  id: GetHashCode
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SqlBinary.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このハッシュ コードを返します<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "32 ビット符号付き整数ハッシュ コード。"
  overload: System.Data.SqlTypes.SqlBinary.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  id: GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "指定した XML スキーマ定義言語 (XSD) を返します<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>です。"
  syntax:
    content: public static System.Xml.XmlQualifiedName GetXsdType (System.Xml.Schema.XmlSchemaSet schemaSet);
    parameters:
    - id: schemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: "An <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>."
    return:
      type: System.Xml.XmlQualifiedName
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>を示す、指定した XSD <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;></xref>です。"
  overload: System.Data.SqlTypes.SqlBinary.GetXsdType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体を&1; つは、2 番目より大きいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンスより大きい場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体を&1; つは、2 番目以上かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以上の場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.IsNull
  id: IsNull
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: IsNull
  nameWithType: SqlBinary.IsNull
  fullName: System.Data.SqlTypes.SqlBinary.IsNull
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "示すかどうかこの<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造が null です。 このプロパティは、読み取り専用です。"
  remarks: "詳細については、次を参照してください。 [Null 値の処理](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlTypes.SqlBinary.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SqlBinary.Item(Int32)
  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "1 バイトを取得、<xref:System.Data.SqlTypes.SqlBinary.Value*>整数パラメーターで示される位置にあるプロパティ<code> index </code></xref:System.Data.SqlTypes.SqlBinary.Value*> 。 場合<code> index </code>バイト配列の末尾の次の位置を示す、 <xref href=&quot;System.Data.SqlTypes.SqlNullValueException&quot;> </xref>が生成されます。 このプロパティは、読み取り専用です。"
  remarks: "発生を防ぐために、 <xref:System.Data.SqlTypes.SqlNullValueException>、常に調べる、<xref:System.Data.SqlTypes.SqlBinary.IsNull%2A>プロパティおよび<xref:System.Data.SqlTypes.SqlBinary.Length%2A>このプロパティを読み取る前にプロパティ</xref:System.Data.SqlTypes.SqlBinary.Length%2A></xref:System.Data.SqlTypes.SqlBinary.IsNull%2A></xref:System.Data.SqlTypes.SqlNullValueException>。"
  syntax:
    content: public byte this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "取得するバイトの位置。"
    return:
      type: System.Byte
      description: "整数パラメーターで示される位置にあるバイト。"
  overload: System.Data.SqlTypes.SqlBinary.Item*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "The property is read when the <xref:System.Data.SqlTypes.SqlBinary.Value*> property contains <xref href=\"System.Data.SqlTypes.SqlBinary.Null\"></xref>  \n  \n \\- or -  \n  \n The <code>index</code> parameter indicates a position byond the length of the byte array as indicated by the <xref:System.Data.SqlTypes.SqlBinary.Length*> property."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Length
  id: Length
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Length
  nameWithType: SqlBinary.Length
  fullName: System.Data.SqlTypes.SqlBinary.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "バイトの長さを取得、<xref:System.Data.SqlTypes.SqlBinary.Value*>プロパティ</xref:System.Data.SqlTypes.SqlBinary.Value*>。 このプロパティは、読み取り専用です。"
  remarks: "発生を防ぐために、 <xref:System.Data.SqlTypes.SqlNullValueException>、常に調べて、 <xref:System.Data.SqlTypes.SqlBinary.IsNull%2A>Length プロパティを読み取る前にプロパティ</xref:System.Data.SqlTypes.SqlBinary.IsNull%2A></xref:System.Data.SqlTypes.SqlNullValueException>。"
  syntax:
    content: public int Length { get; }
    return:
      type: System.Int32
      description: "内のバイナリ データの長さ、<xref:System.Data.SqlTypes.SqlBinary.Value*>プロパティ</xref:System.Data.SqlTypes.SqlBinary.Value*>。"
  overload: System.Data.SqlTypes.SqlBinary.Length*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "ときに、Length プロパティは読み取り、<xref:System.Data.SqlTypes.SqlBinary.Value*>プロパティが含まれます<xref href=&quot;System.Data.SqlTypes.SqlBinary.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBinary.Value*> 。"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>最初が少ないかどうかを確認する構造体を秒を超える。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが小さい場合は、2 番目のインスタンスよりもします。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体を最初は、2 番目以下かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以下の場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: NotEquals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>両者が等しくないかどうかを決定する構造体。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean NotEquals (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.NotEquals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Null
  id: "Null"
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: "Null"
  nameWithType: SqlBinary.Null
  fullName: System.Data.SqlTypes.SqlBinary.Null
  type: Field
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "表す、 <xref href=&quot;System.DBNull&quot;> </xref>のこのインスタンスに割り当て可能な<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体。"
  remarks: '`Null`関数の定数として、<xref:System.Data.SqlTypes.SqlBinary>構造</xref:System.Data.SqlTypes.SqlBinary>。 詳細については、次を参照してください。 [Null 値の処理](~/add/includes/ajax-current-ext-md.md)です。'
  syntax:
    content: public static readonly System.Data.SqlTypes.SqlBinary Null;
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Addition(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "2 つを連結<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>新しいを作成するパラメーター <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
  remarks: '`x`結果の先頭に表示されます<xref:System.Data.SqlTypes.SqlBinary>で始まり、 `y`</xref:System.Data.SqlTypes.SqlBinary> 。'
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Addition (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "連結された値、 <code> x </code>と<code> y </code>パラメーター。"
  overload: System.Data.SqlTypes.SqlBinary.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Equality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体をそれらが等しいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Equality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合、または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  id: op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Explicit(SqlBinary)
  nameWithType: SqlBinary.op_Explicit(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static byte[] op_Explicit (System.Data.SqlTypes.SqlBinary x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "追加します。"
    return:
      type: System.Byte[]
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  id: op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Explicit(SqlGuid)
  nameWithType: SqlBinary.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Explicit (System.Data.SqlTypes.SqlGuid x);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlGuid
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlBinary.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体を&1; つは、2 番目より大きいかどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンスより大きい場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref> structues を&1; つは、2 番目以上かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_GreaterThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以上の場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  id: op_Implicit(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Implicit(Byte[])
  nameWithType: SqlBinary.op_Implicit(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: public static System.Data.SqlTypes.SqlBinary op_Implicit (byte[] x);
    parameters:
    - id: x
      type: System.Byte[]
      description: "追加します。"
    return:
      type: System.Data.SqlTypes.SqlBinary
      description: "追加します。"
  overload: System.Data.SqlTypes.SqlBinary.op_Implicit*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_Inequality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>両者が等しくないかどうかを決定する構造体。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_Inequality (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しくない場合または<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>&2; つのインスタンスが等しい場合。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>最初が少ないかどうかを確認する構造体を秒を超える。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThan (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが小さい場合は、2 番目のインスタンスよりもします。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_LessThan*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  id: op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: op_LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  type: Operator
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "比較する&2; つ<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>構造体を最初は、2 番目以下かどうかを判断します。"
  syntax:
    content: public static System.Data.SqlTypes.SqlBoolean op_LessThanOrEqual (System.Data.SqlTypes.SqlBinary x, System.Data.SqlTypes.SqlBinary y);
    parameters:
    - id: x
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    - id: y
      type: System.Data.SqlTypes.SqlBinary
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref> object."
    return:
      type: System.Data.SqlTypes.SqlBoolean
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;> </xref>つまり<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>最初のインスタンスが&2; 番目のインスタンス以下の場合。 それ以外の場合<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>です。 場合のいずれかのインスタンス<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>が null で、<xref:System.Data.SqlTypes.SqlBoolean.Value*>の<xref href=&quot;System.Data.SqlTypes.SqlBoolean&quot;></xref>なります<xref href=&quot;System.Data.SqlTypes.SqlBoolean.Null&quot;> </xref></xref:System.Data.SqlTypes.SqlBoolean.Value*> 。"
  overload: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  id: System#Xml#Serialization#IXmlSerializable#GetSchema
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーの説明、 <xref:System.Xml.Serialization.IXmlSerializable.GetSchema*>。</xref:System.Xml.Serialization.IXmlSerializable.GetSchema*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.SqlTypes.SqlBinary>にインスタンスをキャスト、<xref:System.Xml.Serialization.IXmlSerializable>インターフェイス</xref:System.Xml.Serialization.IXmlSerializable></xref:System.Data.SqlTypes.SqlBinary>。"
  syntax:
    content: System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();
    parameters: []
    return:
      type: System.Xml.Schema.XmlSchema
      description: "<xref:System.Xml.Schema.XMLSchema>インスタンス</xref:System.Xml.Schema.XMLSchema>。"
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  id: System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーの説明、 <xref:System.Xml.Serialization.IXmlSerializable.ReadXml*>。</xref:System.Xml.Serialization.IXmlSerializable.ReadXml*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.SqlTypes.SqlBinary>にインスタンスをキャスト、<xref:System.Xml.Serialization.IXmlSerializable>インターフェイス</xref:System.Xml.Serialization.IXmlSerializable></xref:System.Data.SqlTypes.SqlBinary>。"
  syntax:
    content: void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "A <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>"
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  id: System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  isEii: true
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このメンバーの説明、 <xref:System.Xml.Serialization.IXmlSerializable.WriteXml*>。</xref:System.Xml.Serialization.IXmlSerializable.WriteXml*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.SqlTypes.SqlBinary>にインスタンスをキャスト、<xref:System.Xml.Serialization.IXmlSerializable>インターフェイス</xref:System.Xml.Serialization.IXmlSerializable></xref:System.Data.SqlTypes.SqlBinary>。"
  syntax:
    content: void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "A <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  overload: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid
  id: ToSqlGuid
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: ToSqlGuid()
  nameWithType: SqlBinary.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "このインスタンスに変換<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>に<xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;></xref>です。"
  syntax:
    content: public System.Data.SqlTypes.SqlGuid ToSqlGuid ();
    parameters: []
    return:
      type: System.Data.SqlTypes.SqlGuid
      description: "A <xref href=&quot;System.Data.SqlTypes.SqlGuid&quot;> </xref>構造体。"
  overload: System.Data.SqlTypes.SqlBinary.ToSqlGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.ToString
  id: ToString
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlBinary.ToString()
  fullName: System.Data.SqlTypes.SqlBinary.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "この変換<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>オブジェクトを文字列します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "含む文字列、 <> </> *> の<xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;></xref>です。場合、 <> </> *> は null 文字列には、&quot;null&quot;です。"
  overload: System.Data.SqlTypes.SqlBinary.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlBinary.Value
  id: Value
  parent: System.Data.SqlTypes.SqlBinary
  langs:
  - csharp
  name: Value
  nameWithType: SqlBinary.Value
  fullName: System.Data.SqlTypes.SqlBinary.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "値を取得、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。 このプロパティは、読み取り専用です。"
  remarks: "SqlNullValueException の発生を防ぐため、常に調べる、<xref:System.Data.SqlTypes.SqlBinary.IsNull%2A>値プロパティを読み取る前にプロパティ</xref:System.Data.SqlTypes.SqlBinary.IsNull%2A>。"
  syntax:
    content: public byte[] Value { get; }
    return:
      type: System.Byte[]
      description: "値、 <xref href=&quot;System.Data.SqlTypes.SqlBinary&quot;> </xref>構造体。"
  overload: System.Data.SqlTypes.SqlBinary.Value*
  exceptions:
  - type: System.Data.SqlTypes.SqlNullValueException
    commentId: T:System.Data.SqlTypes.SqlNullValueException
    description: "プロパティが含まれている場合、Value プロパティは読み取り<xref href=&quot;System.Data.SqlTypes.SqlBinary.Null&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Data.SqlTypes.SqlNullValueException
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlNullValueException
  nameWithType: SqlNullValueException
  fullName: System.Data.SqlTypes.SqlNullValueException
- uid: System.Data.SqlTypes.SqlBinary.#ctor(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: SqlBinary(Byte[])
  nameWithType: SqlBinary.SqlBinary(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.SqlBinary(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.SqlTypes.SqlBinary.Add(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Add(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Add(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Add(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary
  fullName: System.Data.SqlTypes.SqlBinary
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo(SqlBinary)
  nameWithType: SqlBinary.CompareTo(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(SqlBinary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlTypes.SqlBinary.CompareTo(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo(Object)
  nameWithType: SqlBinary.CompareTo(Object)
  fullName: System.Data.SqlTypes.SqlBinary.CompareTo(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlBinary.Concat(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Concat(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Concat(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Concat(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Object)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals(Object)
  nameWithType: SqlBinary.Equals(Object)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlBinary.Equals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.Equals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.Equals(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBoolean
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlBoolean
  nameWithType: SqlBoolean
  fullName: System.Data.SqlTypes.SqlBoolean
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetHashCode()
  nameWithType: SqlBinary.GetHashCode()
  fullName: System.Data.SqlTypes.SqlBinary.GetHashCode()
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType(System.Xml.Schema.XmlSchemaSet)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetXsdType(XmlSchemaSet)
  nameWithType: SqlBinary.GetXsdType(XmlSchemaSet)
  fullName: System.Data.SqlTypes.SqlBinary.GetXsdType(XmlSchemaSet)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.IsNull
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: IsNull
  nameWithType: SqlBinary.IsNull
  fullName: System.Data.SqlTypes.SqlBinary.IsNull
- uid: System.Data.SqlTypes.SqlBinary.Item(System.Int32)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Item(Int32)
  nameWithType: SqlBinary.Item(Int32)
  fullName: System.Data.SqlTypes.SqlBinary.Item(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlBinary.Length
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Length
  nameWithType: SqlBinary.Length
  fullName: System.Data.SqlTypes.SqlBinary.Length
- uid: System.Data.SqlTypes.SqlBinary.LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.LessThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.NotEquals(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: NotEquals(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.NotEquals(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.NotEquals(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.Null
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: "Null"
  nameWithType: SqlBinary.Null
  fullName: System.Data.SqlTypes.SqlBinary.Null
- uid: System.Data.SqlTypes.SqlBinary.op_Addition(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Addition(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Addition(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Addition(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Equality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Equality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Equality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Equality(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlBinary to System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit(SqlBinary)
  nameWithType: SqlBinary.op_Explicit(SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit(System.Data.SqlTypes.SqlGuid to System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit(SqlGuid)
  nameWithType: SqlBinary.op_Explicit(SqlGuid)
  fullName: System.Data.SqlTypes.SqlBinary.op_Explicit(SqlGuid)
- uid: System.Data.SqlTypes.SqlGuid
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlGuid
  nameWithType: SqlGuid
  fullName: System.Data.SqlTypes.SqlGuid
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit(System.Byte[])
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Implicit(Byte[])
  nameWithType: SqlBinary.op_Implicit(Byte[])
  fullName: System.Data.SqlTypes.SqlBinary.op_Implicit(Byte[])
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Inequality(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_Inequality(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_Inequality(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThan(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThan(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThan(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(System.Data.SqlTypes.SqlBinary,System.Data.SqlTypes.SqlBinary)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThanOrEqual(SqlBinary,SqlBinary)
  nameWithType: SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
  fullName: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual(SqlBinary,SqlBinary)
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema()
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema()
- uid: System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Data.SqlTypes.SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToSqlGuid()
  nameWithType: SqlBinary.ToSqlGuid()
  fullName: System.Data.SqlTypes.SqlBinary.ToSqlGuid()
- uid: System.Data.SqlTypes.SqlBinary.ToString
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToString()
  nameWithType: SqlBinary.ToString()
  fullName: System.Data.SqlTypes.SqlBinary.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlTypes.SqlBinary.Value
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Value
  nameWithType: SqlBinary.Value
  fullName: System.Data.SqlTypes.SqlBinary.Value
- uid: System.Data.SqlTypes.SqlBinary.#ctor*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: SqlBinary
  nameWithType: SqlBinary.SqlBinary
- uid: System.Data.SqlTypes.SqlBinary.Add*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Add
  nameWithType: SqlBinary.Add
- uid: System.Data.SqlTypes.SqlBinary.CompareTo*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: CompareTo
  nameWithType: SqlBinary.CompareTo
- uid: System.Data.SqlTypes.SqlBinary.Concat*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Concat
  nameWithType: SqlBinary.Concat
- uid: System.Data.SqlTypes.SqlBinary.Equals*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Equals
  nameWithType: SqlBinary.Equals
- uid: System.Data.SqlTypes.SqlBinary.GetHashCode*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetHashCode
  nameWithType: SqlBinary.GetHashCode
- uid: System.Data.SqlTypes.SqlBinary.GetXsdType*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GetXsdType
  nameWithType: SqlBinary.GetXsdType
- uid: System.Data.SqlTypes.SqlBinary.GreaterThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThan
  nameWithType: SqlBinary.GreaterThan
- uid: System.Data.SqlTypes.SqlBinary.GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: GreaterThanOrEqual
  nameWithType: SqlBinary.GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.IsNull*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: IsNull
  nameWithType: SqlBinary.IsNull
- uid: System.Data.SqlTypes.SqlBinary.Item*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Item
  nameWithType: SqlBinary.Item
- uid: System.Data.SqlTypes.SqlBinary.Length*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Length
  nameWithType: SqlBinary.Length
- uid: System.Data.SqlTypes.SqlBinary.LessThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThan
  nameWithType: SqlBinary.LessThan
- uid: System.Data.SqlTypes.SqlBinary.LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: LessThanOrEqual
  nameWithType: SqlBinary.LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.NotEquals*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: NotEquals
  nameWithType: SqlBinary.NotEquals
- uid: System.Data.SqlTypes.SqlBinary.op_Addition*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Addition
  nameWithType: SqlBinary.op_Addition
- uid: System.Data.SqlTypes.SqlBinary.op_Equality*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Equality
  nameWithType: SqlBinary.op_Equality
- uid: System.Data.SqlTypes.SqlBinary.op_Explicit*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Explicit
  nameWithType: SqlBinary.op_Explicit
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThan
  nameWithType: SqlBinary.op_GreaterThan
- uid: System.Data.SqlTypes.SqlBinary.op_GreaterThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_GreaterThanOrEqual
  nameWithType: SqlBinary.op_GreaterThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.op_Implicit*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Implicit
  nameWithType: SqlBinary.op_Implicit
- uid: System.Data.SqlTypes.SqlBinary.op_Inequality*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_Inequality
  nameWithType: SqlBinary.op_Inequality
- uid: System.Data.SqlTypes.SqlBinary.op_LessThan*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThan
  nameWithType: SqlBinary.op_LessThan
- uid: System.Data.SqlTypes.SqlBinary.op_LessThanOrEqual*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: op_LessThanOrEqual
  nameWithType: SqlBinary.op_LessThanOrEqual
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#GetSchema*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.GetSchema
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#ReadXml*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.ReadXml
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.ReadXml
- uid: System.Data.SqlTypes.SqlBinary.System#Xml#Serialization#IXmlSerializable#WriteXml*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: System.Xml.Serialization.IXmlSerializable.WriteXml
  nameWithType: SqlBinary.System.Xml.Serialization.IXmlSerializable.WriteXml
- uid: System.Data.SqlTypes.SqlBinary.ToSqlGuid*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToSqlGuid
  nameWithType: SqlBinary.ToSqlGuid
- uid: System.Data.SqlTypes.SqlBinary.ToString*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: ToString
  nameWithType: SqlBinary.ToString
- uid: System.Data.SqlTypes.SqlBinary.Value*
  parent: System.Data.SqlTypes.SqlBinary
  isExternal: false
  name: Value
  nameWithType: SqlBinary.Value
