### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ResourceExpressionBuilder
  id: ResourceExpressionBuilder
  children:
  - System.Web.Compilation.ResourceExpressionBuilder.#ctor
  - System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  - System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder
  fullName: System.Web.Compilation.ResourceExpressionBuilder
  type: Class
  summary: "コントロールのプロパティ値を割り当てるため、ページのパーサーにコードを提供します。"
  remarks: "ResourceExpressionBuilder クラスでは、ページを実行すると、リソースの値を取得するコードを作成します。 通常、リソース ファイルには、特定の言語またはカルチャにローカライズされた情報が含まれています。       リソース式形式の`<%$ Resources: ClassKey, ResourceKey %>`ページ内で。 コロン (:) の前に式の一部は使用するには式ビルダーの種類を指定し、コロンの後ろの部分は、クラス名とリソースのキーを示します。 直前の正規表現は、という名前のファイルから次の値を取得、 `ClassKey.resx`:```   <data name=&quot;ResourceKey&quot;><value xml:space=&quot;preserve&quot;>Hello!</value></data>   ```ページ パーサーを持つ式を検出した場合、`Resources`プレフィックス、ResourceExpressionBuilder クラスのインスタンスを作成します。 ResourceExpressionBuilder クラスは、式を評価するか、ページを実行すると、式の値を返すコードを生成します。       コンパイルされるページで、式が検出した場合、ResourceExpressionBuilder オブジェクトは、リソース ファイルから指定した値を取得するコードを生成します。 式はコンパイルされませんが、ページで、検出した場合、ResourceExpressionBuilder オブジェクトは、ページが解析されるときにリソース ファイルから値を返します。"
  example:
  - "The following code example retrieves the default currency from a resource file.  \n  \n [!code-cs[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/csharp/t-system.web.compilation_3_1.aspx)]\n [!code-vb[System.Web.Compilation.ResourceExpressionBuilder#1](~/add/codesnippet/visualbasic/t-system.web.compilation_3_1.aspx)]  \n  \n This code reads the following value from a resource file named `Financial.resx` in the App_GlobalResources directory.  \n  \n```  \n<data name=\"Currency\"><value xml:space=\"preserve\">US dollars</value></data>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.ResourceExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Resources")]

      public class ResourceExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ResourceExpressionBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public ResourceExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "リソース ファイルから値を返します。"
  remarks: 'このメソッドは、フォームの式`<%$ Resources: someResourceKey %>`コンパイルなし機能を使用する ページで発生しました。 リソース ファイル内のキー/値ペアから適切な値を取得します。'
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "式を表すオブジェクト。"
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "式でバインドされるプロパティに関する情報を表すオブジェクト。"
    - id: parsedData
      type: System.Object
      description: "によって返されるデータを解析するオブジェクトを含む、<xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>メソッド</xref:System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*>。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "式の評価にコンテキスト情報です。"
    return:
      type: System.Object
      description: "<xref:System.Object>解析された式に関連付けられている</xref:System.Object>。 解析された式には、クラス名とリソースのキーが含まれています。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コード ページの実行中に評価する式を返します。"
  remarks: "このメソッドは、ページまたはコントロールの CodeDOM の作成時に呼び出されます。 <xref:System.CodeDom.CodeExpression>返されるオブジェクトの種類が<xref:System.CodeDom.CodeMethodInvokeExpression>、ページの実行中にリソースの値を取得するときに呼び出すメソッドを表します</xref:System.CodeDom.CodeMethodInvokeExpression></xref:System.CodeDom.CodeExpression>。"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "オブジェクトのプロパティ名。"
    - id: parsedData
      type: System.Object
      description: "式の解析された値。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>メソッドを呼び出します。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  id: ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "解析された式を表すオブジェクトを返します。"
  remarks: "このメソッドは、式を解析しを返します、<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>と<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>、返されたプロパティ値<xref:System.Web.Compilation.ResourceExpressionFields>オブジェクトをこれらのプロパティが式で指定された場合</xref:System.Web.Compilation.ResourceExpressionFields></xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A></xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>。"
  syntax:
    content: public static System.Web.Compilation.ResourceExpressionFields ParseExpression (string expression);
    parameters:
    - id: expression
      type: System.String
      description: "解析される式の値。"
    return:
      type: System.Web.Compilation.ResourceExpressionFields
      description: "<xref href=&quot;System.Web.Compilation.ResourceExpressionFields&quot;> </xref>式。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "解析された式を表すオブジェクトを返します。"
  remarks: "返されるの<xref:System.Object>型<xref:System.Web.Compilation.ResourceExpressionFields>。</xref:System.Web.Compilation.ResourceExpressionFields> </xref:System.Object> このメソッドは、式を解析しを返します、<xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>と<xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A>プロパティ値を返された<xref:System.Web.Compilation.ResourceExpressionFields>オブジェクトをそれらのプロパティが式で指定された場合</xref:System.Web.Compilation.ResourceExpressionFields></xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey%2A></xref:System.Web.Compilation.ResourceExpressionFields.ClassKey%2A>。"
  syntax:
    content: public override object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "宣言型の式の値。"
    - id: propertyType
      type: System.Type
      description: "プロパティの型は、式にバインドします。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "式の評価にコンテキスト情報です。"
    return:
      type: System.Object
      description: "<xref:System.Object>解析された式を表す</xref:System.Object>。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "リソースの式が見つからないか、無効です。"
  platform:
  - net462
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイルなし機能を使用するページで、式を評価できるかどうかを示す値を返します。"
  remarks: "SupportsEvaluate プロパティを示すかどうかの<xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>メソッドは、クラスに実装されています</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A>コンパイルなし機能を使用する ページで評価される式の式ビルダー内で実装する必要があります。</xref:System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.ResourceExpressionBuilder>このプロパティは常を返すようにコンパイルされていないページで、リソース値の評価をサポートしています`true`です。</xref:System.Web.Compilation.ResourceExpressionBuilder>"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder()
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder()
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ResourceExpressionBuilder()
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String)
- uid: System.Web.Compilation.ResourceExpressionFields
  parent: System.Web.Compilation
  isExternal: false
  name: ResourceExpressionFields
  nameWithType: ResourceExpressionFields
  fullName: System.Web.Compilation.ResourceExpressionFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ResourceExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ResourceExpressionBuilder
  nameWithType: ResourceExpressionBuilder.ResourceExpressionBuilder
- uid: System.Web.Compilation.ResourceExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ResourceExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ResourceExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ResourceExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ResourceExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ResourceExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ResourceExpressionBuilder.SupportsEvaluate
