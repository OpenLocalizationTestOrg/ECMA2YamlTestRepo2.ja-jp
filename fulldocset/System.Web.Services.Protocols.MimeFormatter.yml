### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "すべてのリーダーとライターせずに SOAP Web サービスおよび HTTP を使用して実装されているクライアント用の抽象基本クラスを提供します。"
  remarks: "Web サービスのライター、リーダー シリアル化および逆、それぞれ、Web メソッドのパラメーターまたは戻り値のオブジェクトと、HTTP 要求または応答のストリームの間です。 MimeFormatter クラスは、クライアントとサービス側の両方で共通のインターフェイスおよびリーダーおよびライターのクラスの機能を確立します。       MimeFormatter クラスでは、HTTP GET 要求および HTTP POST 操作で Web サービスの .NET Framework の実装をサポートします。 HTTP GET 操作で要求のパラメーターは、HTTP 要求の Uniform Resource Locator (URL) でエンコードされます。 HTTP POST 操作では、要求パラメーターは、HTTP 要求本文で HTML フォームと同様にエンコードされます。 両方の実装と共に、戻り値として表示されます、HTTP 応答本文で SOAP 以外の XML ドキュメント。       開発者は通常、MimeFormatter またはその派生クラスを直接使用する必要はありません。 代わりに、Wsdl.exe ツールは、HTTP GET または HTTP POST の実装に応じて、クライアント プロキシ コードを生成するときに適用されます、<xref:System.Web.Services.Protocols.HttpMethodAttribute>各 Web メソッドに属性の<xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>および<xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>MimeFormatter クラスから派生した適切な型にプロパティ</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A></xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>を設定および</xref:System.Web.Services.Protocols.HttpMethodAttribute> サーバーで、適切な派生型は、ASP.NET 構成ファイル (Web.config) の設定に従って使用されます。 クライアントでは、適切な派生型は、WSDL から決定されます。"
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>クラスです。"
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "作成してから派生した具象クラスのインスタンスを初期化<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref>です。"
  remarks: "CreateInstance メソッドは、派生クラスのインスタンスを作成し、抽象の派生クラスの実装を呼び出す<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。 CreateInstance メソッドは、要求または応答の処理時に呼び出されます。       初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。 CreateInstance メソッドにパラメーターとして渡される初期化子が呼び出すことによって、派生クラスの別のインスタンスから取得、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中にメソッド</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>。"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "派生した型、 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref>のインスタンスを作成します。"
    - id: initializer
      type: System.Object
      description: "インスタンスを初期化するために使用するオブジェクトは、以前の派生クラスの実装を取得、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>。"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、指定したメソッドの初期化子を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。       派生クラスのメソッドの実装、GetInitializer インスタンスがクライアントまたはサービスの初期化中に呼び出されます。 後で、要求または応答の処理時に、初期化子オブジェクトが渡される静的<xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>メソッド、および<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>それを初期化</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>し、さらに、派生クラスの別のオブジェクトのインスタンスを作成します。</xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> その他のオブジェクトは、実際に読み取りまたは書き込みを実行します。"
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>初期化子を取得する Web メソッドを指定します。"
    return:
      type: System.Object
      description: "<xref:System.Object>、指定したメソッドの初期化子を格納している</xref:System.Object>。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定したメソッドの初期化子を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。       静的 GetInitializer メソッドを呼び出す、派生クラスの<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドを暗黙的に派生クラスのインスタンスを作成します。</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> 要求または応答の処理時に初期化子オブジェクトは<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>、派生クラスの別のインスタンスのメソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>に渡す 後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。"
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "派生した型、 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>、初期化子が取得されるのです。"
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref>初期化子を取得する Web メソッドを指定します。"
    return:
      type: System.Object
      description: "A<xref:System.Object>を指定したメソッドの初期化子を含むオブジェクト</xref:System.Object>。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされるは、メソッド定義の入力を配列に対応するオブジェクト初期化子の配列を返します。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。       GetInitializers インスタンス メソッドを呼び出して、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>ごとにインスタンス メソッドは、Web メソッドを入力します</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>。 派生したクラスのインスタンスをつまり<xref:System.Web.Services.Protocols.MimeFormatter>既に作成されています</xref:System.Web.Services.Protocols.MimeFormatter>。 要求または応答の処理時に初期化子は<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>、派生クラスの別のインスタンスのメソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>に渡す 後者のオブジェクトは、実際に読み取りまたは書き込みを実行します。"
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "各メソッドで返された初期化子の配列に対応するインデックスのオブジェクトが取得される、Web メソッドの配列。"
    return:
      type: System.Object[]
      description: "メソッド定義の入力配列に対応する初期化子オブジェクトの配列。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "指定したクラスから派生したメソッドの定義の入力を配列に対応するオブジェクト初期化子の配列を返します<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref>です。"
  remarks: "初期化子は、パラメーターとして渡されるオブジェクト、<xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>。       静的 GetInitializersmethod によりの呼び出し、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>メソッドによって指定された派生クラスに属している、`type`のパラメーターです</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>。"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "派生した型、 <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>、どの初期化子を取得します。"
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "型の配列<xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;></xref>初期化子を取得する対象の Web メソッドを指定します。"
    return:
      type: System.Object[]
      description: "指定したクラスから派生したメソッド定義の入力配列に対応する初期化子オブジェクトの配列<xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref>です。"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、インスタンスを初期化します。"
  remarks: "Initialize メソッドが要求または応答の処理時に呼び出されますただし、初期化子が呼び出すことによって取得、<xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>クライアントまたはサービスの初期化中に別のインスタンス上のメソッド</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>。"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "メソッドの実装が特定のクラスに適切な型のオブジェクト。"
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
