### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelItemDictionary
  id: ModelItemDictionary
  children:
  - System.Activities.Presentation.Model.ModelItemDictionary.#ctor
  - System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.Clear
  - System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged
  - System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  - System.Activities.Presentation.Model.ModelItemDictionary.Count
  - System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator
  - System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize
  - System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly
  - System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized
  - System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty
  - System.Activities.Presentation.Model.ModelItemDictionary.Keys
  - System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values
  - System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)
  - System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)
  - System.Activities.Presentation.Model.ModelItemDictionary.Values
  langs:
  - csharp
  name: ModelItemDictionary
  nameWithType: ModelItemDictionary
  fullName: System.Activities.Presentation.Model.ModelItemDictionary
  type: Class
  summary: "派生した<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>キー/値ペアのディクショナリのサポートを実装します。"
  syntax:
    content: 'public abstract class ModelItemDictionary : System.Activities.Presentation.Model.ModelItem, System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>, System.Collections.Generic.IDictionary<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>, System.Collections.IDictionary, System.Collections.Specialized.INotifyCollectionChanged'
  inheritance:
  - System.Object
  - System.Activities.Presentation.Model.ModelItem
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>
  - System.Collections.Generic.IDictionary<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>
  - System.Collections.IDictionary
  - System.Collections.Specialized.INotifyCollectionChanged
  inheritedMembers:
  - System.Activities.Presentation.Model.ModelItem.Attributes
  - System.Activities.Presentation.Model.ModelItem.BeginEdit
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)
  - System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)
  - System.Activities.Presentation.Model.ModelItem.Content
  - System.Activities.Presentation.Model.ModelItem.GetCurrentValue
  - System.Activities.Presentation.Model.ModelItem.ItemType
  - System.Activities.Presentation.Model.ModelItem.Name
  - System.Activities.Presentation.Model.ModelItem.Parent
  - System.Activities.Presentation.Model.ModelItem.Parents
  - System.Activities.Presentation.Model.ModelItem.Properties
  - System.Activities.Presentation.Model.ModelItem.PropertyChanged
  - System.Activities.Presentation.Model.ModelItem.Root
  - System.Activities.Presentation.Model.ModelItem.Source
  - System.Activities.Presentation.Model.ModelItem.Sources
  - System.Activities.Presentation.Model.ModelItem.ToString
  - System.Activities.Presentation.Model.ModelItem.View
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: ModelItemDictionary()
  nameWithType: ModelItemDictionary.ModelItemDictionary()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ModelItemDictionary()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "新たに作成<xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;></xref>です。"
  syntax:
    content: protected ModelItemDictionary ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)
  id: Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Add(ModelItem,ModelItem)
  nameWithType: ModelItemDictionary.Add(ModelItem,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(ModelItem,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキーの下のディクショナリに値を追加します。"
  syntax:
    content: public abstract void Add (System.Activities.Presentation.Model.ModelItem key, System.Activities.Presentation.Model.ModelItem value);
    parameters:
    - id: key
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>を追加するキー/値ペア内のキーを表すです。"
    - id: value
      type: System.Activities.Presentation.Model.ModelItem
      description: "<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>を追加するキー/値ペア内の値を表すです。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "場合、 <xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ModelItemDictionary.Add(Object,Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキーの下のディクショナリに値を追加します。 このメソッドのセット内のキーと値のラップ<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>オブジェクト。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "追加するキー/値ペアのキーです。"
    - id: value
      type: System.Object
      description: "追加するキー/値ペア内の値。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "返します、 <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>キーを表すです。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "場合、 <xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear
  id: Clear
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ModelItemDictionary.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリの内容を消去します。"
  syntax:
    content: public abstract void Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged
  id: CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ModelItemDictionary.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged
  type: Event
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "このコレクションの内容を変更するときに発生します。"
  syntax:
    content: public abstract event System.Collections.Specialized.NotifyCollectionChangedEventHandler CollectionChanged;
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  id: Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Contains(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキー/値ペアがディクショナリに含まれるかどうかを判断します。"
  syntax:
    content: protected virtual bool Contains (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}
      description: "検索するキー/値ペア。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディクショナリに所定のキー/値ペアが含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)
  id: ContainsKey(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: ContainsKey(ModelItem)
  nameWithType: ModelItemDictionary.ContainsKey(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキーがディクショナリに含まれるかどうかを判断します。"
  syntax:
    content: public abstract bool ContainsKey (System.Activities.Presentation.Model.ModelItem key);
    parameters:
    - id: key
      type: System.Activities.Presentation.Model.ModelItem
      description: "検索するキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディクショナリに指定したキーが含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)
  id: ContainsKey(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: ContainsKey(Object)
  nameWithType: ModelItemDictionary.ContainsKey(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキーがディクショナリに含まれるかどうかを判断します。"
  syntax:
    content: public abstract bool ContainsKey (object key);
    parameters:
    - id: key
      type: System.Object
      description: "検索するキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディクショナリに指定したキーが含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
  nameWithType: ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "キー/値ペアの配列を所定のディクショナリにコピーします。"
  syntax:
    content: protected virtual void CopyTo (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]
      description: "コピーするキー/値ペアの配列。"
    - id: arrayIndex
      type: System.Int32
      description: "コピーを現在ディクショナリ内の&0; から始まるインデックスを開始します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count
  id: Count
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ModelItemDictionary.Count
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリ内の項目の数を返します。"
  syntax:
    content: public abstract int Count { get; }
    return:
      type: System.Int32
      description: "返します<xref:System.Int32>。</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ModelItemDictionary.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリ内の項目の列挙子を返します。"
  syntax:
    content: public abstract System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}}
      description: "返します&lt;xref:System.Collections.Generic.IEnumerator%601&gt;です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ModelItemDictionary.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリが固定サイズであるかどうかを判断します。"
  syntax:
    content: protected virtual bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディクショナリが固定サイズの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定の実装を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ディクショナリが読み取り専用の場合。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelItemDictionary.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリを変更することはできないかどうかを判断します。"
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、辞書は変更できません。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ModelItemDictionary.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリへのアクセスが同期されているかどうかを示す値を取得 (スレッド セーフである)。"
  syntax:
    content: protected virtual bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ディクショナリへのアクセスが同期されている (スレッド セーフである)それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定の実装を返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)
  id: Item(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Item(ModelItem)
  nameWithType: ModelItemDictionary.Item(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(ModelItem)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得または指定したキーに項目を設定します。"
  remarks: "このメソッドが戻るかどうかは、指定したキーの項目がない、`null`です。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem this[System.Activities.Presentation.Model.ModelItem key] { get; set; }
    parameters:
    - id: key
      type: System.Activities.Presentation.Model.ModelItem
      description: "項目の指定されたキー。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> or the value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ディクショナリが読み取り専用の新しい値を設定するとします。"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "場合<code> key </code>ディクショナリに含まれない。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ModelItemDictionary.Item(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(Object)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得または指定したキーに項目を設定します。"
  remarks: "このメソッドが戻るかどうかは、指定したキーの項目がない、`null`です。"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "項目の指定されたキー。"
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> or the value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ディクショナリが読み取り専用の新しい値を設定するとします。"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "場合<code> key </code>ディクショナリに含まれない。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty
  id: KeyProperty
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: KeyProperty
  nameWithType: ModelItemDictionary.KeyProperty
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty
  type: Field
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "<xref uid=&quot;langword_csharp_DependencyProperty&quot; name=&quot;DependencyProperty&quot; href=&quot;&quot;> </xref>ディクショナリ内のすべての項目に追加されているキー/値ペア内のキーを表すです。 データ型、 <xref uid=&quot;langword_csharp_KeyProperty&quot; name=&quot;KeyProperty&quot; href=&quot;&quot;> </xref>は<xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>です。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty KeyProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys
  id: Keys
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ModelItemDictionary.Keys
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Keys
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "コレクションのキーを取得します。 キー値と同じ順序にすることが保証されます。 結果のコレクションとは、読み取り専用です。"
  syntax:
    content: public abstract System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem> Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}
      description: "返します&lt;xref:System.Collections.Generic.ICollection%601&gt;です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)
  id: Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Remove(ModelItem)
  nameWithType: ModelItemDictionary.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定されたキーにディクショナリから項目を削除します。"
  remarks: "項目がコレクションに存在しない場合は、何も行われません。"
  syntax:
    content: public abstract bool Remove (System.Activities.Presentation.Model.ModelItem key);
    parameters:
    - id: key
      type: System.Activities.Presentation.Model.ModelItem
      description: "削除する要素のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>項目が存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If the <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ディクショナリが読み取り専用の場合は。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ModelItemDictionary.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "ディクショナリから項目を削除します。"
  remarks: "項目がコレクションに存在しない場合は、何も行われません。"
  syntax:
    content: public abstract bool Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "検索条件として、キーを使用して削除する項目。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>項目が存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If the <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ディクショナリが読み取り専用の場合は。"
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot
  id: SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ModelItemDictionary.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "このコレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: "既定の実装では、&quot;this.&quot;を返します"
  syntax:
    content: protected virtual object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>。</xref:System.Object>を返します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: void ICollection<KeyValuePair<ModelItem,ModelItem>>.Add (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}
      description: "追加します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: bool ICollection<KeyValuePair<ModelItem,ModelItem>>.Contains (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: void ICollection<KeyValuePair<ModelItem,ModelItem>>.CopyTo (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]
      description: "追加します。"
    - id: arrayIndex
      type: System.Int32
      description: "追加します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: bool ICollection<KeyValuePair<ModelItem,ModelItem>>.Remove (System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "要素をコピー、<xref:System.Collections.ICollection>特定の配列インデックスを開始位置、配列にします</xref:System.Collections.ICollection>。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>からコピーされた要素のコピー先である&1; 次元配列 配列は、0 から始まるインデックスが必要です。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>に含まれる要素の数を取得します。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>に含まれる要素の数"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "示す値を取得するアクセスかどうか、<xref:System.Collections.ICollection>は同期されている (スレッド セーフである).</xref:System.Collections.ICollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセス、<xref:System.Collections.ICollection>は同期されている (スレッド セーフである) 場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>へのアクセスを同期するために使用できるオブジェクトを取得します。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>へのアクセスを同期するために使用できるオブジェクト"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したキーと値を持つ要素を追加、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary>。"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "追加する要素のキーとして使用するオブジェクト。"
    - id: value
      type: System.Object
      description: "追加する要素の値として使用するオブジェクト。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "すべての要素を削除、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary>。"
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定するかどうか、<xref:System.Collections.IDictionary>オブジェクトには、指定したキーを持つ要素が含まれています</xref:System.Collections.IDictionary>。"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "内で検索するキー、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Collections.IDictionary>されたキーを持つ要素が含まれるそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Collections.IDictionary> 。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "返します、<xref:System.Collections.IDictionaryEnumerator>オブジェクトに対して、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.IDictionaryEnumerator>。"
  syntax:
    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "<xref:System.Collections.IDictionaryEnumerator>オブジェクトに対して、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.IDictionaryEnumerator>。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "示す値を取得するかどうか、<xref:System.Collections.IDictionary>オブジェクトのサイズが固定されています</xref:System.Collections.IDictionary>。"
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Collections.IDictionary>オブジェクトが固定サイズですそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary> 。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "示す値を取得するかどうか、<xref:System.Collections.IDictionary>オブジェクトは読み取り専用です</xref:System.Collections.IDictionary>。"
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Collections.IDictionary>オブジェクトは読み取り専用ですそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Collections.IDictionary> 。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得または指定したキーを持つ要素を設定します。"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "取得または設定する要素のキー。"
    return:
      type: System.Object
      description: "指定したキーを持つ要素。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得、<xref:System.Collections.ICollection>のキーを格納するオブジェクト、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.ICollection>。"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>のキーを格納するオブジェクト、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.ICollection>。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "<xref:System.Collections.IDictionary>。</xref:System.Collections.IDictionary>から指定したキーを持つ要素を削除します。"
  remarks: "場合、<xref:System.Collections.IDictionary>オブジェクトに指定のキーを持つ要素が含まれていません、<xref:System.Collections.IDictionary>は変更されません</xref:System.Collections.IDictionary></xref:System.Collections.IDictionary>。 例外はスローされません。"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "削除する要素のキー。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得、<xref:System.Collections.ICollection>内の値を格納しているオブジェクト、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.ICollection>。"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>内の値を格納しているオブジェクト、<xref:System.Collections.IDictionary>オブジェクト</xref:System.Collections.IDictionary></xref:System.Collections.ICollection>。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "コレクションを反復処理する列挙子を返します。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>コレクション &quot;..&quot; を反復処理に使用できるオブジェクト</xref:System.Collections.IEnumerator>"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)
  id: TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: TryGetValue(ModelItem,ModelItem)
  nameWithType: ModelItemDictionary.TryGetValue(ModelItem,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(ModelItem,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "可能な場合は、指定したキーの値を取得します。"
  syntax:
    content: public abstract bool TryGetValue (System.Activities.Presentation.Model.ModelItem key, out System.Activities.Presentation.Model.ModelItem value);
    parameters:
    - id: key
      type: System.Activities.Presentation.Model.ModelItem
      description: "取得する値に関連付けられているキーです。"
    - id: value
      type: System.Activities.Presentation.Model.ModelItem
      description: "指定したキーに関連付けられている値。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたキーの値がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)
  id: TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: TryGetValue(Object,ModelItem)
  nameWithType: ModelItemDictionary.TryGetValue(Object,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(Object,ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "可能な場合は、指定したキーの値を取得します。"
  syntax:
    content: public abstract bool TryGetValue (object key, out System.Activities.Presentation.Model.ModelItem value);
    parameters:
    - id: key
      type: System.Object
      description: "取得する値に関連付けられているキーです。"
    - id: value
      type: System.Activities.Presentation.Model.ModelItem
      description: "指定したキーに関連付けられている値。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定されたキーの値がある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "If <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values
  id: Values
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ModelItemDictionary.Values
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Values
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "コレクションの値を取得します。"
  remarks: "値、キーと同じ順序にすることが保証されます。 結果のコレクションとは、読み取り専用です。"
  syntax:
    content: public abstract System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem> Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}
      description: "返します&lt;xref:System.Collections.Generic.ICollection%601&gt;です。"
  overload: System.Activities.Presentation.Model.ModelItemDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Model.ModelItem
  isExternal: false
  name: System.Activities.Presentation.Model.ModelItem
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: ModelItemDictionary()
  nameWithType: ModelItemDictionary.ModelItemDictionary()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ModelItemDictionary()
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Add(ModelItem,ModelItem)
  nameWithType: ModelItemDictionary.Add(ModelItem,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(ModelItem,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add(System.Object,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ModelItemDictionary.Add(Object,Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Add(Object,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Clear()
  nameWithType: ModelItemDictionary.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Clear()
- uid: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: CollectionChanged
  nameWithType: ModelItemDictionary.CollectionChanged
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CollectionChanged
- uid: System.Collections.Specialized.NotifyCollectionChangedEventHandler
  parent: System.Collections.Specialized
  isExternal: true
  name: NotifyCollectionChangedEventHandler
  nameWithType: NotifyCollectionChangedEventHandler
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventHandler
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Contains(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Contains(KeyValuePair<ModelItem,ModelItem>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<ModelItem,ModelItem>
  nameWithType: KeyValuePair<ModelItem,ModelItem>
  fullName: System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: ContainsKey(ModelItem)
  nameWithType: ModelItemDictionary.ContainsKey(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: ContainsKey(Object)
  nameWithType: ModelItemDictionary.ContainsKey(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
  nameWithType: ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo(KeyValuePair<ModelItem,ModelItem>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<ModelItem,ModelItem>
  nameWithType: KeyValuePair<ModelItem,ModelItem>
  fullName: System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Count
  nameWithType: ModelItemDictionary.Count
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Count
- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ModelItemDictionary.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<ModelItem,ModelItem>>
  nameWithType: IEnumerator<KeyValuePair<ModelItem,ModelItem>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemDictionary.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemDictionary.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemDictionary.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Item(ModelItem)
  nameWithType: ModelItemDictionary.Item(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ModelItemDictionary.Item(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Item(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: KeyProperty
  nameWithType: ModelItemDictionary.KeyProperty
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.KeyProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Keys
  nameWithType: ModelItemDictionary.Keys
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Keys
- uid: System.Collections.Generic.ICollection{System.Activities.Presentation.Model.ModelItem}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ModelItem>
  nameWithType: ICollection<ModelItem>
  fullName: System.Collections.Generic.ICollection<System.Activities.Presentation.Model.ModelItem>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Activities.Presentation.Model.ModelItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.ModelItem
    name: ModelItem
    nameWithType: ModelItem
    fullName: ModelItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Remove(ModelItem)
  nameWithType: ModelItemDictionary.Remove(ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ModelItemDictionary.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemDictionary.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Add(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Contains(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem}[],System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>,Int32)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem}}#Remove(System.Collections.Generic.KeyValuePair{System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem})
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.Generic.ICollection(KeyValuePair<ModelItem,ModelItem>)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Clear()
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Contains(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator()
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Item(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove(Object)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Remove(Object)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IDictionary.Values
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem@)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: TryGetValue(ModelItem,ModelItem)
  nameWithType: ModelItemDictionary.TryGetValue(ModelItem,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(ModelItem,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(System.Object,System.Activities.Presentation.Model.ModelItem@)
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: TryGetValue(Object,ModelItem)
  nameWithType: ModelItemDictionary.TryGetValue(Object,ModelItem)
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue(Object,ModelItem)
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Values
  nameWithType: ModelItemDictionary.Values
  fullName: System.Activities.Presentation.Model.ModelItemDictionary.Values
- uid: System.Activities.Presentation.Model.ModelItemDictionary.#ctor*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: ModelItemDictionary
  nameWithType: ModelItemDictionary.ModelItemDictionary
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Add*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Add
  nameWithType: ModelItemDictionary.Add
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Clear*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Clear
  nameWithType: ModelItemDictionary.Clear
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Contains*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Contains
  nameWithType: ModelItemDictionary.Contains
- uid: System.Activities.Presentation.Model.ModelItemDictionary.ContainsKey*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: ContainsKey
  nameWithType: ModelItemDictionary.ContainsKey
- uid: System.Activities.Presentation.Model.ModelItemDictionary.CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ModelItemDictionary.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Count*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Count
  nameWithType: ModelItemDictionary.Count
- uid: System.Activities.Presentation.Model.ModelItemDictionary.GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ModelItemDictionary.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ModelItemDictionary.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelItemDictionary.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemDictionary.IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: ModelItemDictionary.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Item*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Item
  nameWithType: ModelItemDictionary.Item
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Keys*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Keys
  nameWithType: ModelItemDictionary.Keys
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Remove*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Remove
  nameWithType: ModelItemDictionary.Remove
- uid: System.Activities.Presentation.Model.ModelItemDictionary.SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: ModelItemDictionary.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Add*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Add
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Add
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Contains*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Contains
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Contains
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.CopyTo
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#Generic#ICollection<System#Collections#Generic#KeyValuePair<System#Activities#Presentation#Model#ModelItem,System#Activities#Presentation#Model#ModelItem>>#Remove*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Remove
  nameWithType: ModelItemDictionary.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Activities.Presentation.Model.ModelItem,System.Activities.Presentation.Model.ModelItem>>.Remove
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ModelItemDictionary.System.Collections.ICollection.CopyTo
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#Count*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: ModelItemDictionary.System.Collections.ICollection.Count
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ModelItemDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ModelItemDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Add*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Add
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Clear*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Clear
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Clear
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Contains*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Contains
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.GetEnumerator
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsFixedSize*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsFixedSize
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Item*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Item
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Keys*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Keys
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Remove*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Remove
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IDictionary#Values*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: ModelItemDictionary.System.Collections.IDictionary.Values
- uid: System.Activities.Presentation.Model.ModelItemDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ModelItemDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Presentation.Model.ModelItemDictionary.TryGetValue*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: TryGetValue
  nameWithType: ModelItemDictionary.TryGetValue
- uid: System.Activities.Presentation.Model.ModelItemDictionary.Values*
  parent: System.Activities.Presentation.Model.ModelItemDictionary
  isExternal: false
  name: Values
  nameWithType: ModelItemDictionary.Values
