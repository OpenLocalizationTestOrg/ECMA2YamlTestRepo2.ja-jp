### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "バインディングに関するカスタム ポリシー アサーションをインポートするオブジェクトのメソッドを定義します。"
  remarks: "エンドポイントの機能または要件に関するカスタム ポリシー アサーションの特定のエンドポイントによって公開される WSDL 情報を検索する IPolicyImportExtension インターフェイスを実装します。 通常、ポリシー インポーター、特定のアサーションと、挿入されたバインド要素を検索、構成、バインド要素、またはアサーションの要件をサポートするためのコントラクトを変更します。       対応するものとは異なり<xref:System.ServiceModel.Description.IPolicyExportExtension>、IPolicyImportExtension はによって実装をしないため、<xref:System.ServiceModel.Channels.BindingElement>オブジェクトです読み込む例」のセクションで、またはに追加することによってプログラムでクライアント構成セクションを使用することができます、<xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>コンス トラクター。</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension> 。       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]この<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>メソッドは<xref:System.ServiceModel.Description.MetadataImporter>および<xref:System.ServiceModel.Description.PolicyConversionContext>。</xref:System.ServiceModel.Description.PolicyConversionContext></xref:System.ServiceModel.Description.MetadataImporter></xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>に&2; つのオブジェクトを渡します 通常、<xref:System.ServiceModel.Description.PolicyConversionContext>オブジェクトには既に各バインディング スコープのポリシー アサーションが含まれています</xref:System.ServiceModel.Description.PolicyConversionContext>。       IPolicyImportExtension 実装は、次の手順を実行します: 1。  責任を呼び出して、カスタム ポリシー アサーションを検索し、 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、 <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、または<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>メソッド、スコープによって異なります</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A></xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A></xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>。      2.  アサーション コレクションからポリシー アサーションを削除します。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>メソッドは、検索して、返される&1; つの手順で、アサーションを削除します</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>。      3.  バインディング スタックまたはコントラクトを追加するか、必要なカスタム変更<xref:System.ServiceModel.Channels.BindingElement>を<xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>プロパティまたは変更することによって、<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>プロパティ</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName></xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A></xref:System.ServiceModel.Channels.BindingElement>。       手順 2. は重要です。 すべてのポリシー インポーターが呼び出された後に[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]残っているすべてのポリシー アサーションの存在を確認します。 1 つ存在する場合、[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]ポリシーのインポートに失敗しましたして関連付けられているバインディングがインポートされていると見なします。      > [!IMPORTANT] > をポリシー インポーターを悪用する目的でメタデータの一部として誤った形式の XML を送信する悪意のあるメタデータのサプライヤーを試みることができます。 カスタム ポリシー インポーターは、すべての形式の XML に渡すことができるに対して強固で強く勧めします。       カスタム<xref:System.ServiceModel.Description.MetadataImporter>実装する必要があります独自<xref:System.ServiceModel.Description.PolicyConversionContext>カスタム メタデータの形式に接続されているポリシー アサーションを抽出するオブジェクト</xref:System.ServiceModel.Description.PolicyConversionContext></xref:System.ServiceModel.Description.MetadataImporter>。       エクスポートし、ポリシー アサーションではないカスタム WSDL 要素をインポートする場合<xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>と<xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>。</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName></xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>を参照してください。      > [!NOTE] > カスタム ポリシー インポーターとカスタム ポリシーとエクスポーターを使用することができます、 [ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md)構成ファイルで、同じ構成要素を使用して、および`/svcutilConfig:<configFile>`オプション。"
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "カスタム ポリシー アサーションをインポートして、実装するバインド要素を追加できるメソッドを定義します。"
  remarks: "実装、`ImportPolicy`ポリシー アサーションを取得し、インポートされたコントラクトまたはバインディング アサーションをサポートするためになんらかの変更を実行するメソッド。 通常、ポリシー インポーターは、構成またはインポートされているバインディングにバインド要素を挿入することにより、カスタム ポリシー アサーションの検索に応答します。       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]ImportPolicy メソッド<xref:System.ServiceModel.Description.MetadataImporter>および<xref:System.ServiceModel.Description.PolicyConversionContext>。</xref:System.ServiceModel.Description.PolicyConversionContext></xref:System.ServiceModel.Description.MetadataImporter>に&2; つのオブジェクトを渡します 通常、<xref:System.ServiceModel.Description.PolicyConversionContext>オブジェクトには既に各バインディング スコープのポリシー アサーションが含まれています</xref:System.ServiceModel.Description.PolicyConversionContext>。       <xref:System.ServiceModel.Description.IPolicyImportExtension>実装は、次の手順を実行します: 1</xref:System.ServiceModel.Description.IPolicyImportExtension> 。  責任を呼び出して、カスタム ポリシー アサーションを検索し、 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、 <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>、または<xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>メソッド、スコープによって異なります</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A></xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A></xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>。      2.  アサーション コレクションからポリシー アサーションを削除します。 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>メソッドは、検索して、返される&1; つの手順で、アサーションを削除します</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>。      3.  追加するか、必要なカスタム バインディング スタックまたはコントラクトを変更<xref:System.ServiceModel.Channels.BindingElement>を<xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>プロパティまたは変更することによって、<xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>プロパティ</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName></xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A></xref:System.ServiceModel.Channels.BindingElement>。       手順 2. は重要です。 すべてのポリシー インポーターが呼び出された後に[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]残っているすべてのポリシー アサーションの存在を確認します。 1 つ存在する場合、[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]ポリシーのインポートに失敗しましたして関連付けられているバインディングがインポートされていると見なします。"
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref>使用中のオブジェクト。"
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "<xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref>インポートできるポリシー アサーション、およびバインド要素をバインディング要素を実装することができますの追加先のコレクションを格納しています。"
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
