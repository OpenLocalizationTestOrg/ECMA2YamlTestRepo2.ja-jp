### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.FileResponseElement
  id: FileResponseElement
  children:
  - System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  - System.Web.Caching.FileResponseElement.Length
  - System.Web.Caching.FileResponseElement.Offset
  - System.Web.Caching.FileResponseElement.Path
  langs:
  - csharp
  name: FileResponseElement
  nameWithType: FileResponseElement
  fullName: System.Web.Caching.FileResponseElement
  type: Class
  summary: "ファイルとして格納されている、出力キャッシュ エントリの一部を表します。"
  remarks: "FileResponseElement クラスでは、出力キャッシュのエントリの本文部分 (ヘッダー) ではなくを表します。 一部またはすべてのファイルのいずれかとして FileResponseElement オブジェクトからデータを格納できます。 ASP.NET とカスタム出力キャッシュ プロバイダーの両方できます応答を返す複数の部分に FileResponseElement オブジェクトの任意の組み合わせを使用します。 たとえば、プロバイダーは、3 つの異なる FileResponseElement オブジェクトには、分割の応答を返すことができ、別の物理ファイルに各オブジェクトのオフセットから取得できます。"
  syntax:
    content: 'public class FileResponseElement : System.Web.Caching.ResponseElement'
  inheritance:
  - System.Object
  - System.Web.Caching.ResponseElement
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  id: '#ctor(System.String,System.Int64,System.Int64)'
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref>クラスです。"
  remarks: "出力キャッシュ応答を全体が&1; つのファイルに含まれている場合、プロバイダーを初期化します、 <xref:System.Web.Caching.FileResponseElement>0 の場合と、ファイル全体のサイズに等しい長さのオフセットを使用してクラス</xref:System.Web.Caching.FileResponseElement>。 応答をキャッシュする完全な出力がファイルの一部のみに含まれている場合、プロバイダーを初期化します、 <xref:System.Web.Caching.FileResponseElement>、出力はキャッシュ応答を開始するファイルとそのファイルに格納されている出力キャッシュの応答のサイズに等しい長さのオフセットを使用してクラス</xref:System.Web.Caching.FileResponseElement>。"
  syntax:
    content: public FileResponseElement (string path, long offset, long length);
    parameters:
    - id: path
      type: System.String
      description: "ファイルの完全修飾パス。"
    - id: offset
      type: System.Int64
      description: "文字列を開始するファイル内の位置。"
    - id: length
      type: System.Int64
      description: "データの長さ、ファイルに出力キャッシュ データを表すオフセットから始まるによって定義された`path`です。"
  overload: System.Web.Caching.FileResponseElement.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>length</code>0 未満です。"
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Length
  id: Length
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "データを含む、オフセットで開始、データのサイズを取得、 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref>インスタンス。"
  remarks: "出力キャッシュ応答を全体が&1; つのファイルに含まれている場合、出力キャッシュ プロバイダーを初期化します、<xref:System.Web.Caching.FileResponseElement>ファイル全体のサイズの長さを使用してクラス</xref:System.Web.Caching.FileResponseElement>。 応答をキャッシュする完全な出力がファイルの一部のみに含まれている場合、プロバイダーを初期化します、<xref:System.Web.Caching.FileResponseElement>そのファイルに格納されている出力キャッシュ応答のサイズの長さを使用してクラス</xref:System.Web.Caching.FileResponseElement>。"
  syntax:
    content: public long Length { get; }
    return:
      type: System.Int64
      description: "データのサイズ。"
  overload: System.Web.Caching.FileResponseElement.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Offset
  id: Offset
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "ファイル内の位置を取得からのデータ、 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref>インスタンスが起動します。"
  remarks: "出力キャッシュ応答を全体が&1; つのファイルに含まれている場合、プロバイダーを初期化します、<xref:System.Web.Caching.FileResponseElement>ファイルの一部だけに完全な出力応答をキャッシュする場合は、オフセット&0; を使用して、クラスが含まれている、プロバイダーの初期化、<xref:System.Web.Caching.FileResponseElement>出力はキャッシュ応答を開始するファイルのオフセットを使用してクラス</xref:System.Web.Caching.FileResponseElement></xref:System.Web.Caching.FileResponseElement>。"
  syntax:
    content: public long Offset { get; }
    return:
      type: System.Int64
      description: "ファイル内のデータの開始点です。"
  overload: System.Web.Caching.FileResponseElement.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.FileResponseElement.Path
  id: Path
  parent: System.Web.Caching.FileResponseElement
  langs:
  - csharp
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "データを含むファイルの場所を取得、 <xref href=&quot;System.Web.Caching.FileResponseElement&quot;> </xref>インスタンス。"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "ファイルの完全修飾パス。"
  overload: System.Web.Caching.FileResponseElement.Path*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Caching.ResponseElement
  isExternal: false
  name: System.Web.Caching.ResponseElement
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Caching.FileResponseElement.#ctor(System.String,System.Int64,System.Int64)
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement(String,Int64,Int64)
  nameWithType: FileResponseElement.FileResponseElement(String,Int64,Int64)
  fullName: System.Web.Caching.FileResponseElement.FileResponseElement(String,Int64,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.FileResponseElement.Length
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
  fullName: System.Web.Caching.FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
  fullName: System.Web.Caching.FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
  fullName: System.Web.Caching.FileResponseElement.Path
- uid: System.Web.Caching.FileResponseElement.#ctor*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: FileResponseElement
  nameWithType: FileResponseElement.FileResponseElement
- uid: System.Web.Caching.FileResponseElement.Length*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Length
  nameWithType: FileResponseElement.Length
- uid: System.Web.Caching.FileResponseElement.Offset*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Offset
  nameWithType: FileResponseElement.Offset
- uid: System.Web.Caching.FileResponseElement.Path*
  parent: System.Web.Caching.FileResponseElement
  isExternal: false
  name: Path
  nameWithType: FileResponseElement.Path
