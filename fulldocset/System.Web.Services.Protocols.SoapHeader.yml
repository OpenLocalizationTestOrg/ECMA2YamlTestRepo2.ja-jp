### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeader
  id: SoapHeader
  children:
  - System.Web.Services.Protocols.SoapHeader.#ctor
  - System.Web.Services.Protocols.SoapHeader.Actor
  - System.Web.Services.Protocols.SoapHeader.DidUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  - System.Web.Services.Protocols.SoapHeader.EncodedRelay
  - System.Web.Services.Protocols.SoapHeader.MustUnderstand
  - System.Web.Services.Protocols.SoapHeader.Relay
  - System.Web.Services.Protocols.SoapHeader.Role
  langs:
  - csharp
  name: SoapHeader
  nameWithType: SoapHeader
  fullName: System.Web.Services.Protocols.SoapHeader
  type: Class
  summary: "派生クラスでオーバーライドされると、SOAP ヘッダーの内容を表します。"
  remarks: "SOAP ヘッダーは、データは直接関連していない場合、XML Web サービス メソッドの主な機能を XML Web サービス メソッドとの間のデータを渡すためのメソッドを提供します。 たとえば、XML Web サービスには、カスタム認証方式する必要のあるいくつかの XML Web サービス メソッドがあります。 カスタム認証スキームの場合、各 XML Web サービス メソッドにパラメーターを追加する代わりに、 <xref:System.Web.Services.Protocols.SoapHeaderAttribute>、SoapHeader から派生するクラスを参照する、各 XML Web サービス メソッドに適用できます</xref:System.Web.Services.Protocols.SoapHeaderAttribute>。 SoapHeader から派生したクラスの実装では、カスタム認証方式を処理します。 この方法では、XML Web サービス メソッドは、固有の機能のみを実装し、SOAP ヘッダーを使用して追加の機能を追加します。       一覧を次に受信し、SOAP ヘッダーの処理の基本手順の概要: 1。  SOAP ヘッダーに渡されたデータを表す SoapHeader から派生するクラスを作成します。      2.  XML Web サービスを実装するクラスまたは XML Web サービス クライアント プロキシ クラス、最初の手順で作成した型のメンバーを追加します。      3.  適用、 <xref:System.Web.Services.Protocols.SoapHeaderAttribute>XML Web サービス メソッドまたはプロキシ クラスで対応するメソッドは、2 番目の手順で作成、メンバーを指定する、<xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>プロパティ</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A></xref:System.Web.Services.Protocols.SoapHeaderAttribute>。      4.  XML Web サービス メソッドまたは XML Web サービス クライアント コードの中でアクセス、 <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>SOAP ヘッダーで送信されるデータを処理するプロパティ</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>。"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Xml.Serialization.SoapType(IncludeInSchema=false)]

      [System.Xml.Serialization.XmlType(IncludeInSchema=false)]

      public abstract class SoapHeader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref>クラスです。"
  syntax:
    content: protected SoapHeader ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHeader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  id: Actor
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または SOAP ヘッダーの受信者を設定します。"
  remarks: "SOAP ヘッダーの受信者を設定するには、アクター プロパティを設定します。 、XML Web サービスとの通信に使用する SOAP プロトコルのバージョンに関係なく、.NET Framework では、SOAP プロトコルのバージョンに固有の SOAP メッセージが自動的に生成されます。 具体的には、XML 要素、および受信者を表す XML 名前空間は、2 つのバージョンが異なります。       SOAP ヘッダーを受信する XML Web サービスは、いずれかを取得することによって目的の受信者を取得できます、<xref:System.Web.Services.Protocols.SoapHeader.Role%2A>またはアクター プロパティ</xref:System.Web.Services.Protocols.SoapHeader.Role%2A>。       受信者、`Body`要素と、SOAP ヘッダー内の各、 `Header` SOAP メッセージの要素が必要、同じにできません。 場合、 `Header` SOAP メッセージに要素が存在し、XML Web サービス メソッドまたは中間層との間に送信できる追加のデータを表します。 SOAP と呼ばれる、そのデータの受信者`Actor`バージョン 1.1 では、XML Web サービス メソッドの URI よりも別の URI を指定できます。       詳細については、SOAP`actor`属性 http://www.w3.org/TR/SOAP/ では、SOAP 仕様を参照してください。"
  example:
  - "The following XML Web service client calls the `MyWebMethod` XML Web service method after creating a custom SOAP header of type `MyHeader` and setting the Actor property to `http://www.contoso.com/MySoapHeaderHandler`.  \n  \n [!code-cs[Classic SoapHeader.Actor Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_16_1.cs)]\n [!code-cpp[Classic SoapHeader.Actor Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_16_1.cpp)]\n [!code-vb[Classic SoapHeader.Actor Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_16_1.vb)]"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "SOAP ヘッダーの受信者。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.Services.Protocols.SoapHeader.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  id: DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または XML Web サービス メソッドが、SOAP ヘッダーを正しく処理されたかどうかを示す値を設定します。"
  remarks: "SOAP ヘッダーの XML Web サービスで定義されている場合は、ASP.NET は、XML Web サービス メソッドに DidUnderstand の初期値の設定で、SOAP ヘッダーを正しく処理を想定しています`true`です。 初期値は、SOAP ヘッダーの XML Web サービスで定義されていない場合`false`です。 ASP.NET には、SOAP が検出された場合 DidUnderstand に設定と、XML Web サービス メソッドに渡されるヘッダー`false`メソッドから制御が戻た後、<xref:System.Web.Services.Protocols.SoapHeaderException>が元は、XML Web サービス メソッドから、結果の代わりに XML Web サービス クライアントにスローされます</xref:System.Web.Services.Protocols.SoapHeaderException>。"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, the `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header. For SOAP headers that `MyWebMethod` can process, DidUnderstand is set to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool DidUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SOAP ヘッダーが正しく処理された場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  id: EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定の値、 <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP プロトコル バージョン 1.1 と通信するときの SOAP ヘッダーの XML 属性です。"
  remarks: "このプロパティは使用しないでください。 代わりに使用して、<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>プロパティ</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>。"
  example:
  - >-
    [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/cpp/p-system.web.services.pr_37_1.cpp)]
     [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_37_1.vb)]
     [!code-cs[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/csharp/p-system.web.services.pr_37_1.cs)]
  syntax:
    content: public string EncodedMustUnderstand { get; set; }
    return:
      type: System.String
      description: "値、 <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref>属性。 既定値は、「0」です。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '以外のプロパティが値に設定します。&quot;0&quot;、&quot;1&quot;、&quot;true&quot;または&quot;false&quot;です。'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  id: EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定の値、 <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP プロトコル バージョン 1.2 と通信するときの SOAP ヘッダーの XML 属性です。"
  remarks: "このプロパティは使用しないでください。 代わりに使用して、<xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>プロパティ</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>。"
  syntax:
    content: public string EncodedMustUnderstand12 { get; set; }
    return:
      type: System.String
      description: "値、 <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP ヘッダーの XML 属性です。 既定値は、「0」です。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '以外のプロパティが値に設定します。&quot;0&quot;、&quot;1&quot;、&quot;true&quot;または&quot;false&quot;です。'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  id: EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または SOAP 1.2 ヘッダーのリレー属性を設定します。"
  remarks: "EncodedRelay プロパティは、SOAP 1.2 にのみ適用され、次のダウン ストリーム ノードにメッセージを転送するときに、メッセージの受信者がこのヘッダーを転送するかどうかを示します。 .NET Framework では、SOAP 中継ぎ局はサポートされていません、このプロパティはシリアル化し逆シリアル化は無視されます。"
  syntax:
    content: public string EncodedRelay { get; set; }
    return:
      type: System.String
      description: "「0」、&quot;false&quot;、「1」または&quot;true&quot;です。"
  overload: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  id: MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref>理解する必要があります。"
  remarks: "When an XML Web service client adds a SOAP header to an XML Web service method call with the MustUnderstand property set to `true`, the XML Web service method must set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property to `true`; otherwise, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown back to the XML Web service client by ASP.NET.  \n  \n Although both the <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> and MustUnderstand properties can be used to set the value of the `mustUnderstand` attribute within the SOAP header, the MustUnderstand property allows you to set the attribute using a Boolean value.  \n  \n For details on adding SOAP headers to clients, see [&#91;\\<topic://cpconusingsoapheaders>&#93;](http://msdn.microsoft.com/en-us/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)."
  example:
  - "The following XML Web service client defines a custom SOAP header of type `MyHeader`, sets the MustUnderstand property to `true`, and invokes the `MyWebMethod` XML Web service method. If the XML Web service method does not set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property of the `MyHeader` SOAP header to `true`, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown.  \n  \n [!code-cs[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_18_1.cs)]\n [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_18_1.vb)]\n [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_18_1.cpp)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>XML Web サービスの解釈および処理する必要があります正しくかどうか、 <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  id: Relay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または SOAP ヘッダーが、現在のノードがヘッダーを認識していない場合、次の SOAP ノードに中継するかどうかを示す値を設定します。"
  remarks: "既定の SOAP 1.2 の処理規則では、次のノードにメッセージを渡す前に SOAP 処理ノードによって認識されないヘッダーを削除する SOAP ノードが必要です。"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SOAP ヘッダーが「リレー」属性が&quot;true&quot;に設定それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapHeader.Relay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Role
  id: Role
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または SOAP ヘッダーの受信者を設定します。"
  remarks: "SOAP ヘッダーの受信者を設定するには、設定、<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>プロパティ</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>。 、XML Web サービスとの通信に使用する SOAP プロトコルのバージョンに関係なく、.NET Framework では、SOAP プロトコルのバージョンに固有の SOAP メッセージが自動的に生成されます。 具体的には、XML 要素、および受信者を表す XML 名前空間は、2 つのバージョンが異なります。       SOAP ヘッダーを受信する XML Web サービスは、いずれかの役割を取得することによって目的の受信者を取得できますか<xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>プロパティ</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>。       受信者、`Body`要素と、SOAP ヘッダー内の各、 `Header` SOAP メッセージの要素が必要、同じにできません。 場合、 `Header` SOAP メッセージに要素が存在し、XML Web サービス メソッドまたは中間層との間に送信できる追加のデータを表します。 SOAP と呼ばれる、そのデータの受信者`Role`バージョンは、SOAP 仕様と SOAP 1.2 で`Actor`バージョン 1.1 では、XML Web サービス メソッドの URI よりも別の URI を指定できます。       詳細については、SOAP`actor`属性 http://www.w3.org/TR/SOAP/ では、SOAP 仕様を参照してください。"
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "SOAP ヘッダーの受信者を表す URI。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.Services.Protocols.SoapHeader.Role*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
- uid: System.Web.Services.Protocols.SoapHeader.#ctor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader
  nameWithType: SoapHeader.SoapHeader
- uid: System.Web.Services.Protocols.SoapHeader.Actor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
