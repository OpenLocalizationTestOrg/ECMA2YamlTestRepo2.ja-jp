### YamlMime:ManagedReference
items:
- uid: System.IO.Log.LogExtentCollection
  id: LogExtentCollection
  children:
  - System.IO.Log.LogExtentCollection.Add(System.String)
  - System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  - System.IO.Log.LogExtentCollection.Count
  - System.IO.Log.LogExtentCollection.FreeCount
  - System.IO.Log.LogExtentCollection.GetEnumerator
  - System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  - System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  - System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: LogExtentCollection
  nameWithType: LogExtentCollection
  fullName: System.IO.Log.LogExtentCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>オブジェクトに関連付けられている、 <xref href=&quot;System.IO.Log.LogStore&quot;></xref>です。"
  remarks: "このクラスには、 <xref:System.IO.Log.LogExtent> <xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>に関連付けられているオブジェクト</xref:System.IO.Log.LogExtent>のコレクションが含まれています。 A<xref:System.IO.Log.LogStore>インスタンスによって表されるディスク エクステントのコレクション内のデータを格納する<xref:System.IO.Log.LogExtent>インスタンス</xref:System.IO.Log.LogExtent></xref:System.IO.Log.LogStore>。 特定の<xref:System.IO.Log.LogExtent>いずれかに関連付けられて<xref:System.IO.Log.LogStore>、および<xref:System.IO.Log.LogExtent>、同じオブジェクト<xref:System.IO.Log.LogStore>のと同じサイズです</xref:System.IO.Log.LogStore></xref:System.IO.Log.LogExtent></xref:System.IO.Log.LogStore></xref:System.IO.Log.LogExtent>。 領域が追加されから削除された、<xref:System.IO.Log.LogStore>エクステント増加分インスタンス</xref:System.IO.Log.LogStore>。       <xref:System.IO.Log.LogExtent>オブジェクトは、ディスク上のファイルとして表されます、、、移動したりしないでとして通常のファイルを削除します。</xref:System.IO.Log.LogExtent> 。 追加および削除すると、このクラスによって提供されるメソッドを使用する代わりに、<xref:System.IO.Log.LogExtent>直接インスタンス化します</xref:System.IO.Log.LogExtent>。 エクステントは、アクティブなデータがなくなったときに通常削除されます。 ただし場合、`force`内のパラメーター、<xref:System.IO.Log.LogExtentCollection.Remove%2A>メソッドは`true`、直ちに削除できない場合、例外がスローされます</xref:System.IO.Log.LogExtentCollection.Remove%2A>。       つまり、LogExtentCollection で最後のエクステントを削除することはできません、 <xref:System.IO.Log.LogExtentCollection.Count%2A>、エクステントの追加後にプロパティを&0; にすることはできません</xref:System.IO.Log.LogExtentCollection.Count%2A>。"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and LogExtentCollection classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/t-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/t-system.io.log.logexten_1.vb)]"
  syntax:
    content: 'public sealed class LogExtentCollection : System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IO.Log.LogExtent>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  id: Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "追加、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>コレクションへのインスタンス。"
  remarks: "新しく追加されたのサイズ<xref:System.IO.Log.LogExtent>インスタンスは、既存のサイズと同じ<xref:System.IO.Log.LogExtent>コレクション内のインスタンス</xref:System.IO.Log.LogExtent></xref:System.IO.Log.LogExtent>。      > [!NOTE] > を最初に追加する際は、このメソッドを使用しない<xref:System.IO.Log.LogExtent>をコレクションにします</xref:System.IO.Log.LogExtent>。"
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/m-system.io.log.logexten_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/m-system.io.log.logexten_1.vb)]"
  syntax:
    content: public void Add (string path);
    parameters:
    - id: path
      type: System.String
      description: "追加するログ エクステントのパス。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたログ ストア ファイル名<code> path </code>が無効です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "最初のエクステントにサイズを指定する必要があります。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。       - または - で指定されたファイル<code> path </code>ファイルまたはディレクトリが既に存在するために作成することはできません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "レコード シーケンスがいっぱいです。       - または - 記憶域ディスクまたはメディアがいっぱいです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  id: Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "新たに作成<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>指定したサイズで、コレクションに追加します。"
  remarks: "コレクションが空でない場合、指定されたサイズはコレクション内の他のエクステントのサイズと少なくとも同じ大きさである必要があります。 ここで、`size`パラメーターは無視され、エクステントはコレクション内の他のエクステントと同じサイズで作成します。"
  syntax:
    content: public void Add (string path, long size);
    parameters:
    - id: path
      type: System.String
      description: "ログ エクステントのパス。"
    - id: size
      type: System.Int64
      description: "ログ エクステントのサイズ。"
  overload: System.IO.Log.LogExtentCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path </code>or <code>size</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>archiveTail</code>有効な範囲内にない。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたログ ストア ファイル名<code> path </code>が無効です。       <code>size</code>ストア内の他のエクステントのサイズより小さくなります。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "最初のエクステントにサイズを指定する必要があります。       または、重複するエクステント名は使用できません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。       - または - で指定されたファイル<code> path </code>ファイルまたはディレクトリが既に存在するために作成することはできません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "レコード シーケンスがいっぱいです。       - または - 記憶域ディスクまたはメディアがいっぱいです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Count
  id: Count
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "コレクション内のログ エクステントの数を取得します。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_3_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_3_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "コレクション内のログ エクステントの数。"
  overload: System.IO.Log.LogExtentCollection.Count*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "ログ ストアが破棄されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.FreeCount
  id: FreeCount
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
  type: Property
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "無料の数を取得<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>をインスタンス化、コレクションでは、数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>データが含まれていないインスタンス。"
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.IO.Log.LogExtent> and <xref:System.IO.Log.LogExtentCollection> classes to add and emulate extents in a log sequence.  \n  \n [!code-cs[S_UELogRecordSequence#0](~/add/codesnippet/csharp/p-system.io.log.logexten_2_1.cs)]\n [!code-vb[S_UELogRecordSequence#0](~/add/codesnippet/visualbasic/p-system.io.log.logexten_2_1.vb)]"
  syntax:
    content: public int FreeCount { get; }
    return:
      type: System.Int32
      description: "無料の数<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>コレクション内のインスタンス。"
  overload: System.IO.Log.LogExtentCollection.FreeCount*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "ログ ストアが破棄されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  id: GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "列挙子を取得、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>このコレクション内のインスタンス。 このメソッドは継承できません。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
      description: "列挙子、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>このコレクション内のインスタンス。"
  overload: System.IO.Log.LogExtentCollection.GetEnumerator*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "操作は、次の理由の&1; つは有効ではありません。-列挙体が終了しました。      コレクションが変更されました。      -列挙が開始されていません。 呼び出し<xref:System.Collections.IEnumerator.MoveNext*>行う必要があります</xref:System.Collections.IEnumerator.MoveNext*>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "レコード シーケンスがいっぱいです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  id: Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "指定された削除<xref href=&quot;System.IO.Log.LogExtent&quot;></xref>インスタンスをコレクションからです。"
  remarks: "<xref:System.IO.Log.LogExtent>インスタンスは<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>のアクティブ領域の一部ではない場合にのみ、コレクションから削除できます。</xref:System.IO.Log.LogExtent> 場合、`force`パラメーターは`true`エクステントを直ちに削除できないと、例外がスローされます。 場合、`force`パラメーターは`false`エクステントを直ちに削除できないと、アクティブ領域の一部では不要になったまで、削除は遅延します。       内の最後のエクステントを削除することはできません、 <xref:System.IO.Log.LogExtentCollection>、つまり、<xref:System.IO.Log.LogExtentCollection.Count%2A>エクステントが追加されるプロパティを&0; にすることはできません</xref:System.IO.Log.LogExtentCollection.Count%2A></xref:System.IO.Log.LogExtentCollection>。"
  syntax:
    content: public void Remove (System.IO.Log.LogExtent extent, bool force);
    parameters:
    - id: extent
      type: System.IO.Log.LogExtent
      description: "<xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>インスタンスを削除します。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、エクステントを直ちに削除する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>extent</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>extent</code>コレクション内に見つかりません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>extent</code>削除できません。 依然としてアクティブ領域の一部であるか、アクセスが拒否されました。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。       - または - <code> extent </code>を削除できません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "レコード シーケンスがいっぱいです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  id: Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "削除、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>インスタンスをコレクションから指定したパスにします。"
  remarks: "<xref:System.IO.Log.LogExtent>インスタンスは<xref:System.IO.Log.LogStore>。</xref:System.IO.Log.LogStore>のアクティブ領域の一部ではない場合にのみ、コレクションから削除できます。</xref:System.IO.Log.LogExtent> 場合、`force`パラメーターは`true`エクステントを直ちに削除できないと、例外がスローされます。 場合、`force`パラメーターは`false`エクステントを直ちに削除できないと、アクティブ領域の一部では不要になったまで、削除は遅延します。       内の最後のエクステントを削除することはできません、 <xref:System.IO.Log.LogExtentCollection>、つまり、<xref:System.IO.Log.LogExtentCollection.Count%2A>エクステントが追加されるプロパティを&0; にすることはできません</xref:System.IO.Log.LogExtentCollection.Count%2A></xref:System.IO.Log.LogExtentCollection>。"
  syntax:
    content: public void Remove (string path, bool force);
    parameters:
    - id: path
      type: System.String
      description: "パス、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>インスタンスを削除します。"
    - id: force
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、エクステントを直ちに削除する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Log.LogExtentCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>or <code>force</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定したエクステント<code> path </code>コレクションで見つかったことはできません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定したエクステント<code> path </code>を削除できません。 依然としてアクティブ領域の一部であるか、アクセスが拒否されました。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "予期しない I/O 例外のため、要求を実行できませんでした。       - または - で指定したエクステント<code> path </code>を削除できません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "シーケンスが破棄された後に、メソッドが呼び出されました。"
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "プログラムの実行を継続する十分なメモリがありません。"
  - type: System.IO.Log.SequenceFullException
    commentId: T:System.IO.Log.SequenceFullException
    description: "レコード シーケンスがいっぱいです。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたログ ストアへのアクセスは、オペレーティング システムによって拒否されました。"
  platform:
  - net462
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IO.Log.LogExtentCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IO.Log
  namespace: System.IO.Log
  summary: "列挙子を取得、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>このコレクション内のインスタンス。 このメソッドは継承できません。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "列挙子、 <xref href=&quot;System.IO.Log.LogExtent&quot;> </xref>このコレクション内のインスタンス。"
  overload: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: System.IO.Log.SequenceFullException
  parent: System.IO.Log
  isExternal: false
  name: SequenceFullException
  nameWithType: SequenceFullException
  fullName: System.IO.Log.SequenceFullException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.Log.LogExtentCollection.Add(System.String)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String)
  nameWithType: LogExtentCollection.Add(String)
  fullName: System.IO.Log.LogExtentCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Log.LogExtentCollection.Add(System.String,System.Int64)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add(String,Int64)
  nameWithType: LogExtentCollection.Add(String,Int64)
  fullName: System.IO.Log.LogExtentCollection.Add(String,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.Log.LogExtentCollection.Count
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
  fullName: System.IO.Log.LogExtentCollection.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Log.LogExtentCollection.FreeCount
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
  fullName: System.IO.Log.LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: LogExtentCollection.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IO.Log.LogExtent}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<LogExtent>
  nameWithType: IEnumerator<LogExtent>
  fullName: System.Collections.Generic.IEnumerator<System.IO.Log.LogExtent>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IO.Log.LogExtent>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Log.LogExtent
    name: LogExtent
    nameWithType: LogExtent
    fullName: LogExtent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.Log.LogExtentCollection.Remove(System.IO.Log.LogExtent,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(LogExtent,Boolean)
  nameWithType: LogExtentCollection.Remove(LogExtent,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(LogExtent,Boolean)
- uid: System.IO.Log.LogExtent
  parent: System.IO.Log
  isExternal: false
  name: LogExtent
  nameWithType: LogExtent
  fullName: System.IO.Log.LogExtent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Log.LogExtentCollection.Remove(System.String,System.Boolean)
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove(String,Boolean)
  nameWithType: LogExtentCollection.Remove(String,Boolean)
  fullName: System.IO.Log.LogExtentCollection.Remove(String,Boolean)
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IO.Log.LogExtentCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IO.Log.LogExtentCollection.Add*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Add
  nameWithType: LogExtentCollection.Add
- uid: System.IO.Log.LogExtentCollection.Count*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Count
  nameWithType: LogExtentCollection.Count
- uid: System.IO.Log.LogExtentCollection.FreeCount*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: FreeCount
  nameWithType: LogExtentCollection.FreeCount
- uid: System.IO.Log.LogExtentCollection.GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: LogExtentCollection.GetEnumerator
- uid: System.IO.Log.LogExtentCollection.Remove*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: Remove
  nameWithType: LogExtentCollection.Remove
- uid: System.IO.Log.LogExtentCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IO.Log.LogExtentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: LogExtentCollection.System.Collections.IEnumerable.GetEnumerator
