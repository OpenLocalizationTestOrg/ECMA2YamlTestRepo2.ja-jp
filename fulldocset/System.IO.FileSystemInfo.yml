### YamlMime:ManagedReference
items:
- uid: System.IO.FileSystemInfo
  id: FileSystemInfo
  children:
  - System.IO.FileSystemInfo.#ctor
  - System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.Attributes
  - System.IO.FileSystemInfo.CreationTime
  - System.IO.FileSystemInfo.CreationTimeUtc
  - System.IO.FileSystemInfo.Delete
  - System.IO.FileSystemInfo.Exists
  - System.IO.FileSystemInfo.Extension
  - System.IO.FileSystemInfo.FullName
  - System.IO.FileSystemInfo.FullPath
  - System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.FileSystemInfo.LastAccessTime
  - System.IO.FileSystemInfo.LastAccessTimeUtc
  - System.IO.FileSystemInfo.LastWriteTime
  - System.IO.FileSystemInfo.LastWriteTimeUtc
  - System.IO.FileSystemInfo.Name
  - System.IO.FileSystemInfo.OriginalPath
  - System.IO.FileSystemInfo.Refresh
  langs:
  - csharp
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: System.IO.FileSystemInfo
  type: Class
  summary: "両方の基本クラスを提供<xref href=&quot;System.IO.FileInfo&quot;></xref>と<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>オブジェクト。"
  remarks: "The FileSystemInfo class contains methods that are common to file and directory manipulation. A FileSystemInfo object can represent either a file or a directory, thus serving as the basis for <xref:System.IO.FileInfo> or <xref:System.IO.DirectoryInfo> objects. Use this base class when parsing a lot of files and directories.  \n  \n A derived class can inherit from FileSystemInfo only if the derived class has the AllAccess permission from the <xref:System.Security.Permissions.FileIOPermissionAccess> enumeration.  \n  \n In members that accept a path, the path can refer to a file or just a directory. The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name. For example, all the following are acceptable paths:  \n  \n-   \"c:\\\\\\MyDir\\\\\\MyFile.txt\" in C#, or \"c:\\MyDir\\MyFile.txt\" in Visual Basic.  \n  \n-   \"c:\\\\\\MyDir\" in C#, or \"c:\\MyDir\" in Visual Basic.  \n  \n-   \"MyDir\\\\\\MySubdir\" in C#, or \"MyDir\\MySubDir\" in Visual Basic.  \n  \n-   \"\\\\\\\\\\\\\\MyServer\\\\\\MyShare\" in C#, or \"\\\\\\MyServer\\MyShare\" in Visual Basic.  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to loop through all the files and directories, querying some information about each entry.  \n  \n [!code-cs[FileSystemInfo#1](~/add/codesnippet/csharp/t-system.io.filesysteminfo_1.cs)]\n [!code-cpp[FileSystemInfo#1](~/add/codesnippet/cpp/t-system.io.filesysteminfo_1.cpp)]\n [!code-vb[FileSystemInfo#1](~/add/codesnippet/visualbasic/t-system.io.filesysteminfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class FileSystemInfo : MarshalByRefObject, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor
  id: '#ctor'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref>クラスです。"
  remarks: "共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected FileSystemInfo ();
    parameters: []
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref>シリアル化されたデータを持つクラス。"
  remarks: "共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected FileSystemInfo (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>スローされた例外に関するシリアル化されたオブジェクト データを保持します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>ソースまたは転送先に関するコンテキスト情報を含む</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.IO.FileSystemInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定した<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>が null です。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Attributes
  id: Attributes
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または現在のファイルまたはディレクトリの属性を設定します。"
  remarks: "場合は、属性プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>から、次のいずれかのオブジェクトが返された<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>最新の値を取得する呼び出し、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       このプロパティの値は、archive、compressed、ディレクトリ、非表示、オフライン、読み取り専用のシステム、および一時ファイル属性のフラグの組み合わせです。       この値を設定すると、ビットごとの OR 演算子を使用して (`|` (C#) または`Or`Visual Basic で) 複数の値を適用します。 属性プロパティに既存の値を保持するには、割り当てに属性のプロパティの値を含めます。 例えば：`exampleFile.Attributes = exampleFile.Attributes | FileAttributes.ReadOnly;`"
  example:
  - "The following example demonstrates the Attributes property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_3_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_3_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_3_1.vb)]"
  syntax:
    content: public System.IO.FileAttributes Attributes { get; set; }
    return:
      type: System.IO.FileAttributes
      description: "<xref href=&quot;System.IO.FileAttributes&quot;></xref>現在の<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>です。"
  overload: System.IO.FileSystemInfo.Attributes*
  exceptions:
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "指定されたファイルが存在しません。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません。たとえば、マップされていないドライブ上にあります。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "呼び出し元は、無効なファイル属性を設定しようとします。       または、ユーザーは属性値を設定しようとしていますが、書き込みアクセス許可がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTime
  id: CreationTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または現在のファイルまたはディレクトリの作成時刻を設定します。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       場合、CreationTime プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>から、次のいずれかのオブジェクトが返された<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>、最新の値を取得する、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC) では、現地時刻に調整されます。       NTFS でフォーマットされたドライブは、ファイルのメタ情報、短時間に、ファイルの作成日時などをキャッシュ可能性があります。 このプロセスは、ファイルのトンネリングと呼ばれます。 その結果、上書きするか、既存のファイルを置き換えている場合、ファイルの作成時刻を明示的に設定する必要があります。       このプロパティの値が`null`場合、ファイル システムを含む、<xref:System.IO.FileSystemInfo>オブジェクトがこの情報をサポートしていません</xref:System.IO.FileSystemInfo>。"
  example:
  - "The following example demonstrates the CreationTime property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_4_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_4_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_4_1.vb)]"
  syntax:
    content: public DateTime CreationTime { get; set; }
    return:
      type: System.DateTime
      description: "現在の作成日時<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>オブジェクト。"
  overload: System.IO.FileSystemInfo.CreationTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません。たとえば、マップされていないドライブ上にあります。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元は、無効な作成時間を設定しようとします。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  id: CreationTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または現在のファイルまたはディレクトリの作成時刻、世界協定時刻 (UTC) を設定します。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       場合、CreationTimeUtc プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>オブジェクトは、次のいずれかから返されました<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>、最新の値を取得する、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC)。       NTFS でフォーマットされたドライブは、ファイルのメタ情報、短時間に、ファイルの作成日時などをキャッシュ可能性があります。 このプロセスは、ファイルのトンネリングと呼ばれます。 その結果、上書きするか、既存のファイルを置き換えている場合、ファイルの作成時刻を明示的に設定する必要があります。       このプロパティの値が`null`場合、ファイル システムを含む、<xref:System.IO.FileSystemInfo>オブジェクトがこの情報をサポートしていません</xref:System.IO.FileSystemInfo>。"
  syntax:
    content: public DateTime CreationTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "現在の UTC 形式で作成日時<xref href=&quot;System.IO.FileSystemInfo&quot;></xref>オブジェクト。"
  overload: System.IO.FileSystemInfo.CreationTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません。たとえば、マップされていないドライブ上にあります。"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元は、無効なアクセス時間を設定しようとします。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Delete
  id: Delete
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルまたはディレクトリを削除します。"
  syntax:
    content: public abstract void Delete ();
    parameters: []
  overload: System.IO.FileSystemInfo.Delete*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません。たとえば、マップされていないドライブ上にあります。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: 'ファイルまたはディレクトリに開いているハンドルがあり、オペレーティング システムが Windows XP 以前のバージョン。 このハンドルを開いてディレクトリとファイルを列挙することがあります。 詳細については、次を参照してください。[する方法: ディレクトリと列挙ファイル](~/add/includes/ajax-current-ext-md.md)です。'
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Exists
  id: Exists
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルまたはディレクトリが存在するかどうかを示す値を取得します。"
  remarks: "共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public abstract bool Exists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイルまたはディレクトリが存在する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.FileSystemInfo.Exists*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Extension
  id: Extension
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルの拡張子部分を表す文字列を取得します。"
  remarks: "The `Extension` property returns the <xref:System.IO.FileSystemInfo> extension, including the period (.). For example, for a file c:\\NewFile.txt, this property returns \".txt\".  \n  \n The following table lists examples of other typical or related I/O tasks.  \n  \n|To do this...|See the example in this topic...|  \n|-------------------|--------------------------------------|  \n|Create a text file.|[How to: Write Text to a File](~/add/includes/ajax-current-ext-md.md)|  \n|Write to a text file.|[How to: Write Text to a File](../Topic/How%20to:%20Write%20Text%20to%20a%20File.md)|  \n|Read from a text file.|[How to: Read Text from a File](~/add/includes/ajax-current-ext-md.md)|  \n|Retrieve the fully qualified path of a file.|<xref:System.IO.Path.GetFullPath%2A>|  \n|Retrieve only the file name a path.|<xref:System.IO.Path.GetFileNameWithoutExtension%2A>|  \n|Retrieve only the directory name from a path.|<xref:System.IO.Path.GetDirectoryName%2A>|  \n|Change the extension of a file.|<xref:System.IO.Path.ChangeExtension%2A>|"
  syntax:
    content: public string Extension { get; }
    return:
      type: System.String
      description: "含む文字列、 <xref href=&quot;System.IO.FileSystemInfo&quot;> </xref>拡張機能です。"
  overload: System.IO.FileSystemInfo.Extension*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullName
  id: FullName
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ディレクトリまたはファイルの完全なパスを取得します。"
  remarks: "For example, for a file c:\\NewFile.txt, this property returns \"c:\\NewFile.txt\".  \n  \n For a list of common I/O tasks, see [Common I/O Tasks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates the FullName property. This code example is part of a larger example provided for the <xref:System.IO.FileSystemInfo> class.  \n  \n [!code-cs[FileSystemInfo#2](~/add/codesnippet/csharp/p-system.io.filesystemin_0_1.cs)]\n [!code-cpp[FileSystemInfo#2](~/add/codesnippet/cpp/p-system.io.filesystemin_0_1.cpp)]\n [!code-vb[FileSystemInfo#2](~/add/codesnippet/visualbasic/p-system.io.filesystemin_0_1.vb)]"
  syntax:
    content: public virtual string FullName { get; }
    return:
      type: System.String
      description: "完全なパスを含む文字列。"
  overload: System.IO.FileSystemInfo.FullName*
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "完全修飾パスとファイル名は、260 文字以上です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.FullPath
  id: FullPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ディレクトリまたはファイルの完全修飾パスを表します。"
  syntax:
    content: protected string FullPath;
    return:
      type: System.String
      description: "追加します。"
  exceptions:
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "完全修飾パスは、260 文字以上です。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "セット、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ファイル名と追加の例外情報を含むオブジェクト。"
  remarks: "共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>スローされた例外に関するシリアル化されたオブジェクト データを保持します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "<xref:System.Runtime.Serialization.StreamingContext>ソースまたは転送先に関するコンテキスト情報を含む</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.IO.FileSystemInfo.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTime
  id: LastAccessTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または現在のファイルまたはディレクトリに最後にアクセスした時刻を設定します。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC) では、現地時刻に調整されます。       値、<xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>プロパティは事前にキャッシュする場合の現在のインスタンス、<xref:System.IO.FileSystemInfo>から、次のいずれかのオブジェクトが返された<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>最新の値を取得する呼び出し、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo></xref:System.IO.FileSystemInfo.LastAccessTimeUtc%2A>。"
  example:
  - "The following code example demonstrates the updating of the LastAccessTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, LastAccessTime and <xref:System.IO.FileSystemInfo.LastWriteTime%2A> properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_2_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_2_1.vb)]"
  syntax:
    content: public DateTime LastAccessTime { get; set; }
    return:
      type: System.DateTime
      description: "現在のファイルまたはディレクトリに時間が最後にアクセスします。"
  overload: System.IO.FileSystemInfo.LastAccessTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元が、無効なアクセス時間を設定しようとしています。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  id: LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または世界協定時刻 (UTC) で、現在のファイルまたはディレクトリに最後にアクセスされた時間を設定します。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       場合、LastAccessTimeUtc プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>オブジェクトは、次のいずれかから返されました<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>、最新の値を取得する、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC)。       共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public DateTime LastAccessTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "現在のファイルまたはディレクトリに UTC 時刻に最後にアクセスします。"
  overload: System.IO.FileSystemInfo.LastAccessTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元は、無効なアクセス時間を設定しようとします。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTime
  id: LastWriteTime
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または設定すると、現在のファイルまたはディレクトリに最後に書き込んだ時間です。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       場合、LastWriteTime プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>から、次のいずれかのオブジェクトが返された<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>-<xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>最新の値を取得する呼び出し、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC) では、現地時刻に調整されます。       このプロパティの値が`null`ファイルを含む、ファイル システムがこの情報をサポートしていない場合。"
  example:
  - "The following code example demonstrates the updating of the LastWriteTime property through a \"touch\" operation. In this example, the file is \"touched\", updating the <xref:System.IO.FileSystemInfo.CreationTime%2A>, <xref:System.IO.FileSystemInfo.LastAccessTime%2A> and LastWriteTime properties to the current date and time.  \n  \n [!code-cs[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/csharp/p-system.io.filesystemin_1_1.cs)]\n [!code-vb[System.IO.FileSystemInfo_touch#00](~/add/codesnippet/visualbasic/p-system.io.filesystemin_1_1.vb)]"
  syntax:
    content: public DateTime LastWriteTime { get; set; }
    return:
      type: System.DateTime
      description: "現在のファイルが最後に書き込んだ時間です。"
  overload: System.IO.FileSystemInfo.LastWriteTime*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元は、無効な書き込み時間を設定しようとします。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  id: LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得または現在のファイルまたはディレクトリに最後に書き込んだ場合、世界協定時刻 (UTC) で、時間を設定します。"
  remarks: "**注**値を持つが継続的に更新されない、オペレーティング システムでネイティブ関数を使用しているために、このメソッドは、不正確な値を返す可能性があります。       場合、LastWriteTimeUtc プロパティの値が事前にキャッシュの現在のインスタンス、<xref:System.IO.FileSystemInfo>オブジェクトは、次のいずれかから返されました<xref:System.IO.DirectoryInfo>メソッド:- <xref:System.IO.DirectoryInfo.GetDirectories%2A>- <xref:System.IO.DirectoryInfo.GetFiles%2A>- <xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A>- <xref:System.IO.DirectoryInfo.EnumerateDirectories%2A>- <xref:System.IO.DirectoryInfo.EnumerateFiles%2A>- <xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A>、最新の値を取得する、<xref:System.IO.FileSystemInfo.Refresh%2A>メソッド</xref:System.IO.FileSystemInfo.Refresh%2A></xref:System.IO.DirectoryInfo.EnumerateFileSystemInfos%2A></xref:System.IO.DirectoryInfo.EnumerateFiles%2A></xref:System.IO.DirectoryInfo.EnumerateDirectories%2A></xref:System.IO.DirectoryInfo.GetFileSystemInfos%2A></xref:System.IO.DirectoryInfo.GetFiles%2A></xref:System.IO.DirectoryInfo.GetDirectories%2A></xref:System.IO.DirectoryInfo></xref:System.IO.FileSystemInfo>。       <xref:System.IO.FileSystemInfo>オブジェクトが存在しないプロパティが戻り値の 12時 00分深夜、西暦 1601 年 1 月 1 日</xref:System.IO.FileSystemInfo>で、ファイルが記述されている場合 (西暦)世界協定時刻 (UTC)。       このプロパティの値が`null`ファイルを含む、ファイル システムがこの情報をサポートしていない場合。"
  syntax:
    content: public DateTime LastWriteTimeUtc { get; set; }
    return:
      type: System.DateTime
      description: "現在のファイルに最後に書き込んだときの UTC 時刻。"
  overload: System.IO.FileSystemInfo.LastWriteTimeUtc*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref:System.IO.FileSystemInfo.Refresh*>データを初期化できません。</xref:System.IO.FileSystemInfo.Refresh*>"
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "現在のオペレーティング システムが Windows NT 以降です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "呼び出し元は、無効な書き込み時間を設定しようとします。"
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Name
  id: Name
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルの場合は、ファイルの名前を取得します。 ディレクトリの場合に、階層が存在する場合、階層内の最後のディレクトリの名前を取得します。 それ以外の場合、 <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref>プロパティは、ディレクトリの名前を取得します。"
  remarks: "For a directory, `Name` returns only the name of the parent directory, such as Dir, not c:\\Dir. For a subdirectory, `Name` returns only the name of the subdirectory, such as Sub1, not c:\\Dir\\Sub1.  \n  \n For a file, `Name` returns only the file name and file name extension, such as MyFile.txt, not c:\\Dir\\Myfile.txt."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "親ディレクトリの名前、階層では、最後のディレクトリの名前またはファイル名拡張子を含む、ファイルの名前である文字列。"
  overload: System.IO.FileSystemInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.OriginalPath
  id: OriginalPath
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "最初に指定されたユーザーが相対パスまたは絶対パス。"
  remarks: "共通 I/O タスクの一覧は、次を参照してください。[共通 I/O タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected string OriginalPath;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileSystemInfo.Refresh
  id: Refresh
  parent: System.IO.FileSystemInfo
  langs:
  - csharp
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "オブジェクトの状態を更新します。"
  remarks: "`FileSystemInfo.Refresh`現在のファイル システムからファイルのスナップショットを取得します。 `Refresh`ファイル システムが正しくないか、古くなった情報を返す場合でも、基になるファイル システムを修正することはできません。 これは、Windows 98 などのプラットフォームで発生することができます。       呼び出しを行う必要があります`Refresh`属性情報、または情報を取得しようとしています。 期限切れとなる前にします。"
  syntax:
    content: public void Refresh ();
    parameters: []
  overload: System.IO.FileSystemInfo.Refresh*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "ディスク ドライブなどのデバイス準備ができていません。"
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.FileSystemInfo.#ctor
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo()
  nameWithType: FileSystemInfo.FileSystemInfo()
  fullName: System.IO.FileSystemInfo.FileSystemInfo()
- uid: System.IO.FileSystemInfo.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.FileSystemInfo(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.FileSystemInfo.Attributes
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
  fullName: System.IO.FileSystemInfo.Attributes
- uid: System.IO.FileAttributes
  parent: System.IO
  isExternal: false
  name: FileAttributes
  nameWithType: FileAttributes
  fullName: System.IO.FileAttributes
- uid: System.IO.FileSystemInfo.CreationTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
  fullName: System.IO.FileSystemInfo.CreationTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
  fullName: System.IO.FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete()
  nameWithType: FileSystemInfo.Delete()
  fullName: System.IO.FileSystemInfo.Delete()
- uid: System.IO.FileSystemInfo.Exists
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
  fullName: System.IO.FileSystemInfo.Exists
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.FileSystemInfo.Extension
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
  fullName: System.IO.FileSystemInfo.Extension
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileSystemInfo.FullName
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
  fullName: System.IO.FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.FullPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullPath
  nameWithType: FileSystemInfo.FullPath
  fullName: System.IO.FileSystemInfo.FullPath
- uid: System.IO.FileSystemInfo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.FileSystemInfo.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IO.FileSystemInfo.LastAccessTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
  fullName: System.IO.FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
  fullName: System.IO.FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
  fullName: System.IO.FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
  fullName: System.IO.FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
  fullName: System.IO.FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.OriginalPath
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: OriginalPath
  nameWithType: FileSystemInfo.OriginalPath
  fullName: System.IO.FileSystemInfo.OriginalPath
- uid: System.IO.FileSystemInfo.Refresh
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh()
  nameWithType: FileSystemInfo.Refresh()
  fullName: System.IO.FileSystemInfo.Refresh()
- uid: System.IO.FileSystemInfo.#ctor*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FileSystemInfo
  nameWithType: FileSystemInfo.FileSystemInfo
- uid: System.IO.FileSystemInfo.Attributes*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Attributes
  nameWithType: FileSystemInfo.Attributes
- uid: System.IO.FileSystemInfo.CreationTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTime
  nameWithType: FileSystemInfo.CreationTime
- uid: System.IO.FileSystemInfo.CreationTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: CreationTimeUtc
  nameWithType: FileSystemInfo.CreationTimeUtc
- uid: System.IO.FileSystemInfo.Delete*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Delete
  nameWithType: FileSystemInfo.Delete
- uid: System.IO.FileSystemInfo.Exists*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Exists
  nameWithType: FileSystemInfo.Exists
- uid: System.IO.FileSystemInfo.Extension*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Extension
  nameWithType: FileSystemInfo.Extension
- uid: System.IO.FileSystemInfo.FullName*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: FullName
  nameWithType: FileSystemInfo.FullName
- uid: System.IO.FileSystemInfo.GetObjectData*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: GetObjectData
  nameWithType: FileSystemInfo.GetObjectData
- uid: System.IO.FileSystemInfo.LastAccessTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTime
  nameWithType: FileSystemInfo.LastAccessTime
- uid: System.IO.FileSystemInfo.LastAccessTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastAccessTimeUtc
  nameWithType: FileSystemInfo.LastAccessTimeUtc
- uid: System.IO.FileSystemInfo.LastWriteTime*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTime
  nameWithType: FileSystemInfo.LastWriteTime
- uid: System.IO.FileSystemInfo.LastWriteTimeUtc*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: LastWriteTimeUtc
  nameWithType: FileSystemInfo.LastWriteTimeUtc
- uid: System.IO.FileSystemInfo.Name*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Name
  nameWithType: FileSystemInfo.Name
- uid: System.IO.FileSystemInfo.Refresh*
  parent: System.IO.FileSystemInfo
  isExternal: false
  name: Refresh
  nameWithType: FileSystemInfo.Refresh
