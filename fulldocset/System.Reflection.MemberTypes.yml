### YamlMime:ManagedReference
items:
- uid: System.Reflection.MemberTypes
  id: MemberTypes
  children:
  - System.Reflection.MemberTypes.All
  - System.Reflection.MemberTypes.Constructor
  - System.Reflection.MemberTypes.Custom
  - System.Reflection.MemberTypes.Event
  - System.Reflection.MemberTypes.Field
  - System.Reflection.MemberTypes.Method
  - System.Reflection.MemberTypes.NestedType
  - System.Reflection.MemberTypes.Property
  - System.Reflection.MemberTypes.TypeInfo
  langs:
  - csharp
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
  type: Enum
  summary: "<xref:System.Reflection.MemberInfo>。</xref:System.Reflection.MemberInfo>の派生クラスとして定義されているメンバーの種類ごとのマークを付けます"
  remarks: "これらの列挙値は、次のプロパティによって返される:- <xref:System.Type.MemberType%2A?displayProperty=fullName>.</xref:System.Type.MemberType%2A?displayProperty=fullName>      -   <xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>.</xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>      -   <xref:System.Reflection.ConstructorInfo?displayProperty=fullName>.</xref:System.Reflection.ConstructorInfo?displayProperty=fullName>      -   <xref:System.Reflection.EventInfo?displayProperty=fullName>.</xref:System.Reflection.EventInfo?displayProperty=fullName>      -   <xref:System.Reflection.FieldInfo?displayProperty=fullName>.</xref:System.Reflection.FieldInfo?displayProperty=fullName>      -   <xref:System.Reflection.MethodInfo?displayProperty=fullName>.</xref:System.Reflection.MethodInfo?displayProperty=fullName>      -   <xref:System.Reflection.PropertyInfo?displayProperty=fullName>.</xref:System.Reflection.PropertyInfo?displayProperty=fullName>       型の MemberTypes の値を取得する: 1。  取得、<xref:System.Type>その型を表すオブジェクト</xref:System.Type>。      2.  値を取得、<xref:System.Type.MemberType%2A?displayProperty=fullName>プロパティ</xref:System.Type.MemberType%2A?displayProperty=fullName>。       型のメンバーの MemberTypes の値を取得します。 1。  取得、<xref:System.Type>その型を表すオブジェクト</xref:System.Type>。      2.  取得、<xref:System.Reflection.MemberInfo>を呼び出すことによって、その型のメンバーを表す配列、<xref:System.Type.GetMembers%2A?displayProperty=fullName>メソッド</xref:System.Type.GetMembers%2A?displayProperty=fullName></xref:System.Reflection.MemberInfo>。      3.  From の値を取得、<xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>配列内の各メンバーのプロパティ</xref:System.Reflection.MemberInfo.MemberType%2A?displayProperty=fullName>。  A `switch` (C#) ステートメントまたは`Select Case`Visual Basic でのステートメントは通常、メンバーの種類の処理に使用します。       MemberTypes は、corhdr.h ファイルで定義されている CorTypeAttr と一致します。"
  example:
  - "The following example displays the names of the members of the <xref:System.Reflection.ReflectionTypeLoadException> class and their associated member types.  \n  \n [!code-vb[System.Reflection.MemberTypes#1](~/add/codesnippet/visualbasic/t-system.reflection.memb_1.vb)]\n [!code-cs[System.Reflection.MemberTypes#1](~/add/codesnippet/csharp/t-system.reflection.memb_1.cs)]\n [!code-cpp[System.Reflection.MemberTypes#1](~/add/codesnippet/cpp/t-system.reflection.memb_1.cpp)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum MemberTypes
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Reflection.MemberTypes.All
  id: All
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: All
  nameWithType: MemberTypes.All
  fullName: System.Reflection.MemberTypes.All
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "すべてのメンバーの種類を指定します。"
  syntax:
    content: All
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Constructor
  id: Constructor
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Constructor
  nameWithType: MemberTypes.Constructor
  fullName: System.Reflection.MemberTypes.Constructor
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーは、コンス トラクターを指定します"
  syntax:
    content: Constructor
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Custom
  id: Custom
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Custom
  nameWithType: MemberTypes.Custom
  fullName: System.Reflection.MemberTypes.Custom
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーがカスタム メンバーの種類であることを指定します。"
  syntax:
    content: Custom
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Event
  id: Event
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Event
  nameWithType: MemberTypes.Event
  fullName: System.Reflection.MemberTypes.Event
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーは、イベントを指定します。"
  syntax:
    content: Event
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Field
  id: Field
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Field
  nameWithType: MemberTypes.Field
  fullName: System.Reflection.MemberTypes.Field
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーがフィールドであることを指定します。"
  syntax:
    content: Field
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Method
  id: Method
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Method
  nameWithType: MemberTypes.Method
  fullName: System.Reflection.MemberTypes.Method
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーがメソッドであることを指定します。"
  syntax:
    content: Method
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.NestedType
  id: NestedType
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: NestedType
  nameWithType: MemberTypes.NestedType
  fullName: System.Reflection.MemberTypes.NestedType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーが入れ子にされた型であることを指定します。"
  syntax:
    content: NestedType
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.Property
  id: Property
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: Property
  nameWithType: MemberTypes.Property
  fullName: System.Reflection.MemberTypes.Property
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーがプロパティであることを指定します。"
  syntax:
    content: Property
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Reflection.MemberTypes.TypeInfo
  id: TypeInfo
  parent: System.Reflection.MemberTypes
  langs:
  - csharp
  name: TypeInfo
  nameWithType: MemberTypes.TypeInfo
  fullName: System.Reflection.MemberTypes.TypeInfo
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Reflection
  summary: "メンバーが型であることを指定します。"
  syntax:
    content: TypeInfo
    return:
      type: System.Reflection.MemberTypes
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Reflection.MemberTypes.All
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: All
  nameWithType: MemberTypes.All
  fullName: System.Reflection.MemberTypes.All
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.MemberTypes.Constructor
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Constructor
  nameWithType: MemberTypes.Constructor
  fullName: System.Reflection.MemberTypes.Constructor
- uid: System.Reflection.MemberTypes.Custom
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Custom
  nameWithType: MemberTypes.Custom
  fullName: System.Reflection.MemberTypes.Custom
- uid: System.Reflection.MemberTypes.Event
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Event
  nameWithType: MemberTypes.Event
  fullName: System.Reflection.MemberTypes.Event
- uid: System.Reflection.MemberTypes.Field
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Field
  nameWithType: MemberTypes.Field
  fullName: System.Reflection.MemberTypes.Field
- uid: System.Reflection.MemberTypes.Method
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Method
  nameWithType: MemberTypes.Method
  fullName: System.Reflection.MemberTypes.Method
- uid: System.Reflection.MemberTypes.NestedType
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: NestedType
  nameWithType: MemberTypes.NestedType
  fullName: System.Reflection.MemberTypes.NestedType
- uid: System.Reflection.MemberTypes.Property
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: Property
  nameWithType: MemberTypes.Property
  fullName: System.Reflection.MemberTypes.Property
- uid: System.Reflection.MemberTypes.TypeInfo
  parent: System.Reflection.MemberTypes
  isExternal: false
  name: TypeInfo
  nameWithType: MemberTypes.TypeInfo
  fullName: System.Reflection.MemberTypes.TypeInfo
