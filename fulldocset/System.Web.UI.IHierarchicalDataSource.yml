### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IHierarchicalDataSource
  id: IHierarchicalDataSource
  children:
  - System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  - System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  langs:
  - csharp
  name: IHierarchicalDataSource
  nameWithType: IHierarchicalDataSource
  fullName: System.Web.UI.IHierarchicalDataSource
  type: Interface
  summary: "などを表す階層データのソース階層的なデータ バインド コントロールとその<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>にバインドできます。"
  remarks: "ASP.NET には、Web サーバー コントロール データにバインドして、一貫した方法で提供できるようにするコントロールのデータ バインディング アーキテクチャがサポートされています。 データにバインドする web サーバー コントロールは、データ バインド コントロールと呼ばれます、バインディングを促進するクラスは、データ ソース コントロールと呼ばれます。 データ ソース コントロールが任意のデータ ソースを表すことができます。 ファイル、ストリーム、リレーショナル データベース、ビジネス オブジェクト、およびなどです。 データ ソースは、ソースまたは基になるデータの形式に関係なく、データ バインド コントロールに一貫した方法でデータ表示を制御します。       階層データを表すデータ ソース コントロールから派生して、<xref:System.Web.UI.HierarchicalDataSourceControl>は IHierarchicalDataSource インターフェイスの ASP.NET の実装で基底クラス</xref:System.Web.UI.HierarchicalDataSourceControl>。 IHierarchicalDataSource インターフェイス、表形式ではなく、階層データを公開するデータ ソース コントロールを定義するために使用または Web サーバーに、リスト形式のデータをコントロールするから派生して、<xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>クラスなど、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>。 1 つのメソッドを定義するインターフェイス<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>、厳密に型が取得される<xref:System.Web.UI.HierarchicalDataSourceView>オブジェクト</xref:System.Web.UI.HierarchicalDataSourceView></xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>。 このインターフェイスを実装するデータ ソース コントロールは、それらが表すデータの各階層レベルの階層ビューをサポートします。 データ ソース ビュー名を指定しない、like<xref:System.Web.UI.DataSourceView>オブジェクトしますが、一意で、パスである階層で識別される、`viewPath`に渡されたパラメーター、<xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>メソッド</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A></xref:System.Web.UI.DataSourceView>。       データ ソース コントロールの IHierarchicalDataSource オブジェクトとその関連するビューと基になるデータの組み合わせと考えることができます。 関連付けられている各<xref:System.Web.UI.HierarchicalDataSourceView>オブジェクトは、表される階層のレベルのデータ ソース コントロールの機能を定義し、すべての ASP.NET データ ソース ビュー オブジェクトと同様に、insert、update、delete、および並べ替えなどの操作を実行します</xref:System.Web.UI.HierarchicalDataSourceView>。       データ ソース<xref:System.Web.UI.WebControls.SiteMapDataSource><xref:System.Web.UI.HierarchicalDataSourceControl>クラス</xref:System.Web.UI.HierarchicalDataSourceControl>から派生する</xref:System.Web.UI.WebControls.SiteMapDataSource>などの階層データを公開するコントロール その他のデータ ソースなど、階層データと表形式のデータの両方としてデータを公開するコントロール<xref:System.Web.UI.WebControls.XmlDataSource>から派生した<xref:System.Web.UI.HierarchicalDataSourceControl>が、実装、<xref:System.Web.UI.IDataSource>と<xref:System.ComponentModel.IListSource>インターフェイス</xref:System.ComponentModel.IListSource></xref:System.Web.UI.IDataSource></xref:System.Web.UI.HierarchicalDataSourceControl></xref:System.Web.UI.WebControls.XmlDataSource>。"
  example:
  - "The following code example demonstrates how to extend the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class, which implements the IHierarchicalDataSource interface, to create a data source control that displays file system information. The `FileSystemDataSource` class provides an implementation of the <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> method, which retrieves a strongly typed view object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_1_1.vb)]"
  syntax:
    content: public interface IHierarchicalDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "発生したときに、データ記憶域を<xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;></xref>インターフェイスを表しますが変更されました。"
  remarks: "DataSourceChanged イベントは、変更するなどのデータ ソース コントロールのプロパティに変更が行われたときに、<xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>のプロパティ、<xref:System.Web.UI.WebControls.XmlDataSource>コントロール、または、基になるデータ ストレージ内で実行される編集処理によって XML ノードが変更されたときに発生するデータを変更する、<xref:System.Web.UI.WebControls.XmlDataSource>コントロール</xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>。"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "ビューのヘルパー オブジェクトを取得、 <xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;> </xref>指定されたパスのインターフェイスです。"
  remarks: "<xref:System.Web.UI.IHierarchicalDataSource>と同様に、インターフェイス、<xref:System.Web.UI.IDataSource>インターフェイスでは、データ ソース ビューを取得する階層的なデータ ソース コントロールで使用するメソッドを定義します</xref:System.Web.UI.IDataSource></xref:System.Web.UI.IHierarchicalDataSource>。 などのすべて<xref:System.Web.UI.DataSourceView>ヘルパー オブジェクト、データ ソース コントロールに関連付けられている、<xref:System.Web.UI.HierarchicalDataSourceView>オブジェクトは、データ ソースは、基になるデータで実行できる操作を定義します</xref:System.Web.UI.HierarchicalDataSourceView></xref:System.Web.UI.DataSourceView>。 ただし、通常の表形式のデータを表すデータ ソース コントロールには、1 つだけの名前付きビューがありますが、階層的なデータ ソース コントロールは、データ ソース コントロールを表す階層データの各レベルのビューをサポートします。 階層データのレベルとして渡される一意の階層パスで識別される、`viewPath`パラメーター。"
  example:
  - "The following code example demonstrates how to override the GetHierarchicalView method in a class that extends the <xref:System.Web.UI.HierarchicalDataSourceControl> class to retrieve a strongly typed <xref:System.Web.UI.HierarchicalDataSourceView> object for a unique hierarchical path. The `FileSystemDataSource` class's implementation of GetHierarchicalView retrieves a `FileSystemDataSourceView` object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_2_1.vb)]"
  syntax:
    content: public System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "取得するビューの階層パス。"
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "返します、 <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref>で識別される階層のレベルでのデータの&1; つのビューを表す、 <code> viewPath </code>パラメーター。"
  overload: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: IHierarchicalDataSource.GetHierarchicalView
