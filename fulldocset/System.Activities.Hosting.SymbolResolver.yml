### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.SymbolResolver
  id: SymbolResolver
  children:
  - System.Activities.Hosting.SymbolResolver.#ctor
  - System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  - System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  - System.Activities.Hosting.SymbolResolver.Clear
  - System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  - System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - System.Activities.Hosting.SymbolResolver.Count
  - System.Activities.Hosting.SymbolResolver.GetEnumerator
  - System.Activities.Hosting.SymbolResolver.IsReadOnly
  - System.Activities.Hosting.SymbolResolver.Item(System.String)
  - System.Activities.Hosting.SymbolResolver.Keys
  - System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - System.Activities.Hosting.SymbolResolver.Remove(System.String)
  - System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  - System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  - System.Activities.Hosting.SymbolResolver.Values
  langs:
  - csharp
  name: SymbolResolver
  nameWithType: SymbolResolver
  fullName: System.Activities.Hosting.SymbolResolver
  type: Class
  summary: "SymbolResolver が拡張機能ホストを提供することで、 <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref>文字列名によって逆参照できるオブジェクトを含むです。  SymbolResolver によって提供される値は保持されません。  SymbolResolver 値の永続化は、ホストの役割です。"
  syntax:
    content: 'public sealed class SymbolResolver : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - System.Collections.Generic.IDictionary<System.String,System.Object>
  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.#ctor
  id: '#ctor'
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: SymbolResolver()
  nameWithType: SymbolResolver.SymbolResolver()
  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>クラスです。"
  syntax:
    content: public SymbolResolver ();
    parameters: []
  overload: System.Activities.Hosting.SymbolResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定したキー/値ペアを使用してシンボルを追加します。"
  syntax:
    content: public void Add (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "追加する記号。"
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: SymbolResolver.Add(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定されたシンボルの名前と値を使用してシンボルを追加します。"
  syntax:
    content: public void Add (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "シンボルの名前。"
    - id: value
      type: System.Object
      description: "参照する記号の値。"
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: SymbolResolver.Add(String,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定した記号名と型を使用してシンボルを追加します。"
  remarks: "指定した型の既定値は、シンボルが追加されます。"
  syntax:
    content: public void Add (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: "シンボルの名前。"
    - id: type
      type: System.Type
      description: "シンボル値の型。"
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  id: Add(System.String,System.Object,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Add(String,Object,Type)
  nameWithType: SymbolResolver.Add(String,Object,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定した記号名、値、および種類を使用してシンボルを追加します。"
  syntax:
    content: public void Add (string key, object value, Type type);
    parameters:
    - id: key
      type: System.String
      description: "シンボルの名前。"
    - id: value
      type: System.Object
      description: "参照する記号の値。"
    - id: type
      type: System.Type
      description: "シンボル値の型。"
  overload: System.Activities.Hosting.SymbolResolver.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  id: AsLocationReferenceEnvironment
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: AsLocationReferenceEnvironment()
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()
  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "返します、 <xref href=&quot;System.Activities.LocationReferenceEnvironment&quot;> </xref>を記号の参照へのアクセスを有効にするインスタンスの値が<xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>として表される<xref href=&quot;System.Activities.LocationReference&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment AsLocationReferenceEnvironment ();
    parameters: []
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "シンボル値への参照にアクセスできる場所の参照<xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>として表される<xref href=&quot;System.Activities.LocationReference&quot;></xref>オブジェクト。"
  overload: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Clear
  id: Clear
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Clear()
  nameWithType: SymbolResolver.Clear()
  fullName: System.Activities.Hosting.SymbolResolver.Clear()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "すべてのシンボルを削除、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Activities.Hosting.SymbolResolver.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Contains(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "示す値を返すかどうか、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>指定した記号が含まれています。"
  syntax:
    content: public bool Contains (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "内で検索するキー/値のペアとしてシンボル、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>指定した記号が含まれています。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SymbolResolver.ContainsKey(String)
  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "示す値を返すかどうか、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>指定されたキーにシンボルが含まれています。"
  syntax:
    content: public bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "検索する記号のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> 、指定した記号を含むキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: CopyTo(KeyValuePair<String,Object>,Int32)
  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "内のシンボルをコピー、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>を指定した配列インデックスを開始位置、キー/値ペアの既存の&1; 次元配列。"
  syntax:
    content: public void CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
      description: "シンボルをコピーするキー/値ペアの&1; 次元配列。 配列は、0 から始まるインデックスが必要です。"
    - id: arrayIndex
      type: System.Int32
      description: "開始するコピー先の配列内の&0; から始まるインデックス。"
  overload: System.Activities.Hosting.SymbolResolver.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Count
  id: Count
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Count
  nameWithType: SymbolResolver.Count
  fullName: System.Activities.Hosting.SymbolResolver.Count
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "含まれている記号の数を取得、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "含まれている記号の数、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator
  id: GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SymbolResolver.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "キー/値ペアのコレクションを反復処理する列挙子キーが記号名、値は、記号値を返します。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
      description: "キー/値ペアのコレクションを反復処理する列挙子。"
  overload: System.Activities.Hosting.SymbolResolver.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "示す値を取得するかどうかの記号のディクショナリ、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>は読み取り専用です。"
  remarks: "このプロパティは常に返します`false`です。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.Hosting.SymbolResolver.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)
  id: Item(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Item(String)
  nameWithType: SymbolResolver.Item(String)
  fullName: System.Activities.Hosting.SymbolResolver.Item(String)
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "取得または指定したキーに関連付けられている項目の値を設定します。"
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "項目のキー。"
    return:
      type: System.Object
      description: "指定されたキーに関連付けられている項目の値。"
  overload: System.Activities.Hosting.SymbolResolver.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Keys
  id: Keys
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Keys
  nameWithType: SymbolResolver.Keys
  fullName: System.Activities.Hosting.SymbolResolver.Keys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "すべてのキーのコレクションを取得、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  syntax:
    content: public System.Collections.Generic.ICollection<string> Keys { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "すべてのキーのコレクション、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Remove(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定したシンボル、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  syntax:
    content: public bool Remove (System.Collections.Generic.KeyValuePair<string,object> item);
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: "削除する記号。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>シンボルが見つかり、正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 このメソッドが戻る<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>シンボルが存在しない場合。"
  overload: System.Activities.Hosting.SymbolResolver.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)
  id: Remove(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SymbolResolver.Remove(String)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "シンボルを削除、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref>指定のキーを使用します。"
  syntax:
    content: public bool Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "削除する記号のキー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>シンボルが見つかり、正常に削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 このメソッドが戻る<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>シンボルが存在しない場合。"
  overload: System.Activities.Hosting.SymbolResolver.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "キー/値ペアのコレクションを反復処理する列挙子キーが記号名、値は、記号値を返します。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Activities.Hosting.SymbolResolver>にインスタンスをキャスト、<xref:System.Collections.IEnumerator>インターフェイス</xref:System.Collections.IEnumerator></xref:System.Activities.Hosting.SymbolResolver>。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "キー/値ペアのコレクションを反復処理する列挙子。"
  overload: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: SymbolResolver.TryGetValue(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "指定されたキーに関連付けられている値を取得します。"
  syntax:
    content: public bool TryGetValue (string key, out object value);
    parameters:
    - id: key
      type: System.String
      description: "取得する値のキー。"
    - id: value
      type: System.Object
      description: "このメソッドが戻るとき、キーが見つかった場合は、指定したキーに関連付けられている値が含まれていますそれ以外の場合、既定値は、値パラメーターの型の値です。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;> </xref> 、指定した要素が含まれるキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.SymbolResolver.Values
  id: Values
  parent: System.Activities.Hosting.SymbolResolver
  langs:
  - csharp
  name: Values
  nameWithType: SymbolResolver.Values
  fullName: System.Activities.Hosting.SymbolResolver.Values
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "すべての値のコレクションを取得、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  syntax:
    content: public System.Collections.Generic.ICollection<object> Values { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Object}
      description: "すべての値のコレクション、 <xref href=&quot;System.Activities.Hosting.SymbolResolver&quot;></xref>です。"
  overload: System.Activities.Hosting.SymbolResolver.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.SymbolResolver.#ctor
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: SymbolResolver()
  nameWithType: SymbolResolver.SymbolResolver()
  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()
- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,Object>
  nameWithType: KeyValuePair<String,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Object)
  nameWithType: SymbolResolver.Add(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Type)
  nameWithType: SymbolResolver.Add(String,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add(String,Object,Type)
  nameWithType: SymbolResolver.Add(String,Object,Type)
  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: AsLocationReferenceEnvironment()
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()
  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.SymbolResolver.Clear
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Clear()
  nameWithType: SymbolResolver.Clear()
  fullName: System.Activities.Hosting.SymbolResolver.Clear()
- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Contains(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SymbolResolver.ContainsKey(String)
  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)
- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: CopyTo(KeyValuePair<String,Object>,Int32)
  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<String,Object>
  nameWithType: KeyValuePair<String,Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>[]
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>[]
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Hosting.SymbolResolver.Count
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Count
  nameWithType: SymbolResolver.Count
  fullName: System.Activities.Hosting.SymbolResolver.Count
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: GetEnumerator()
  nameWithType: SymbolResolver.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<KeyValuePair<String,Object>>
  nameWithType: IEnumerator<KeyValuePair<String,Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly
- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Item(String)
  nameWithType: SymbolResolver.Item(String)
  fullName: System.Activities.Hosting.SymbolResolver.Item(String)
- uid: System.Activities.Hosting.SymbolResolver.Keys
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Keys
  nameWithType: SymbolResolver.Keys
  fullName: System.Activities.Hosting.SymbolResolver.Keys
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove(KeyValuePair<String,Object>)
  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)
- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove(String)
  nameWithType: SymbolResolver.Remove(String)
  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: SymbolResolver.TryGetValue(String,Object)
  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)
- uid: System.Activities.Hosting.SymbolResolver.Values
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Values
  nameWithType: SymbolResolver.Values
  fullName: System.Activities.Hosting.SymbolResolver.Values
- uid: System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.SymbolResolver.#ctor*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: SymbolResolver
  nameWithType: SymbolResolver.SymbolResolver
- uid: System.Activities.Hosting.SymbolResolver.Add*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Add
  nameWithType: SymbolResolver.Add
- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: AsLocationReferenceEnvironment
  nameWithType: SymbolResolver.AsLocationReferenceEnvironment
- uid: System.Activities.Hosting.SymbolResolver.Clear*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Clear
  nameWithType: SymbolResolver.Clear
- uid: System.Activities.Hosting.SymbolResolver.Contains*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Contains
  nameWithType: SymbolResolver.Contains
- uid: System.Activities.Hosting.SymbolResolver.ContainsKey*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: ContainsKey
  nameWithType: SymbolResolver.ContainsKey
- uid: System.Activities.Hosting.SymbolResolver.CopyTo*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: CopyTo
  nameWithType: SymbolResolver.CopyTo
- uid: System.Activities.Hosting.SymbolResolver.Count*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Count
  nameWithType: SymbolResolver.Count
- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: GetEnumerator
  nameWithType: SymbolResolver.GetEnumerator
- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: IsReadOnly
  nameWithType: SymbolResolver.IsReadOnly
- uid: System.Activities.Hosting.SymbolResolver.Item*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Item
  nameWithType: SymbolResolver.Item
- uid: System.Activities.Hosting.SymbolResolver.Keys*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Keys
  nameWithType: SymbolResolver.Keys
- uid: System.Activities.Hosting.SymbolResolver.Remove*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Remove
  nameWithType: SymbolResolver.Remove
- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator
- uid: System.Activities.Hosting.SymbolResolver.TryGetValue*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: TryGetValue
  nameWithType: SymbolResolver.TryGetValue
- uid: System.Activities.Hosting.SymbolResolver.Values*
  parent: System.Activities.Hosting.SymbolResolver
  isExternal: false
  name: Values
  nameWithType: SymbolResolver.Values
