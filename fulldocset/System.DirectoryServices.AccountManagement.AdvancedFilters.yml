### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  id: AdvancedFilters
  children:
  - System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor(System.DirectoryServices.AccountManagement.Principal)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  langs:
  - csharp
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
  type: Class
  summary: "このクラスは、ユーザーに渡される「ダミー」プリンシパル オブジェクトの読み取り専用のプロパティを変更できるように、特定の属性への書き込み可能なアクセスを提供する<xref href=&quot;System.DirectoryServices.AccountManagement.PrincipalSearcher&quot;></xref>オブジェクトを使用するとき[クエリの例で](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e)です。"
  remarks: "AdvancedFilters クラスにアクセス、<xref:System.DirectoryServices.AccountManagement.UserPrincipal>を介してオブジェクト、<xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A>プロパティ、しのプロパティと同様に扱われますを超えて、<xref:System.DirectoryServices.AccountManagement.UserPrincipal>オブジェクト、および独自に使用するためのものでないです</xref:System.DirectoryServices.AccountManagement.UserPrincipal></xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A></xref:System.DirectoryServices.AccountManagement.UserPrincipal>。"
  example:
  - See the [Query By Example](http://msdn.microsoft.com/en-us/84ac40bb-04c4-4d0b-adaf-0ddb9253599e) topic for example code.
  syntax:
    content: public class AdvancedFilters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor(System.DirectoryServices.AccountManagement.Principal)
  id: '#ctor(System.DirectoryServices.AccountManagement.Principal)'
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: AdvancedFilters(Principal)
  nameWithType: AdvancedFilters.AdvancedFilters(Principal)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilters(Principal)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "新しいインスタンスを作成<xref href=&quot;System.DirectoryServices.AccountManagement.AdvancedFilters&quot;></xref>オブジェクト。 直接呼び出されるものでありません。"
  remarks: "アプリケーションにアクセスする必要があります<xref:System.DirectoryServices.AccountManagement.AdvancedFilters>を通じて、<xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A>ユーザー オブジェクトのプロパティ</xref:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter%2A></xref:System.DirectoryServices.AccountManagement.AdvancedFilters>。"
  syntax:
    content: protected AdvancedFilters (System.DirectoryServices.AccountManagement.Principal p);
    parameters:
    - id: p
      type: System.DirectoryServices.AccountManagement.Principal
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.Principal&quot;></xref> object."
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: AccountExpirationDate(DateTime,MatchType)
  nameWithType: AdvancedFilters.AccountExpirationDate(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "クエリのフィルターを設定、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*>属性を指定した時間と比較の型にします</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate*>。"
  remarks: "時刻は既定で UTC にします。 時間を現地時刻で指定する場合は、 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName>としてオブジェクト</xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A>を指定し、"
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"securlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nusr.AdvancedSearchFilter.AccountExpirationDate(DateTime.Now, MatchType.LessThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \n  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \n  \nConsole.WriteLine(\"The following users' accounts have expired:\");  \n  \nforeach (UserPrincipal u in results)  \n{  \n  Console.WriteLine(u.Name);  \n}  \n```"
  syntax:
    content: public void AccountExpirationDate (DateTime expirationTime, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: expirationTime
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト</xref:System.DateTime>。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`expirationTime`比較に使用する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: AccountLockoutTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.AccountLockoutTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "セット、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*>クエリ フィルターを指定した時間と比較の型</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime*>。"
  remarks: "時刻は既定で UTC にします。 時間を現地時刻で指定する場合は、 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName>としてオブジェクト</xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A>を指定し、"
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"SecurlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nusr.AdvancedSearchFilter.AccountLockoutTime(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \n  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \n  \n//Print user names of all accounts locked within the last 24 hours.  \n  \nforeach (UserPrincipal u in results)  \n{  \n  Console.WriteLine(u.Name);  \n }  \n```"
  syntax:
    content: public void AccountLockoutTime (DateTime lockoutTime, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: lockoutTime
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト</xref:System.DateTime>。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`lockoutTime`比較に使用する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)
  id: AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: AdvancedFilterSet(String,Object,Type,MatchType)
  nameWithType: AdvancedFilters.AdvancedFilterSet(String,Object,Type,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(String,Object,Type,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "拡張されたクラスのプロパティのクエリのフィルターを作成します。"
  remarks: ''
  example:
  - "In an extended class, you might implement an advanced search filter for `LogonCount`:  \n  \n```c#  \n  \npublic class InetOrgPersonSearchFilter : AdvancedFilters  \n{  \n	public InetOrgPersonSearchFilter(Principal p) : base(p) { }  \n  \n	public void LogonCount(int value, MatchType mt)  \n	{  \n		this.AdvancedFilterSet(\"LogonCount\", value, typeof(int), mt);  \n	}  \n}  \n```"
  syntax:
    content: protected void AdvancedFilterSet (string attribute, object value, Type objectType, System.DirectoryServices.AccountManagement.MatchType mt);
    parameters:
    - id: attribute
      type: System.String
      description: "属性の名前"
    - id: value
      type: System.Object
      description: "オブジェクト。"
    - id: objectType
      type: System.Type
      description: "オブジェクトの種類`value`です。"
    - id: mt
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`value`属性の値と比較する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)
  id: BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: BadLogonCount(Int32,MatchType)
  nameWithType: AdvancedFilters.BadLogonCount(Int32,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(Int32,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "クエリ フィルターを設定、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*>属性を指定した値と比較の型にします</xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount*>。"
  remarks: ''
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"SecurlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nint badLogonThreshold = 3;  \nusr.AdvancedSearchFilter.BadLogonCount(badLogonThreshold, MatchType.GreaterThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \nConsole.WriteLine(\"The following users have logged on unsuccessfully at more than \" + badLogonThreshold.toString + \" times:\");  \nforeach (UserPrincipal u in results)  \n{  \n  Console.WriteLine(u.Name);  \n}  \n```"
  syntax:
    content: public void BadLogonCount (int badLogonCount, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: badLogonCount
      type: System.Int32
      description: "整数値です。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`badLogonCount`属性の値と比較する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: LastBadPasswordAttempt(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastBadPasswordAttempt(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "クエリのフィルターを設定、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*>を指定した属性<xref:System.DateTime>と指定した比較する値</xref:System.DateTime></xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt*>。"
  remarks: "時刻は既定で UTC にします。 時間を現地時刻で指定する場合は、 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName>としてオブジェクト</xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A>を指定し、"
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"SecurlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nusr.AdvancedSearchFilter.LastBadPasswordAttempt(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \n  \n//Write the name of all users whose most recent incorrect  \n//password entry was within the last day  \n  \nforeach (UserPrincipal u in results)  \n{  \n	Console.WriteLine(u.Name);  \n}  \n```"
  syntax:
    content: public void LastBadPasswordAttempt (DateTime lastAttempt, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: lastAttempt
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト</xref:System.DateTime>。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`lastAttempt`比較に使用する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: LastLogonTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastLogonTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "クエリのフィルターを設定、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*>を指定した属性<xref:System.DateTime>と指定した比較する値</xref:System.DateTime></xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon*>。"
  remarks: "時刻は既定で UTC にします。 時間を現地時刻で指定する場合は、 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName>としてオブジェクト</xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A>を指定し、"
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"SecurlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nusr.AdvancedSearchFilter.LastLogonTime(DateTime.Now.AddDays(-1), MatchType.GreaterThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \n  \n//Write the names of all users who have logged on since yesterday  \nforeach (UserPrincipal u in results)  \n{  \n	Console.WriteLine(u.Name);  \n}  \n```"
  syntax:
    content: public void LastLogonTime (DateTime logonTime, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: logonTime
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト</xref:System.DateTime>。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`logonTime`比較に使用する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  langs:
  - csharp
  name: LastPasswordSetTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastPasswordSetTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  summary: "クエリのフィルターを設定、<xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*>を指定した属性<xref:System.DateTime>と指定した比較する値</xref:System.DateTime></xref:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet*>。"
  remarks: "時刻は既定で UTC にします。 時間を現地時刻で指定する場合は、 <xref:System.DateTime.Kind%2A> <xref:System.DateTime> <xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName>としてオブジェクト</xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A>を指定し、"
  example:
  - "```c#  \n  \n// Create the principal context for the usr object.  \nPrincipalContext ctx = new PrincipalContext(ContextType.Domain, \"fabrikam.com\", \"CN=Users,DC=fabrikam,DC=com\", \"administrator\", \"SecurlyStoredPassword\");  \n  \n// Create the principal user object from the context  \nUserPrincipal usr = new UserPrincipal(ctx);  \n  \n// Set the advanced query filter  \nusr.AdvancedSearchFilter.LastPasswordSetTime(DateTime.Now.AddDays(-30), MatchType.LessThan);  \n  \n// Create a PrincipalSearcher object.  \nPrincipalSearcher ps = new PrincipalSearcher(usr);  \nPrincipalSearchResult<Principal> results = ps.FindAll();  \n  \n//Force users who have not changed their password in the last  \n//30 days to do so at next logon  \nforeach (UserPrincipal u in results)  \n{  \n	u.ExpirePasswordNow();  \n	u.Save();  \n}  \n```"
  syntax:
    content: public void LastPasswordSetTime (DateTime passwordSetTime, System.DirectoryServices.AccountManagement.MatchType match);
    parameters:
    - id: passwordSetTime
      type: System.DateTime
      description: "A<xref:System.DateTime>オブジェクト</xref:System.DateTime>。"
    - id: match
      type: System.DirectoryServices.AccountManagement.MatchType
      description: "A <xref href=&quot;System.DirectoryServices.AccountManagement.MatchType&quot;> </xref>を指定する方法`passwordSetTime`比較に使用する必要があります。"
  overload: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor(System.DirectoryServices.AccountManagement.Principal)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AdvancedFilters(Principal)
  nameWithType: AdvancedFilters.AdvancedFilters(Principal)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilters(Principal)
- uid: System.DirectoryServices.AccountManagement.Principal
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: Principal
  nameWithType: Principal
  fullName: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AccountExpirationDate(DateTime,MatchType)
  nameWithType: AdvancedFilters.AccountExpirationDate(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(DateTime,MatchType)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AccountLockoutTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.AccountLockoutTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AdvancedFilterSet(String,Object,Type,MatchType)
  nameWithType: AdvancedFilters.AdvancedFilterSet(String,Object,Type,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(String,Object,Type,MatchType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: BadLogonCount(Int32,MatchType)
  nameWithType: AdvancedFilters.BadLogonCount(Int32,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(Int32,MatchType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastBadPasswordAttempt(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastBadPasswordAttempt(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastLogonTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastLogonTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastPasswordSetTime(DateTime,MatchType)
  nameWithType: AdvancedFilters.LastPasswordSetTime(DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AdvancedFilters.AccountExpirationDate
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AdvancedFilters.AccountLockoutTime
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: AdvancedFilterSet
  nameWithType: AdvancedFilters.AdvancedFilterSet
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: BadLogonCount
  nameWithType: AdvancedFilters.BadLogonCount
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AdvancedFilters.LastBadPasswordAttempt
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastLogonTime
  nameWithType: AdvancedFilters.LastLogonTime
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime*
  parent: System.DirectoryServices.AccountManagement.AdvancedFilters
  isExternal: false
  name: LastPasswordSetTime
  nameWithType: AdvancedFilters.LastPasswordSetTime
