### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapExtension
  id: SoapExtension
  children:
  - System.Web.Services.Protocols.SoapExtension.#ctor
  - System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  - System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  - System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  - System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  - System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  langs:
  - csharp
  name: SoapExtension
  nameWithType: SoapExtension
  fullName: System.Web.Services.Protocols.SoapExtension
  type: Class
  summary: "ASP.NET を使用して作成された XML Web サービスの SOAP 拡張機能の基本クラスです。"
  remarks: "ASP.NET では、機能拡張メカニズムを使用して構築する SOAP 関連のインフラストラクチャです。 ASP.NET の SOAP 拡張機能のアーキテクチャを検査またはメッセージ処理、クライアントまたはサーバーのいずれかの特定の段階でメッセージを変更する拡張機能を中心にします。       ASP.NET の SOAP 拡張機能は、SoapExtension クラスから派生します。 <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>と<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>メソッドには、パフォーマンスを強化するために SOAP 拡張機能を初期化するための代替機構が用意されています</xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A></xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>。 <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A>定義されている各段階で、メソッドが呼び出されると、ほとんどの SOAP 拡張機能の中核部分は、 <xref:System.Web.Services.Protocols.SoapMessageStage>、その特定の SOAP 拡張機能の目的の動作を実行する SOAP 拡張機能を許可します</xref:System.Web.Services.Protocols.SoapMessageStage>。</xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> SOAP 要求または SOAP 応答にする必要がある SOAP 拡張機能が変更の<xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>がネットワーク経由で送信する提案されたデータを受信する機会を提供します</xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>。"
  example:
  - "The following `TraceExtension` SOAP extension outputs the SOAP request and SOAP response to a specified file when applied to an XML Web service method. If the following SOAP extension is installed to run with an XML Web service, the ASPNET user account must have permission to write to the directory in which the log file is written.  \n  \n [!code-cs[Classic SoapExtension Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_23_1.cs)]\n [!code-cpp[Classic SoapExtension Example#1](~/add/codesnippet/cpp/t-system.web.services.pr_23_1.cpp)]\n [!code-vb[Classic SoapExtension Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_23_1.vb)]"
  syntax:
    content: public abstract class SoapExtension
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: SoapExtension()
  nameWithType: SoapExtension.SoapExtension()
  fullName: System.Web.Services.Protocols.SoapExtension.SoapExtension()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.SoapExtension&quot;> </xref>クラスです。"
  syntax:
    content: protected SoapExtension ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapExtension.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  id: ChainStream(System.IO.Stream)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: ChainStream(Stream)
  nameWithType: SoapExtension.ChainStream(Stream)
  fullName: System.Web.Services.Protocols.SoapExtension.ChainStream(Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、SOAP 拡張機能には、SOAP 要求または応答を格納しているメモリ バッファーにへのアクセスを可能です。"
  remarks: "ChainStream により、優先順位が高い SOAP 拡張機能が送信されるか、ネットワーク経由で返される SOAP メッセージに最も近いの実際のデータを変更できます。       SOAP 拡張機能の参照を保存する必要があります、 <xref:System.IO.Stream>ChainStream に渡されると、 <xref:System.IO.Stream>ChainStream からが返されます</xref:System.IO.Stream></xref:System.IO.Stream>。 XML Web サービス メソッドを使用して実行する SOAP 拡張機能が構成されている場合、<xref:System.IO.Stream>に渡された ChainStream <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>.</xref:System.Web.Services.Protocols.SoapMessageStage></xref:System.Web.Services.Protocols.SoapMessageStage>でシリアル化された SOAP 要求を格納して</xref:System.IO.Stream> 同様に、 <xref:System.IO.Stream>ChainStream から返された参照がシリアル化が行われ、したがって<xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>。</xref:System.Web.Services.Protocols.SoapMessageStage></xref:System.Web.Services.Protocols.SoapMessageStage>シリアル化された SOAP 応答を含む場合に書き込まれます。</xref:System.IO.Stream>"
  example:
  - "The following example saves both the <xref:System.IO.Stream> passed into ChainStream and the <xref:System.IO.Stream> returned from ChainStream in the member variables `oldStream` and `newStream`, respectively.  \n  \n [!code-cpp[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_14_1.cpp)]\n [!code-cs[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_14_1.cs)]\n [!code-vb[Classic SoapExtension.ChainStream Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_14_1.vb)]"
  syntax:
    content: public virtual System.IO.Stream ChainStream (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "SOAP 要求または応答を格納しているメモリ バッファー。"
    return:
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>この SOAP 拡張機能を変更できる新しいメモリ バッファーを表すします</xref:System.IO.Stream>。"
  overload: System.Web.Services.Protocols.SoapExtension.ChainStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  id: GetInitializer(System.Type)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: GetInitializer(Type)
  nameWithType: SoapExtension.GetInitializer(Type)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、1 つに XML Web サービスを実装するクラスに固有のデータを初期化するために SOAP 拡張機能は、パフォーマンス コストを時間します。"
  remarks: "The overload of <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that gets called by ASP.NET depends on how the SOAP extension was specified. There are two methods for specifying a SOAP extension:  \n  \n-   Apply a custom attribute, deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, to the individual XML Web service method.  \n  \n-   Add a reference in either the web.config or app.config configuration files.  \n  \n If you add a reference to one of the configuration files, the SOAP extension runs for all XML Web services within the scope of that configuration file. When specifying, a SOAP extension by referencing a configuration file, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> overload that passes in a <xref:System.Type>. When specifying an extension by applying a custom attribute, ASP.NET invokes the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> that passes in a <xref:System.Web.Services.Protocols.LogicalMethodInfo> and a <xref:System.Web.Services.Protocols.SoapExtensionAttribute>.  \n  \n For details on adding SOAP extensions to a configuration file, see [&#91;\\<topic://cpconconfigurationoptionsforaspnetwebservices>&#93;](http://msdn.microsoft.com/en-us/1f0d71bc-8faa-4730-b500-2a6c7b5d4f6b)."
  example:
  - "The following code demonstrates how one can save SOAP extension specific data on a per XML Web service basis. If the SOAP extension is configured using a configuration file instead of an attribute, the SOAP extension can store data for each class to which the SOAP extension is applied. This example saves the name of a file in which to log the SOAP messages sent to and from the XML Web service method based on the name of the class implementing the XML Web service into the cache. This code example is part of a full code example for a TraceExtension SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview.  \n  \n [!code-vb[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_2_1.vb)]\n [!code-cs[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/csharp/m-system.web.services.pr_2_1.cs)]\n [!code-cpp[SoapExtension.GetInitializer-Type#1](~/add/codesnippet/cpp/m-system.web.services.pr_2_1.cpp)]"
  syntax:
    content: public abstract object GetInitializer (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "SOAP 拡張機能を適用する XML Web サービスを実装するクラスの型。"
    return:
      type: System.Object
      description: "<xref:System.Object>SOAP 拡張機能がキャッシュを初期化します</xref:System.Object>。"
  overload: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  nameWithType: SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、1 つに XML Web サービス メソッドに適用する属性を使用して、XML Web サービス メソッドに固有のデータを初期化するために SOAP 拡張機能は、パフォーマンス コストを時間します。"
  remarks: "SOAP 拡張機能は、構成ファイルを参照してください<xref:System.Type>。</xref:System.Type>を受け入れる GetInitializer オーバー ロードを使用して構成されている場合       SOAP 拡張機能データを初期化するために次の&3; つの機会があり、それらはすべて持っているさまざまな目的: クラス コンス トラクターの SOAP 拡張機能がインスタンス化され、は、通常のメンバー変数を初期化するために使用するたびに、クラス コンス トラクターが呼び出されます。      -GetInitializer - GetInitializer、ただしが呼び出されます初めて、SOAP 要求が行われる XML Web サービス メソッドに&1; 回だけです。 カスタム属性は、XML Web サービス メソッドに適用された、GetInitializer メソッドが呼び出されます。 これにより、SOAP 拡張<xref:System.Web.Services.Protocols.LogicalMethodInfo>プロトタイプについてまたは<xref:System.Web.Services.Protocols.SoapExtensionAttribute>。</xref:System.Web.Services.Protocols.SoapExtensionAttribute>から派生したクラスによって渡される拡張機能に固有のデータにアクセスする XML Web サービス メソッドの</xref:System.Web.Services.Protocols.LogicalMethodInfo>調査 戻り値は、ASP.NET によってキャッシュされ、それ以降に渡された<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>メソッド</xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>。 したがって、GetInitializer で初期化にカプセル化本質的には、1 回限りのパフォーマンスが低下します。      - <xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>-<xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>たびに、SOAP 要求が、XML Web サービス メソッドに行われますが、利点は、クラスのコンス トラクターで呼び出される、<xref:System.Object>で初期化を突き止め GetInitializer が渡される</xref:System.Object></xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A></xref:System.Web.Services.Protocols.SoapExtension.Initialize%2A>"
  example:
  - "The following code demonstrates how you can obtain SOAP extension-specific data passed in using a class that derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>, and then cache that data in GetInitializer. This code example is part of a full code example for a `TraceExtension` SOAP extension that can be found in the <xref:System.Web.Services.Protocols.SoapExtension> class overview. This code example relies on a `TraceExtensionAttribute` being passed into the `attribute` parameter. In the full code example, `TraceExtensionAttribute` derives from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> and adds a `Filename` property, which is what GetInitializer stores in the cache.  \n  \n [!code-cpp[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/cpp/3e28a43a-5fe0-43d3-bd26-_1.cpp)]\n [!code-cs[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/csharp/3e28a43a-5fe0-43d3-bd26-_1.cs)]\n [!code-vb[Classic SoapExtension.GetInitializer Example#1](~/add/codesnippet/visualbasic/3e28a43a-5fe0-43d3-bd26-_1.vb)]"
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo, System.Web.Services.Protocols.SoapExtensionAttribute attribute);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "A <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> SOAP 拡張機能を適用する XML Web サービス メソッドの特定の関数のプロトタイプを表すです。"
    - id: attribute
      type: System.Web.Services.Protocols.SoapExtensionAttribute
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapExtensionAttribute&quot;> </xref> XML Web サービス メソッドに適用します。"
    return:
      type: System.Object
      description: "<xref:System.Object>SOAP 拡張機能がキャッシュを初期化します</xref:System.Object>。"
  overload: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: SoapExtension.Initialize(Object)
  fullName: System.Web.Services.Protocols.SoapExtension.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、により、SOAP 拡張機能でキャッシュされたデータを使用してそれ自体を初期化するために、<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>メソッド</xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>。"
  remarks: "A SOAP extension has three opportunities to initialize data and they all have different purposes:  \n  \n-   Class constructor - The class constructor is called every time a SOAP extension is instantiated and is typically used to initialize member variables.  \n  \n-   <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> - <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A>, however, is called just once, the first time a SOAP request is made to an XML Web services method. If a custom attribute is applied to the XML Web service method, the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method is invoked. This allows the SOAP extension to interrogate the <xref:System.Web.Services.Protocols.LogicalMethodInfo> of an XML Web service method for prototype information or to access extension-specific data passed by a class deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute>. The return value is cached by ASP.NET and passed into subsequent Initialize methods. Therefore, initialization done in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is encapsulated essentially into a one-time performance hit.  \n  \n-   Initialize - Initialize is called every time a SOAP request is made to an XML Web service method, but has an advantage over the class constructor, in that the <xref:System.Object> initialized in <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> is passed to it.  \n  \n-  \n  \n> [!NOTE]\n>  You can also add a SOAP extension without deriving from <xref:System.Web.Services.Protocols.SoapExtensionAttribute> by using the [\\<soapExtensionTypes> Element](http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) in a configuration file. For details, see [\\<soapExtensionTypes> Element](http://msdn.microsoft.com/en-us/7a373a98-6d82-4f8d-a6fc-2996da3fd54c) and [SOAP Message Modification Using SOAP Extensions](http://msdn.microsoft.com/en-us/97d81ace-95e7-4acc-ae39-9692a0021e95).  \n  \n-"
  example:
  - "The following example demonstrates how you can use the data cached during the <xref:System.Web.Services.Protocols.SoapExtension.GetInitializer%2A> method.  \n  \n [!code-cpp[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/cpp/m-system.web.services.pr_10_1.cpp)]\n [!code-cs[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/csharp/m-system.web.services.pr_10_1.cs)]\n [!code-vb[Classic SoapExtension.Initialize Example#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_10_1.vb)]"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "<xref:System.Object>から返された<xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*>ASP.NET によってキャッシュされます</xref:System.Web.Services.Protocols.SoapExtension.GetInitializer*></xref:System.Object>。"
  overload: System.Web.Services.Protocols.SoapExtension.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  id: ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  parent: System.Web.Services.Protocols.SoapExtension
  langs:
  - csharp
  name: ProcessMessage(SoapMessage)
  nameWithType: SoapExtension.ProcessMessage(SoapMessage)
  fullName: System.Web.Services.Protocols.SoapExtension.ProcessMessage(SoapMessage)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "派生クラスでオーバーライドされると、により、受信する SOAP 拡張機能、 <xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;> </xref>各プロセスに<xref href=&quot;System.Web.Services.Protocols.SoapMessageStage&quot;></xref>です。"
  remarks: "ProcessMessage がまったくと呼ばれる<xref:System.Web.Services.Protocols.SoapMessageStage>ASP.NET とそのクライアントを使用して作成された両方の XML Web サービスに適用される SOAP 拡張機能のステージ</xref:System.Web.Services.Protocols.SoapMessageStage>。 各<xref:System.Web.Services.Protocols.SoapMessageStage>から派生したクラスのインスタンス<xref:System.Web.Services.Protocols.SoapMessage>ProcessMessage に渡されます</xref:System.Web.Services.Protocols.SoapMessage></xref:System.Web.Services.Protocols.SoapMessageStage>。 XML Web サービス クライアントでは SOAP 拡張機能が実行されている場合、<xref:System.Web.Services.Protocols.SoapClientMessage>オブジェクトがそれ以外の ProcessMessage に渡された<xref:System.Web.Services.Protocols.SoapServerMessage>オブジェクトが渡されるインチ</xref:System.Web.Services.Protocols.SoapServerMessage></xref:System.Web.Services.Protocols.SoapClientMessage>"
  example:
  - "The following example is the ProcessMessage portion of a SOAP extension that logs SOAP requests and SOAP responses. By logging the <xref:System.Web.Services.Protocols.SoapMessage> at the <xref:System.Web.Services.Protocols.SoapMessageStage><xref:System.Web.Services.Protocols.SoapMessageStage>, the SOAP extension accesses the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> to be sent over the wire. If the SOAP extension is applied to an XML Web service method created using ASP.NET, then the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP response from the XML Web service method. If the SOAP extension is applied to an XML Web service client, the <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> contains the SOAP request to an XML Web service method.  \n  \n Classic SoapExtension.ProcessMessage Example#1"
  syntax:
    content: public abstract void ProcessMessage (System.Web.Services.Protocols.SoapMessage message);
    parameters:
    - id: message
      type: System.Web.Services.Protocols.SoapMessage
      description: "<xref href=&quot;System.Web.Services.Protocols.SoapMessage&quot;> </xref>を処理します。"
  overload: System.Web.Services.Protocols.SoapExtension.ProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.SoapExtension.#ctor
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: SoapExtension()
  nameWithType: SoapExtension.SoapExtension()
  fullName: System.Web.Services.Protocols.SoapExtension.SoapExtension()
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ChainStream(Stream)
  nameWithType: SoapExtension.ChainStream(Stream)
  fullName: System.Web.Services.Protocols.SoapExtension.ChainStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer(Type)
  nameWithType: SoapExtension.GetInitializer(Type)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  nameWithType: SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
  fullName: System.Web.Services.Protocols.SoapExtension.GetInitializer(LogicalMethodInfo,SoapExtensionAttribute)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.SoapExtensionAttribute
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapExtensionAttribute
  nameWithType: SoapExtensionAttribute
  fullName: System.Web.Services.Protocols.SoapExtensionAttribute
- uid: System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: Initialize(Object)
  nameWithType: SoapExtension.Initialize(Object)
  fullName: System.Web.Services.Protocols.SoapExtension.Initialize(Object)
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ProcessMessage(SoapMessage)
  nameWithType: SoapExtension.ProcessMessage(SoapMessage)
  fullName: System.Web.Services.Protocols.SoapExtension.ProcessMessage(SoapMessage)
- uid: System.Web.Services.Protocols.SoapMessage
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapMessage
  nameWithType: SoapMessage
  fullName: System.Web.Services.Protocols.SoapMessage
- uid: System.Web.Services.Protocols.SoapExtension.#ctor*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: SoapExtension
  nameWithType: SoapExtension.SoapExtension
- uid: System.Web.Services.Protocols.SoapExtension.ChainStream*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ChainStream
  nameWithType: SoapExtension.ChainStream
- uid: System.Web.Services.Protocols.SoapExtension.GetInitializer*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: GetInitializer
  nameWithType: SoapExtension.GetInitializer
- uid: System.Web.Services.Protocols.SoapExtension.Initialize*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: Initialize
  nameWithType: SoapExtension.Initialize
- uid: System.Web.Services.Protocols.SoapExtension.ProcessMessage*
  parent: System.Web.Services.Protocols.SoapExtension
  isExternal: false
  name: ProcessMessage
  nameWithType: SoapExtension.ProcessMessage
