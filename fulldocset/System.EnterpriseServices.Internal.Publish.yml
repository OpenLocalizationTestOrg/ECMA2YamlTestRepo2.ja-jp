### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.Publish
  id: Publish
  children:
  - System.EnterpriseServices.Internal.Publish.#ctor
  - System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)
  - System.EnterpriseServices.Internal.Publish.GacInstall(System.String)
  - System.EnterpriseServices.Internal.Publish.GacRemove(System.String)
  - System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)
  - System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)
  - System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)
  - System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)
  - System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  - System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)
  - System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)
  langs:
  - csharp
  name: Publish
  nameWithType: Publish
  fullName: System.EnterpriseServices.Internal.Publish
  type: Class
  summary: "SOAP 対応の COM + アプリケーションの COM インターフェイスを公開します。"
  remarks: "発行は、.NET Framework によって内部的に使用します。 コード内で直接使用する必要はありません。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013eef-730b-45e2-ba24-874b7242c425")]

      public class Publish : System.EnterpriseServices.Internal.IComSoapPublisher
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapPublisher
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: Publish()
  nameWithType: Publish.Publish()
  fullName: System.EnterpriseServices.Internal.Publish.Publish()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EnterpriseServices.Internal.Publish&quot;> </xref>クラスです。"
  syntax:
    content: public Publish ();
    parameters: []
  overload: System.EnterpriseServices.Internal.Publish.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: Publish.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.CreateMailBox(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "指定した URL に SOAP 対応の COM + アプリケーションのメールボックスを作成します。 完全に実装されていません。"
  remarks: "完全に実装します。メールボックスは作成されません。 &quot;COM + SOAP services SMTP パブリケーションはサポートされていません&quot;というエラー メッセージを返します"
  syntax:
    content: public void CreateMailBox (string RootMailServer, string MailBox, out string SmtpName, out string Domain, out string PhysicalPath, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "ルートのメール サーバーの URL です。"
    - id: MailBox
      type: System.String
      description: "メールボックスを作成します。"
    - id: SmtpName
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、メールボックスを含む、簡易メール転送プロトコル (SMTP) サーバーの名前が含まれています。"
    - id: Domain
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、SMTP サーバーのドメインが含まれています。"
    - id: PhysicalPath
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、メールボックスのファイル システム パスが含まれています。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.CreateMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  id: CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: Publish.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 対応の COM + アプリケーション仮想ルートを作成します。"
  remarks: "推奨<xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A>CreateVirtualRoot の代わりに使用します</xref:System.EnterpriseServices.Internal.SoapServerVRoot.CreateVirtualRootEx%2A>。"
  syntax:
    content: public void CreateVirtualRoot (string Operation, string FullUrl, out string BaseUrl, out string VirtualRoot, out string PhysicalPath, out string Error);
    parameters:
    - id: Operation
      type: System.String
      description: "実行する操作です。"
    - id: FullUrl
      type: System.String
      description: "仮想ルートの完全な URL アドレス。"
    - id: BaseUrl
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、URL のベース アドレスが含まれています。"
    - id: VirtualRoot
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、仮想ルートの名前が含まれています。"
    - id: PhysicalPath
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、仮想ルートからのファイル パスが含まれています。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。       または、呼び出し元には、DNS 情報にアクセスする権限はありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>FullUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ローカル ホスト名を解決するときに、エラーが発生しました。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>FullUrl</code>空です。       - または - で指定されたスキーム<code>FullUrl</code>が無効です。       - または -<code>FullUrl</code>連続する&3; つ以上のスラッシュが含まれています。       - または - で指定されたパスワード<code>FullUrl</code>が無効です。       - または - でホスト名が指定された<code>FullUrl</code>が無効です。       - または - で、ファイル名が指定された<code>FullUrl</code>が無効です。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)
  id: DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: DeleteMailBox(String,String,String)
  nameWithType: Publish.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.DeleteMailBox(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 対応の COM + アプリケーション メールボックスを指定された URL を削除します。 完全に実装されていません。"
  remarks: "完全に実装されている、メールボックスは削除されません。 &quot;COM + SOAP services SMTP パブリケーションはサポートされていません&quot;というエラー メッセージを返します"
  syntax:
    content: public void DeleteMailBox (string RootMailServer, string MailBox, out string Error);
    parameters:
    - id: RootMailServer
      type: System.String
      description: "ルートのメール サーバーの URL です。"
    - id: MailBox
      type: System.String
      description: "削除対象のメールボックスです。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.DeleteMailBox*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)
  id: DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: Publish.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "SOAP 対応の COM + アプリケーション仮想ルートを削除します。 完全に実装されていません。"
  remarks: "DeleteVirtualRoot 用の機能は、まだ使用できません。      > [!CAUTION] >、メソッドは現在、エラーがなかったを返しますが、仮想ルートは削除されません。       推奨される方法が<xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>。</xref:System.EnterpriseServices.Internal.SoapServerVRoot.DeleteVirtualRootEx%2A>をする機能が使用可能になる場合"
  syntax:
    content: public void DeleteVirtualRoot (string RootWebServer, string FullUrl, out string Error);
    parameters:
    - id: RootWebServer
      type: System.String
      description: "ルート Web サーバー。"
    - id: FullUrl
      type: System.String
      description: "仮想ルートの完全な URL アドレス。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.GacInstall(System.String)
  id: GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: GacInstall(String)
  nameWithType: Publish.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.Publish.GacInstall(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "グローバル アセンブリ キャッシュにアセンブリをインストールします。"
  syntax:
    content: public void GacInstall (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "アセンブリのファイル システム パス。"
  overload: System.EnterpriseServices.Internal.Publish.GacInstall*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.GacRemove(System.String)
  id: GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: GacRemove(String)
  nameWithType: Publish.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.Publish.GacRemove(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "グローバル アセンブリ キャッシュからアセンブリを削除します。"
  syntax:
    content: public void GacRemove (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "アセンブリのファイル システム パス。"
  overload: System.EnterpriseServices.Internal.Publish.GacRemove*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。       または、呼び出し元には、パス検索アクセス許可はありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>AssemblyPath</code>空です。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>見つかりません。"
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "2 つの異なる証拠を使用して&2; 回、アセンブリまたはモジュールが読み込まれました。"
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>有効なアセンブリではありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)
  id: GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: GetAssemblyNameForCache(String,String)
  nameWithType: Publish.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "厳密な名前を持つ符号付き生成されたアセンブリの SoapCache ディレクトリ内には、完全なパスを返します。"
  remarks: "アンマネージ COM + コンポーネントの SOAP エンドポイントとして .NET リモート処理を介して公開する、プロキシは、アンマネージ コンポーネントを .NET Framework を使用できるようにに生成する必要があります。 これは、プログラムでタイプ ライブラリ インポーター (Tlbimp.exe) と同じ手順を実行することで、[!INCLUDE[winsdklong](~/add/includes/winsdklong-md.md)]プロキシ メタデータ アセンブリにアンマネージ COM + のタイプ ライブラリを変換するために使用するツールです。 クライアントが成功する SOAP 経由でライセンス認証、ただし、クライアントとサーバーのマシン必要があります共有同じ厳密な名前の署名済みメタデータ プロキシ。 このため、アンマネージの COM + コンポーネント、管理対象のプロキシ アセンブリが生成されたときに、厳密な名前のキーが生成し、プロキシ アセンブリに署名するために使用します。"
  syntax:
    content: public void GetAssemblyNameForCache (string TypeLibPath, out string CachePath);
    parameters:
    - id: TypeLibPath
      type: System.String
      description: "タイプ ライブラリを格納しているファイルのパス。"
    - id: CachePath
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、SoapCache ディレクトリの名前が含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>TypeLibPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ファイル名は空で、空白しか含んでいないか、無効な文字が含まれています。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "アクセスを<code> TypeLibPath </code>が拒否されました。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定したパス、ファイル名、またはその両方に、システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字未満である必要があり、ファイル名は 260 文字未満にする必要があります。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>TypeLibPath</code>文字列の途中にコロン (:) が含まれています。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)
  id: GetClientPhysicalPath(System.Boolean)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: GetClientPhysicalPath(Boolean)
  nameWithType: Publish.GetClientPhysicalPath(Boolean)
  fullName: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(Boolean)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "クライアント構成ファイルを保存するディレクトリのパスを返します。"
  remarks: "ディレクトリを作成&quot;\\com\\SOAPAssembly\\&quot;システム ディレクトリの下。"
  syntax:
    content: public static string GetClientPhysicalPath (bool CreateDir);
    parameters:
    - id: CreateDir
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 、ディレクトリを作成または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>へのパスを返しますが、ディレクトリを作成できません。"
    return:
      type: System.String
      description: "構成ファイルを格納するディレクトリのパス。"
  overload: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、必要なアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)
  id: GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: GetTypeNameFromProgId(String,String)
  nameWithType: Publish.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "アセンブリを反映し、ProgID に一致する型名を返します。"
  syntax:
    content: public string GetTypeNameFromProgId (string AssemblyPath, string ProgId);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "アセンブリのファイル システム パス。"
    - id: ProgId
      type: System.String
      description: "クラスのプログラム id。"
    return:
      type: System.String
      description: "ProgID に一致する型名。"
  overload: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)
  id: ParseUrl(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: ParseUrl(String,String,String)
  nameWithType: Publish.ParseUrl(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ParseUrl(String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "URL を解析し、ベース URL と仮想ルート部分を返します。"
  syntax:
    content: public static void ParseUrl (string FullUrl, out string BaseUrl, out string VirtualRoot);
    parameters:
    - id: FullUrl
      type: System.String
      description: "仮想ルートの完全な URL アドレス。"
    - id: BaseUrl
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、URL のベース アドレスが含まれています。"
    - id: VirtualRoot
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、仮想ルートの名前が含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.ParseUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>FullUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ローカル ホスト名を解決するときに、エラーが発生しました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、DNS 情報にアクセスする権限がありません。"
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "<code>FullUrl</code>空です。       - または - で指定されたスキーム<code>FullUrl</code>が無効です。       - または -<code>FullUrl</code>スラッシュが多すぎますが含まれています。       - または - で指定されたパスワード<code>FullUrl</code>が無効です。       - または - でホスト名が指定された<code>FullUrl</code>が無効です。       - または - で、ファイル名が指定された<code>FullUrl</code>が無効です。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: Publish.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "クライアントの構成ファイルの作成、クライアントのタイプ ライブラリを処理します。"
  remarks: "このメソッドは、リモート処理構成ファイルを生成するクライアント プロキシのインポート時に使用されます。       場合、`Mode`パラメーターが&quot;wellknownobject&quot;または空の文字列 (&quot;&quot;)、既知のオブジェクトが想定されます。それ以外の場合、クライアントのライセンス認証が使用されます。       推奨<xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A>ProcessClientTlb の代わりに使用します</xref:System.EnterpriseServices.Internal.SoapClientImport.ProcessClientTlbEx%2A>。"
  syntax:
    content: public void ProcessClientTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string VRoot, string BaseUrl, string Mode, string Transport, out string AssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "クラスのプログラム id。"
    - id: SrcTlbPath
      type: System.String
      description: "タイプ ライブラリを格納しているファイルのパス。"
    - id: PhysicalPath
      type: System.String
      description: "Web アプリケーションのディレクトリ。"
    - id: VRoot
      type: System.String
      description: "仮想ルートの名前。"
    - id: BaseUrl
      type: System.String
      description: "仮想ルートを含む基本 URL です。"
    - id: Mode
      type: System.String
      description: "ライセンス認証のモード。"
    - id: Transport
      type: System.String
      description: "使用されません。 指定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このパラメーターにします。"
    - id: AssemblyName
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、アセンブリの表示名が含まれています。"
    - id: TypeName
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、アセンブリの完全修飾型名が含まれています。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.ProcessClientTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  id: ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: Publish.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ProcessServerTlb(String,String,String,String,String,String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "追加するか、または web.config ファイルと値のファイルにコンポーネントのエントリを削除すると、サーバーのタイプ ライブラリを処理します。 必要な場合は、プロキシを生成します。"
  remarks: "ProcessServerTlb が探索ファイルと、タイプ ライブラリ内のコンポーネントの web.config ファイルにエントリを追加し、生成またはアンマネージ コンポーネントの bin ディレクトリにコピーし、プロキシ。 場合`Operation`equals&quot;、&quot;し、削除、Web.config ファイルと値ファイルからコンポーネントのエントリが削除されます。       推奨<xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A>と<xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A>ProcessServerTlb の代わりに使用します</xref:System.EnterpriseServices.Internal.SoapServerTlb.DeleteServerTlb%2A></xref:System.EnterpriseServices.Internal.SoapServerTlb.AddServerTlb%2A>。"
  syntax:
    content: public void ProcessServerTlb (string ProgId, string SrcTlbPath, string PhysicalPath, string Operation, out string strAssemblyName, out string TypeName, out string Error);
    parameters:
    - id: ProgId
      type: System.String
      description: "クラスのプログラム id。"
    - id: SrcTlbPath
      type: System.String
      description: "タイプ ライブラリを格納しているファイルのパス。"
    - id: PhysicalPath
      type: System.String
      description: "Web アプリケーションのディレクトリ。"
    - id: Operation
      type: System.String
      description: "実行する操作です。"
    - id: strAssemblyName
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、アセンブリの表示名が含まれています。"
    - id: TypeName
      type: System.String
      description: "このメソッドが戻るとき、このパラメーターには、アセンブリの完全修飾型名が含まれています。"
    - id: Error
      type: System.String
      description: "このメソッドが戻るときにこのパラメーターには、問題が発生した場合に、エラー メッセージが含まれています。"
  overload: System.EnterpriseServices.Internal.Publish.ProcessServerTlb*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。"
  - type: System.EnterpriseServices.ServicedComponentException
    commentId: T:System.EnterpriseServices.ServicedComponentException
    description: "<code> SrcTlbPath </code>パラメーター参照 scrobj.dll; そのため、スクリプト コンポーネントの SOAP パブリケーションがサポートされていません。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)
  id: RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: RegisterAssembly(String)
  nameWithType: Publish.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.Publish.RegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "COM 相互運用機能アセンブリを登録します。"
  remarks: "RegisterAssembly では、アセンブリ登録ツール (Regasm.exe) を使用して、作成可能なクラスをアセンブリに登録します。 詳細については、次を参照してください。 [Regasm.exe (アセンブリ登録ツール)](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void RegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "アセンブリのファイル システム パス。"
  overload: System.EnterpriseServices.Internal.Publish.RegisterAssembly*
  exceptions:
  - type: System.EnterpriseServices.RegistrationException
    commentId: T:System.EnterpriseServices.RegistrationException
    description: "入力アセンブリに厳密な名前がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。       - または - file:// で始まっていないコードベースが指定されて、必要なく<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>見つからないか、ファイル名拡張子が指定されていません。"
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>有効なアセンブリではありません。"
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "アセンブリまたはモジュールが&2; つの異なる証拠を使用して&2; 回読み込まれましたまたはアセンブリ名が MAX_PATH の文字を超えています。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マークされたメソッド<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>は<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>です。       - または - でマークされた&1; つ以上のメソッドがある<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>階層の特定のレベルです。       - または - でマークされたメソッドのシグネチャ<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>が無効です。"
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)
  id: UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  langs:
  - csharp
  name: UnRegisterAssembly(String)
  nameWithType: Publish.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "COM 相互運用機能アセンブリの登録を解除します。"
  remarks: "UnRegisterAssembly では、Regasm.exe を使用して、アセンブリの作成可能なクラスの登録を解除します。 詳細については、次を参照してください。 [Regasm.exe (アセンブリ登録ツール)](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public void UnRegisterAssembly (string AssemblyPath);
    parameters:
    - id: AssemblyPath
      type: System.String
      description: "アセンブリのファイル システム パス。"
  overload: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出しチェーン内の呼び出し元には、アンマネージ コードへのアクセス許可がありません。       - または - file:// で始まっていないコードベースが指定されて、必要なく<xref href=&quot;System.Net.WebPermission&quot;></xref>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>AssemblyPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "<code>AssemblyPath</code>見つからないか、ファイル名拡張子が指定されていません。"
  - type: System.BadImageFormatException
    commentId: T:System.BadImageFormatException
    description: "<code>AssemblyPath</code>有効なアセンブリではありません。"
  - type: System.IO.FileLoadException
    commentId: T:System.IO.FileLoadException
    description: "アセンブリまたはモジュールが&2; つの異なる証拠を使用して&2; 回読み込まれましたまたはアセンブリ名が MAX_PATH の文字を超えています。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マークされたメソッド<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>は<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;></xref>です。       - または - でマークされた&1; つ以上のメソッドがある<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>階層の特定のレベルです。       - または - でマークされたメソッドのシグネチャ<xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;></xref>が無効です。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.FileLoadException
  isExternal: true
  name: System.IO.FileLoadException
- uid: System.BadImageFormatException
  isExternal: true
  name: System.BadImageFormatException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.EnterpriseServices.ServicedComponentException
  parent: System.EnterpriseServices
  isExternal: false
  name: ServicedComponentException
  nameWithType: ServicedComponentException
  fullName: System.EnterpriseServices.ServicedComponentException
- uid: System.EnterpriseServices.RegistrationException
  parent: System.EnterpriseServices
  isExternal: false
  name: RegistrationException
  nameWithType: RegistrationException
  fullName: System.EnterpriseServices.RegistrationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.EnterpriseServices.Internal.Publish.#ctor
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: Publish()
  nameWithType: Publish.Publish()
  fullName: System.EnterpriseServices.Internal.Publish.Publish()
- uid: System.EnterpriseServices.Internal.Publish.CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: CreateMailBox(String,String,String,String,String,String)
  nameWithType: Publish.CreateMailBox(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.CreateMailBox(String,String,String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: CreateVirtualRoot(String,String,String,String,String,String)
  nameWithType: Publish.CreateVirtualRoot(String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot(String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.DeleteMailBox(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: DeleteMailBox(String,String,String)
  nameWithType: Publish.DeleteMailBox(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.DeleteMailBox(String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(System.String,System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: DeleteVirtualRoot(String,String,String)
  nameWithType: Publish.DeleteVirtualRoot(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot(String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.GacInstall(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GacInstall(String)
  nameWithType: Publish.GacInstall(String)
  fullName: System.EnterpriseServices.Internal.Publish.GacInstall(String)
- uid: System.EnterpriseServices.Internal.Publish.GacRemove(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GacRemove(String)
  nameWithType: Publish.GacRemove(String)
  fullName: System.EnterpriseServices.Internal.Publish.GacRemove(String)
- uid: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(System.String,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetAssemblyNameForCache(String,String)
  nameWithType: Publish.GetAssemblyNameForCache(String,String)
  fullName: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache(String,String)
- uid: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(System.Boolean)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetClientPhysicalPath(Boolean)
  nameWithType: Publish.GetClientPhysicalPath(Boolean)
  fullName: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(System.String,System.String)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetTypeNameFromProgId(String,String)
  nameWithType: Publish.GetTypeNameFromProgId(String,String)
  fullName: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId(String,String)
- uid: System.EnterpriseServices.Internal.Publish.ParseUrl(System.String,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ParseUrl(String,String,String)
  nameWithType: Publish.ParseUrl(String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ParseUrl(String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  nameWithType: Publish.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ProcessClientTlb(String,String,String,String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ProcessServerTlb(String,String,String,String,String,String,String)
  nameWithType: Publish.ProcessServerTlb(String,String,String,String,String,String,String)
  fullName: System.EnterpriseServices.Internal.Publish.ProcessServerTlb(String,String,String,String,String,String,String)
- uid: System.EnterpriseServices.Internal.Publish.RegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: RegisterAssembly(String)
  nameWithType: Publish.RegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.Publish.RegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(System.String)
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: UnRegisterAssembly(String)
  nameWithType: Publish.UnRegisterAssembly(String)
  fullName: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly(String)
- uid: System.EnterpriseServices.Internal.Publish.#ctor*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: Publish
  nameWithType: Publish.Publish
- uid: System.EnterpriseServices.Internal.Publish.CreateMailBox*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: CreateMailBox
  nameWithType: Publish.CreateMailBox
- uid: System.EnterpriseServices.Internal.Publish.CreateVirtualRoot*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: CreateVirtualRoot
  nameWithType: Publish.CreateVirtualRoot
- uid: System.EnterpriseServices.Internal.Publish.DeleteMailBox*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: DeleteMailBox
  nameWithType: Publish.DeleteMailBox
- uid: System.EnterpriseServices.Internal.Publish.DeleteVirtualRoot*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: DeleteVirtualRoot
  nameWithType: Publish.DeleteVirtualRoot
- uid: System.EnterpriseServices.Internal.Publish.GacInstall*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GacInstall
  nameWithType: Publish.GacInstall
- uid: System.EnterpriseServices.Internal.Publish.GacRemove*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GacRemove
  nameWithType: Publish.GacRemove
- uid: System.EnterpriseServices.Internal.Publish.GetAssemblyNameForCache*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetAssemblyNameForCache
  nameWithType: Publish.GetAssemblyNameForCache
- uid: System.EnterpriseServices.Internal.Publish.GetClientPhysicalPath*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetClientPhysicalPath
  nameWithType: Publish.GetClientPhysicalPath
- uid: System.EnterpriseServices.Internal.Publish.GetTypeNameFromProgId*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: GetTypeNameFromProgId
  nameWithType: Publish.GetTypeNameFromProgId
- uid: System.EnterpriseServices.Internal.Publish.ParseUrl*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ParseUrl
  nameWithType: Publish.ParseUrl
- uid: System.EnterpriseServices.Internal.Publish.ProcessClientTlb*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ProcessClientTlb
  nameWithType: Publish.ProcessClientTlb
- uid: System.EnterpriseServices.Internal.Publish.ProcessServerTlb*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: ProcessServerTlb
  nameWithType: Publish.ProcessServerTlb
- uid: System.EnterpriseServices.Internal.Publish.RegisterAssembly*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: RegisterAssembly
  nameWithType: Publish.RegisterAssembly
- uid: System.EnterpriseServices.Internal.Publish.UnRegisterAssembly*
  parent: System.EnterpriseServices.Internal.Publish
  isExternal: false
  name: UnRegisterAssembly
  nameWithType: Publish.UnRegisterAssembly
