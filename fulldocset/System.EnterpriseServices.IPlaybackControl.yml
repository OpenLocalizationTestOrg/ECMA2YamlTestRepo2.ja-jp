### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "サーバー側の再生エラーの異常な処理と、メッセージ キュー配信メカニズムのエラーをクライアント側のキュー コンポーネントで機能します。"
  remarks: "COM + カタログ内のコンポーネントに対して定義されている例外クラスは、IPlaybackControl と元のクラスのインターフェイスの両方を実装します。 元のクラス インターフェイスのメソッドの実装を使用して、クラス自体で障害が発生したメソッドの例外処理を実行できます。 後に呼び出されます<xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>または<xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>を最初に呼び出されたメソッドの例外を処理します</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A></xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>。       キュー コンポーネント プレーヤーでは、メッセージを最終的な載りましたまたは配信不能キューに配置する例外ハンドラー オブジェクトを通知するために IPlaybackControl のメソッドを呼び出します。 キュー コンポーネント プレーヤーは、元のメソッド呼び出しで失敗した例外ハンドラー オブジェクトの同じメソッドを呼び出します。 例外ハンドラー オブジェクトは、問題の診断情報の収集など、オブジェクトまたはクライアントに、問題の通知メッセージを生成する、代わりをたとえば、実装できます。 アプリケーションが IPlaybackControl を実装していない場合、キュー コンポーネント プレーヤーは、すべての再試行を過ぎると、有害なメッセージが最終載りましたまたは配信不能メッセージ キューに配置されます。       有害メッセージは、サーバー名またはキュー システムでの問題のため、いくつかの理由から、処理できないメッセージです。 トランザクションがロールバックされ、有害メッセージはキューの先頭に移動します。 メッセージが再度にデキューされると、同じ条件が発生します。 このメッセージは、何かを行う問題を解決するまで無期限にループを続行できます。 キュー コンポーネント サービスは、一連の再試行を使用して、有害なメッセージを処理します。 いくつかの失敗した再試行後に、メッセージは、最終的な静止キューに移動されます。 有害メッセージ キューに置かれたコンポーネントのメッセージのムーバー ツールを使用して、手動で移動するまでに、静止キューに残ります。       有害なメッセージ状況解決することも、プログラムでを使用して、<xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>メソッドで、遅延のアクティブ化を再生するすべての試行が失敗したサーバー側コンポーネントの作成者に通知します</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>。       有害なメッセージを検出する場合は、問題の根本原因を迅速に解決できる可能性があります。 たとえば、何らかの理由により、サーバーがオフラインで場合、は、サーバーをオンラインに戻すを取り込むことができます。 問題を迅速に解決することはできない場合、は、トランザクションが発生しなかったことを要求元に通知する別のトランザクションを自動的に生成できます。 要求元は、既にコミットされているトランザクションの効果を反転する補正トランザクションを作成し、ことができます。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "あるサーバーにメッセージを配信するメッセージ キューの試行をすべて拒否され、最終的にメッセージがクライアント側のトランザクション配信不能キューにクライアント側の例外処理コンポーネントに通知します。"
  remarks: "トランザクション配信不能キューにメッセージが到着、COM + は、この通知を配信サーバー クラスに関連するクライアント側の例外ハンドラーを起動しようとします。 それは、まず FinalClientRetry を呼び出すし、例外ハンドラー オブジェクトの例外処理のバージョンの障害が発生したメソッドを呼び出します。 この例外メソッドは、エラーの記録、管理者にメール メッセージの送信、またはクライアント側の補正アクション (の以前のトランザクションの効果を反転すること) を実行など、例外の操作を実行できます。 Exception メソッドが成功しなかった場合、メッセージはトランザクション配信不能キューに残ります。       トランザクション配信不能キューは、Microsoft メッセージ キュー (MSMQ) エクスプ ローラーで表示できます。"
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "サーバーへの遅延のアクティベーションを再生するすべての試行が失敗しましたが、そのメッセージをその最終的な静止キューに移動するには、サーバー側の例外クラスの実装を通知します。"
  remarks: "メッセージは、トランザクション配信不能キューに到着、COM + は、この通知を配信サーバー クラスに関連するサーバー側の例外ハンドラーを起動しようとします。 これは最初に呼び出して FinalServerRetry、し、例外処理、失敗したメソッド、例外ハンドラー オブジェクトのバージョンを呼び出すことによってです。 この例外メソッドは、エラーの記録、管理者にメール メッセージの送信、またはクライアント側の補正アクション (の以前のトランザクションの効果を反転すること) を実行など、例外の操作を実行できます。 サーバー オブジェクトは、このトランザクションを正常に完了するには、あらゆる努力を行います。 それ以外の場合、メッセージを再処理する手動による介入が必要です。 Exception メソッドが成功しなかった場合、メッセージは最終的な静止キューに移動します。"
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
