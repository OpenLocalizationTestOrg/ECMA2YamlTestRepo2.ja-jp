### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler
  id: X509SecurityTokenHandler
  children:
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  - System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  langs:
  - csharp
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler
  type: Class
  summary: "型のトークンを処理するセキュリティ トークン ハンドラーを表す<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。 既定では、ハンドラーは、X.509 証明書の信頼チェーンの検証を実行します。"
  syntax:
    content: 'public class X509SecurityTokenHandler : System.IdentityModel.Tokens.SecurityTokenHandler'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityTokenHandler
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityTokenHandler.CanReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.Configuration
  - System.IdentityModel.Tokens.SecurityTokenHandler.ContainingCollection
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateSecurityTokenReference(System.IdentityModel.Tokens.SecurityToken,System.Boolean)
  - System.IdentityModel.Tokens.SecurityTokenHandler.CreateToken(System.IdentityModel.Tokens.SecurityTokenDescriptor)
  - System.IdentityModel.Tokens.SecurityTokenHandler.DetectReplayedToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.ReadToken(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationFailure(System.IdentityModel.Tokens.SecurityToken,System.String)
  - System.IdentityModel.Tokens.SecurityTokenHandler.TraceTokenValidationSuccess(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Tokens.SecurityTokenHandler.WriteToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref>既定値を持つクラス。"
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>プロパティに設定されている`false`と<xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>性検証ツールは既定の証明書検証コントロールとして使用します</xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A></xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>。"
  syntax:
    content: public X509SecurityTokenHandler ();
    parameters: []
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref>証明書が Windows アカウントにマップするかどうかを示す値を使用してクラスです。"
  remarks: "<xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>性検証ツールは既定の証明書検証コントロールとして使用します</xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>。"
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Windows アカウントに、証明書をマップする場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 セット、<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>プロパティ</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref>クラスを指定された証明書検証を使用します。"
  remarks: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>プロパティに設定されている`false`</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows%2A>。"
  syntax:
    content: public X509SecurityTokenHandler (System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "使用する証明書検証コントロール。 セット、<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>プロパティ</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityTokenHandler&quot;> </xref>証明書は、Windows アカウントと、指定された証明書検証に対応するかどうかを示す値を使用してクラスです。"
  syntax:
    content: public X509SecurityTokenHandler (bool mapToWindows, System.IdentityModel.Selectors.X509CertificateValidator certificateValidator);
    parameters:
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Windows アカウントに、証明書をマップする場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 セット、<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>プロパティ</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*>。"
    - id: certificateValidator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "使用する証明書検証コントロール。 セット、<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>プロパティ</xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*>。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  id: CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定したリーダーを参照するかどうかを示す値を返します、 <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;> </xref>要素。"
  syntax:
    content: public override bool CanReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "キー識別子句の開始要素に配置されている XML リーダーです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リーダーを参照している場合、 <xref uid=&quot;langword_csharp_&lt;ds:X509Data&gt;&quot; name=&quot;&lt;ds:X509Data&gt;&quot; href=&quot;&quot;> </xref>要素、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  id: CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Ws-security 仕様で定義されている、リーダーが X.509 セキュリティ トークンを指すかどうかを示す値を返します。"
  syntax:
    content: public override bool CanReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "トークンの XML を指すリーダーです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リーダーが、X.509 セキュリティ トークンを指している場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  id: CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーが型のトークンの検証をサポートするかどうかを示す値を取得<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  syntax:
    content: public override bool CanValidateToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハンドラーは、型のトークンの検証をサポートしている場合<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーによって、指定したキー識別子句をシリアル化できるかどうかを示す値を返します。"
  remarks: "サポートされているキー識別子句の種類: 1。  <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>2 になります。</xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>  <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>3 です。</xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>  <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"
  syntax:
    content: public override bool CanWriteKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "シリアル化するキー識別句。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> securityKeyIdentifierClause </code>はサポートされて場合に、<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>プロパティに設定されている<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> 。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  id: CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このハンドラーが型のトークンを書き込むかどうかを示す値を取得<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  syntax:
    content: public override bool CanWriteToken { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハンドラーは、型のトークンを書き込むことができる場合<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  id: CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または設定、 <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref>現在のインスタンスによって使用されます。"
  syntax:
    content: public System.IdentityModel.Selectors.X509CertificateValidator CertificateValidator { get; set; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "現在のインスタンスによって使用される X.509 証明書検証コントロール。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  id: GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "X.509 セキュリティ トークンの種類、Ws-security X.509 トークン プロファイルで定義を取得します。"
  syntax:
    content: public override string[] GetTokenTypeIdentifiers ();
    parameters: []
    return:
      type: System.String[]
      description: "X.509 トークンの型 URI。 既定では、値、<xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*>プロパティ</xref:System.IdentityModel.Tokens.SecurityTokenTypes.X509Certificate*>。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "XML からカスタム構成を読み込みます。"
  syntax:
    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfigElements);
    parameters:
    - id: customConfigElements
      type: System.Xml.XmlNodeList
      description: "カスタム構成を含む XML 要素です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>customConfigElements</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定されたカスタム構成が正しくありません。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  id: MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または検証トークンを Windows アカウントにマップするかどうかを示す値を設定します。"
  syntax:
    content: public bool MapToWindows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証トークン; Windows アカウントにマップする場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  id: ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML リーダーによって参照されるキー識別句を逆シリアル化します。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityKeyIdentifierClause ReadKeyIdentifierClause (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "キー識別子句を参照する XML リーダーです。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "XML から逆シリアル化されたキー識別句。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  id: ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定された XML リーダーで参照されている、X.509 セキュリティ トークンを逆シリアル化します。"
  syntax:
    content: public override System.IdentityModel.Tokens.SecurityToken ReadToken (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "X.509 セキュリティ トークンが指している XML リーダーです。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "XML から逆シリアル化するセキュリティ トークンです。 インスタンス<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>reader</code>Ws-security の X.509 トークン プロファイルで定義されている、有効な X.509 セキュリティ トークンを指していませんはします。 または、指定された encodingType が Base64 または HexBinary 以外です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  id: TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得、<xref:System.Type>このハンドラーが処理されるトークンの</xref:System.Type>。"
  syntax:
    content: public override Type TokenType { get; }
    return:
      type: System.Type
      description: "既定では、型、 <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>クラスです。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した X.509 セキュリティ トークンを検証します。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity> ValidateToken (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "検証に使用するトークンです。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
      description: "トークンに含まれている識別情報。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>割り当てることはできません<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - 発行者名レジストリがありません (<xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;></xref>) を構成します。(、 <> </> *> のプロパティ、 <xref href=&quot;System.IdentityModel.Tokens.SecurityTokenHandlerConfiguration&quot;> </xref>によって参照されている、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.)</xref:System.IdentityModel.Tokens.SecurityTokenHandler.Configuration*>"
  - type: System.IdentityModel.Tokens.SecurityTokenValidationException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenValidationException
    description: "現在<xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;></xref>トークンで証明書を検証できませんでした。"
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "現在<xref href=&quot;System.IdentityModel.Tokens.IssuerNameRegistry&quot;></xref>返される<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>トークン内の証明書の発行者を解決しようとしています。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "XML ライターに、指定したキー識別子句をシリアル化します。"
  syntax:
    content: public override void WriteKeyIdentifierClause (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityKeyIdentifierClause securityKeyIdentifierClause);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "キー識別子句のシリアル化する XML ライター。"
    - id: securityKeyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "シリアル化するキー識別句。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityKeyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*> 。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  id: WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定した XML ライターに、指定した X.509 セキュリティ トークンをシリアル化します。"
  syntax:
    content: public override void WriteToken (System.Xml.XmlWriter writer, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "トークンのシリアル化する XML ライター。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "X.509 セキュリティ トークンをシリアル化します。 インスタンス<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>writer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>token</code>割り当てることはできません<xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;></xref>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  id: WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または XmlDsig 定義句の種類が優先されるかどうかを示す値を設定します。"
  remarks: "XmlDSig 定義はサポートされて<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>の種類: - X509IssuerSerial - X509SKI - X509Certificate</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>"
  syntax:
    content: public bool WriteXmlDSigDefinedClauseTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>XmlDsig 定義句の種類は優先; 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  id: X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  langs:
  - csharp
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または設定、 <xref href=&quot;System.IdentityModel.Tokens.X509NTAuthChainTrustValidator&quot;> </xref>使用される現在のインスタンスによって証明書の検証中に受信した X.509 証明書が Windows アカウントにマップされます。"
  syntax:
    content: public System.IdentityModel.Tokens.X509NTAuthChainTrustValidator X509NTAuthChainTrustValidator { get; set; }
    return:
      type: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
      description: "指定された X.509 証明書を検証し、証明書を Windows アカウントにマップするかどうかと、証明書チェーンが信頼されているかどうかを確認する X.509 証明書検証します。"
  overload: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityTokenHandler
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityTokenHandler
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IdentityModel.Tokens.SecurityTokenValidationException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenValidationException
  nameWithType: SecurityTokenValidationException
  fullName: System.IdentityModel.Tokens.SecurityTokenValidationException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler()
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler()
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor(System.Boolean,System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509SecurityTokenHandler(Boolean,X509CertificateValidator)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.CanReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers()
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers()
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause(XmlReader)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(System.Xml.XmlReader)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken(XmlReader)
  nameWithType: X509SecurityTokenHandler.ReadToken(XmlReader)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken(XmlReader)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken(SecurityToken)
  nameWithType: X509SecurityTokenHandler.ValidateToken(SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ClaimsIdentity>
  nameWithType: ReadOnlyCollection<ClaimsIdentity>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Security.Claims.ClaimsIdentity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: ClaimsIdentity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause(XmlWriter,SecurityKeyIdentifierClause)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken(XmlWriter,SecurityToken)
  nameWithType: X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken(XmlWriter,SecurityToken)
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509NTAuthChainTrustValidator
  fullName: System.IdentityModel.Tokens.X509NTAuthChainTrustValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.#ctor*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509SecurityTokenHandler
  nameWithType: X509SecurityTokenHandler.X509SecurityTokenHandler
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanReadToken
  nameWithType: X509SecurityTokenHandler.CanReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanValidateToken
  nameWithType: X509SecurityTokenHandler.CanValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.CanWriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CanWriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CanWriteToken
  nameWithType: X509SecurityTokenHandler.CanWriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.CertificateValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: CertificateValidator
  nameWithType: X509SecurityTokenHandler.CertificateValidator
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.GetTokenTypeIdentifiers*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: GetTokenTypeIdentifiers
  nameWithType: X509SecurityTokenHandler.GetTokenTypeIdentifiers
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.LoadCustomConfiguration*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: X509SecurityTokenHandler.LoadCustomConfiguration
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.MapToWindows*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: MapToWindows
  nameWithType: X509SecurityTokenHandler.MapToWindows
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.ReadKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ReadToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ReadToken
  nameWithType: X509SecurityTokenHandler.ReadToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.TokenType*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: TokenType
  nameWithType: X509SecurityTokenHandler.TokenType
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.ValidateToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: ValidateToken
  nameWithType: X509SecurityTokenHandler.ValidateToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteKeyIdentifierClause
  nameWithType: X509SecurityTokenHandler.WriteKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteToken*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteToken
  nameWithType: X509SecurityTokenHandler.WriteToken
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: WriteXmlDSigDefinedClauseTypes
  nameWithType: X509SecurityTokenHandler.WriteXmlDSigDefinedClauseTypes
- uid: System.IdentityModel.Tokens.X509SecurityTokenHandler.X509NTAuthChainTrustValidator*
  parent: System.IdentityModel.Tokens.X509SecurityTokenHandler
  isExternal: false
  name: X509NTAuthChainTrustValidator
  nameWithType: X509SecurityTokenHandler.X509NTAuthChainTrustValidator
