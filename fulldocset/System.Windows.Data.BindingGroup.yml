### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.BindingGroup
  id: BindingGroup
  children:
  - System.Windows.Data.BindingGroup.#ctor
  - System.Windows.Data.BindingGroup.BeginEdit
  - System.Windows.Data.BindingGroup.BindingExpressions
  - System.Windows.Data.BindingGroup.CancelEdit
  - System.Windows.Data.BindingGroup.CanRestoreValues
  - System.Windows.Data.BindingGroup.CommitEdit
  - System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  - System.Windows.Data.BindingGroup.HasValidationError
  - System.Windows.Data.BindingGroup.IsDirty
  - System.Windows.Data.BindingGroup.Items
  - System.Windows.Data.BindingGroup.Name
  - System.Windows.Data.BindingGroup.NotifyOnValidationError
  - System.Windows.Data.BindingGroup.Owner
  - System.Windows.Data.BindingGroup.SharesProposedValues
  - System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  - System.Windows.Data.BindingGroup.UpdateSources
  - System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  - System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  - System.Windows.Data.BindingGroup.ValidationErrors
  - System.Windows.Data.BindingGroup.ValidationRules
  langs:
  - csharp
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: System.Windows.Data.BindingGroup
  type: Class
  summary: "バインディングのコレクションを格納および<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>オブジェクトの検証に使用されるオブジェクト。"
  remarks: "BindingGroup では、検証および一緒に更新できる、複数のバインディング間のリレーションシップを作成します。 たとえば、アプリケーションがアドレスを入力するユーザーを要求するとします。 その後、アプリケーションは、型のオブジェクトを設定`Address`のプロパティを持つ`Street`、 `City`、 `ZipCode`、および`Country`ユーザーが指定した値を持つ。 アプリケーションが&4; つを含むパネル<xref:System.Windows.Controls.TextBox>コントロール、それぞれが&1; つのオブジェクトのプロパティにバインドされたデータ</xref:System.Windows.Controls.TextBox>。 使用することができます、<xref:System.Windows.Controls.ValidationRule>を検証する BindingGroup に、`Address`オブジェクト</xref:System.Windows.Controls.ValidationRule>。 バインディングは、同じ BindingGroup に参加する場合、は、郵便番号コードは住所の国または地域の有効なことを確認することができます。       <xref:System.Windows.FrameworkElement.BindingGroup%2A><xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>。</xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement>のプロパティ</xref:System.Windows.FrameworkElement.BindingGroup%2A>を設定します。 子要素は、他の継承可能なプロパティと同様に、親要素から、BindingGroup を継承します。 子孫の要素のバインディングが、次の状況のいずれかが発生した場合、BindingGroup に追加:-バインドのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を BindingGroup を持つ要素が同じオブジェクトおよび<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>プロパティが設定されていない</xref:System.Windows.Data.BindingBase.BindingGroupName%2A></xref:System.Windows.FrameworkElement.DataContext%2A>。      -<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと等しい、<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.FrameworkContentElement.BindingGroup%2A>明示的に設定されていないと`null`</xref:System.Windows.FrameworkContentElement.BindingGroup%2A></xref:System.Windows.Data.BindingGroup.Name%2A></xref:System.Windows.Data.BindingBase.BindingGroupName%2A>。       アドレスの例では、たとえば次に示す、<xref:System.Windows.FrameworkElement.DataContext%2A>の<xref:System.Windows.Controls.Panel>型のオブジェクトに設定されている`Address`</xref:System.Windows.Controls.Panel></xref:System.Windows.FrameworkElement.DataContext%2A>。 各バインド<xref:System.Windows.Controls.TextBox>パネルの BindingGroup に追加されます</xref:System.Windows.Controls.TextBox>。       追加する<xref:System.Windows.Controls.ValidationRule>BindingGroup にオブジェクト</xref:System.Windows.Controls.ValidationRule>。 最初のパラメーターとして、BindingGroup が渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッドときに、<xref:System.Windows.Controls.ValidationRule>を実行します</xref:System.Windows.Controls.ValidationRule></xref:System.Windows.Controls.ValidationRule.Validate%2A>。 使用することができます、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>、オブジェクトの提案された値を取得するには、その BindingGroup にメソッド、および<xref:System.Windows.Data.BindingGroup.Items%2A>のバインディングのソースを取得するプロパティ</xref:System.Windows.Data.BindingGroup.Items%2A></xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29></xref:System.Windows.Data.BindingGroup.TryGetValue%2A>。       BindingGroup に個別に更新される各バインディングではなく、同時にバインディングのソースを更新します。 データを検証する方法のいずれかを呼び出すときに (<xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>、 <xref:System.Windows.Data.BindingGroup.UpdateSources%2A>、または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>)、各バインディング<xref:System.Windows.Controls.TextBox>で例が検証され、更新された可能性があります</xref:System.Windows.Controls.TextBox></xref:System.Windows.Data.BindingGroup.CommitEdit%2A></xref:System.Windows.Data.BindingGroup.UpdateSources%2A></xref:System.Windows.Data.BindingGroup.ValidateWithoutUpdate%2A>。 呼び出すまで、バインディングが BindingGroup の一部では、バインディングのソースは更新されません<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>または<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>、BindingGroup に明示的に設定していない場合、<xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>プロパティ</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A></xref:System.Windows.Data.BindingGroup.CommitEdit%2A></xref:System.Windows.Data.BindingGroup.UpdateSources%2A>。"
  example:
  - "The following examples create an application that prompts the user to enter the description and price of an item and the date that the offer expires. The application displays the current information for the item below the form. The user can submit or cancel the changes.  \n  \n The application does the following to achieve this behavior.  \n  \n-   Creates a BindingGroup and adds it the root <xref:System.Windows.Controls.StackPanel> when it creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A>, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A>, and <xref:System.Windows.Data.BindingGroup.CancelEdit%2A> in the application's logic to enable rolling back changes.  \n  \n-   Calls <xref:System.Windows.Data.BindingGroup.TryGetValue%2A> in a <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the user's input and then check that an item over 100 dollars is available for at least seven days.  \n  \n The following example creates the [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] of the application. The root <xref:System.Windows.Controls.StackPanel> has a BindingGroup that contains a <xref:System.Windows.Controls.ValidationRule> that validates the item, as described previously. The binding objects on the `Price` property and the `OfferExpires` property become part of the BindingGroup and each binding has a <xref:System.Windows.Controls.ValidationRule> to make sure that price and date, respectively, are valid values. The validation rules for the individual properties run before the <xref:System.Windows.Controls.ValidationRule> on the BindingGroup.  \n  \n [!code-xml[BindingGroupSnippets#WindowLayout](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#windowlayout)]  \n  \n The following example shows the event handlers for the application. When the user clicks the Submit button, the application calls <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> to run each <xref:System.Windows.Controls.ValidationRule> that is associated with the BindingGroup. If each <xref:System.Windows.Controls.ValidationRule> succeeds, <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> saves the values to the object and ends the edit transaction. If <xref:System.Windows.Data.BindingGroup.CommitEdit%2A> is successful, the application begins another edit transaction. When a <xref:System.Windows.Controls.ValidationRule> fails, the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event occurs because the application set <xref:System.Windows.Data.BindingGroup.NotifyOnValidationError%2A> to `true` on the BindingGroup (in the previous example). `ItemError` handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event and displays information about the validation error to the user. The example also handles the <xref:System.Windows.FrameworkElement.Loaded> event for the <xref:System.Windows.Controls.StackPanel> and the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event for the **Cancel** button.  \n  \n [!code-cs[BindingGroupSnippets#WindowLogic](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#windowlogic)]\n [!code-vb[BindingGroupSnippets#WindowLogic](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#windowlogic)]  \n  \n The following example shows the custom <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`, which was added to the BindingGroup in the first example. The <xref:System.Windows.Controls.ValidationRule> uses the BindingGroup in its <xref:System.Windows.Controls.ValidationRule.Validate%2A> method to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: 'public class BindingGroup : System.Windows.DependencyObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.#ctor
  id: '#ctor'
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>クラスです。"
  syntax:
    content: public BindingGroup ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BeginEdit
  id: BeginEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "内のソースの編集トランザクションを開始、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  remarks: "場合内のソース、<xref:System.Windows.Data.BindingGroup>保留中の変更を破棄することをサポートして、編集トランザクションを開始する BeginEdit を呼び出すことができますを呼び出す<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>保留中の変更を保存する<xref:System.Windows.Data.BindingGroup.CancelEdit%2A>を保留中の変更を破棄します</xref:System.Windows.Data.BindingGroup.CancelEdit%2A></xref:System.Windows.Data.BindingGroup.CommitEdit%2A></xref:System.Windows.Data.BindingGroup>。       内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、BeginEdit 呼び出し<xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.BeginEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls BeginEdit when a window loads to begin the edit transaction.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public void BeginEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.BeginEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  id: BindingExpressions
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "コレクションを取得<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>の各バインディングの情報が含まれているオブジェクト、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  remarks: "A<xref:System.Windows.Data.BindingExpression>に属している、<xref:System.Windows.Data.BindingGroup>ケースの次のいずれかが発生した場合:-バインドのソースと<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ要素の<xref:System.Windows.Data.BindingGroup>同じオブジェクトおよび<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が設定されていません</xref:System.Windows.Data.BindingBase.BindingGroupName%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingExpression>。      -<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>バインディングのプロパティと<xref:System.Windows.Data.BindingGroup.Name%2A>の<xref:System.Windows.Data.BindingGroup>同じ null 値に設定されて、<xref:System.Windows.Data.BindingGroup>バインディングのターゲット要素の親要素に属している</xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup.Name%2A></xref:System.Windows.Data.BindingBase.BindingGroupName%2A>。      -追加、 <xref:System.Windows.Data.BindingExpression>BindingExpressions を</xref:System.Windows.Data.BindingExpression>。"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase> BindingExpressions { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
      description: "コレクション<xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref>の各バインディングの情報が含まれているオブジェクト、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.BindingExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CancelEdit
  id: CancelEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "編集トランザクションを終了し、保留中の変更を破棄します。"
  remarks: "このメソッドは、ソース オブジェクトがこれを行う場合は、保留中の変更を破棄し、編集トランザクションを終了するソースです。 メソッドは、保存されているソースの値で、ターゲットのプロパティを更新します。       内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、CancelEdit 呼び出し<xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.CancelEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CancelEdit to discard the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#CancelEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[BindingGroupSnippets#CancelEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.Windows.Data.BindingGroup.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  id: CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "バインディングの各ソースが保留中の変更を破棄し、元の値を復元するかどうかを取得します。"
  remarks: "<xref:System.ComponentModel.IEditableObject>。</xref:System.ComponentModel.IEditableObject>が実装されている場合、保留中の変更のソースを破棄できます。"
  syntax:
    content: public bool CanRestoreValues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>バインディングの各ソースが保留中の変更を破棄を元の値を復元それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.CanRestoreValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.CommitEdit
  id: CommitEdit
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "すべての実行、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>オブジェクトし、すべての検証規則が成功した場合は、バインディング ソースを更新します。"
  remarks: "場合すべて<xref:System.Windows.Controls.ValidationRule>成功すると、保留中の変更をコミットし、場合、ソースの編集トランザクションを終了するソース オブジェクト切らないでの処理を実行できるは、このメソッドと、</xref:System.Windows.Controls.ValidationRule>       内の各オブジェクト<xref:System.Windows.Data.BindingGroup.Items%2A>を実装する<xref:System.ComponentModel.IEditableObject>、CommitEdit 呼び出し<xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName></xref:System.ComponentModel.IEditableObject></xref:System.Windows.Data.BindingGroup.Items%2A>"
  example:
  - "The following example calls CommitEdit to save the pending changes and then calls <xref:System.Windows.Data.BindingGroup.BeginEdit%2A> to prepare the source to be re-edited.  \n  \n [!code-cs[BindingGroupSnippets#BeginEdit](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#beginedit)]\n [!code-vb[BindingGroupSnippets#BeginEdit](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#beginedit)]"
  syntax:
    content: public bool CommitEdit ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、すべて<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>成功すると、値は、それ以外のソースにコミットされた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  id: GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指定したプロパティと項目に対して提案された値を返します。"
  remarks: "このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>ソースにコミットする値を取得するメソッド</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>。 戻り値の型をステージに依存、<xref:System.Windows.Controls.ValidationRule>に発生します</xref:System.Windows.Controls.ValidationRule>。 たとえば場合、<xref:System.Windows.Controls.TextBox>は、整数型のプロパティにバインドされたデータと<xref:System.Windows.Controls.ValidationRule>呼び出し GetValue があるその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep>、メソッドは、文字列を返します</xref:System.Windows.Controls.ValidationStep></xref:System.Windows.Controls.ValidationRule.ValidationStep%2A></xref:System.Windows.Controls.ValidationRule></xref:System.Windows.Controls.TextBox>。 場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>&quot;éý&quot; <xref:System.Windows.Controls.ValidationStep>、バインドのコンバーターによって返されるすべての型を返します</xref:System.Windows.Controls.ValidationStep></xref:System.Windows.Controls.ValidationRule.ValidationStep%2A></xref:System.Windows.Controls.ValidationRule>。 この例では、GetValue は通常、整数を返します。"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example shows the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, which uses the GetValue method to get values that the customer entered.  \n  \n [!code-cs[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#itembindgroupvalidationrule)]\n [!code-vb[BindingGroupSnippets#ItemBindGroupValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#itembindgroupvalidationrule)]"
  syntax:
    content: public object GetValue (object item, string propertyName);
    parameters:
    - id: item
      type: System.Object
      description: "指定したプロパティを格納するオブジェクト。"
    - id: propertyName
      type: System.String
      description: "プロパティが指定された値を取得します。"
    return:
      type: System.Object
      description: "提案されたプロパティの値。"
  overload: System.Windows.Data.BindingGroup.GetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定したアイテムとプロパティのバインドがありません。"
  - type: System.Windows.Data.ValueUnavailableException
    commentId: T:System.Windows.Data.ValueUnavailableException
    description: "指定したプロパティの値は、変換エラーのためか、以前の検証規則に失敗したためです。"
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.HasValidationError
  id: HasValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>が失敗した検証規則。"
  syntax:
    content: public bool HasValidationError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>失敗した検証規則が、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.HasValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.IsDirty
  id: IsDirty
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>ソースに書き込まれていないを提案された値が含まれています。"
  syntax:
    content: public bool IsDirty { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>されていないソースに書き込まれる、それ以外の提案された値が含まれる<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Items
  id: Items
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "バインドのオブジェクトによって使用されているソースを取得、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  remarks: "オブジェクトが複数のバインディングのソースとして使用する場合でも、ソースとして使用される各オブジェクトはアイテム プロパティに&1; 回、追加します。 多くの場合、これは、 <xref:System.Windows.FrameworkElement.DataContext%2A> <xref:System.Windows.Data.BindingGroup>。</xref:System.Windows.Data.BindingGroup>を使用する要素の</xref:System.Windows.FrameworkElement.DataContext%2A>オブジェクトでは、アイテム&1; つだけの項目があります。 可能であれば、<xref:System.Windows.Data.BindingGroup>ただし、複数のソースにします</xref:System.Windows.Data.BindingGroup>。 たとえば、同じバインディング オブジェクトを共有している場合<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>が別のソース オブジェクトを使用して、項目では、ソースとして使用される各オブジェクトです</xref:System.Windows.Data.BindingBase.BindingGroupName%2A>。       生じる可能性がありますも複数のオブジェクト項目でのバインディング パスが、ソースの入れ子になったプロパティに解決されます。 たとえば、<xref:System.Windows.Controls.TextBox>コントロールのバインドの一部である、<xref:System.Windows.Data.BindingGroup>とその<xref:System.Windows.FrameworkElement.DataContext%2A>は、`Customer`型のプロパティを持つオブジェクト`Address`</xref:System.Windows.FrameworkElement.DataContext%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Controls.TextBox>。 場合、<xref:System.Windows.Data.Binding.Path%2A>の<xref:System.Windows.Data.Binding>は、 `Address.ZipCode` 、プロパティ、 `Address` Items プロパティに追加されます</xref:System.Windows.Data.Binding></xref:System.Windows.Data.Binding.Path%2A>。"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> gets its source, `object1`, from the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Controls.TextBox> control's parent element (the <xref:System.Windows.Controls.StackPanel>). On the second <xref:System.Windows.Controls.TextBox>, the source of the binding is set to `object2`. The example also creates a <xref:System.Windows.Controls.Label> that displays validation errors.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public System.Collections.IList Items { get; }
    return:
      type: System.Collections.IList
      description: "バインドのオブジェクトによって使用されているソース、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Name
  id: Name
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または設定を識別する名前、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>、および内のバインド オブジェクトを除外するのに使用できる、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  remarks: "名前が場合`null`<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ<xref:System.Windows.Data.BindingGroup><xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup>参加</xref:System.Windows.Data.BindingGroup>要素の</xref:System.Windows.FrameworkElement.DataContext%2A>と同じオブジェクトであるソースのバインド。       異なるソースのバインドを含めることができます、<xref:System.Windows.FrameworkElement.DataContext%2A>の親を持つ要素を<xref:System.Windows.Data.BindingGroup>の名前を設定して、<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>同じ値にバインディングのプロパティ</xref:System.Windows.Data.BindingBase.BindingGroupName%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A>。 同じソースのバインドを除外する<xref:System.Windows.FrameworkElement.DataContext%2A>を持つ親要素の<xref:System.Windows.Data.BindingGroup>の名前を設定して、<xref:System.Windows.Data.BindingGroup>と<xref:System.Windows.Data.BindingBase.BindingGroupName%2A>ごとに異なる値のバインドのプロパティ</xref:System.Windows.Data.BindingBase.BindingGroupName%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup></xref:System.Windows.FrameworkElement.DataContext%2A>。"
  example:
  - "The following examples are part of an application that checks whether the user has set the properties of two objects to equal values. The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which are data bound to a different source. The binding of the first <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the <xref:System.Windows.Controls.TextBox> inherits the <xref:System.Windows.FrameworkElement.DataContext%2A> and <xref:System.Windows.Data.BindingGroup> from its parent <xref:System.Windows.Controls.StackPanel>.  \n  \n The binding on the second <xref:System.Windows.Controls.TextBox> is part of the <xref:System.Windows.Data.BindingGroup> because the Name of the <xref:System.Windows.Data.BindingGroup> and the <xref:System.Windows.Data.BindingBase.BindingGroupName%2A> of the <xref:System.Windows.Data.Binding> are both set to `bindingGroup`.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroupName](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#bindinggroupname)]  \n[!code-xml[BindingGroupSnippets#ValidationAdornerSite](~/add/codesnippet/xaml/BindingGroupSnippets/Window3.xaml#validationadornersite)]  \n  \n The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.  \n  \n [!code-cs[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/csharp/BindingGroupSnippets/Window3.xaml.cs#bindinggroupnamevalidationrule)]\n [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/add/codesnippet/visualbasic/bindinggroupsnippets/window3.xaml.vb#bindinggroupnamevalidationrule)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "識別する名前、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または設定するかどうか、 &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;イベントが発生したときの状態、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>変更します。"
  remarks: "<xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>添付イベントが<xref:System.Windows.Data.BindingGroup>。</xref:System.Windows.Data.BindingGroup>を持つ要素で発生</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>する"
  example:
  - "The following example creates a <xref:System.Windows.Data.BindingGroup> and sets NotifyOnValidationError to `true` so that the application can handle the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event when a <xref:System.Windows.Controls.ValidationRule> fails.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example handles the <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> event.  \n  \n [!code-cs[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/csharp/BindingGroupSnippets/Window1.xaml.cs#errorhandler)]\n [!code-vb[BindingGroupSnippets#ErrorHandler](~/add/codesnippet/visualbasic/bindinggroupsnippets/window1.xaml.vb#errorhandler)]"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 &lt;xref:System.Windows.Controls.Validation.Error?displayProperty=fullName&gt;イベントが発生したときの状態、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>変更です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.Owner
  id: Owner
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "オブジェクトを取得この<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>に割り当てられます。"
  syntax:
    content: public System.Windows.DependencyObject Owner { get; }
    return:
      type: System.Windows.DependencyObject
      description: "オブジェクトをこの<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>に割り当てられます。"
  overload: System.Windows.Data.BindingGroup.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  id: SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>再利用する際の対象のソースにコミットされていない値です。"
  remarks: "提案された値が、バインディングのターゲットに変更されましたが、ソースにコミットされていない値です。 たとえば<xref:System.Windows.Controls.TextBox><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A><xref:System.Windows.Data.UpdateSourceTrigger>。</xref:System.Windows.Data.UpdateSourceTrigger>にプロパティが設定されている</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>と</xref:System.Windows.Controls.TextBox>双方向のバインドがあること ユーザーがの値を変更した場合、 <xref:System.Windows.Controls.TextBox>、提案された値が含まれる値、<xref:System.Windows.Controls.TextBox>ソースにコミットする前にします</xref:System.Windows.Controls.TextBox></xref:System.Windows.Controls.TextBox>。       SharesProposedValues がある場合`true`、<xref:System.Windows.Data.BindingGroup>まま、BindingGroup に&1; つのバインドと同じソースで別のバインドに参加、BindingGroup 提案された値が使用されます</xref:System.Windows.Data.BindingGroup>。  たとえば、アプリケーションが複数のフィールドを編集し、ボタンをクリックして、ソース オブジェクトを更新するユーザーを使用します。 フィールドが編集されていないときに、アプリケーションに表示<xref:System.Windows.Controls.TextBlock>。</xref:System.Windows.Controls.TextBlock> フィールドを編集するユーザーが開始されると、アプリケーション置換<xref:System.Windows.Controls.TextBlock><xref:System.Windows.Controls.TextBox>。</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.TextBlock> ユーザーは、そのフィールドの編集が完了したら、アプリケーション置換<xref:System.Windows.Controls.TextBox><xref:System.Windows.Controls.TextBlock>。</xref:System.Windows.Controls.TextBlock> </xref:System.Windows.Controls.TextBox> ための手段が存在する必要がありますが、ボタンをクリックするまでに、ソースが更新されないため、<xref:System.Windows.Controls.TextBlock>提案された値を表示します</xref:System.Windows.Controls.TextBlock>。 SharesProposedValues に設定して`true`アプリケーションが表示されます、ユーザーの変更をフィールドに、ソースが更新されていない場合でもです。"
  syntax:
    content: public bool SharesProposedValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>再利用する際の対象の値、それ以外のソースにコミットされていない<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.SharesProposedValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  id: TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "指定されたプロパティと項目の提案された値を取得しようとしています。"
  remarks: "TryGetValue 返します`false`指定項目とプロパティのバインドがない場合または指定したプロパティの値がない場合、変換エラーのために、使用または以前の検証規則に失敗したためです。       このメソッドを使用して、<xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>ソースにコミットする値を取得するメソッド</xref:System.Windows.Controls.ValidationRule.Validate%2A?displayProperty=fullName>。 型`value`をステージによって異なります、<xref:System.Windows.Controls.ValidationRule>に発生します</xref:System.Windows.Controls.ValidationRule>。 たとえば場合、<xref:System.Windows.Controls.TextBox>整数型のプロパティにバインドされたデータは、`value`場合、文字列<xref:System.Windows.Controls.ValidationRule>呼び出し TryGetValue がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A><xref:System.Windows.Controls.ValidationStep></xref:System.Windows.Controls.ValidationStep>セット</xref:System.Windows.Controls.ValidationRule.ValidationStep%2A></xref:System.Windows.Controls.ValidationRule></xref:System.Windows.Controls.TextBox>。 場合、<xref:System.Windows.Controls.ValidationRule>がその<xref:System.Windows.Controls.ValidationRule.ValidationStep%2A>に設定<xref:System.Windows.Controls.ValidationStep>の型`value`はバインドのコンバーターによって返されるすべての型</xref:System.Windows.Controls.ValidationStep></xref:System.Windows.Controls.ValidationRule.ValidationStep%2A></xref:System.Windows.Controls.ValidationRule>。 この例では`value`は通常、整数値。"
  example:
  - "The following example creates a custom <xref:System.Windows.Controls.ValidationRule> named `ValidateDateAndPrice`. In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, the example uses the TryGetValue method and the <xref:System.Windows.Data.BindingGroup.Items%2A> property to get the values the user entered into the form. Then the example checks that if an item is over 100 dollars, it will be available for at least seven days. This example is part of a larger example on the <xref:System.Windows.Data.BindingGroup> class  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public bool TryGetValue (object item, string propertyName, out object value);
    parameters:
    - id: item
      type: System.Object
      description: "指定したプロパティを格納するオブジェクト。"
    - id: propertyName
      type: System.String
      description: "プロパティが指定された値を取得します。"
    - id: value
      type: System.Object
      description: "このメソッドが戻るとき、提示されているプロパティの値を表すオブジェクトを格納します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したプロパティの提案された値の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.TryGetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.UpdateSources
  id: UpdateSources
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "バインディングでコンバーターを実行し、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>を持つオブジェクト、<xref:System.Windows.Controls.ValidationRule.ValidationStep*>プロパティに設定<xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>、 <xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref>、または<xref href=&quot;System.Windows.Controls.ValidationStep&quot;></xref>し、すべての検証規則が成功した場合、ソース オブジェクトに、ターゲットの値を保存します</xref:System.Windows.Controls.ValidationRule.ValidationStep*>。"
  remarks: "このメソッドは、あらゆる場合に、ソースを更新<xref:System.Windows.Controls.ValidationRule>成功すると、保留中の変更をコミットし、編集トランザクションを終了するソースは行われませんが、</xref:System.Windows.Controls.ValidationRule> 。 つまり、ソース オブジェクトには、 <xref:System.ComponentModel.IEditableObject>.</xref:System.ComponentModel.IEditableObject>が実装されている場合 呼び出し元がこのメソッドは発生しません<xref:System.ComponentModel.IEditableObject.EndEdit%2A>に呼び出される</xref:System.ComponentModel.IEditableObject.EndEdit%2A>。 使用して、<xref:System.Windows.Data.BindingGroup.CommitEdit%2A>メソッドのソースの保留中の変更をコミットします</xref:System.Windows.Data.BindingGroup.CommitEdit%2A>。"
  example:
  - "The following example is part of an application that prompts the user to enter multiple customers and assign a sales representative to each customer. The application checks that the sales representative and the customer belong to the same region. The example calls UpdateSources to validate the bindings and save the values to the source if all the validation rules succeed.  \n  \n [!code-cs[BindingGroupSnippets#UpdateSources](~/add/codesnippet/csharp/BindingGroupSnippets/Window2.xaml.cs#updatesources)]\n [!code-vb[BindingGroupSnippets#UpdateSources](~/add/codesnippet/visualbasic/bindinggroupsnippets/window2.xaml.vb#updatesources)]"
  syntax:
    content: public bool UpdateSources ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての検証ルールが成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.UpdateSources*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  id: ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "取得または設定を含めるかどうかを示す値、 <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;></xref>です。"
  remarks: "ValidatesOnNotifyDataError が場合`true`、バインディングが確認され、 <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>を実装するデータ ソースで発生したエラーが報告されました"
  syntax:
    content: public bool ValidatesOnNotifyDataError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>含める、 <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  id: ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "バインディングでコンバーターを実行し、 <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref>を持つオブジェクト、<xref:System.Windows.Controls.ValidationRule.ValidationStep*>プロパティに設定<xref href=&quot;System.Windows.Controls.ValidationStep&quot;></xref>または<xref href=&quot;System.Windows.Controls.ValidationStep&quot;> </xref></xref:System.Windows.Controls.ValidationRule.ValidationStep*> 。"
  remarks: "このメソッドを呼び出すと、ソースは更新されません。"
  syntax:
    content: public bool ValidateWithoutUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証ルールが成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  id: ValidationErrors
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "コレクションを取得<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>を発生させたオブジェクト、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;> </xref>無効にします。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError> ValidationErrors { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
      description: "コレクション<xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>の原因となったオブジェクト<xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>無効にします。  値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>エラーがない場合。"
  overload: System.Windows.Data.BindingGroup.ValidationErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.BindingGroup.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.BindingGroup
  langs:
  - csharp
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "コレクションを取得<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>内のソース オブジェクトを検証するオブジェクト、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  remarks: "ときに、<xref:System.Windows.Controls.ValidationRule>に追加、 <xref:System.Windows.Data.BindingGroup>、<xref:System.Windows.Data.BindingGroup>の最初のパラメーターとして渡される、<xref:System.Windows.Controls.ValidationRule.Validate%2A>メソッド</xref:System.Windows.Controls.ValidationRule.Validate%2A></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Data.BindingGroup></xref:System.Windows.Controls.ValidationRule>。 使用して、オブジェクトの提案された値を取得できる、<xref:System.Windows.Data.BindingGroup.TryGetValue%2A>または<xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29>メソッド</xref:System.Windows.Data.BindingGroup.GetValue%28System.Object%2CSystem.String%29></xref:System.Windows.Data.BindingGroup.TryGetValue%2A>。 バインドのソースであるオブジェクトを取得することができます、<xref:System.Windows.Data.BindingGroup.Items%2A>プロパティ</xref:System.Windows.Data.BindingGroup.Items%2A>。"
  example:
  - "The following example adds the custom <xref:System.Windows.Controls.ValidationRule>, `ValidateDateAndPrice`, to the <xref:System.Windows.Data.BindingGroup>.  \n  \n [!code-xml[BindingGroupSnippets#BindingGroup](~/add/codesnippet/xaml/BindingGroupSnippets/Window1.xaml#bindinggroup)]  \n  \n The following example shows the `ValidateDateAndPrice` class. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method uses the <xref:System.Windows.Data.BindingGroup> to get the values the user entered into the form, and checks that if an item is over 100 dollars, it will be available for at least seven days.  \n  \n [!code-cs[BindingGroupSnippets#ValidateObject](~/add/codesnippet/csharp/BindingGroupSnippets/Data.cs#validateobject)]\n [!code-vb[BindingGroupSnippets#ValidateObject](~/add/codesnippet/visualbasic/bindinggroupsnippets/data.vb#validateobject)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "コレクション<xref href=&quot;System.Windows.Controls.ValidationRule&quot;></xref>内のソース オブジェクトを検証するオブジェクト、 <xref href=&quot;System.Windows.Data.BindingGroup&quot;></xref>です。"
  overload: System.Windows.Data.BindingGroup.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Data.ValueUnavailableException
  parent: System.Windows.Data
  isExternal: false
  name: ValueUnavailableException
  nameWithType: ValueUnavailableException
  fullName: System.Windows.Data.ValueUnavailableException
- uid: System.Windows.Data.BindingGroup.#ctor
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup()
  nameWithType: BindingGroup.BindingGroup()
  fullName: System.Windows.Data.BindingGroup.BindingGroup()
- uid: System.Windows.Data.BindingGroup.BeginEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit()
  nameWithType: BindingGroup.BeginEdit()
  fullName: System.Windows.Data.BindingGroup.BeginEdit()
- uid: System.Windows.Data.BindingGroup.BindingExpressions
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
  fullName: System.Windows.Data.BindingGroup.BindingExpressions
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingExpressionBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingExpressionBase>
  nameWithType: Collection<BindingExpressionBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingExpressionBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingExpressionBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingExpressionBase
    name: BindingExpressionBase
    nameWithType: BindingExpressionBase
    fullName: BindingExpressionBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.CancelEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit()
  nameWithType: BindingGroup.CancelEdit()
  fullName: System.Windows.Data.BindingGroup.CancelEdit()
- uid: System.Windows.Data.BindingGroup.CanRestoreValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
  fullName: System.Windows.Data.BindingGroup.CanRestoreValues
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.BindingGroup.CommitEdit
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit()
  nameWithType: BindingGroup.CommitEdit()
  fullName: System.Windows.Data.BindingGroup.CommitEdit()
- uid: System.Windows.Data.BindingGroup.GetValue(System.Object,System.String)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue(Object,String)
  nameWithType: BindingGroup.GetValue(Object,String)
  fullName: System.Windows.Data.BindingGroup.GetValue(Object,String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.BindingGroup.HasValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
  fullName: System.Windows.Data.BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
  fullName: System.Windows.Data.BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
  fullName: System.Windows.Data.BindingGroup.Items
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Windows.Data.BindingGroup.Name
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
  fullName: System.Windows.Data.BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
  fullName: System.Windows.Data.BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
  fullName: System.Windows.Data.BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
  fullName: System.Windows.Data.BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue(System.Object,System.String,System.Object@)
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue(Object,String,Object)
  nameWithType: BindingGroup.TryGetValue(Object,String,Object)
  fullName: System.Windows.Data.BindingGroup.TryGetValue(Object,String,Object)
- uid: System.Windows.Data.BindingGroup.UpdateSources
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources()
  nameWithType: BindingGroup.UpdateSources()
  fullName: System.Windows.Data.BindingGroup.UpdateSources()
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
  fullName: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate()
  nameWithType: BindingGroup.ValidateWithoutUpdate()
  fullName: System.Windows.Data.BindingGroup.ValidateWithoutUpdate()
- uid: System.Windows.Data.BindingGroup.ValidationErrors
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
  fullName: System.Windows.Data.BindingGroup.ValidationErrors
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Controls.ValidationError}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ValidationError>
  nameWithType: ReadOnlyCollection<ValidationError>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Controls.ValidationError>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Controls.ValidationError>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationError
    name: ValidationError
    nameWithType: ValidationError
    fullName: ValidationError
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.ValidationRules
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
  fullName: System.Windows.Data.BindingGroup.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.BindingGroup.#ctor*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingGroup
  nameWithType: BindingGroup.BindingGroup
- uid: System.Windows.Data.BindingGroup.BeginEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BeginEdit
  nameWithType: BindingGroup.BeginEdit
- uid: System.Windows.Data.BindingGroup.BindingExpressions*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: BindingExpressions
  nameWithType: BindingGroup.BindingExpressions
- uid: System.Windows.Data.BindingGroup.CancelEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CancelEdit
  nameWithType: BindingGroup.CancelEdit
- uid: System.Windows.Data.BindingGroup.CanRestoreValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CanRestoreValues
  nameWithType: BindingGroup.CanRestoreValues
- uid: System.Windows.Data.BindingGroup.CommitEdit*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: CommitEdit
  nameWithType: BindingGroup.CommitEdit
- uid: System.Windows.Data.BindingGroup.GetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: GetValue
  nameWithType: BindingGroup.GetValue
- uid: System.Windows.Data.BindingGroup.HasValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: HasValidationError
  nameWithType: BindingGroup.HasValidationError
- uid: System.Windows.Data.BindingGroup.IsDirty*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: IsDirty
  nameWithType: BindingGroup.IsDirty
- uid: System.Windows.Data.BindingGroup.Items*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Items
  nameWithType: BindingGroup.Items
- uid: System.Windows.Data.BindingGroup.Name*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Name
  nameWithType: BindingGroup.Name
- uid: System.Windows.Data.BindingGroup.NotifyOnValidationError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: BindingGroup.NotifyOnValidationError
- uid: System.Windows.Data.BindingGroup.Owner*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: Owner
  nameWithType: BindingGroup.Owner
- uid: System.Windows.Data.BindingGroup.SharesProposedValues*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: SharesProposedValues
  nameWithType: BindingGroup.SharesProposedValues
- uid: System.Windows.Data.BindingGroup.TryGetValue*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: TryGetValue
  nameWithType: BindingGroup.TryGetValue
- uid: System.Windows.Data.BindingGroup.UpdateSources*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: UpdateSources
  nameWithType: BindingGroup.UpdateSources
- uid: System.Windows.Data.BindingGroup.ValidatesOnNotifyDataError*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidatesOnNotifyDataError
  nameWithType: BindingGroup.ValidatesOnNotifyDataError
- uid: System.Windows.Data.BindingGroup.ValidateWithoutUpdate*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidateWithoutUpdate
  nameWithType: BindingGroup.ValidateWithoutUpdate
- uid: System.Windows.Data.BindingGroup.ValidationErrors*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationErrors
  nameWithType: BindingGroup.ValidationErrors
- uid: System.Windows.Data.BindingGroup.ValidationRules*
  parent: System.Windows.Data.BindingGroup
  isExternal: false
  name: ValidationRules
  nameWithType: BindingGroup.ValidationRules
