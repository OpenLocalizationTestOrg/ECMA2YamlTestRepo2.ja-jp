### YamlMime:ManagedReference
items:
- uid: System.Drawing.Rectangle
  id: Rectangle
  children:
  - System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  - System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Bottom
  - System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Contains(System.Drawing.Point)
  - System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Empty
  - System.Drawing.Rectangle.Equals(System.Object)
  - System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Rectangle.GetHashCode
  - System.Drawing.Rectangle.Height
  - System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  - System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  - System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  - System.Drawing.Rectangle.IsEmpty
  - System.Drawing.Rectangle.Left
  - System.Drawing.Rectangle.Location
  - System.Drawing.Rectangle.Offset(System.Drawing.Point)
  - System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  - System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Right
  - System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Size
  - System.Drawing.Rectangle.Top
  - System.Drawing.Rectangle.ToString
  - System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  - System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  - System.Drawing.Rectangle.Width
  - System.Drawing.Rectangle.X
  - System.Drawing.Rectangle.Y
  langs:
  - csharp
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
  type: Struct
  summary: "格納場所を表す&4; つの整数のセットと四角形のサイズ"
  remarks: "四角形がによって定義されたその<xref:System.Drawing.Rectangle.Width%2A>、 <xref:System.Drawing.Rectangle.Height%2A>、および左上隅で表される、<xref:System.Drawing.Rectangle.Location%2A>プロパティ</xref:System.Drawing.Rectangle.Location%2A></xref:System.Drawing.Rectangle.Height%2A></xref:System.Drawing.Rectangle.Width%2A>。       四角形を描画する必要があります、<xref:System.Drawing.Graphics>オブジェクトおよび<xref:System.Drawing.Pen>オブジェクト</xref:System.Drawing.Pen></xref:System.Drawing.Graphics>。 <xref:System.Drawing.Graphics>オブジェクトは、提供、<xref:System.Drawing.Graphics.DrawRectangle%2A>メソッド、および<xref:System.Drawing.Pen>オブジェクトは、線、色、太さなどの機能を格納します</xref:System.Drawing.Pen></xref:System.Drawing.Graphics.DrawRectangle%2A></xref:System.Drawing.Graphics>。 四角形を描画単位がによって決定されます、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>グラフィックのプロパティ オブジェクトの描画に使用します</xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A>。 既定の単位はピクセルです。       色で塗りつぶされた四角形を描画するには、必要があります<xref:System.Drawing.Graphics>オブジェクト、<xref:System.Drawing.Brush><xref:System.Drawing.SolidBrush>または<xref:System.Drawing.Drawing2D.LinearGradientBrush>。</xref:System.Drawing.Drawing2D.LinearGradientBrush></xref:System.Drawing.SolidBrush>など</xref:System.Drawing.Brush>から派生したオブジェクト</xref:System.Drawing.Graphics> <xref:System.Drawing.Graphics>オブジェクトは、提供、<xref:System.Drawing.Graphics.FillRectangle%2A>メソッドおよび<xref:System.Drawing.Brush>オブジェクトの色および塗りつぶしの情報を提供します</xref:System.Drawing.Brush></xref:System.Drawing.Graphics.FillRectangle%2A></xref:System.Drawing.Graphics>。       高度な図形を使用して、<xref:System.Drawing.Region>オブジェクト</xref:System.Drawing.Region>。"
  example:
  - "The following example draws a rectangle with its upper-left corner at (10, 10). The rectangle has a width of 100 and a height of 50. The second argument passed to the <xref:System.Drawing.Pen.%23ctor%2A> constructor indicates that the pen width is 5 pixels.  \n  \n When the rectangle is drawn, the pen is centered on the rectangle's boundary. Because the pen width is 5, the sides of the rectangle are drawn 5 pixels wide, such that 1 pixel is drawn on the boundary itself, 2 pixels are drawn on the inside, and 2 pixels are drawn on the outside. For more details on pen alignment, see [How to: Set Pen Width and Alignment](~/add/includes/ajax-current-ext-md.md).  \n  \n The following illustration shows the resulting rectangle. The dotted lines show where the rectangle would have been drawn if the pen width had been one pixel. The enlarged view of the upper-left corner of the rectangle shows that the thick black lines are centered on those dotted lines.  \n  \n ![Pens](~/add/media/pens1.gif \"Pens\")  \n  \n The example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \n  \n [!code-vb[System.Drawing.UsingAPen#21](~/add/codesnippet/visualbasic/t-system.drawing.rectangle_1.vb)]\n [!code-cs[System.Drawing.UsingAPen#21](~/add/codesnippet/csharp/t-system.drawing.rectangle_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.RectangleConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct Rectangle
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  id: '#ctor(System.Drawing.Point,System.Drawing.Size)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指定した位置とサイズを持つクラス。"
  syntax:
    content: public Rectangle (System.Drawing.Point location, System.Drawing.Size size);
    parameters:
    - id: location
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>四角形領域の左上隅を表すです。"
    - id: size
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>四角形領域の高さと幅を表すです。"
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指定した位置とサイズを持つクラス。"
  remarks: ''
  example:
  - "The following code example demonstrates the Rectangle, <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/eee26612-4d30-4e2f-a9c7-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/eee26612-4d30-4e2f-a9c7-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/eee26612-4d30-4e2f-a9c7-_1.vb)]"
  syntax:
    content: public Rectangle (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "四角形の左上隅の x 座標。"
    - id: y
      type: System.Int32
      description: "四角形の左上隅の y 座標。"
    - id: width
      type: System.Int32
      description: "四角形の幅。"
    - id: height
      type: System.Int32
      description: "四角形の高さ。"
  overload: System.Drawing.Rectangle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Bottom
  id: Bottom
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "和である y 座標を取得、 <> </> *> と<> *> プロパティの値をこの<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "下部にあるプロパティの値は、 <xref:System.Drawing.Rectangle> <xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>含まれていない</xref:System.Drawing.Rectangle>の下端にある最初のポイントの y 座標を表します。"
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "Y 座標の合計となる<> *> と<> *> この<xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  id: Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定された変換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>に構造体、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>丸め処理によって構造、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>次より大きい整数値を値です。"
  syntax:
    content: public static System.Drawing.Rectangle Ceiling (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>変換します。"
    return:
      type: System.Drawing.Rectangle
      description: "返します、 <xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Ceiling*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  id: Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した点がこの内に含まれるかどうかを判断<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "正確な結果を返すには、このメソッドを含む四角形を正規化する必要があります。"
  syntax:
    content: public bool Contains (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "<xref href=&quot;System.Drawing.Point&quot;> </xref>をテストします。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表される、点場合<code> pt </code>これに含まれる<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体です。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  id: Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "かどうかによって表される四角形の領域を判断<code> rect </code>完全に含まれるこの<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "正確な結果を返すには、このメソッドを含む四角形を正規化する必要があります。"
  example:
  - "The following code example demonstrates the Contains method and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_8_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_8_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_8_1.vb)]"
  syntax:
    content: public bool Contains (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>をテストします。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表される四角形領域場合<code> rect </code>完全に含まれるこの<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体です。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  id: Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した点がこの内に含まれるかどうかを判断<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "正確な結果を返すには、このメソッドを含む四角形を正規化する必要があります。"
  syntax:
    content: public bool Contains (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "テストする点の x 座標。"
    - id: y
      type: System.Int32
      description: "テストする点の y 座標。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって、ポイントが定義されている場合<code> x </code>と<code> y </code>これに含まれる<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体です。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Empty
  id: Empty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "表す、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>構造とそのプロパティを初期化しない状態です。"
  remarks: "四角形は、幅、高さ、左上隅によって定義されます。"
  syntax:
    content: public static readonly System.Drawing.Rectangle Empty;
    return:
      type: System.Drawing.Rectangle
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "テストするかどうか<code> obj </code>は、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>同じ位置およびこれのサイズを含む構造体<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>テストする</xref:System.Object>"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> obj </code>は、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>構造とその<> *>、 <> </> *>、 <> </> *>、および<> *> プロパティがこの対応するプロパティに等しい<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  id: FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>指定の端の位置を含む構造体。"
  remarks: "このメソッドを作成、<xref:System.Drawing.Rectangle>左と右下角の指定</xref:System.Drawing.Rectangle>。"
  example:
  - "The following code example demonstrates how to create a rectangle using the FromLTRB method. This example is designed to be used with a Windows Form. Paste this code into a form and call the `CreateARectangleFromLTRB` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/csharp/b6a82677-d61c-473b-ae93-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/cpp/b6a82677-d61c-473b-ae93-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#7](~/add/codesnippet/visualbasic/b6a82677-d61c-473b-ae93-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle FromLTRB (int left, int top, int right, int bottom);
    parameters:
    - id: left
      type: System.Int32
      description: "これの左上隅の x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
    - id: top
      type: System.Int32
      description: "これの左上隅の y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
    - id: right
      type: System.Int32
      description: "これの右下隅の x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
    - id: bottom
      type: System.Int32
      description: "これの右下隅の y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
    return:
      type: System.Drawing.Rectangle
      description: "新しい<xref href=&quot;System.Drawing.Rectangle&quot;></xref>このメソッドが作成されます。"
  overload: System.Drawing.Rectangle.FromLTRB*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このハッシュ コードを返します<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 ハッシュ コードの使用については、 <xref:System.Object.GetHashCode*>。</xref:System.Object.GetHashCode*>を参照してください。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "この四角形のハッシュ コードを表す整数。"
  overload: System.Drawing.Rectangle.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Height
  id: Height
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの高さを取得または<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "高さのプロパティを変更する必要があります変更<xref:System.Drawing.Rectangle.Bottom%2A><xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>プロパティ</xref:System.Drawing.Rectangle.Bottom%2A> 四角形を描画単位がによって決定されます、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>グラフィックのプロパティ オブジェクトの描画に使用します</xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A>。 既定の単位はピクセルです。"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "この高さ<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.Rectangle.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  id: Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この拡大<xref href=&quot;System.Drawing.Rectangle&quot;></xref>を指定の量。"
  remarks: "このメソッドは、この四角形のコピーではなくを拡大します。 四角形は、軸に沿った双方向に拡大されます。  たとえば、50 で 50 の四角形、x 軸に 50 拡大されると、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. The rectangle is drawn to screen before inflation (black) and after inflation (red).  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/csharp/m-system.drawing.rectang_2_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/cpp/m-system.drawing.rectang_2_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_2_1.vb)]"
  syntax:
    content: public void Inflate (System.Drawing.Size size);
    parameters:
    - id: size
      type: System.Drawing.Size
      description: "この四角形の拡張量。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  id: Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この拡大<xref href=&quot;System.Drawing.Rectangle&quot;></xref>を指定の量。"
  remarks: "このメソッドは、この四角形のコピーではなくを拡大します。 四角形は、軸に沿った双方向に拡大されます。 たとえば、50 で 50 の四角形、x 軸に 50 拡大されると、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。       いずれか`x`または`y`は負の値、<xref:System.Drawing.Rectangle>構造体は、対応する方向に縮小します</xref:System.Drawing.Rectangle>。"
  example:
  - "The following example creates a <xref:System.Drawing.Rectangle> structure and enlarges it by 100 units in the x-axis direction:  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/csharp/m-system.drawing.rectang_7_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/cpp/m-system.drawing.rectang_7_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_7_1.vb)]"
  syntax:
    content: public void Inflate (int width, int height);
    parameters:
    - id: width
      type: System.Int32
      description: "この拡張量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>水平方向にします。"
    - id: height
      type: System.Int32
      description: "この拡張量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>垂直方向にします。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  id: Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成して、指定の拡大したコピーを返します<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 指定した量によっては、コピーが拡大されます。 元の<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造は変更されません。"
  remarks: "このメソッドは、のコピー `rect`、拡大、および拡大したコピーを返します。 四角形は、軸に沿った双方向に拡大されます。 たとえば、50 で 50 の四角形、x 軸に 50 拡大されると、結果の四角形がする 150 単位長い (元の 50、負の方向に 50 および正符号の方向に 50)、四角形の重心を維持します。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Rectangle> and enlarges it by 50 units in both axes. Notice that the resulting rectangle (red) is 150 units in both axes.  \n  \n [!code-cs[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/csharp/29159456-f586-460b-ac33-_1.cs)]\n [!code-cpp[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/cpp/29159456-f586-460b-ac33-_1.cpp)]\n [!code-vb[System.Drawing.ClassicRectangleExamples#1](~/add/codesnippet/visualbasic/29159456-f586-460b-ac33-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Inflate (System.Drawing.Rectangle rect, int x, int y);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>を開始するときに使用します。 この四角形は変更されません。"
    - id: x
      type: System.Int32
      description: "この拡張量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>水平方向にします。"
    - id: y
      type: System.Int32
      description: "この拡張量<xref href=&quot;System.Drawing.Rectangle&quot;></xref>垂直方向にします。"
    return:
      type: System.Drawing.Rectangle
      description: "拡大された<xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Inflate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これを置き換える<xref href=&quot;System.Drawing.Rectangle&quot;></xref>自体と、指定したの交差部分に<xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates the Intersect, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_1_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_1_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_1_1.vb)]"
  syntax:
    content: public void Intersect (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>と交差するときに使用します。"
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "3 番目に返します<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体をその他の&2; つの交差部分を表す<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 積集合、空白がない場合は<xref href=&quot;System.Drawing.Rectangle&quot;></xref>が返されます。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/csharp/220e8ffb-cf8f-48fb-bbcf-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/cpp/220e8ffb-cf8f-48fb-bbcf-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#1](~/add/codesnippet/visualbasic/220e8ffb-cf8f-48fb-bbcf-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Intersect (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "交差する四角形。"
    - id: b
      type: System.Drawing.Rectangle
      description: "交差する四角形。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>の積集合を表す<code> a </code>と<code> b</code>です。"
  overload: System.Drawing.Rectangle.Intersect*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  id: IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この四角形と交差するかどうかを判断<code> rect</code>です。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, <xref:System.Drawing.Rectangle.IsEmpty%2A> and the IntersectsWith members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/m-system.drawing.rectang_6_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/m-system.drawing.rectang_6_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/m-system.drawing.rectang_6_1.vb)]"
  syntax:
    content: public bool IntersectsWith (System.Drawing.Rectangle rect);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "テストする四角形。"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>それ以外の場合、交差部分がある場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.IntersectsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.IsEmpty
  id: IsEmpty
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "テストするかどうかの数値プロパティをすべて<xref href=&quot;System.Drawing.Rectangle&quot;></xref>がゼロの値を持ちます。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Intersect%2A>, IsEmpty and the <xref:System.Drawing.Rectangle.IntersectsWith%2A> members. This example should be used with a Windows Form. Paste this code into a form and call this method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/csharp/p-system.drawing.rectang_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/cpp/p-system.drawing.rectang_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#2](~/add/codesnippet/visualbasic/p-system.drawing.rectang_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "このプロパティを返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <> </> *>、 <> </> *>、 <> </> *>、および<> *> のプロパティを<xref href=&quot;System.Drawing.Rectangle&quot;></xref>すべてゼロの値である、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Left
  id: Left
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左端の x 座標を取得<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  syntax:
    content: public int Left { get; }
    return:
      type: System.Int32
      description: "これの左端の x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  overload: System.Drawing.Rectangle.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Location
  id: Location
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の座標を取得または<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>これの左上隅を表す<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  overload: System.Drawing.Rectangle.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  id: Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した量によっては、この四角形の位置を調整します。"
  remarks: "このメソッドは、指定した点の x 座標で、垂直方向に指定した点の y 座標水平方向に左上隅の位置を調整します。"
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Rectangle.Contains%2A>, and <xref:System.Drawing.Rectangle.Offset%2A> methods and the <xref:System.Drawing.SystemPens> class. This example is designed for use with a Windows Form. Paste this code into a form that contains a button named `Button1`, call `DrawFirstRectangle` from the form's constructor or <xref:System.Windows.Forms.Form.Load> method, and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/csharp/m-system.drawing.rectang_0_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/cpp/m-system.drawing.rectang_0_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#3](~/add/codesnippet/visualbasic/m-system.drawing.rectang_0_1.vb)]"
  syntax:
    content: public void Offset (System.Drawing.Point pos);
    parameters:
    - id: pos
      type: System.Drawing.Point
      description: "位置のオフセット量。"
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  id: Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した量によっては、この四角形の位置を調整します。"
  syntax:
    content: public void Offset (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "水平オフセット。"
    - id: y
      type: System.Int32
      description: "縦方向のオフセット。"
  overload: System.Drawing.Rectangle.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体と同じ位置およびサイズがあります。"
  syntax:
    content: public static bool op_Equality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>等値演算子の左側にある構造体。"
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>等値演算子の右側にある構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つ<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体が等しい<> *>、 <> </> *>、 <> </> *>、および<> *> プロパティです。"
  overload: System.Drawing.Rectangle.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体の位置またはサイズが異なります。"
  syntax:
    content: public static bool op_Inequality (System.Drawing.Rectangle left, System.Drawing.Rectangle right);
    parameters:
    - id: left
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>非等値演算子の左側にある構造体。"
    - id: right
      type: System.Drawing.Rectangle
      description: "<xref href=&quot;System.Drawing.Rectangle&quot;> </xref>非等値演算子の右側にある構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>のいずれかの場合、 <> </> *>、 <> </> *>、 <> </> *> または<> *>、2 つのプロパティ<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体が等しくないそうでない<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Rectangle.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Right
  id: Right
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "和である x 座標を取得<> *> と<> *> プロパティの値をこの<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "右側のプロパティの値では、四角形に含まれていないを四角形の右端にある最初のポイントの x 座標を表します。"
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "X 座標の合計となる<> *> と<> *> この<xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  id: Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定された変換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>を<xref href=&quot;System.Drawing.Rectangle&quot;></xref>丸められ、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>値を最も近い整数値。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the Round and <xref:System.Drawing.Rectangle.Truncate%2A> methods. This example is designed for use with a Windows Form.  Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_3_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_3_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_3_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Round (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>変換します。"
    return:
      type: System.Drawing.Rectangle
      description: "丸められた値、 <xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Round*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Size
  id: Size
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このサイズの設定を取得または<xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>幅と高さはこれを表す<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  overload: System.Drawing.Rectangle.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Top
  id: Top
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの上端の y 座標を取得<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  syntax:
    content: public int Top { get; }
    return:
      type: System.Int32
      description: "これの上端の y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  overload: System.Drawing.Rectangle.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.ToString
  id: ToString
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この属性に変換<xref href=&quot;System.Drawing.Rectangle&quot;></xref>人間が判読できる文字列にします。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "位置、幅、およびこれの高さを表す文字列<xref href=&quot;System.Drawing.Rectangle&quot;> </xref> ¾ をたとえば、構造体 {X =&20;, Y =&20;, 幅 =&100;, Height =&50;}"
  overload: System.Drawing.Rectangle.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  id: Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定された変換<xref href=&quot;System.Drawing.RectangleF&quot;></xref>を<xref href=&quot;System.Drawing.Rectangle&quot;></xref>を切り捨てて、 <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>値。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Rectangle.Round%2A> and Truncate methods. This example is designed for use with a Windows Form. Paste this code into a form and call the `RoundingAndTruncatingRectangles` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/csharp/m-system.drawing.rectang_4_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/cpp/m-system.drawing.rectang_4_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#5](~/add/codesnippet/visualbasic/m-system.drawing.rectang_4_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Truncate (System.Drawing.RectangleF value);
    parameters:
    - id: value
      type: System.Drawing.RectangleF
      description: "<xref href=&quot;System.Drawing.RectangleF&quot;> </xref>変換します。"
    return:
      type: System.Drawing.Rectangle
      description: "切り詰められた値、 <xref href=&quot;System.Drawing.Rectangle&quot;></xref>です。"
  overload: System.Drawing.Rectangle.Truncate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  id: Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得、 <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>を&2; つの和集合を含む構造<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: '共用体のメソッドがの開始位置を含む四角形を返します 2 つの四角形の 1 つが空、つまり、0 の場合は、すべての値の場合 (0, 0)、空でない四角形の幅と高さ。 たとえば、次の 2 つの四角形をした場合: A = (0、0 以外の場合は 0, 0) と B = (1、1 以外の場合は 2、2)、A の和集合では、B が (0、0 以外の場合は 2、2)。'
  example:
  - "The following code example demonstrates how to use the Union method. This example is designed for use with a Windows Form. Paste this code into a form and call the `ShowRectangleUnion` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/csharp/dbe79589-a969-4d01-95b2-_1.cs)]\n [!code-cpp[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/cpp/dbe79589-a969-4d01-95b2-_1.cpp)]\n [!code-vb[System.Drawing.RectanglesAndPoints#4](~/add/codesnippet/visualbasic/dbe79589-a969-4d01-95b2-_1.vb)]"
  syntax:
    content: public static System.Drawing.Rectangle Union (System.Drawing.Rectangle a, System.Drawing.Rectangle b);
    parameters:
    - id: a
      type: System.Drawing.Rectangle
      description: "結合する四角形。"
    - id: b
      type: System.Drawing.Rectangle
      description: "結合する四角形。"
    return:
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> 、2 つの和集合を制限する構造体<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  overload: System.Drawing.Rectangle.Union*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Width
  id: Width
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定のこの幅<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "幅のプロパティを変更する必要があります変更<xref:System.Drawing.Rectangle.Right%2A><xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>プロパティ</xref:System.Drawing.Rectangle.Right%2A> 四角形を描画単位がによって決定されます、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>グラフィックのプロパティ オブジェクトの描画に使用します</xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A>。 既定の単位はピクセルです。"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "この幅<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.Rectangle.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.X
  id: X
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の x 座標を取得または<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "X プロパティを変更する必要があります変更<xref:System.Drawing.Rectangle.Right%2A><xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>プロパティ</xref:System.Drawing.Rectangle.Right%2A>"
  syntax:
    content: public int X { get; set; }
    return:
      type: System.Int32
      description: "これの左上隅の x 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.Rectangle.X*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Rectangle.Y
  id: Y
  parent: System.Drawing.Rectangle
  langs:
  - csharp
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの左上隅の y 座標の設定を取得または<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。"
  remarks: "Y プロパティを変更する必要があります変更<xref:System.Drawing.Rectangle.Bottom%2A><xref:System.Drawing.Rectangle>。</xref:System.Drawing.Rectangle>プロパティ</xref:System.Drawing.Rectangle.Bottom%2A>"
  syntax:
    content: public int Y { get; set; }
    return:
      type: System.Int32
      description: "これの左上隅の y 座標<xref href=&quot;System.Drawing.Rectangle&quot;></xref>構造体。 既定値は 0 です。"
  overload: System.Drawing.Rectangle.Y*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.Rectangle.#ctor(System.Drawing.Point,System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Point,Size)
  nameWithType: Rectangle.Rectangle(Point,Size)
  fullName: System.Drawing.Rectangle.Rectangle(Point,Size)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.Rectangle(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.Rectangle(Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Rectangle.Bottom
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
  fullName: System.Drawing.Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling(RectangleF)
  nameWithType: Rectangle.Ceiling(RectangleF)
  fullName: System.Drawing.Rectangle.Ceiling(RectangleF)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Point)
  nameWithType: Rectangle.Contains(Point)
  fullName: System.Drawing.Rectangle.Contains(Point)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Rectangle.Contains(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Rectangle)
  nameWithType: Rectangle.Contains(Rectangle)
  fullName: System.Drawing.Rectangle.Contains(Rectangle)
- uid: System.Drawing.Rectangle.Contains(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains(Int32,Int32)
  nameWithType: Rectangle.Contains(Int32,Int32)
  fullName: System.Drawing.Rectangle.Contains(Int32,Int32)
- uid: System.Drawing.Rectangle.Empty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Empty
  nameWithType: Rectangle.Empty
  fullName: System.Drawing.Rectangle.Empty
- uid: System.Drawing.Rectangle.Equals(System.Object)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals(Object)
  nameWithType: Rectangle.Equals(Object)
  fullName: System.Drawing.Rectangle.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB(Int32,Int32,Int32,Int32)
  nameWithType: Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Rectangle.FromLTRB(Int32,Int32,Int32,Int32)
- uid: System.Drawing.Rectangle.GetHashCode
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode()
  nameWithType: Rectangle.GetHashCode()
  fullName: System.Drawing.Rectangle.GetHashCode()
- uid: System.Drawing.Rectangle.Height
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
  fullName: System.Drawing.Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Size)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Size)
  nameWithType: Rectangle.Inflate(Size)
  fullName: System.Drawing.Rectangle.Inflate(Size)
- uid: System.Drawing.Rectangle.Inflate(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Int32,Int32)
  nameWithType: Rectangle.Inflate(Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Int32,Int32)
- uid: System.Drawing.Rectangle.Inflate(System.Drawing.Rectangle,System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate(Rectangle,Int32,Int32)
  nameWithType: Rectangle.Inflate(Rectangle,Int32,Int32)
  fullName: System.Drawing.Rectangle.Inflate(Rectangle,Int32,Int32)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle)
- uid: System.Drawing.Rectangle.Intersect(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect(Rectangle,Rectangle)
  nameWithType: Rectangle.Intersect(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Intersect(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.IntersectsWith(System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith(Rectangle)
  nameWithType: Rectangle.IntersectsWith(Rectangle)
  fullName: System.Drawing.Rectangle.IntersectsWith(Rectangle)
- uid: System.Drawing.Rectangle.IsEmpty
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
  fullName: System.Drawing.Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
  fullName: System.Drawing.Rectangle.Left
- uid: System.Drawing.Rectangle.Location
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
  fullName: System.Drawing.Rectangle.Location
- uid: System.Drawing.Rectangle.Offset(System.Drawing.Point)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Point)
  nameWithType: Rectangle.Offset(Point)
  fullName: System.Drawing.Rectangle.Offset(Point)
- uid: System.Drawing.Rectangle.Offset(System.Int32,System.Int32)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset(Int32,Int32)
  nameWithType: Rectangle.Offset(Int32,Int32)
  fullName: System.Drawing.Rectangle.Offset(Int32,Int32)
- uid: System.Drawing.Rectangle.op_Equality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Equality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Equality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.op_Inequality(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality(Rectangle,Rectangle)
  nameWithType: Rectangle.op_Inequality(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.op_Inequality(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Right
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
  fullName: System.Drawing.Rectangle.Right
- uid: System.Drawing.Rectangle.Round(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round(RectangleF)
  nameWithType: Rectangle.Round(RectangleF)
  fullName: System.Drawing.Rectangle.Round(RectangleF)
- uid: System.Drawing.Rectangle.Size
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
  fullName: System.Drawing.Rectangle.Size
- uid: System.Drawing.Rectangle.Top
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
  fullName: System.Drawing.Rectangle.Top
- uid: System.Drawing.Rectangle.ToString
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString()
  nameWithType: Rectangle.ToString()
  fullName: System.Drawing.Rectangle.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Rectangle.Truncate(System.Drawing.RectangleF)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate(RectangleF)
  nameWithType: Rectangle.Truncate(RectangleF)
  fullName: System.Drawing.Rectangle.Truncate(RectangleF)
- uid: System.Drawing.Rectangle.Union(System.Drawing.Rectangle,System.Drawing.Rectangle)
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union(Rectangle,Rectangle)
  nameWithType: Rectangle.Union(Rectangle,Rectangle)
  fullName: System.Drawing.Rectangle.Union(Rectangle,Rectangle)
- uid: System.Drawing.Rectangle.Width
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
  fullName: System.Drawing.Rectangle.Width
- uid: System.Drawing.Rectangle.X
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
  fullName: System.Drawing.Rectangle.X
- uid: System.Drawing.Rectangle.Y
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
  fullName: System.Drawing.Rectangle.Y
- uid: System.Drawing.Rectangle.#ctor*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle.Rectangle
- uid: System.Drawing.Rectangle.Bottom*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Bottom
  nameWithType: Rectangle.Bottom
- uid: System.Drawing.Rectangle.Ceiling*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Ceiling
  nameWithType: Rectangle.Ceiling
- uid: System.Drawing.Rectangle.Contains*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Contains
  nameWithType: Rectangle.Contains
- uid: System.Drawing.Rectangle.Equals*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Equals
  nameWithType: Rectangle.Equals
- uid: System.Drawing.Rectangle.FromLTRB*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: FromLTRB
  nameWithType: Rectangle.FromLTRB
- uid: System.Drawing.Rectangle.GetHashCode*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: GetHashCode
  nameWithType: Rectangle.GetHashCode
- uid: System.Drawing.Rectangle.Height*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Height
  nameWithType: Rectangle.Height
- uid: System.Drawing.Rectangle.Inflate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Inflate
  nameWithType: Rectangle.Inflate
- uid: System.Drawing.Rectangle.Intersect*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Intersect
  nameWithType: Rectangle.Intersect
- uid: System.Drawing.Rectangle.IntersectsWith*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IntersectsWith
  nameWithType: Rectangle.IntersectsWith
- uid: System.Drawing.Rectangle.IsEmpty*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: IsEmpty
  nameWithType: Rectangle.IsEmpty
- uid: System.Drawing.Rectangle.Left*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Left
  nameWithType: Rectangle.Left
- uid: System.Drawing.Rectangle.Location*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Location
  nameWithType: Rectangle.Location
- uid: System.Drawing.Rectangle.Offset*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Offset
  nameWithType: Rectangle.Offset
- uid: System.Drawing.Rectangle.op_Equality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Equality
  nameWithType: Rectangle.op_Equality
- uid: System.Drawing.Rectangle.op_Inequality*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: op_Inequality
  nameWithType: Rectangle.op_Inequality
- uid: System.Drawing.Rectangle.Right*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Right
  nameWithType: Rectangle.Right
- uid: System.Drawing.Rectangle.Round*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Round
  nameWithType: Rectangle.Round
- uid: System.Drawing.Rectangle.Size*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Size
  nameWithType: Rectangle.Size
- uid: System.Drawing.Rectangle.Top*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Top
  nameWithType: Rectangle.Top
- uid: System.Drawing.Rectangle.ToString*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: ToString
  nameWithType: Rectangle.ToString
- uid: System.Drawing.Rectangle.Truncate*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Truncate
  nameWithType: Rectangle.Truncate
- uid: System.Drawing.Rectangle.Union*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Union
  nameWithType: Rectangle.Union
- uid: System.Drawing.Rectangle.Width*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Width
  nameWithType: Rectangle.Width
- uid: System.Drawing.Rectangle.X*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: X
  nameWithType: Rectangle.X
- uid: System.Drawing.Rectangle.Y*
  parent: System.Drawing.Rectangle
  isExternal: false
  name: Y
  nameWithType: Rectangle.Y
