### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemCollection
  id: MenuItemCollection
  children:
  - System.Web.UI.WebControls.MenuItemCollection.#ctor
  - System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.Clear
  - System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Count
  - System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  - System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  - System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  - System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  langs:
  - csharp
  name: MenuItemCollection
  nameWithType: MenuItemCollection
  fullName: System.Web.UI.WebControls.MenuItemCollection
  type: Class
  summary: "メニュー項目のコレクションを表します、 <xref href=&quot;System.Web.UI.WebControls.Menu&quot;> </xref>コントロール。 このクラスは継承できません。"
  remarks: "MenuItemCollection クラスは、格納し、管理のコレクションに使用<xref:System.Web.UI.WebControls.MenuItem>内のオブジェクト、<xref:System.Web.UI.WebControls.Menu>コントロール</xref:System.Web.UI.WebControls.Menu></xref:System.Web.UI.WebControls.MenuItem>。 <xref:System.Web.UI.WebControls.Menu>コントロールがそのルートのメニュー項目を格納する MenuItemCollection クラスを使用して、<xref:System.Web.UI.WebControls.Menu.Items%2A>プロパティ</xref:System.Web.UI.WebControls.Menu.Items%2A></xref:System.Web.UI.WebControls.Menu>。 このコレクションはの使用も、<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>のプロパティ、 <xref:System.Web.UI.WebControls.MenuItem>(存在する場合) は、メニュー項目のサブメニュー項目を格納するオブジェクト</xref:System.Web.UI.WebControls.MenuItem></xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>。       MenuItemCollection クラスには、コレクション内の項目にアクセスするいくつかの方法がサポートしている:-を使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A>を直接取得するためのインデクサー、<xref:System.Web.UI.WebControls.MenuItem>特定の&0; から始まるインデックス位置のオブジェクト</xref:System.Web.UI.WebControls.MenuItem></xref:System.Web.UI.WebControls.MenuItemCollection.Item%2A>。      -を使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>メソッドをコレクションを反復処理に使用できる列挙子を作成します</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>。      -を使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>に配列にコレクションの内容をコピーする方法</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>。       追加と削除によって MenuItemCollection オブジェクトをプログラムで管理できる<xref:System.Web.UI.WebControls.MenuItem>オブジェクト</xref:System.Web.UI.WebControls.MenuItem>。 メニュー項目をコレクションに追加するには、使用、<xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>または<xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A></xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>。 コレクションからノードを削除するには、使用、 <xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>、 <xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>、または<xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A></xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A></xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>。      > [!NOTE] > ときに、<xref:System.Web.UI.WebControls.Menu>コントロールがデータ ソースにバインドされている、<xref:System.Web.UI.WebControls.Menu.Items%2A>と<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>コレクションがバインドが発生するたびに自動的に設定されます</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A></xref:System.Web.UI.WebControls.Menu.Items%2A></xref:System.Web.UI.WebControls.Menu>。 バインディング コレクションへの変更はすべて失われます。 これらの変更を保持するには、データ ソースを更新するかをバインドするたびに、コレクションを手動で再構築します。       MenuItemCollection クラスには、プロパティとコレクション自体に関する情報を取得できるようにするメソッドが含まれています。 コレクション内の項目の数が、使用、<xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>プロパティ</xref:System.Web.UI.WebControls.MenuItemCollection.Count%2A>。 特定コレクションに含まれているかどうかを判断する場合<xref:System.Web.UI.WebControls.MenuItem>オブジェクトを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Contains%2A></xref:System.Web.UI.WebControls.MenuItem>。 インデックスを取得する、<xref:System.Web.UI.WebControls.MenuItem>を使用して、コレクション内のオブジェクト、<xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.IndexOf%2A></xref:System.Web.UI.WebControls.MenuItem>。"
  example:
  - "The following code example demonstrates how to populate the <xref:System.Web.UI.WebControls.Menu.Items%2A> and <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collections using declarative syntax.  \n  \n [!code-cs[MenuDeclarative#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_1.aspx)]\n [!code-vb[MenuDeclarative#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_1.aspx)]  \n  \n The following code example demonstrates how to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to the <xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A> collection of a root menu item.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_381_2.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_381_2.aspx)]"
  syntax:
    content: 'public sealed class MenuItemCollection : System.Collections.ICollection, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>クラスの既定値を使用します。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection>クラスの既定値を使用します</xref:System.Web.UI.WebControls.MenuItemCollection>。 このコンス トラクターはよく使用メニュー項目のルートのコレクションを作成するときに、親メニュー (または所有者) は必要ありません。      > [!NOTE] > 子のコレクションのメニュー項目を作成する場合を取るオーバー ロードされたコンス トラクターを使用する必要があります、`owner`親メニュー項目を指定して、このコンス トラクターではなく、パラメーター。       拡張するときに、主にコントロールの開発者によってこのコンス トラクターが使用される、<xref:System.Web.UI.WebControls.Menu>コントロールを初期化するために、<xref:System.Web.UI.WebControls.Menu.Items%2A>プロパティ</xref:System.Web.UI.WebControls.Menu.Items%2A></xref:System.Web.UI.WebControls.Menu>。"
  syntax:
    content: public MenuItemCollection ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  id: '#ctor(System.Web.UI.WebControls.MenuItem)'
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>クラス、メニュー項目の指定された親 (所有者) を使用します。"
  remarks: "新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection>クラス、メニュー項目の指定された親 (所有者) を使用します</xref:System.Web.UI.WebControls.MenuItemCollection>。 このコンス トラクターは通常使用子メニュー項目のコレクションを作成するときに、親メニュー項目を指定する必要があります。      > [!NOTE] > ルートのコレクションのメニュー項目を作成する場合は、ルートのメニュー項目には、親メニュー項目があるないために、既定のコンス トラクターを使用することを検討してください。       拡張するときに、主にコントロールの開発者によってこのコンス トラクターが使用される、<xref:System.Web.UI.WebControls.MenuItem>初期化するためにクラス、<xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A>プロパティ</xref:System.Web.UI.WebControls.MenuItem.ChildItems%2A></xref:System.Web.UI.WebControls.MenuItem>。"
  syntax:
    content: public MenuItemCollection (System.Web.UI.WebControls.MenuItem owner);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.MenuItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在の親メニュー項目を表す<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  id: Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した追加<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在の末尾にオブジェクト<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "Add メソッドを使用して、指定した追加を<xref:System.Web.UI.WebControls.MenuItem>コレクションの末尾にオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。      > [!NOTE] > Null 値を追加して重複して<xref:System.Web.UI.WebControls.MenuItem>をコレクションにオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。       代わりに、挿入することができます、<xref:System.Web.UI.WebControls.MenuItem>特定のインデックスを使用してコレクション内のオブジェクト、<xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.AddAt%2A></xref:System.Web.UI.WebControls.MenuItem>。"
  example:
  - "The following code example demonstrates how to use the Add method to programmatically add a <xref:System.Web.UI.WebControls.MenuItem> object to a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/0df9c322-61ee-44a7-857e-_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/0df9c322-61ee-44a7-857e-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在の末尾に追加する<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>child</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  id: AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した挿入<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在のオブジェクト<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>指定したインデックス位置にあるオブジェクト。"
  remarks: "AddAt メソッドを使用して、指定された挿入<xref:System.Web.UI.WebControls.MenuItem>コレクション内の指定したインデックスにあるオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。      > [!NOTE] > Null 値を追加して重複して<xref:System.Web.UI.WebControls.MenuItem>をコレクションにオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。       代わりに、単に追加できる、<xref:System.Web.UI.WebControls.MenuItem>を使用してコレクションの末尾にオブジェクト、<xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Add%2A></xref:System.Web.UI.WebControls.MenuItem>。"
  example:
  - "The following code example demonstrates how to use the AddAt method to programmatically insert a <xref:System.Web.UI.WebControls.MenuItem> object in a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionAddAt#1](~/add/codesnippet/csharp/4689054e-5746-4d49-8a86-_1.aspx)]\n [!code-vb[MenuItemCollectionAddAt#1](~/add/codesnippet/visualbasic/4689054e-5746-4d49-8a86-_1.aspx)]"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.MenuItem child);
    parameters:
    - id: index
      type: System.Int32
      description: "挿入する位置を示す&0; から始まるインデックス位置、 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>です。"
    - id: child
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>を挿入します。"
  overload: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のすべての項目を削除<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "Clear メソッドを使用して削除をすべて<xref:System.Web.UI.WebControls.MenuItem>オブジェクト現在から<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItem>。      > [!NOTE] > をコレクションから個々 のノードを削除するには、使用を検討して、<xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>または<xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A></xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>。"
  example:
  - "The following code example demonstrates how to use the Clear method to remove all items from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionClear#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_183_1.aspx)]\n [!code-vb[MenuItemCollectionClear#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_183_1.aspx)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  id: Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定するかどうか、指定した<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>オブジェクトがコレクション内にします。"
  remarks: "Contains メソッドを使用しているかどうか、 <xref:System.Web.UI.WebControls.MenuItem>、現在のオブジェクトが含まれている<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItem>。 <xref:System.Web.UI.WebControls.MenuItem>し、そのプロパティは、渡された値と比較されます</xref:System.Web.UI.WebControls.MenuItem>。 このメソッドは通常の存在をテストする使用、<xref:System.Web.UI.WebControls.MenuItem>追加またはコレクションからメニュー項目を削除するなどのタスクを実行する前にオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。"
  example:
  - "The following code example demonstrates how to use the Contains method to determine whether a <xref:System.Web.UI.WebControls.MenuItem> object is contained within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionContains#1](~/add/codesnippet/csharp/f4ddd916-8b0f-407b-a05b-_1.aspx)]\n [!code-vb[MenuItemCollectionContains#1](~/add/codesnippet/visualbasic/f4ddd916-8b0f-407b-a05b-_1.aspx)]"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItem c);
    parameters:
    - id: c
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>を検索します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>オブジェクトがコレクションに含まれている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべての項目をコピー、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>を互換性のある&1; 次元オブジェクト<xref:System.Array>、対象となる配列の指定したインデックスから始まります</xref:System.Array>。"
  remarks: "CopyTo メソッドを使用して、現在の<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>の内容をコピーするには 項目をコピーするには、対象となる配列の指定したインデックスから始まります。 <xref:System.Array?displayProperty=fullName>、内の項目にアクセスする配列の構文を使用することができますし、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Array?displayProperty=fullName>。       代わりに、使用することも、<xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>メソッドをコレクション内の項目へのアクセスに使用できる列挙子を作成します</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0 から始まる<xref:System.Array>現在からコピーされた項目を受け取る<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref></xref:System.Array> 。"
    - id: index
      type: System.Int32
      description: "コピーされた内容の受信を開始する位置を示す、ターゲット配列内の位置。"
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>配列ではありません<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべての項目をコピー、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクトの場合は、互換性のある&1; 次元配列を<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>オブジェクト、ターゲット配列の指定したインデックスから始まります。"
  remarks: "CopyTo メソッドを使用して、現在の内容をコピーする<xref:System.Web.UI.WebControls.MenuItemCollection>に指定した&0; から始まる配列オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。 項目をコピーするには、対象となる配列の指定したインデックスから始まります。 配列を持つことができますし、構文を使用する配列内の項目にアクセスする、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。       代わりに、使用することも、<xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>メソッドをコレクション内の項目へのアクセスに使用できる列挙子を作成します</xref:System.Web.UI.WebControls.MenuItemCollection.GetEnumerator%2A>。"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object to an array of <xref:System.Web.UI.WebControls.MenuItem> objects.  \n  \n [!code-cs[MenuItemCollectionCopyTo#1](~/add/codesnippet/csharp/04268ea3-6298-4f73-81e4-_1.aspx)]\n [!code-vb[MenuItemCollectionCopyTo#1](~/add/codesnippet/visualbasic/04268ea3-6298-4f73-81e4-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItem[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItem[]
      description: "0 から始まる配列<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>現在からコピーされた項目を受け取るオブジェクト<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>です。"
    - id: index
      type: System.Int32
      description: "コピーされた内容の受信を開始する位置を示す、ターゲット配列内の位置。"
  overload: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在に含まれるメニュー項目の数を取得<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "内の項目の数を決定する、Count プロパティを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。 コレクションの上限を確認するのには、このプロパティは、コレクションを反復処理するときに使用して一般的です。 Count プロパティはまた、一般コレクションが空かどうかを使用します。"
  example:
  - "The following code example demonstrates how to use the Count property to determine the number of menu items in a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[MenuItemCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "メニュー項目に現在格納されている数<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.MenuItemCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在の項目を反復処理に使用できる列挙子を返します<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "GetEnumerator メソッドを使用することが簡単に反復を現在の各項目を取得する列挙子を作成する<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。 列挙子で示される現在の項目を取得する、<xref:System.Collections.IEnumerator.Current%2A>プロパティ</xref:System.Collections.IEnumerator.Current%2A>。 使用して、<xref:System.Collections.IEnumerator.MoveNext%2A>メソッドに次の項目に移動します</xref:System.Collections.IEnumerator.MoveNext%2A>。 列挙子をコレクションの先頭に移動する必要がある場合、<xref:System.Collections.IEnumerator.Reset%2A>メソッド</xref:System.Collections.IEnumerator.Reset%2A>。      > [!NOTE] > 列挙子を作成または使用した後、<xref:System.Collections.IEnumerator.Reset%2A>メソッドを呼び出す必要があります、<xref:System.Collections.IEnumerator.MoveNext%2A>メソッド</xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Reset%2A>。 によって表される項目のそれ以外の場合、<xref:System.Collections.IEnumerator.Current%2A>プロパティが定義されていません</xref:System.Collections.IEnumerator.Current%2A>。       代わりに、使用することも、<xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>配列にコレクションの項目をコピーする方法</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>。 配列は、コレクション内の項目にアクセスし、使用できます。"
  example:
  - "The following code example demonstrates how to use the GetEnumerator method to create an enumerator that contains the submenu items of the `Music` menu item in a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-cs[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_25_1.aspx)]\n [!code-vb[MenuItemCollectionGetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_25_1.aspx)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "現在の項目を反復処理に使用できる列挙子<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  id: IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したインデックスを決定<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>コレクション内のオブジェクト。"
  remarks: "IndexOf メソッドを使用して、指定したインデックスを決定する<xref:System.Web.UI.WebControls.MenuItem>、現在のオブジェクト<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItem>。 メニュー項目がコレクションにない場合は、このメソッドは-1 を返します。      > [!NOTE] > 指定されたメニュー項目がコレクション内に複数ある場合は、最初に見つかった位置のインデックスが返されます。"
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItem> object within a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-cs[MenuItemCollectionIndexOf#1](~/add/codesnippet/csharp/2022a36d-8d0a-4c79-82a2-_1.aspx)]\n [!code-vb[MenuItemCollectionIndexOf#1](~/add/codesnippet/visualbasic/2022a36d-8d0a-4c79-82a2-_1.aspx)]"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>検索します。"
    return:
      type: System.Int32
      description: "最初に見つかった位置の&0; から始まるインデックス<code> value </code>現在内<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>、それ以外の場合は、-1。"
  overload: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "アクセスをするかどうかを示す値を取得、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクトが同期されている (スレッド セーフである)。"
  remarks: "IsSynchronized プロパティを示すためにアクセスするかどうか、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクトが同期されている (スレッド セーフである).</xref:System.Web.UI.WebControls.MenuItemCollection> このプロパティはから派生した、<xref:System.Collections.ICollection?displayProperty=fullName>クラスし、常にオーバーライド`false`</xref:System.Collections.ICollection?displayProperty=fullName>。       IsSynchronized プロパティの詳細については、次を参照してください、<xref:System.Collections.ICollection.IsSynchronized%2A>のプロパティ、<xref:System.Collections.ICollection>インターフェイス。</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.IsSynchronized%2A> 。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在の指定したインデックス位置にオブジェクト<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "このインデクサーへのアクセスを使用して、<xref:System.Web.UI.WebControls.MenuItem>オブジェクト現在から<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト配列表記を使用して指定したインデックス位置</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItem>。 インデクサーを使用すると、アクセス、変更、または置換、<xref:System.Web.UI.WebControls.MenuItem>直接コレクション内のオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。"
  example:
  - "The following code example demonstrates how to use the indexer to retrieve the root menu item from the <xref:System.Web.UI.WebControls.Menu.Items%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control.  \n  \n [!code-vb[MenuItemCollectionAdd#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_785_1.aspx)]\n [!code-cs[MenuItemCollectionAdd#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_785_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.MenuItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>を取得します。"
    return:
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref> 、現在の指定したインデックス位置<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  id: Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された削除<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;></xref>オブジェクトから、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクト。"
  remarks: "Remove メソッドを使用して、指定されたメニュー項目をコレクションから削除します。 メニュー項目に続くすべての項目は、空いた位置を埋めるため移動されます。 移動した項目のインデックスも更新します。      > [!NOTE] >、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト null の値を格納したりできるよう複製<xref:System.Web.UI.WebControls.MenuItem>オブジェクト</xref:System.Web.UI.WebControls.MenuItem></xref:System.Web.UI.WebControls.MenuItemCollection>。       代わりに、することができます メニューから項目を削除、コレクション内の特定のインデックスを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.RemoveAt%2A>。 使用して、コレクションからすべてのメニュー項目を削除することも、<xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>。"
  example:
  - "The following code example demonstrates how to use the Remove method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object.  \n  \n [!code-vb[MenuItemCollectionRemove#1](~/add/codesnippet/visualbasic/92b6cc10-641c-4936-b3a9-_1.aspx)]\n [!code-cs[MenuItemCollectionRemove#1](~/add/codesnippet/csharp/92b6cc10-641c-4936-b3a9-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItem value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItem
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>削除するオブジェクト。"
  overload: System.Web.UI.WebControls.MenuItemCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除、 <xref href=&quot;System.Web.UI.WebControls.MenuItem&quot;> </xref>現在から指定したインデックス位置にあるオブジェクト<xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;></xref>オブジェクト。"
  remarks: "RemoveAt メソッドを使用して、削除、<xref:System.Web.UI.WebControls.MenuItem>コレクションから指定したインデックス位置にあるオブジェクト</xref:System.Web.UI.WebControls.MenuItem>。 メニュー項目に続くすべての項目は、空いた位置を埋めるため移動されます。 移動した項目のインデックスも更新します。      > [!NOTE] >、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト null の値を格納したりできるよう複製<xref:System.Web.UI.WebControls.MenuItem>オブジェクト</xref:System.Web.UI.WebControls.MenuItem></xref:System.Web.UI.WebControls.MenuItemCollection>。       代わりに、特定を削除することができます<xref:System.Web.UI.WebControls.MenuItem>オブジェクトを使用して、<xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Remove%2A></xref:System.Web.UI.WebControls.MenuItem>。 使用して、コレクションからすべてのメニュー項目を削除することも、<xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>メソッド</xref:System.Web.UI.WebControls.MenuItemCollection.Clear%2A>。"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to programmatically remove a <xref:System.Web.UI.WebControls.MenuItem> object from a <xref:System.Web.UI.WebControls.MenuItemCollection> object at a specified index location.  \n  \n [!code-cs[MenuItemCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_163_1.aspx)]\n [!code-vb[MenuItemCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_163_1.aspx)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "削除するメニュー項目の&0; から始まるインデックス位置。"
  overload: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクト。"
  remarks: "SyncRoot プロパティの同期されたバージョンを使用する、<xref:System.Web.UI.WebControls.MenuItemCollection>同期 (スレッド) コードで使用できるオブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。      > [!CAUTION] >、<xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>このプロパティはクラスを返しますでは常に`false`、ことを示します、<xref:System.Web.UI.WebControls.MenuItemCollection>クラスは、(いないスレッド セーフな) 同期されていません</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItemCollection.IsSynchronized%2A>。       コードを同期の SyncRoot オブジェクトに対して操作を実行する必要があります、<xref:System.Web.UI.WebControls.MenuItemCollection>コレクション上で直接、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト自体です</xref:System.Web.UI.WebControls.MenuItemCollection></xref:System.Web.UI.WebControls.MenuItemCollection>。 これにより、他のオブジェクトから派生したコレクションを適切に操作します。 具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<xref:System.Web.UI.WebControls.MenuItemCollection>オブジェクト</xref:System.Web.UI.WebControls.MenuItemCollection>。      > [!NOTE] > この実装で返されるオブジェクトは、<xref:System.Collections.ArrayList>オブジェクトの格納に使用される、<xref:System.Web.UI.WebControls.MenuItem>コレクション内のオブジェクト</xref:System.Web.UI.WebControls.MenuItem></xref:System.Collections.ArrayList>。       コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更する、結果として列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。       SyncRoot プロパティの詳細については、次を参照してください、<xref:System.Collections.ICollection.SyncRoot%2A>のプロパティ、<xref:System.Collections.ICollection>インターフェイス。</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A> 。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>へのアクセスを同期するために使用できる、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref></xref:System.Object> 。"
  overload: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクトのビューステートへ変更を保存します。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールがその状態を保存するマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "読み込み、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>オブジェクトのビューステートを保存された以前です。"
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "<xref:System.Object>保存されているビュー ステートの値を格納している</xref:System.Object>。"
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Object>。</xref:System.Object>状態を表示する、変更を保存します。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>ビュー ステートの変化を格納している</xref:System.Object>。"
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.MenuItemCollection
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指示、 <xref href=&quot;System.Web.UI.WebControls.MenuItemCollection&quot;> </xref>ビューステートへの変更を追跡するオブジェクト。"
  remarks: "サーバー コントロールでは、このメソッドが呼び出された後、<xref:System.Web.UI.Control.IsTrackingViewState%2A>プロパティから返される`true`</xref:System.Web.UI.Control.IsTrackingViewState%2A>。"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection()
  nameWithType: MenuItemCollection.MenuItemCollection()
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection(MenuItem)
  nameWithType: MenuItemCollection.MenuItemCollection(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.MenuItemCollection(MenuItem)
- uid: System.Web.UI.WebControls.MenuItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem
- uid: System.Web.UI.WebControls.MenuItemCollection.Add(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add(MenuItem)
  nameWithType: MenuItemCollection.Add(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Add(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt(System.Int32,System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt(Int32,MenuItem)
  nameWithType: MenuItemCollection.AddAt(Int32,MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.AddAt(Int32,MenuItem)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear()
  nameWithType: MenuItemCollection.Clear()
  fullName: System.Web.UI.WebControls.MenuItemCollection.Clear()
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains(MenuItem)
  nameWithType: MenuItemCollection.Contains(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Contains(MenuItem)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: MenuItemCollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo(System.Web.UI.WebControls.MenuItem[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo(MenuItem[],Int32)
  nameWithType: MenuItemCollection.CopyTo(MenuItem[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.CopyTo(MenuItem[],Int32)
- uid: System.Web.UI.WebControls.MenuItem[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Web.UI.WebControls.MenuItem[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemCollection.Count
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
  fullName: System.Web.UI.WebControls.MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: MenuItemCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf(MenuItem)
  nameWithType: MenuItemCollection.IndexOf(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.IndexOf(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove(System.Web.UI.WebControls.MenuItem)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove(MenuItem)
  nameWithType: MenuItemCollection.Remove(MenuItem)
  fullName: System.Web.UI.WebControls.MenuItemCollection.Remove(MenuItem)
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
  fullName: System.Web.UI.WebControls.MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.MenuItemCollection.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.MenuItemCollection.#ctor*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: MenuItemCollection
  nameWithType: MenuItemCollection.MenuItemCollection
- uid: System.Web.UI.WebControls.MenuItemCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemCollection.Add
- uid: System.Web.UI.WebControls.MenuItemCollection.AddAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: AddAt
  nameWithType: MenuItemCollection.AddAt
- uid: System.Web.UI.WebControls.MenuItemCollection.Clear*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Clear
  nameWithType: MenuItemCollection.Clear
- uid: System.Web.UI.WebControls.MenuItemCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemCollection.Count*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Count
  nameWithType: MenuItemCollection.Count
- uid: System.Web.UI.WebControls.MenuItemCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: MenuItemCollection.GetEnumerator
- uid: System.Web.UI.WebControls.MenuItemCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: MenuItemCollection.IsSynchronized
- uid: System.Web.UI.WebControls.MenuItemCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemCollection.Item
- uid: System.Web.UI.WebControls.MenuItemCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemCollection.SyncRoot*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: SyncRoot
  nameWithType: MenuItemCollection.SyncRoot
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.MenuItemCollection.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.MenuItemCollection
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: MenuItemCollection.System.Web.UI.IStateManager.TrackViewState
