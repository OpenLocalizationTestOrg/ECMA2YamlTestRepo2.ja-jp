### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.MainMenu
  id: MainMenu
  children:
  - System.Windows.Forms.MainMenu.#ctor
  - System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.MainMenu.CloneMenu
  - System.Windows.Forms.MainMenu.Collapse
  - System.Windows.Forms.MainMenu.CreateMenuHandle
  - System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  - System.Windows.Forms.MainMenu.GetForm
  - System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  - System.Windows.Forms.MainMenu.RightToLeft
  - System.Windows.Forms.MainMenu.ToString
  langs:
  - csharp
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
  type: Class
  summary: "フォームのメニュー構造を表します。 <xref href=&quot;System.Windows.Forms.MenuStrip&quot;> </xref>置き換え、機能の追加を以前のバージョンの MainMenu コントロール MainMenu が旧バージョンとの互換性と将来の使用の両方の保持を選択した場合。"
  remarks: "MainMenu コントロールは、フォームのメニュー構造のコンテナーを表します。 メニューから成るは<xref:System.Windows.Forms.MenuItem>メニュー構造内の個々 のメニュー コマンドを表すオブジェクト</xref:System.Windows.Forms.MenuItem>。 各<xref:System.Windows.Forms.MenuItem>、アプリケーションのコマンドやその他のサブメニュー項目の親メニューにすることができます</xref:System.Windows.Forms.MenuItem>。 <xref:System.Windows.Forms.Form>表示、 <xref:System.Windows.Forms.Form.Menu%2A> <xref:System.Windows.Forms.Form>。</xref:System.Windows.Forms.Form>プロパティ</xref:System.Windows.Forms.Form.Menu%2A>にメイン メニューを割り当てることは</xref:System.Windows.Forms.Form>、メイン メニューにバインドするには       複数の言語をサポートしているアプリケーション、使用することができます、<xref:System.Windows.Forms.MainMenu.RightToLeft%2A>右から左にアラビア語などの言語をサポートするために、メニューのテキストを表示するプロパティ</xref:System.Windows.Forms.MainMenu.RightToLeft%2A>。       フォームの別のメニュー構造を表す別のメイン メニュー オブジェクトを作成できます。 使用することが特定のメイン メニューに含まれているメニュー構造を再利用する場合は、その<xref:System.Windows.Forms.MainMenu.CloneMenu%2A>コピーを作成するメソッド</xref:System.Windows.Forms.MainMenu.CloneMenu%2A>。 メニュー構造のコピーを作成したら、新しいメニュー構造の適切な変更をすることができます。      > [!NOTE] > 切り取りと貼り付けメニュー項目をデザイナー内の別の&1; つのフォームから可能性がありますが正しく機能しないかどうかに貼り付けたフォームを持たないメニュー項目が定義されます。"
  example:
  - "The following code example creates a MainMenu, assigns two <xref:System.Windows.Forms.MenuItem> objects to the MainMenu and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_9_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_9_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_9_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms.MainMenu")]

      public class MainMenu : System.Windows.Forms.Menu
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Windows.Forms.Menu
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>メニュー項目を指定したなしのクラスです。"
  remarks: "このバージョンのコンス トラクターを作成、<xref:System.Windows.Forms.MainMenu>指定なし<xref:System.Windows.Forms.MenuItem>オブジェクト</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MainMenu>。 コントロールへのメニュー項目の配列を受け入れるこのコンス トラクターの他のバージョンを使用して追加する<xref:System.Windows.Forms.MenuItem>オブジェクトを使用してそのパラメーターとして、<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティ</xref:System.Windows.Forms.Menu.MenuItems%2A></xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A></xref:System.Windows.Forms.MenuItem>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cs[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_20_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_20_1.vb)]\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_20_1.cpp)]"
  syntax:
    content: public MainMenu ();
    parameters: []
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>指定したコンテナー クラスです。"
  syntax:
    content: public MainMenu (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "<xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>のコンテナーを表す、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 、指定された一連の<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>オブジェクト。"
  remarks: "このコンス トラクターを使用するにはの配列を割り当てる<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.MainMenu>は、作成時に</xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MenuItem>。 後に、<xref:System.Windows.Forms.MainMenu>が作成された追加を追加する<xref:System.Windows.Forms.MenuItem>オブジェクトを<xref:System.Windows.Forms.MainMenu>を使用して、<xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A>のメソッド、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティ</xref:System.Windows.Forms.Menu.MenuItems%2A></xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A></xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MainMenu>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu>, and assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> using this version of the constructor. The example then binds the <xref:System.Windows.Forms.MainMenu> to a <xref:System.Windows.Forms.Form>. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cpp[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_24_1.cpp)]\n [!code-cs[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_24_1.cs)]\n [!code-vb[Classic MainMenu.MainMenu1 Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_24_1.vb)]"
  syntax:
    content: public MainMenu (System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "配列<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>に追加されるオブジェクト、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  overload: System.Windows.Forms.MainMenu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CloneMenu
  id: CloneMenu
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新たに作成<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref> 、現在の複製である<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  remarks: "このメソッドを使用するには<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>で格納されているメニュー構造のコピーを作成するには このメソッドを使用するには、<xref:System.Windows.Forms.MainMenu>新しい<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>の基盤として</xref:System.Windows.Forms.MainMenu>に格納されているメニュー構造を再利用するには たとえば、メニュー構造を作成する場合を含む、既存<xref:System.Windows.Forms.MainMenu><xref:System.Windows.Forms.MenuItem>を追加、元の<xref:System.Windows.Forms.MainMenu>新しい<xref:System.Windows.Forms.MenuItem>複製<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>オブジェクト</xref:System.Windows.Forms.MenuItem>を追加および</xref:System.Windows.Forms.MainMenu>コピーを作成する直す必要はありませんメソッドを使用するオブジェクトを</xref:System.Windows.Forms.MenuItem>追加する必要がありますが、</xref:System.Windows.Forms.MainMenu>同じメニュー項目"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the CloneMenu method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_21_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_21_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_21_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.MainMenu CloneMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MainMenu
      description: "A <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>複製されたメニューを表すです。"
  overload: System.Windows.Forms.MainMenu.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Collapse
  id: Collapse
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "メイン メニューが折りたたまれたときに発生します。"
  remarks: "イベント処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Collapse event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.MainMenu> named `MainMenu1`. Then ensure that the event handler is associated with the Collapse event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#483](~/add/codesnippet/csharp/e-system.windows.forms.m_9_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#483](~/add/codesnippet/visualbasic/e-system.windows.forms.m_9_1.vb)]"
  syntax:
    content: public event EventHandler Collapse;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  id: CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "メニューへの新しいハンドルを作成します。"
  syntax:
    content: protected override IntPtr CreateMenuHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "メソッドが成功した場合は、メニューへのハンドルそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.MainMenu.CreateMenuHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "によって使用されるメモリ以外のリソースを解放、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  remarks: "<xref:System.Windows.Forms.MainMenu>。</xref:System.Windows.Forms.MainMenu>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Windows.Forms.MainMenu>使用不可の状態</xref:System.Windows.Forms.MainMenu>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Windows.Forms.MainMenu>が使用していたメモリをガベージ コレクションによって再要求できるようにします</xref:System.Windows.Forms.MainMenu>。      > [!NOTE] ><xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MainMenu>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、リソース、<xref:System.Windows.Forms.MainMenu>を使用しては解放されませんガベージ コレクション呼び出すまで、<xref:System.Windows.Forms.MainMenu>オブジェクトのデストラクターです</xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MainMenu>。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Windows.Forms.MainMenu.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.GetForm
  id: GetForm
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>このコントロールを格納しています。"
  remarks: "このプロパティを使用する場合は、固有の仕様を決定する<xref:System.Windows.Forms.MainMenu>親フォームになれる</xref:System.Windows.Forms.MainMenu>。 通常、プロパティは際に使用される複数<xref:System.Windows.Forms.MainMenu>オブジェクトは、フォームで使用されていると、フォームで現在使用されているいずれかを決定する必要があります</xref:System.Windows.Forms.MainMenu>。"
  example:
  - "The following code example uses the GetForm method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to GetForm does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The code then sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to true on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.GetForm Example#1](~/add/codesnippet/csharp/m-system.windows.forms.m_11_1.cs)]\n [!code-cpp[Classic MainMenu.GetForm Example#1](~/add/codesnippet/cpp/m-system.windows.forms.m_11_1.cpp)]\n [!code-vb[Classic MainMenu.GetForm Example#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_11_1.vb)]"
  syntax:
    content: public System.Windows.Forms.Form GetForm ();
    parameters: []
    return:
      type: System.Windows.Forms.Form
      description: "A <xref href=&quot;System.Windows.Forms.Form&quot;> </xref>はこのコントロールのコンテナーです。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>フォームで現在ホストされていません。"
  overload: System.Windows.Forms.MainMenu.GetForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  id: OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "発生させる、 <xref href=&quot;System.Windows.Forms.MainMenu.Collapse&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。       OnCollapse メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnCollapse (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Windows.Forms.MainMenu.OnCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールによって表示されるテキストが右から左へ表示されるかどうかを設定します。"
  remarks: "このプロパティは、右から左に記述されている言語をサポートするメニューを使用します。 このプロパティに設定するときに`RightToLeft.Yes`、メニュー項目のテキストが右から左から右のメソッドに既定ではなく左に表示されます。      > [!NOTE] > 右から左への配置を有効にすると、Windows フォーム コントロールにどのように影響する方法の詳細については、次を参照してください、<xref:System.Windows.Forms.Control.RightToLeft%2A>プロパティ。</xref:System.Windows.Forms.Control.RightToLeft%2A> 。"
  example:
  - "The following code example uses the <xref:System.Windows.Forms.MainMenu.GetForm%2A> method to determine if a <xref:System.Windows.Forms.MainMenu> is currently parented to the form. If the call in the example code to <xref:System.Windows.Forms.MainMenu.GetForm%2A> does not return `null`, the code then clones the menu structure of the <xref:System.Windows.Forms.MainMenu> using the <xref:System.Windows.Forms.MainMenu.CloneMenu%2A> method. The example code then sets the RightToLeft property to `RightToLeft.Yes` on the new copy of the <xref:System.Windows.Forms.MainMenu> to create a <xref:System.Windows.Forms.MainMenu> that can be used for languages that support right to left text. This example requires that you have a <xref:System.Windows.Forms.MainMenu> created that is named `mainMenu1`.  \n  \n [!code-cs[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_36_1.cs)]\n [!code-cpp[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_36_1.cpp)]\n [!code-vb[Classic MainMenu.RightToLeft Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_36_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref>値。"
  overload: System.Windows.Forms.MainMenu.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "プロパティに割り当てられた値がの有効なメンバーではない、 <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref>列挙します。"
  platform:
  - net462
- uid: System.Windows.Forms.MainMenu.ToString
  id: ToString
  parent: System.Windows.Forms.MainMenu
  langs:
  - csharp
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "表す文字列を返します、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  remarks: "戻り値の文字列には、種類とによって返される文字列が含まれている、<xref:System.Windows.Forms.Form.ToString%2A>メソッド場合、<xref:System.Windows.Forms.MainMenu>フォームに割り当てられます</xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.Form.ToString%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在を表す文字列<xref href=&quot;System.Windows.Forms.MainMenu&quot;></xref>です。"
  overload: System.Windows.Forms.MainMenu.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.Menu
  isExternal: false
  name: System.Windows.Forms.Menu
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Forms.MainMenu.#ctor
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu()
  nameWithType: MainMenu.MainMenu()
  fullName: System.Windows.Forms.MainMenu.MainMenu()
- uid: System.Windows.Forms.MainMenu.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(IContainer)
  nameWithType: MainMenu.MainMenu(IContainer)
  fullName: System.Windows.Forms.MainMenu.MainMenu(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.MainMenu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu(MenuItem[])
  nameWithType: MainMenu.MainMenu(MenuItem[])
  fullName: System.Windows.Forms.MainMenu.MainMenu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.MainMenu.CloneMenu
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu()
  nameWithType: MainMenu.CloneMenu()
  fullName: System.Windows.Forms.MainMenu.CloneMenu()
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.MainMenu.Collapse
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Collapse
  nameWithType: MainMenu.Collapse
  fullName: System.Windows.Forms.MainMenu.Collapse
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle()
  nameWithType: MainMenu.CreateMenuHandle()
  fullName: System.Windows.Forms.MainMenu.CreateMenuHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.MainMenu.Dispose(System.Boolean)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MainMenu.Dispose(Boolean)
  fullName: System.Windows.Forms.MainMenu.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.MainMenu.GetForm
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm()
  nameWithType: MainMenu.GetForm()
  fullName: System.Windows.Forms.MainMenu.GetForm()
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.MainMenu.OnCollapse(System.EventArgs)
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse(EventArgs)
  nameWithType: MainMenu.OnCollapse(EventArgs)
  fullName: System.Windows.Forms.MainMenu.OnCollapse(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.MainMenu.RightToLeft
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
  fullName: System.Windows.Forms.MainMenu.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString()
  nameWithType: MainMenu.ToString()
  fullName: System.Windows.Forms.MainMenu.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.MainMenu.#ctor*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu.MainMenu
- uid: System.Windows.Forms.MainMenu.CloneMenu*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CloneMenu
  nameWithType: MainMenu.CloneMenu
- uid: System.Windows.Forms.MainMenu.CreateMenuHandle*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: CreateMenuHandle
  nameWithType: MainMenu.CreateMenuHandle
- uid: System.Windows.Forms.MainMenu.Dispose*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: Dispose
  nameWithType: MainMenu.Dispose
- uid: System.Windows.Forms.MainMenu.GetForm*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: GetForm
  nameWithType: MainMenu.GetForm
- uid: System.Windows.Forms.MainMenu.OnCollapse*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: OnCollapse
  nameWithType: MainMenu.OnCollapse
- uid: System.Windows.Forms.MainMenu.RightToLeft*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: RightToLeft
  nameWithType: MainMenu.RightToLeft
- uid: System.Windows.Forms.MainMenu.ToString*
  parent: System.Windows.Forms.MainMenu
  isExternal: false
  name: ToString
  nameWithType: MainMenu.ToString
