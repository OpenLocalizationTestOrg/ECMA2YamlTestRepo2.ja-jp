### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.ObjectPrototype
  id: ObjectPrototype
  children:
  - Microsoft.JScript.ObjectPrototype.constructor
  - Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)
  - Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)
  - Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)
  - Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)
  - Microsoft.JScript.ObjectPrototype.toString(System.Object)
  - Microsoft.JScript.ObjectPrototype.valueOf(System.Object)
  langs:
  - csharp
  name: ObjectPrototype
  nameWithType: ObjectPrototype
  fullName: Microsoft.JScript.ObjectPrototype
  type: Class
  summary: "静的メソッドとプロパティを提供<xref href=&quot;Microsoft.JScript.JSObject&quot;></xref>オブジェクト。 このクラスのすべてのメソッドは、メソッドへのアクセスを要求しているオブジェクトへの参照を渡すことによって呼び出されます。 このクラスは、組み込みのオブジェクト モデルのカテゴリに属しています。"
  syntax:
    content: 'public class ObjectPrototype : Microsoft.JScript.JSObject'
  inheritance:
  - System.Object
  - Microsoft.JScript.ScriptObject
  - Microsoft.JScript.JSObject
  implements: []
  inheritedMembers:
  - Microsoft.JScript.JSObject.AddField(System.String)
  - Microsoft.JScript.JSObject.field_table
  - Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)
  - Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)
  - Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)
  - Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)
  - Microsoft.JScript.JSObject.ToString
  - Microsoft.JScript.ScriptObject.engine
  - Microsoft.JScript.ScriptObject.GetField(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetFields(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.GetMethods(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetParent
  - Microsoft.JScript.ScriptObject.GetProperties(System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags)
  - Microsoft.JScript.ScriptObject.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - Microsoft.JScript.ScriptObject.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - Microsoft.JScript.ScriptObject.Item(System.Double)
  - Microsoft.JScript.ScriptObject.Item(System.Int32)
  - Microsoft.JScript.ScriptObject.Item(System.Object[])
  - Microsoft.JScript.ScriptObject.Item(System.String)
  - Microsoft.JScript.ScriptObject.parent
  - Microsoft.JScript.ScriptObject.UnderlyingSystemType
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo,System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object)
  - Microsoft.JScript.ScriptObject.WrapMembers(System.Reflection.MemberInfo[],System.Object,Microsoft.JScript.SimpleHashtable)
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.constructor
  id: constructor
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: constructor
  nameWithType: ObjectPrototype.constructor
  fullName: Microsoft.JScript.ObjectPrototype.constructor
  type: Property
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "このプロトタイプを使用しているプロトタイプ ベースのオブジェクトへの参照を取得します。"
  syntax:
    content: public static Microsoft.JScript.ObjectConstructor constructor { get; }
    return:
      type: Microsoft.JScript.ObjectConstructor
      description: "プロトタイプ ベースのオブジェクトへの参照。"
  overload: Microsoft.JScript.ObjectPrototype.constructor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)
  id: hasOwnProperty(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: hasOwnProperty(Object,Object)
  nameWithType: ObjectPrototype.hasOwnProperty(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.hasOwnProperty(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "指定したオブジェクトに指定されたプロパティが含まれているかどうかを判断します。"
  syntax:
    content: public static bool hasOwnProperty (object thisob, object name);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    - id: name
      type: System.Object
      description: "検索対象のプロパティです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> name </code>のプロパティは、 <code> thisob </code>し、それ以外の設定、されました<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.ObjectPrototype.hasOwnProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)
  id: isPrototypeOf(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: isPrototypeOf(Object,Object)
  nameWithType: ObjectPrototype.isPrototypeOf(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.isPrototypeOf(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "2 番目の指定したオブジェクトの型として指定された最初のオブジェクトをインスタンス化できるかどうかを判断します。"
  syntax:
    content: public static bool isPrototypeOf (object thisob, object ob);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    - id: ob
      type: System.Object
      description: "目的の型を持つオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> ob </code>の継承階層では、 <code> thisob </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.ObjectPrototype.isPrototypeOf*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)
  id: propertyIsEnumerable(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: propertyIsEnumerable(Object,Object)
  nameWithType: ObjectPrototype.propertyIsEnumerable(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(Object,Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "指定したオブジェクトの指定されたプロパティは列挙可能かどうかを判断します。"
  syntax:
    content: public static bool propertyIsEnumerable (object thisob, object name);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    - id: name
      type: System.Object
      description: "テストするプロパティです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> name </code>列挙可能なプロパティは、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)
  id: toLocaleString(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: toLocaleString(Object)
  nameWithType: ObjectPrototype.toLocaleString(Object)
  fullName: Microsoft.JScript.ObjectPrototype.toLocaleString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "使用して、指定したオブジェクトの文字列表現を作成、 <xref href=&quot;Microsoft.JScript.Convert&quot;> </xref>クラスです。"
  syntax:
    content: public static string toLocaleString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    return:
      type: System.String
      description: "文字列表現<code> thisob </code>によって作成、 <xref href=&quot;Microsoft.JScript.Convert&quot;> </xref>クラスです。"
  overload: Microsoft.JScript.ObjectPrototype.toLocaleString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.toString(System.Object)
  id: toString(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: toString(Object)
  nameWithType: ObjectPrototype.toString(Object)
  fullName: Microsoft.JScript.ObjectPrototype.toString(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "指定したオブジェクトの文字列表現を作成します。"
  syntax:
    content: public static string toString (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    return:
      type: System.String
      description: "1 つ定義されている場合は、オブジェクトのクラスの名前それ以外の場合、<xref:System.Reflection.MemberInfo.Name*>の<xref:System.Type>オブジェクトの</xref:System.Type></xref:System.Reflection.MemberInfo.Name*>。"
  overload: Microsoft.JScript.ObjectPrototype.toString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.ObjectPrototype.valueOf(System.Object)
  id: valueOf(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  langs:
  - csharp
  name: valueOf(Object)
  nameWithType: ObjectPrototype.valueOf(Object)
  fullName: Microsoft.JScript.ObjectPrototype.valueOf(Object)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "指定したオブジェクトを返します。"
  syntax:
    content: public static object valueOf (object thisob);
    parameters:
    - id: thisob
      type: System.Object
      description: "このメソッドは、時に動作しているオブジェクト。"
    return:
      type: System.Object
      description: "<code>thisob</code>"
  overload: Microsoft.JScript.ObjectPrototype.valueOf*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.JSObject
  isExternal: false
  name: Microsoft.JScript.JSObject
- uid: Microsoft.JScript.ObjectPrototype.constructor
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: constructor
  nameWithType: ObjectPrototype.constructor
  fullName: Microsoft.JScript.ObjectPrototype.constructor
- uid: Microsoft.JScript.ObjectConstructor
  parent: Microsoft.JScript
  isExternal: false
  name: ObjectConstructor
  nameWithType: ObjectConstructor
  fullName: Microsoft.JScript.ObjectConstructor
- uid: Microsoft.JScript.ObjectPrototype.hasOwnProperty(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: hasOwnProperty(Object,Object)
  nameWithType: ObjectPrototype.hasOwnProperty(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.hasOwnProperty(Object,Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.ObjectPrototype.isPrototypeOf(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: isPrototypeOf(Object,Object)
  nameWithType: ObjectPrototype.isPrototypeOf(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.isPrototypeOf(Object,Object)
- uid: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(System.Object,System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: propertyIsEnumerable(Object,Object)
  nameWithType: ObjectPrototype.propertyIsEnumerable(Object,Object)
  fullName: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable(Object,Object)
- uid: Microsoft.JScript.ObjectPrototype.toLocaleString(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: toLocaleString(Object)
  nameWithType: ObjectPrototype.toLocaleString(Object)
  fullName: Microsoft.JScript.ObjectPrototype.toLocaleString(Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.JScript.ObjectPrototype.toString(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: toString(Object)
  nameWithType: ObjectPrototype.toString(Object)
  fullName: Microsoft.JScript.ObjectPrototype.toString(Object)
- uid: Microsoft.JScript.ObjectPrototype.valueOf(System.Object)
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: valueOf(Object)
  nameWithType: ObjectPrototype.valueOf(Object)
  fullName: Microsoft.JScript.ObjectPrototype.valueOf(Object)
- uid: Microsoft.JScript.ObjectPrototype.constructor*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: constructor
  nameWithType: ObjectPrototype.constructor
- uid: Microsoft.JScript.ObjectPrototype.hasOwnProperty*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: hasOwnProperty
  nameWithType: ObjectPrototype.hasOwnProperty
- uid: Microsoft.JScript.ObjectPrototype.isPrototypeOf*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: isPrototypeOf
  nameWithType: ObjectPrototype.isPrototypeOf
- uid: Microsoft.JScript.ObjectPrototype.propertyIsEnumerable*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: propertyIsEnumerable
  nameWithType: ObjectPrototype.propertyIsEnumerable
- uid: Microsoft.JScript.ObjectPrototype.toLocaleString*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: toLocaleString
  nameWithType: ObjectPrototype.toLocaleString
- uid: Microsoft.JScript.ObjectPrototype.toString*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: toString
  nameWithType: ObjectPrototype.toString
- uid: Microsoft.JScript.ObjectPrototype.valueOf*
  parent: Microsoft.JScript.ObjectPrototype
  isExternal: false
  name: valueOf
  nameWithType: ObjectPrototype.valueOf
