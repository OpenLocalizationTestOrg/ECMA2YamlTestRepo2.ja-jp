### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Oid
  id: Oid
  children:
  - System.Security.Cryptography.Oid.#ctor
  - System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  - System.Security.Cryptography.Oid.#ctor(System.String)
  - System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  - System.Security.Cryptography.Oid.FriendlyName
  - System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  - System.Security.Cryptography.Oid.Value
  langs:
  - csharp
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
  type: Class
  summary: "暗号オブジェクト識別子を表します。 このクラスは継承できません。"
  remarks: "暗号オブジェクト識別子は、名前/値ペアで構成されます。 1 組の&1; つのプロパティが既知の値に設定されている場合、その他のプロパティは対応する値に自動的に更新します。 たとえば場合、<xref:System.Security.Cryptography.Oid.Value%2A>プロパティが「1.3.6.1.5.5.7.3.4」に設定されている、<xref:System.Security.Cryptography.Oid.FriendlyName%2A>プロパティは、ローカライズ版は、「セキュリティで保護された電子メール」に自動的に設定されます</xref:System.Security.Cryptography.Oid.FriendlyName%2A></xref:System.Security.Cryptography.Oid.Value%2A>。"
  example:
  - "The following code example shows how to use the Oid class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/t-system.security.crypto_42_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/t-system.security.crypto_42_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/t-system.security.crypto_42_1.cpp)]"
  syntax:
    content: public sealed class Oid
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: Oid()
  nameWithType: Oid.Oid()
  fullName: System.Security.Cryptography.Oid.Oid()
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>クラスです。"
  remarks: "これは、既定のコンス トラクターです。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_112_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_112_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_112_1.cpp)]"
  syntax:
    content: public Oid ();
    parameters: []
  overload: System.Security.Cryptography.Oid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  id: '#ctor(System.Security.Cryptography.Oid)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: Oid(Oid)
  nameWithType: Oid.Oid(Oid)
  fullName: System.Security.Cryptography.Oid.Oid(Oid)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>クラス<xref href=&quot;System.Security.Cryptography.Oid&quot;></xref>オブジェクト。"
  remarks: "このコンス トラクターは、既存の値をコピー<xref:System.Security.Cryptography.Oid>オブジェクトが新しいオブジェクト</xref:System.Security.Cryptography.Oid>。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_41_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_41_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_41_1.cpp)]"
  syntax:
    content: public Oid (System.Security.Cryptography.Oid oid);
    parameters:
    - id: oid
      type: System.Security.Cryptography.Oid
      description: "使用して新しいオブジェクト識別子を作成するオブジェクトの識別子情報。"
  overload: System.Security.Cryptography.Oid.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>oid </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: Oid(String)
  nameWithType: Oid.Oid(String)
  fullName: System.Security.Cryptography.Oid.Oid(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>クラスの文字列値を使用して、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>オブジェクト。"
  remarks: "このコンス トラクターは、既存の値をコピー<xref:System.Security.Cryptography.Oid>オブジェクトが新しいオブジェクト</xref:System.Security.Cryptography.Oid>。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_18_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_18_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_18_1.cpp)]"
  syntax:
    content: public Oid (string oid);
    parameters:
    - id: oid
      type: System.String
      description: "オブジェクト識別子。"
  overload: System.Security.Cryptography.Oid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: Oid(String,String)
  nameWithType: Oid.Oid(String,String)
  fullName: System.Security.Cryptography.Oid.Oid(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>クラスの指定した値とフレンドリ名を使用します。"
  remarks: "既存の値をコピーするこのコンス トラクターを使用できる<xref:System.Security.Cryptography.Oid>オブジェクト</xref:System.Security.Cryptography.Oid>。 Oid 値が認識されていない場合、`value`と`friendlyName`互いに対応するかどうかを決定するパラメーターは検証されません。 これは、アプリケーションは、それらを解釈できる場合がありますが、.NET Framework では認識されません、オブジェクト識別子があるためです。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/m-system.security.crypto_97_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/m-system.security.crypto_97_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/m-system.security.crypto_97_1.cpp)]"
  syntax:
    content: public Oid (string value, string friendlyName);
    parameters:
    - id: value
      type: System.String
      description: "識別子のドット数。"
    - id: friendlyName
      type: System.String
      description: "識別子の表示名。"
  overload: System.Security.Cryptography.Oid.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: FriendlyName
  nameWithType: Oid.FriendlyName
  fullName: System.Security.Cryptography.Oid.FriendlyName
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "取得または識別子のわかりやすい名前を設定します。"
  remarks: "場合の&1; つの値、<xref:System.Security.Cryptography.Oid>の他の値の既知の値に設定されて、<xref:System.Security.Cryptography.Oid>プロパティは、対応する値に自動的に更新されます</xref:System.Security.Cryptography.Oid></xref:System.Security.Cryptography.Oid>。 たとえば、「セキュリティで保護された電子メール」FriendlyName プロパティが設定されている場合、<xref:System.Security.Cryptography.Oid.Value%2A>プロパティが「1.3.6.1.5.5.7.3.4」に自動的に設定します</xref:System.Security.Cryptography.Oid.Value%2A>。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/p-system.security.crypto_11_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/p-system.security.crypto_11_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/p-system.security.crypto_11_1.cpp)]"
  syntax:
    content: public string FriendlyName { get; set; }
    return:
      type: System.String
      description: "識別子の表示名。"
  overload: System.Security.Cryptography.Oid.FriendlyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  id: FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: FromFriendlyName(String,OidGroup)
  nameWithType: Oid.FromFriendlyName(String,OidGroup)
  fullName: System.Security.Cryptography.Oid.FromFriendlyName(String,OidGroup)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "作成、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>オブジェクト、指定されたグループを検索することにより、OID のフレンドリ名から。"
  syntax:
    content: public static System.Security.Cryptography.Oid FromFriendlyName (string friendlyName, System.Security.Cryptography.OidGroup group);
    parameters:
    - id: friendlyName
      type: System.String
      description: "識別子の表示名。"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "検索するグループです。"
    return:
      type: System.Security.Cryptography.Oid
      description: "指定した OID を表すオブジェクト。"
  overload: System.Security.Cryptography.Oid.FromFriendlyName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>friendlyName </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "OID が見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  id: FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: FromOidValue(String,OidGroup)
  nameWithType: Oid.FromOidValue(String,OidGroup)
  fullName: System.Security.Cryptography.Oid.FromOidValue(String,OidGroup)
  type: Method
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "作成、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref> OID の指定した値とグループを使用してオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.Oid FromOidValue (string oidValue, System.Security.Cryptography.OidGroup group);
    parameters:
    - id: oidValue
      type: System.String
      description: "OID の値です。"
    - id: group
      type: System.Security.Cryptography.OidGroup
      description: "検索するグループです。"
    return:
      type: System.Security.Cryptography.Oid
      description: "新しいインスタンス、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>オブジェクト。"
  overload: System.Security.Cryptography.Oid.FromOidValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>oidValue</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "OID 値の表示名が見つかりませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Oid.Value
  id: Value
  parent: System.Security.Cryptography.Oid
  langs:
  - csharp
  name: Value
  nameWithType: Oid.Value
  fullName: System.Security.Cryptography.Oid.Value
  type: Property
  assemblies:
  - System
  namespace: System.Security.Cryptography
  summary: "取得またはピリオドで区切られた識別子の数を設定します。"
  remarks: "場合の&1; つの値、<xref:System.Security.Cryptography.Oid>の他の値の既知の値に設定されて、<xref:System.Security.Cryptography.Oid>プロパティは、対応する値に自動的に更新されます</xref:System.Security.Cryptography.Oid></xref:System.Security.Cryptography.Oid>。 たとえば、値のプロパティが「1.3.6.1.5.5.7.3.4」に設定されている場合、<xref:System.Security.Cryptography.Oid.FriendlyName%2A>プロパティは、「セキュリティで保護された電子メール」へ自動的に設定されます</xref:System.Security.Cryptography.Oid.FriendlyName%2A>。"
  example:
  - "The following code example shows how to use the <xref:System.Security.Cryptography.Oid> class.  \n  \n [!code-cs[Cryptography.Oid#1](~/add/codesnippet/csharp/p-system.security.crypto_106_1.cs)]\n [!code-vb[Cryptography.Oid#1](~/add/codesnippet/visualbasic/p-system.security.crypto_106_1.vb)]\n [!code-cpp[Cryptography.Oid#1](~/add/codesnippet/cpp/p-system.security.crypto_106_1.cpp)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "識別子のドット数。"
  overload: System.Security.Cryptography.Oid.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Oid.#ctor
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Oid()
  nameWithType: Oid.Oid()
  fullName: System.Security.Cryptography.Oid.Oid()
- uid: System.Security.Cryptography.Oid.#ctor(System.Security.Cryptography.Oid)
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Oid(Oid)
  nameWithType: Oid.Oid(Oid)
  fullName: System.Security.Cryptography.Oid.Oid(Oid)
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Oid.#ctor(System.String)
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Oid(String)
  nameWithType: Oid.Oid(String)
  fullName: System.Security.Cryptography.Oid.Oid(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Oid.#ctor(System.String,System.String)
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Oid(String,String)
  nameWithType: Oid.Oid(String,String)
  fullName: System.Security.Cryptography.Oid.Oid(String,String)
- uid: System.Security.Cryptography.Oid.FriendlyName
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FriendlyName
  nameWithType: Oid.FriendlyName
  fullName: System.Security.Cryptography.Oid.FriendlyName
- uid: System.Security.Cryptography.Oid.FromFriendlyName(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FromFriendlyName(String,OidGroup)
  nameWithType: Oid.FromFriendlyName(String,OidGroup)
  fullName: System.Security.Cryptography.Oid.FromFriendlyName(String,OidGroup)
- uid: System.Security.Cryptography.OidGroup
  parent: System.Security.Cryptography
  isExternal: false
  name: OidGroup
  nameWithType: OidGroup
  fullName: System.Security.Cryptography.OidGroup
- uid: System.Security.Cryptography.Oid.FromOidValue(System.String,System.Security.Cryptography.OidGroup)
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FromOidValue(String,OidGroup)
  nameWithType: Oid.FromOidValue(String,OidGroup)
  fullName: System.Security.Cryptography.Oid.FromOidValue(String,OidGroup)
- uid: System.Security.Cryptography.Oid.Value
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Value
  nameWithType: Oid.Value
  fullName: System.Security.Cryptography.Oid.Value
- uid: System.Security.Cryptography.Oid.#ctor*
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Oid
  nameWithType: Oid.Oid
- uid: System.Security.Cryptography.Oid.FriendlyName*
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FriendlyName
  nameWithType: Oid.FriendlyName
- uid: System.Security.Cryptography.Oid.FromFriendlyName*
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FromFriendlyName
  nameWithType: Oid.FromFriendlyName
- uid: System.Security.Cryptography.Oid.FromOidValue*
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: FromOidValue
  nameWithType: Oid.FromOidValue
- uid: System.Security.Cryptography.Oid.Value*
  parent: System.Security.Cryptography.Oid
  isExternal: false
  name: Value
  nameWithType: Oid.Value
