### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.AssemblyBuilder
  id: AssemblyBuilder
  children:
  - System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  - System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  - System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  - System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  - System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  - System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  - System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  langs:
  - csharp
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
  type: Class
  summary: "ASP.NET プロジェクト内の&1; つまたは複数の仮想パスからアセンブリを構築するためのコンテナーを提供します。"
  remarks: "AssemblyBuilder クラスのインスタンスの併用<xref:System.Web.Compilation.BuildProvider>クラスのメソッドに&1; つまたは複数のファイルをコンパイルされたアセンブリに組み込む</xref:System.Web.Compilation.BuildProvider>。       <xref:System.Web.Compilation.BuildProvider>クラスは、個々 のファイルのビルド機能を定義し、AssemblyBuilder クラスが提供された各ソース コードを組み合わせた<xref:System.Web.Compilation.BuildProvider>インスタンスを&1; つのアセンブリにします</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildProvider>。 ASP.NET ビルド環境に AssemblyBuilder オブジェクト、<xref:System.Web.Compilation.BuildProvider>メソッドの&1; つまたは複数のファイルからアセンブリを作成するときにそのように各<xref:System.Web.Compilation.BuildProvider>インスタンスは、全体的なアセンブリには、そのファイルのソース コードを行うことができます</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildProvider>。       ASP.NET ビルド環境を調べ、言語コンパイラを基に、プロジェクト内のファイルに必要な<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>プロパティ</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>。 ビルド環境のグループ ファイルは、コンパイラ設定に基づいており、同じコンパイラが必要なファイルからアセンブリをビルドします。       <xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>プロパティを示します、 <xref:System.CodeDom.Compiler.CodeDomProvider>ASP.NET ビルド環境を使用して、ソース コードからアセンブリをコンパイルするための実装が各によって得られた<xref:System.Web.Compilation.BuildProvider>実装</xref:System.Web.Compilation.BuildProvider></xref:System.CodeDom.Compiler.CodeDomProvider></xref:System.Web.Compilation.AssemblyBuilder.CodeDomProvider%2A>。       A<xref:System.Web.Compilation.BuildProvider>オブジェクトを使用して CodeDOM グラフの形式でソース コードの貢献、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A></xref:System.Web.Compilation.BuildProvider>。 A<xref:System.Web.Compilation.BuildProvider>オブジェクトを使用して、物理ファイルに格納されているソース コードの貢献、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A></xref:System.Web.Compilation.BuildProvider>。       各後<xref:System.Web.Compilation.BuildProvider>AssemblyBuilder の適切なメソッドを使用してソース コードを提供するオブジェクト、ASP.NET ビルド環境では、AssemblyBuilder クラスを使用して、収集されたソース コードをアセンブリにコンパイルします</xref:System.Web.Compilation.BuildProvider>。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/t-system.web.compilation_10_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/t-system.web.compilation_10_1.vb)]"
  syntax:
    content: public class AssemblyBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  id: AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ファイルに対して生成されたソース コードによって参照されるアセンブリを追加します。"
  remarks: "A<xref:System.Web.Compilation.BuildProvider>入力アセンブリ内の型を参照するソース コードを生成するときに、実装が AddAssemblyReference メソッドを使用します</xref:System.Web.Compilation.BuildProvider>。       ASP.NET ビルド環境によって初期化でビルド プロバイダーによって参照に使用できるアセンブリの既定のコレクション、<xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName>プロパティ</xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A?displayProperty=fullName>。 ビルド プロバイダーがソース コードを生成する場合は、追加のアセンブリを参照する、ビルド プロバイダーが AddAssemblyReference メソッドを使用して、追加のアセンブリを追加します。 ASP.NET ビルド環境では、プロバイダーとの参照で使用できるアセンブリの既定のコレクションをビルドによって追加された両方の参照先アセンブリを使用してアセンブリのコンパイル時に外部のタイプを解決します。       通常、<xref:System.Web.Compilation.BuildProvider>オブジェクトは、ソース コードを追加、<xref:System.Web.Compilation.AssemblyBuilder>内のオブジェクト、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>メソッド</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A></xref:System.Web.Compilation.AssemblyBuilder></xref:System.Web.Compilation.BuildProvider>。 ビルド プロバイダーは、外部型を使用するソース コードを生成する場合、ビルド プロバイダーは AddAssemblyReference メソッドを使用して、型のアセンブリを追加します。       AddAssemblyReference メソッドによって生成されたソース コードで必要な参照先アセンブリを使用して、<xref:System.Web.Compilation.BuildProvider>特定のファイル タイプのインスタンス</xref:System.Web.Compilation.BuildProvider>。 使用して、 [compilation の assemblies 要素の (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/3811c448-af1c-498d-be2b-6ed2634c51e9)プロジェクト内の複数のファイル種類で参照アセンブリを構成する構成要素。"
  syntax:
    content: public void AddAssemblyReference (System.Reflection.Assembly a);
    parameters:
    - id: a
      type: System.Reflection.Assembly
      description: "アセンブリ コンパイルに含まれるコード コンパイル単位またはソース ファイルによって参照されるアセンブリ。"
  overload: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  id: AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "CodeDOM グラフの形式でアセンブリのソース コードを追加します。"
  remarks: "<xref:System.Web.Compilation.BuildProvider>実装は仮想パスの CodeDOM グラフを生成するときに AddCodeCompileUnit メソッドを呼び出す</xref:System.Web.Compilation.BuildProvider> アセンブリ コンパイルに AddCodeCompileUnit と共に追加のソース コードが含まれます。       通常、ビルド プロバイダーの<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>メソッドの実装の読み取り、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティは、内容を解析しを指定した、生成されたソース コードを追加<xref:System.Web.Compilation.AssemblyBuilder>オブジェクト</xref:System.Web.Compilation.AssemblyBuilder></xref:System.Web.Compilation.BuildProvider.VirtualPath%2A></xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>。 ビルド プロバイダーでは、AddCodeCompileUnit メソッドを使用して、CodeDOM グラフとしてソース コードをアセンブリに追加します。 または、ビルド プロバイダーを使用できる、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>アセンブリへの物理ファイルとしてソース コードを追加するメソッド</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>。"
  syntax:
    content: public void AddCodeCompileUnit (System.Web.Compilation.BuildProvider buildProvider, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "生成するためのビルド プロバイダー`compileUnit`です。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "アセンブリのコンパイルに含めるコード コンパイル ユニット。"
  overload: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  id: CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アセンブリにソース コードをビルドするためのコンパイラを取得します。"
  remarks: "CodeDomProvider プロパティを示します、 <xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>ASP.NET ビルド環境を使用して、ソース コードからアセンブリをコンパイルするための実装が各によって得られた<xref:System.Web.Compilation.BuildProvider>実装</xref:System.Web.Compilation.BuildProvider></xref:System.CodeDom.Compiler.CodeDomProvider?displayProperty=fullName>。       ASP.NET ビルド環境を調べ、言語コンパイラを基に、プロジェクト内のファイルに必要な<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>プロパティ</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A?displayProperty=fullName>。 ビルド環境のグループ ファイルは、コンパイラ設定に基づいており、同じコンパイラが必要なファイルからアセンブリをビルドします。"
  syntax:
    content: public System.CodeDom.Compiler.CodeDomProvider CodeDomProvider { get; }
    return:
      type: System.CodeDom.Compiler.CodeDomProvider
      description: "読み取り専用<xref href=&quot;System.CodeDom.Compiler.CodeDomProvider&quot;></xref>アセンブリにビルド プロバイダーによって提供された実装のソース コードのコンパイルに使用します。"
  overload: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  id: CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーに一時的なソース ファイルを作成し、アセンブリのコンパイルにソース ファイルを含めるを許可します。"
  remarks: "<xref:System.Web.Compilation.BuildProvider>実装は仮想パスのソース ファイルを生成するときに CreateCodeFile メソッドを呼び出す</xref:System.Web.Compilation.BuildProvider> アセンブリ コンパイルに CreateCodeFile と共に追加のソース コードが含まれます。       ビルド プロバイダーでは通常、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>メソッドの実装の読み取り、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティは、内容を解析しを指定した、生成されたソース コードを追加<xref:System.Web.Compilation.AssemblyBuilder>オブジェクト</xref:System.Web.Compilation.AssemblyBuilder></xref:System.Web.Compilation.BuildProvider.VirtualPath%2A></xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>。 ビルド プロバイダーでは、CreateCodeFile メソッドを使用して、アセンブリへの物理ファイルとしてソース コードを追加します。 または、ビルド プロバイダーを使用できる、 <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>CodeDOM グラフとしてアセンブリにソース コードを追加するメソッド</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>。       CreateCodeFile を呼び出した後、ビルド プロバイダーを書き込むソース ファイルの内容を使用して、返された<xref:System.IO.TextWriter>オブジェクト</xref:System.IO.TextWriter>。 ソース ファイルの書き込み後に、<xref:System.Web.Compilation.BuildProvider>オブジェクトを使用する必要があります、<xref:System.IO.TextWriter.Close%2A>を終了するメソッド、<xref:System.IO.TextWriter>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.TextWriter></xref:System.IO.TextWriter.Close%2A></xref:System.Web.Compilation.BuildProvider>。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n In the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method implementation, the build provider adds the generated code for the assembly compilation using the CreateCodeFile method. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see <xref:System.CodeDom.CodeCompileUnit>.  \n  \n [!code-cs[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/csharp/3ed51741-a65c-4f55-993c-_1.cs)]\n [!code-vb[System.Web.Compilation_SampleBuildProvider#2](~/add/codesnippet/visualbasic/3ed51741-a65c-4f55-993c-_1.vb)]"
  syntax:
    content: public System.IO.TextWriter CreateCodeFile (System.Web.Compilation.BuildProvider buildProvider);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "コードのソース ファイルを生成するビルド プロバイダー。"
    return:
      type: System.IO.TextWriter
      description: "開いている<xref:System.IO.TextWriter>を使用して、ソース コードを一時ファイルに書き込むことができます</xref:System.IO.TextWriter>。"
  overload: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  id: CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アセンブリのコンパイルに含めるリソース ファイルを作成するビルド プロバイダーを使用します。"
  remarks: "CreateEmbeddedResource メソッドを呼び出した後、<xref:System.Web.Compilation.BuildProvider>オブジェクトに書き込みますリソース ファイルの内容を使用して、返された<xref:System.IO.Stream>オブジェクト</xref:System.IO.Stream></xref:System.Web.Compilation.BuildProvider>。 ビルド プロバイダーが使用しているリソースを記述するなど、<xref:System.Resources.ResourceWriter>オブジェクト</xref:System.Resources.ResourceWriter>。 リソース ファイルを書き込み後のビルド プロバイダーを使用する必要があります、<xref:System.IO.Stream.Close%2A>を終了するメソッド、<xref:System.IO.Stream>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.Stream></xref:System.IO.Stream.Close%2A>。"
  syntax:
    content: public System.IO.Stream CreateEmbeddedResource (System.Web.Compilation.BuildProvider buildProvider, string name);
    parameters:
    - id: buildProvider
      type: System.Web.Compilation.BuildProvider
      description: "リソースを生成するビルド プロバイダー。"
    - id: name
      type: System.String
      description: "作成するリソース ファイルの名前。"
    return:
      type: System.IO.Stream
      description: "開いている<xref:System.IO.Stream>アセンブリのコンパイルに含まれているリソースの記述に使用できる</xref:System.IO.Stream>。"
  overload: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>有効なファイル名ではありません。"
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  id: GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "種類の高速のオブジェクト ファクトリ テンプレートをコンパイルされたアセンブリに挿入します。"
  remarks: "A<xref:System.Web.Compilation.BuildProvider>実装型のインスタンスを頻繁に作成するためのパフォーマンスを最適化する GenerateTypeFactory メソッドを呼び出します</xref:System.Web.Compilation.BuildProvider>。"
  syntax:
    content: public void GenerateTypeFactory (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "生成する型の名前。"
  overload: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  id: GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  langs:
  - csharp
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "一時ファイルのパスを生成します。"
  remarks: "A<xref:System.Web.Compilation.BuildProvider>実装アセンブリがコンパイルされた後に自動的に削除される一時ファイルのパスを取得する GetTempFilePhysicalPath メソッドを呼び出します</xref:System.Web.Compilation.BuildProvider>。       GetTempFilePhysicalPath メソッドは、一意の一時ファイルのパスが生成されますが、ファイルは作成されません。"
  syntax:
    content: public string GetTempFilePhysicalPath (string extension);
    parameters:
    - id: extension
      type: System.String
      description: "一時ファイルに使用するファイル拡張子。"
    return:
      type: System.String
      description: "指定したファイル拡張子を持つ、一時ファイルへのパス。"
  overload: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference(Assembly)
  nameWithType: AssemblyBuilder.AddAssemblyReference(Assembly)
  fullName: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(System.Web.Compilation.BuildProvider,System.CodeDom.CodeCompileUnit)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  nameWithType: AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
  fullName: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit(BuildProvider,CodeCompileUnit)
- uid: System.Web.Compilation.BuildProvider
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
  fullName: System.Web.Compilation.AssemblyBuilder.CodeDomProvider
- uid: System.CodeDom.Compiler.CodeDomProvider
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeDomProvider
  nameWithType: CodeDomProvider
  fullName: System.CodeDom.Compiler.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(System.Web.Compilation.BuildProvider)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile(BuildProvider)
  nameWithType: AssemblyBuilder.CreateCodeFile(BuildProvider)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateCodeFile(BuildProvider)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(System.Web.Compilation.BuildProvider,System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource(BuildProvider,String)
  nameWithType: AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
  fullName: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource(BuildProvider,String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory(String)
  nameWithType: AssemblyBuilder.GenerateTypeFactory(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory(String)
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(System.String)
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath(String)
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath(String)
  fullName: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath(String)
- uid: System.Web.Compilation.AssemblyBuilder.AddAssemblyReference*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddAssemblyReference
  nameWithType: AssemblyBuilder.AddAssemblyReference
- uid: System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: AddCodeCompileUnit
  nameWithType: AssemblyBuilder.AddCodeCompileUnit
- uid: System.Web.Compilation.AssemblyBuilder.CodeDomProvider*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CodeDomProvider
  nameWithType: AssemblyBuilder.CodeDomProvider
- uid: System.Web.Compilation.AssemblyBuilder.CreateCodeFile*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateCodeFile
  nameWithType: AssemblyBuilder.CreateCodeFile
- uid: System.Web.Compilation.AssemblyBuilder.CreateEmbeddedResource*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: CreateEmbeddedResource
  nameWithType: AssemblyBuilder.CreateEmbeddedResource
- uid: System.Web.Compilation.AssemblyBuilder.GenerateTypeFactory*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GenerateTypeFactory
  nameWithType: AssemblyBuilder.GenerateTypeFactory
- uid: System.Web.Compilation.AssemblyBuilder.GetTempFilePhysicalPath*
  parent: System.Web.Compilation.AssemblyBuilder
  isExternal: false
  name: GetTempFilePhysicalPath
  nameWithType: AssemblyBuilder.GetTempFilePhysicalPath
