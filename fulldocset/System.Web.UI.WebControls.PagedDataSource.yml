### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.PagedDataSource
  id: PagedDataSource
  children:
  - System.Web.UI.WebControls.PagedDataSource.#ctor
  - System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowPaging
  - System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  - System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.PagedDataSource.Count
  - System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  - System.Web.UI.WebControls.PagedDataSource.DataSource
  - System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  - System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  - System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  - System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  - System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  - System.Web.UI.WebControls.PagedDataSource.IsLastPage
  - System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  - System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  - System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  - System.Web.UI.WebControls.PagedDataSource.PageCount
  - System.Web.UI.WebControls.PagedDataSource.PageSize
  - System.Web.UI.WebControls.PagedDataSource.SyncRoot
  - System.Web.UI.WebControls.PagedDataSource.VirtualCount
  langs:
  - csharp
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
  type: Class
  summary: "データ バインド コントロールのページングに関連するプロパティをカプセル化 (など<xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>、 <xref href=&quot;System.Web.UI.WebControls.GridView&quot;> </xref>、 <xref href=&quot;System.Web.UI.WebControls.DetailsView&quot;> </xref>、および<xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref>) をページングを実行できるようにします。 このクラスは継承できません。"
  remarks: "PagedDataSource クラスなど、データ ソース コントロールを許可するプロパティをカプセル化、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.FormView>、ページングを実行する</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DataGrid>。 カスタム データ バインド コントロールにページング サポートを提供するときに、このクラスはコントロールの開発者によって使用されます。       このクラスでは、最適な使用可能なメソッドを使用して、現在のページに属しているデータを列挙します。 基になるデータ ソースは、インデックス付きのアクセスをサポートしている場合 (など<xref:System.Array?displayProperty=fullName>と<xref:System.Collections.IList?displayProperty=fullName>)、このクラスは、それを使用して</xref:System.Collections.IList?displayProperty=fullName></xref:System.Array?displayProperty=fullName> によって作成された列挙子を使用してそれ以外の場合、<xref:System.Collections.IEnumerable.GetEnumerator%2A>メソッド</xref:System.Collections.IEnumerable.GetEnumerator%2A>。       PagedDataSource のインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A>コンス トラクター。</xref:System.Web.UI.WebControls.PagedDataSource.%23ctor%2A> 。"
  syntax:
    content: 'public sealed class PagedDataSource : System.Collections.ICollection, System.ComponentModel.ITypedList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.ComponentModel.ITypedList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.PagedDataSource>クラス</xref:System.Web.UI.WebControls.PagedDataSource>の新しいインスタンスを初期化します。       次の表は、 <xref:System.Web.UI.WebControls.PagedDataSource>。</xref:System.Web.UI.WebControls.PagedDataSource>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>|`false`|  |<xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A>|0|  |<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>|&10; |  |<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>|0|</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>"
  syntax:
    content: public PagedDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.PagedDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  id: AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ バインド コントロールのカスタム ページングが有効になっているかどうかを示す値を設定します。"
  remarks: "カスタム ページングが有効になっているかどうかを示すためにはプロパティを使用します。 カスタム ページングは、省略可能な型によって明示的に指定されたページングの<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid>。 ASP.NET version 2.0 のデータ バインド コントロール (など<xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.FormView>) サーバー側のページングを使用して、カスタム ページングをサポートしていません</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 カスタム ページングとサーバー側のページングは、相互に排他的です。 設定した場合は`true`ことを確認、<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>に設定されている`false`</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>。       カスタム ページングの詳細については、 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>。</xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: public bool AllowCustomPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>カスタム ページングが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ バインド コントロールでページングが有効かどうかを示す値を設定します。"
  remarks: "AllowPaging プロパティを使用して、データ バインド コントロールのページングを有効にするかどうかを指定します。 ASP.NET version 2.0 のデータ バインド コントロール (など<xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.FormView>) も自動ページング機能を提供するサーバー側のページングを使用します</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 サーバー側のページングの詳細については、 <xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>。</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>を参照してください。 使用する場合、<xref:System.Web.UI.WebControls.DataGrid>コントロール、カスタム ページング ロジックも提供できます</xref:System.Web.UI.WebControls.DataGrid>。 カスタム ページングの詳細については、「 <xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName> <xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName>。</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.DataGrid.AllowCustomPaging%2A?displayProperty=fullName>の使用」を参照していますください。       データ バインド コントロールのページングのサポートの詳細については、次を参照してください。、`AllowPaging`データ バインド コントロールのプロパティです。"
  syntax:
    content: public bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページングが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  id: AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはサーバー側のページングが有効になっているかどうかを示す値を設定します。"
  remarks: "ASP.NET version 2.0 のデータ バインド コントロール (など<xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.FormView>) サーバー側のページングを使用して自動ページング機能を提供します</xref:System.Web.UI.WebControls.FormView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 ASP.NET 2.0 がデータ バインド コントロールを使用する場合は、このプロパティを設定`true`です。      > [!NOTE] > サーバー側のページングとカスタム ページングは相互に排他的です。 AllowServerPaging に設定する場合`true`ことを確認、<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>に設定されている`false`</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>。"
  syntax:
    content: public bool AllowServerPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サーバー側のページングが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したデータ ソースからのすべての項目をコピー &lt;xref:System.Array?displayProperty=fullName&gt;で指定したインデックスから始まる、 &lt;xref:System.Array?displayProperty=fullName&gt;です。"
  remarks: "このメソッドを使用して、指定したにデータ ソースの内容をコピー <xref:System.Array?displayProperty=fullName>、指定したインデックスから始まります</xref:System.Array?displayProperty=fullName>。 <xref:System.Array?displayProperty=fullName>多くの場合に、データ ソース内の項目を反復処理するために使用します</xref:System.Array?displayProperty=fullName>。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0 から始まる&lt;xref:System.Array?displayProperty=fullName&gt;データ ソースからコピーされた項目を受信します。"
    - id: index
      type: System.Int32
      description: "指定した最初の位置&lt;xref:System.Array?displayProperty=fullName&gt;内容のコピーを受信します。"
  overload: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  id: Count
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースから使用するアイテムの数を取得します。"
  remarks: "Count プロパティを使用して、データ ソースから使用するアイテムの数を決定します。 返される値は、ページングが有効になっているかどうかと、カスタム ページングを使用するかどうかによって異なります。      ページングが無効になっている場合 (設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティを`false`) の値、<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>プロパティが返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。      ページングが有効になっている場合 (設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティを`true`) カスタム ページングが有効になっていると (設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>プロパティに設定`true`) の値、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>プロパティが返されます</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。      -ページングが有効になっている場合 (設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティを`true`) および<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>プロパティに設定されている`false`の値、<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>プロパティが返されます</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。      -ページングが有効になっている場合 (設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティを`true`)、カスタム ページングを無効に (を設定して、<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>プロパティ`false`)、および<xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A>プロパティに設定されている`true`の値、<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>プロパティは、の値から減算されます、<xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A>プロパティが返される前にします</xref:System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage%2A></xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsLastPage%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>プロパティが含まれます`null`0 が返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "データ ソースから使用する項目の数。"
  overload: System.Web.UI.WebControls.PagedDataSource.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  id: CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または現在のページのインデックスを設定します。"
  remarks: "CurrentPageIndex プロパティを使用して、指定するか、現在のページのインデックスを確認します。"
  syntax:
    content: public int CurrentPageIndex { get; set; }
    return:
      type: System.Int32
      description: "現在のページのインデックス。"
  overload: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  id: DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソースを設定します。"
  remarks: "データ ソースのプロパティを使用して、ページングされるデータ ソースを指定します。"
  syntax:
    content: public System.Collections.IEnumerable DataSource { get; set; }
    return:
      type: System.Collections.IEnumerable
      description: "A &lt;xref:System.Collections.IEnumerable?displayProperty=fullName&gt;データ ソースを表すオブジェクトを実装します。"
  overload: System.Web.UI.WebControls.PagedDataSource.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  id: DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソース内の項目数を取得します。"
  remarks: "%Datasourcecount 個のプロパティを使用して、データ ソース内の項目数を決定します。 カスタム ページングまたはサーバー側のページングを使用する場合の値、<xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A>プロパティが返されますそれ以外の場合、データ ソース内の項目の合計数が返されます。</xref:System.Web.UI.WebControls.PagedDataSource.VirtualCount%2A> 。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>プロパティが含まれます`null`0 が返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>。"
  syntax:
    content: public int DataSourceCount { get; }
    return:
      type: System.Int32
      description: "データ ソース内の項目の数。"
  overload: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "データ ソースがない、 &lt;xref:System.Collections.ICollection?displayProperty=fullName&gt;オブジェクトを実装します。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  id: FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ページに表示される最初のレコードのインデックスを取得します。"
  remarks: "FirstIndexInPage プロパティを使用して、現在のページに最初の項目のインデックスを確認します。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティに設定されている`false`、または<xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A>または<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>プロパティに設定されます`true`、または<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>プロパティが含まれます`null`0 が返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。"
  syntax:
    content: public int FirstIndexInPage { get; }
    return:
      type: System.Int32
      description: "ページに表示される最初のレコードのインデックス。"
  overload: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返します、 &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;データ ソース内のすべての項目を含むオブジェクトを実装します。"
  remarks: "このメソッドを使用して、作成、<xref:System.Collections.IEnumerator?displayProperty=fullName>データ ソース内の各項目を取得する反復することができます</xref:System.Collections.IEnumerator?displayProperty=fullName>。 列挙子の現在位置にあるアイテムにアクセスするには、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>プロパティ</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>。 使用して、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>コレクション内の次の項目に移動するメソッド</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>。 列挙子を初期位置に移動するには、使用、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>メソッド</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>。      > [!NOTE] > ときに最初に列挙子を取得または使用する、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>列挙子をコレクションの最初の項目に移動するメソッドを呼び出す必要があります、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>メソッド</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName></xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>。 によって表される項目のそれ以外の場合、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>プロパティが定義されていません</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.IEnumerator?displayProperty=fullName&gt;データ ソース内のすべての項目を含むオブジェクトを実装します。"
  overload: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  id: GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返します、 <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>データをバインドするために使用する各項目のプロパティを表すです。"
  remarks: "作成する GetItemProperties メソッドを使用して、<xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>データをバインドするために使用する各項目のプロパティを表す</xref:System.ComponentModel.PropertyDescriptorCollection?displayProperty=fullName>。 場合、<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>プロパティは`null`かではありません、 <xref:System.ComponentModel.ITypedList?displayProperty=fullName>、オブジェクトを実装する`null`が返されます</xref:System.ComponentModel.ITypedList?displayProperty=fullName></xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>。 GetItemProperties メソッドの詳細については、 <xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>。</xref:System.ComponentModel.ITypedList.GetItemProperties%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetItemProperties (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "配列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>リストの名前を含まれているオブジェクトが返されます。 これは、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>データをバインドするために使用する各項目のプロパティを表すです。"
  overload: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  id: GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "リストの名前を返します。 このメソッドは、このクラスには適用されません。"
  remarks: "このメソッドの継承元<xref:System.ComponentModel.ITypedList?displayProperty=fullName>でありこのクラスには適用されません。</xref:System.ComponentModel.ITypedList?displayProperty=fullName> 実装を返すに<xref:System.String.Empty?displayProperty=fullName>すべてのケース</xref:System.String.Empty?displayProperty=fullName>。"
  syntax:
    content: public string GetListName (System.ComponentModel.PropertyDescriptor[] listAccessors);
    parameters:
    - id: listAccessors
      type: System.ComponentModel.PropertyDescriptor[]
      description: "配列<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;></xref>リストの名前を含まれているオブジェクトが返されます。 これは、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.String
      description: '&lt;xref:System.String?displayProperty=fullName&gt;すべてのケース。'
  overload: System.Web.UI.WebControls.PagedDataSource.GetListName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  id: IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "カスタム ページングが有効になっているかどうかを示す値を取得します。"
  remarks: "IsCustomPagingEnabled プロパティを使用して、カスタム ページングが有効になっているかどうかを判断します。      > [!NOTE] > 両方、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>と<xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A>プロパティである必要があります`true`を返すには、このプロパティの`true`</xref:System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。"
  syntax:
    content: public bool IsCustomPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>カスタム ページングが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  id: IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のページが最初のページかどうかを示す値を取得します。"
  remarks: "IsFirstPage プロパティを使用して、現在のページが最初のページであるかどうかを判別します。"
  syntax:
    content: public bool IsFirstPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のページが最初のページ以外の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  id: IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のページが、最後のページかどうかを示す値を取得します。"
  remarks: "IsLastPage プロパティを使用して、現在のページが、最後のページであるかどうかを判別します。"
  syntax:
    content: public bool IsLastPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のページが、最後のページの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  id: IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ページングが有効になっているかどうかを示す値を取得します。"
  remarks: "IsPagingEnabled プロパティを使用して、ページングが有効になっているかどうかを判断します。      > [!NOTE] >、<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>プロパティである必要があります`true`と<xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A>プロパティは、このプロパティを返す場合は 0 に設定することはできません`true`</xref:System.Web.UI.WebControls.PagedDataSource.PageSize%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>。"
  syntax:
    content: public bool IsPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページングが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースは読み取り専用であるかどうかを示す値を取得します。"
  remarks: "このプロパティの実装を常に返すに`false`常に、データ ソースを変更できることを示します。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべてのケース。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  id: IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "サーバー側のページングのサポートが有効になっているかどうかを示す値を取得します。"
  remarks: "サーバー側のページングが有効になっているときに、<xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>と<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A>プロパティに設定されて`true`と&1; つのページで、データ ソースによって取得されるデータの量を表示できません</xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging%2A></xref:System.Web.UI.WebControls.PagedDataSource.AllowPaging%2A>。"
  syntax:
    content: public bool IsServerPagingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ページングが有効になっておりを使用してサーバー側のページングに示されている場合、<xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*>プロパティ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*> 。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "(スレッド セーフである) データ ソースへのアクセスが同期されているかどうかを示す値を取得します。"
  remarks: "このプロパティはから派生した、<xref:System.Collections.ICollection?displayProperty=fullName>クラスし、常にオーバーライド`false`をこのクラスがスレッド セーフでないことを示します</xref:System.Collections.ICollection?displayProperty=fullName>。       IsSynchronized プロパティの詳細については、次を参照してください、<xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName>のプロパティ、<xref:System.Collections.ICollection?displayProperty=fullName>インターフェイス。</xref:System.Collections.ICollection?displayProperty=fullName> </xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName> 。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべてのケース。"
  overload: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソース内のすべての項目を表示するために必要なページの合計数を取得します。"
  remarks: "PageCount プロパティを使用して、データ ソース内のすべての項目を表示するために必要なページ数を決定します。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>プロパティは`null`0 が返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSource%2A>。 場合、<xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>プロパティに設定されている`false`または<xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A>プロパティを設定すると、以下を 0 には、1 が返されます</xref:System.Web.UI.WebControls.PagedDataSource.DataSourceCount%2A></xref:System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled%2A>。"
  syntax:
    content: public int PageCount { get; }
    return:
      type: System.Int32
      description: "データ ソース内のすべての項目を表示するために必要なページ数。"
  overload: System.Web.UI.WebControls.PagedDataSource.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  id: PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または&1; つのページに表示する項目の数を設定します。"
  remarks: "PageSize プロパティを使用して、1 つのページに表示する項目の数を指定します。"
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "1 つのページに表示する項目の数。"
  overload: System.Web.UI.WebControls.PagedDataSource.PageSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: "この実装で返されるオブジェクトは、<xref:System.Web.UI.WebControls.PagedDataSource>オブジェクト自体です</xref:System.Web.UI.WebControls.PagedDataSource>。       詳細については、<xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>プロパティを参照してください、<xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName>のプロパティ、<xref:System.Collections.ICollection?displayProperty=fullName>インターフェイス</xref:System.Collections.ICollection?displayProperty=fullName></xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.DataGridColumnCollection.SyncRoot%2A>。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するために使用できるオブジェクト。"
  overload: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  id: VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  langs:
  - csharp
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはカスタム ページングを使用する場合に、データ ソースの仮想項目数を設定します。"
  remarks: "カスタム ページングまたはサーバー側のページングを使用して仮想データ ソース内の項目数を決定する場合は、VirtualCount プロパティを使用します。 VirtualCount プロパティの詳細については、 <xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>。</xref:System.Web.UI.WebControls.DataGrid.VirtualItemCount%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: public int VirtualCount { get; set; }
    return:
      type: System.Int32
      description: "カスタム ページングを使用する場合は、データ ソース内の項目数の仮想です。"
  overload: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource()
  nameWithType: PagedDataSource.PagedDataSource()
  fullName: System.Web.UI.WebControls.PagedDataSource.PagedDataSource()
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
  fullName: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: PagedDataSource.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.PagedDataSource.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.PagedDataSource.Count
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
  fullName: System.Web.UI.WebControls.PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
  fullName: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
  fullName: System.Web.UI.WebControls.PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
  fullName: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator()
  nameWithType: PagedDataSource.GetEnumerator()
  fullName: System.Web.UI.WebControls.PagedDataSource.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetItemProperties(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetItemProperties(PropertyDescriptor[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.PropertyDescriptor[]
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor[]
  spec.csharp:
  - uid: System.ComponentModel.PropertyDescriptor
    name: PropertyDescriptor
    nameWithType: PropertyDescriptor
    fullName: PropertyDescriptor[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName(PropertyDescriptor[])
  nameWithType: PagedDataSource.GetListName(PropertyDescriptor[])
  fullName: System.Web.UI.WebControls.PagedDataSource.GetListName(PropertyDescriptor[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
  fullName: System.Web.UI.WebControls.PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
  fullName: System.Web.UI.WebControls.PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
  fullName: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
  fullName: System.Web.UI.WebControls.PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
  fullName: System.Web.UI.WebControls.PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
  fullName: System.Web.UI.WebControls.PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
  fullName: System.Web.UI.WebControls.PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
  fullName: System.Web.UI.WebControls.PagedDataSource.VirtualCount
- uid: System.Web.UI.WebControls.PagedDataSource.#ctor*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource.PagedDataSource
- uid: System.Web.UI.WebControls.PagedDataSource.AllowCustomPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowCustomPaging
  nameWithType: PagedDataSource.AllowCustomPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowPaging
  nameWithType: PagedDataSource.AllowPaging
- uid: System.Web.UI.WebControls.PagedDataSource.AllowServerPaging*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: AllowServerPaging
  nameWithType: PagedDataSource.AllowServerPaging
- uid: System.Web.UI.WebControls.PagedDataSource.CopyTo*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CopyTo
  nameWithType: PagedDataSource.CopyTo
- uid: System.Web.UI.WebControls.PagedDataSource.Count*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: Count
  nameWithType: PagedDataSource.Count
- uid: System.Web.UI.WebControls.PagedDataSource.CurrentPageIndex*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: CurrentPageIndex
  nameWithType: PagedDataSource.CurrentPageIndex
- uid: System.Web.UI.WebControls.PagedDataSource.DataSource*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSource
  nameWithType: PagedDataSource.DataSource
- uid: System.Web.UI.WebControls.PagedDataSource.DataSourceCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: DataSourceCount
  nameWithType: PagedDataSource.DataSourceCount
- uid: System.Web.UI.WebControls.PagedDataSource.FirstIndexInPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: FirstIndexInPage
  nameWithType: PagedDataSource.FirstIndexInPage
- uid: System.Web.UI.WebControls.PagedDataSource.GetEnumerator*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetEnumerator
  nameWithType: PagedDataSource.GetEnumerator
- uid: System.Web.UI.WebControls.PagedDataSource.GetItemProperties*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetItemProperties
  nameWithType: PagedDataSource.GetItemProperties
- uid: System.Web.UI.WebControls.PagedDataSource.GetListName*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: GetListName
  nameWithType: PagedDataSource.GetListName
- uid: System.Web.UI.WebControls.PagedDataSource.IsCustomPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsCustomPagingEnabled
  nameWithType: PagedDataSource.IsCustomPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsFirstPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsFirstPage
  nameWithType: PagedDataSource.IsFirstPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsLastPage*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsLastPage
  nameWithType: PagedDataSource.IsLastPage
- uid: System.Web.UI.WebControls.PagedDataSource.IsPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsPagingEnabled
  nameWithType: PagedDataSource.IsPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsReadOnly*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsReadOnly
  nameWithType: PagedDataSource.IsReadOnly
- uid: System.Web.UI.WebControls.PagedDataSource.IsServerPagingEnabled*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsServerPagingEnabled
  nameWithType: PagedDataSource.IsServerPagingEnabled
- uid: System.Web.UI.WebControls.PagedDataSource.IsSynchronized*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: IsSynchronized
  nameWithType: PagedDataSource.IsSynchronized
- uid: System.Web.UI.WebControls.PagedDataSource.PageCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageCount
  nameWithType: PagedDataSource.PageCount
- uid: System.Web.UI.WebControls.PagedDataSource.PageSize*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: PageSize
  nameWithType: PagedDataSource.PageSize
- uid: System.Web.UI.WebControls.PagedDataSource.SyncRoot*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: SyncRoot
  nameWithType: PagedDataSource.SyncRoot
- uid: System.Web.UI.WebControls.PagedDataSource.VirtualCount*
  parent: System.Web.UI.WebControls.PagedDataSource
  isExternal: false
  name: VirtualCount
  nameWithType: PagedDataSource.VirtualCount
