### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "<xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref>モジュールには、財務関連の操作を実行するための手順が含まれています。"
  remarks: "このモジュールは、減価償却、現在および将来の値、金利、戻り値、および支払いの速度などの財務計算を実行する Visual Basic ランタイム ライブラリ メンバーをサポートします。"
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>倍率逓減法または指定したその他の方法を使用して、特定の期間の資産の減価償却を指定します。"
  remarks: "倍率逓減法では、迅速なレートで減価償却費を計算します。 減価償却では、最初の期間が最も高くし、連続する期間に減少します。       `Life`と`Period`の引数は、同じ単位で表す必要があります。 たとえば場合、`Life`月単位で指定された`Period`も月単位で指定する必要があります。 すべての引数は正の数値である必要があります。       `DDB`関数では、次の数式を使用して、特定の期間に対する減価償却費を計算する: 減価償却/期間 = ((Cost – Salvage) * 係数)/有効期間"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の初期コストを指定します。"
    - id: Salvage
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>耐用年数の最後の資産の値を指定します。"
    - id: Life
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の耐用年数を指定します。"
    - id: Period
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>減価償却が計算される期間を指定します。"
    - id: Factor
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>レートを減価償却を指定します。 省略した場合、2 (倍率逓減法) が使用されます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>倍率逓減法または指定したその他の方法を使用して、特定の期間の資産の減価償却を指定します。"
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利をに基づいて年金の将来の値を指定します。"
  remarks: "年金は、一連の支払いを時間の経過と共に行うです。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       `Rate`と`NPer`引数は、同じ単位で支払い期間を使用して計算する必要があります。 たとえば場合、`Rate`か月間を使用して計算されます`NPer`か月間を使用して計算する必要があります。       すべての引数、預金) など配当は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一定期間金利を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、合計で 4 x 12 (または 48) の支払い期間があることにします。"
    - id: Pmt
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>それぞれの期間に支払いを指定します。 通常、支払いには、プリンシパルと、年金の期間を変更しない関心が含まれます。"
    - id: PV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一連の将来の支払いの現在の値 (または一括) を指定します。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります<xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;></xref>支払い期間の最後に支払う場合または<xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;></xref>期間の先頭に支払う場合。 省略した場合、 <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref>と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利をに基づいて年金の将来の値を指定します。"
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利に基づく指定された期間の年金の利払いを指定します。"
  remarks: "年金は、一連の支払いを時間の経過と共に行うです。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       `Rate`と`NPer`引数は、同じ単位で支払い期間を使用して計算する必要があります。 たとえば場合、`Rate`か月間を使用して計算されます`NPer`か月間を使用して計算する必要があります。       すべての引数、預金) など配当は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一定期間金利を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: Per
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>~ 1 の範囲で支払い期間を指定する`NPer`です。"
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、合計で 4 x 12 (または 48) の支払い期間があることにします。"
    - id: PV
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>存在を指定することや、または値今日では、将来の支払いを処理または配信確認メッセージの一連の値します。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>将来の値または最終のお支払いを行った後にした場合を指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、お子様の教育用 18 歳以上で $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利に基づく指定された期間の年金の利払いを指定します。"
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) の内部利益率を指定します。"
  remarks: "内部利益率は、支払いと受け取り一定の間隔で発生するので構成される投資に対する利率です。       `IRR`関数では、配列内の値の順序を使用して、支払いと受け取りの順序を解釈します。 必ず、正しいシーケンスで支払いと受信確認の値を入力してください。 年金は、各期間のキャッシュ フローは修正するのには必要ありません。       `IRR`イテレーションによって計算されます。 値で始まる`Guess`、`IRR`結果が 0.00001% 以内に正確になるまで、計算を切り替えます。 場合`IRR`20 後の結果が、失敗した場合に見つけることができません。"
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "必須。 配列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>キャッシュ フローの値を指定します。 配列には、少なくとも&1; つの負の値 (支払) と&1; つの正の値 (受信) を含める必要があります。"
    - id: Guess
      type: System.Double
      description: "任意。 推定値を指定するオブジェクトによって返される<xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;></xref>です。 省略した場合、 `Guess` 0.1 (10%)。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) の内部利益率を指定します。"
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "配列引数の値が無効または<code> Guess </code> &lt;-1 を = です。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) の戻り値の変更された内部収益率を指定します。"
  remarks: "変更された内部利益率は、内部の戻り値の支払いと受け取りを異なるレートで管理する場合です。 `MIRR`関数では、投資収益率のコストの両方を考慮に入れます (`FinanceRate`) と収益利率 (`ReinvestRate`)。       `FinanceRate`と`ReinvestRatearguments`10 進数値で表した比率です。 たとえば、12% は、0.12 として表されます。       `MIRR`関数では、配列内の値の順序を使用して、支払いと受け取りの順序を解釈します。 必ず、正しいシーケンスで支払いと受信確認の値を入力してください。"
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "必須。 配列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>キャッシュ フローの値を指定します。 配列には、少なくとも&1; つの負の値 (支払) と&1; つの正の値 (受信) を含める必要があります。"
    - id: FinanceRate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>利率を指定する支払額です。"
    - id: ReinvestRate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>現金利率の利率を指定します。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) の戻り値の変更された内部収益率を指定します。"
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "0 による除算が発生しました。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期定額払いおよび固定金利をに基づいて年金の期間の数を指定します。"
  remarks: "年金は、一連の支払いを一定期間の時間です。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       すべての引数、預金) など配当は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一定期間金利を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: Pmt
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>それぞれの期間に支払いを指定します。 通常、支払いには、プリンシパルと、年金の寿命が変化しない関心が含まれます。"
    - id: PV
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>存在を指定することや、または値今日では、将来の支払いを処理または配信確認メッセージの一連の値します。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>将来の値または最終の支払いを行った後にするキャッシュのバランスを指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、お子様の教育用 18 歳以上で $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期定額払いおよび固定金利をに基づいて年金の期間の数を指定します。"
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) および公定歩合に基づいて投資の正味現在価値を指定します。"
  remarks: "投資の正味現在価値は、支払いと受け取りの将来のシリーズの現在の値です。       `NPV`関数では、配列内の値の順序を使用して、支払いと受け取りの順序を解釈します。 必ず、正しいシーケンスで支払いと受信確認の値を入力してください。       `NPV`投資した日付より前に、のキャッシュ フローの最初の値の&1; つのピリオドを開始し、配列の最後のキャッシュ フローの値で終了します。       正味現在価値の計算は、将来のキャッシュ フローに基づいています。 によって返される値を最初の値を追加する必要があります、先頭の最初の期間の最初のキャッシュ フローする場合は、`NPV`キャッシュ フローの値に含まれていない必要があります`ValueArray`です。       `NPV`関数がに似ていますが、`PV`関数 (現在の値) ことを除いて、`PV`関数により、キャッシュ フローの終了またはピリオドの先頭での作業を開始します。 変数とは異なり`NPV`キャッシュ フローの値、`PV`投資収益率全体でのキャッシュ フローを固定する必要があります。"
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一定期間の割引率を指定することは、10 進数として表されます。"
    - id: ValueArray
      type: System.Double[]
      description: "必須。 配列<xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>キャッシュ フローの値を指定します。 配列には、少なくとも&1; つの負の値 (支払) と&1; つの正の値 (受信) を含める必要があります。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>一連の定期的なキャッシュ フロー (支払いと受け取り) および公定歩合に基づいて投資の正味現在価値を指定します。"
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利をに基づいて年金の支払い額を指定します。"
  remarks: "年金は、一連の支払いを時間の期間中に行うです。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       `Rate`と`NPer`引数は、同じ単位で支払い期間を使用して計算する必要があります。 たとえば場合、`Rate`か月間を使用して計算されます`NPer`か月間を使用して計算する必要があります。       すべての引数、預金) などの支払額は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>利率の期間を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、4 × 12 (または 48) の支払い期間の合計があることにします。"
    - id: PV
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>存在または値を指定 (一括の) 一連の今後の支払いが現在価値があります。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>将来の値または最終の支払いを行った後にするキャッシュのバランスを指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、18 歳以上のお子様の教育中 $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期的な定額払いおよび固定金利をに基づいて年金の支払い額を指定します。"
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期定額払いおよび固定金利に基づく指定された期間の年金の支払い額をプリンシパルを指定します。"
  remarks: "年金は、一連の支払いを一定期間の時間です。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       `Rate`と`NPer`引数は、同じ単位で支払い期間を使用して計算する必要があります。 たとえば場合、`Rate`か月間を使用して計算されます`NPer`か月間を使用して計算する必要があります。       すべての引数、預金) などの支払額は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>利率の期間を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: Per
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>~ 1 の範囲で支払い期間を指定`NPer`です。"
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、合計で 4 x 12 (または 48) の支払い期間があることにします。"
    - id: PV
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>一連の将来の支払いを処理または配信確認メッセージの現在の値を指定します。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>将来の値または最終の支払いを行った後にするキャッシュのバランスを指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、お子様の教育用 18 歳以上で $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>定期定額払いおよび固定金利に基づく指定された期間の年金の支払い額をプリンシパルを指定します。"
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>今後支払われる定期的な定額払いおよび固定金利をに基づいて年金の現在の値を指定します。"
  remarks: "年金は、一連の支払いを一定期間の時間です。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       `Rate`と`NPer`引数は、同じ単位で支払い期間を使用して計算する必要があります。 たとえば場合、`Rate`か月間を使用して計算されます`NPer`か月間を使用して計算する必要があります。       すべての引数、預金) など配当は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。"
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>利率の期間を指定します。 たとえば、自動車ローンを 10% の年率 (年 4 月) で取得して毎月の支払いを行う場合期間ごとのレートは 0.1/12、0.0083 です。"
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、4 x 12 (または 48) の支払い期間があることにします。"
    - id: Pmt
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>それぞれの期間に支払いを指定します。 通常、支払には、プリンシパルと、年金の有効期間中に変化しない関心が含まれます。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>最後の支払いを行った後にする将来の値または現金の残高を指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、お子様の教育用 18 歳以上で $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>今後支払われる定期的な定額払いおよび固定金利をに基づいて年金の現在の値を指定します。"
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>年金の毎期金利を指定します。"
  remarks: "年金は、一連の支払いを一定期間の時間です。 年金には、住宅ローン) などのローンまたは (毎月のコスト削減プラン) など、投資収益率を指定できます。       すべての引数、預金) など配当は負の数値で表されます。(被除数をチェックします) などに受信したキャッシュは、正の数値で表されます。       `Rate`イテレーションによって計算されます。 値で始まる`Guess`、`Rate`結果が 0.00001% 以内に正確になるまで、計算を切り替えます。 場合`Rate`20 後の結果が、失敗した場合に見つけることができません。 推定値が 10% の場合と`Rate`失敗した場合、再試行の値が異なる`Guess`です。"
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>年金の支払い回数の合計数を指定します。 たとえば、4 年カー ローンの毎月の支払いを行う場合、合計で 4 * 12 (または 48) の支払い期間があることにします。"
    - id: Pmt
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>それぞれの期間に支払いを指定します。 通常、支払いには、プリンシパルと、年金の期間を変更しない関心が含まれます。"
    - id: PV
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>指定の値または今日では、将来の支払いを処理または配信確認メッセージの一連の値します。 たとえば、車を購入するコストを借用するときにローン額、自動車支払いを行うかの lender を存在値です。"
    - id: FV
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>最後の支払いを行った後にする将来の値または現金の残高を指定します。 たとえば、ローンの将来の値が $0 が最終のお支払いの後にその値です。 ただし、お子様の教育用 18 歳以上で $50,000 を保存する場合は、将来の値が $50,000 にします。 省略した場合、0 と見なされます。"
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "任意。 型のオブジェクト<xref href=&quot;Microsoft.VisualBasic.DueDate&quot;></xref>支払いが期限を指定します。 この引数はいずれかである必要があります`DueDate.EndOfPeriod`支払い期間の最後に支払う場合または`DueDate.BegOfPeriod`期間の先頭に支払う場合。 省略した場合、`DueDate.EndOfPeriod`と見なされます。"
    - id: Guess
      type: System.Double
      description: "任意。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>によって返される推定値を指定する<xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;></xref>です。 省略した場合、 `Guess` 0.1 (10%)。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>年金の毎期金利を指定します。"
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>単一期間に対する資産の定額償却を指定します。"
  remarks: "減価償却の期間と同じ単位で表す必要があります、`Life`引数。 すべての引数は正の数値である必要があります。"
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の初期コストを指定します。"
    - id: Salvage
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>耐用年数の最後の資産の値を指定します。"
    - id: Life
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の耐用年数を指定します。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>単一期間に対する資産の定額償却を指定します。"
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>逓減合計資産の減価償却を指定した期間を指定します。"
  remarks: "`Life`と`Period`の引数は、同じ単位で表す必要があります。 たとえば場合、`Life`月単位で指定された`Period`も月単位で指定する必要があります。 すべての引数は正の数値である必要があります。"
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の初期コストを指定します。"
    - id: Salvage
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>耐用年数の最後の資産の値を指定します。"
    - id: Life
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>資産の耐用年数の長さを指定します。"
    - id: Period
      type: System.Double
      description: "必須。 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>減価償却が計算される期間を指定します。"
    return:
      type: System.Double
      description: "返します、 <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref>逓減合計資産の減価償却を指定した期間を指定します。"
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
