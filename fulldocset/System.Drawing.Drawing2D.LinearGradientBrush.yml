### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.LinearGradientBrush
  id: LinearGradientBrush
  children:
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  - System.Drawing.Drawing2D.LinearGradientBrush.Blend
  - System.Drawing.Drawing2D.LinearGradientBrush.Clone
  - System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  - System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  - System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  - System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.Transform
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  langs:
  - csharp
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush
  fullName: System.Drawing.Drawing2D.LinearGradientBrush
  type: Class
  summary: "カプセル化、 <xref href=&quot;System.Drawing.Brush&quot;> </xref>線形グラデーションを使用しています。 このクラスは継承できません。"
  remarks: "このクラスは、2 色のグラデーションとカスタムのマルチ カラー グラデーションの両方をカプセル化します。       四角形の幅または&2; つのポイントのいずれかを指定した行に沿ってすべての線形グラデーションが定義されます。       既定では、2 色の線形グラデーションは、水平線形 blend 開始色から終了色まで指定した行に沿ったです。 Blend のパターンを使用して、カスタマイズ、<xref:System.Drawing.Drawing2D.Blend>クラス、<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>メソッド、または<xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>メソッド</xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A></xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A></xref:System.Drawing.Drawing2D.Blend>。 指定して、グラデーションの方向をカスタマイズ、<xref:System.Drawing.Drawing2D.LinearGradientMode>列挙型またはコンス トラクターの角度</xref:System.Drawing.Drawing2D.LinearGradientMode>。       使用して、<xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>グラデーションを作成するプロパティ</xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A>。       <xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>プロパティをグラデーションに適用されるローカル ジオメトリック変換を指定します</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform%2A>。"
  example:
  - "The following example creates a horizontal LinearGradientBrush; the color components change linearly as you move from a horizontal coordinate of 0 to a horizontal coordinate of 200. For example, a point whose first coordinate is halfway between 0 and 200 will have a blue component that is halfway between 0 and 255. This example is designed for use with Windows Forms. The following code example is designed for use with Windows Forms, and it requires the <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of <xref:System.Windows.Forms.PaintEventHandler>.  \n  \n [!code-vb[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/visualbasic/t-system.drawing.drawing_3_1.vb)]\n [!code-cs[System.Drawing.UsingaGradientBrush#21](~/add/codesnippet/csharp/t-system.drawing.drawing_3_1.cs)]"
  syntax:
    content: 'public sealed class LinearGradientBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>として、指定されたポイントの色。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.Point point1, System.Drawing.Point point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>線状グラデーションの開始位置を表す構造です。"
    - id: point2
      type: System.Drawing.Point
      description: "A <xref href=&quot;System.Drawing.Point&quot;> </xref>線形グラデーションの終了点を表す構造です。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>線状グラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>線状グラデーションの終了色を表す構造です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>として、指定されたポイントの色。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.PointF point1, System.Drawing.PointF point2, System.Drawing.Color color1, System.Drawing.Color color2);
    parameters:
    - id: point1
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>線状グラデーションの開始位置を表す構造です。"
    - id: point2
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>線形グラデーションの終了点を表す構造です。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>線状グラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>線状グラデーションの終了色を表す構造です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>クラスは、最初と最後の色、および印刷の向きの四角形に基づいています。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref>グラデーションの向きを指定する要素を列挙します。 印刷の向きでは、グラデーションの開始と終了ポイントを決定します。 たとえば、 <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref>ことが四角形の左上隅の開始点と終了ポイントは、四角形の右下隅を指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>クラスは、最初と最後の色、および角度の四角形に基づいています。"
  remarks: "任意の行を垂直方向の線に沿ったのすべてのポイントは、同じ色がします。       開始行は、垂直方向の行に四角形の四隅のいずれかを通過します。 開始行のすべてのポイントは、開始色です。 行を終了し、垂直方向の行し、四角形の四隅のいずれかを通過します。 終了行に対するすべてのポイントは、終了色です。       印刷の向きの線の角度は、最初と最後の行を通過する隅を決定します。 たとえば、角度が 0 ~ 90 ° の範囲にある場合は、開始行をそのまま渡し、左上隅にある終了行は、右下隅を通過します。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: angle
      type: System.Single
      description: "時計回りに測定した、x 軸からのグラデーションの印刷の向きの行の角度。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>最初と最後の色、および向きモードの四角形に基づいています。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, System.Drawing.Drawing2D.LinearGradientMode linearGradientMode);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: linearGradientMode
      type: System.Drawing.Drawing2D.LinearGradientMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.LinearGradientMode&quot;> </xref>グラデーションの向きを指定する要素を列挙します。 印刷の向きでは、グラデーションの開始と終了ポイントを決定します。 たとえば、 <xref uid=&quot;langword_csharp_LinearGradientMode.ForwardDiagonal&quot; name=&quot;LinearGradientMode.ForwardDiagonal&quot; href=&quot;&quot;> </xref>ことが四角形の左上隅の開始点と終了ポイントは、四角形の右下隅を指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>クラスは、最初と最後の色、および角度の四角形に基づいています。"
  remarks: "任意の行を垂直方向の線に沿ったのすべてのポイントは、同じ色がします。       開始行は、垂直方向の行に四角形の四隅のいずれかを通過します。 開始行のすべてのポイントは、開始色です。 行を終了し、垂直方向の行し、四角形の四隅のいずれかを通過します。 終了行に対するすべてのポイントは、終了色です。       印刷の向きの線の角度は、最初と最後の行を通過する隅を決定します。 たとえば、角度が 0 ~ 90 ° の範囲にある場合は、開始行をそのまま渡し、左上隅にある終了行は、右下隅を通過します。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: angle
      type: System.Single
      description: "時計回りに測定した、x 軸からのグラデーションの印刷の向きの行の角度。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>クラスは、最初と最後の色、および角度の四角形に基づいています。"
  remarks: "任意の行を垂直方向の線に沿ったのすべてのポイントは、同じ色がします。       開始行は、垂直方向の行に四角形の四隅のいずれかを通過します。 開始行のすべてのポイントは、開始色です。 行を終了し、垂直方向の行し、四角形の四隅のいずれかを通過します。 終了行に対するすべてのポイントは、終了色です。       印刷の向きの線の角度は、最初と最後の行を通過する隅を決定します。 たとえば、角度が 0 ~ 90 ° の範囲にある場合は、開始行をそのまま渡し、左上隅にある終了行は、右下隅を通過します。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.Rectangle rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.Rectangle
      description: "A <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: angle
      type: System.Single
      description: "時計回りに測定した、x 軸からのグラデーションの印刷の向きの行の角度。"
    - id: isAngleScaleable
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>角度がこれに関連付けられている変換によって影響を受けることを指定する<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  id: '#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)'
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>クラスは、最初と最後の色、および角度の四角形に基づいています。"
  remarks: "任意の行を垂直方向の線に沿ったのすべてのポイントは、同じ色がします。       開始行は、垂直方向の行に四角形の四隅のいずれかを通過します。 開始行のすべてのポイントは、開始色です。 行を終了し、垂直方向の行し、四角形の四隅のいずれかを通過します。 終了行に対するすべてのポイントは、終了色です。       印刷の向きの線の角度は、最初と最後の行を通過する隅を決定します。 たとえば、角度が 0 ~ 90 ° の範囲にある場合は、開始行をそのまま渡し、左上隅にある終了行は、右下隅を通過します。"
  syntax:
    content: public LinearGradientBrush (System.Drawing.RectangleF rect, System.Drawing.Color color1, System.Drawing.Color color2, float angle, bool isAngleScaleable);
    parameters:
    - id: rect
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>構造線状グラデーションの境界を指定します。"
    - id: color1
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの開始色を表す構造です。"
    - id: color2
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>のグラデーションの終了色を表す構造です。"
    - id: angle
      type: System.Single
      description: "時計回りに測定した、x 軸からのグラデーションの印刷の向きの行の角度。"
    - id: isAngleScaleable
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>角度がこれに関連付けられている変換によって影響を受けることを指定する<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  id: Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref>のグラデーションのカスタム減色を定義する位置と係数を指定します。"
  remarks: "A <xref:System.Drawing.Drawing2D.Blend>blend 要因および位置の対応する配列が含まれています</xref:System.Drawing.Drawing2D.Blend>。 Blend の要因は、色の開始と終了日に対応する位置に使用する色の割合を指定します。 位置は、グラデーションの線に沿った距離の割合として指定します。"
  syntax:
    content: public System.Drawing.Drawing2D.Blend Blend { get; set; }
    return:
      type: System.Drawing.Drawing2D.Blend
      description: "A <xref href=&quot;System.Drawing.Drawing2D.Blend&quot;> </xref>のグラデーションのカスタムの減色を表すです。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これの正確なコピーが作成<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Clones the <xref:System.Drawing.Drawing2D.LinearGradientBrush> (`clonedLGBrush`).  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the cloned brush.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/visualbasic/m-system.drawing.drawing_18_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/cpp/m-system.drawing.drawing_18_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#1](~/add/codesnippet/csharp/m-system.drawing.drawing_18_1.cs)]"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>オブジェクトとしてキャスト、このメソッドを作成します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  id: GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "ガンマ補正が有効にするかどうかを示す値を取得または<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>です。"
  syntax:
    content: public bool GammaCorrection { get; set; }
    return:
      type: System.Boolean
      description: "値が<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ガンマ補正が有効にする場合<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  id: InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref>線形グラデーションを定義します。"
  remarks: "A<xref:System.Drawing.Drawing2D.ColorBlend>色および位置の対応する配列が含まれています</xref:System.Drawing.Drawing2D.ColorBlend>。 位置は、対応する色が配置されているグラデーションの線に沿った距離の割合を指定する 0 ~ 1 の値です。       このプロパティを設定すると、グラデーションの線に沿った位置ごとに&1; つの色とグラデーションが作成されます。 この<xref:System.Drawing.Drawing2D.LinearGradientBrush>。</xref:System.Drawing.Drawing2D.LinearGradientBrush>すべて以前の色、位置、および減衰設定を null このプロパティの設定"
  syntax:
    content: public System.Drawing.Drawing2D.ColorBlend InterpolationColors { get; set; }
    return:
      type: System.Drawing.Drawing2D.ColorBlend
      description: "A <xref href=&quot;System.Drawing.Drawing2D.ColorBlend&quot;> </xref>線形グラデーションを定義します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  id: LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得またはグラデーションの開始および終了色を設定します。"
  syntax:
    content: public System.Drawing.Color[] LinearColors { get; set; }
    return:
      type: System.Drawing.Color[]
      description: "2 つの配列<xref href=&quot;System.Drawing.Color&quot;></xref>を開始および終了するグラデーションの色を表す構造体。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "乗算、 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>このローカル ジオメトリック変換を表す<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>において指定した<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> 、指定した付加することによって<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>です。"
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A>.
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>ジオメトリック変換を乗算します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "乗算、 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>このローカル ジオメトリック変換を表す<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>において指定した<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;></xref>指定した順序で。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method, to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n Notice that the lower ellipse is stretched in the horizontal direction, and that the gradient is stretched to match the new shape.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/visualbasic/90c76832-46c2-4578-8b9f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/cpp/90c76832-46c2-4578-8b9f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#2](~/add/codesnippet/csharp/90c76832-46c2-4578-8b9f-_1.cs)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>ジオメトリック変換を乗算します。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref>で&2; つの行列を乗算する順序を指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  id: Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "グラデーションの開始と終了ポイントを定義する四角形の領域を取得します。"
  remarks: "四角形の左側にある線形グラデーションの開始位置を指定して、四角形の右側にあるエンドポイントを指定します。"
  syntax:
    content: public System.Drawing.RectangleF Rectangle { get; }
    return:
      type: System.Drawing.RectangleF
      description: "A <xref href=&quot;System.Drawing.RectangleF&quot;> </xref>を開始して、グラデーションの終点を指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "リセット、<xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>プロパティを識別します</xref:System.Drawing.Drawing2D.LinearGradientBrush.Transform*>。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Calls the <xref:System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform%2A> method to transform the <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the transformed brush.  \n  \n-   Resets the transform.  \n  \n-   Draws a third ellipse to the screen below the first two.  \n  \n Notice that the lowest ellipse is drawn the same size as the first, and that, due to the call to the ResetTransform method, the gradient has been reduced to match.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/visualbasic/m-system.drawing.drawing_6_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/cpp/m-system.drawing.drawing_6_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#3](~/add/codesnippet/csharp/m-system.drawing.drawing_6_1.cs)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "指定した量だけローカル ジオメトリック変換を回転します。 このメソッドの前に回転変換を行います。"
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A>.
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "回転の角度。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "指定した順序で指定した量だけローカル ジオメトリック変換を回転します。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draws an ellipse to the screen using this brush.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> 45 degrees by calling the <xref:System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform%2A> method.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the rotated brush.  \n  \n Notice that the gradient of the lower ellipse is at a 45 degree angle to the x-axis of the top ellipse. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of the lower ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/visualbasic/6302de64-3f75-4fc9-b2c4-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/cpp/6302de64-3f75-4fc9-b2c4-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#4](~/add/codesnippet/csharp/6302de64-3f75-4fc9-b2c4-_1.cs)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "回転の角度。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref>回転行列やまたは追加するかどうかを指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "ローカル ジオメトリック変換をスケール、指定した量だけです。 このメソッドの前にスケーリング行列変換を行います。"
  remarks: ''
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform%2A>.
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "X 軸方向に変換をスケーリングする量。"
    - id: sy
      type: System.Single
      description: "Y 軸方向に変換をスケーリングする量。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "ローカル ジオメトリック変換をスケールを指定した順序で指定した比率。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Draw an ellipse to the screen using this brush.  \n  \n-   Scales the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by a factor of two in the x-axis.  \n  \n-   Draws an ellipse to the screen directly below the first ellipse, using the scaled brush.  \n  \n Notice that the gradient of the lower ellipse is stretched by a factor of two. Also notice that a call to the <xref:System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform%2A> method is used to justify the left edge of the gradient fill with the left edge of ellipse.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/visualbasic/e0c3e704-6b4f-48bc-83d2-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/cpp/e0c3e704-6b4f-48bc-83d2-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#5](~/add/codesnippet/csharp/e0c3e704-6b4f-48bc-83d2-_1.cs)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "X 軸方向に変換をスケーリングする量。"
    - id: sy
      type: System.Single
      description: "Y 軸方向に変換をスケーリングする量。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "A <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref>を追加または拡大縮小行列を付加するかどうかを指定します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  id: SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "中央の色と単一の色の両端に線形の減衰を線形グラデーションを作成します。"
  remarks: "このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。 `focus`パラメーター グラデーションの線に沿った距離に対する比率として場所を表します。 どちら側に直線的に開始色をグラデーションになります。"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape%2A>.
  syntax:
    content: public void SetBlendTriangularShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "0 ~ 1 (ポイント、グラデーションがで構成される終了色のみ) のグラデーションの中心を指定する値。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  id: SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "中央の色と単一の色の両端に線形の減衰を線形グラデーションを作成します。"
  remarks: "このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。 `focus`パラメーター グラデーションの線に沿った距離に対する比率として場所を表します。 どちら側に直線的に開始色をグラデーションになります。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> into a triangular shape with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the transformed brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/visualbasic/e6c3d0c9-aed2-4364-946f-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/cpp/e6c3d0c9-aed2-4364-946f-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#6](~/add/codesnippet/csharp/e6c3d0c9-aed2-4364-946f-_1.cs)]"
  syntax:
    content: public void SetBlendTriangularShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "0 ~ 1 (ポイント、グラデーションがで構成される終了色のみ) のグラデーションの中心を指定する値。"
    - id: scale
      type: System.Single
      description: "開始色からどのように高速の色減色を指定する 0 through1 から値`focus`(終了色)"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  id: SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "ベルの形の曲線に基づくグラデーションの減色を作成します。"
  remarks: "このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。 `focus`パラメーター グラデーションの線に沿った距離に対する比率として場所を表します。 どちら側にベル曲線図形 (正規分布) に基づいて開始色をグラデーションになります。"
  example:
  - For an example, see <xref:System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape%2A>`.`
  syntax:
    content: public void SetSigmaBellShape (float focus);
    parameters:
    - id: focus
      type: System.Single
      description: "0 ~ 1 (ここで色を開始および終了色ブレンド均等にポイント) のグラデーションの中心を指定する値。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  id: SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "ベルの形の曲線に基づくグラデーションの減色を作成します。"
  remarks: "このメソッドを指定します、 `focus`、のみの終了色、グラデーションがで構成されるポイントであります。 `focus`パラメーター グラデーションの線に沿った距離に対する比率として場所を表します。 どちら側にベル曲線図形 (正規分布) に基づいて開始色をグラデーションになります。"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw an ellipse to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Transforms the <xref:System.Drawing.Drawing2D.LinearGradientBrush> to have a bell shaped curve with its peak in the center.  \n  \n-   Draws a second ellipse to the screen using the bell-shaped brush.  \n  \n Notice that the gradient of the lower ellipse transitions from blue to red and then back to blue.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/visualbasic/06854fcf-f315-4b99-b3db-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/cpp/06854fcf-f315-4b99-b3db-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#7](~/add/codesnippet/csharp/06854fcf-f315-4b99-b3db-_1.cs)]"
  syntax:
    content: public void SetSigmaBellShape (float focus, float scale);
    parameters:
    - id: focus
      type: System.Single
      description: "0 ~ 1 (ポイント、グラデーションがで構成される終了色のみ) のグラデーションの中心を指定する値。"
    - id: scale
      type: System.Single
      description: "0 ~ 1 から色減衰をどのくらいの速度を指定する値、`focus`です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  id: Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得または設定のコピー <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>このローカル ジオメトリック変換を定義する<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>です。"
  remarks: "ジオメトリック変換は、変換、拡大縮小、回転、または塗りつぶしのグラデーションのずれを使用できます。 マトリックスが返されるプロパティの変換でブラシのジオメトリック変換のコピーであるためが不要になったときに、マトリックスを破棄する必要があります。"
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "コピー、 <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>がいっぱいになったこので描画されたにのみ適用されるジオメトリック変換を定義する<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "指定した寸法でローカル ジオメトリック変換を変換します。 このメソッドの前に平行移動、変換を行います。"
  remarks: ''
  example:
  - For an example, see TranslateTransform.
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "X の平行移動の値。"
    - id: dy
      type: System.Single
      description: "Y の平行移動の値。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "指定した順序で指定した寸法でローカル ジオメトリック変換を変換します。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object. The code performs the following actions:  \n  \n-   Creates a new <xref:System.Drawing.Drawing2D.LinearGradientBrush>.  \n  \n-   Uses this brush to draw a rectangle to the screen that has a linear, left-to-right transition of colors.  \n  \n-   Rotates the <xref:System.Drawing.Drawing2D.LinearGradientBrush> by 90 degrees and scales the gradient.  \n  \n-   Draws the rectangle, with the rotated and scaled gradient, to the screen.  \n  \n-   Translates the rectangle so that it has a linear gradient running from top to bottom.  \n  \n-   Draws the translated rectangle to the screen.  \n  \n Notice that there are three rectangles displayed the top one showing the left-to-right gradient, the middle one showing the rotated and scaled gradient, and the bottom one showing the final, translated gradient.  \n  \n [!code-vb[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/visualbasic/245473a1-ce62-4749-b877-_1.vb)]\n [!code-cpp[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/cpp/245473a1-ce62-4749-b877-_1.cpp)]\n [!code-cs[System.Drawing.Drawing2D.ClassicLinearGradientBrush#8](~/add/codesnippet/csharp/245473a1-ce62-4749-b877-_1.cs)]"
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "X の平行移動の値。"
    - id: dy
      type: System.Single
      description: "Y の平行移動の値。"
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "順序 (前または後)、平行移動を適用します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  id: WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  langs:
  - csharp
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref>をこのラップ モードを示す列挙体<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>です。"
  syntax:
    content: public System.Drawing.Drawing2D.WrapMode WrapMode { get; set; }
    return:
      type: System.Drawing.Drawing2D.WrapMode
      description: "A <xref href=&quot;System.Drawing.Drawing2D.WrapMode&quot;> </xref>を指定する方法がいっぱいになったこので描画された<xref href=&quot;System.Drawing.Drawing2D.LinearGradientBrush&quot;></xref>並べて表示します。"
  overload: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Point,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Point,Point,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Point,Point,Color,Color)
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(PointF,PointF,Color,Color)
  nameWithType: LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(PointF,PointF,Color,Color)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,LinearGradientMode)
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LinearGradientMode
  nameWithType: LinearGradientMode
  fullName: System.Drawing.Drawing2D.LinearGradientMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Drawing2D.LinearGradientMode)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,LinearGradientMode)
- uid: System.Drawing.RectangleF
  parent: System.Drawing
  isExternal: false
  name: RectangleF
  nameWithType: RectangleF
  fullName: System.Drawing.RectangleF
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(Rectangle,Color,Color,Single,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Single,System.Boolean)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  nameWithType: LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearGradientBrush(RectangleF,Color,Color,Single,Boolean)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.Blend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Blend
  nameWithType: Blend
  fullName: System.Drawing.Drawing2D.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone()
  nameWithType: LinearGradientBrush.Clone()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.ColorBlend
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: ColorBlend
  nameWithType: ColorBlend
  fullName: System.Drawing.Drawing2D.ColorBlend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors
- uid: System.Drawing.Color[]
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color[]
  spec.csharp:
  - uid: System.Drawing.Color
    name: Color
    nameWithType: Color
    fullName: Color[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform()
  nameWithType: LinearGradientBrush.ResetTransform()
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform()
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: LinearGradientBrush.RotateTransform(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: LinearGradientBrush.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape(Single,Single)
  nameWithType: LinearGradientBrush.SetBlendTriangularShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape(Single,Single)
  nameWithType: LinearGradientBrush.SetSigmaBellShape(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
  fullName: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode
- uid: System.Drawing.Drawing2D.WrapMode
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: WrapMode
  nameWithType: WrapMode
  fullName: System.Drawing.Drawing2D.WrapMode
- uid: System.Drawing.Drawing2D.LinearGradientBrush.#ctor*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearGradientBrush
  nameWithType: LinearGradientBrush.LinearGradientBrush
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Blend*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Blend
  nameWithType: LinearGradientBrush.Blend
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Clone*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Clone
  nameWithType: LinearGradientBrush.Clone
- uid: System.Drawing.Drawing2D.LinearGradientBrush.GammaCorrection*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: GammaCorrection
  nameWithType: LinearGradientBrush.GammaCorrection
- uid: System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: InterpolationColors
  nameWithType: LinearGradientBrush.InterpolationColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.LinearColors*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: LinearColors
  nameWithType: LinearGradientBrush.LinearColors
- uid: System.Drawing.Drawing2D.LinearGradientBrush.MultiplyTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: MultiplyTransform
  nameWithType: LinearGradientBrush.MultiplyTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Rectangle*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Rectangle
  nameWithType: LinearGradientBrush.Rectangle
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ResetTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ResetTransform
  nameWithType: LinearGradientBrush.ResetTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.RotateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: RotateTransform
  nameWithType: LinearGradientBrush.RotateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.ScaleTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: ScaleTransform
  nameWithType: LinearGradientBrush.ScaleTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetBlendTriangularShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetBlendTriangularShape
  nameWithType: LinearGradientBrush.SetBlendTriangularShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.SetSigmaBellShape*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: SetSigmaBellShape
  nameWithType: LinearGradientBrush.SetSigmaBellShape
- uid: System.Drawing.Drawing2D.LinearGradientBrush.Transform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: Transform
  nameWithType: LinearGradientBrush.Transform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.TranslateTransform*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: TranslateTransform
  nameWithType: LinearGradientBrush.TranslateTransform
- uid: System.Drawing.Drawing2D.LinearGradientBrush.WrapMode*
  parent: System.Drawing.Drawing2D.LinearGradientBrush
  isExternal: false
  name: WrapMode
  nameWithType: LinearGradientBrush.WrapMode
