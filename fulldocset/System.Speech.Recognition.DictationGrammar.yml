### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.DictationGrammar
  id: DictationGrammar
  children:
  - System.Speech.Recognition.DictationGrammar.#ctor
  - System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  - System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  langs:
  - csharp
  name: DictationGrammar
  nameWithType: DictationGrammar
  fullName: System.Speech.Recognition.DictationGrammar
  type: Class
  summary: "フリー テキストのディクテーション モードを使用する音声認識の文法を表します。"
  remarks: "このクラスは、話されたユーザーが入力テキストに処理できる定義済みの言語モデルを含むアプリケーションを提供します。 このクラスは、既定とカスタム DictationGrammar オブジェクトの両方をサポートします。 ディクテーション文法の選択については、次を参照してください、<xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29>コンス トラクター。</xref:System.Speech.Recognition.DictationGrammar.%23ctor%28System.String%29> 。       既定では、DictationGrammar 言語モデルは、無料のコンテキストです。 特定の語句の使用または word の順序を特定し、オーディオ入力の解釈を行いません。 ディクテーション文法にコンテキストを追加するには、使用、<xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>メソッド</xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A>。      > [!NOTE] > DictationGrammar オブジェクトでサポートされない、<xref:System.Speech.Recognition.Grammar.Priority%2A>プロパティ</xref:System.Speech.Recognition.Grammar.Priority%2A>。 DictationGrammar スロー、<xref:System.NotSupportedException>場合<xref:System.Speech.Recognition.Grammar.Priority%2A>が設定されています</xref:System.Speech.Recognition.Grammar.Priority%2A></xref:System.NotSupportedException>。"
  example:
  - "The following example creates three dictation grammars, adds them to a new <xref:System.Speech.Recognition.SpeechRecognitionEngine> object, and returns the new object. The first grammar is the default dictation grammar. The second grammar is the spelling dictation grammar. The third grammar is the default dictation grammar that includes a context phrase. The <xref:System.Speech.Recognition.DictationGrammar.SetDictationContext%2A> method is used to associate the context phrase with the dictation grammar after it is loaded to the <xref:System.Speech.Recognition.SpeechRecognitionEngine> object.  \n  \n```c#  \n  \nprivate SpeechRecognitionEngine LoadDictationGrammars()  \n{  \n  \n  // Create a default dictation grammar.  \n  DictationGrammar defaultDictationGrammar = new DictationGrammar();  \n  defaultDictationGrammar.Name = \"default dictation\";  \n  defaultDictationGrammar.Enabled = true;  \n  \n  // Create the spelling dictation grammar.  \n  DictationGrammar spellingDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation#spelling\");  \n  spellingDictationGrammar.Name = \"spelling dictation\";  \n  spellingDictationGrammar.Enabled = true;  \n  \n  // Create the question dictation grammar.  \n  DictationGrammar customDictationGrammar =  \n    new DictationGrammar(\"grammar:dictation\");  \n  customDictationGrammar.Name = \"question dictation\";  \n  customDictationGrammar.Enabled = true;  \n  \n  // Create a SpeechRecognitionEngine object and add the grammars to it.  \n  SpeechRecognitionEngine recoEngine = new SpeechRecognitionEngine();  \n  recoEngine.LoadGrammar(defaultDictationGrammar);  \n  recoEngine.LoadGrammar(spellingDictationGrammar);  \n  recoEngine.LoadGrammar(customDictationGrammar);  \n  \n  // Add a context to customDictationGrammar.  \n  customDictationGrammar.SetDictationContext(\"How do you\", null);  \n  \n  return recoEngine;  \n}  \n  \n```"
  syntax:
    content: 'public class DictationGrammar : System.Speech.Recognition.Grammar'
  inheritance:
  - System.Object
  - System.Speech.Recognition.Grammar
  implements: []
  inheritedMembers:
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref> Windows デスクトップ音声テクノロジによって提供される既定のディクテーション文法のクラスです。"
  remarks: "既定のディクテーション文法では、標準ディクテーション プラクティス、句読点を含むをエミュレートします。 単語のスペル チェックはサポートされません。"
  syntax:
    content: public DictationGrammar ();
    parameters: []
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.DictationGrammar&quot;> </xref>特定ディクテーション文法を持つクラス。"
  remarks: "Speech プラットフォームでは、特殊な URI 構文を使用して、カスタム ディクテーション文法を定義します。 値`grammar:dictation`既定ディクテーション文法を示します。 値`grammar:dictation#spelling`文章ディクテーション モードを示します。"
  syntax:
    content: public DictationGrammar (string topic);
    parameters:
    - id: topic
      type: System.String
      description: "XML に準拠したユニバーサル リソース識別子 (URI) ディクテーション文法をいずれかを指定する`grammar:dictation`または`grammar:dictation#spelling`です。"
  overload: System.Speech.Recognition.DictationGrammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  id: SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  langs:
  - csharp
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "によって読み込まれているディクテーション文法にコンテキストを追加、 <xref href=&quot;System.Speech.Recognition.SpeechRecognizer&quot;> </xref>または<xref href=&quot;System.Speech.Recognition.SpeechRecognitionEngine&quot;></xref>オブジェクト。"
  remarks: "既定では、特定の語句の使用または word の順序を識別およびオーディオ入力を解釈することと、ディクテーション文法はありません。 認識エンジンを使用して、ディクテーション文法にコンテキストを追加するときに、`precedingText`と`subsequentText`ディクテーションと音声を解釈するタイミングを識別します。      > [!NOTE] > によってディクテーション文法を読み込む必要がある、<xref:System.Speech.Recognition.SpeechRecognizer>または<xref:System.Speech.Recognition.SpeechRecognitionEngine>SetDictationContext を使用するには、コンテキストを追加する前にオブジェクトします</xref:System.Speech.Recognition.SpeechRecognitionEngine></xref:System.Speech.Recognition.SpeechRecognizer>。       次の表では、認識エンジンが&2; つのパラメーターを使用して、ディクテーション文法を使用するかを判断する方法について説明します。      |`precedingText`|`subsequentText`|説明 |  |---------------------|----------------------|-----------------|  |not `null`|not `null`|認識エンジンは、用語を使用して候補語句を角かっこをします |。  |`null`|not `null`|認識エンジンを使用して、`subsequentText`ディクテーション モードを終了する |。  |not `null`|`null`|認識エンジンを使用して、`precedingText`をディクテーション モードを開始します |。  |`null`|`null`|ディクテーション文法を使用する場合、認識エンジンがコンテキストを使用しません |。"
  syntax:
    content: public void SetDictationContext (string precedingText, string subsequentText);
    parameters:
    - id: precedingText
      type: System.String
      description: "ディクテーション コンテキストの開始を示すテキスト。"
    - id: subsequentText
      type: System.String
      description: "ディクテーション コンテキストの終了を示すテキストです。"
  overload: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Speech.Recognition.Grammar
  isExternal: false
  name: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.DictationGrammar.#ctor
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar()
  nameWithType: DictationGrammar.DictationGrammar()
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar()
- uid: System.Speech.Recognition.DictationGrammar.#ctor(System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar(String)
  nameWithType: DictationGrammar.DictationGrammar(String)
  fullName: System.Speech.Recognition.DictationGrammar.DictationGrammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext(String,String)
  nameWithType: DictationGrammar.SetDictationContext(String,String)
  fullName: System.Speech.Recognition.DictationGrammar.SetDictationContext(String,String)
- uid: System.Speech.Recognition.DictationGrammar.#ctor*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: DictationGrammar
  nameWithType: DictationGrammar.DictationGrammar
- uid: System.Speech.Recognition.DictationGrammar.SetDictationContext*
  parent: System.Speech.Recognition.DictationGrammar
  isExternal: false
  name: SetDictationContext
  nameWithType: DictationGrammar.SetDictationContext
