### YamlMime:ManagedReference
items:
- uid: System.IO.FileAccess
  id: FileAccess
  children:
  - System.IO.FileAccess.Read
  - System.IO.FileAccess.ReadWrite
  - System.IO.FileAccess.Write
  langs:
  - csharp
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
  type: Enum
  summary: "読み取り、書き込み、またはファイルへの読み取り/書き込みアクセスの定数を定義します。"
  remarks: "ファイルを作成し、テキスト ファイルへの書き込みの例は、次を参照してください。[する方法: テキスト ファイルを書き込む](~/add/includes/ajax-current-ext-md.md)です。 ファイルからテキストの読み取りの例は、次を参照してください。[する方法: テキスト ファイルからの読み取り](~/add/includes/ajax-current-ext-md.md)です。 読み取りと書き込み、バイナリ ファイルの例は、次を参照してください。[する方法: 新しく作成されたデータ ファイルに読み書き](~/add/includes/ajax-current-ext-md.md)です。       A`FileAccess`多くのコンス トラクターのパラメーターが指定されて<xref:System.IO.File>、 <xref:System.IO.FileInfo>、<xref:System.IO.FileStream>をファイルには、ユーザーのアクセスの種類を制御する重要なその他のコンス トラクターがあるとします</xref:System.IO.FileStream></xref:System.IO.FileInfo></xref:System.IO.File>。"
  example:
  - "The following `FileStream` constructor grants read-only access to an existing file (`FileAccess.Read`).  \n  \n [!code-vb[Classic FileAccess Example#1](~/add/codesnippet/visualbasic/t-system.io.fileaccess_1.vb)]\n [!code-cpp[Classic FileAccess Example#1](~/add/codesnippet/cpp/t-system.io.fileaccess_1.cpp)]\n [!code-cs[Classic FileAccess Example#1](~/add/codesnippet/csharp/t-system.io.fileaccess_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.IO.FileAccess.Read
  id: Read
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルに対する読み取りアクセス。 ファイルからデータを読み取ることができます。 組み合わせる<xref uid=&quot;langword_csharp_Write&quot; name=&quot;Write&quot; href=&quot;&quot;></xref>に対する読み取り/書き込みアクセス。"
  syntax:
    content: Read
    return:
      type: System.IO.FileAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.ReadWrite
  id: ReadWrite
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "読み取りおよびファイルへの書き込みアクセス。 データに書き込まれファイルから読み取ることができます。"
  syntax:
    content: ReadWrite
    return:
      type: System.IO.FileAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.IO.FileAccess.Write
  id: Write
  parent: System.IO.FileAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ファイルへの書き込みアクセス。 データは、ファイルに書き込むことができます。 組み合わせる<xref uid=&quot;langword_csharp_Read&quot; name=&quot;Read&quot; href=&quot;&quot;></xref>に対する読み取り/書き込みアクセス。"
  syntax:
    content: Write
    return:
      type: System.IO.FileAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.IO.FileAccess.Read
  parent: System.IO.FileAccess
  isExternal: false
  name: Read
  nameWithType: FileAccess.Read
  fullName: System.IO.FileAccess.Read
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.FileAccess.ReadWrite
  parent: System.IO.FileAccess
  isExternal: false
  name: ReadWrite
  nameWithType: FileAccess.ReadWrite
  fullName: System.IO.FileAccess.ReadWrite
- uid: System.IO.FileAccess.Write
  parent: System.IO.FileAccess
  isExternal: false
  name: Write
  nameWithType: FileAccess.Write
  fullName: System.IO.FileAccess.Write
