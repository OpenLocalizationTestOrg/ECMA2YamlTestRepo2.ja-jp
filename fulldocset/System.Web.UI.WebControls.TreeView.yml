### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeView
  id: TreeView
  children:
  - System.Web.UI.WebControls.TreeView.#ctor
  - System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  - System.Web.UI.WebControls.TreeView.CheckedNodes
  - System.Web.UI.WebControls.TreeView.CollapseAll
  - System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  - System.Web.UI.WebControls.TreeView.CollapseImageUrl
  - System.Web.UI.WebControls.TreeView.CreateControlCollection
  - System.Web.UI.WebControls.TreeView.CreateNode
  - System.Web.UI.WebControls.TreeView.DataBind
  - System.Web.UI.WebControls.TreeView.DataBindings
  - System.Web.UI.WebControls.TreeView.EnableClientScript
  - System.Web.UI.WebControls.TreeView.ExpandAll
  - System.Web.UI.WebControls.TreeView.ExpandDepth
  - System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  - System.Web.UI.WebControls.TreeView.ExpandImageUrl
  - System.Web.UI.WebControls.TreeView.FindNode(System.String)
  - System.Web.UI.WebControls.TreeView.GetCallbackResult
  - System.Web.UI.WebControls.TreeView.HoverNodeStyle
  - System.Web.UI.WebControls.TreeView.ImageSet
  - System.Web.UI.WebControls.TreeView.LeafNodeStyle
  - System.Web.UI.WebControls.TreeView.LevelStyles
  - System.Web.UI.WebControls.TreeView.LineImagesFolder
  - System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  - System.Web.UI.WebControls.TreeView.NodeIndent
  - System.Web.UI.WebControls.TreeView.Nodes
  - System.Web.UI.WebControls.TreeView.NodeStyle
  - System.Web.UI.WebControls.TreeView.NodeWrap
  - System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  - System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  - System.Web.UI.WebControls.TreeView.ParentNodeStyle
  - System.Web.UI.WebControls.TreeView.PathSeparator
  - System.Web.UI.WebControls.TreeView.PerformDataBinding
  - System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  - System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeView.RootNodeStyle
  - System.Web.UI.WebControls.TreeView.SaveViewState
  - System.Web.UI.WebControls.TreeView.SelectedNode
  - System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  - System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  - System.Web.UI.WebControls.TreeView.SelectedValue
  - System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  - System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  - System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  - System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  - System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  - System.Web.UI.WebControls.TreeView.ShowLines
  - System.Web.UI.WebControls.TreeView.SkipLinkText
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  - System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.TreeView.TagKey
  - System.Web.UI.WebControls.TreeView.Target
  - System.Web.UI.WebControls.TreeView.TrackViewState
  - System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  - System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  - System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  - System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  - System.Web.UI.WebControls.TreeView.TreeNodePopulate
  - System.Web.UI.WebControls.TreeView.Visible
  langs:
  - csharp
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
  type: Class
  summary: "ツリー構造では、目次などの階層データを表示します。"
  remarks: "このトピックの内容:-[の概要](#introduction)      -   [ノード](#nodes)      -   [静的データ](#static_data)      -   [データへのバインド](#binding_to_data)      -   [動的ノード母集団](#dynamic_node_population)      -   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)      -   [イベント](#events)      -   [スクロール](#scrolling)      -   [アクセシビリティ](#accessibility)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## の概要、TreeView コントロールはツリー構造でのコンテンツまたはファイルのディレクトリのテーブルなどの階層データの表示に使用し、次のサポート機能:-データ バインディングでは、XML、表形式、またはリレーショナル データにバインドされるコントロールのノードです。            -サイトのナビゲーションとの統合により、<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール</xref:System.Web.UI.WebControls.SiteMapDataSource>。      プレーン テキストまたはハイパーリンクとして表示可能なノードのテキストです。      プログラムによるモデルへのアクセス、TreeView オブジェクト ツリーを作成、ノードを作成、プロパティを動的に設定します。      クライアント側ノードの読み込み (サポートされているブラウザー)。      各ノードの横にあるチェック ボックスを表示する権限です。      -ユーザー定義のテーマを使用したカスタマイズ可能な外観は、イメージ、およびスタイルします。          > [!NOTE] >、TreeView コントロール内で使用するものでは、<xref:System.Web.UI.UpdatePanel>制御される場合にのみ<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>に設定されている`true`</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A></xref:System.Web.UI.UpdatePanel>。 <xref:System.Web.UI.UpdatePanel>コントロールはポストバック時にページ全体が更新ではなく、ページの選択した領域の更新に使用されます。</xref:System.Web.UI.UpdatePanel> 詳細については、次を参照してください。 [UpdatePanel コントロールの概要](~/add/includes/ajax-current-ext-md.md)と[部分ページ レンダリング概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;nodes&quot;></a>## TreeView コントロールで構成されたノードのノードです。 ツリー内の各エントリし、呼ばれ、ノードによって表される、<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 ノード型が次のように定義されている:-と呼ばれるその他のノードを含むノード、*親ノード*です。      -別のノードが含まれているノードと呼ばれる、*子ノード*です。      子を持たないノードと呼ばれる、*リーフ ノード*です。      の他のノードに含まれていない、他のすべてのノードの先祖ノードが、*ルート ノード*です。       ノードが親と子要素が、ルートの親の両方を指定でき、リーフ ノードは相互に排他的です。 ノードのいくつかの外観および動作プロパティは、ノードがルート、子、またはリーフ ノードかどうかによって決定されます。       一般的なツリー構造には、1 つだけのルート ノードが、TreeView コントロールでは、ツリー構造に複数のルート ノードを追加することができます。 これは、製品カテゴリの一覧と同様に、単一のルート ノードを表示することがなく項目の一覧を表示する場合に便利です。       各ノードには、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティおよび<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。 値、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティは、ツリー ビューの表示中に、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>プロパティは、ノードに関連付けられているポストバック イベントに渡されるデータなど、ノードに関するその他のデータの格納に使用します</xref:System.Web.UI.WebControls.TreeNode.Value%2A></xref:System.Web.UI.WebControls.TreeNode.Text%2A>。       ノードが&2; つのモードのいずれかになります。 選択モードとナビゲーション モード。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列以外の値をプロパティ (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> ノードを選択モードにする、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列をプロパティ (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > 一部のインターネット ブラウザー、TreeView コントロールのパフォーマンスに影響を与える制限があります。 たとえば、Microsoft Internet Explorer 6.0 には、ポストバック 2067 文字の URL の文字数制限があります。 ノードの URL の文字数が数よりも大きい場合は、そのノードの展開は失敗し、例外はスローされません。      <a name=&quot;static_data&quot;></a>## 静的データ TreeView コントロールの最も単純なデータ モデルは、静的データです。 宣言の構文を使用して静的なデータを表示するには、まずを開いたり閉じたり`<Nodes>`開始タグと終了タグの TreeView コントロールの間のタグ。 次に、ツリー構造を入れ子により作成`<asp:TreeNode>`開始タグと終了の間に要素`<Nodes>`タグ。 各`<asp:TreeNode>`要素は、ツリー内のノードを表すされにマップする<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 属性を設定して各ノードのプロパティを設定することができます、`<asp:TreeNode>`要素。 子ノードを作成するには、追加入れ子`<asp:TreeNode>`開始タグと終了の間に要素`<asp:TreeNode>`親ノードのタグ。      <a name=&quot;binding_to_data&quot;></a>## データ、TreeView コントロールにバインドは、データにバインドすることもできます。 2 つのメソッドのいずれかを使用して、適切なデータ ソースの種類に TreeView コントロールをバインドすることができます:-ツリー ビュー コントロールを実装する任意のデータ ソース コントロールを使用できます、<xref:System.Web.UI.IHierarchicalDataSource>インターフェイスなど、<xref:System.Web.UI.WebControls.XmlDataSource>コントロールまたは<xref:System.Web.UI.WebControls.SiteMapDataSource>コントロール</xref:System.Web.UI.WebControls.SiteMapDataSource></xref:System.Web.UI.WebControls.XmlDataSource></xref:System.Web.UI.IHierarchicalDataSource>。 データ ソース コントロールにバインドするには、設定、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>TreeView コントロールのプロパティ、 <xref:System.Web.UI.Control.ID%2A>、データ ソース コントロールの値</xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>。 TreeView コントロールは、指定されたデータ ソース コントロールに自動的にバインドします。 これは、データにバインドする推奨される方法です。      TreeView コントロールをバインドすることも、<xref:System.Xml.XmlDocument>オブジェクトまたは<xref:System.Data.DataSet>リレーションを持つオブジェクト</xref:System.Data.DataSet></xref:System.Xml.XmlDocument>。 これらのデータ ソースのいずれかにバインドするには、設定、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>ツリー ビューのプロパティがデータ ソースを制御し、呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッド</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A></xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>。       によって返される値を表示、ノードの各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、`ToString`既定では、データ項目のメソッドです。 XML 要素の場合、ノードには、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが、要素名が表示されます。 ノードを特定のデータ項目のプロパティにバインドするにはツリー ノードのバインディングを使用して指定することによって、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを含む`TreeNodeBinding`データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。 ノードに表示するには、バインドとデータ項目のプロパティの条件を指定できます。 ツリー ノードのバインディングの詳細については、 <xref:System.Web.UI.WebControls.TreeNodeBinding>。</xref:System.Web.UI.WebControls.TreeNodeBinding>を参照してください。      > [!IMPORTANT] > 悪意のあるユーザーはコールバック要求を作成したり、ページの開発者が表示されていないツリー ビュー コントロールのノードのデータを取得します。 したがって、データ ソースによってデータのセキュリティを実装する必要があります。 使用しないで、<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>データを非表示にするプロパティ</xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>。      <a name=&quot;dynamic_node_population&quot;></a>## 動的ノード Population 場合があります、実用的ではないかを表示するデータは、実行時に取得する情報によって異なります。 データ ソースが返すデータが多すぎるために、静的にツリー構造を定義します。 TreeView コントロールでは、このため、動的なノードをサポートしています。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`、そのノードにノードを展開するときに実行時に設定される</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 ノードを動的に設定するには、ノードを設定するロジックを含むイベント処理メソッドを定義する必要があります、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベント</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>。       コールバック スクリプトをサポートするブラウザーでは、クライアント側のも利用できます。 (これを含む Internet Explorer 5.5 とそれ以降、およびその他のブラウザー)クライアント側、TreeView コントロールをユーザーが、サーバーへのラウンド トリップを必要とせずにノードを展開ときに、クライアント スクリプトを使用してノードを設定できます。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。      <a name=&quot;customizing_the_user_interface&quot;></a>## TreeView コントロールの外観をカスタマイズする方法はたくさんをカスタマイズする、ユーザー インターフェイスがあります。 最初に、それぞれのノード型 (フォント サイズや色) とは異なるスタイルを指定できます。       コントロールの外観をカスタマイズするカスケード スタイル シート (CSS) を使用する場合は、インライン スタイルまたは個別の CSS ファイルの両方ではなくはどちらかを使用します。 インライン スタイルと個別の CSS ファイルの両方を使用すると、予期しない結果を可能性があります。 コントロールのスタイル シートを使用する方法については、次を参照してください。 [Web サーバー コントロールと CSS スタイル](~/add/includes/ajax-current-ext-md.md)です。       次の表では、使用可能なノードのスタイルを一覧表示します。      |ノードのスタイル プロパティ |説明 |  |-------------------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|マウス ポインターを置いたときにノードのスタイルの設定です |。  |<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|リーフ ノードのスタイルの設定です |。  |<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|ノードの既定のスタイル設定します |。  |<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|親ノードのスタイルの設定です |。  |<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|ルート ノードのスタイルの設定です |。  |<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|選択したノードのスタイルの設定です |。      使用して、ツリー内で特定の深さを取得しますノードのスタイルを制御することも、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションです。</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 。 コレクション内の最初のスタイルは、ツリー内の最初のレベルのノードのスタイルに対応しています。 コレクション内の&2; 番目のスタイルは、ツリーで&2; 番目のレベルのノードのスタイルに対応しています。 これは最もよく使用される内容: スタイルのナビゲーション メニューのテーブルを生成する特定の深さのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要があります。      > [!NOTE] > 特定深さレベルを使用して、スタイルが定義されているかどうか、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクション、スタイルが、ルート、親、またはその深さのノードのリーフ ノードのスタイルの設定をオーバーライドする</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>。       コントロールの外観を変更する別の方法では、TreeView コントロールに表示されるイメージをカスタマイズします。 次の表に示すようにプロパティを設定して、独自のカスタム コントロールのさまざまな部分のイメージのセットを指定できます。      |プロパティをイメージ |説明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノードのインジケーターに表示されるイメージの URL</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 。 このイメージがマイナス記号 (-) では通常 |。  |<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノードのインジケーターに表示されるイメージの URL</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> 。 このイメージは、通常、プラス記号 (+) です |。  |<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|子ノードに親ノードを接続する線のイメージを含むフォルダーへの URL を使用します</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>。 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティ設定することも必要があります`true`影響を与えるには、このプロパティにします |。  |<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開を可能なノードのインジケーターに表示されるイメージの URL です |。     > [!NOTE] > すべてイメージのプロパティをカスタマイズする必要はありません</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>。 イメージのプロパティが明示的に設定されていない場合は、組み込みの既定のイメージが使用されます。       TreeView コントロールでは、ノードの横にあるチェック ボックスを表示することもできます。 ときに、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティが以外の値に設定`TreeNodeTypes.None`、指定したノードの種類の横にあるチェック ボックスが表示されます</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティは、ビットごとの組み合わせに設定することができます、<xref:System.Web.UI.WebControls.TreeNodeTypes>列挙メンバー値</xref:System.Web.UI.WebControls.TreeNodeTypes></xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>。       ページがサーバーにポストされるたびに、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションは、選択したノードが設定されます</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>。 チェック ボックスが表示されるときに行うこともできます、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントをサーバーにポスト間で、チェック ボックスをオンの状態が変更されるたびに、カスタム ルーチンを実行します</xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>。      <a name=&quot;events&quot;></a>## イベント TreeView コントロールでは、ユーザーがプログラムをいくつかのイベントを提供します。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表には、TreeView コントロールでサポートされているイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|TreeView コントロールのチェック ボックス、サーバーへのポスト間の状態を変更するときに発生します |。  |<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|TreeView コントロールでノードが選択されているときに発生します |。  |<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|TreeView コントロールでノードを展開されるときに発生します |。  |<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|TreeView コントロールでノードが折りたたまれているときに発生します |。  |<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|その<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティ設定されたときにノードを発生`true`が TreeView コントロールで展開されている |。  |<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|データ項目が TreeView コントロール内のノードにバインドされているときに発生します |。     <a name=&quot;scrolling&quot;> </a> ## の TreeView のスクロール コントロールに組み込まれているスクロールがありません</xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound></xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A></xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>。 スクロール機能を追加するに TreeView コントロールを配置、<xref:System.Web.UI.WebControls.Panel>を制御しにスクロール バーを追加、<xref:System.Web.UI.WebControls.Panel>コントロール</xref:System.Web.UI.WebControls.Panel></xref:System.Web.UI.WebControls.Panel>。 詳細については、次を参照してください。[パネル Web サーバー コントロールの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;accessibility&quot;></a>## アクセシビリティこのコントロールの既定で表示されるマークアップは、ユーザー補助の標準に準拠していません可能性があります。 このコントロールのユーザー補助のサポートに関する詳細については、「 [ASP.NET コントロールやアクセシビリティ](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:TreeView       AccessKey=&quot;string&quot;       AutoGenerateDataBindings=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CollapseImageToolTip=&quot;string&quot;       CollapseImageUrl=&quot;uri&quot;       CssClass=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EnableClientScript=&quot;True|False&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExpandDepth=&quot;string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|           14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30&quot;       ExpandImageToolTip=&quot;string&quot;       ExpandImageUrl=&quot;uri&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|          Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       ImageSet=&quot;Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|           BulletedList|BulletedList2|BulletedList3|BulletedList4|           Arrows|News|Contacts|Inbox|Events|Faq&quot;       LineImagesFolder=&quot;string&quot;       MaxDataBindDepth=&quot;integer&quot;       NodeIndent=&quot;integer&quot;       NodeWrap=&quot;True|False&quot;       NoExpandImageUrl=&quot;uri&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedNodeChanged=&quot;SelectedNodeChanged event handler&quot;       OnTreeNodeCheckChanged=&quot;TreeNodeCheckChanged event handler&quot;       OnTreeNodeCollapsed=&quot;TreeNodeCollapsed event handler&quot;       OnTreeNodeDataBound=&quot;TreeNodeDataBound event handler&quot;       OnTreeNodeExpanded=&quot;TreeNodeExpanded event handler&quot;       OnTreeNodePopulate=&quot;TreeNodePopulate event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PathSeparator=&quot;string&quot;       PopulateNodesFromClient=&quot;True|False&quot;       runat=&quot;server&quot;       ShowCheckBoxes=&quot;None|Root|Parent|Leaf|All&quot;       ShowExpandCollapse=&quot;True|False&quot;       ShowLines=&quot;True|False&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Target=&quot;string&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <DataBindings>                   <asp:TreeNodeBinding                       DataMember=&quot;string&quot;                       Depth=&quot;integer&quot;                       FormatString=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageToolTipField=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       ImageUrlField=&quot;string&quot;                       NavigateUrl=&quot;uri&quot;                       NavigateUrlField=&quot;string&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       TargetField=&quot;string&quot;                       Text=&quot;string&quot;                       TextField=&quot;string&quot;                       ToolTip=&quot;string&quot;                       ToolTipField=&quot;string&quot;                       Value=&quot;string&quot;                       ValueField=&quot;string&quot;                   />           </DataBindings>           <HoverNodeStyle />           <LeafNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <LevelStyles>                   <asp:TreeNodeStyle                       BackColor=&quot;color name|#dddddd&quot;                       BorderColor=&quot;color name|#dddddd&quot;                       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|                           Double|Groove|Ridge|Inset|Outset&quot;                       BorderWidth=&quot;size&quot;                       ChildNodesPadding=&quot;size&quot;                       CssClass=&quot;string&quot;                       Font-Bold=&quot;True|False&quot;                       Font-Italic=&quot;True|False&quot;                       Font-Names=&quot;string&quot;                       Font-Overline=&quot;True|False&quot;                       Font-Size=&quot;string|Smaller|Larger|XX-Small|                           X-Small|Small|Medium|Large|X-Large|XX-Large&quot;                       Font-Strikeout=&quot;True|False&quot;                       Font-Underline=&quot;True|False&quot;                       ForeColor=&quot;color name|#dddddd&quot;                       Height=&quot;size&quot;                       HorizontalPadding=&quot;size&quot;                       ImageUrl=&quot;uri&quot;                       NodeSpacing=&quot;size&quot;                       OnDisposed=&quot;Disposed event handler&quot;                       VerticalPadding=&quot;size&quot;                       Width=&quot;size&quot;                   />           </LevelStyles>           <Nodes>                   <asp:TreeNode                       Checked=&quot;True|False&quot;                       Expanded=&quot;string&quot;                       ImageToolTip=&quot;string&quot;                       ImageUrl=&quot;uri&quot;                       NavigateUrl=&quot;uri&quot;                       PopulateOnDemand=&quot;True|False&quot;                       SelectAction=&quot;Select|Expand|SelectExpand|None&quot;                       Selected=&quot;True|False&quot;                       ShowCheckBox=&quot;string&quot;                       Target=&quot;string&quot;                       Text=&quot;string&quot;                       ToolTip=&quot;string&quot;                       Value=&quot;string&quot;   >                   </asp:TreeNode>           </Nodes>           <NodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <ParentNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <RootNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />           <SelectedNodeStyle               BackColor=&quot;color name|#dddddd&quot;               BorderColor=&quot;color name|#dddddd&quot;               BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|                   Groove|Ridge|Inset|Outset&quot;               BorderWidth=&quot;size&quot;               ChildNodesPadding=&quot;size&quot;               CssClass=&quot;string&quot;               Font-Bold=&quot;True|False&quot;               Font-Italic=&quot;True|False&quot;               Font-Names=&quot;string&quot;               Font-Overline=&quot;True|False&quot;               Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|                   Medium|Large|X-Large|XX-Large&quot;               Font-Strikeout=&quot;True|False&quot;               Font-Underline=&quot;True|False&quot;               ForeColor=&quot;color name|#dddddd&quot;               Height=&quot;size&quot;               HorizontalPadding=&quot;size&quot;               ImageUrl=&quot;uri&quot;               NodeSpacing=&quot;size&quot;               OnDisposed=&quot;Disposed event handler&quot;               VerticalPadding=&quot;size&quot;               Width=&quot;size&quot;           />   </asp:TreeView>   ```"
  example:
  - "This section contains seven code examples:  \n  \n-   The first code example demonstrates how to set up the frames for the second code example.  \n  \n-   The second code example demonstrates how to use declarative syntax to display static data in the TreeView control.  \n  \n-   The third code example demonstrates how to bind the TreeView control to an XML data source.  \n  \n-   The fourth code example provides sample XML data for the third code example.  \n  \n-   The fifth code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control.  \n  \n-   The sixth code example provides sample site map data for the fifth code example.  \n  \n-   The seventh code example demonstrates how to populate the nodes in the TreeView control from the client.  \n  \n The following code example demonstrates how to set up the frames for the following code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to display static data in the TreeView control. This example is used within the frame set of the preceding example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_2.aspx)]  \n  \n The following code example demonstrates how to bind the TreeView control to an XML data source. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_3.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_3.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```  \n  \n The following code example demonstrates how to use the TreeView control for site navigation by binding it to a <xref:System.Web.UI.WebControls.SiteMapDataSource> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_4.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_4.aspx)]  \n  \n The following code example provides sample site map data for the preceding code example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates how to populate the nodes in the TreeView control from the client. When client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_350_5.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_350_5.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("SelectedNodeChanged")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.SupportsEventValidation]

      public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.HierarchicalDataBoundControl
  implements:
  - System.Web.UI.ICallbackEventHandler
  - System.Web.UI.IPostBackDataHandler
  - System.Web.UI.IPostBackEventHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.DataSourceID
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetData(System.String)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.GetDataSource
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnDataSourceChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.PerformSelect
  - System.Web.UI.WebControls.HierarchicalDataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>クラスです。"
  remarks: "TreeView コンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.TreeView>クラス</xref:System.Web.UI.WebControls.TreeView>の新しいインスタンスを初期化 追加する、<xref:System.Web.UI.WebControls.TreeView>ページに動的にコントロールを新規作成<xref:System.Web.UI.WebControls.TreeView>オブジェクト、そのプロパティを設定し、追加するに、<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>コンテナーのコレクションを制御するように、<xref:System.Web.UI.WebControls.PlaceHolder>コントロール</xref:System.Web.UI.WebControls.PlaceHolder></xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView>。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeView constructor to add a <xref:System.Web.UI.WebControls.TreeView> control to a page dynamically. For this example to work correctly, you must copy the sample XML data provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_71_1.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_71_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n  <Chapter Heading=\"Chapter 1\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n    <Section Heading=\"Section 2\">  \n    </Section>  \n  </Chapter>  \n  <Chapter Heading=\"Chapter 2\">  \n    <Section Heading=\"Section 1\">  \n    </Section>  \n  </Chapter>  \n</Book>  \n```"
  syntax:
    content: public TreeView ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "HTML 属性およびスタイルをレンダリングする必要がある追加を指定した<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>コントロール。"
  remarks: "AddAttributesToRender メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  id: AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールは、ツリー ノードのバインディングを自動的に生成されます。"
  remarks: "ツリー ノードのバインディングは、データ項目とそのバインド先のノード間のリレーションシップを定義します。 各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、<xref:System.Web.UI.WebControls.TreeView>コントロールをバインドするプロパティをデータ項目を知る必要がある<xref:System.Web.UI.WebControls.TreeNode>プロパティ</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeView>。 AutoGenerateDataBindings プロパティ設定されている場合`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、設定ツリー ノードのバインディングを既定値を自動的に生成、<xref:System.Web.UI.WebControls.TreeNode.Text%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>によって返される値へのバインドに関連付けられているオブジェクト、`ToString`データ項目のメソッド</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Text%2A></xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] > に自動的に生成されたツリー ノードのバインディングが追加されていない、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。       XML 要素によって返される値の場合、`ToString`メソッドは、要素名を XML ファイルの基になる構造を示していますが、それ以外が非常に便利です。 便利なツリーを作成するには、設定することで、独自のツリー ノードのバインディングを定義する必要があります、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。      > [!NOTE] > を定義する場合、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>、コレクション、<xref:System.Web.UI.WebControls.TreeView>コントロールが自動的に生成されたツリー ノードのバインディングではなくそれらの値を使用します</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. The second code example provides sample site map data for the first code example.  \n  \n The following code example demonstrates how to disable automatic tree node binding generation by setting the AutoGenerateDataBindings property to `false`. A <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection is then defined to establish the relationship between the data items in a <xref:System.Web.UI.WebControls.SiteMapDataSource> control and the nodes of the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample site map data, provided after this code example, to a file named Web.sitemap.  \n  \n [!code-vb[TreeViewAutoGenerateBindings#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_169_1.aspx)]\n [!code-cs[TreeViewAutoGenerateBindings#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_169_1.aspx)]  \n  \n The following code example provides sample site map data for the preceding example.  \n  \n```  \n<siteMap>  \n    <siteMapNode title=\"Home\" description=\"Home\" url=\"default.aspx\">  \n        <siteMapNode title=\"Products\" description=\"Products\" url=\"Products.aspx\">  \n            <siteMapNode title=\"Computers\" url=\"Computers.aspx\"/>  \n            <siteMapNode title=\"Accessories\" url=\"Accessories.aspx\"/>       \n        </siteMapNode>  \n    </siteMapNode>  \n</siteMap>  \n```"
  syntax:
    content: public bool AutoGenerateDataBindings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref><xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール ツリー ノードのバインディングを自動的に生成する以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  id: CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>でノードを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>選択チェック ボックスを表示するコントロール。"
  remarks: "チェック ボックスを表示するときに、<xref:System.Web.UI.WebControls.TreeView>コントロール (設定して、<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティ以外の値を`TreeNodeType.None`)、CheckedNodes プロパティを使用して、どのノードが選択されているチェック ボックスを表示を決定します</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A></xref:System.Web.UI.WebControls.TreeView>。 このコレクションは、通常をツリーで選択されているチェック ボックスを持つすべてのノードを反復処理に使用されます。       <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントが発生したときのチェック ボックス、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。      > [!NOTE] > ツリー構造の深さ優先検査を使用して、CheckedNodes コレクションが設定されます: 次の親ノードが格納されます前に、各親ノードがその子ノードまで処理ができます。"
  example:
  - "The following code example demonstrates how to use the CheckedNodes property to determine which nodes have a selected check box in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1136_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1136_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>内のノードを格納している、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>選択チェック ボックスを表示します。"
  overload: System.Web.UI.WebControls.TreeView.CheckedNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ツリー内の各ノードを閉じます。"
  remarks: "すべて折りたたみメソッドでは、ツリー内の各ノードを終了する便利な手段を提供します。"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to collapse all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_54_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_54_1.aspx)]"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  id: CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードの折りたたみ可能なインジケーターの表示されるイメージのツールヒントを設定します。"
  remarks: "CollapseImageToolTip プロパティを使用して、折りたたみ可能なイメージのツールヒントを指定します。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the CollapseImageToolTip property to specify a ToolTip for an image that is displayed for the collapsible node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_978_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_978_1.aspx)]"
  syntax:
    content: public string CollapseImageToolTip { get; set; }
    return:
      type: System.String
      description: "ノードの折りたたみ可能なインジケーターの表示されるイメージのツールヒント。"
  overload: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  id: CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードの折りたたみ可能なインジケーターのカスタム イメージの URL を設定します。"
  remarks: "CollapseImageUrl プロパティを使用して、折りたたみ可能なノード指標のカスタム イメージを指定します。 このイメージは、折りたたみ可能なノードの横に表示され、マイナス記号 (-) は、通常します。       ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`を設定し、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、CollapseImageUrl してプロパティをカスタム イメージの Url</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。      > [!NOTE] > ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、CollapseImageUrl プロパティ次元が同じであるとします</xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView>。       を折りたたみ可能なノードのインジケーターのカスタム イメージを使用する場合は、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>イメージのツールヒントを指定するプロパティ。</xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the CollapseImageUrl property to specify a custom image for the collapsible node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1150_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1150_1.aspx)]"
  syntax:
    content: public string CollapseImageUrl { get; set; }
    return:
      type: System.String
      description: "折りたたみ可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 (&quot;&quot;)、既定のマイナス記号 (-) のイメージが表示されます。"
  overload: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "子コントロールを格納するコレクションを作成します。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>コントロールでは、子コントロールの埋め込みはサポートされません</xref:System.Web.UI.WebControls.TreeView>。 このメソッドを子コントロールの追加を防ぐためにオーバーライドされているし、常に返します、<xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>オブジェクト</xref:System.Web.UI.EmptyControlCollection?displayProperty=fullName>。"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "常に返します、 <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  id: CreateNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを返します、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>クラスです。 CreateNode は、ヘルパー メソッドです。"
  remarks: "CreateNode メソッドは、<xref:System.Web.UI.WebControls.TreeNode>クラス</xref:System.Web.UI.WebControls.TreeNode>の新しいインスタンスを返すヘルパー メソッド       CreateNode メソッドは、主にコントロールの開発者によって使用されます。 <xref:System.Web.UI.WebControls.TreeView><xref:System.Web.UI.WebControls.TreeNode>クラスは<xref:System.Web.UI.WebControls.TreeNode>。</xref:System.Web.UI.WebControls.TreeNode>から派生したオブジェクトを取得するには、このメソッドをオーバーライドする必要があります</xref:System.Web.UI.WebControls.TreeNode>を拡張することによってクラス</xref:System.Web.UI.WebControls.TreeView>を拡張するコントロールの開発者 拡張する一般的な理由として、<xref:System.Web.UI.WebControls.TreeNode>クラスがオーバーライドするには、<xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>と<xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>メソッド</xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A></xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A></xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.TreeNode CreateNode ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "新しいインスタンス、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.CreateNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>基本クラスのメソッド</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind*>を呼び出します"
  remarks: "データ バインド コントロールをオーバーライドする必要があります、 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>DataBind メソッドではなくメソッド</xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>。"
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  id: DataBindings
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト。"
  remarks: "データ バインディングのコレクションを含む<xref:System.Web.UI.WebControls.TreeNodeBinding>データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。 によって返される値を表示、ノードの各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、`ToString`既定では、データ項目のメソッドです。 XML 要素の場合、ノードには、要素名、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが表示されます。 ツリー ノードのバインディングを指定することによって、ノードを特定のデータ項目のプロパティにバインドできます。       データ項目と、ノード間のリレーションシップを定義するときに両方のプロパティにバインドするには、バインドと値の条件を指定する必要があります<xref:System.Web.UI.WebControls.TreeNode>オブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 基準は、データ項目ノードにバインドするタイミングを示します。 ノードの深さ、データ メンバー、またはその両方の条件を指定することができます。 ノードの深さは、バインドされるノードのレベルを指定します。 たとえば、ノードの深さは 0 を指定すると、レベル 0 のツリー構造のすべてのノードが、ツリー ノードのバインドを使用してバインドされます。 データ メンバーは、基になるデータ ソースのデータ項目の種類を指定しますが、データ ソースに応じて、異なる情報を表すことができます。 たとえば、XML 要素のデータ メンバーは、要素の名前を指定します。       複数<xref:System.Web.UI.WebControls.TreeNodeBinding>、互いに競合するオブジェクトが定義されて、<xref:System.Web.UI.WebControls.TreeView>制御の優先順位の順にツリー ノードのバインディングに適用されます: 1</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding> 。  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さと、データ メンバーの両方を定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。      2.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さのみを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。      3.  <xref:System.Web.UI.WebControls.TreeNodeBinding>データ メンバーのみを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。      4.  <xref:System.Web.UI.WebControls.TreeNodeBinding>深さでも、データ メンバーを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。       同じ優先順位条件に一致する複数のバインディングを指定する場合は、コレクション内の最初のバインドが適用されます。       バインディングの基準が確立されるのプロパティはバインドし、<xref:System.Web.UI.WebControls.TreeNode>値にバインドできるオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 属性またはデータ項目のフィールドにバインドするか、静的な値を表示します。 詳細について、バインドのプロパティの<xref:System.Web.UI.WebControls.TreeNode>値にオブジェクト、 <xref:System.Web.UI.WebControls.TreeNodeBinding>。</xref:System.Web.UI.WebControls.TreeNodeBinding>を参照してください。</xref:System.Web.UI.WebControls.TreeNode>       データ バインディングのコレクションをプログラムで設定できますが、通常宣言内で設定します。 ツリー ノードのバインディングを指定するには、まずを開いたり閉じたり`<DataBindings>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 次に、`<asp:TreeNodeBinding>`開始タグと終了の間に要素`<DataBindings>`を指定するバインドを行う各ツリー ノードのタグが必要です。       設定してデータ バインディングを作成するときに、<xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeView>に制御を`true`、作成されるバインディングがある、<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>プロパティに設定`true`</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A></xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>。 宣言によって作成されるデータ バインディングがある、<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>プロパティに設定`false`</xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>。 宣言の構文を使用するには、個々 のデータ バインディングの動作を制御することができます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the DataBindings collection to define the relationship between a data item and the node that it is binding to. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. This example specifies only the <xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A> property of the binding. A slight performance gain could be added by also specifying the <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A> property.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_387_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_387_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeBindingCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>データ項目とそのバインド先のノード間のリレーションシップを表すです。"
  overload: System.Web.UI.WebControls.TreeView.DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうか、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールは、展開と折りたたみのイベントを処理するクライアント側スクリプトを表示します。"
  remarks: "EnableClientScript プロパティを使用して、指定するかどうか、<xref:System.Web.UI.WebControls.TreeView>コントロールが展開と折りたたみのイベントを処理する互換性のあるブラウザーでクライアント側スクリプトを表示します</xref:System.Web.UI.WebControls.TreeView>。 このプロパティに設定するときに`true`、互換性のあるブラウザーを展開して、クライアント上のノードを折りたたむコードを実行します。 クライアント側スクリプトを操作するツリー ノードのデータを事前に知る必要があります。 クライアント スクリプトを使用するように投稿サーバーにノードを展開したり折りたたんだりするたびにします。       場合、ノードをクライアントから設定できるツリー ノードのデータが事前にわかっていない、ときに、`PopulateNodesFromClient`プロパティに設定されても`true`します。 このシナリオでは、イベント処理メソッドを提供する必要がありますも、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>、ノードを作成するイベントです</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。      > [!NOTE] > EnableClientScript プロパティ設定されている場合`false`、<xref:System.Web.UI.WebControls.TreeView>ノードを展開したり折りたたんだりするたびに、サーバーへコントロールのポストバックします</xref:System.Web.UI.WebControls.TreeView>。       このプロパティの値は、ビュー ステートに格納されます。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the EnableClientScript property to render client-side script that is used to expand and collapse nodes on compatible browsers. Notice that a post to the server is required to expand and collapse a node when the EnableClientScript property is set to `false`. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewEnableClientScript#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1194_1.aspx)]\n [!code-vb[TreeViewEnableClientScript#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1194_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>互換性のあるブラウザーでクライアント側スクリプトを表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ツリー内のすべてのノードを開きます。"
  remarks: "すべて展開メソッドは、ツリー内のすべてのノードを開いてする便利な手段を提供します。"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to expand all the nodes in the <xref:System.Web.UI.WebControls.TreeView> control at the same time.  \n  \n [!code-cs[TreeViewExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_100_1.aspx)]\n [!code-vb[TreeViewExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  id: ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定時に展開されるレベル数、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールが最初に表示されます。"
  remarks: "ExpandDepth プロパティの表示の制御を使用して、<xref:System.Web.UI.WebControls.TreeView>表示される最初の時間を制御します</xref:System.Web.UI.WebControls.TreeView>。 以降のポストバックでは、ノードは、現在展開された状態を保持します。"
  syntax:
    content: public int ExpandDepth { get; set; }
    return:
      type: System.Int32
      description: "ときに表示する深さ、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>が最初に表示されます。 既定では-1 で、すべてのノードが表示されます。"
  overload: System.Web.UI.WebControls.TreeView.ExpandDepth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  id: ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または展開可能なノードのインジケーターの表示されるイメージのツールヒントを設定します。"
  remarks: "ExpandImageToolTip プロパティを使用すると、イメージのツールヒントを指定できます。 指定したテキストは、支援テクノロジ デバイスでコントロールを使いやすくするために使用できるイメージの説明を提供します。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the ExpandImageToolTip property to specify a ToolTip for an image that is displayed for the expandable node indicator.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_839_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_839_1.aspx)]"
  syntax:
    content: public string ExpandImageToolTip { get; set; }
    return:
      type: System.String
      description: "展開可能なノード指標に表示されるイメージのツールヒント。"
  overload: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  id: ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または、カスタム イメージを展開可能なノードのインジケーターの URL を設定します。"
  remarks: "ExpandImageUrl プロパティを使用すると、展開可能なノード指標のカスタム イメージを指定できます。 このイメージは、展開可能なノードの横に表示され、プラス記号 (+) は、通常します。       ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、ExpandImageUrl、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。      > [!NOTE] > ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御して指定されているすべてのイメージ、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、ExpandImageUrl、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティが同じ次元を持つ</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView>。       カスタム イメージを正しく表示するのを設定する必要があります<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>に`false`</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>。       を展開可能なノードのインジケーターのカスタム イメージを使用する場合は、設定も考慮する必要があります、<xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>イメージのツールヒントを指定するプロパティ。</xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ExpandImageUrl property to specify a custom image for the expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_567_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_567_1.aspx)]"
  syntax:
    content: public string ExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "拡張可能なノードに表示するカスタム イメージの URL。 既定値は空の文字列 (&quot;&quot;)、既定値を表示する正符号 (+) のイメージです。"
  overload: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  id: FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>内のオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>指定した値パスにあるコントロールです。"
  remarks: "FindNode メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView>指定した値パスにあるコントロール</xref:System.Web.UI.WebControls.TreeView>からノードを取得するには 値パスには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています。 各ノードに値のパスを格納、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>プロパティは、ノードの値を区切るために使用する区切り文字を指定します</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>。"
  example:
  - "The following code example demonstrates how to use the FindNode method to retrieve a node from the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[TreeViewFindNode#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_72_1.aspx)]\n [!code-vb[TreeViewFindNode#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_72_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);
    parameters:
    - id: valuePath
      type: System.String
      description: "ノードの値パス。"
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>指定した値パスにします。"
  overload: System.Web.UI.WebControls.TreeView.FindNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールを対象とするコールバック イベントの結果を返します。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>制御を実装して、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>データとをコントロールに取得したデータを返す GetCallbackResult メソッドを取得します</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A></xref:System.Web.UI.ICallbackEventHandler></xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: protected virtual string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "コールバックの結果。"
  overload: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  id: HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>上にマウス ポインターが配置されているときに、ノードの外観を設定できるようにするオブジェクト。"
  remarks: "HoverNodeStyle プロパティを使用すると、マウス ポインターを置いたときに、ノードの外観を制御できます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>返されるオブジェクト</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `HoverNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `HoverNodeStyle.ForeColor`)。 この機能は、スクリプト対応のクライアントでのみサポートされます。      > [!NOTE] > HoverNodeStyle プロパティを使用する必要があります、`<head>`を持つ要素を`runat=&quot;server&quot;`属性。       通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の順序で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  HoverNodeStyle です。      > [!NOTE] > HoverNodeStyle プロパティのスタイル設定されている対応するノードのスタイル設定を上書き、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティ</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。       ノードの HoverNodeStyle プロパティはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。       異なり、<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>と<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>プロパティであるプロパティ<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトの場合、HoverNodeStyle プロパティは、<xref:System.Web.UI.WebControls.Style>オブジェクト</xref:System.Web.UI.WebControls.Style></xref:System.Web.UI.WebControls.TreeNodeStyle></xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>。"
  example:
  - "The following code example demonstrates how to use the HoverNodeStyle property to control the appearance of a node when the mouse pointer is positioned over it. For this example to work, you must include a `<head>` element with a `runat=\"server\"` attribute.  \n  \n [!code-vb[TreeViewHoverNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_293_1.aspx)]\n [!code-cs[TreeViewHoverNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_293_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style HoverNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>上にマウス ポインターが配置されている場合に、ノードのスタイルを表すです。"
  overload: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  id: ImageSet
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に使用するイメージのグループ、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "使用する画像のグループを指定する、イメージ セット プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 定義済みの標準の外観を制御または独自のカスタム セットを定義するイメージのセットを選択できますか。      > [!NOTE] >、イメージ セットのプロパティでは、ノードのスタイル設定には影響しません。 など、適切なスタイル プロパティの設定、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティ、カスタムの色と間隔を追加する場合</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。       次の表では、イメージ セット プロパティの有効な値が一覧表示します。      |イメージのセット |説明 |  |---------------|-----------------|  |`TreeViewImageSet.Arrows`|矢印の画像を使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.BulletedList`|ダイヤ型の行頭文字を使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.BulletedList2`|行頭文字の正方形イメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.BulletedList3`|区分けされ、ひし形の定義済みセットの形の行頭文字です |。  |`TreeViewImageSet.BulletedList4`|断面代替の定義済みセット、ひし形のレベルごとに異なるサイズの行頭文字です |。  |`TreeViewImageSet.Contacts`|MSN Messenger の画像を使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Custom`|ユーザー定義のイメージのセットです |。  |`TreeViewImageSet.Events`|イベント ログ スタイルのイメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Faq`|よく寄せられる質問スタイルのイメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Inbox`|電子メール スタイルのイメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.News`|ニュースグループ スタイルのイメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Simple`|単純な図形の輪郭を使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Simple2`|単純な塗りつぶされた図形を使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.Msdn`|MSDN イメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.WindowsHelp`|Microsoft Windows のヘルプのイメージを使用する定義済みのイメージ セットです |。  |`TreeViewImageSet.XPFileExplorer`|Microsoft Windows XP で使用できるイメージは Windows エクスプ ローラーを使用する定義済みのイメージ セットです |。      イメージのカスタム セットを定義するときに、次の表に、プロパティの各イメージを指定する必要があります。 それ以外の場合、そのプロパティの既定のイメージが使用されます。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|ノードの折りたたみ可能なインジケーターのカスタム イメージの URL です |。  |<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノードのインジケーターのカスタム イメージの URL です |。  |<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|ノードを接続する線のカスタム イメージを含むフォルダーへの URL です |。  |<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開を可能なノードのインジケーターのカスタム イメージの URL です |。      ビューステートにこのプロパティの値を格納します</xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A></xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>。"
  example:
  - "The following code example demonstrates how to use the ImageSet property to display the Windows Explorer set of images in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewImageSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_587_1.aspx)]\n [!code-vb[TreeViewImageSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_587_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeViewImageSet
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_TreeViewImageSet.Custom&quot; name=&quot;TreeViewImageSet.Custom&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.ImageSet*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定したイメージ セットは、のいずれかではない、 <xref href=&quot;System.Web.UI.WebControls.TreeViewImageSet&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  id: LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>リーフ ノードの外観を設定できるようにするオブジェクト。"
  remarks: "内のリーフ ノードの外観を制御する LeafNodeStyle プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `LeafNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `LeafNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、またはノードの種類によって、LeafNodeStyle。</xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>個々 のスタイル プロパティの設定ではなくプロパティ</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>。"
  example:
  - "The following code example demonstrates how to use the LeafNodeStyle property to control the appearance of the leaf nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewLeafNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_398_1.aspx)]\n [!code-cs[TreeViewLeafNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_398_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>内のリーフ ノードのスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  id: LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.Style&quot;></xref>ツリーの各レベルでノードのスタイルを表すオブジェクト。"
  remarks: "個々 のスタイル プロパティの代わりとして LevelStyles コレクションを使用 (など、<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティ) をツリーの各レベルでのノードのスタイルを制御します</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。 コレクション内の最初のスタイルは、ツリーの最初のレベルでのノードのスタイルに対応します。 コレクション内の&2; 番目のスタイルは、ツリーの&2; 番目のレベルのノードのスタイルに対応します。 このプロパティはほとんどの場合、特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する使用されます。       スタイル プロパティは、次の順序で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> LevelStyles コレクションが定義されている場合、この時点で適用は、その他のノードのスタイル プロパティをオーバーライドします。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the LevelStyles property to create a navigation menu. The control is always fully expanded, with the expansion node indicators and images hidden. Also, the <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A> property is used to control the spacing of the node levels.  \n  \n [!code-vb[TreeViewLevelStyles#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_985_1.aspx)]\n [!code-cs[TreeViewLevelStyles#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_985_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyleCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.StyleCollection&quot;> </xref>ツリーの各レベルでノードのスタイルを表すです。"
  overload: System.Web.UI.WebControls.TreeView.LevelStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  id: LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または親ノードに子ノードを接続するために使用される線のイメージを格納するフォルダへのパスを設定します。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>コントロールで子ノードを親ノードに接続する線を表示できる場合に、<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティに設定されている`true`</xref:System.Web.UI.WebControls.TreeView.ShowLines%2A></xref:System.Web.UI.WebControls.TreeView>。 行が表示される場合は、行に使用するのに画像を描画前のセットを含む Web にアクセスできるフォルダーを指定するのに LineImagesFolder プロパティを使用します。 次の表に、イメージで使用される、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。      |イメージ |説明 |  |-----------|-----------------|  |Dash.gif|ルート ノードの横にあるを表示するツリー構造に&1; つだけのルート ノードが存在し、ルート ノードは、リーフの線のイメージです |。  |Dashminus.gif|ルート ノードが展開されていることを示すためにツリー構造に&1; つだけのルート ノードが存在する場合に、ルート ノードの横に表示されるマイナス記号 (-) イメージです |。  |Dashplus.gif|プラス記号 (+) イメージが、ルート ノードが折りたたまれていることを示すためにツリー構造に&1; つだけのルート ノードがある場合、ルート ノードの横に表示されます |。  |I.gif|隣接するノードに接続する線のイメージです |。  |L.gif|線のイメージ横に表示される最後のノードは分岐で、リーフ ノードがある場合です |。  |Lminus.gif|線のイメージ横に表示される最後のノード、ノードが展開されていることを示すために分岐します |。  |Lplus.gif|線のイメージ横に表示される最後のノード、ノードが折りたたまれていることを示すために分岐します |。  |Minus.gif|マイナス記号 (-)、ノードが展開されていることを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な行が含まれていないと、ルート ノードが折りたたまれた後にのみが表示されます。 ページが最初に読み込まれた Rminus.gif イメージが表示されます |。  |Noexpand.gif|リーフ ノードの横に表示される空のスペーサー イメージ。 このイメージを使用して行にテキストを垂直方向にします |。  |Plus.gif|示すために複数のルート ノードのノードを含むツリー構造での最初のルート ノードの横に表示されるプラス記号 (+) イメージが折りたたまれています。 このイメージは、余分な行が含まれていないと、ルート ノードが展開された後がある場合にのみ表示されます。 ページが最初に読み込まれた Rplus.gif イメージが表示されます |。  |R.gif|ノードがリーフ ノードであることを示す複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示される線のイメージです |。  |Rminus.gif|マイナス記号 (-)、ノードが展開されていることを示すために複数のルート ノードを含むツリー構造内の最初のルート ノードの横に表示されるイメージ。 このイメージは、余分な行が含まれています、ページが最初に読み込まれた場合にのみが表示されます。 ルート ノードが折りたたまれた、Minus.gif イメージが表示されます |。  |Rplus.gif|示すために複数のルート ノードのノードを含むツリー構造での最初のルート ノードの横に表示されるプラス記号 (+) イメージが折りたたまれています。 このイメージは、余分な行が含まれています、ページが最初に読み込まれた場合にのみが表示されます。 ルート ノードが展開された後、Plus.gif イメージが表示されます |。  |T.gif|線のイメージが、ノードがリーフであることを示します (、t の交差部分に) ツリー構造の途中でノードの横に表示されます |。  |Tminus.gif|ノードが展開されていることを示すために、ツリー構造 (t 交点) の途中でノードの横に表示されるマイナス記号 (-) イメージです |。  |Tplus.gif|ノードが折りたたまれていることを示すために、ツリー構造 (t 交点) の途中でノードの横に表示されるプラス記号 (+) イメージです |。     > [!NOTE] > LineImagesFolder プロパティが設定されていない場合、<xref:System.Web.UI.WebControls.TreeView>コントロールが組み込まれており、既定のイメージ (20 × 20 ピクセル単位) を使用します</xref:System.Web.UI.WebControls.TreeView>。       Microsoft Visual Studio などのいくつかのビジュアル デザイナーでは、線のイメージを生成するためのツールを提供します。       実行時は、右から左へ表示用のカスタム イメージを反転できません。 左から右へと右から左への Web ページの両方をサポートするには、双方向のイメージ セットを作成する必要があります。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the LineImagesFolder property to specify the folder that contains the line images to display in the <xref:System.Web.UI.WebControls.TreeView> control. To work with this example, use the Line Designer tool beforehand to create a set of line images. Place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_52_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_52_1.aspx)]"
  syntax:
    content: public string LineImagesFolder { get; set; }
    return:
      type: System.String
      description: "ノードを接続するために使用する線のイメージを含むフォルダーへのパス。 既定値は空の文字列 (&quot;&quot;)、LineImagesFolder プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ポストバック データを処理、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "ASP.NET ページ フレームワークを返すすべてのサーバー コントロールでは追跡`true`LoadPostData メソッドの呼び出しからして呼び出します、<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>それらのコントロールのメソッド</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>。"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "コントロールのキー識別子。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "すべての着信名前値のコレクション。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "以前に保存したビューステートを読み込みます、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "コントロールの保存されているビュー ステートの値を格納するオブジェクト。"
  overload: System.Web.UI.WebControls.TreeView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  id: MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定にバインドするツリー レベルの最大数、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "バインドするときに、<xref:System.Web.UI.WebControls.TreeView>データ ソースにコントロールをコントロールにバインドするツリー レベルの数を制限する MaxDataBindDepth プロパティを使用します</xref:System.Web.UI.WebControls.TreeView>。 たとえば、このプロパティを設定`2`バインドしたルート ノードだけがすぐにルート ノードの下にあるノード、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 データ ソース内のすべての残りのノードは無視されます。      > [!IMPORTANT] > 悪意のあるユーザーはコールバック要求を作成して、ノードのデータを取得、<xref:System.Web.UI.WebControls.TreeView>コントロールをページの開発者が表示されていない</xref:System.Web.UI.WebControls.TreeView>。 したがって、データ ソースによってデータのセキュリティを実装する必要があります。 データを非表示には、MaxDataBindDepth プロパティを使用しません。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the MaxDataBindDepth property to bind only the first two node levels (depths 0 and 1) to the <xref:System.Web.UI.WebControls.TreeView> control. All node levels in the data source are ignored. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml.  \n  \n [!code-cs[TreeViewMaxDataBindDepth#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1168_1.aspx)]\n [!code-vb[TreeViewMaxDataBindDepth#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1168_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int MaxDataBindDepth { get; set; }
    return:
      type: System.Int32
      description: "バインドするツリー レベルの最大数、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。 既定値は、-1 で、データ ソース内のすべてのツリー レベルをコントロールにバインドします。"
  overload: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値より小さい<xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  id: NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定インデント幅 (ピクセル単位) で、子のノード、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "NodeIndent プロパティを使用すると、子ノードの左端とその親ノードの左端の間のスペースの量を制御できます。      > [!NOTE] >、NodeIndent プロパティはすべての子ノードで、影響、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 各ノードのインデント幅を個別に制御することはできません。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the NodeIndent property to control the indentation of child nodes.  \n  \n [!code-cs[TreeViewNodeIndent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1001_1.aspx)]\n [!code-vb[TreeViewNodeIndent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1001_1.aspx)]"
  syntax:
    content: public int NodeIndent { get; set; }
    return:
      type: System.Int32
      description: "子ノードの左端とその親ノードの左端のピクセル単位での領域の量。 既定値は 20 です。"
  overload: System.Web.UI.WebControls.TreeView.NodeIndent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Nodes
  id: Nodes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>のルート ノードを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "ノードのプロパティを使用して、<xref:System.Web.UI.WebControls.TreeNodeCollection>ツリー内のすべてのルート ノードを含むオブジェクトです</xref:System.Web.UI.WebControls.TreeNodeCollection>。 このコレクションは、すべてのルート ノードをすばやく反復処理するか、ツリー内の特定のルート ノードにアクセスするによく使用されます。      > [!NOTE] > 一般的なツリー構造になります&1; つだけのルート ノードです。 ただし、複数のルート ノードを追加することができます、<xref:System.Web.UI.WebControls.TreeView>コントロール。</xref:System.Web.UI.WebControls.TreeView> 。       ノードのプロパティは、プログラムによって、ツリーのルート ノードを管理するも使用できます。 追加、挿入、削除、および取得<xref:System.Web.UI.WebControls.TreeNode>コレクションからオブジェクト</xref:System.Web.UI.WebControls.TreeNode>。 コレクションへの更新は自動的に反映されます、 <xref:System.Web.UI.WebControls.TreeView>、ラウンド トリップをサーバーに次のコントロールです</xref:System.Web.UI.WebControls.TreeView>。       ルート ノードの子ノードにアクセスするには、使用、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。 使用して、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>各ノードのレベルを下へ移動後続の親レベルのノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。"
  example:
  - "The following code example demonstrates how to use the Nodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1353_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1353_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref>のルート ノードを格納している、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.Nodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>内のノードの既定の外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "内のノードの既定の外観を制御する NodeStyle プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `NodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `NodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます: 1。  NodeStyle です。      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>      > [!NOTE] > に対応するノードのスタイル設定、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>NodeStyle プロパティのスタイル設定の上書きのプロパティ</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>。       特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>個々 のスタイル プロパティの設定ではなくプロパティ</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>。"
  example:
  - "The following code example demonstrates how to use the NodeStyle property to control the appearance of nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[TreeViewNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>を表すノードの既定のスタイル。"
  overload: System.Web.UI.WebControls.TreeView.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  id: NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノードが領域を使い果たしたときに、ノードのテキストを折り返すかどうかを示す値を設定します。"
  remarks: "NodeWrap プロパティを使用すると、領域を使い果たしたときに、各ノードに表示されるテキストが折り返されるかどうかを指定できます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the NodeWrap property to wrap the text of the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewNodeWrap#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_767_1.aspx)]\n [!code-vb[TreeViewNodeWrap#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_767_1.aspx)]"
  syntax:
    content: public bool NodeWrap { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>のテキストを折り返すそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.NodeWrap*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  id: NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または、カスタム イメージを展開なノードのインジケーターの URL を設定します。"
  remarks: "NoExpandImageUrl プロパティを使用すると、展開なノード指標のカスタム イメージを指定できます。 展開なノードのインジケーターの画像 (またはスペース用) は、親またはルート ノードのリーフ ノードに合わせて (展開および折りたたみ可能なノード指標) の代わりにリーフ ノードの横に表示されます。       ときに、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティに設定されている`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、NoExpandImageUrl を設定し<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 。 イメージが指定されていない場合、既定のイメージが使用されます。 ノードの展開のインジケーターを隠すには、設定、<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを`false`</xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>。      > [!NOTE] > ノードが正常に整合していることを確認する、<xref:System.Web.UI.WebControls.TreeView>ことを確認して、カスタム イメージを使用する場合を制御、NoExpandImageUrl で指定されているすべてのイメージ<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティが同じ次元を持つ</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A></xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A></xref:System.Web.UI.WebControls.TreeView>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the NoExpandImageUrl property to specify a custom image for the non-expandable node indicator. For the code example to display and the image to appear in the control, you must provide your own image and the <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> property must be set to `TreeNodeImageSet.Custom`.  \n  \n [!code-cs[TreeViewCustomImage#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_258_1.aspx)]\n [!code-vb[TreeViewCustomImage#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_258_1.aspx)]"
  syntax:
    content: public string NoExpandImageUrl { get; set; }
    return:
      type: System.String
      description: "非拡張可能なノードに表示するカスタム イメージ URL です。 既定値は空の文字列 (&quot;&quot;)、既定の空白のイメージが表示されます。"
  overload: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref>イベント。"
  remarks: "OnInit メソッドによって呼び出されます、<xref:System.Web.UI.WebControls.TreeView>させるコントロール、<xref:System.Web.UI.Control.Init>イベント</xref:System.Web.UI.Control.Init></xref:System.Web.UI.WebControls.TreeView>。 通常は、使用コントロールの開発者によって<xref:System.Web.UI.WebControls.TreeView>クラス</xref:System.Web.UI.WebControls.TreeView>を拡張する場合       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnInit メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.TreeView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベント。"
  remarks: "ポストバック用に登録する OnPreRender メソッドをオーバーライドするとします。 クライアント スクリプトが有効になっている場合、必要なスクリプトと非表示フィールドも表示します。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnPreRender メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  id: OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.SelectedNodeChanged&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>でノードを選択すると、イベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>そのノードが選択されているときに発生するイベントを指定するノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnSelectedNodeChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSelectedNodeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "&lt;Xref:System.EventArgs?displayProperty=fullName&gt;イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>イベントは、チェック ボックスで、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnTreeNodeCheckChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeCollapsed&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>でノードが折りたたまれているときにイベントが発生した、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnTreeNodeCollapsed メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeDataBound&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>イベントは、データ項目が内のノードにバインドされている場合、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnTreeNodeDataBound メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodeExpanded&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でノードが展開されると、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティに設定されて<xref:System.Web.UI.WebControls.TreeNodeSelectAction>または<xref:System.Web.UI.WebControls.TreeNodeSelectAction>、<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>でそのノードがクリックされたときにも、イベントが発生、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnTreeNodeExpanded メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  id: OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.TreeView.TreeNodePopulate&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`、そのノードにノードを展開するときに実行時に設定される</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。       ノードを動的に設定するを最初に設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 イベント処理メソッドを次に、定義、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>プログラムでノードを追加するイベントです</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。 追加することによって、ノードの構造が作成された<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A></xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。       サポートされているブラウザー (Internet Explorer 4.0 と互換性のあるブラウザーおよびそれ以降) のクライアント側のノードの母集団のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>が原因で、サーバーに投稿する必要がそのノードを展開すると、場合に、クライアント上のノードを動的に設定するコントロール</xref:System.Web.UI.WebControls.TreeView>。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnTreeNodePopulate メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.TreeNodeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  id: ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>の親ノードの外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "内の親ノードの外観を制御する ParentNodeStyle プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `ParentNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `ParentNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、ParentNodeStyle、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>個々 のスタイル プロパティの設定ではなくプロパティ</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>。"
  example:
  - "The following code example demonstrates how to use the ParentNodeStyle property to control the appearance of the parent nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewParentNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_454_1.aspx)]\n [!code-vb[TreeViewParentNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_454_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>内の親ノードのスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で指定されているノードの値を区切るために使用される、文字、<xref:System.Web.UI.WebControls.TreeNode.ValuePath*>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ValuePath*>。"
  remarks: "<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティには、ルート ノードから現在のノードへのパスを形成するノードの値のコンマ区切りの一覧が含まれています</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。 可能プロパティを使用すると、ノードの値を区切るために使用する区切り文字を指定できます。 個々 の値の一覧を解析するときに、この値は使用一般的です。       表示されるテキストによって、<xref:System.Web.UI.WebControls.TreeView>コントロール、区切り文字は、すべての競合を防ぐために変更する必要があります</xref:System.Web.UI.WebControls.TreeView>。 たとえば、コンマを区切り文字を設定した場合、表示されたテキスト含めることはできませんコンマそれ以外の場合、<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティを正確に解析することはできません</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the PathSeparator property to specify the delimiter character for the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property of a node. This value is then used to parse the <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> property for the individual values.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_62_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_62_1.aspx)]"
  syntax:
    content: public char PathSeparator { get; set; }
    return:
      type: System.Char
      description: "指定されたノードの値を区切るために使用する文字、<xref:System.Web.UI.WebControls.TreeNode.ValuePath*>プロパティ</xref:System.Web.UI.WebControls.TreeNode.ValuePath*>。 既定ではスラッシュ記号 (/) です。"
  overload: System.Web.UI.WebControls.TreeView.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  id: PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースに基づくすべてのノードを作成します。"
  remarks: "PerformDataBinding メソッドが呼び出されるヘルパー メソッド、<xref:System.Web.UI.WebControls.TreeView>コントロールのコントロールに指定されたデータ ソースをバインドします</xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: protected override void PerformDataBinding ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  id: PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノード データがクライアントから要求時に設定されているかどうかを示す値を設定します。"
  remarks: "場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`、そのノードにノードを展開するときに実行時に設定される</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。       オンデマンドのノードを設定するだけでなく、直接サポートされているクライアントのブラウザーでノードを作成することです。 わからなくてを設定すると`true`サービスがサーバーにポストバックが不要になるツリー ノードを作成する、クライアントから呼び出されます。 それ以外の場合、<xref:System.Web.UI.WebControls.TreeView>コントロールは、ノードを作成するサーバーに再度ポストします</xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティを設定する必要がありますも`true`わからなくてに設定するために`true`</xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>。       クライアント上のノードを作成するには、最初に、わからなくてを設定`true`し、設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 イベント処理メソッドを次に、定義、<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>プログラムでノードを追加するイベントです</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。 追加することによって、ノードの構造を作成する<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A></xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。      > [!NOTE] > コールバック スクリプトをサポートするブラウザーでクライアント側のノードの作成機能がサポートされています。 <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A><xref:System.Web.HttpBrowserCapabilities>クラス</xref:System.Web.HttpBrowserCapabilities>のプロパティ</xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A>を使用、ブラウザーがコールバック スクリプト アクセスをサポートしているかどうかを確認するには <xref:System.Web.HttpBrowserCapabilities><xref:System.Web.HttpRequest.Browser%2A><xref:System.Web.HttpRequest>クラス</xref:System.Web.HttpRequest>のプロパティ</xref:System.Web.HttpRequest.Browser%2A>を通じて現在の要求に対するクラス</xref:System.Web.HttpBrowserCapabilities>のインスタンスにアクセスすることができます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the PopulateNodesFromClient property to enable client-side population of the nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Notice that when client-side node population is enabled, nodes are populated dynamically on the client, without the need to post back to the server.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_522_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_522_1.aspx)]"
  syntax:
    content: public bool PopulateNodesFromClient { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアントから要求時にツリー ノードのデータを設定するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した引数を使用して、コールバック イベントを発生させます。"
  remarks: "RaiseCallbackEvent メソッドは、のヘルパー メソッド、<xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>メソッド</xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A>。"
  syntax:
    content: protected virtual void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すオプションのイベント引数を表す文字列。"
  overload: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "により、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>フォームがサーバーにポストされたときに発生するイベントを処理するコントロール。 RaisePostBackEvent メソッドは、のヘルパー メソッド、 &lt;xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A&gt;メソッドです。"
  remarks: "値が渡されます、`eventArgument`を実装するコントロールの RaisePostBackEvent メソッドのパラメーター、<xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName>インターフェイス</xref:System.Web.UI.IPostBackEventHandler?displayProperty=fullName>。 これは、<xref:System.Web.UI.WebControls.TreeView>コントロールはポストバック イベントが発生する原因となる HTML 要素をレンダリングします</xref:System.Web.UI.WebControls.TreeView>。 コントロールは、サーバーへのポストバックをクライアント側スクリプトをレンダリングする場合、スクリプトの引数を渡す、`eventArgument`パラメーター。 サーバーに送信する、単純なによってポストバック イベントが発生した場合、`eventArgument`パラメーターは`null`します。       RaisePostBackEvent メソッドは、HTML や Web サーバー コントロールによって実装される多くのイベント機能を提供します。"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すオプションのイベント引数を表す文字列。"
  overload: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  id: RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "信号、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールの状態が変更されたことを ASP.NET アプリケーションに通知を制御します。"
  remarks: "変更のイベント、 <xref:System.Web.UI.WebControls.TreeView>RaisePostDataChangedEvent メソッドから制御が発生します</xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: protected virtual void RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "開始タグを指定されたライターにコントロールの HTML をレンダリングします。"
  remarks: "RenderBeginTag メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のノードを表示、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "内のノードを表示するために、RenderContents メソッドを使用して、<xref:System.Web.UI.WebControls.TreeView>クライアントに制御します</xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Web ページへのコンテンツを書き込むために使用する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeView.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "終了タグを指定されたライターにコントロールの HTML をレンダリングします。"
  remarks: "RenderEndTag メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.TreeView.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>のルート ノードの外観を設定できるようにするオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "ルート ノードの外観を制御する RootNodeStyle プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `RootNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `RootNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  RootNodeStyle、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>。 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>4 です。</xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       特定のレベルのノードが子ノードがあるかどうかに関係なく、同じ外観を持つ必要がありますコンテンツ スタイルのナビゲーション メニューのテーブルを生成する必要がある場合は、使用を検討する可能性があります、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>個々 のスタイル プロパティの設定ではなくプロパティ</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>。"
  example:
  - "The following code example demonstrates how to use the RootNodeStyle property to control the appearance of the root node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeViewRootNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1116_1.aspx)]\n [!code-cs[TreeViewRootNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1116_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "参照、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>のルート ノードのスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "状態を保存、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "サーバー コントロールの現在のビュー ステート。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>コントロールに関連付けられているビュー ステートがない場合は、します。"
  overload: System.Web.UI.WebControls.TreeView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  id: SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>で選択されたノードを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "内のノードのテキスト、<xref:System.Web.UI.WebControls.TreeView>コントロールで&2; つのモードのいずれかであることができます選択モードとナビゲーション モード。</xref:System.Web.UI.WebControls.TreeView> 。 既定では、ノードは選択モードです。 ノードをナビゲーション モードにする設定、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列以外の値をプロパティ (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> ノードを選択モードにする、<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>ノードの空の文字列をプロパティ (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>       選択モードでのノードがある場合、ユーザーは、ノード内のテキストをクリックすると、ノードを選択できます。 SelectedNode プロパティでどのノードが選択されたを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] > ノードにすることはできないとき、<xref:System.Web.UI.WebControls.TreeView>コントロールのハイパーリンクを表示します</xref:System.Web.UI.WebControls.TreeView>。 SelectedNode プロパティが常に返しますハイパーリンクが表示されたら、`null`です。       ユーザーが内の異なるノードを選択すると、<xref:System.Web.UI.WebControls.TreeView>コントロール内の新しいノード、テキストをクリックして、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>既定では、イベントが発生します</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeView>。 設定して別のイベントを指定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティのプロパティ</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。 次の表には、使用可能なオプションが一覧表示します。      |選択アクション |説明 |  |----------------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|展開および折りたたむノード間を切り替えます</xref:System.Web.UI.WebControls.TreeNodeSelectAction>。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>を発生させるかに応じて、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>イベントです |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|ノードが選択されているときにイベントを発生させません |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|ノードを選択すると、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>イベントを発生させます |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|両方を生成、<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>と<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ノードが選択されているときにイベント</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>。 ノードのみを展開、折りたたむことはできません |。     > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。"
  example:
  - "The following code example demonstrates how to use the SelectedNode property to determine the value of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_601_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_601_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode SelectedNode { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>で選択されたノードを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.SelectedNode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  id: SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードが選択したときに発生、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "SelectedNodeChanged イベントは、ノードを選択した場合、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       必要に応じて設定することができます、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>そのノードが選択されているときに発生するイベントを指定するノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。 次の表には、使用可能なオプションが一覧表示します。      |選択アクション |説明 |  |----------------------|-----------------|  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|展開および折りたたむノード間を切り替えます</xref:System.Web.UI.WebControls.TreeNodeSelectAction>。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>を発生させるかに応じて、<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>イベントです |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|ノードが選択されているときにイベントを発生させません |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|ノードを選択すると、SelectedNodeChanged イベントを発生させます |。  |<xref:System.Web.UI.WebControls.TreeNodeSelectAction>|両方、SelectedNodeChanged を発生させると<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ノードが選択されているときにイベント</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeNodeSelectAction></xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed></xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>。 ノードのみを展開、折りたたむことはできません |。     > [!NOTE] >、<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>を持つノードにはレンダリングされません、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティに設定`TreeNodeSelectAction.None`</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A></xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。       ユーザーは、ノードをクリックしたときに、後でのみ SelectedNodeChanged イベントが発生します。 場合、イベントは起動しませんが、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティをプログラムで変更します</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the SelectedNodeChanged event to update a <xref:System.Web.UI.WebControls.Label> control when a node is selected in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public event EventHandler SelectedNodeChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  id: SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>で選択されたノードの外観を制御するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "SelectedNodeStyle プロパティで選択されたノードの外観を制御を使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトを返します</xref:System.Web.UI.WebControls.TreeNodeStyle>。 フォームのプロパティを宣言して設定されることができます`Property-Subproperty`ここで、`Subproperty`のプロパティ、<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクト (たとえば、 `SelectedNodeStyle-ForeColor`).</xref:System.Web.UI.WebControls.TreeNodeStyle> プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `SelectedNodeStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードの間隔が含まれます。 スタイル プロパティは、次の優先順位で適用されます: 1。  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>      2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>、または<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、ノードの種類によって異なります。</xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> </xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A></xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> 場合、<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されているその他のノードのスタイル プロパティをオーバーライドするこの時点で適用されます場合、</xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 。      3.  SelectedNodeStyle です。      4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>"
  example:
  - "The following code example demonstrates how to use the SelectedNodeStyle property to control the appearance of the selected node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewSelectedNodeStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_204_1.aspx)]\n [!code-vb[TreeViewSelectedNodeStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_204_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TreeNodeStyle&quot;> </xref>で選択されたノードのスタイルを表す、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、SelectedNodeStyle プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選択したノードの値を取得します。"
  remarks: "SelectedValue プロパティでは、選択したノードの値を決定する便利な手段を提供します。 このプロパティは単の値を返します、<xref:System.Web.UI.WebControls.TreeNode.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.TreeNode>によって参照されるオブジェクト、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティ</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A></xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNode.Value%2A>。 ノードで現在選択されていない場合、<xref:System.Web.UI.WebControls.TreeView>を制御する、空の文字列 (&quot;&quot;) が返されます</xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: public string SelectedValue { get; }
    return:
      type: System.String
      description: "選択したノードの値です。"
  overload: System.Web.UI.WebControls.TreeView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  id: SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "派生クラスがかどうかを設定できるように、指定した<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>コントロールがデータ バインドします。"
  remarks: "示すために、SetNodeDataBound メソッドを使用するかどうか、指定した<xref:System.Web.UI.WebControls.TreeNode>データ バインドされて</xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataBound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ バインド; としてノードを設定するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  id: SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "派生クラスが、指定されたデータ項目を設定できるように<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>コントロール。"
  remarks: "SetNodeDataItem メソッドを使用して、指定されたデータ項目を指定<xref:System.Web.UI.WebControls.TreeNode>コントロール</xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataItem
      type: System.Object
      description: "データ項目、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  id: SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "派生クラスが、指定されたデータのパスを設定できるように<xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>コントロール。"
  remarks: "SetNodeDataPath メソッドを使用して、指定されたデータのパスを設定する<xref:System.Web.UI.WebControls.TreeNode>コントロール</xref:System.Web.UI.WebControls.TreeNode>。"
  syntax:
    content: protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);
    parameters:
    - id: node
      type: System.Web.UI.WebControls.TreeNode
      description: "The <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref> to set."
    - id: dataPath
      type: System.String
      description: "データ パス、 <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  id: ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または各種類のノードのチェック ボックスが表示されますを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "複数のノードの選択のサポートを提供する、<xref:System.Web.UI.WebControls.TreeView>コントロール、イメージ ノードの横のチェック ボックスを表示することができます</xref:System.Web.UI.WebControls.TreeView>。 ShowCheckBoxes プロパティを使用すると、各種類のノードのチェック ボックスが表示を指定できます。 たとえば、このプロパティに設定`TreeNodeType.Parent`ツリーで各親ノードのチェック ボックスが表示されます。 次の表は、このプロパティの有効な値を一覧表示します。      |ノードの種類 |説明 |  |---------------|-----------------|  |`TreeNodeType.All`|すべてのノードのチェック ボックスが表示されます |。  |`TreeNodeType.Leaf`|すべてのリーフ ノードのチェック ボックスが表示されます |。  |`TreeNodeType.None`|チェック ボックスは表示されません |。  |`TreeNodeType.Parent`|すべての親ノードのチェック ボックスが表示されます |。  |`TreeNodeType.Root`|すべてのルート ノードのチェック ボックスが表示されます |。      ShowCheckBoxes プロパティに使用される列挙型は、フラグ列挙体は、ビットごとの演算を使用して値を結合することができます。 たとえば、表示するには、親ノードおよびリーフ ノードのチェック ボックスを使用してビットごとの OR 演算子を結合する、`TreeNodeType.Parent`と`TreeNodeType.Leaf`値。       対象のノードのチェック ボックスを利用するかどうかのノードを選択すると、反復処理する、<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションです</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>。      > [!NOTE] > ShowCheckBoxes 設定をオーバーライドすることができます、<xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>各ノードのプロパティ</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>。       単一選択のみをサポートする必要がある場合は、使用を検討して、<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティ</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ShowCheckBoxes property to show and hide the check boxes for the different node types.  \n  \n [!code-vb[TreeViewShowCheckBoxes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_915_1.aspx)]\n [!code-cs[TreeViewShowCheckBoxes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_915_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeTypes
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_TreeNodeType.None&quot; name=&quot;TreeNodeType.None&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ビットごとの組み合わせの値は、範囲の<xref href=&quot;System.Web.UI.WebControls.TreeNodeTypes&quot;></xref>列挙します。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  id: ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはノード展開インジケーターが表示されるかどうかを示す値を設定します。"
  remarks: "ノード展開インジケーターを使用して、ノードが展開された、折りたたまれた、または展開不能かどうかを表示します。 ノードの展開のインジケーターが表示されるかどうかを指定する、ShowExpandCollapse プロパティを使用して、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。       ShowExpandCollapse プロパティに設定するときに`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールは、プラス記号 (+) またはマイナス記号 (-) を示すかどうか、ノードが展開可能な折りたたみ可能なまたは拡張不可能、それぞれのノードの横にあるプレース ホルダー イメージが表示されます</xref:System.Web.UI.WebControls.TreeView>。 最初の設定によってカスタム イメージを指定することができます、<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを`TreeViewImageSet.Custom`、し、設定、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティをカスタム イメージの Url</xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 。 イメージが指定されていない場合、既定のイメージが使用されます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ShowExpandCollapse property to show and hide the expansion node icons.  \n  \n [!code-cs[TreeViewShowExpandCollapse#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_168_1.aspx)]\n [!code-vb[TreeViewShowExpandCollapse#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_168_1.aspx)]"
  syntax:
    content: public bool ShowExpandCollapse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ノードのインジケーターです。 展開を表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  id: ShowLines
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または親ノードに子ノードを結ぶ線を表示するかどうかを示す値を設定します。"
  remarks: "ShowLines プロパティを使用すると、親ノードに子ノードを接続している線を表示するかどうかを指定できます。 このプロパティを設定すると`true`、<xref:System.Web.UI.WebControls.TreeView>コントロールで指定された Web にアクセスできるフォルダーから、検索、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>線イメージのプロパティ</xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A></xref:System.Web.UI.WebControls.TreeView>。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティが設定されていない、<xref:System.Web.UI.WebControls.TreeView>コントロールが組み込まれており、既定のイメージ (20 × 20 ピクセル単位) を使用します</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ShowLines property to display lines connecting nodes in the <xref:System.Web.UI.WebControls.TreeView> control. Be sure to use the Line Designer tool to create a set of line images and place them in a folder named LineImages within the directory for the sample application.  \n  \n [!code-cs[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_251_1.aspx)]\n [!code-vb[TreeViewLineImagesFolderUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_251_1.aspx)]"
  syntax:
    content: public bool ShowLines { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ノードを接続する線を表示するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.ShowLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールのコンテンツをスキップするスクリーン リーダー用の代替テキストを表示するために使用される値を設定します。"
  remarks: "SkipLinkText プロパティは、Web ページを増減したりアクセスできるようにする設定できるプロパティです。 繰り返し出現するコンテンツを含む web ページは、ユーザーのスクリーン リーダー読み上げられるからコンテンツをスキップするためのメカニズムを提供できます。       <xref:System.Web.UI.WebControls.TreeView>コントロールでは、スクリーン リーダーでスキップするのには、全体の制御方法として、SkipLinkText プロパティが用意されています</xref:System.Web.UI.WebControls.TreeView>。 SkipLinkText プロパティが設定されている場合、コントロールの端にジャンプするためのオプションをユーザーに提供の代替テキストを非表示のイメージが表示されます。 スクリーン リーダーを読み上げる代替テキスト、イメージが&1; つだけのピクセルのスペースを占有します。 ページのレンダリング ピクセル細かく制御、SkipLinkText プロパティを設定、空の文字列 (&quot;&quot;) し、ツリーをスキップする、独自のメカニズムを提供します。       SkipLinkText プロパティは、既定では、コントロールは省略スクリーン リーダーを空の文字列に設定が。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  syntax:
    content: public string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "ある文字列、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>スクリーン リーダーにヒントとしてを非表示イメージの代替テキストとして表示します。 既定値は「スキップ ナビゲーション リンク」"
  overload: System.Web.UI.WebControls.TreeView.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  id: System#Web#UI#ICallbackEventHandler#GetCallbackResult
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールを対象とするコールバック イベントの結果を返します。"
  remarks: "<xref:System.Web.UI.WebControls.TreeView>制御を実装、<xref:System.Web.UI.ICallbackEventHandler>使用してインターフェイス、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>データを取得して<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>をコントロールに取得したデータを返すメソッド</xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A></xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A></xref:System.Web.UI.ICallbackEventHandler></xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: string ICallbackEventHandler.GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "コールバックの結果。"
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  id: System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した引数を使用して、コールバック イベントを発生させます。"
  remarks: "コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>メソッド</xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A>。"
  syntax:
    content: void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すオプションのイベント引数を表す文字列。"
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ポストバック データを処理、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>メソッド</xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>。"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "コントロールのキー識別子。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "すべての着信名前値のコレクション。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールの状態の変更、ポストバック イベントの結果としてそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "信号、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールの状態が変更されたことを ASP.NET アプリケーションに通知を制御します。"
  remarks: "コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>メソッド</xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>。"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "により、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>フォームがサーバーにポストされたときに発生するイベントを処理するコントロール。"
  remarks: "コントロールの開発者がオーバーライドする必要があります、<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>メソッド</xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>。"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すオプションのイベント引数を表す文字列。"
  overload: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>値を<xref href=&quot;System.Web.UI.WebControls.TreeView&quot;></xref>コントロール。"
  remarks: "TagKey プロパティでは、適切な HTML マークアップを記述する出力ストリーム、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "常に返します、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.TreeView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、ターゲットのウィンドウまたはフレームをノードに関連付けられている Web ページの内容を表示します。"
  remarks: "ターゲット プロパティを使用すると、ウィンドウまたはそのノードがクリックされたときに、ノードにリンクされている Web コンテンツを表示するフレームを指定できます。      > [!NOTE] > として Target プロパティが表示されます、`target`属性。 `target`属性`anchor`要素は、XHTML 1.1 ドキュメント型定義で許可されていません。 ターゲット プロパティを設定しない場合に表示される出力、 <xref:System.Web.UI.WebControls.TreeView>XHTML 1.1 を準拠にする必要があります</xref:System.Web.UI.WebControls.TreeView>。 詳細については、次を参照してください。 [Visual Studio および ASP.NET で XHTML 標準](~/add/includes/ajax-current-ext-md.md)です。   >> をアクセス可能な Web ページを作成する場合は、別のウィンドウを対象とするターゲット プロパティを使用してを避ける必要があります。 詳細については、次を参照してください。 [ASP.NET コントロールやアクセシビリティ](~/add/includes/ajax-current-ext-md.md)です。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the Target property to display the Web content that is linked to a node in a new window when that node is clicked.  \n  \n [!code-vb[TreeViewTarget#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1247_1.aspx)]\n [!code-cs[TreeViewTarget#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1247_1.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "ターゲット ウィンドウまたはリンクされた Web ページの内容を表示するフレーム。 値で始めなければなりません A Z からの範囲の文字 (大文字小文字を区別しない)、次の表に示すように、アンダー スコアで始まる特殊な値を除く。       <table><thead><tr><th> 対象の値       </th><th> 内容を表示します。       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> フレームを使用せず、新しいウィンドウ       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> 直前のフレーム セットの親です。       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> 検索ペイン。       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> フォーカスのあるフレーム。       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> フル ウィンドウ フレームなしです。       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    ブラウザーのマニュアルを参照するかどうかを<xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref>値はサポートされています。  たとえば、Microsoft Internet Explorer 5.0 を後でサポートしており、 <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref>ターゲット値。      </div>       既定値は空の文字列 (&quot;&quot;)、ウィンドウまたはフォーカスのあるフレームが更新されます。"
  overload: System.Web.UI.WebControls.TreeView.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビュー ステートの変更を追跡、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>制御で保存できるように、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>コントロールのオブジェクト。 これは、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>経由でアクセスでき、 &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt;プロパティです。"
  remarks: "TrackViewState メソッドをオーバーライドするコントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークします。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  id: TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のチェック ボックスのときに発生、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロールは、サーバーへのポスト間の状態を変更します。"
  remarks: "TreeNodeCheckChanged イベントは、チェック ボックスで、<xref:System.Web.UI.WebControls.TreeView>コントロールは、サーバーへのポスト間の状態を変更します</xref:System.Web.UI.WebControls.TreeView>。 これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       ポストバックで TreeNodeCheckChanged イベントが発生しても、チェック ボックスを変更してもポスト バックは発生しません。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the TreeNodeCheckChanged event to update a <xref:System.Web.UI.WebControls.Label> control when the check boxes of the <xref:System.Web.UI.WebControls.TreeView> control change state between posts to the server.  \n  \n [!code-vb[TreeViewCheckChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_134_1.aspx)]\n [!code-cs[TreeViewCheckChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_134_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  id: TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードが折りたたまれているときに発生、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "TreeNodeCollapsed イベント内のノードが折りたたまれているときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the TreeNodeCollapsed event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user collapses a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_89_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  id: TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ項目が内のノードにバインドされているときに発生、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "TreeNodeDataBound イベントは、データ項目が内のノードにバインドされている場合、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. The second code example provides sample XML data for the first code example.  \n  \n The following code example demonstrates how to use the TreeNodeDataBound event to change the image for a node when some condition is met. For this example to work correctly, you must copy the sample XML data, provided after this code example, to a file named Book.xml. Also be sure to provide your own images for this example to display.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_83_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_83_1.aspx)]  \n  \n The following code example provides sample XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  id: TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のノードが展開されたときに発生、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。"
  remarks: "TreeNodeExpanded イベント内のノードが展開されたときに発生、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティに設定されて`TreeNodeSelectAction.Expand`または`TreeNodeSelectAction.SelectExpand`、TreeNodeExpanded もイベントはでそのノードがクリックされたときに、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the TreeNodeExpanded event to update the content of a <xref:System.Web.UI.WebControls.Label> control when the user expands a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeViewTreeNodeExpand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_90_1.aspx)]\n [!code-vb[TreeViewTreeNodeExpand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_90_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  id: TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ノードをときに発生、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>プロパティに設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>で展開されて、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand*>。"
  remarks: "場合によっては、データのサイズまたはユーザーの入力に依存するカスタム コンテンツのためのツリー構造を静的に事前に定義することは実用的ではありません。 このため、<xref:System.Web.UI.WebControls.TreeView>コントロールは、動的なノードをサポートしています</xref:System.Web.UI.WebControls.TreeView>。 ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`、そのノードにノードを展開するときに実行時に設定される</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。       ノードを動的に設定するを最初に設定、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>のノードにプロパティ`true`</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 次に、プログラムによって、ノードのメンバーを追加する TreeNodePopulate イベントのイベント処理メソッドを定義します。 一般的なイベント処理メソッド ノードのデータをデータ ソースから取得、ノードの構造にデータを置くし、するノード構造を追加、<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>登録されているノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>。 追加することによって、ノードの構造が作成された<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>親ノードのコレクション</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A></xref:System.Web.UI.WebControls.TreeNode>。      > [!NOTE] > ときに、<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>ノードのプロパティに設定されて`true`ノードを動的に設定する必要があります</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>。 別のノード下に入れ子に宣言できません。それ以外の場合、ページで、エラーが発生します。       サポートされているブラウザー (Internet Explorer 4.0 と互換性のあるブラウザーおよびそれ以降) のクライアント側のノードの母集団のも利用できます。 これにより、有効にすると、<xref:System.Web.UI.WebControls.TreeView>が原因で、サーバーに投稿する必要がそのノードを展開すると、場合に、クライアントで動的にノードを設定するコントロール</xref:System.Web.UI.WebControls.TreeView>。 クライアント側のノードのカタログ作成の詳細については、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>。</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>を参照してください。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use the TreeNodePopulate event to populate the nodes in the <xref:System.Web.UI.WebControls.TreeView> control dynamically on the server. Notice that the <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> property is set to `false` to prevent expanding-node events from being handled on the client.  \n  \n [!code-cs[TreeViewTreeNodePopulate#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[TreeViewTreeNodePopulate#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;
    return:
      type: System.Web.UI.WebControls.TreeNodeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeView.Visible
  id: Visible
  parent: System.Web.UI.WebControls.TreeView
  langs:
  - csharp
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定 ページで、コントロールが UI としてレンダリングされているかどうかを示す値。"
  remarks: "Visible プロパティ設定されている場合`false`コントロールは表示されません。"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、、コントロールがページに表示される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeView.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.HierarchicalDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.HierarchicalDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.TreeView.#ctor
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView()
  nameWithType: TreeView.TreeView()
  fullName: System.Web.UI.WebControls.TreeView.TreeView()
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: TreeView.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
  fullName: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
  fullName: System.Web.UI.WebControls.TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeView.CollapseAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeView.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeView.CollapseAll()
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageToolTip
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
  fullName: System.Web.UI.WebControls.TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection()
  nameWithType: TreeView.CreateControlCollection()
  fullName: System.Web.UI.WebControls.TreeView.CreateControlCollection()
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode()
  nameWithType: TreeView.CreateNode()
  fullName: System.Web.UI.WebControls.TreeView.CreateNode()
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeView.DataBind
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind()
  nameWithType: TreeView.DataBind()
  fullName: System.Web.UI.WebControls.TreeView.DataBind()
- uid: System.Web.UI.WebControls.TreeView.DataBindings
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
  fullName: System.Web.UI.WebControls.TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
  fullName: System.Web.UI.WebControls.TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeView.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeView.ExpandAll()
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
  fullName: System.Web.UI.WebControls.TreeView.ExpandDepth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode(String)
  nameWithType: TreeView.FindNode(String)
  fullName: System.Web.UI.WebControls.TreeView.FindNode(String)
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult()
  nameWithType: TreeView.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.TreeView.ImageSet
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
  fullName: System.Web.UI.WebControls.TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeViewImageSet
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeViewImageSet
  nameWithType: TreeViewImageSet
  fullName: System.Web.UI.WebControls.TreeViewImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeNodeStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyle
  nameWithType: TreeNodeStyle
  fullName: System.Web.UI.WebControls.TreeNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
  fullName: System.Web.UI.WebControls.TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeNodeStyleCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeStyleCollection
  nameWithType: TreeNodeStyleCollection
  fullName: System.Web.UI.WebControls.TreeNodeStyleCollection
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
  fullName: System.Web.UI.WebControls.TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.LoadPostData(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
  fullName: System.Web.UI.WebControls.TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
  fullName: System.Web.UI.WebControls.TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
  fullName: System.Web.UI.WebControls.TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
  fullName: System.Web.UI.WebControls.TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
  fullName: System.Web.UI.WebControls.TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
  fullName: System.Web.UI.WebControls.TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: TreeView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: TreeView.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged(EventArgs)
  nameWithType: TreeView.OnSelectedNodeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(EventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeNodeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventArgs
  nameWithType: TreeNodeEventArgs
  fullName: System.Web.UI.WebControls.TreeNodeEventArgs
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate(TreeNodeEventArgs)
  nameWithType: TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
  fullName: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(TreeNodeEventArgs)
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
  fullName: System.Web.UI.WebControls.TreeView.PathSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding()
  nameWithType: TreeView.PerformDataBinding()
  fullName: System.Web.UI.WebControls.TreeView.PerformDataBinding()
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
  fullName: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: TreeView.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: TreeView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent()
  nameWithType: TreeView.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: TreeView.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: TreeView.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: TreeView.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeView.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeView.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeView.SaveViewState()
- uid: System.Web.UI.WebControls.TreeView.SelectedNode
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
  fullName: System.Web.UI.WebControls.TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeChanged
  nameWithType: TreeView.SelectedNodeChanged
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
  fullName: System.Web.UI.WebControls.TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
  fullName: System.Web.UI.WebControls.TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound(TreeNode,Boolean)
  nameWithType: TreeView.SetNodeDataBound(TreeNode,Boolean)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataBound(TreeNode,Boolean)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem(TreeNode,Object)
  nameWithType: TreeView.SetNodeDataItem(TreeNode,Object)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataItem(TreeNode,Object)
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath(TreeNode,String)
  nameWithType: TreeView.SetNodeDataPath(TreeNode,String)
  fullName: System.Web.UI.WebControls.TreeView.SetNodeDataPath(TreeNode,String)
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
  fullName: System.Web.UI.WebControls.TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeNodeTypes
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeTypes
  nameWithType: TreeNodeTypes
  fullName: System.Web.UI.WebControls.TreeNodeTypes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
  fullName: System.Web.UI.WebControls.TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
  fullName: System.Web.UI.WebControls.TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
  fullName: System.Web.UI.WebControls.TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.TreeView.TagKey
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
  fullName: System.Web.UI.WebControls.TreeView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.TreeView.Target
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
  fullName: System.Web.UI.WebControls.TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeView.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeView.TrackViewState()
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCheckChanged
  nameWithType: TreeView.TreeNodeCheckChanged
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeNodeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeEventHandler
  nameWithType: TreeNodeEventHandler
  fullName: System.Web.UI.WebControls.TreeNodeEventHandler
- uid: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeCollapsed
  nameWithType: TreeView.TreeNodeCollapsed
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeDataBound
  nameWithType: TreeView.TreeNodeDataBound
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodeExpanded
  nameWithType: TreeView.TreeNodeExpanded
  fullName: System.Web.UI.WebControls.TreeView.TreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.TreeNodePopulate
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeNodePopulate
  nameWithType: TreeView.TreeNodePopulate
  fullName: System.Web.UI.WebControls.TreeView.TreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.Visible
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
  fullName: System.Web.UI.WebControls.TreeView.Visible
- uid: System.Web.UI.WebControls.TreeView.#ctor*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TreeView
  nameWithType: TreeView.TreeView
- uid: System.Web.UI.WebControls.TreeView.AddAttributesToRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AddAttributesToRender
  nameWithType: TreeView.AddAttributesToRender
- uid: System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: AutoGenerateDataBindings
  nameWithType: TreeView.AutoGenerateDataBindings
- uid: System.Web.UI.WebControls.TreeView.CheckedNodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CheckedNodes
  nameWithType: TreeView.CheckedNodes
- uid: System.Web.UI.WebControls.TreeView.CollapseAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseAll
  nameWithType: TreeView.CollapseAll
- uid: System.Web.UI.WebControls.TreeView.CollapseImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageToolTip
  nameWithType: TreeView.CollapseImageToolTip
- uid: System.Web.UI.WebControls.TreeView.CollapseImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CollapseImageUrl
  nameWithType: TreeView.CollapseImageUrl
- uid: System.Web.UI.WebControls.TreeView.CreateControlCollection*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateControlCollection
  nameWithType: TreeView.CreateControlCollection
- uid: System.Web.UI.WebControls.TreeView.CreateNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: CreateNode
  nameWithType: TreeView.CreateNode
- uid: System.Web.UI.WebControls.TreeView.DataBind*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBind
  nameWithType: TreeView.DataBind
- uid: System.Web.UI.WebControls.TreeView.DataBindings*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: DataBindings
  nameWithType: TreeView.DataBindings
- uid: System.Web.UI.WebControls.TreeView.EnableClientScript*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: EnableClientScript
  nameWithType: TreeView.EnableClientScript
- uid: System.Web.UI.WebControls.TreeView.ExpandAll*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandAll
  nameWithType: TreeView.ExpandAll
- uid: System.Web.UI.WebControls.TreeView.ExpandDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandDepth
  nameWithType: TreeView.ExpandDepth
- uid: System.Web.UI.WebControls.TreeView.ExpandImageToolTip*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageToolTip
  nameWithType: TreeView.ExpandImageToolTip
- uid: System.Web.UI.WebControls.TreeView.ExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ExpandImageUrl
  nameWithType: TreeView.ExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.FindNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: FindNode
  nameWithType: TreeView.FindNode
- uid: System.Web.UI.WebControls.TreeView.GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: GetCallbackResult
  nameWithType: TreeView.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.HoverNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: HoverNodeStyle
  nameWithType: TreeView.HoverNodeStyle
- uid: System.Web.UI.WebControls.TreeView.ImageSet*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ImageSet
  nameWithType: TreeView.ImageSet
- uid: System.Web.UI.WebControls.TreeView.LeafNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LeafNodeStyle
  nameWithType: TreeView.LeafNodeStyle
- uid: System.Web.UI.WebControls.TreeView.LevelStyles*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LevelStyles
  nameWithType: TreeView.LevelStyles
- uid: System.Web.UI.WebControls.TreeView.LineImagesFolder*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LineImagesFolder
  nameWithType: TreeView.LineImagesFolder
- uid: System.Web.UI.WebControls.TreeView.LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadPostData
  nameWithType: TreeView.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.LoadViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: LoadViewState
  nameWithType: TreeView.LoadViewState
- uid: System.Web.UI.WebControls.TreeView.MaxDataBindDepth*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: MaxDataBindDepth
  nameWithType: TreeView.MaxDataBindDepth
- uid: System.Web.UI.WebControls.TreeView.NodeIndent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeIndent
  nameWithType: TreeView.NodeIndent
- uid: System.Web.UI.WebControls.TreeView.Nodes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Nodes
  nameWithType: TreeView.Nodes
- uid: System.Web.UI.WebControls.TreeView.NodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeStyle
  nameWithType: TreeView.NodeStyle
- uid: System.Web.UI.WebControls.TreeView.NodeWrap*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NodeWrap
  nameWithType: TreeView.NodeWrap
- uid: System.Web.UI.WebControls.TreeView.NoExpandImageUrl*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: NoExpandImageUrl
  nameWithType: TreeView.NoExpandImageUrl
- uid: System.Web.UI.WebControls.TreeView.OnInit*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnInit
  nameWithType: TreeView.OnInit
- uid: System.Web.UI.WebControls.TreeView.OnPreRender*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnPreRender
  nameWithType: TreeView.OnPreRender
- uid: System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnSelectedNodeChanged
  nameWithType: TreeView.OnSelectedNodeChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCheckChanged
  nameWithType: TreeView.OnTreeNodeCheckChanged
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeCollapsed
  nameWithType: TreeView.OnTreeNodeCollapsed
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeDataBound
  nameWithType: TreeView.OnTreeNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodeExpanded
  nameWithType: TreeView.OnTreeNodeExpanded
- uid: System.Web.UI.WebControls.TreeView.OnTreeNodePopulate*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: OnTreeNodePopulate
  nameWithType: TreeView.OnTreeNodePopulate
- uid: System.Web.UI.WebControls.TreeView.ParentNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ParentNodeStyle
  nameWithType: TreeView.ParentNodeStyle
- uid: System.Web.UI.WebControls.TreeView.PathSeparator*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PathSeparator
  nameWithType: TreeView.PathSeparator
- uid: System.Web.UI.WebControls.TreeView.PerformDataBinding*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PerformDataBinding
  nameWithType: TreeView.PerformDataBinding
- uid: System.Web.UI.WebControls.TreeView.PopulateNodesFromClient*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: PopulateNodesFromClient
  nameWithType: TreeView.PopulateNodesFromClient
- uid: System.Web.UI.WebControls.TreeView.RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: TreeView.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: TreeView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RaisePostDataChangedEvent
  nameWithType: TreeView.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.RenderBeginTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderBeginTag
  nameWithType: TreeView.RenderBeginTag
- uid: System.Web.UI.WebControls.TreeView.RenderContents*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderContents
  nameWithType: TreeView.RenderContents
- uid: System.Web.UI.WebControls.TreeView.RenderEndTag*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RenderEndTag
  nameWithType: TreeView.RenderEndTag
- uid: System.Web.UI.WebControls.TreeView.RootNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: RootNodeStyle
  nameWithType: TreeView.RootNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SaveViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SaveViewState
  nameWithType: TreeView.SaveViewState
- uid: System.Web.UI.WebControls.TreeView.SelectedNode*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNode
  nameWithType: TreeView.SelectedNode
- uid: System.Web.UI.WebControls.TreeView.SelectedNodeStyle*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedNodeStyle
  nameWithType: TreeView.SelectedNodeStyle
- uid: System.Web.UI.WebControls.TreeView.SelectedValue*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SelectedValue
  nameWithType: TreeView.SelectedValue
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataBound*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataBound
  nameWithType: TreeView.SetNodeDataBound
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataItem*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataItem
  nameWithType: TreeView.SetNodeDataItem
- uid: System.Web.UI.WebControls.TreeView.SetNodeDataPath*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SetNodeDataPath
  nameWithType: TreeView.SetNodeDataPath
- uid: System.Web.UI.WebControls.TreeView.ShowCheckBoxes*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowCheckBoxes
  nameWithType: TreeView.ShowCheckBoxes
- uid: System.Web.UI.WebControls.TreeView.ShowExpandCollapse*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowExpandCollapse
  nameWithType: TreeView.ShowExpandCollapse
- uid: System.Web.UI.WebControls.TreeView.ShowLines*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: ShowLines
  nameWithType: TreeView.ShowLines
- uid: System.Web.UI.WebControls.TreeView.SkipLinkText*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: SkipLinkText
  nameWithType: TreeView.SkipLinkText
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
  nameWithType: TreeView.System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: TreeView.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: TreeView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.TreeView.TagKey*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TagKey
  nameWithType: TreeView.TagKey
- uid: System.Web.UI.WebControls.TreeView.Target*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Target
  nameWithType: TreeView.Target
- uid: System.Web.UI.WebControls.TreeView.TrackViewState*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: TrackViewState
  nameWithType: TreeView.TrackViewState
- uid: System.Web.UI.WebControls.TreeView.Visible*
  parent: System.Web.UI.WebControls.TreeView
  isExternal: false
  name: Visible
  nameWithType: TreeView.Visible
