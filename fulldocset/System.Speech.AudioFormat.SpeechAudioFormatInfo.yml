### YamlMime:ManagedReference
items:
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo
  id: SpeechAudioFormatInfo
  children:
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  - System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  langs:
  - csharp
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo
  type: Class
  summary: "オーディオ形式に関する情報を表します。"
  syntax:
    content: public class SpeechAudioFormatInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  id: '#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref>クラスし、2 番目、ビット/サンプル、およびチャネルの数ごとのサンプルを指定します。"
  remarks: ''
  example:
  - "The following example shows a typical use of SpeechAudioFormatInfo to specify the format of audio to output to a WAV file. The SpeechAudioFormatInfo instance is an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.SetOutputToWaveFile%2A> method.  \n  \n```c#  \nusing System;  \nusing System.IO;  \nusing System.Speech.Synthesis;  \nusing System.Speech.AudioFormat;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToWaveFile(@\"C:\\temp\\test.wav\",   \n          new SpeechAudioFormatInfo(32000, AudioBitsPerSample.Sixteen, AudioChannel.Mono));  \n  \n        // Create a SoundPlayer instance to play output audio file.  \n        System.Media.SoundPlayer m_SoundPlayer =   \n          new System.Media.SoundPlayer(@\"C:\\temp\\test.wav\");  \n  \n        // Build a prompt.  \n        PromptBuilder builder = new PromptBuilder();  \n        builder.AppendText(\"This is sample output to a WAVE file.\");  \n  \n        // Speak the prompt.  \n        synth.Speak(builder);  \n        m_SoundPlayer.Play();  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public SpeechAudioFormatInfo (int samplesPerSecond, System.Speech.AudioFormat.AudioBitsPerSample bitsPerSample, System.Speech.AudioFormat.AudioChannel channel);
    parameters:
    - id: samplesPerSecond
      type: System.Int32
      description: "1 秒あたりのサンプルの値です。"
    - id: bitsPerSample
      type: System.Speech.AudioFormat.AudioBitsPerSample
      description: "サンプルごとのビットの値です。"
    - id: channel
      type: System.Speech.AudioFormat.AudioChannel
      description: "メンバー、 <xref href=&quot;System.Speech.AudioFormat.AudioChannel&quot;> </xref>列挙 (を示す`Mono`または`Stereo`)。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  id: '#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])'
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;> </xref>クラスし、エンコード形式、1 秒あたりのサンプル、サンプル、チャネルの数、2 番目、ブロックのアラインメント値、および形式に固有のデータを格納する配列あたりの平均バイト数ごとのビットを指定します。"
  syntax:
    content: public SpeechAudioFormatInfo (System.Speech.AudioFormat.EncodingFormat encodingFormat, int samplesPerSecond, int bitsPerSample, int channelCount, int averageBytesPerSecond, int blockAlign, byte[] formatSpecificData);
    parameters:
    - id: encodingFormat
      type: System.Speech.AudioFormat.EncodingFormat
      description: "エンコード形式です。"
    - id: samplesPerSecond
      type: System.Int32
      description: "1 秒あたりのサンプルの値です。"
    - id: bitsPerSample
      type: System.Int32
      description: "サンプルごとのビットの値です。"
    - id: channelCount
      type: System.Int32
      description: "チャネルの数の値です。"
    - id: averageBytesPerSecond
      type: System.Int32
      description: "1 秒あたりの平均バイト数の値です。"
    - id: blockAlign
      type: System.Int32
      description: "BlockAlign の値です。"
    - id: formatSpecificData
      type: System.Byte[]
      description: "形式に固有のデータを含むバイト配列。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  id: AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "オーディオの&1; 秒あたりの平均バイト数を取得します。"
  syntax:
    content: public int AverageBytesPerSecond { get; }
    return:
      type: System.Int32
      description: "1 秒あたりの平均バイト数の値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  id: BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "オーディオのサンプルごとのビットを取得します。"
  syntax:
    content: public int BitsPerSample { get; }
    return:
      type: System.Int32
      description: "サンプルごとのビットの値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  id: BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "取得し、ブロックのアラインメントをバイト単位で設定します。"
  remarks: "再生やオーディオの録音用のソフトウェアは、ブロック内のオーディオ データを処理します。 これらのブロックのサイズは BlockAlign プロパティの値の倍数です。 ブロックのアラインメント値は、特定の形式のオーディオのアトミック単位 (ブロック) 内のバイト数です。 ブロックのアラインメントを計算する式を次のようには、パルス符号変調 (PCM) の形式の場合:-ブロックのアラインメント = サンプルごとのバイト数のチャネルの例では、ブロックのアラインメント値 x 16 ビット PCM モノラル オーディオの設定は、2 (サンプル x 1 チャネルあたり 2 バイト)。 16 ビット PCM ステレオ オーディオの設定、ブロックのアラインメント値は 4 です。       デバイスからの読み取りし、書き込みのデータは必要があります、ブロックの先頭に必ず開始します。 たとえば、サンプル (ブロック揃えられていない境界に意味) の途中で PCM データの再生を開始することはできません。"
  syntax:
    content: public int BlockAlign { get; }
    return:
      type: System.Int32
      description: "ブロックのアラインメントの値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  id: ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "オーディオのチャネルの数を取得します。"
  syntax:
    content: public int ChannelCount { get; }
    return:
      type: System.Int32
      description: "チャネルの数の値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  id: EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "オーディオのエンコード形式を取得します。"
  syntax:
    content: public System.Speech.AudioFormat.EncodingFormat EncodingFormat { get; }
    return:
      type: System.Speech.AudioFormat.EncodingFormat
      description: "オーディオのエンコード形式です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "指定したオブジェクトがのインスタンスであるかどうかを返します<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>の現在のインスタンスに等しいと<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>です。"
  remarks: "このメソッドを返します`false`場合、<xref:System.Object>によって提供される、 `obj` <xref:System.Speech.AudioFormat.SpeechAudioFormatInfo>.</xref:System.Speech.AudioFormat.SpeechAudioFormatInfo>に引数をキャストできません</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の現在のインスタンス<xref href=&quot;System.Speech.AudioFormat.SpeechAudioFormatInfo&quot;></xref>から取得したものと、 <code> obj </code>引数が等しい場合、それ以外の場合を返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  id: FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "このオーディオ形式のファイル形式に固有のデータを返します。"
  syntax:
    content: public byte[] FormatSpecificData ();
    parameters: []
    return:
      type: System.Byte[]
      description: "形式に固有のデータを含むバイト配列。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  id: GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "このオーディオ形式のハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "ハッシュ コードの値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  id: SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  langs:
  - csharp
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.AudioFormat
  summary: "このオーディオ形式の&1; 秒あたりのサンプルを取得します。"
  syntax:
    content: public int SamplesPerSecond { get; }
    return:
      type: System.Int32
      description: "1 秒あたりのサンプルの値です。"
  overload: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Int32,System.Speech.AudioFormat.AudioBitsPerSample,System.Speech.AudioFormat.AudioChannel)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(Int32,AudioBitsPerSample,AudioChannel)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.AudioFormat.AudioBitsPerSample
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioBitsPerSample
  nameWithType: AudioBitsPerSample
  fullName: System.Speech.AudioFormat.AudioBitsPerSample
- uid: System.Speech.AudioFormat.AudioChannel
  parent: System.Speech.AudioFormat
  isExternal: false
  name: AudioChannel
  nameWithType: AudioChannel
  fullName: System.Speech.AudioFormat.AudioChannel
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor(System.Speech.AudioFormat.EncodingFormat,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SpeechAudioFormatInfo(EncodingFormat,Int32,Int32,Int32,Int32,Int32,Byte[])
- uid: System.Speech.AudioFormat.EncodingFormat
  parent: System.Speech.AudioFormat
  isExternal: false
  name: EncodingFormat
  nameWithType: EncodingFormat
  fullName: System.Speech.AudioFormat.EncodingFormat
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(System.Object)
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: SpeechAudioFormatInfo.Equals(Object)
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData()
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: SpeechAudioFormatInfo.GetHashCode()
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode()
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
  fullName: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.#ctor*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SpeechAudioFormatInfo
  nameWithType: SpeechAudioFormatInfo.SpeechAudioFormatInfo
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.AverageBytesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: AverageBytesPerSecond
  nameWithType: SpeechAudioFormatInfo.AverageBytesPerSecond
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BitsPerSample*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BitsPerSample
  nameWithType: SpeechAudioFormatInfo.BitsPerSample
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.BlockAlign*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: BlockAlign
  nameWithType: SpeechAudioFormatInfo.BlockAlign
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.ChannelCount*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: ChannelCount
  nameWithType: SpeechAudioFormatInfo.ChannelCount
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.EncodingFormat*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: EncodingFormat
  nameWithType: SpeechAudioFormatInfo.EncodingFormat
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.Equals*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: Equals
  nameWithType: SpeechAudioFormatInfo.Equals
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.FormatSpecificData*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: FormatSpecificData
  nameWithType: SpeechAudioFormatInfo.FormatSpecificData
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.GetHashCode*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: GetHashCode
  nameWithType: SpeechAudioFormatInfo.GetHashCode
- uid: System.Speech.AudioFormat.SpeechAudioFormatInfo.SamplesPerSecond*
  parent: System.Speech.AudioFormat.SpeechAudioFormatInfo
  isExternal: false
  name: SamplesPerSecond
  nameWithType: SpeechAudioFormatInfo.SamplesPerSecond
