### YamlMime:ManagedReference
items:
- uid: System.Web.Util.HttpEncoder
  id: HttpEncoder
  children:
  - System.Web.Util.HttpEncoder.#ctor
  - System.Web.Util.HttpEncoder.Current
  - System.Web.Util.HttpEncoder.Default
  - System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  - System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  - System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  - System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  - System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  langs:
  - csharp
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
  type: Class
  summary: "エンコードとデコードのロジックを提供します。"
  remarks: "クラスには、エンコードとデコードなどのクラスのメソッドで使用されるロジックが含まれています<xref:System.Web.HttpUtility>、 <xref:System.Web.HttpServerUtility>、 <xref:System.Net.HttpResponseHeader>。</xref:System.Net.HttpResponseHeader> </xref:System.Web.HttpServerUtility> </xref:System.Web.HttpUtility> 。       HttpEncoder クラスから継承でき、既定のエンコードとデコード ASP.NET の動作をカスタマイズするには、次のように動作をオーバーライドすることができます。 <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A><xref:System.Web.Configuration.HttpRuntimeSection>をカスタム クラスを構成するクラス</xref:System.Web.Configuration.HttpRuntimeSection>のプロパティ</xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A>を設定します。       HttpEncoder から派生するカスタム クラスのエンコードとデコードの組み込みの ASP.NET のエンコードとデコードの動作をオーバーライドできます。 または選択したスクリプトのみを変更します。       置き換えたり、次のエンコードの動作を補足するための ASP.NET でのカスタム エンコードの種類を構成することができます: - HTML: HTML 属性エンコード - URL のエンコーディング: URL パスのエンコード - エンコード標準の HTTP ヘッダー名とヘッダーの値のエンコードによって、ASP.NET アプリケーションの構成を使用する、<xref:System.Web.Security.AntiXss.AntiXssEncoder>すべての出力エンコードを入力します</xref:System.Web.Security.AntiXss.AntiXssEncoder>。       アプリケーション レベルの Web.config ファイルの表示から次の例、 <xref:System.Web.Security.AntiXss.AntiXssEncoder>ASP.NET アプリケーションの型は設定:`<httpRuntime requestValidationMode=&quot;4.5&quot; encoderType=&quot;System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;/>`例のセットで構成設定、<xref:System.Web.Security.AntiXss.AntiXssEncoder>すべてを実行するクラスは、アプリケーションでのエンコードを出力します</xref:System.Web.Security.AntiXss.AntiXssEncoder></xref:System.Web.Security.AntiXss.AntiXssEncoder>。 詳細については、次を参照してください、<xref:System.Web.Security.AntiXss.AntiXssEncoder>クラスの概要。</xref:System.Web.Security.AntiXss.AntiXssEncoder> 。"
  syntax:
    content: public class HttpEncoder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.#ctor
  id: '#ctor'
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Util.HttpEncoder&quot;> </xref>クラスです。"
  syntax:
    content: public HttpEncoder ();
    parameters: []
  overload: System.Web.Util.HttpEncoder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Current
  id: Current
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "取得または設定、 <xref href=&quot;System.Web.Util.HttpEncoder&quot;> </xref>アプリケーションで使用される型。"
  remarks: "場合、派生<xref:System.Web.Util.HttpEncoder>型が、構成ファイルで指定された現在のプロパティは、カスタム型への参照を返します</xref:System.Web.Util.HttpEncoder>。 ただし、カスタム エンコーダーを使用しない場合、プロパティの参照を返します、既定の ASP.NET に<xref:System.Web.Util.HttpEncoder>インスタンス</xref:System.Web.Util.HttpEncoder>。       現在のプロパティは、スレッド セーフではできません。 アプリケーションのでのみこのプロパティを設定`Application_Start`メソッド、ため`Application_Start`1 つのスレッドで実行されます。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Current { get; set; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "使用されるエンコーダー/デコーダーの種類への参照。"
  overload: System.Web.Util.HttpEncoder.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "このプロパティに割り当てられているエンコーダー インスタンスが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.Default
  id: Default
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "ASP.NET の既定のエンコーダーへの参照を取得します。"
  remarks: "エンコードの一般的な問題は、既定の ASP.NET<xref:System.Web.Util.HttpEncoder.UrlEncode%2A>動作を「+」文字のスペースに変換します</xref:System.Web.Util.HttpEncoder.UrlEncode%2A>。 従来は、「+」文字は、インターネットの規則より人間が判読できるように URL 内の空白文字をエンコードするためにされました。 ただし、標準、に従って、空白文字を想定の代わりに&quot;%20&quot;としてエンコードされる「+」文字として。 ASP.NET では、複数の標準準拠エンコード アルゴリズムを実装することができます。"
  syntax:
    content: public static System.Web.Util.HttpEncoder Default { get; }
    return:
      type: System.Web.Util.HttpEncoder
      description: "既定のエンコーダーへの参照。"
  overload: System.Web.Util.HttpEncoder.Default*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  id: HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTTP ヘッダーとして使用できる文字列には、ヘッダーの名前と値をエンコードします。"
  remarks: "メソッドは、入力 HeaderNameValueEncode から文字列を`headerName`と`headerValue`パラメーターし、それらをエンコードします。 エンコードされた値は、出力パラメーターとして返されます。       HeaderNameValueEncode メソッドでは、次のロジックを使用して、ヘッダーの名前と値のエンコード:-すべての文字を Unicode 値では、ASCII 文字、9 を除く ASCII 文字、32 より小さいはの形式に URL エンコード`%NN`場所、`N`文字は 16 進値を表します。      ASCII 文字 9 (水平タブ文字) は、URL エンコードされません。      ASCII 文字 127 としてエンコード`%7F`です。      のその他すべての文字がエンコードされていません。          > [!NOTE] > ASCII の範囲で値を通常使用されるこのメソッドは、Unicode 値を使用できますが、します。       HeaderNameValueEncode メソッドの既定の実装がの値を返します`headerValue`で`encodedHeaderValue`場合`headerValue`は`null`または空の文字列。 同様に、既定の実装がの値を返します`headerName`で`encodedHeaderName`場合`headerName`は`null`または空の文字列。"
  syntax:
    content: protected virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);
    parameters:
    - id: headerName
      type: System.String
      description: "エンコードする HTTP ヘッダーの名前。"
    - id: headerValue
      type: System.String
      description: "エンコードする HTTP ヘッダーの値。"
    - id: encodedHeaderName
      type: System.String
      description: "このメソッドが戻るときに、HTTP ヘッダーに使用するエンコードされた名前が含まれています。 このパラメーターは初期化せずに渡されます。"
    - id: encodedHeaderValue
      type: System.String
      description: "このメソッドが戻るときに、HTTP ヘッダーに使用するエンコードされた値が含まれています。 このパラメーターは初期化せずに渡されます。"
  overload: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  id: HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "一重引用符または二重引用符で区切られた HTML 属性を挿入する文字列に受信した値をエンコードします。"
  remarks: "The HtmlAttributeEncode method encodes characters by using the standard HTML entities. For example, the `<` (left angle bracket) is encoded as `<` and the `\\` (backslash) is encoded as `\\`.  \n  \n It is safe to use HtmlAttributeEncode within single-quoted and double-quoted attributes. The values must be quoted."
  syntax:
    content: protected virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "エンコードする文字列。"
    - id: output
      type: System.IO.TextWriter
      description: "エンコードされた値を書き込むテキスト ライター。"
  overload: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  id: HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTML エンコードされた文字列から値をデコードします。"
  remarks: "次の表は、ASP.NET のデコード ロジックをデコードできる文字シーケンスを一覧表示します。      |文字のシーケンス |ルール |  |------------------------|----------|  |`&#NNN;` (ASCII 文字の&10; 進数コード). |指定された ASCII 文字とデコードします。 文字シーケンスは、# 文字の後に最初の数字から開始され、セミコロンで終了します |。  |`&#xZZ;` (ASCII 文字の&16; 進数コード). |指定された ASCII 文字とデコードします。 エンコードされた形式では、10 進値ではなく&16; 進文字を使用して、文字を指定します。 文字シーケンスは、# 文字の後に最初の数字から開始され、セミコロンで終了します |。  |名前付き HTML エンティティです |。等価の ASCII 文字とデコードします |。"
  syntax:
    content: protected virtual void HtmlDecode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "デコードする文字列。"
    - id: output
      type: System.IO.TextWriter
      description: "デコードされた値を書き込むテキスト ライター。"
  overload: System.Web.Util.HttpEncoder.HtmlDecode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  id: HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTML エンコードされた文字列に文字列をエンコードします。"
  remarks: "The following table lists the character sequences that the ASP.NET encoding logic can decode.  \n  \n|Character|Encoded as|  \n|---------------|----------------|  \n|`<` (left angle bracket)|`<`|  \n|`>` (right angle bracket)|`>`|  \n|`\"` (double quotation marks)|`\"`|  \n|`&` (ampersand)|`&`|  \n|`\\` (backslash)|`\\`|  \n|ASCII characters from 160 to 255|`&#NNN;`, where `NNN` is the three-digit decimal character code|  \n  \n If you override the HtmlEncode method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes. This accommodates parsing by the Razor engine, where markup and code can be combined, such as \\<tag attr=\"@value\">. In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls HtmlEncode rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>."
  syntax:
    content: protected virtual void HtmlEncode (string value, System.IO.TextWriter output);
    parameters:
    - id: value
      type: System.String
      description: "エンコードする文字列。"
    - id: output
      type: System.IO.TextWriter
      description: "エンコードされた値を書き込むテキスト ライター。"
  overload: System.Web.Util.HttpEncoder.HtmlEncode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>output</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  id: JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "文字列をエンコードします。"
  remarks: "URL エンコードは、すべてのブラウザーが URL 文字列のテキストを正しく送信されることを確認します。 疑問符 (?)、アンパサンド (&) などの文字スラッシュ (/)、および空白の切り捨てやブラウザーによっては、破損している可能性があります。 したがって、これらの文字をエンコードする必要があります。"
  syntax:
    content: protected virtual string JavaScriptStringEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "エンコードする文字列。"
    return:
      type: System.String
      description: "エンコードされた文字列。"
  overload: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  id: UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "16 進数の文字エン ティティと同等に URL で許可されていない文字の配列をエンコードします。"
  remarks: "<xref:System.Web.HttpUtility>クラス</xref:System.Web.HttpUtility>のいくつかの URL エンコード方法によって UrlEncode メソッドが呼び出されます       URL エンコード UrlEncode メソッドではありません。 一連の ASCII 文字の任意の文字は、URL セーフであると見なされます。 スペースは、ASCII としてエンコード&quot;`+&quot;`文字です。 URL セーフな ASCII 文字が、ASCI 文字を含める (A ~ Z と z)、数字 (0 ~ 9)、および一部の区切り記号。 次の表には、URL セーフな ASCII 文字と見なされる区切り記号が一覧表示します。      |文字 |説明 |  |---------------|-----------------|  |-|ハイフン |  |_|アンダー スコア |  |.|ピリオド (ドット) |  |!|感嘆符 |  |*|アスタリスク (アスタリスク) |  |(|始めかっこ |  |)|閉じかっこ |"
  syntax:
    content: protected virtual byte[] UrlEncode (byte[] bytes, int offset, int count);
    parameters:
    - id: bytes
      type: System.Byte[]
      description: "エンコードするバイトの配列。"
    - id: offset
      type: System.Int32
      description: "内の位置、`bytes`エンコードを開始する配列。"
    - id: count
      type: System.Int32
      description: "内の項目数、`bytes`エンコードする配列。"
    return:
      type: System.Byte[]
      description: "エンコードされた文字の配列。"
  overload: System.Web.Util.HttpEncoder.UrlEncode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 の長さより大きいか小さい、<code>bytes</code>配列。       - または -<code>count</code>が&0; 未満または<code>count</code>plus<code>offset</code>がの長さより大きい、<code>bytes</code>配列。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>bytes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  id: UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  langs:
  - csharp
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "URL のサブセクションをエンコードします。"
  remarks: "UrlPathEncode メソッドによって呼び出されます、<xref:System.Web.HttpUtility.UrlPathEncode%2A>メソッド</xref:System.Web.HttpUtility.UrlPathEncode%2A>。 <xref:System.Web.HttpUtility.UrlPathEncode%2A>メソッドは、次の手順を実行します-(クエリ文字列を除く) を URL のパスの一部のみを UrlPathEncode メソッドのエンコーディングのロジックを適用します。</xref:System.Web.HttpUtility.UrlPathEncode%2A> 。 メソッドは、URL が、utf-8 文字列としてエンコードされていると仮定します。      -最初の 128 個の ASCII 文字のサブセットのみが結果として得られる、エンコードされた文字列で使用されるように、非空白文字をエンコードします。 128 と大きい、または 32 と小さい、Unicode 値で任意の文字では、URL エンコードです。      -20% として空白文字をエンコードします。"
  syntax:
    content: protected virtual string UrlPathEncode (string value);
    parameters:
    - id: value
      type: System.String
      description: "エンコードする文字列。"
    return:
      type: System.String
      description: "URL でエンコードされた文字列。"
  overload: System.Web.Util.HttpEncoder.UrlPathEncode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.Util.HttpEncoder.#ctor
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder()
  nameWithType: HttpEncoder.HttpEncoder()
  fullName: System.Web.Util.HttpEncoder.HttpEncoder()
- uid: System.Web.Util.HttpEncoder.Current
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
  fullName: System.Web.Util.HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder
  parent: System.Web.Util
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder
  fullName: System.Web.Util.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Default
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
  fullName: System.Web.Util.HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode(String,String,String,String)
  nameWithType: HttpEncoder.HeaderNameValueEncode(String,String,String,String)
  fullName: System.Web.Util.HttpEncoder.HeaderNameValueEncode(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlAttributeEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlAttributeEncode(String,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlDecode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlDecode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode(String,TextWriter)
  nameWithType: HttpEncoder.HtmlEncode(String,TextWriter)
  fullName: System.Web.Util.HttpEncoder.HtmlEncode(String,TextWriter)
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode(String)
  nameWithType: HttpEncoder.JavaScriptStringEncode(String)
  fullName: System.Web.Util.HttpEncoder.JavaScriptStringEncode(String)
- uid: System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode(Byte[],Int32,Int32)
  nameWithType: HttpEncoder.UrlEncode(Byte[],Int32,Int32)
  fullName: System.Web.Util.HttpEncoder.UrlEncode(Byte[],Int32,Int32)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.HttpEncoder.UrlPathEncode(System.String)
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode(String)
  nameWithType: HttpEncoder.UrlPathEncode(String)
  fullName: System.Web.Util.HttpEncoder.UrlPathEncode(String)
- uid: System.Web.Util.HttpEncoder.#ctor*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HttpEncoder
  nameWithType: HttpEncoder.HttpEncoder
- uid: System.Web.Util.HttpEncoder.Current*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Current
  nameWithType: HttpEncoder.Current
- uid: System.Web.Util.HttpEncoder.Default*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: Default
  nameWithType: HttpEncoder.Default
- uid: System.Web.Util.HttpEncoder.HeaderNameValueEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HeaderNameValueEncode
  nameWithType: HttpEncoder.HeaderNameValueEncode
- uid: System.Web.Util.HttpEncoder.HtmlAttributeEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlAttributeEncode
  nameWithType: HttpEncoder.HtmlAttributeEncode
- uid: System.Web.Util.HttpEncoder.HtmlDecode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlDecode
  nameWithType: HttpEncoder.HtmlDecode
- uid: System.Web.Util.HttpEncoder.HtmlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: HtmlEncode
  nameWithType: HttpEncoder.HtmlEncode
- uid: System.Web.Util.HttpEncoder.JavaScriptStringEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: JavaScriptStringEncode
  nameWithType: HttpEncoder.JavaScriptStringEncode
- uid: System.Web.Util.HttpEncoder.UrlEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlEncode
  nameWithType: HttpEncoder.UrlEncode
- uid: System.Web.Util.HttpEncoder.UrlPathEncode*
  parent: System.Web.Util.HttpEncoder
  isExternal: false
  name: UrlPathEncode
  nameWithType: HttpEncoder.UrlPathEncode
