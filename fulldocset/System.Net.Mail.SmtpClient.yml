### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.SmtpClient
  id: SmtpClient
  children:
  - System.Net.Mail.SmtpClient.#ctor
  - System.Net.Mail.SmtpClient.#ctor(System.String)
  - System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  - System.Net.Mail.SmtpClient.ClientCertificates
  - System.Net.Mail.SmtpClient.Credentials
  - System.Net.Mail.SmtpClient.DeliveryFormat
  - System.Net.Mail.SmtpClient.DeliveryMethod
  - System.Net.Mail.SmtpClient.Dispose
  - System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  - System.Net.Mail.SmtpClient.EnableSsl
  - System.Net.Mail.SmtpClient.Host
  - System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Net.Mail.SmtpClient.PickupDirectoryLocation
  - System.Net.Mail.SmtpClient.Port
  - System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  - System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  - System.Net.Mail.SmtpClient.SendAsyncCancel
  - System.Net.Mail.SmtpClient.SendCompleted
  - System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.ServicePoint
  - System.Net.Mail.SmtpClient.TargetName
  - System.Net.Mail.SmtpClient.Timeout
  - System.Net.Mail.SmtpClient.UseDefaultCredentials
  langs:
  - csharp
  name: SmtpClient
  nameWithType: SmtpClient
  fullName: System.Net.Mail.SmtpClient
  type: Class
  summary: "アプリケーションで簡易メール転送プロトコル (SMTP) を使用して電子メールを送信できます。"
  remarks: "The SmtpClient class is used to send e-mail to an SMTP server for delivery. The SMTP protocol is defined in RFC 2821, which is available at [http://www.ietf.org](http://www.ietf.org/).  \n  \n The classes shown in the following table are used to construct e-mail messages that can be sent using SmtpClient.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.Net.Mail.Attachment>|Represents file attachments. This class allows you to attach files, streams, or text to an e-mail message.|  \n|<xref:System.Net.Mail.MailAddress>|Represents the e-mail address of the sender and recipients.|  \n|<xref:System.Net.Mail.MailMessage>|Represents an e-mail message.|  \n  \n To construct and send an e-mail message by using SmtpClient, you must specify the following information:  \n  \n-   The SMTP host server that you use to send e-mail. See the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties.  \n  \n-   Credentials for authentication, if required by the SMTP server. See the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.  \n  \n-   The e-mail address of the sender. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `from` parameter. Also see the <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName> property.  \n  \n-   The e-mail address or addresses of the recipients. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `recipient` parameter. Also see the <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName> property.  \n  \n-   The message content. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `body` parameter. Also see the <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=fullName> property.  \n  \n To include an attachment with an e-mail message, first create the attachment by using the <xref:System.Net.Mail.Attachment> class, and then add it to the message by using the <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=fullName> property. Depending on the e-mail reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment. For clients that cannot display the attachment in its original form, you can specify alternate views by using the <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=fullName> property.  \n  \n You can use the application or machine configuration files to specify default host, port, and credentials values for all SmtpClient objects. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n To send the e-mail message and block while waiting for the e-mail to be transmitted to the SMTP server, use one of the synchronous <xref:System.Net.Mail.SmtpClient.Send%2A> methods. To allow your program's main thread to continue executing while the e-mail is transmitted, use one of the asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods. The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised when a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation completes. To receive this event, you must add a <xref:System.Net.Mail.SendCompletedEventHandler> delegate to <xref:System.Net.Mail.SmtpClient.SendCompleted>. The <xref:System.Net.Mail.SendCompletedEventHandler> delegate must reference a callback method that handles notification of <xref:System.Net.Mail.SmtpClient.SendCompleted> events. To cancel an asynchronous e-mail transmission, use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.  \n  \n> [!NOTE]\n>  If there is an e-mail transmission in progress and you call <xref:System.Net.Mail.SmtpClient.SendAsync%2A> or <xref:System.Net.Mail.SmtpClient.Send%2A> again, you will receive an <xref:System.InvalidOperationException>.  \n  \n The connection established by the current instance of the SmtpClient class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.  \n  \n The SmtpClient class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same SmtpClient object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the SmtpClient object and it should be cleaned up.  \n  \n When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.  \n  \n The SmtpClient class has no `Finalize` method, so an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.  \n  \n Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the SmtpClient. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the SmtpClient in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the SmtpClient so the garbage collector can reclaim the memory that the SmtpClient was occupying."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/t-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/t-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/t-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: 'public class SmtpClient : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor
  id: '#ctor'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>構成ファイルの設定を使用して、クラスです。"
  remarks: "このコンス トラクター、 <xref:System.Net.Mail.SmtpClient.Host%2A>、<xref:System.Net.Mail.SmtpClient.Credentials%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>、新しいプロパティ<xref:System.Net.Mail.SmtpClient>アプリケーションまたはマシン構成ファイルで設定を使用しています</xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Port%2A></xref:System.Net.Mail.SmtpClient.Credentials%2A></xref:System.Net.Mail.SmtpClient.Host%2A>。 詳細については、次を参照してください[ \\&lt; mailSettings\\&gt;。要素 (ネットワーク設定)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)です。"
  example:
  - "The following code example demonstrates sending an e-mail message.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_4_1.cs)]  \n  \n For an example of the \\<mailSettings> node in the application or machine configuration file, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  syntax:
    content: public SmtpClient ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>指定された SMTP サーバーを使用して電子メールを送信するクラス。"
  remarks: "The `host` parameter is used to initialize the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties are initialized by using the settings in the application or machine configuration files. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_1_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public SmtpClient (string host);
    parameters:
    - id: host
      type: System.String
      description: "A<xref:System.String>名前または SMTP トランザクションで使用されるホスト コンピューターの IP アドレスを格納している</xref:System.String>。"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>クラスにより、指定された SMTP サーバーとポートを使用して電子メールを送信します。"
  remarks: "The `host` and `port` parameters set the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties, respectively. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files. If `port` is zero, <xref:System.Net.Mail.SmtpClient.Port%2A> is initialized using the settings in the application or machine configuration files. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> property is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public SmtpClient (string host, int port);
    parameters:
    - id: host
      type: System.String
      description: "A<xref:System.String>名前または SMTP トランザクションで使用されるホストの IP アドレスを格納している</xref:System.String>。"
    - id: port
      type: System.Int32
      description: "<xref:System.Int32>で使用されるポートが含まれる&0; より大きい`host`</xref:System.Int32>。"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>port</code>0 未満できません。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "どの証明書は、Secure Sockets Layer (SSL) 接続を確立するために使用する必要がありますを指定します。"
  remarks: "クライアント証明書は、既定では省略可能です。ただし、サーバーの構成では、クライアントが最初の接続のネゴシエーションの一部として有効な証明書を提示することが必要です。      > [!NOTE] > The Framework SSL セッションが作成されるキャッシュし、新しい要求のキャッシュされているセッションを再利用可能であればしようとしています。 ClientCertificates (存在する場合) の最初の要素をフレームワークで使用するときに、SSL セッションを再利用する、または ClientCertificates がある場合は、匿名のセッションを再利用する試行が空です。"
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_3_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref>、1 つまたは複数のクライアント証明書を保持します。 既定値は、構成ファイルでメールの構成属性から派生します。"
  overload: System.Net.Mail.SmtpClient.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Credentials
  id: Credentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または送信者の認証に使用する資格情報を設定します。"
  remarks: "Some SMTP servers require that the client be authenticated before the server will send e-mail on its behalf. To use your default network credentials, you can set the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> to `true` instead of setting this property. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the Credentials property will be used for the credentials when connecting to the server. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the Credentials property has not been set, then mail is sent to the server anonymously.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using the Credentials property, this information overrides the configuration file settings.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates setting the credentials used to send an e-mail.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public System.Net.ICredentialsByHost Credentials { get; set; }
    return:
      type: System.Net.ICredentialsByHost
      description: "<xref:System.Net.ICredentialsByHost>; 認証を使用する資格情報を表すまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>資格情報が指定されていない場合</xref:System.Net.ICredentialsByHost>。"
  overload: System.Net.Mail.SmtpClient.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電子メールが送信されるときは、このプロパティの値を変更することはできません。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  id: DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または設定が使用する配信形式<xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref>電子メールを送信します。"
  syntax:
    content: public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryFormat
      description: "Returns <xref href=&quot;System.Net.Mail.SmtpDeliveryFormat&quot;></xref>.       使用される配信形式<xref href=&quot;System.Net.Mail.SmtpClient&quot;></xref>です。"
  overload: System.Net.Mail.SmtpClient.DeliveryFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  id: DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "どのように送信する電子メール メッセージの処理を指定します。"
  remarks: "配信方法があります:-SMTP サーバー。      -電子メールをピックアップ ディレクトリにメッセージを配信するには、IIS の移動。      -電子メールで指定されたディレクトリに移動する<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>別のアプリケーションによって後で配信する</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>。       このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。 加えられた変更、<xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>プロパティは、構成ファイルの設定をオーバーライドします</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>。"
  syntax:
    content: public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryMethod
      description: "<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref>電子メール メッセージの配信方法を示すです。"
  overload: System.Net.Mail.SmtpClient.DeliveryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose
  id: Dispose
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "SMTP サーバーに終了メッセージを送信、適切に TCP 接続を終了しの現在のインスタンスによって使用されるすべてのリソースを解放、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>クラスです。"
  remarks: "現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります</xref:System.Net.Mail.SmtpClient>。 これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。 認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。 同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。 大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。 また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。 一般的に、特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) の他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアント。       <xref:System.Net.Mail.SmtpClient>クラスの実装が同じサーバーへのすべてのメッセージに対して接続を再確立するオーバーヘッドを回避できます、SMTP 接続をプールします</xref:System.Net.Mail.SmtpClient>。 アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト</xref:System.Net.Mail.SmtpClient>。 その結果、アプリケーションが終了したときに決定する方法がない<xref:System.Net.Mail.SmtpClient>オブジェクトとその必要があるクリーンアップされました</xref:System.Net.Mail.SmtpClient>使用します。。       SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す QUIT メッセージを送信、必要があります。 これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。       Dispose メソッドを呼び出す、<xref:System.Net.Mail.SmtpClient>非同期で実行されているオブジェクト<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作には、送信操作は [キャンセル] かのよう、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドが呼び出された</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A></xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient>。       <xref:System.Net.Mail.SmtpClient>クラスを持たない`Finalize`メソッド</xref:System.Net.Mail.SmtpClient>。 アプリケーションを呼び出す必要がありますように<xref:System.Net.Mail.SmtpClient.Dispose%2A>リソースを明示的に解放する</xref:System.Net.Mail.SmtpClient.Dispose%2A>。       Dispose メソッドで指定された SMTP サーバーに確立されているすべての接続を反復処理、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティと、TCP 接続を正常に終了後に終了メッセージを送信します</xref:System.Net.Mail.SmtpClient.Host%2A>。 Dispose メソッドは、基になる<xref:System.Net.Sockets.Socket>。</xref:System.Net.Sockets.Socket>によって使用されているアンマネージ リソースも解放します。       <xref:System.Net.Mail.SmtpClient.Dispose%2A> <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient>の使用が終了したときに</xref:System.Net.Mail.SmtpClient.Dispose%2A>呼び出す <xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドによって、<xref:System.Net.Mail.SmtpClient>使用不可の状態</xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Dispose%2A>。 呼び出した後<xref:System.Net.Mail.SmtpClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Mail.SmtpClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Mail.SmtpClient>占有されていた</xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Dispose%2A>。       詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Net.Mail.SmtpClient.Dispose%2A><xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient>の最後の参照を解放する前に</xref:System.Net.Mail.SmtpClient.Dispose%2A>、必ず呼び出して。 それ以外の場合、ガベージ コレクターがメモリを再利用できるように、使用されているリソースは解放されません。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "終了メッセージを SMTP サーバーに送信 TCP 接続を終了、正常の現在のインスタンスによって使用されるすべてのリソースを解放、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>クラス、および必要に応じてマネージ リソースを破棄します。"
  remarks: "現在のインスタンスによって確立された接続、<xref:System.Net.Mail.SmtpClient>アプリケーションが同じの SMTP サーバーに複数のメッセージを送信したい場合は、SMTP サーバーへのクラスを再利用可能性があります</xref:System.Net.Mail.SmtpClient>。 これは、認証や暗号化を使用する場合、SMTP サーバーへの接続を確立します。 認証および TLS セッションを確立するプロセスは、高コストな操作を指定できます。 同じ SMTP サーバーに大量の電子メールを送信するときに、メッセージごとに接続を再確立するための要件は、パフォーマンスに大きな影響を与える可能性があります。 大量の電子メール アプリケーションを送信する電子メール ステータスの更新、ニュースレターの配布、または電子メールのアラートの数があります。 また多くの電子メール クライアント アプリケーション オフライン モードをサポート ユーザーが SMTP サーバーへの接続が確立されたときに後で送信される多くの電子メール メッセージを組み込むことができます。 一般的に、特定の SMTP サーバー (インターネット サービス プロバイダーによって提供される) の他の SMTP サーバーにこの電子メールを転送するすべての SMTP メッセージを送信する電子メール クライアント。       <xref:System.Net.Mail.SmtpClient>クラスの実装が同じサーバーへのすべてのメッセージに対して接続を再確立するオーバーヘッドを回避できます、SMTP 接続をプールします</xref:System.Net.Mail.SmtpClient>。 アプリケーションで再利用と同じことがあります<xref:System.Net.Mail.SmtpClient>同じの SMTP サーバーと多くの異なる SMTP サーバーには、多くのさまざまな電子メールを送信するオブジェクト</xref:System.Net.Mail.SmtpClient>。 その結果、アプリケーションが終了したときに決定する方法がない<xref:System.Net.Mail.SmtpClient>オブジェクトとその必要があるクリーンアップされました</xref:System.Net.Mail.SmtpClient>使用します。。       SMTP セッションが終了し、クライアントが接続を終了する、ときにをサーバーに送信するメッセージがなくなったことを示す QUIT メッセージを送信、必要があります。 これにより、クライアントからの接続に関連付けられているリソースを解放して、クライアントによって送信されたメッセージを処理するサーバー。       Dispose メソッドを呼び出す、<xref:System.Net.Mail.SmtpClient>非同期で実行されているオブジェクト<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作には、送信操作は [キャンセル] かのよう、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッドが呼び出された</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A></xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient>。       <xref:System.Net.Mail.SmtpClient>クラスを持たない`Finalize`メソッド</xref:System.Net.Mail.SmtpClient>。 アプリケーションを呼び出す必要がありますように<xref:System.Net.Mail.SmtpClient.Dispose%2A>リソースを明示的に解放する</xref:System.Net.Mail.SmtpClient.Dispose%2A>。       Dispose メソッドで指定された SMTP サーバーに確立されているすべての接続を反復処理、<xref:System.Net.Mail.SmtpClient.Host%2A>プロパティと、TCP 接続を正常に終了後に終了メッセージを送信します</xref:System.Net.Mail.SmtpClient.Host%2A>。 Dispose メソッドも、アンマネージ リソースを解放して使用される、<xref:System.Net.Sockets.Socket>オプションでマネージ リソースを破棄します</xref:System.Net.Sockets.Socket>。       <xref:System.Net.Mail.SmtpClient.Dispose%2A> <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient>の使用が終了したときに</xref:System.Net.Mail.SmtpClient.Dispose%2A>呼び出す <xref:System.Net.Mail.SmtpClient.Dispose%2A>メソッドによって、<xref:System.Net.Mail.SmtpClient>使用不可の状態</xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Dispose%2A>。 呼び出した後<xref:System.Net.Mail.SmtpClient.Dispose%2A>へのすべての参照を解放する必要があります、<xref:System.Net.Mail.SmtpClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Mail.SmtpClient>占有されていた</xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Dispose%2A>。       詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Net.Mail.SmtpClient.Dispose%2A><xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient>の最後の参照を解放する前に</xref:System.Net.Mail.SmtpClient.Dispose%2A>、必ず呼び出して。 それ以外の場合、ガベージ コレクターがメモリを再利用できるように、使用されているリソースは解放されません。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.EnableSsl
  id: EnableSsl
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "指定するかどうか、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>接続の暗号化に Secure Sockets Layer (SSL) を使用します。"
  remarks: "EnableSsl プロパティは、指定した SMTP メール サーバーへのアクセスに SSL が使用されるかどうかを指定します。       このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。 EnableSsl プロパティに加えられた変更は、構成ファイルの設定をオーバーライドします。       <xref:System.Net.Mail.SmtpClient>クラスのみをサポートしている SMTP サービスの拡張機能 smtp のセキュリティで保護されたトランスポート層セキュリティ経由で RFC 3207 で定義されている</xref:System.Net.Mail.SmtpClient>。 このモードでは、SMTP セッションが暗号化されていないチャネルで開始し、STARTTLS コマンドがクライアントで SSL を使用してセキュリティで保護された通信に切り替えるには、サーバーに発行します。 詳細についてはインターネット技術標準化委員会 (IETF) によって発行された RFC 3207 を参照してください。       代替の接続方法は、任意のプロトコル コマンドを送信する前の SSL セッションの前払いの確立です。 この接続方法は、SMTP と SSL と呼ばれることがあります、SMTP、SSL または SMTPS と既定では、ポート 465 を使用します。 SSL を使用してこの代替の接続方法は現在サポートされていません。       使用することができます<xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>SSL 接続を確立するためにクライアント証明書を使用する必要がありますを指定します</xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>。 <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>SMTP サーバーによって提供される証明書を拒否することができます</xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>。 <xref:System.Net.ServicePointManager.SecurityProtocol%2A>プロパティでは、使用する SSL プロトコルのバージョンを指定することができます</xref:System.Net.ServicePointManager.SecurityProtocol%2A>。      > [!NOTE] > EnableSsl プロパティ設定されている場合`true`、および SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出し、 <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException>をスローするメソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>または</xref:System.Net.Mail.SmtpClient.Send%2A>をアドバタイズしていません"
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> SSL を使用して、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.Mail.SmtpClient.EnableSsl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Host
  id: Host
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または、名前または SMTP トランザクションで使用されるホストの IP アドレスを設定します。"
  remarks: "The value of the Host property can also be set using constructors or the application or machine configuration file. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If information is specified using this property, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>名または SMTP トランザクションで使用するコンピューターの IP アドレスを格納している</xref:System.String>。"
  overload: System.Net.Mail.SmtpClient.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定操作は指定された値<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された設定操作と等しい値&lt;xref:System.String?displayProperty=fullName&gt; (&quot;&quot;) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電子メールが送信されるときは、このプロパティの値を変更することはできません。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "発生させる、 <xref href=&quot;System.Net.Mail.SmtpClient.SendCompleted&quot;> </xref>イベント。"
  remarks: "継承するクラス、<xref:System.Net.Mail.SmtpClient>クラスをオーバーライドして、OnSendCompleted メソッドを追加するときの操作、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベントが発生します</xref:System.Net.Mail.SmtpClient.SendCompleted></xref:System.Net.Mail.SmtpClient>。       OnSendCompleted では、派生クラスを処理することもできます<xref:System.Net.Mail.SmtpClient.SendCompleted>デリゲートを結び付けずにします</xref:System.Net.Mail.SmtpClient.SendCompleted>。 これは、<xref:System.Net.Mail.SmtpClient.SendCompleted>派生クラスで</xref:System.Net.Mail.SmtpClient.SendCompleted>処理するための手法をお勧め"
  syntax:
    content: protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "<xref:System.ComponentModel.AsyncCompletedEventArgs>イベント データを格納します</xref:System.ComponentModel.AsyncCompletedEventArgs>。"
  overload: System.Net.Mail.SmtpClient.OnSendCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  id: PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得またはアプリケーションがローカルの SMTP サーバーによって処理されるメッセージを保存するフォルダーを設定します。"
  remarks: "メール メッセージをピックアップ ディレクトリには、ローカル SMTP サーバー (存在する場合)、IIS などによって自動的に送信されます。       このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。 PickupDirectoryLocation プロパティに加えられた変更は、構成ファイルの設定をオーバーライドします。"
  syntax:
    content: public string PickupDirectoryLocation { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>メール メッセージ用のピックアップ ディレクトリを指定します</xref:System.String>。"
  overload: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Port
  id: Port
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または SMTP トランザクションで使用するポートを設定します。"
  remarks: "コンス トラクターまたは、アプリケーションまたはマシン構成ファイルを使用してポートのプロパティの値を設定することもできます。 構成ファイルの使用の詳細については、次を参照してください[ \\&lt; mailSettings\\&gt;。要素 (ネットワーク設定)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)です。 このプロパティを使用して情報を指定すると、この情報は、構成ファイル設定を上書きします。"
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_5_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_5_1.cs)]"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>SMTP ホスト上のポート番号を格納している</xref:System.Int32>。 既定値は 25 です。"
  overload: System.Net.Mail.SmtpClient.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "セット操作に対して指定された値を&0; に等しいまたはそれよりも小さいです。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電子メールが送信されるときは、このプロパティの値を変更することはできません。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  id: Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "指定したメッセージを配信用の SMTP サーバーに送信します。"
  remarks: "このメソッドは、電子メールの送信中にブロックします。 使用してタイムアウト値を指定することができます、<xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティを指定された時間が経過した後、メソッドを返すことを確認します</xref:System.Net.Mail.SmtpClient.Timeout%2A>。       このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティ設定する必要がいずれかの構成ファイルによって、関連するプロパティを設定するかにこの情報を渡すことによって、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクター</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> 。       非同期的に送信されるメッセージがある場合は、このメソッドを呼び出すことはできません。       SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。 資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティ</xref:System.Net.Mail.SmtpClient.Credentials%2A></xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>。       表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました</xref:System.Net.Mail.SmtpException.StatusCode%2A></xref:System.Net.Mail.SmtpException>。 <xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます</xref:System.Net.Mail.SmtpException>。       使用して電子メールを送信するときに<xref:System.Net.Mail.SmtpClient.Send%2A>を複数の受信者および SMTP サーバーとして有効な一部の受信者を受け取り、他のユーザーを拒否<xref:System.Net.Mail.SmtpClient.Send%2A>受理された受信者に電子メールを送信し、<xref:System.Net.Mail.SmtpFailedRecipientsException>がスローされます</xref:System.Net.Mail.SmtpFailedRecipientsException></xref:System.Net.Mail.SmtpClient.Send%2A></xref:System.Net.Mail.SmtpClient.Send%2A>。 例外は、拒否された受信者の一覧が含まれます。      > [!NOTE] > 場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出し、 <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException>をスローするメソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>または</xref:System.Net.Mail.SmtpClient.Send%2A>アドバタイズせず</xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates using this method.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public void Send (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref>送信するメッセージを格納しています。"
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "これは、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>が、 <> </> *> 通話中です。      - または - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt;は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。      - または - で指定された受信者がない&lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;、 &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;、および&lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;プロパティです。      -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<> *> は空の文字列 (&quot;&quot;) です。      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<xref:System.Net.Mail.SmtpClient.Port*>が 0、数値、または 65,535 より大きい負の値</xref:System.Net.Mail.SmtpClient.Port*>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "SMTP サーバーへの接続に失敗しました。       - または - 認証に失敗しました。       または、操作がタイムアウトします。       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - または -<xref:System.Net.Mail.SmtpClient.EnableSsl*>に設定されている<xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref>が SMTP メール サーバーが EHLO コマンドへの応答で STARTTLS をアドバタイズしませんでした</xref:System.Net.Mail.SmtpClient.EnableSsl*>。"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "<code> message </code>&1; つ以上の受信者に配信されませんでした&lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;、 &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;、または&lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  id: Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "指定した電子メール メッセージを配信用の SMTP サーバーに送信します。 メッセージの送信者、受信者、件名、およびメッセージ本文を使用して指定<xref:System.String>オブジェクト</xref:System.String>。"
  remarks: "このメソッドは、電子メールの送信中にブロックします。 使用してタイムアウト値を指定することができます、<xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティを指定された時間が経過した後、メソッドを返すことを確認します</xref:System.Net.Mail.SmtpClient.Timeout%2A>。       このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>プロパティ設定する必要がいずれかの構成ファイルによって、関連するプロパティを設定するかにこの情報を渡すことによって、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクター</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> 。       非同期的に送信されるメッセージがある場合は、このメソッドを呼び出すことはできません。       SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。 資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティ</xref:System.Net.Mail.SmtpClient.Credentials%2A></xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>。       表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました</xref:System.Net.Mail.SmtpException.StatusCode%2A></xref:System.Net.Mail.SmtpException>。 <xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます</xref:System.Net.Mail.SmtpException>。       使用して電子メールを送信するときに<xref:System.Net.Mail.SmtpClient.Send%2A>を複数の受信者および SMTP サーバーとして有効な一部の受信者を受け取り、他のユーザーを拒否<xref:System.Net.Mail.SmtpClient.Send%2A>受理された受信者に電子メールを送信し、<xref:System.Net.Mail.SmtpFailedRecipientsException>がスローされます</xref:System.Net.Mail.SmtpFailedRecipientsException></xref:System.Net.Mail.SmtpClient.Send%2A></xref:System.Net.Mail.SmtpClient.Send%2A>。 例外は、拒否された受信者の一覧が含まれます。      > [!NOTE] > 場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出し、 <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException>をスローするメソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>または</xref:System.Net.Mail.SmtpClient.Send%2A>アドバタイズせず</xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void Send (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A<xref:System.String>メッセージ送信者のアドレス情報を含む</xref:System.String>。"
    - id: recipients
      type: System.String
      description: "A<xref:System.String>にメッセージが送信されるアドレスを格納します</xref:System.String>。"
    - id: subject
      type: System.String
      description: "A<xref:System.String>メッセージの件名行を格納している</xref:System.String>。"
    - id: body
      type: System.String
      description: "A<xref:System.String>メッセージの本文を格納している</xref:System.String>。"
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipients</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "これは、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>が、 <> </> *> 通話中です。      -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<> *> は空の文字列と等しい (&quot;&quot;) です。      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<xref:System.Net.Mail.SmtpClient.Port*>が 0、数値、または 65,535 より大きい負の値</xref:System.Net.Mail.SmtpClient.Port*>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "SMTP サーバーへの接続に失敗しました。       - または - 認証に失敗しました。       または、操作がタイムアウトします。       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - または -<xref:System.Net.Mail.SmtpClient.EnableSsl*>に設定されている<xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref>が SMTP メール サーバーが EHLO コマンドへの応答で STARTTLS をアドバタイズしませんでした</xref:System.Net.Mail.SmtpClient.EnableSsl*>。"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "メッセージは、1 つまたは複数の受信者に配信されませんでした<code> recipients</code>です。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  id: SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "指定した電子メール メッセージを配信用の SMTP サーバーに送信します。 このメソッドは、呼び出し元のスレッドをブロックしませんし、オブジェクトを渡し、操作が完了したときに呼び出されるメソッドを呼び出し元を許可します。"
  remarks: "電子メールが送信されたか、操作が取り消されたときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベント</xref:System.Net.Mail.SmtpClient.SendCompleted>。 取り消すことができます、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作を呼び出して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッド</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A></xref:System.Net.Mail.SmtpClient.SendAsync%2A>。       <xref:System.Net.Mail.SmtpClient.SendAsync%2A>待つ必要があります<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>。</xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient.Send%2A>を使用して別の電子メール メッセージを送信する前に完了する電子メール送信用</xref:System.Net.Mail.SmtpClient.SendAsync%2A>の呼び出し後に       このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>関連のプロパティを設定してまたはこの情報を渡すことによって、構成ファイルによって設定する必要があります、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクター</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> 。       SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。 資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティ</xref:System.Net.Mail.SmtpClient.Credentials%2A></xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>。       表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました</xref:System.Net.Mail.SmtpException.StatusCode%2A></xref:System.Net.Mail.SmtpException>。 <xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます</xref:System.Net.Mail.SmtpException>。       使用して電子メールを送信するときに<xref:System.Net.Mail.SmtpClient.SendAsync%2A>SMTP サーバーの一部の受信者として有効なを承諾して、他のユーザーを拒否する場合、複数の受信者に、<xref:System.Net.Mail.SmtpException>でがスローされます、<xref:System.NullReferenceException>内部例外の</xref:System.NullReferenceException></xref:System.Net.Mail.SmtpException></xref:System.Net.Mail.SmtpClient.SendAsync%2A>。 この場合、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>受信者のいずれかに電子メールの送信に失敗します</xref:System.Net.Mail.SmtpClient.SendAsync%2A>。       アプリケーションは、確認するには、サーバー証明書の検証エラーを検出できます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>に渡されたプロパティ、<xref:System.Net.Mail.SendCompletedEventHandler>委任します</xref:System.Net.Mail.SendCompletedEventHandler></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。       <xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティは、何も影響はありません、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼び出します</xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient.Timeout%2A>。       SMTP サーバーに送信するときにメール、ブロックを送信するのいずれかの操作を使用して、<xref:System.Net.Mail.SmtpClient.Send%2A>メソッド</xref:System.Net.Mail.SmtpClient.Send%2A>。      > [!NOTE] > 場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出し、 <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException>をスローするメソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>または</xref:System.Net.Mail.SmtpClient.Send%2A>アドバタイズせず</xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/92b04d2f-ebb5-4da9-8cad-_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/92b04d2f-ebb5-4da9-8cad-_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/92b04d2f-ebb5-4da9-8cad-_1.vb)]"
  syntax:
    content: public void SendAsync (System.Net.Mail.MailMessage message, object userToken);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref>送信するメッセージを格納しています。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。"
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt;は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "これは、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>が、 <> </> *> 通話中です。      - または - で指定された受信者がない&lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;、 &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;、および&lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;プロパティです。      -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<> *> は空の文字列 (&quot;&quot;) です。      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<xref:System.Net.Mail.SmtpClient.Port*>が 0、数値、または 65,535 より大きい負の値</xref:System.Net.Mail.SmtpClient.Port*>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "SMTP サーバーへの接続に失敗しました。       - または - 認証に失敗しました。       または、操作がタイムアウトします。       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - または -<xref:System.Net.Mail.SmtpClient.EnableSsl*>に設定されている<xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref>が SMTP メール サーバーが EHLO コマンドへの応答で STARTTLS をアドバタイズしませんでした</xref:System.Net.Mail.SmtpClient.EnableSsl*>。       - または -、 <code> message </code>&1; つまたは複数の受信者に配信されませんでした&lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;、 &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;、または&lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  id: SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "配信用の SMTP サーバーに電子メール メッセージを送信します。 メッセージの送信者、受信者、件名、およびメッセージ本文を使用して指定<xref:System.String>オブジェクト</xref:System.String>。 このメソッドは、呼び出し元のスレッドをブロックしませんし、オブジェクトを渡し、操作が完了したときに呼び出されるメソッドを呼び出し元を許可します。"
  remarks: "電子メールが送信されたか、操作が取り消されたときに通知を受信するイベント ハンドラーを追加、<xref:System.Net.Mail.SmtpClient.SendCompleted>イベント</xref:System.Net.Mail.SmtpClient.SendCompleted>。 取り消すことができます、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作を呼び出して、<xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>メソッド</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A></xref:System.Net.Mail.SmtpClient.SendAsync%2A>。       <xref:System.Net.Mail.SmtpClient.SendAsync%2A>待つ必要があります<xref:System.Net.Mail.SmtpClient.Send%2A>または<xref:System.Net.Mail.SmtpClient.SendAsync%2A>。</xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient.Send%2A>を使用して別の電子メール メッセージを送信する前に完了する電子メール送信用</xref:System.Net.Mail.SmtpClient.SendAsync%2A>の呼び出し後に       このメソッドを呼び出す前に、<xref:System.Net.Mail.SmtpClient.Host%2A>と<xref:System.Net.Mail.SmtpClient.Port%2A>構成ファイルを使用するか、プロパティを設定またはこの情報を渡すことによって、プロパティを設定する必要があります、<xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>コンス トラクター</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> 。       SMTP ホストには、資格情報が必要とする場合は、このメソッドを呼び出す前に設定する必要があります。 資格情報を指定するには、使用、<xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>または<xref:System.Net.Mail.SmtpClient.Credentials%2A>プロパティ</xref:System.Net.Mail.SmtpClient.Credentials%2A></xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>。       表示された場合、<xref:System.Net.Mail.SmtpException>例外、チェック、<xref:System.Net.Mail.SmtpException.StatusCode%2A>理由を操作を確認するプロパティが失敗しました</xref:System.Net.Mail.SmtpException.StatusCode%2A></xref:System.Net.Mail.SmtpException>。 <xref:System.Net.Mail.SmtpException>操作失敗した理由を示す内部例外を含めることもできます</xref:System.Net.Mail.SmtpException>。       使用して電子メールを送信するときに<xref:System.Net.Mail.SmtpClient.SendAsync%2A>SMTP サーバーの一部の受信者として有効なを承諾して、他のユーザーを拒否する場合、複数の受信者に、<xref:System.Net.Mail.SmtpException>でがスローされます、<xref:System.NullReferenceException>内部例外の</xref:System.NullReferenceException></xref:System.Net.Mail.SmtpException></xref:System.Net.Mail.SmtpClient.SendAsync%2A>。 この場合、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>受信者のいずれかに電子メールの送信に失敗します</xref:System.Net.Mail.SmtpClient.SendAsync%2A>。       アプリケーションは、確認するには、サーバー証明書の検証エラーを検出できます、<xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>に渡されたプロパティ、<xref:System.Net.Mail.SendCompletedEventHandler>委任します</xref:System.Net.Mail.SendCompletedEventHandler></xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>。       <xref:System.Net.Mail.SmtpClient.Timeout%2A>プロパティは、何も影響はありません、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>呼び出します</xref:System.Net.Mail.SmtpClient.SendAsync%2A></xref:System.Net.Mail.SmtpClient.Timeout%2A>。       SMTP サーバーに送信するときにメール、ブロックを送信するのいずれかの操作を使用して、<xref:System.Net.Mail.SmtpClient.Send%2A>メソッド</xref:System.Net.Mail.SmtpClient.Send%2A>。      > [!NOTE] > 場合、<xref:System.Net.Mail.SmtpClient.EnableSsl%2A>プロパティに設定されている`true`、SMTP メール サーバーが、EHLO への応答で STARTTLS コマンドは、その後への呼び出し、 <xref:System.Net.Mail.SmtpClient.Send%2A> <xref:System.Net.Mail.SmtpClient.SendAsync%2A> <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException>をスローするメソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>または</xref:System.Net.Mail.SmtpClient.Send%2A>アドバタイズせず</xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void SendAsync (string from, string recipients, string subject, string body, object userToken);
    parameters:
    - id: from
      type: System.String
      description: "A<xref:System.String>メッセージ送信者のアドレス情報を含む</xref:System.String>。"
    - id: recipients
      type: System.String
      description: "A<xref:System.String>にメッセージが送信されるアドレスを格納している</xref:System.String>。"
    - id: subject
      type: System.String
      description: "A<xref:System.String>メッセージの件名行を格納している</xref:System.String>。"
    - id: body
      type: System.String
      description: "A<xref:System.String>メッセージの本文を格納している</xref:System.String>。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるユーザー定義のオブジェクト。"
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipient</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipient</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "これは、 <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>が、 <> </> *> 通話中です。      -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<> *> は空の文字列と等しい (&quot;&quot;) です。      - または - <> </> *> プロパティに設定されている<xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>と<xref:System.Net.Mail.SmtpClient.Port*>が 0、数値、または 65,535 より大きい負の値</xref:System.Net.Mail.SmtpClient.Port*>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "SMTP サーバーへの接続に失敗しました。       - または - 認証に失敗しました。       または、操作がタイムアウトします。       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - または -<xref:System.Net.Mail.SmtpClient.EnableSsl*>に設定されている<xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;></xref>が SMTP メール サーバーが EHLO コマンドへの応答で STARTTLS をアドバタイズしませんでした</xref:System.Net.Mail.SmtpClient.EnableSsl*>。       または、メッセージは、1 つまたは複数の受信者に配信されませんでした<code> recipients</code>です。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "電子メール メッセージを送信する非同期操作をキャンセルします。"
  remarks: "SendAsyncCancel メソッド [キャンセル] を使用して、保留中<xref:System.Net.Mail.SmtpClient.SendAsync%2A>操作</xref:System.Net.Mail.SmtpClient.SendAsync%2A>。 メールの送信を待機している場合は、このメソッドは、メールの格納に使用されているリソースを解放します。 メールの送信を待機しているがない場合は、このメソッドは何も行いません。"
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously. The user has the option to cancel the mail if it has not been sent.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_3_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_3_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/m-system.net.mail.smtpcl_3_1.vb)]"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.SendAsyncCancel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendCompleted
  id: SendCompleted
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "非同期の電子メール送信操作が完了したときに発生します。"
  remarks: "送信操作が完了したら、電子メール メッセージが非同期で送信するたびに SendCompleted イベントが発生します。 電子メール メッセージを非同期的に送信するを使用して、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>。       <xref:System.Net.Mail.SendCompletedEventHandler>SendCompleted のデリゲートがします。</xref:System.Net.Mail.SendCompletedEventHandler> <xref:System.ComponentModel.AsyncCompletedEventArgs>クラスには、イベント データを持つイベント ハンドラーが用意されています</xref:System.ComponentModel.AsyncCompletedEventArgs>。"
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/e-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/e-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/e-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: public event System.Net.Mail.SendCompletedEventHandler SendCompleted;
    return:
      type: System.Net.Mail.SendCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  id: SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "非同期操作として配信用の SMTP サーバーを指定したメッセージを送信します。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>> オブジェクトは、メッセージが送信された後、完了します</xref:System.Threading.Tasks.Task>。"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "A <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref>送信するメッセージを格納しています。"
    return:
      type: System.Threading.Tasks.Task
      description: "<xref:System.Threading.Tasks.Task>。</xref:System.Threading.Tasks.Task>を返します。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  id: SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "非同期操作として配信用の SMTP サーバーを指定したメッセージを送信します。 。 メッセージの送信者、受信者、件名、およびメッセージ本文を使用して指定<xref:System.String>オブジェクト</xref:System.String>。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task>> オブジェクトは、メッセージが送信された後、完了します</xref:System.Threading.Tasks.Task>。"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "A<xref:System.String>メッセージ送信者のアドレス情報を含む</xref:System.String>。"
    - id: recipients
      type: System.String
      description: "A<xref:System.String>にメッセージが送信されるアドレスを格納します</xref:System.String>。"
    - id: subject
      type: System.String
      description: "A<xref:System.String>メッセージの件名行を格納している</xref:System.String>。"
    - id: body
      type: System.String
      description: "A<xref:System.String>メッセージの本文を格納している</xref:System.String>。"
    return:
      type: System.Threading.Tasks.Task
      description: "<xref:System.Threading.Tasks.Task>。</xref:System.Threading.Tasks.Task>を返します。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String.Empty>.       -or-       <code>recipients</code> is <xref:System.String.Empty>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ServicePoint
  id: ServicePoint
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "電子メール メッセージの送信に使用するネットワーク接続を取得します。"
  remarks: "ServicePoint プロパティの設定は、アプリケーションまたはマシン構成ファイルと<xref:System.Net.ServicePointManager>クラス</xref:System.Net.ServicePointManager>に指定された既定値を使用して作成されます。"
  example:
  - "The following code example demonstrates accessing the ServicePoint property.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_7_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_7_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "A <xref href=&quot;System.Net.ServicePoint&quot;> </xref>に接続する、 <xref:System.Net.Mail.SmtpClient.Host*>SMTP に使用されるプロパティ</xref:System.Net.Mail.SmtpClient.Host*>。"
  overload: System.Net.Mail.SmtpClient.ServicePoint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<>*> は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列 (&quot;&quot;) です。      -or-       <>*> is zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.TargetName
  id: TargetName
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または拡張保護を使用する場合は、認証に使用するサービス プロバイダー名 (SPN) を設定します。"
  remarks: "TargetName プロパティは統合 Windows 認証で、アプリケーションが拡張保護を使用しているときに使用します。 <xref:System.Net.Mail.SmtpClient>に資格情報のチャレンジ応答サービス固有の情報 (SPN) が含まれてし、必要に応じて、チャネル固有の拡張保護を提供できますし、チャネル バインディング トークン (CBT) の情報</xref:System.Net.Mail.SmtpClient>。 資格情報の交換にこの情報は、サービスが不正に取得した資格情報のチャレンジ応答の悪用に対する保護を強化することです。       このプロパティの既定値は、マシン内でも設定できますまたはアプリケーション構成ファイル。 TargetName プロパティに加えられた変更は、構成ファイルの設定をオーバーライドします。"
  syntax:
    content: public string TargetName { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>拡張保護に使用する SPN を指定します</xref:System.String>。 この SPN を既定値は、の形式が&quot;SMTPSVC/&lt;ホスト&gt;&quot;場所&lt;ホスト&gt;が SMTP メール サーバーのホスト名です。"
  overload: System.Net.Mail.SmtpClient.TargetName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Timeout
  id: Timeout
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "これまでの時間を指定する値の設定を取得または同期<xref:System.Net.Mail.SmtpClient.Send*>呼び出しがタイムアウトします</xref:System.Net.Mail.SmtpClient.Send*>。"
  remarks: "既定では、呼び出し、<xref:System.Net.Mail.SmtpClient.Send%2A>操作が完了するまでブロックするメソッド</xref:System.Net.Mail.SmtpClient.Send%2A>。 正の値に、タイムアウト プロパティを設定した場合、 <xref:System.Net.Mail.SmtpClient.Send%2A>、割り当てられた時間で操作を完了できません、<xref:System.Net.Mail.SmtpClient>クラスがスローされます、<xref:System.Net.Mail.SmtpException>例外です</xref:System.Net.Mail.SmtpException></xref:System.Net.Mail.SmtpClient></xref:System.Net.Mail.SmtpClient.Send%2A>。       メッセージを送信し、アプリケーションのスレッドで実行を継続してを使用して、<xref:System.Net.Mail.SmtpClient.SendAsync%2A>メソッド</xref:System.Net.Mail.SmtpClient.SendAsync%2A>。"
  example:
  - "The following code example demonstrates getting and setting the time-out value.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_6_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_6_1.cs)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>ミリ秒でタイムアウト値を指定する</xref:System.Int32>。 既定値は、100,000 (100 秒) です。"
  overload: System.Net.Mail.SmtpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定操作が指定された値が&0; 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電子メールが送信されるときは、このプロパティの値を変更することはできません。"
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "取得または設定、<xref:System.Boolean>値を制御するのかどうか、<xref:System.Net.CredentialCache.DefaultCredentials*>要求と共に送信されます</xref:System.Net.CredentialCache.DefaultCredentials*></xref:System.Boolean>。"
  remarks: "Some SMTP servers require that the client be authenticated before the server sends e-mail on its behalf. Set this property to `true` when this <xref:System.Net.Mail.SmtpClient> object should, if requested by the server, authenticate using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If the UseDefaultCredentials property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server. If the UseDefaultCredentials property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_4_1.cs)]"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は既定の資格情報が使用されます。それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "電子メールが送信されるときは、このプロパティの値を変更することはできません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Mail.SmtpException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpException
  nameWithType: SmtpException
  fullName: System.Net.Mail.SmtpException
- uid: System.Net.Mail.SmtpFailedRecipientsException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpFailedRecipientsException
  nameWithType: SmtpFailedRecipientsException
  fullName: System.Net.Mail.SmtpFailedRecipientsException
- uid: System.Net.Mail.SmtpClient.#ctor
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Mail.SmtpClient.Credentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: true
  name: ICredentialsByHost
  nameWithType: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpDeliveryFormat
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryFormat
  nameWithType: SmtpDeliveryFormat
  fullName: System.Net.Mail.SmtpDeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpDeliveryMethod
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryMethod
  nameWithType: SmtpDeliveryMethod
  fullName: System.Net.Mail.SmtpDeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.SmtpClient.EnableSsl
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
- uid: System.Net.Mail.MailMessage
  parent: System.Net.Mail
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
- uid: System.Net.Mail.SmtpClient.SendCompleted
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
- uid: System.Net.Mail.SendCompletedEventHandler
  parent: System.Net.Mail
  isExternal: false
  name: SendCompletedEventHandler
  nameWithType: SendCompletedEventHandler
  fullName: System.Net.Mail.SendCompletedEventHandler
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.ServicePoint
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
- uid: System.Net.Mail.SmtpClient.#ctor*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient
  nameWithType: SmtpClient.SmtpClient
- uid: System.Net.Mail.SmtpClient.ClientCertificates*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
- uid: System.Net.Mail.SmtpClient.Credentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
- uid: System.Net.Mail.SmtpClient.DeliveryFormat*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose
  nameWithType: SmtpClient.Dispose
- uid: System.Net.Mail.SmtpClient.EnableSsl*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted
  nameWithType: SmtpClient.OnSendCompleted
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send
  nameWithType: SmtpClient.Send
- uid: System.Net.Mail.SmtpClient.SendAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync
  nameWithType: SmtpClient.SendAsync
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel
  nameWithType: SmtpClient.SendAsyncCancel
- uid: System.Net.Mail.SmtpClient.SendMailAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync
  nameWithType: SmtpClient.SendMailAsync
- uid: System.Net.Mail.SmtpClient.ServicePoint*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
