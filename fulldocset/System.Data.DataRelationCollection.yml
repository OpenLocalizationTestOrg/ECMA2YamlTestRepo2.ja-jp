### YamlMime:ManagedReference
items:
- uid: System.Data.DataRelationCollection
  id: DataRelationCollection
  children:
  - System.Data.DataRelationCollection.#ctor
  - System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  - System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  - System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  - System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  - System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Clear
  - System.Data.DataRelationCollection.CollectionChanged
  - System.Data.DataRelationCollection.Contains(System.String)
  - System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  - System.Data.DataRelationCollection.GetDataSet
  - System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  - System.Data.DataRelationCollection.IndexOf(System.String)
  - System.Data.DataRelationCollection.Item(System.Int32)
  - System.Data.DataRelationCollection.Item(System.String)
  - System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  - System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  - System.Data.DataRelationCollection.Remove(System.String)
  - System.Data.DataRelationCollection.RemoveAt(System.Int32)
  - System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  langs:
  - csharp
  name: DataRelationCollection
  nameWithType: DataRelationCollection
  fullName: System.Data.DataRelationCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Data.DataRelation&quot;></xref>オブジェクト<xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  remarks: "DataRelationCollection オブジェクトにより、関連する親/子の間のナビゲーション<xref:System.Data.DataTable>オブジェクト</xref:System.Data.DataTable>。       いずれかのプロパティとして定義して DataRelationCollection オブジェクトを作成する、<xref:System.Data.DataSet>または<xref:System.Data.DataTable>の代わりに直接コンス トラクターを使用しています</xref:System.Data.DataTable></xref:System.Data.DataSet>。 (を使用して、<xref:System.Data.DataSet.Relations%2A>のプロパティ、 <xref:System.Data.DataSet>、または<xref:System.Data.DataTable.ParentRelations%2A>のプロパティ、 <xref:System.Data.DataTable>.)</xref:System.Data.DataTable> </xref:System.Data.DataTable.ParentRelations%2A> </xref:System.Data.DataSet> </xref:System.Data.DataSet.Relations%2A>     コレクションにアクセスするには、使用、<xref:System.Data.DataSet.Relations%2A>のプロパティ、<xref:System.Data.DataSet>オブジェクト</xref:System.Data.DataSet></xref:System.Data.DataSet.Relations%2A>。       などのメソッドを使用して、含まれているオブジェクトを管理することができます、コレクションが存在するとすぐに<xref:System.Data.DataRelationCollection.Add%2A>、 <xref:System.Data.DataRelationCollection.Clear%2A>、 <xref:System.Data.DataRelationCollection.Remove%2A></xref:System.Data.DataRelationCollection.Remove%2A> </xref:System.Data.DataRelationCollection.Clear%2A> </xref:System.Data.DataRelationCollection.Add%2A> 。"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.DefaultProperty("Table")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataRelationCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public abstract class DataRelationCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.List
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataRelationCollection.#ctor
  id: '#ctor'
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.DataRelationCollection&quot;> </xref>クラスです。"
  syntax:
    content: protected DataRelationCollection ();
    parameters: []
  overload: System.Data.DataRelationCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  id: Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adds a <xref href=&quot;System.Data.DataRelation&quot;></xref> to the <xref href=&quot;System.Data.DataRelationCollection&quot;></xref>."
  remarks: "リレーションシップが正しく、このコレクションに追加された場合、<xref:System.Data.DataRelationCollection.CollectionChanged>イベントが発生します</xref:System.Data.DataRelationCollection.CollectionChanged>。       ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  syntax:
    content: public void Add (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>コレクションに追加します。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code>パラメーターが null の値。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、既にがこのコレクションに属しているか、別のコレクションに属しています。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "コレクションには既にには、指定の名前を持つリレーションシップが含まれています。 (比較では大文字と小文字が区別されません) です。"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "作成されてから、リレーションシップは無効な状態になりました。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>で指定した親と子列では、コレクションに追加します。"
  remarks: "ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: parentColumn
      type: System.Data.DataColumn
      description: "リレーションシップの親列です。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "リレーションシップの子列です。"
    return:
      type: System.Data.DataRelation
      description: "作成されたリレーションシップです。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定した親と子列を含むコレクションに追加します。"
  remarks: "ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  syntax:
    content: public virtual System.Data.DataRelation Add (System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "リレーションシップの親列です。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "リレーションシップの子列です。"
    return:
      type: System.Data.DataRelation
      description: "作成されたリレーションシップです。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> relation </code>引数が null の値。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、既にがこのコレクションに属しているか、別のコレクションに属しています。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "コレクションには既にには、同じ名前のリレーションシップが含まれています。 (比較では大文字と小文字が区別されません) です。"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "作成されてから、リレーションシップは無効な状態になりました。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定した名前と親と子列を含むコレクションに追加します。"
  remarks: "ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn);
    parameters:
    - id: name
      type: System.String
      description: "リレーションシップの名前。"
    - id: parentColumn
      type: System.Data.DataColumn
      description: "リレーションシップの親列です。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "リレーションシップの子列です。"
    return:
      type: System.Data.DataRelation
      description: "作成されたリレーションシップです。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定した名前と親と子の列の配列を使用し、コレクションに追加します。"
  remarks: "リレーションシップが正しく、このコレクションに追加された場合、<xref:System.Data.DataRelationCollection.CollectionChanged>イベントが発生します</xref:System.Data.DataRelationCollection.CollectionChanged>。       ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  example:
  - >-
    [!code-vb[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/visualbasic/6b73537f-f1c2-4f94-8352-_1.vb)]
     [!code-cs[Classic WebData DataRelationCollection.Add1 Example#1](~/add/codesnippet/csharp/6b73537f-f1c2-4f94-8352-_1.cs)]
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>を作成します。"
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "親の配列<xref href=&quot;System.Data.DataColumn&quot;></xref>オブジェクト。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "子の配列<xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;></xref>オブジェクト。"
    return:
      type: System.Data.DataRelation
      description: "作成された<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "リレーションシップ名は、null 値です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、既にがこのコレクションに属しているか、別のコレクションに属しています。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "コレクションには既にには、同じ名前のリレーションシップが含まれています。 (比較では大文字と小文字が区別されません) です。"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "作成されてから、リレーションシップは無効な状態になりました。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定された名前、親と子列に、省略可能な制約の値に基づいて、 <code> createConstraints </code>パラメーター、コレクションに追加します。"
  remarks: "ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。 これを回避するには、するには設定`createConstraints`を false に設定します。"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn parentColumn, System.Data.DataColumn childColumn, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "リレーションシップの名前。"
    - id: parentColumn
      type: System.Data.DataColumn
      description: "リレーションシップの親列です。"
    - id: childColumn
      type: System.Data.DataColumn
      description: "リレーションシップの子列です。"
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>制約を作成するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 (既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)。"
    return:
      type: System.Data.DataRelation
      description: "作成されたリレーションシップです。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "作成、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定された名前、親と子列、および制約を作成するかどうかを指定する値の配列をコレクションに追加します。"
  remarks: "ときに、<xref:System.Data.DataRelation>オブジェクトが、このコレクションに追加された<xref:System.Data.ForeignKeyConstraint>と<xref:System.Data.UniqueConstraint>まだ存在しない場合、既定でオブジェクトを作成します</xref:System.Data.UniqueConstraint></xref:System.Data.ForeignKeyConstraint></xref:System.Data.DataRelation>。"
  syntax:
    content: public virtual System.Data.DataRelation Add (string name, System.Data.DataColumn[] parentColumns, System.Data.DataColumn[] childColumns, bool createConstraints);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>を作成します。"
    - id: parentColumns
      type: System.Data.DataColumn[]
      description: "親の配列<xref href=&quot;System.Data.DataColumn&quot;></xref>オブジェクト。"
    - id: childColumns
      type: System.Data.DataColumn[]
      description: "子の配列<xref uid=&quot;langword_csharp_DataColumn&quot; name=&quot;DataColumn&quot; href=&quot;&quot;></xref>オブジェクト。"
    - id: createConstraints
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>制約を作成するにはそれ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Data.DataRelation
      description: "作成されたリレーションシップです。"
  overload: System.Data.DataRelationCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "リレーションシップ名は、null 値です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、既にがこのコレクションに属しているか、別のコレクションに属しています。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "コレクションには既にには、同じ名前のリレーションシップが含まれています。 (比較では大文字と小文字が区別されません) です。"
  - type: System.Data.InvalidConstraintException
    commentId: T:System.Data.InvalidConstraintException
    description: "作成されてから、リレーションシップは無効な状態になりました。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  id: AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "テーブルで検証を実行します。"
  syntax:
    content: protected virtual void AddCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "確認するリレーションシップ。"
  overload: System.Data.DataRelationCollection.AddCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "リレーションシップが null です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、既にがこのコレクションに属しているか、別のコレクションに属しています。"
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "コレクションには既にには、同じ名前のリレーションシップが含まれています。 (比較では大文字と小文字が区別されません) です。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  id: AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定した要素をコピー <xref href=&quot;System.Data.DataRelation&quot;> </xref>コレクションの末尾までの配列。"
  remarks: "場合<xref:System.Data.DataSet.BeginInit%2A>が呼び出されて`AddRange`までコレクションに任意のオブジェクトを追加しません<xref:System.Data.DataSet.EndInit%2A>と呼びます</xref:System.Data.DataSet.EndInit%2A></xref:System.Data.DataSet.BeginInit%2A>。 時を`EndInit`が呼び出されると、コレクションが設定されますを最新の呼び出しで指定された項目`AddRange`。 場合`AddRange`内で複数回を呼び出すが、 `BeginInit`  /  `EndInit`シーケンス、最新の呼び出しで指定された項目のみ`AddRange`追加されます。"
  example:
  - >-
    [!code-cs[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.datarelati_0_1.cs)]
     [!code-vb[Classic WebData DataRelationCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.datarelati_0_1.vb)]
  syntax:
    content: public virtual void AddRange (System.Data.DataRelation[] relations);
    parameters:
    - id: relations
      type: System.Data.DataRelation[]
      description: "配列<xref href=&quot;System.Data.DataRelation&quot;></xref>コレクションに追加するオブジェクト。"
  overload: System.Data.DataRelationCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  id: CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "確認するかどうか、指定した<xref href=&quot;System.Data.DataRelation&quot;></xref>コレクションから削除することができます。"
  syntax:
    content: public virtual bool CanRemove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "に対してチェックを実行するリレーションシップ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>削除された、それ以外は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.DataRelationCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Clear
  id: Clear
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "リレーションシップのコレクションをクリアします。"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Data.DataRelationCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "コレクションが変更されたときに発生します。"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "確認するかどうか、 <xref href=&quot;System.Data.DataRelation&quot;> </xref> (大文字と小文字) の特定の名前、コレクション内に存在します。"
  syntax:
    content: public virtual bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のリレーションシップの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、指定した名前のリレーションシップが存在する場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.DataRelationCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  id: CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "コレクションをコピー <xref href=&quot;System.Data.DataRelation&quot;> </xref>オブジェクトの指定したインデックスから始まります。"
  syntax:
    content: public void CopyTo (System.Data.DataRelation[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataRelation[]
      description: "配列<xref href=&quot;System.Data.DataRelation&quot;></xref>にコレクションをコピーするオブジェクト。"
    - id: index
      type: System.Int32
      description: "開始するインデックス。"
  overload: System.Data.DataRelationCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.GetDataSet
  id: GetDataSet
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "このメソッドは、.NET Framework インフラストラクチャをサポートし、コードから直接使用するものではありません。"
  syntax:
    content: protected abstract System.Data.DataSet GetDataSet ();
    parameters: []
    return:
      type: System.Data.DataSet
      description: "参照データセットです。"
  overload: System.Data.DataRelationCollection.GetDataSet*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  id: IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定したインデックスを取得<xref href=&quot;System.Data.DataRelation&quot;></xref>オブジェクト。"
  syntax:
    content: public virtual int IndexOf (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "検索するリレーションシップ。"
    return:
      type: System.Int32
      description: "リレーション、またはコレクション内の関係が見つからない場合は、-1 0 から始まるインデックス。"
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "インデックスを取得、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>名で指定します。"
  syntax:
    content: public virtual int IndexOf (string relationName);
    parameters:
    - id: relationName
      type: System.String
      description: "検索対象のリレーションシップの名前。"
    return:
      type: System.Int32
      description: "指定された名前、またはコレクション内の関係が存在しない場合は-1 のリレーションシップの&0; から始まるインデックス。"
  overload: System.Data.DataRelationCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>指定したインデックスにあるオブジェクト。"
  syntax:
    content: public abstract System.Data.DataRelation this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックスを検索します。"
    return:
      type: System.Data.DataRelation
      description: "<xref href=&quot;System.Data.DataRelation&quot;> </xref>、Null の場合は値または指定した<xref href=&quot;System.Data.DataRelation&quot;></xref>存在しません。"
  overload: System.Data.DataRelationCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "インデックス値は、コレクション内の項目の数を超えています。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、 <xref href=&quot;System.Data.DataRelation&quot;> </xref>名で指定されたオブジェクト。"
  syntax:
    content: public abstract System.Data.DataRelation this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "検索対象のリレーションシップの名前。"
    return:
      type: System.Data.DataRelation
      description: "名前付き<xref href=&quot;System.Data.DataRelation&quot;> </xref>、null の場合は値または指定した<xref href=&quot;System.Data.DataRelation&quot;></xref>存在しません。"
  overload: System.Data.DataRelationCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "発生させる、 <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref>イベント。"
  remarks: 'イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。'
  syntax:
    content: protected virtual void OnCollectionChanged (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Data.DataRelationCollection.OnCollectionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  id: OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "発生させる、 <xref href=&quot;System.Data.DataRelationCollection.CollectionChanged&quot;> </xref>イベント。"
  remarks: 'イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 概要については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。'
  syntax:
    content: protected virtual void OnCollectionChanging (System.ComponentModel.CollectionChangeEventArgs ccevent);
    parameters:
    - id: ccevent
      type: System.ComponentModel.CollectionChangeEventArgs
      description: "A <xref href=&quot;System.ComponentModel.CollectionChangeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Data.DataRelationCollection.OnCollectionChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  id: Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定したリレーションシップをコレクションから削除します。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>削除操作が成功した場合、イベントが発生した</xref:System.Data.DataRelationCollection.CollectionChanged>。 リレーションシップを削除しても、関連付けられている制約オブジェクトは削除されませんに注意してください。"
  syntax:
    content: public void Remove (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "削除するリレーションシップ。"
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "リレーションシップは、null 値です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "リレーションシップは、コレクションには属していません。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定した名前のリレーションシップをコレクションから削除します。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>削除操作が成功した場合、イベントが発生した</xref:System.Data.DataRelationCollection.CollectionChanged>。"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "削除するリレーションシップの名前。"
  overload: System.Data.DataRelationCollection.Remove*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "コレクションには、指定した名前のリレーションシップはありません。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定したインデックス位置にあるリレーションシップをコレクションから削除します。"
  remarks: "<xref:System.Data.DataRelationCollection.CollectionChanged>削除操作が成功した場合、イベントが発生した</xref:System.Data.DataRelationCollection.CollectionChanged>。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "削除するリレーションシップのインデックス。"
  overload: System.Data.DataRelationCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "コレクションには、指定したインデックス位置にある関係がありません。"
  platform:
  - net462
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  id: RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  langs:
  - csharp
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "指定した検証を実行<xref href=&quot;System.Data.DataRelation&quot;></xref>オブジェクト。"
  syntax:
    content: protected virtual void RemoveCore (System.Data.DataRelation relation);
    parameters:
    - id: relation
      type: System.Data.DataRelation
      description: "<xref uid=&quot;langword_csharp_DataRelation&quot; name=&quot;DataRelation&quot; href=&quot;&quot;> </xref>ことを確認するオブジェクト。"
  overload: System.Data.DataRelationCollection.RemoveCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "コレクションには、指定したインデックス位置にある関係がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定されたリレーションシップは、このコレクションに属していませんまたは別のコレクションに属しています。"
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidConstraintException
  parent: System.Data
  isExternal: false
  name: InvalidConstraintException
  nameWithType: InvalidConstraintException
  fullName: System.Data.InvalidConstraintException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataRelationCollection.#ctor
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection()
  nameWithType: DataRelationCollection.DataRelationCollection()
  fullName: System.Data.DataRelationCollection.DataRelationCollection()
- uid: System.Data.DataRelationCollection.Add(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataRelation)
  nameWithType: DataRelationCollection.Add(DataRelation)
  fullName: System.Data.DataRelationCollection.Add(DataRelation)
- uid: System.Data.DataRelation
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(DataColumn,DataColumn)
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRelationCollection.Add(System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(DataColumn[],DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn,System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn,Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn,DataColumn,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataRelationCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[],System.Boolean)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[],Boolean)
  nameWithType: DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
  fullName: System.Data.DataRelationCollection.Add(String,DataColumn[],DataColumn[],Boolean)
- uid: System.Data.DataRelationCollection.AddCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore(DataRelation)
  nameWithType: DataRelationCollection.AddCore(DataRelation)
  fullName: System.Data.DataRelationCollection.AddCore(DataRelation)
- uid: System.Data.DataRelationCollection.AddRange(System.Data.DataRelation[])
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange(DataRelation[])
  nameWithType: DataRelationCollection.AddRange(DataRelation[])
  fullName: System.Data.DataRelationCollection.AddRange(DataRelation[])
- uid: System.Data.DataRelation[]
  parent: System.Data
  isExternal: false
  name: DataRelation
  nameWithType: DataRelation
  fullName: System.Data.DataRelation[]
  spec.csharp:
  - uid: System.Data.DataRelation
    name: DataRelation
    nameWithType: DataRelation
    fullName: DataRelation[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataRelationCollection.CanRemove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove(DataRelation)
  nameWithType: DataRelationCollection.CanRemove(DataRelation)
  fullName: System.Data.DataRelationCollection.CanRemove(DataRelation)
- uid: System.Data.DataRelationCollection.Clear
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear()
  nameWithType: DataRelationCollection.Clear()
  fullName: System.Data.DataRelationCollection.Clear()
- uid: System.Data.DataRelationCollection.CollectionChanged
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataRelationCollection.CollectionChanged
  fullName: System.Data.DataRelationCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataRelationCollection.Contains(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataRelationCollection.Contains(String)
  fullName: System.Data.DataRelationCollection.Contains(String)
- uid: System.Data.DataRelationCollection.CopyTo(System.Data.DataRelation[],System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo(DataRelation[],Int32)
  nameWithType: DataRelationCollection.CopyTo(DataRelation[],Int32)
  fullName: System.Data.DataRelationCollection.CopyTo(DataRelation[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRelationCollection.GetDataSet
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet()
  nameWithType: DataRelationCollection.GetDataSet()
  fullName: System.Data.DataRelationCollection.GetDataSet()
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.DataRelationCollection.IndexOf(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(DataRelation)
  nameWithType: DataRelationCollection.IndexOf(DataRelation)
  fullName: System.Data.DataRelationCollection.IndexOf(DataRelation)
- uid: System.Data.DataRelationCollection.IndexOf(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataRelationCollection.IndexOf(String)
  fullName: System.Data.DataRelationCollection.IndexOf(String)
- uid: System.Data.DataRelationCollection.Item(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataRelationCollection.Item(Int32)
  fullName: System.Data.DataRelationCollection.Item(Int32)
- uid: System.Data.DataRelationCollection.Item(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataRelationCollection.Item(String)
  fullName: System.Data.DataRelationCollection.Item(String)
- uid: System.Data.DataRelationCollection.OnCollectionChanged(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanged(CollectionChangeEventArgs)
- uid: System.ComponentModel.CollectionChangeEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventArgs
  nameWithType: CollectionChangeEventArgs
  fullName: System.ComponentModel.CollectionChangeEventArgs
- uid: System.Data.DataRelationCollection.OnCollectionChanging(System.ComponentModel.CollectionChangeEventArgs)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging(CollectionChangeEventArgs)
  nameWithType: DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
  fullName: System.Data.DataRelationCollection.OnCollectionChanging(CollectionChangeEventArgs)
- uid: System.Data.DataRelationCollection.Remove(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(DataRelation)
  nameWithType: DataRelationCollection.Remove(DataRelation)
  fullName: System.Data.DataRelationCollection.Remove(DataRelation)
- uid: System.Data.DataRelationCollection.Remove(System.String)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataRelationCollection.Remove(String)
  fullName: System.Data.DataRelationCollection.Remove(String)
- uid: System.Data.DataRelationCollection.RemoveAt(System.Int32)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataRelationCollection.RemoveAt(Int32)
  fullName: System.Data.DataRelationCollection.RemoveAt(Int32)
- uid: System.Data.DataRelationCollection.RemoveCore(System.Data.DataRelation)
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore(DataRelation)
  nameWithType: DataRelationCollection.RemoveCore(DataRelation)
  fullName: System.Data.DataRelationCollection.RemoveCore(DataRelation)
- uid: System.Data.DataRelationCollection.#ctor*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: DataRelationCollection
  nameWithType: DataRelationCollection.DataRelationCollection
- uid: System.Data.DataRelationCollection.Add*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Add
  nameWithType: DataRelationCollection.Add
- uid: System.Data.DataRelationCollection.AddCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddCore
  nameWithType: DataRelationCollection.AddCore
- uid: System.Data.DataRelationCollection.AddRange*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: AddRange
  nameWithType: DataRelationCollection.AddRange
- uid: System.Data.DataRelationCollection.CanRemove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataRelationCollection.CanRemove
- uid: System.Data.DataRelationCollection.Clear*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Clear
  nameWithType: DataRelationCollection.Clear
- uid: System.Data.DataRelationCollection.Contains*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Contains
  nameWithType: DataRelationCollection.Contains
- uid: System.Data.DataRelationCollection.CopyTo*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataRelationCollection.CopyTo
- uid: System.Data.DataRelationCollection.GetDataSet*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: GetDataSet
  nameWithType: DataRelationCollection.GetDataSet
- uid: System.Data.DataRelationCollection.IndexOf*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataRelationCollection.IndexOf
- uid: System.Data.DataRelationCollection.Item*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Item
  nameWithType: DataRelationCollection.Item
- uid: System.Data.DataRelationCollection.OnCollectionChanged*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanged
  nameWithType: DataRelationCollection.OnCollectionChanged
- uid: System.Data.DataRelationCollection.OnCollectionChanging*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: OnCollectionChanging
  nameWithType: DataRelationCollection.OnCollectionChanging
- uid: System.Data.DataRelationCollection.Remove*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: Remove
  nameWithType: DataRelationCollection.Remove
- uid: System.Data.DataRelationCollection.RemoveAt*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataRelationCollection.RemoveAt
- uid: System.Data.DataRelationCollection.RemoveCore*
  parent: System.Data.DataRelationCollection
  isExternal: false
  name: RemoveCore
  nameWithType: DataRelationCollection.RemoveCore
