### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DateTimeConverter
  id: DateTimeConverter
  children:
  - System.ComponentModel.DateTimeConverter.#ctor
  - System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: DateTimeConverter
  nameWithType: DateTimeConverter
  fullName: System.ComponentModel.DateTimeConverter
  type: Class
  summary: "変換する型コンバーターを提供<xref:System.DateTime>オブジェクトとの間のさまざまな表現</xref:System.DateTime>。"
  remarks: "このコンバーターが変換できるのみ、<xref:System.DateTime>オブジェクトと文字列の間</xref:System.DateTime>。       <xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>メソッドを使用、<xref:System.DateTime.Parse%2A>のメソッド、 <xref:System.DateTime>、文字列に変換するクラス</xref:System.DateTime></xref:System.DateTime.Parse%2A></xref:System.ComponentModel.TypeConverter.ConvertFrom%2A>。       <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>場合、メソッドは、現在のカルチャを使用して、<xref:System.Globalization.CultureInfo>が指定されていない</xref:System.Globalization.CultureInfo></xref:System.ComponentModel.TypeConverter.ConvertTo%2A>。 一般に、<xref:System.ComponentModel.TypeConverter.ConvertTo%2A>を使用して、<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>日付の書式設定するプロパティと<xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A>で、<xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A>日付と時刻の書式を設定するプロパティ</xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A></xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A></xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A></xref:System.ComponentModel.TypeConverter.ConvertTo%2A>。 場合、<xref:System.Globalization.CultureInfo.InvariantCulture%2A>プロパティが渡されると、 <xref:System.ComponentModel.TypeConverter.ConvertTo%2A>yyyy mm dd を使用して、日付の書式と<xref:System.Object.ToString%2A>日付と時刻の書式を設定します</xref:System.Object.ToString%2A></xref:System.ComponentModel.TypeConverter.ConvertTo%2A></xref:System.Globalization.CultureInfo.InvariantCulture%2A>。       型コンバーターの詳細については、次を参照してください、<xref:System.ComponentModel.TypeConverter>基底クラスと[する方法: 実行する型コンバーターを実装する](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.TypeConverter> 。      > [!NOTE] > 決して DateTimeConverter のインスタンスを作成する必要があります。 代わりに、<xref:System.ComponentModel.TypeDescriptor.GetConverter%2A><xref:System.ComponentModel.TypeDescriptor>クラス</xref:System.ComponentModel.TypeDescriptor>のメソッド</xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>を呼び出す 詳細については、<xref:System.ComponentModel.TypeConverter>基底クラス</xref:System.ComponentModel.TypeConverter>の例を参照してください。"
  example:
  - "The following code example converts a variable of type <xref:System.DateTime> to a string, and vice versa.  \n  \n [!code-cs[Converters#9](~/add/codesnippet/csharp/t-system.componentmodel._111_1.cs)]\n [!code-vb[Converters#9](~/add/codesnippet/visualbasic/t-system.componentmodel._111_1.vb)]\n [!code-cpp[Converters#9](~/add/codesnippet/cpp/t-system.componentmodel._111_1.cpp)]"
  syntax:
    content: 'public class DateTimeConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.DateTimeConverter.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DateTimeConverter
  langs:
  - csharp
  name: DateTimeConverter()
  nameWithType: DateTimeConverter.DateTimeConverter()
  fullName: System.ComponentModel.DateTimeConverter.DateTimeConverter()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.DateTimeConverter&quot;> </xref>クラスです。"
  syntax:
    content: public DateTimeConverter ();
    parameters: []
  overload: System.ComponentModel.DateTimeConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した型のオブジェクトをこのコンバーターが変換できるかどうかを示す値を取得、<xref:System.DateTime>指定のコンテキストを使用します</xref:System.DateTime>。"
  remarks: "このコンバーターが変換できるのみ、<xref:System.DateTime>文字列との間</xref:System.DateTime>。       `context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、 `null`、ので、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す`null`です。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>から変換する型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このオブジェクトは、変換を実行できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.DateTimeConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このコンバーターが、オブジェクトをコンテキストを使用して目的の型に変換できるかどうかを示す値を取得します。"
  remarks: "`context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、 `null`、ので、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す`null`です。"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: destinationType
      type: System.Type
      description: "A<xref:System.Type>に変換する型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このコンバーターが変換を実行できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.DateTimeConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.DateTimeConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した値オブジェクトを<xref:System.DateTime>。</xref:System.DateTime>に変換します。"
  remarks: "このコンバーターが変換できるのみ、<xref:System.DateTime>文字列との間</xref:System.DateTime>。       `context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、 `null`、ので、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す`null`です。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "省略可能な<xref:System.Globalization.CultureInfo>。</xref:System.Globalization.CultureInfo> 指定しない場合、現在のカルチャが使用されます。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    return:
      type: System.Object
      description: "<xref:System.Object>を表す、変換された<code> value </code></xref:System.Object> 。"
  overload: System.ComponentModel.DateTimeConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code>対象の型の有効な値はありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "変換を実行することはできません。"
  platform:
  - net462
- uid: System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した値オブジェクトに変換、 <xref:System.DateTime>、引数を使用します</xref:System.DateTime>。"
  remarks: "このコンバーターが変換できるのみ、<xref:System.DateTime>文字列との間</xref:System.DateTime>。       `context`からこのコンバーターが呼び出されている環境に関する追加情報を抽出するパラメーターを使用することができます。 これは、 `null`、ので、常に確認します。 また、コンテキスト オブジェクトのプロパティを返す`null`です。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "省略可能な<xref:System.Globalization.CultureInfo>。</xref:System.Globalization.CultureInfo> 指定しない場合、現在のカルチャが使用されます。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>を値に変換します</xref:System.Type>。"
    return:
      type: System.Object
      description: "<xref:System.Object>を表す、変換された<code> value </code></xref:System.Object> 。"
  overload: System.ComponentModel.DateTimeConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "変換を実行することはできません。"
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.DateTimeConverter.#ctor
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: DateTimeConverter()
  nameWithType: DateTimeConverter.DateTimeConverter()
  fullName: System.ComponentModel.DateTimeConverter.DateTimeConverter()
- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.DateTimeConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.DateTimeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.DateTimeConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.DateTimeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.DateTimeConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.DateTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.DateTimeConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.DateTimeConverter.#ctor*
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: DateTimeConverter
  nameWithType: DateTimeConverter.DateTimeConverter
- uid: System.ComponentModel.DateTimeConverter.CanConvertFrom*
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DateTimeConverter.CanConvertFrom
- uid: System.ComponentModel.DateTimeConverter.CanConvertTo*
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: DateTimeConverter.CanConvertTo
- uid: System.ComponentModel.DateTimeConverter.ConvertFrom*
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DateTimeConverter.ConvertFrom
- uid: System.ComponentModel.DateTimeConverter.ConvertTo*
  parent: System.ComponentModel.DateTimeConverter
  isExternal: false
  name: ConvertTo
  nameWithType: DateTimeConverter.ConvertTo
