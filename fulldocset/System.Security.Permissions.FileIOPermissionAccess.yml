### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileIOPermissionAccess
  id: FileIOPermissionAccess
  children:
  - System.Security.Permissions.FileIOPermissionAccess.AllAccess
  - System.Security.Permissions.FileIOPermissionAccess.Append
  - System.Security.Permissions.FileIOPermissionAccess.NoAccess
  - System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  - System.Security.Permissions.FileIOPermissionAccess.Read
  - System.Security.Permissions.FileIOPermissionAccess.Write
  langs:
  - csharp
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
  type: Enum
  summary: "要求されたファイル アクセスの種類を指定します。"
  remarks: "この列挙は、<xref:System.Security.Permissions.FileIOPermission>クラス</xref:System.Security.Permissions.FileIOPermission>で使用します。      > [!NOTE] > が NoAccess と AllAccess FileIOPermissionAccess のメンバーであるが、これらのパラメーターとして使用する有効なは<xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>説明しているのでないファイル アクセスの種類またはすべてのファイル アクセスの種類では、それぞれ、および<xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>は&1; つのファイル アクセスの種類が必要です</xref:System.Security.Permissions.FileIOPermission.GetPathList%2A></xref:System.Security.Permissions.FileIOPermission.GetPathList%2A>。      > [!NOTE] > 書き込む提供アセンブリへのアクセスは完全信頼を与えることに似ています。 ファイル システムにアプリケーションを記述する必要がありますいない場合の書き込みアクセスは必要ありません。"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum FileIOPermissionAccess
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  id: AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ファイルまたはディレクトリへのアクセスを読み取り、書き込み、および PathDiscovery を追加します。 AllAccess が FileIOPermissionAccess の複数の値を表し、原因、<xref:System.ArgumentException>として使用する場合、 <code> access </code>のパラメーター、<xref:System.Security.Permissions.FileIOPermission.GetPathList*>メソッドで、1 つの値が必要です</xref:System.Security.Permissions.FileIOPermission.GetPathList*></xref:System.ArgumentException>。"
  syntax:
    content: AllAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  id: Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ファイルまたはディレクトリに資料を追加するアクセスします。 追加のアクセスには、新しいファイルまたはディレクトリを作成する機能が含まれています。"
  remarks: >-
    > [!NOTE]

    >  To create files, code must also be granted both Append and either Write or Read access. For more detail see <xref:System.IO.FileMode>.
  syntax:
    content: Append
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  id: NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ファイルまたはディレクトリにアクセスできません。 NoAccess FileIOPermissionAccess の有効な値を表すありませんし、<xref:System.ArgumentException>のパラメーターとして使用すると<xref:System.Security.Permissions.FileIOPermission.GetPathList*>、1 つの値を受け取る</xref:System.Security.Permissions.FileIOPermission.GetPathList*></xref:System.ArgumentException>。"
  syntax:
    content: NoAccess
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  id: PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "パス自体の情報にアクセスします。 これにより、ユーザー名など、パス内の機密情報だけでなく、パスで暴露されるディレクトリ構造についての情報を保護します。 この値は、ファイルまたはパスによって表されるフォルダーへのアクセスを付与しません。"
  remarks: >-
    > [!NOTE]

    >  For performance reasons, `PathDiscovery` should only be granted to directories, not to files. For example, `PathDiscovery` permission should be granted to paths such as C:\test and C:\test\\, not C:\test\example.txt.
  syntax:
    content: PathDiscovery
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  id: Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "ファイルまたはディレクトリから読み取りアクセス権。"
  syntax:
    content: Read
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  id: Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  langs:
  - csharp
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "書き込み、ファイルまたはディレクトリを削除またはへのアクセス。 書き込みアクセスには、削除して、ファイルまたはディレクトリを上書きしてが含まれています。"
  syntax:
    content: Write
    return:
      type: System.Security.Permissions.FileIOPermissionAccess
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.FileIOPermissionAccess.AllAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: AllAccess
  nameWithType: FileIOPermissionAccess.AllAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.AllAccess
- uid: System.Security.Permissions.FileIOPermissionAccess
  parent: System.Security.Permissions
  isExternal: false
  name: FileIOPermissionAccess
  nameWithType: FileIOPermissionAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.Append
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Append
  nameWithType: FileIOPermissionAccess.Append
  fullName: System.Security.Permissions.FileIOPermissionAccess.Append
- uid: System.Security.Permissions.FileIOPermissionAccess.NoAccess
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: NoAccess
  nameWithType: FileIOPermissionAccess.NoAccess
  fullName: System.Security.Permissions.FileIOPermissionAccess.NoAccess
- uid: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: PathDiscovery
  nameWithType: FileIOPermissionAccess.PathDiscovery
  fullName: System.Security.Permissions.FileIOPermissionAccess.PathDiscovery
- uid: System.Security.Permissions.FileIOPermissionAccess.Read
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Read
  nameWithType: FileIOPermissionAccess.Read
  fullName: System.Security.Permissions.FileIOPermissionAccess.Read
- uid: System.Security.Permissions.FileIOPermissionAccess.Write
  parent: System.Security.Permissions.FileIOPermissionAccess
  isExternal: false
  name: Write
  nameWithType: FileIOPermissionAccess.Write
  fullName: System.Security.Permissions.FileIOPermissionAccess.Write
