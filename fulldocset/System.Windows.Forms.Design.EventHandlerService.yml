### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Design.EventHandlerService
  id: EventHandlerService
  children:
  - System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  - System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  - System.Windows.Forms.Design.EventHandlerService.FocusWindow
  - System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  - System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  - System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  langs:
  - csharp
  name: EventHandlerService
  nameWithType: EventHandlerService
  fullName: System.Windows.Forms.Design.EventHandlerService
  type: Class
  summary: "現在のドキュメントのイベント ハンドラーを管理する体系的な方法を提供します。"
  remarks: "開発者は、特定の種類のイベントを処理する&1; つの場所にコードを記述できるようにすることがあります。       また、開発者は、グローバルに特定のイベントの種類がデザイナーのコンポーネント間で配布されるイベントのハンドラーの動作を変更する必要があります。       一般的なプロジェクト用のデザイナーを一覧表示し、共通の場所からこれらのイベントへの参照を格納すると便利にするための多くのさまざまなオブジェクトです。       このサービスは、&quot;イベント&quot;が格納されるスタックのイベント ハンドラーの現在のセットを実装します。 スタック、スタックのさまざまな異なる種類のハンドラーがあります。       たとえば、デザイナーは、プッシュ、または、キーボード ハンドラーと、スタック上にマウスのハンドラーを追加します。 デザイナーでは、イベント ハンドラーを要求するときにサービスは要求したクラスに一致するスタックの最上位のハンドラーを見つけます。       こうすると、サービスは、任意のイベント スキームに拡張でき、特定の種類のイベント ハンドラーを置き換えることもできます。 たとえば、イベント ハンドラーのメニューやキーボード イベント ハンドラーの影響を与えずにマウス イベント ハンドラーを置き換えることができます。"
  syntax:
    content: public sealed class EventHandlerService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  id: '#ctor(System.Windows.Forms.Control)'
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.Design.EventHandlerService&quot;> </xref>クラスです。"
  syntax:
    content: public EventHandlerService (System.Windows.Forms.Control focusWnd);
    parameters:
    - id: focusWnd
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>されるなっています。"
  overload: System.Windows.Forms.Design.EventHandlerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  id: EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "OnEventHandlerChanged イベントを発生させます。"
  syntax:
    content: public event EventHandler EventHandlerChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  id: FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  type: Property
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "イベント ハンドラーが関連付けられているコントロールを取得します。"
  syntax:
    content: public System.Windows.Forms.Control FocusWindow { get; }
    return:
      type: System.Windows.Forms.Control
      description: "<xref href=&quot;System.Windows.Forms.Control&quot;> </xref>がコンス トラクターで接続されています。"
  overload: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  id: GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "指定した型の現在アクティブなイベント ハンドラーを取得します。"
  remarks: "他のコンポーネントは自由に変更するために、この値をキャッシュする必要があることはありません。 この呼び出しは、常に同じ種類のハンドラーを要求している場合に特にただしで非常に高速です。"
  syntax:
    content: public object GetHandler (Type handlerType);
    parameters:
    - id: handlerType
      type: System.Type
      description: "取得するハンドラーの型。"
    return:
      type: System.Object
      description: "ハンドラーのインスタンスまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>要求された種類のハンドラーがない場合。"
  overload: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  id: PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "によって指定されたハンドラーをスタックからポップされます。"
  remarks: "ハンドラーがスタックの最上位のコンポーネントでない場合は、すべてのハンドラーをしてそのハンドラーこれが表示されます。"
  syntax:
    content: public void PopHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "スタックから削除するハンドラー。"
  overload: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  id: PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  langs:
  - csharp
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Windows.Forms.Design
  summary: "新しいイベント ハンドラーをスタックにプッシュします。"
  remarks: "このハンドラーは、互換性のあるハンドラーの型を要求するすべてのコンポーネントが使用されます。 このハンドラーが要求された型をサポートしていない場合は、スタック上の次のハンドラーが使用されます。"
  syntax:
    content: public void PushHandler (object handler);
    parameters:
    - id: handler
      type: System.Object
      description: "スタックに追加するハンドラー。"
  overload: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService(Control)
  nameWithType: EventHandlerService.EventHandlerService(Control)
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerService(Control)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerChanged
  nameWithType: EventHandlerService.EventHandlerChanged
  fullName: System.Windows.Forms.Design.EventHandlerService.EventHandlerChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
  fullName: System.Windows.Forms.Design.EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler(System.Type)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler(Type)
  nameWithType: EventHandlerService.GetHandler(Type)
  fullName: System.Windows.Forms.Design.EventHandlerService.GetHandler(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler(Object)
  nameWithType: EventHandlerService.PopHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PopHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler(System.Object)
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler(Object)
  nameWithType: EventHandlerService.PushHandler(Object)
  fullName: System.Windows.Forms.Design.EventHandlerService.PushHandler(Object)
- uid: System.Windows.Forms.Design.EventHandlerService.#ctor*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: EventHandlerService
  nameWithType: EventHandlerService.EventHandlerService
- uid: System.Windows.Forms.Design.EventHandlerService.FocusWindow*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: FocusWindow
  nameWithType: EventHandlerService.FocusWindow
- uid: System.Windows.Forms.Design.EventHandlerService.GetHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: GetHandler
  nameWithType: EventHandlerService.GetHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PopHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PopHandler
  nameWithType: EventHandlerService.PopHandler
- uid: System.Windows.Forms.Design.EventHandlerService.PushHandler*
  parent: System.Windows.Forms.Design.EventHandlerService
  isExternal: false
  name: PushHandler
  nameWithType: EventHandlerService.PushHandler
