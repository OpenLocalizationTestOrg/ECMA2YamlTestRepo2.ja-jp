### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  id: SslSecurityTokenParameters
  children:
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean)
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean,System.Boolean)
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication
  - System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString
  langs:
  - csharp
  name: SslSecurityTokenParameters
  nameWithType: SslSecurityTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  type: Class
  summary: "サーバーで SOAP レベルの SSL プロトコルを実施する際に取得される SSL セキュリティ トークンのパラメーターを表します。"
  remarks: "このクラスは、トークン用プロパティとメソッドのコレクションがあり、セキュリティ バインディング要素とトークンの作成に使用されます。"
  syntax:
    content: 'public class SslSecurityTokenParameters : System.ServiceModel.Security.Tokens.SecurityTokenParameters'
  inheritance:
  - System.ServiceModel.Security.Tokens.SecurityTokenParameters
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SslSecurityTokenParameters()
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.SslSecurityTokenParameters&quot;> </xref>クラスです。"
  remarks: "新しいインスタンス プロパティ値が既定値に設定されます- <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>。</xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>に設定されている</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A>。      - <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>.</xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>に設定されています。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A>      -   <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A> is set to `true`.</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A>"
  syntax:
    content: public SslSecurityTokenParameters ();
    parameters: []
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SslSecurityTokenParameters(Boolean)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.SslSecurityTokenParameters&quot;> </xref>クラスです。"
  remarks: "新しいインスタンス プロパティ値が既定値に設定されます- <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>。</xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>に設定されている</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A>。      - <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>.</xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>に設定されています。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A>      -   <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A> is set to `true`.</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A>       <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>設定されている`false`です。</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>       <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A>設定されている`requireClientCertificate`です。</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A>"
  syntax:
    content: public SslSecurityTokenParameters (bool requireClientCertificate);
    parameters:
    - id: requireClientCertificate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアント証明書を要求するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)
  id: '#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)'
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SslSecurityTokenParameters(SslSecurityTokenParameters)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(SslSecurityTokenParameters)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(SslSecurityTokenParameters)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.SslSecurityTokenParameters&quot;> </xref>別のインスタンスからのクラスです。"
  remarks: "新しいインスタンス プロパティの値が対応する値に設定されます`other`です。"
  syntax:
    content: protected SslSecurityTokenParameters (System.ServiceModel.Security.Tokens.SslSecurityTokenParameters other);
    parameters:
    - id: other
      type: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
      description: "このクラスの他のインスタンス。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>other</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SslSecurityTokenParameters(Boolean,Boolean)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean,Boolean)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.SslSecurityTokenParameters&quot;> </xref>クラスです。"
  remarks: "新しいインスタンス プロパティ値が既定値に設定されます- <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>。</xref:System.ServiceModel.Security.Tokens.SecurityTokenInclusionMode>に設定されている</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.InclusionMode%2A>。      - <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A> <xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>.</xref:System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle>に設定されています。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.ReferenceStyle%2A>      -   <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A> is set to `true`.</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.RequireDerivedKeys%2A>       <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>設定されている`requireCancellation`です。</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>       <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A>設定されている`requireClientCertificate`です。</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A>"
  syntax:
    content: public SslSecurityTokenParameters (bool requireClientCertificate, bool requireCancellation);
    parameters:
    - id: requireClientCertificate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアント証明書を要求するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: requireCancellation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャンセルを要求するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore
  id: CloneCore
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: CloneCore()
  nameWithType: SslSecurityTokenParameters.CloneCore()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "クラスのこのインスタンスの別のインスタンスを複製します。"
  remarks: "<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A>と<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A>メソッドが、コア デザイン パターンに従います</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A></xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.Clone%2A>。 CloneCore <xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A>。</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters.CloneCore%2A>をオーバーライドします       CloneCore メソッドの呼び出し、<xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.%23ctor%2A>コンス トラクター</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.%23ctor%2A> 。"
  syntax:
    content: protected override System.ServiceModel.Security.Tokens.SecurityTokenParameters CloneCore ();
    parameters: []
    return:
      type: System.ServiceModel.Security.Tokens.SecurityTokenParameters
      description: "A<xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>コピーを表すインスタンス</xref:System.ServiceModel.Security.Tokens.SecurityTokenParameters>。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)
  id: CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
  nameWithType: SslSecurityTokenParameters.CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "トークンのキー識別子句を作成します。"
  remarks: "このメソッドは、使用してキー識別句を作成、<xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>メソッドで`referenceStyle`ジェネリック パラメーターとして</xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A>。"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityKeyIdentifierClause CreateKeyIdentifierClause (System.IdentityModel.Tokens.SecurityToken token, System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle referenceStyle);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "トークンです。"
    - id: referenceStyle
      type: System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle
      description: "セキュリティ トークンの参照スタイルです。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "トークンのキー識別句。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>token</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>referenceStyle</code>is not <xref uid=&quot;langword_csharp_External&quot; name=&quot;External&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_Internal&quot; name=&quot;Internal&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey
  id: HasAsymmetricKey
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: HasAsymmetricKey
  nameWithType: SslSecurityTokenParameters.HasAsymmetricKey
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "トークンが非対称キーを持っているかどうかを示す値を取得します。"
  remarks: "このプロパティは常に返します`false`です。       非対称キーは、2 つのキー、公開キーと秘密キーでは、数学的に関連するを使用する公開キー暗号化で使用されます。 公開キーは広く、されますが、秘密キーは秘匿されます。 公開キー暗号化では、共通のキーを交換する必要はありません。"
  syntax:
    content: protected override bool HasAsymmetricKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、トークンがある非対称キーです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  id: InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: SslSecurityTokenParameters.InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "セキュリティ トークン要件を初期化します。"
  remarks: "次のプロパティ、<xref:System.IdentityModel.Selectors.SecurityTokenRequirement>初期化: 場合 -<xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A>は`true`、 <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A>= <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.MutualSslnego%2A> <xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.AnonymousSslnego%2A>.</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.AnonymousSslnego%2A>に設定されている場合は、;</xref:System.ServiceModel.Security.Tokens.ServiceModelSecurityTokenTypes.MutualSslnego%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement.TokenType%2A> </xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A> </xref:System.IdentityModel.Selectors.SecurityTokenRequirement>      -   <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken%2A> = `true`.</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.RequireCryptographicToken%2A>      - `SupportSecurityContextCancellation` <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A> <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>.</xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>に設定されている</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>プロパティ      -`IssuedSecurityTokenParameters`プロパティ<xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>が現在のインスタンスの複製に設定します</xref:System.IdentityModel.Selectors.SecurityTokenRequirement.Properties%2A>。      -   <xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A> = <xref:System.IdentityModel.Tokens.SecurityKeyType>.</xref:System.IdentityModel.Tokens.SecurityKeyType></xref:System.IdentityModel.Selectors.SecurityTokenRequirement.KeyType%2A>"
  syntax:
    content: protected override void InitializeSecurityTokenRequirement (System.IdentityModel.Selectors.SecurityTokenRequirement requirement);
    parameters:
    - id: requirement
      type: System.IdentityModel.Selectors.SecurityTokenRequirement
      description: "セキュリティ トークンの要件。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation
  id: RequireCancellation
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: RequireCancellation
  nameWithType: SslSecurityTokenParameters.RequireCancellation
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "取得またはキャンセルが必要かどうかを示す値を設定します。"
  remarks: "キャンセルが必要な場合、SSL プロトコルの最後に発行されるセキュリティ コンテキスト トークンはセッション ベースです。それ以外の場合、それはクッキー ベースです。"
  syntax:
    content: public bool RequireCancellation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャンセルが必要な場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate
  id: RequireClientCertificate
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: RequireClientCertificate
  nameWithType: SslSecurityTokenParameters.RequireClientCertificate
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "取得またはクライアント証明書が必要かどうかを示す値を設定します。"
  syntax:
    content: public bool RequireClientCertificate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クライアント証明書が必要な場合です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication
  id: SupportsClientAuthentication
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SupportsClientAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsClientAuthentication
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "実装された場合、トークンがクライアント認証をサポートするかどうかを示す値を取得します。"
  syntax:
    content: protected override bool SupportsClientAuthentication { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トークンがクライアント認証をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity
  id: SupportsClientWindowsIdentity
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SupportsClientWindowsIdentity
  nameWithType: SslSecurityTokenParameters.SupportsClientWindowsIdentity
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "実装された場合、トークンが認証用の Windows id をサポートしているかどうかを示す値を取得します。"
  syntax:
    content: protected override bool SupportsClientWindowsIdentity { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トークンが認証; の Windows id をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication
  id: SupportsServerAuthentication
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: SupportsServerAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsServerAuthentication
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "実装された場合、トークンがサーバー認証をサポートしているかどうかを示す値を取得します。"
  remarks: "このプロパティは常に返します`false`です。"
  syntax:
    content: protected override bool SupportsServerAuthentication { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トークンがサーバー認証をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString
  id: ToString
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  langs:
  - csharp
  name: ToString()
  nameWithType: SslSecurityTokenParameters.ToString()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "クラスのこのインスタンスのテキスト表現を表示します。"
  remarks: "このメソッドは、このクラスの名前を表示<xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A>、 <xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A></xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate%2A> </xref:System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation%2A> 。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "クラスのこのインスタンスのテキスト表現。"
  overload: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Security.Tokens.SecurityTokenParameters
  isExternal: false
  name: System.ServiceModel.Security.Tokens.SecurityTokenParameters
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SslSecurityTokenParameters()
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters()
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SslSecurityTokenParameters(Boolean)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.ServiceModel.Security.Tokens.SslSecurityTokenParameters)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SslSecurityTokenParameters(SslSecurityTokenParameters)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(SslSecurityTokenParameters)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(SslSecurityTokenParameters)
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SslSecurityTokenParameters
  nameWithType: SslSecurityTokenParameters
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor(System.Boolean,System.Boolean)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SslSecurityTokenParameters(Boolean,Boolean)
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean,Boolean)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SslSecurityTokenParameters(Boolean,Boolean)
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: CloneCore()
  nameWithType: SslSecurityTokenParameters.CloneCore()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore()
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(System.IdentityModel.Tokens.SecurityToken,System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
  nameWithType: SslSecurityTokenParameters.CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause(SecurityToken,SecurityTokenReferenceStyle)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle
  parent: System.ServiceModel.Security.Tokens
  isExternal: false
  name: SecurityTokenReferenceStyle
  nameWithType: SecurityTokenReferenceStyle
  fullName: System.ServiceModel.Security.Tokens.SecurityTokenReferenceStyle
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: HasAsymmetricKey
  nameWithType: SslSecurityTokenParameters.HasAsymmetricKey
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  nameWithType: SslSecurityTokenParameters.InitializeSecurityTokenRequirement(SecurityTokenRequirement)
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement(SecurityTokenRequirement)
- uid: System.IdentityModel.Selectors.SecurityTokenRequirement
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenRequirement
  nameWithType: SecurityTokenRequirement
  fullName: System.IdentityModel.Selectors.SecurityTokenRequirement
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: RequireCancellation
  nameWithType: SslSecurityTokenParameters.RequireCancellation
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: RequireClientCertificate
  nameWithType: SslSecurityTokenParameters.RequireClientCertificate
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsClientAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsClientAuthentication
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsClientWindowsIdentity
  nameWithType: SslSecurityTokenParameters.SupportsClientWindowsIdentity
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsServerAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsServerAuthentication
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: ToString()
  nameWithType: SslSecurityTokenParameters.ToString()
  fullName: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.#ctor*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SslSecurityTokenParameters
  nameWithType: SslSecurityTokenParameters.SslSecurityTokenParameters
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CloneCore*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: CloneCore
  nameWithType: SslSecurityTokenParameters.CloneCore
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.CreateKeyIdentifierClause*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: CreateKeyIdentifierClause
  nameWithType: SslSecurityTokenParameters.CreateKeyIdentifierClause
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.HasAsymmetricKey*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: HasAsymmetricKey
  nameWithType: SslSecurityTokenParameters.HasAsymmetricKey
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.InitializeSecurityTokenRequirement*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: InitializeSecurityTokenRequirement
  nameWithType: SslSecurityTokenParameters.InitializeSecurityTokenRequirement
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireCancellation*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: RequireCancellation
  nameWithType: SslSecurityTokenParameters.RequireCancellation
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.RequireClientCertificate*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: RequireClientCertificate
  nameWithType: SslSecurityTokenParameters.RequireClientCertificate
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientAuthentication*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsClientAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsClientAuthentication
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsClientWindowsIdentity*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsClientWindowsIdentity
  nameWithType: SslSecurityTokenParameters.SupportsClientWindowsIdentity
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.SupportsServerAuthentication*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: SupportsServerAuthentication
  nameWithType: SslSecurityTokenParameters.SupportsServerAuthentication
- uid: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters.ToString*
  parent: System.ServiceModel.Security.Tokens.SslSecurityTokenParameters
  isExternal: false
  name: ToString
  nameWithType: SslSecurityTokenParameters.ToString
