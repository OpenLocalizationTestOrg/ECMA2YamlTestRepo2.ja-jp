### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor
  id: InstanceDescriptor
  children:
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  langs:
  - csharp
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor
  type: Class
  summary: "オブジェクトのインスタンスを作成するための情報を提供します。 このクラスは継承できません。"
  remarks: "InstanceDescriptor には、オブジェクトのインスタンスを記述する情報を格納できます。 この情報は、オブジェクトのインスタンスの作成に使用できます。       カスタムのシリアライザーによっては、InstanceDescriptor を使用して、シリアル化可能なオブジェクトを表します。 いくつかの方法、 <xref:System.ComponentModel.TypeDescriptor>InstanceDescriptor を使用して表現またはオブジェクトをインスタンス化します</xref:System.ComponentModel.TypeDescriptor>。       InstanceDescriptor が次のメンバーを提供します - a<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>このオブジェクトを記述するプロパティです。</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A> 。      -<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>このオブジェクトをインスタンス化に使用できるコンス トラクターの引数で構成されるプロパティ</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>。      -ブール<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>オブジェクトが現在の情報が完全に表されるかどうかを示すプロパティです</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>。      -<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>表されるオブジェクトのインスタンスを作成するために使用するメソッド</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>。"
  example:
  - "The following code example illustrates how to use a type converter that participates in code generation through the use of instance descriptors.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._121_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._121_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._121_1.cs)]"
  syntax:
    content: public sealed class InstanceDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>クラスの指定したメンバーの情報と引数を使用します。"
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "記述子のメンバー情報。 This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> この場合、 <xref:System.Reflection.MethodInfo>、 <xref:System.Reflection.FieldInfo>、または<xref:System.Reflection.PropertyInfo>、表されることにする必要があります、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo> 。"
    - id: arguments
      type: System.Collections.ICollection
      description: "メンバーに渡す引数のコレクション。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または引数がない場合は空のコレクション。 他のインスタンスから成りコレクション<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>型は<xref:System.Reflection.MethodInfo>、 <xref:System.Reflection.FieldInfo>、または<xref:System.Reflection.PropertyInfo>を表していない、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー。       <code>member</code>型は<xref:System.Reflection.PropertyInfo>読み取ることができないとします。       <code>member</code>型は<xref:System.Reflection.MethodInfo>または<xref:System.Reflection.ConstructorInfo>、引数の数と<code>arguments</code>のシグネチャと一致しません<code>member.</code><code>member</code>の種類は<xref:System.Reflection.ConstructorInfo>を表します、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー。       <code>member</code>型は<xref:System.Reflection.FieldInfo>、引数の数と<code>arguments</code>が&0; でないです。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>クラスの指定したメンバーについては、引数、および指定した情報がのインスタンスを完全に記述するかどうかを示す値を使用します。"
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments, bool isComplete);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "記述子のメンバー情報。 This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> この場合、 <xref:System.Reflection.MethodInfo>、 <xref:System.Reflection.FieldInfo>、または<xref:System.Reflection.PropertyInfo>、表されることにする必要があります、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo> 。"
    - id: arguments
      type: System.Collections.ICollection
      description: "メンバーに渡す引数のコレクション。 このパラメーターを指定できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または引数がない場合は空のコレクション。 他のインスタンスから成りコレクション<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>です。"
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した情報のインスタンスを完全に記述する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>型は<xref:System.Reflection.MethodInfo>、 <xref:System.Reflection.FieldInfo>、または<xref:System.Reflection.PropertyInfo>を表していない、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー<code>member</code>の型は<xref:System.Reflection.PropertyInfo>読み取ることができないとします。       <code>member</code>型は<xref:System.Reflection.MethodInfo>または<xref:System.Reflection.ConstructorInfo>の引数の数と<code>arguments</code>のシグネチャと一致しません<code>member</code>です。       <code>member</code>型は<xref:System.Reflection.ConstructorInfo>を表します、 <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>メンバー<code>member</code>の種類は<xref:System.Reflection.FieldInfo>、引数の数と<code>arguments</code>が&0; でないです。"
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  id: Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "このインスタンス記述子を表すオブジェクトのインスタンスの再構築に使用できる引数のコレクションを取得します。"
  syntax:
    content: public System.Collections.ICollection Arguments { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>オブジェクトの作成に使用できる引数の</xref:System.Collections.ICollection>。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "このインスタンス記述子の呼び出しを記述する記述子オブジェクトを返します。"
  remarks: "このメソッドによって示されるオブジェクトの新しいインスタンスを作成、<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>プロパティ、指定した引数を使用して、その特定の型のインスタンスを作成する</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>。"
  syntax:
    content: public object Invoke ();
    parameters: []
    return:
      type: System.Object
      description: "オブジェクトのこのインスタンス記述子がについて説明します。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  id: IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "示す値を取得するかどうかの内容<xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;></xref>完全にインスタンスを識別します。"
  remarks: "通常、<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>特定のインスタンスを完全に記述します</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>。 ただし、一部のオブジェクトは複雑すぎるため、1 つのメソッドまたはコンス トラクターを表すです。 完了を示すかどうか、<xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>が完了していないユーザーがこれらのオブジェクトを識別および必要に応じて、その状態を詳しく説明する追加の処理を実行できるようにします</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>。"
  syntax:
    content: public bool IsComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>インスタンスは完全に記述されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  id: MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "この記述子に関連付けられているインスタンスを記述するメンバーの情報を取得します。"
  remarks: "このプロパティの値にすることができます、 <xref:System.Reflection.MethodInfo>、 <xref:System.Reflection.ConstructorInfo>、 <xref:System.Reflection.FieldInfo>、または<xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodInfo>"
  syntax:
    content: public System.Reflection.MemberInfo MemberInfo { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "A<xref:System.Reflection.MemberInfo>このオブジェクトに関連付けられているインスタンスを記述する</xref:System.Reflection.MemberInfo>。"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor.InstanceDescriptor
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke
  nameWithType: InstanceDescriptor.Invoke
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
