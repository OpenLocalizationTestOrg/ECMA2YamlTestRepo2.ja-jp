### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "COM + コンポーネントの共通言語ランタイム (CLR) メタデータを生成します。"
  remarks: "必要に応じて、GenerateMetadata クラスは、指定したタイプ ライブラリの CLR メタデータを含むアセンブリを生成します。       GenerateMetadata は、.NET Framework によって内部的に使用されます。 コード内で直接、クラスを使用する必要はありません。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;> </xref>クラスです。"
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成または検索、指定したタイプ ライブラリで表される COM + コンポーネントの共通言語ランタイム (CLR) メタデータを格納するアセンブリ。"
  remarks: "必要に応じて、生成するメソッドは指定されたタイプ ライブラリの CLR メタデータを含むアセンブリを生成します。 この処理には、呼び出し、<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>メソッド</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>。       これらのメソッドは、コードから直接呼び出される必要はありません。"
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "アセンブリを生成するタイプ ライブラリの名前。"
    - id: outPath
      type: System.String
      description: "アセンブリを生成または既存のアセンブリを検索するフォルダー。"
    return:
      type: System.String
      description: "生成されたアセンブリの名前。それ以外の場合、空の文字列の入力が有効な場合。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成されると、または、指定したタイプ ライブラリで表される COM + コンポーネントの共通言語ランタイム (CLR) メタデータが含まれています、厳密な名前キーのペアでアセンブリに署名して、グローバル アセンブリ キャッシュにインストールするアセンブリを検索します。"
  remarks: "必要に応じて、GenerateMetaData メソッドは、指定したタイプ ライブラリの CLR メタデータを含むアセンブリを生成します。 文字列で生成された名前のアセンブリが既にが存在する場合は、アセンブリを生成しない`outPath`フォルダーです。       GenerateMetaData は、コードから直接呼び出す必要はありません。 両方で呼び出された、<xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>と<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>メソッド</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A></xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>。       呼び出された場合<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>、GenerateMetaData も厳密な名前のキー ペアを生成、アセンブリに署名し、グローバル アセンブリ キャッシュにインストールします</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>。"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "アセンブリを生成するタイプ ライブラリの名前。"
    - id: outPath
      type: System.String
      description: "アセンブリを生成または既存のアセンブリを検索するフォルダー。"
    - id: PublicKey
      type: System.Byte[]
      description: "アセンブリにタイプ ライブラリ情報をインポートするために使用する公開キー。"
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "厳密な名前キー ペア生成されたアセンブリの署名に使用します。"
    return:
      type: System.String
      description: "生成されたアセンブリの名前。それ以外の場合、空の文字列の入力が有効な場合。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "生成されると、または、指定したタイプ ライブラリで表される COM + コンポーネントの共通言語ランタイム (CLR) メタデータが含まれています、厳密な名前キーのペアでアセンブリに署名して、グローバル アセンブリ キャッシュにインストールするアセンブリを検索します。"
  remarks: "必要に応じて、GenerateSigned メソッドは、指定したタイプ ライブラリの CLR メタデータを含むアセンブリを生成します。 また、厳密な名前のキー ペアを生成し、アセンブリに署名します。       この処理には、呼び出し、<xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>メソッド</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>。 これらのメソッドは、コードから直接呼び出される必要はありません。       `InstallGac`パラメーターには、グローバル アセンブリ キャッシュにアセンブリをインストールするかどうかを示します。 ただし、実装では、この値は無視し、常に署名されたアセンブリをグローバル アセンブリ キャッシュにインストールします。"
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "アセンブリを生成するタイプ ライブラリの名前。"
    - id: outPath
      type: System.String
      description: "アセンブリを生成または既存のアセンブリを検索するフォルダー。"
    - id: InstallGac
      type: System.Boolean
      description: "無視されます。"
    - id: Error
      type: System.String
      description: "エラー メッセージの書き込み先となる文字列。"
    return:
      type: System.String
      description: "生成されたアセンブリの名前。それ以外の場合、空の文字列の入力が有効な場合。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "指定されたパスで指定されたファイルを検索します。"
  remarks: "詳細については、プラットフォーム SDK ドキュメントの検索パスについてを参照してください。 [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)です。"
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "ファイルを検索するパス。"
    - id: fileName
      type: System.String
      description: "検索対象のファイルの名前。"
    - id: extension
      type: System.String
      description: "ファイルの検索時にファイル名に追加される拡張機能です。"
    - id: numBufferChars
      type: System.Int32
      description: "有効なパスとファイル名を受け取るバッファーのサイズ。"
    - id: buffer
      type: System.String
      description: "見つかったファイルのパスとファイル名を受け取るバッファー。"
    - id: filePart
      type: System.Int32[]
      description: "有効なパスとファイル名の最後のコンポーネントのアドレスを受け取る変数。"
    return:
      type: System.Int32
      description: "戻り値をコピーした文字列の長さは、検索が成功すると、 <code> buffer</code>です。 検索に失敗した場合、戻り値は 0 です。"
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
