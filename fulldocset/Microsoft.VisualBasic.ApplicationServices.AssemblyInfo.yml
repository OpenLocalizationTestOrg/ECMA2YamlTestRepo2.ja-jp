### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  id: AssemblyInfo
  children:
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  - Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  langs:
  - csharp
  name: AssemblyInfo
  nameWithType: AssemblyInfo
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  type: Class
  summary: "バージョン番号、説明、読み込まれたアセンブリなど、アプリケーションに関する情報を取得するためには、プロパティを提供します。"
  remarks: "によって公開されるプロパティの一部、`My.Application.Info`オブジェクトには、アプリケーションのアセンブリ情報が返されます。 アプリケーションのアセンブリ内の情報を設定するに使用する必要があります、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。       `My.Application.Info`オブジェクトと同様の機能を提供する、<xref:System.Diagnostics.FileVersionInfo>クラスが、最も一般的なプロパティにすばやくアクセスできるようにスコープが設定されます</xref:System.Diagnostics.FileVersionInfo>。       その他のプロパティなど`LoadedAssemblies`アプリケーションの現在の状態へのアクセスを提供します。"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public class AssemblyInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  id: '#ctor(System.Reflection.Assembly)'
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.AssemblyInfo&quot;> </xref>指定したアセンブリの情報を持つクラス。"
  syntax:
    content: public AssemblyInfo (System.Reflection.Assembly currentAssembly);
    parameters:
    - id: currentAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> 情報を取得する対象のアセンブリ。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  id: AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションのアセンブリ ファイルの拡張子なしの名前を取得します。"
  remarks: "`My.Application.Info.AssemblyName`プロパティは、マニフェストを含むファイルの名前を取得します。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.AssemblyName` property to display the name of the application.  \n  \n [!code-vb[VbVbalrMyApplication#20](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#20)]"
  syntax:
    content: public string AssemblyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>ファイル名を含むです。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  id: CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられている会社名を取得します。"
  remarks: "`My.Application.Info.CompanyName`プロパティは、アプリケーションに関連付けられている会社名を取得します。       値を変更することで、会社名を変更することができます**会社**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.CompanyName` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#21](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#21)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>アプリケーションに関連付けられている会社名を格納しています。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyCompanyAttribute>属性</xref:System.Reflection.AssemblyCompanyAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  id: Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられている著作権情報を取得します。"
  remarks: "`My.Application.Info.Copyright`プロパティは、アプリケーションに関連付けられている著作権情報を取得します。       値を変更することによって、著作権の通知を変更することができます**著作権**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.Copyright` property to display the company name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#22](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#22)]"
  syntax:
    content: public string Copyright { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>アプリケーションに関連付けられている著作権情報を格納します。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyCopyrightAttribute>属性</xref:System.Reflection.AssemblyCopyrightAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  id: Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられた説明を取得します。"
  remarks: "`My.Application.Info.Description`プロパティは、アプリケーションに関連付けられた説明を取得します。       値を変更することで、説明を変更することができます**説明**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.Description` property to display the description associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#23](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#23)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>アプリケーションに関連付けられている説明を含むです。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyDescriptionAttribute>属性</xref:System.Reflection.AssemblyDescriptionAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  id: DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションが格納されているディレクトリを取得します。"
  remarks: "`My.Application.Info.DirectoryPath`プロパティは、アプリケーションが格納されているディレクトリを取得します。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.DirectoryPath` property to display the directory path where the application is stored.  \n  \n [!code-vb[VbVbalrMyApplication#24](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#24)]"
  syntax:
    content: public string DirectoryPath { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>アプリケーションが格納されているディレクトリを格納しています。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  id: LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションによって読み込まれるすべてのアセンブリのコレクションを取得します。"
  remarks: "`My.Application.Info.LoadedAssemblies`プロパティがに似ていますが、<xref:System.AppDomain.GetAssemblies%2A>メソッド</xref:System.AppDomain.GetAssemblies%2A>。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.LoadedAssemblies` property to display the assemblies loaded by the application.  \n  \n [!code-vb[VbVbalrMyApplication#25](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#25)]  \n  \n This example requires that your Windows Forms application has a <xref:System.Windows.Forms.ListBox> control named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly> LoadedAssemblies { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;の<xref:System.Reflection.Assembly>アプリケーションによって読み込まれるすべてのアセンブリを含むします</xref:System.Reflection.Assembly>。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  exceptions:
  - type: System.AppDomainUnloadedException
    commentId: T:System.AppDomainUnloadedException
    description: "アプリケーション ドメインが読み込まれていません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  id: ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられている製品名を取得します。"
  remarks: "`My.Application.Info.ProductName`プロパティは、アプリケーションに関連付けられている製品名を取得します。       値を変更することによって、製品名を変更することができます**製品**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.ProductName` property to display the product name associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#26](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#26)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>アプリケーションに関連付けられている製品名を格納します。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyProductAttribute>属性</xref:System.Reflection.AssemblyProductAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  id: StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "現在のスタック トレース情報を取得します。"
  remarks: "`My.Application.Info.StackTrace`プロパティ リストから順にメソッドの呼び出し、つまり、最初に、最新のメソッド呼び出しについて説明し、行ごとに、スタックの各メソッド呼び出しが一覧表示されます。 ただし、`My.Application.Info.StackTrace`プロパティは多くのメソッド呼び出しの最適化中に実行されたコード変換のため、期待どおりに、報告可能性があります。       通常、スタック トレース情報は、アプリケーションのデバッグに使用されます。       各メソッド呼び出しのスタック トレース情報は次の形式:&quot;に*FullClassName*.*MethodName*(*MethodParams*) で*FileName*: 行*LineNumber* &quot;&quot;では、&quot;リテラルが&3; つのスペース、および&quot;in&quot;リテラル続くと&quot;: 行&quot;デバッグ シンボルが利用できない場合は省略します。 プレース ホルダー `FullClassName`、 `MethodName`、 `MethodParams`、 `FileName`、および`LineNumber`次のように定義されている実際の値に置き換えられます |。一部 |説明 |  |----------|-----------------|  |*FullClassName*|名前空間を含む、クラスの完全名です |。  |*MethodName*|メソッドの名前です |。  |*MethodParams*|パラメーターの型/名前の組み合わせの一覧。 各ペアは、コンマ (,) で区切られます。 場合、この情報は省略されます*MethodName*&0; パラメーターを受け取ります |。  |*FileName*|ソースの名前のファイルの場所、 *MethodName*メソッドを宣言します。 デバッグ シンボルが利用できない場合、この情報は省略されます |。  |*LineNumber*|内の行の数*FileName*からソース コードを含む*MethodName*コール スタック上にある命令のです。 デバッグ シンボルが利用できない場合、この情報は省略されます |。      `My.Applicaiton.Info.StackTrace`プロパティと同様の機能を提供する、<xref:System.Environment.StackTrace%2A>プロパティ</xref:System.Environment.StackTrace%2A>。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.StackTrace` property to display the stack trace of the application from the point at which the code executes.  \n  \n [!code-vb[VbVbalrMyApplication#27](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#27)]"
  syntax:
    content: public string StackTrace { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>現在のスタック トレース情報を格納します。 戻り値は<xref:System.String>。</xref:System.String>を指定できます。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "要求されたスタック トレース情報は、範囲外です。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  id: Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられているタイトルを取得します。"
  remarks: "`My.Application.Info.Title`プロパティは、アプリケーションに関連付けられているタイトルを取得します。       値を変更することで、タイトルを変更することができます**タイトル**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.Title` property to display the title associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#28](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#28)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>を含む、<xref:System.Reflection.AssemblyTitleAttribute>アプリケーションに関連付けられている</xref:System.Reflection.AssemblyTitleAttribute>。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyTitleAttribute>属性</xref:System.Reflection.AssemblyTitleAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  id: Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションに関連付けられている商標表記を取得します。"
  remarks: "`My.Application.Info.Trademark`プロパティは、アプリケーションに関連付けられている商標表記を取得します。       値を変更することで、商標の通知を変更する**商標**で、**アセンブリ情報**ダイアログ ボックスからアクセスできる、**アプリケーション**のペイン、**プロジェクト デザイナー**です。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.Trademark` property to display the trademark information associated with the application.  \n  \n [!code-vb[VbVbalrMyApplication#29](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#29)]"
  syntax:
    content: public string Trademark { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>商標表記を含む、アプリケーションに関連付けられています。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリがない、<xref:System.Reflection.AssemblyTrademarkAttribute>属性</xref:System.Reflection.AssemblyTrademarkAttribute>。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  id: Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "アプリケーションのバージョン番号を取得します。"
  remarks: "`My.Application.Info.Version`プロパティを取得、<xref:System.Version>アプリケーションのバージョン番号を含むオブジェクト</xref:System.Version>。 使用することができます、 <xref:System.Version.Major%2A>、 <xref:System.Version.Minor%2A>、 <xref:System.Version.Build%2A>、および<xref:System.Version.Revision%2A>のプロパティ、<xref:System.Version>アプリケーションに関する特定のバージョン情報にアクセスするオブジェクト</xref:System.Version></xref:System.Version.Revision%2A></xref:System.Version.Build%2A></xref:System.Version.Minor%2A></xref:System.Version.Major%2A>。       アプリケーションの ClickOnce 配置を使用する必要があります、<xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>のプロパティ、<xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A>プロパティ</xref:Microsoft.VisualBasic.ApplicationServices.ConsoleApplicationBase.Deployment%2A></xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.Version` property to display the version of the application.  \n  \n [!code-vb[VbVbalrMyApplication#30](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#30)]"
  syntax:
    content: public Version Version { get; }
    return:
      type: System.Version
      description: "A<xref:System.Version>アプリケーションのバージョン番号を含むオブジェクト</xref:System.Version>。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "アプリケーションには、アセンブリのバージョンにアクセスするための十分なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  id: WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  langs:
  - csharp
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "プロセス コンテキストに割り当てられる物理メモリの量を取得します。"
  remarks: "`My.Application.Info.WorkingSet`プロパティと同じ動作には、<xref:System.Environment.WorkingSet%2A>プロパティ</xref:System.Environment.WorkingSet%2A>。      > [!NOTE] > このプロパティは常に Windows 98 および Windows Millennium Edition、0 を返します。      ## プロジェクトの種類によって可用性 |プロジェクトの種類 |使用可能な |  |------------------|---------------|  |Windows フォーム アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows フォーム コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Application.Info.WorkingSet` property to display the number of bytes of physical memory mapped to the application.  \n  \n [!code-vb[VbVbalrMyApplication#31](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#31)]"
  syntax:
    content: public long WorkingSet { get; }
    return:
      type: System.Int64
      description: "A <xref uid=&quot;langword_csharp_Long&quot; name=&quot;Long&quot; href=&quot;&quot;> </xref>プロセス コンテキストに割り当てられる物理メモリのバイト数を格納します。"
  overload: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "部分的に信頼が存在すると、ユーザーの状況では、必要なアクセス許可がありません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.AppDomainUnloadedException
  parent: System
  isExternal: false
  name: AppDomainUnloadedException
  nameWithType: AppDomainUnloadedException
  fullName: System.AppDomainUnloadedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor(System.Reflection.Assembly)
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo(Assembly)
  nameWithType: AssemblyInfo.AssemblyInfo(Assembly)
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyInfo(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Reflection.Assembly}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Assembly>
  nameWithType: ReadOnlyCollection<Assembly>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Reflection.Assembly>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Reflection.Assembly>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: Assembly
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
  fullName: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyInfo
  nameWithType: AssemblyInfo.AssemblyInfo
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.AssemblyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: AssemblyName
  nameWithType: AssemblyInfo.AssemblyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.CompanyName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: CompanyName
  nameWithType: AssemblyInfo.CompanyName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Copyright*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Copyright
  nameWithType: AssemblyInfo.Copyright
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Description*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Description
  nameWithType: AssemblyInfo.Description
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.DirectoryPath*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: DirectoryPath
  nameWithType: AssemblyInfo.DirectoryPath
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.LoadedAssemblies*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: LoadedAssemblies
  nameWithType: AssemblyInfo.LoadedAssemblies
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.ProductName*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: ProductName
  nameWithType: AssemblyInfo.ProductName
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.StackTrace*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: StackTrace
  nameWithType: AssemblyInfo.StackTrace
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Title*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Title
  nameWithType: AssemblyInfo.Title
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Trademark*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Trademark
  nameWithType: AssemblyInfo.Trademark
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.Version*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: Version
  nameWithType: AssemblyInfo.Version
- uid: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo.WorkingSet*
  parent: Microsoft.VisualBasic.ApplicationServices.AssemblyInfo
  isExternal: false
  name: WorkingSet
  nameWithType: AssemblyInfo.WorkingSet
