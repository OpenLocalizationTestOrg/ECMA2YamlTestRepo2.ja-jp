### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RolePrincipal
  id: RolePrincipal
  children:
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.CachedListChanged
  - System.Web.Security.RolePrincipal.CookiePath
  - System.Web.Security.RolePrincipal.Expired
  - System.Web.Security.RolePrincipal.ExpireDate
  - System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.GetRoles
  - System.Web.Security.RolePrincipal.Identity
  - System.Web.Security.RolePrincipal.IsInRole(System.String)
  - System.Web.Security.RolePrincipal.IsRoleListCached
  - System.Web.Security.RolePrincipal.IssueDate
  - System.Web.Security.RolePrincipal.ProviderName
  - System.Web.Security.RolePrincipal.SetDirty
  - System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.ToEncryptedTicket
  - System.Web.Security.RolePrincipal.Version
  langs:
  - csharp
  name: RolePrincipal
  nameWithType: RolePrincipal
  fullName: System.Web.Security.RolePrincipal
  type: Class
  summary: "ロールのメンバーシップを含む、現在の HTTP 要求に対するセキュリティ情報を表します。 このクラスは継承できません。"
  remarks: "RolePrincipal オブジェクトが実装する、<xref:System.Security.Principal.IPrincipal>インターフェイスし、の HTTP 要求の現在のセキュリティ コンテキストを表します</xref:System.Security.Principal.IPrincipal>。       ロール管理が有効な場合 (を参照してください<xref:System.Web.Security.Roles>)、<xref:System.Web.Security.RoleManagerModule><xref:System.Web.HttpContext.User%2A><xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext></xref:System.Web.HttpContext></xref:System.Web.HttpContext.Current%2A>プロパティ</xref:System.Web.HttpContext.User%2A>に RolePrincipal オブジェクトを割り当てます</xref:System.Web.Security.RoleManagerModule></xref:System.Web.Security.Roles>。       RolePrincipal クラスは、現在の HTTP 要求のセキュリティ id を公開し、さらにロールのメンバーシップのチェックを実行します。 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`、RolePrincipal オブジェクトは、ロールのキャッシュされた一覧を管理および、キャッシュの現在のユーザー ロールのメンバーシップを検索リストの先頭に、し、ロール<xref:System.Web.Security.Roles.Provider%2A>.</xref:System.Web.Security.Roles.Provider%2A> </xref:System.Web.Security.Roles.CacheRolesInCookie%2A> 場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`false`、RolePrincipal オブジェクトは常に、ロール プロバイダーを使用してロールのメンバーシップを検索します</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>。       RolePrincipal オブジェクトが暗号化され、 <xref:System.Web.Security.Roles.CookieName%2A> <xref:System.Web.Security.Roles.CookieProtectionValue%2A>。</xref:System.Web.Security.Roles.CookieProtectionValue%2A>に基づいて</xref:System.Web.Security.Roles.CookieName%2A>によって識別されるクッキーにキャッシュされているロール情報を復号化"
  syntax:
    content: 'public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 、指定されたオブジェクト<code> identity</code>です。"
  remarks: "この RolePrincipal コンス トラクターのオーバー ロードが新たに作成<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します</xref:System.Web.Security.RolePrincipal>。 によって識別される cookie からキャッシュされたロールの情報が読み取れません、<xref:System.Web.Security.Roles.CookieName%2A>プロパティ</xref:System.Web.Security.Roles.CookieName%2A>。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティに設定されている、<xref:System.Configuration.Provider.ProviderBase.Name%2A>の既定のロール プロバイダー</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A> 。       ロール管理を有効にする方法については、<xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>を参照してください。"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/39332c55-2f33-4fad-9306-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/39332c55-2f33-4fad-9306-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "作成するユーザー id、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>用です。"
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>クラスに含まれている情報を使用して、指定した<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref>オブジェクトと指定したストリーム コンテキストを使用します。"
  syntax:
    content: protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>データを読み込む先のオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "このシリアル化のシリアル化先。"
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 、指定されたオブジェクト<code> identity </code>指定された対象からロール情報を含む<code> encryptedTicket</code>です。"
  remarks: "この RolePrincipal コンス トラクターのオーバー ロードが新たに作成<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します</xref:System.Web.Security.RolePrincipal>。 現在のユーザー ロール情報は読み取りから提供された`encryptedTicket`およびでキャッシュされた、<xref:System.Web.Security.RolePrincipal>オブジェクト</xref:System.Web.Security.RolePrincipal>。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>プロパティに設定されている、<xref:System.Configuration.Provider.ProviderBase.Name%2A>の既定のロール プロバイダー</xref:System.Configuration.Provider.ProviderBase.Name%2A> </xref:System.Web.Security.RolePrincipal.ProviderName%2A> 。       ロール管理を有効にする方法については、<xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>を参照してください。"
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#2](~/add/codesnippet/csharp/9eda904c-406a-4e24-aa64-_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/add/codesnippet/visualbasic/9eda904c-406a-4e24-aa64-_1.aspx)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "作成するユーザー id、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>用です。"
    - id: encryptedTicket
      type: System.String
      description: "暗号化されたロール情報を含む文字列です。"
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  id: '#ctor(System.String,System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 、指定されたオブジェクト<code> identity </code>指定して<code> providerName</code>です。"
  remarks: "この RolePrincipal コンス トラクターのオーバー ロードが新たに作成<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します</xref:System.Web.Security.RolePrincipal>。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>で指定された値に設定されて、`providerName`パラメーター</xref:System.Web.Security.RolePrincipal.ProviderName%2A> 。       ロール管理を有効にする方法については、<xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>を参照してください。"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);
    parameters:
    - id: providerName
      type: System.String
      description: "ユーザーのロール プロバイダーの名前。"
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "作成するユーザー id、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>用です。"
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>providerName</code>は、アプリケーションの構成に存在しないロール プロバイダーを参照します。"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.String,System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref> 、指定されたオブジェクト<code> identity </code>指定して<code> providerName </code>と指定された対象からロール情報<code> encryptedTicket</code>です。"
  remarks: "このオーバー ロード、<xref:System.Web.Security.RolePrincipal.%23ctor%2A>コンス トラクターは、新しい作成<xref:System.Web.Security.RolePrincipal>オブジェクトし、そのプロパティ値を初期化します</xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.RolePrincipal.%23ctor%2A>。 現在のユーザー ロール情報は読み取りから提供された`encryptedTicket`およびでキャッシュされた、<xref:System.Web.Security.RolePrincipal>オブジェクト</xref:System.Web.Security.RolePrincipal>。 <xref:System.Web.Security.RolePrincipal.ProviderName%2A>で指定された値に設定されて、`providerName`パラメーター</xref:System.Web.Security.RolePrincipal.ProviderName%2A> 。       ロール管理を有効にする方法については、<xref:System.Web.Security.Roles>クラス</xref:System.Web.Security.Roles>を参照してください。"
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: providerName
      type: System.String
      description: "ユーザーのロール プロバイダーの名前。"
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "作成するユーザー id、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>用です。"
    - id: encryptedTicket
      type: System.String
      description: "暗号化されたロール情報を含む文字列です。"
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>encryptedTicket</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>providerName</code>は、アプリケーションの構成に存在しないロール プロバイダーを参照します。"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  id: CachedListChanged
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール名の一覧をキャッシュするかどうかを示す値を取得、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>オブジェクトが変更されました。"
  remarks: "CachedListChanged プロパティを返します`true`ロール名が既定のロールから取得された後<xref:System.Web.Security.Roles.Provider%2A>によってキャッシュに追加し、<xref:System.Web.Security.RolePrincipal.GetRoles%2A>メソッド、または、<xref:System.Web.Security.RolePrincipal.IsInRole%2A>メソッドの呼び出し、<xref:System.Web.Security.RoleProvider.IsUserInRole%2A>既定のロール プロバイダーのメソッドの応答を受信し、 `true`、その結果に渡されるロール名に、<xref:System.Web.Security.RolePrincipal.IsInRole%2A>キャッシュに追加されているメソッド</xref:System.Web.Security.RolePrincipal.IsInRole%2A></xref:System.Web.Security.RoleProvider.IsUserInRole%2A></xref:System.Web.Security.RolePrincipal.IsInRole%2A></xref:System.Web.Security.RolePrincipal.GetRoles%2A></xref:System.Web.Security.Roles.Provider%2A>。       場合 CachedListChanged プロパティは true を返しますも<xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>に設定されている`true`と<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>が経過すると、新規の結果として得られる<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>設定されている</xref:System.Web.Security.RolePrincipal.ExpireDate%2A></xref:System.Web.Security.RolePrincipal.ExpireDate%2A></xref:System.Web.Security.Roles.CookieSlidingExpiration%2A>。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_6_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public bool CachedListChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ロール名の一覧がキャッシュされている場合、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>変更後、それ以外のオブジェクトが表示された<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.RolePrincipal.CachedListChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.CookiePath
  id: CookiePath
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "キャッシュされているロール名のクッキーのパスを取得します。"
  remarks: "CookiePath プロパティの値を返す、 `cookiePath` ASP.NET アプリケーションの Web.config ファイルからの属性です。 Cookie のパスの詳細については、 <xref:System.Web.HttpCookie.Path%2A>。</xref:System.Web.HttpCookie.Path%2A>を参照してください。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string CookiePath { get; }
    return:
      type: System.String
      description: "ロール名がキャッシュされているクッキーのパス。 既定値は/です。"
  overload: System.Web.Security.RolePrincipal.CookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Expired
  id: Expired
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール クッキーの有効期限が切れているかどうかを示す値を取得します。"
  remarks: "有効期限が切れたプロパティから返される、`Boolean`ロール クッキーの有効期限が切れているかどうかを示す値に基づく、<xref:System.Web.Security.RolePrincipal.ExpireDate%2A>と現在の日付と時刻</xref:System.Web.Security.RolePrincipal.ExpireDate%2A>。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_1_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_1_1.aspx)]"
  syntax:
    content: public bool Expired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ロール クッキーの有効期限が切れました。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.RolePrincipal.Expired*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ExpireDate
  id: ExpireDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール クッキーの期限が切れる日時を取得します。"
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_11_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_11_1.aspx)]"
  syntax:
    content: public DateTime ExpireDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>ロール クッキーの有効期限が切れるときの値します</xref:System.DateTime>。"
  overload: System.Web.Security.RolePrincipal.ExpireDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>オブジェクトに指定したストリーム コンテキストを使用して、ターゲット オブジェクトをシリアル化するために必要とされるデータ。"
  remarks: "詳細については、次を参照してください、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>メソッド。</xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> 。"
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>データを読み込む先のオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "このシリアル化のシリアル化先。"
  overload: System.Web.Security.RolePrincipal.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.GetRoles
  id: GetRoles
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロールの一覧を取得、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>のメンバーであります。"
  remarks: "場合<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`によって表されるユーザーのロール名がキャッシュされていると、 <xref:System.Web.Security.RolePrincipal>、GetRoles メソッドは、ユーザーがのメンバーであるキャッシュでロール名の一覧を返します</xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.Roles.CacheRolesInCookie%2A>。 ロール名がキャッシュされていない場合、GetRoles メソッドの一覧を返します<xref:System.Web.Security.Roles.Provider%2A>。</xref:System.Web.Security.Roles.Provider%2A>の既定のロールからのメンバーであるユーザー ロール名 現在のロール名のみ<xref:System.Web.Security.Roles.ApplicationName%2A>が返されます</xref:System.Web.Security.Roles.ApplicationName%2A>。 ロール名がキャッシュされているかどうかを決定する、<xref:System.Web.Security.RolePrincipal>オブジェクト、チェック、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティ</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A></xref:System.Web.Security.RolePrincipal>。"
  example:
  - "The following code example displays the roles that the logged-on user is a member of.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#7](~/add/codesnippet/csharp/m-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#7](~/add/codesnippet/visualbasic/m-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public string[] GetRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "ロールの一覧を<xref href=&quot;System.Web.Security.RolePrincipal&quot;></xref>のメンバーであります。"
  overload: System.Web.Security.RolePrincipal.GetRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.Security.RolePrincipal.Identity*> 。"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Identity
  id: Identity
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "現在の HTTP 要求のセキュリティ id を取得します。"
  remarks: "Id、<xref:System.Web.Security.RolePrincipal>場合、オブジェクトが設定、<xref:System.Web.Security.RolePrincipal>コンス トラクターが呼び出されます</xref:System.Web.Security.RolePrincipal></xref:System.Web.Security.RolePrincipal>。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_2_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_2_1.aspx)]"
  syntax:
    content: public override System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "現在の HTTP 要求のセキュリティ id。"
  overload: System.Web.Security.RolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーがによって表されるかどうかを示す値を取得、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>が指定されたロールです。"
  remarks: "IsInRole 最初に確認し、 <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>、現在のユーザーのロール名のキャッシュされた一覧が使用できるかどうかを決定するプロパティ</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>。 場合、<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>プロパティは`true`、指定されたロールのキャッシュされたリストがチェックされます</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>。 かどうか IsInRole メソッドでは、キャッシュされたリスト内の指定されたロールが見つかると、それを返します`true`です。       呼び出す場合は、指定したロールが見つからない場合は、IsInRole、<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>既定のメソッド<xref:System.Web.Security.Roles.Provider%2A>ユーザー名が構成済みのデータ ソースからロールに関連付けられているかどうかを決定するインスタンス<xref:System.Web.Security.Roles.ApplicationName%2A>値</xref:System.Web.Security.Roles.ApplicationName%2A></xref:System.Web.Security.Roles.Provider%2A></xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>。"
  example:
  - "The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  \n  \n [!code-vb[System.Web.Security.RolePrincipal#8](~/add/codesnippet/visualbasic/m-system.web.security.ro_6_1.aspx)]\n [!code-cs[System.Web.Security.RolePrincipal#8](~/add/codesnippet/csharp/m-system.web.security.ro_6_1.aspx)]"
  syntax:
    content: public override bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "検索するロール。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>によって表されるユーザーの場合、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>が指定されたロールです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.RolePrincipal.IsInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref:System.Web.Security.RolePrincipal.Identity*>プロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.Security.RolePrincipal.Identity*> 。"
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  id: IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーのロールの一覧がクッキーにキャッシュされているかどうかを示す値を取得します。"
  remarks: "場合、`cacheRolesInCookie`に設定されているアプリケーションの Web.config ファイルで属性`true`、特定のロールのユーザー メンバーシップをオンにすると、現在のユーザーのロール名の一覧が cookie に書き込まれます。 IsRoleListCached プロパティは、ロール名を cookie に書き込まれているかどうかを示します。 なお、いなくても、`cacheRolesInCookie`構成属性は、 `true`、IsRoleListCached プロパティが返されません`true`まで cookie にロール情報が書き込まれた後にします。 かどうかロール チェックは行われません、ユーザー、IsRoleListCached 戻ります`false`です。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_3_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_3_1.aspx)]"
  syntax:
    content: public bool IsRoleListCached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ロール名が、cookie; にキャッシュされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.RolePrincipal.IsRoleListCached*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.IssueDate
  id: IssueDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール クッキーが発行された日時を取得します。"
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_7_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_7_1.aspx)]"
  syntax:
    content: public DateTime IssueDate { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>ロール クッキーが発行された</xref:System.DateTime>。"
  overload: System.Web.Security.RolePrincipal.IssueDate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ProviderName
  id: ProviderName
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "格納し、ユーザーのロール情報を取得するロール プロバイダーの名前を取得します。"
  remarks: "ProviderName プロパティによって表されるユーザーのロール情報を管理するロール プロバイダーの名前を公開する、<xref:System.Web.Security.RolePrincipal>オブジェクト</xref:System.Web.Security.RolePrincipal>。 これによりを使用して、ユーザーの特定のロール プロバイダーのインスタンスへのアクセスを<xref:System.Web.Security.Roles.Providers%2A>のプロパティ、<xref:System.Web.Security.Roles>クラス プロバイダーは、アプリケーションの既定のプロバイダー、かどうかに関係なく</xref:System.Web.Security.Roles></xref:System.Web.Security.Roles.Providers%2A>。 たとえばを受け取るメソッドを作成することがあります、<xref:System.Web.Security.RolePrincipal>として入力し、表されるユーザーのロールの一覧を返します</xref:System.Web.Security.RolePrincipal>。 適切なロール プロバイダーを使用するのロールのリストを返すことを確認することができます、<xref:System.Web.Security.RolePrincipal>を呼び出して、<xref:System.Web.Security.RoleProvider.GetRolesForUser%2A>からロール プロバイダーのメソッド、 <xref:System.Web.Security.Roles.Providers%2A>ProviderName プロパティの値でインデックスがコレクションです</xref:System.Web.Security.Roles.Providers%2A></xref:System.Web.Security.RoleProvider.GetRolesForUser%2A></xref:System.Web.Security.RolePrincipal>。       設定する、<xref:System.Web.Security.RolePrincipal>オブジェクト要求ごとに使用する必要があります、<xref:System.Web.Security.RoleManagerModule.GetRoles>アプリケーションの Global.asax ファイルで定義されたイベント ハンドラー</xref:System.Web.Security.RoleManagerModule.GetRoles> </xref:System.Web.Security.RolePrincipal> 。"
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: "格納し、ユーザーのロール情報を取得するロール プロバイダーの名前。"
  overload: System.Web.Security.RolePrincipal.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.SetDirty
  id: SetDirty
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "変更されたこととしてキャッシュされたロールの一覧を示します。"
  remarks: "SetDirty メソッドは、設定によって変更されてもとしてキャッシュされたロールの一覧を示します<xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>に`true`と<xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A>に`false`</xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A></xref:System.Web.Security.RolePrincipal.CachedListChanged%2A>。"
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.Security.RolePrincipal.SetDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "このメンバーの説明、 <xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>。</xref:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.Security.RolePrincipal>にインスタンスをキャスト、<xref:System.Runtime.Serialization.ISerializable>インターフェイス</xref:System.Runtime.Serialization.ISerializable></xref:System.Web.Security.RolePrincipal>。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "このシリアル化のシリアル化先。"
  overload: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  id: ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "キャッシュ ロール情報を返します、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>オブジェクト暗号化<xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>に基づいて"
  remarks: "ロール クッキーの ToEncryptedTicket メソッドによって返される値が格納されているときに<xref:System.Web.Security.Roles.CacheRolesInCookie%2A>は`true`</xref:System.Web.Security.Roles.CacheRolesInCookie%2A>。"
  example:
  - "The following code example writes the results of the ToEncryptedTicket method to the roles cookie.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#6](~/add/codesnippet/csharp/m-system.web.security.ro_8_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#6](~/add/codesnippet/visualbasic/m-system.web.security.ro_8_1.aspx)]"
  syntax:
    content: public string ToEncryptedTicket ();
    parameters: []
    return:
      type: System.String
      description: "ロール情報と共にキャッシュされる、 <xref href=&quot;System.Web.Security.RolePrincipal&quot;> </xref>オブジェクト暗号化<xref:System.Web.Security.Roles.CookieProtectionValue*>.</xref:System.Web.Security.Roles.CookieProtectionValue*>に基づいて"
  overload: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.RolePrincipal.Version
  id: Version
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ロール クッキーのバージョン番号を取得します。"
  remarks: "ロール クッキーのバージョン番号を含めても、ASP.NET の将来のリリースはロール クッキーの形式を変更し、さまざまな形式の間で区別するために Version プロパティを使用できます。"
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n [!code-cs[System.Web.Security.RolePrincipal#1](~/add/codesnippet/csharp/p-system.web.security.ro_9_1.aspx)]\n [!code-vb[System.Web.Security.RolePrincipal#1](~/add/codesnippet/visualbasic/p-system.web.security.ro_9_1.aspx)]"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "ロール クッキーのバージョン番号。"
  overload: System.Web.Security.RolePrincipal.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: System.Security.Claims.ClaimsPrincipal
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(IIdentity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity)
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String,IIdentity,String)
  nameWithType: RolePrincipal.RolePrincipal(String,IIdentity,String)
  fullName: System.Web.Security.RolePrincipal.RolePrincipal(String,IIdentity,String)
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: System.Web.Security.RolePrincipal.CachedListChanged
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.RolePrincipal.CookiePath
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: System.Web.Security.RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: System.Web.Security.RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: System.Web.Security.RolePrincipal.ExpireDate
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.GetRoles
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: System.Web.Security.RolePrincipal.GetRoles()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.RolePrincipal.Identity
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: System.Web.Security.RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: System.Web.Security.RolePrincipal.IsInRole(String)
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: System.Web.Security.RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: System.Web.Security.RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: System.Web.Security.RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: System.Web.Security.RolePrincipal.SetDirty()
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.Security.RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: System.Web.Security.RolePrincipal.ToEncryptedTicket()
- uid: System.Web.Security.RolePrincipal.Version
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: System.Web.Security.RolePrincipal.Version
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.RolePrincipal.#ctor*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal
  nameWithType: RolePrincipal.RolePrincipal
- uid: System.Web.Security.RolePrincipal.CachedListChanged*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
- uid: System.Web.Security.RolePrincipal.CookiePath*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
- uid: System.Web.Security.RolePrincipal.GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: RolePrincipal.GetObjectData
- uid: System.Web.Security.RolePrincipal.GetRoles*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles
  nameWithType: RolePrincipal.GetRoles
- uid: System.Web.Security.RolePrincipal.Identity*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: RolePrincipal.IsInRole
- uid: System.Web.Security.RolePrincipal.IsRoleListCached*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty
  nameWithType: RolePrincipal.SetDirty
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket
  nameWithType: RolePrincipal.ToEncryptedTicket
- uid: System.Web.Security.RolePrincipal.Version*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
