### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithm
  id: CngAlgorithm
  children:
  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithm.Algorithm
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  - System.Security.Cryptography.CngAlgorithm.ECDsaP256
  - System.Security.Cryptography.CngAlgorithm.ECDsaP384
  - System.Security.Cryptography.CngAlgorithm.ECDsaP521
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.GetHashCode
  - System.Security.Cryptography.CngAlgorithm.MD5
  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Rsa
  - System.Security.Cryptography.CngAlgorithm.Sha1
  - System.Security.Cryptography.CngAlgorithm.Sha256
  - System.Security.Cryptography.CngAlgorithm.Sha384
  - System.Security.Cryptography.CngAlgorithm.Sha512
  - System.Security.Cryptography.CngAlgorithm.ToString
  langs:
  - csharp
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
  type: Class
  summary: "暗号化アルゴリズムの名前をカプセル化します。"
  remarks: "CngAlgorithm クラスは、ユーティリティ クラスです。 静的プロパティ、比較のメソッド、および、プライベート、内部で維持されて、アルゴリズム名の文字列で構成されます。       静的プロパティは、CngAlgorithm オブジェクトを返します。 各オブジェクトの内部文字列は、静的プロパティの名前に対応するアルゴリズムの名前に初期化されます。       静的プロパティで対応されていない種類のアルゴリズムのオブジェクトを作成するのにこのクラスを使用することもできます。       いくつかの Cryptography Next Generation (CNG) クラス (など<xref:System.Security.Cryptography.CngKey>) を介して CngAlgorithm オブジェクトを受け入れ、`algorithm`パラメーター</xref:System.Security.Cryptography.CngKey> 。 呼び出して、オブジェクトの埋め込まれているアルゴリズム名を取得、クラス、CngAlgorithm オブジェクトを受信すると<xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A>プロパティ</xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A>。       したがって、CngAlgorithm はよく知られているアルゴリズムの列挙体として機能します。 文字列の代わりに厳密に型指定された値を使用して、よく知られているアルゴリズムを指定できます。"
  syntax:
    content: 'public sealed class CngAlgorithm : IEquatable<System.Security.Cryptography.CngAlgorithm>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithm>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref>クラスです。"
  remarks: "インスタンス、<xref:System.Security.Cryptography.CngAlgorithm>クラスが内部で指定されているアルゴリズム名を維持、`algorithm`パラメーター</xref:System.Security.Cryptography.CngAlgorithm> 。       このコンス トラクターの主な目的<xref:System.Security.Cryptography.CngAlgorithm>を<xref:System.Security.Cryptography.CngAlgorithm>クラス</xref:System.Security.Cryptography.CngAlgorithm>の静的プロパティでは表されない種類のアルゴリズムのオブジェクト</xref:System.Security.Cryptography.CngAlgorithm>を作成する方法を提供するには この機能により、将来[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]リリース、サービス パック、およびサード パーティ製開発者は、現在利用可能なアルゴリズムと同じようにアクセスできる新しいアルゴリズムを追加します。"
  syntax:
    content: public CngAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "初期化するために、アルゴリズムの名前。"
  overload: System.Security.Cryptography.CngAlgorithm.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithm</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> algorithm </code>パラメーターの長さが 0 (ゼロ)。"
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "アルゴリズムを取得します名です。 現在<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクトを指定します。"
  syntax:
    content: public string Algorithm { get; }
    return:
      type: System.String
      description: "埋め込まれているアルゴリズムの名前です。"
  overload: System.Security.Cryptography.CngAlgorithm.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  id: ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> P-256 曲線を使用する、Diffie-hellman ECDH (Elliptic Curve) キー交換アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-256 曲線を使用する ECDH アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  id: ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> P-384 曲線を使用する、Diffie-hellman ECDH (Elliptic Curve) キー交換アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-384 曲線を使用する ECDH アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  id: ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> P-521 曲線を使用する、Diffie-hellman ECDH (Elliptic Curve) キー交換アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-521 曲線を使用する ECDH アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  id: ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref>楕円曲線デジタル署名アルゴリズム (ECDSA) P-256 曲線を使用するを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-256 曲線を使用する ECDSA アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  id: ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref>楕円曲線デジタル署名アルゴリズム (ECDSA) P-384 曲線を使用するを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-384 曲線を使用する ECDSA アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  id: ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>楕円曲線デジタル署名アルゴリズム (ECDSA) P-521 曲線を使用するを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "P-521 曲線を使用する ECDSA アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "現在の指定したオブジェクトと比較<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクト。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "現在と比較するオブジェクト<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> obj </code>パラメーターは、 <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref>が現在のオブジェクトと同じアルゴリズムを指定するそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  id: Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "指定した比較<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>現在オブジェクト<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクト。"
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithm other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithm
      description: "現在と比較するオブジェクト<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> other </code>パラメーターが現在のオブジェクトと同じアルゴリズムを指定する場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "現在に埋め込まれているアルゴリズム名のハッシュ値を生成<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクト。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "埋め込まれているアルゴリズム名のハッシュ値。"
  overload: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  id: MD5
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>メッセージ ダイジェスト 5 (MD5) ハッシュ アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm MD5 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "MD5 アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.MD5*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクトが同じアルゴリズム名を指定します。"
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "アルゴリズムの名前を指定するオブジェクト。"
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "によって識別されるオブジェクトと比較する&2; 番目のオブジェクト、`left`パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトが同じアルゴリズム名を指定する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngAlgorithm.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクトが同じアルゴリズムを指定しません。"
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "アルゴリズムの名前を指定するオブジェクト。"
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "によって識別されるオブジェクトと比較する&2; 番目のオブジェクト、`left`パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトが同じアルゴリズム名を指定しない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> RSA ハッシュ アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "RSA アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  id: Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>セキュア ハッシュ アルゴリズム 1 (sha-1) アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Sha-1 アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.Sha1*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  id: Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>セキュリティで保護されたハッシュ アルゴリズムの 256 (SHA 256) アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Sha-256 アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  id: Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>セキュリティで保護されたハッシュ アルゴリズム 384 (sha-384) アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Sha-384 アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.Sha384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  id: Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しい取得<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>セキュリティで保護されたハッシュ アルゴリズム 512 (SHA 512) アルゴリズムを指定するオブジェクト。"
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Sha-512 アルゴリズムを指定するオブジェクト。"
  overload: System.Security.Cryptography.CngAlgorithm.Sha512*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "アルゴリズムの名前を取得、現在<xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;></xref>オブジェクトを指定します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "埋め込まれているアルゴリズムの名前です。"
  overload: System.Security.Cryptography.CngAlgorithm.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
- uid: System.Security.Cryptography.CngAlgorithm.#ctor*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithm.Equals
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithm.GetHashCode
- uid: System.Security.Cryptography.CngAlgorithm.MD5*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithm.op_Equality
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithm.op_Inequality
- uid: System.Security.Cryptography.CngAlgorithm.Rsa*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithm.ToString
