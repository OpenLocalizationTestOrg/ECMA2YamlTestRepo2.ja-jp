### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngKeyBlobFormat
  id: CngKeyBlobFormat
  children:
  - System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)
  - System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob
  - System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob
  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)
  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKeyBlobFormat.Format
  - System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob
  - System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob
  - System.Security.Cryptography.CngKeyBlobFormat.GetHashCode
  - System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  - System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob
  - System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob
  - System.Security.Cryptography.CngKeyBlobFormat.ToString
  langs:
  - csharp
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
  type: Class
  summary: "Microsoft Cryptography ・ Next Generation (CNG) オブジェクトを使用するためのキー BLOB 形式を指定します。"
  remarks: "CngKeyBlobFormat クラスは、ユーティリティ クラスです。 静的プロパティ、比較のメソッド、およびキー BLOB 形式の名前を指定する文字列を内部的に保持された、プライベートで構成されます。       静的プロパティは、CngKeyBlobFormat オブジェクトを返します。 各オブジェクトの内部文字列の名前は、静的プロパティの名前に対応するキー BLOB 形式の名前に初期化されます。       静的プロパティで対応されていないキー BLOB 形式のオブジェクトを作成するのにこのクラスを使用することもできます。       CNG のいくつかのクラス (など<xref:System.Security.Cryptography.CngKey>) を介して CngKeyBlobFormat オブジェクトを受け入れ、`format`パラメーター</xref:System.Security.Cryptography.CngKey> 。 呼び出して、オブジェクトのキーの BLOB の形式の埋め込み名を取得、クラス、CngKeyBlobFormat オブジェクトを受信すると<xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A>プロパティ</xref:System.Security.Cryptography.CngKeyBlobFormat.Format%2A>。       したがって、CngKeyBlobFormat は既知のキー BLOB 形式の列挙体として機能します。 文字列の代わりに厳密に型指定された値を使用して、よく知られているキー BLOB 形式を識別できます。"
  syntax:
    content: 'public sealed class CngKeyBlobFormat : IEquatable<System.Security.Cryptography.CngKeyBlobFormat>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngKeyBlobFormat>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: CngKeyBlobFormat(String)
  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>指定の形式を使用してクラスです。"
  remarks: "このコンス トラクターの主な目的<xref:System.Security.Cryptography.CngKeyBlobFormat>を<xref:System.Security.Cryptography.CngKeyBlobFormat>クラス</xref:System.Security.Cryptography.CngKeyBlobFormat>の静的プロパティでは表されない形式の種類のオブジェクト</xref:System.Security.Cryptography.CngKeyBlobFormat>を作成する方法を提供するには この機能により、将来[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]リリース、サービス パック、およびサード パーティ製開発者は、現在利用可能なキー BLOB 形式と同じようにアクセス可能な新しいのキー BLOB 形式を追加します。"
  syntax:
    content: public CngKeyBlobFormat (string format);
    parameters:
    - id: format
      type: System.String
      description: "初期化するためにキー BLOB 形式です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>format</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> format </code>パラメーターの長さが 0 (ゼロ)。"
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob
  id: EccPrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: EccPrivateBlob
  nameWithType: CngKeyBlobFormat.EccPrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>楕円曲線暗号 (ECC) キーの秘密キー BLOB を指定するオブジェクト。"
  remarks: "ECC 秘密キー BLOB の形式には、ECC キーのパブリックおよびプライベートの部分が含まれています。"
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPrivateBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "ECC 秘密キーの BLOB を指定するオブジェクト。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob
  id: EccPublicBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: EccPublicBlob
  nameWithType: CngKeyBlobFormat.EccPublicBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>楕円曲線暗号 (ECC) キーの公開キー BLOB を指定するオブジェクト。"
  remarks: "ECC 公開キー BLOB の形式には、ECC キーのパブリックな部分のみが含まれています。"
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPublicBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "ECC 公開キー BLOB を指定するオブジェクト。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngKeyBlobFormat.Equals(Object)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "現在の指定したオブジェクトと比較<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクト。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "現在と比較するオブジェクト<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> obj </code>パラメーターは、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>オブジェクトが現在のオブジェクトと同じキー BLOB 形式を指定するそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)
  id: Equals(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: Equals(CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "指定した比較<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>現在オブジェクト<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクト。"
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngKeyBlobFormat other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "現在と比較するオブジェクト<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> other </code>パラメーターが現在のオブジェクトと同じキー BLOB 形式を指定する場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.Format
  id: Format
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: Format
  nameWithType: CngKeyBlobFormat.Format
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "キー BLOB 形式の名前を取得、現在<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクトを指定します。"
  syntax:
    content: public string Format { get; }
    return:
      type: System.String
      description: "埋め込まれたキー BLOB の形式の名前です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.Format*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob
  id: GenericPrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: GenericPrivateBlob
  nameWithType: CngKeyBlobFormat.GenericPrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>ジェネリック プライベート キーの BLOB を指定するオブジェクト。"
  remarks: "汎用プライベート キーの BLOB は、任意の型の秘密キーを含めることができ、対応する公開キーを必ずしも含まないです。 BLOB を格納するキーの種類は、BLOB を調べることによってのみ決定できます。"
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPrivateBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "汎用プライベート キーの BLOB を指定するオブジェクト。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob
  id: GenericPublicBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: GenericPublicBlob
  nameWithType: CngKeyBlobFormat.GenericPublicBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>汎用的な公開キー BLOB を指定するオブジェクト。"
  remarks: "汎用的な公開キーの BLOB には、任意の型の公開キーを含めることができます。 BLOB を含む公開キーの種類は、BLOB を調べることによってのみ決定できます。"
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPublicBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "汎用的な公開キー BLOB を指定するオブジェクト。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngKeyBlobFormat.GetHashCode()
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "現在の埋め込みのキー BLOB 形式のハッシュ値を生成<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクト。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "埋め込まれたキー BLOB 形式のハッシュ値。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  id: op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクトが同じキー BLOB 形式を指定します。"
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "キー BLOB 形式を指定するオブジェクト。"
    - id: right
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "によって識別されるオブジェクトと比較する&2; 番目のオブジェクト、`left`パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトが同じキー BLOB は、形式を指定した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  id: op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクトが同じキー BLOB 形式を指定しません。"
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "キー BLOB 形式を指定するオブジェクト。"
    - id: right
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "によって識別されるオブジェクトと比較する&2; 番目のオブジェクト、`left`パラメーター。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトを指定しなかった場合、同じキー BLOB 形式です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob
  id: OpaqueTransportBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: OpaqueTransportBlob
  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>不透明なトランスポート キー BLOB を指定するオブジェクト。"
  remarks: "不透明なトランスポート キー BLOB の形式が、によって決定され、各キー格納プロバイダーに関連付けられています。 インポートとトランスポートの不透明な形式でキーをエクスポートは、両方の操作を同一のキー記憶域プロバイダーを使用する必要があります。"
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat OpaqueTransportBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: "不透明なトランスポート キー BLOB を指定するオブジェクト。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob
  id: Pkcs8PrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: Pkcs8PrivateBlob
  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: '取得、 <xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;> </xref>秘密キー情報構文標準 (PKCS 8) キー BLOB を指定するオブジェクト。'
  remarks: 'PKCS 8 秘密キー BLOB には、PKCS #8 形式でプライベートとパブリックの両方のキー マテリアルが含まれています。'
  syntax:
    content: public static System.Security.Cryptography.CngKeyBlobFormat Pkcs8PrivateBlob { get; }
    return:
      type: System.Security.Cryptography.CngKeyBlobFormat
      description: 'PKCS 8 秘密キー BLOB を指定するオブジェクト。'
  overload: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString
  id: ToString
  parent: System.Security.Cryptography.CngKeyBlobFormat
  langs:
  - csharp
  name: ToString()
  nameWithType: CngKeyBlobFormat.ToString()
  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "キー BLOB 形式の名前を取得、現在<xref href=&quot;System.Security.Cryptography.CngKeyBlobFormat&quot;></xref>オブジェクトを指定します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "埋め込まれたキー BLOB の形式の名前です。"
  overload: System.Security.Cryptography.CngKeyBlobFormat.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: CngKeyBlobFormat(String)
  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: EccPrivateBlob
  nameWithType: CngKeyBlobFormat.EccPrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat
  parent: System.Security.Cryptography
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat
  fullName: System.Security.Cryptography.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: EccPublicBlob
  nameWithType: CngKeyBlobFormat.EccPublicBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Equals(Object)
  nameWithType: CngKeyBlobFormat.Equals(Object)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Equals(CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKeyBlobFormat.Format
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Format
  nameWithType: CngKeyBlobFormat.Format
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GenericPrivateBlob
  nameWithType: CngKeyBlobFormat.GenericPrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GenericPublicBlob
  nameWithType: CngKeyBlobFormat.GenericPublicBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GetHashCode()
  nameWithType: CngKeyBlobFormat.GetHashCode()
  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: OpaqueTransportBlob
  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Pkcs8PrivateBlob
  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob
  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: ToString()
  nameWithType: CngKeyBlobFormat.ToString()
  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()
- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: CngKeyBlobFormat
  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: EccPrivateBlob
  nameWithType: CngKeyBlobFormat.EccPrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: EccPublicBlob
  nameWithType: CngKeyBlobFormat.EccPublicBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Equals
  nameWithType: CngKeyBlobFormat.Equals
- uid: System.Security.Cryptography.CngKeyBlobFormat.Format*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Format
  nameWithType: CngKeyBlobFormat.Format
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GenericPrivateBlob
  nameWithType: CngKeyBlobFormat.GenericPrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GenericPublicBlob
  nameWithType: CngKeyBlobFormat.GenericPublicBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: GetHashCode
  nameWithType: CngKeyBlobFormat.GetHashCode
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: op_Equality
  nameWithType: CngKeyBlobFormat.op_Equality
- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: op_Inequality
  nameWithType: CngKeyBlobFormat.op_Inequality
- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: OpaqueTransportBlob
  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: Pkcs8PrivateBlob
  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob
- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString*
  parent: System.Security.Cryptography.CngKeyBlobFormat
  isExternal: false
  name: ToString
  nameWithType: CngKeyBlobFormat.ToString
