### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditorSheet
  id: ExpressionEditorSheet
  children:
  - System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  - System.Web.UI.Design.ExpressionEditorSheet.IsValid
  - System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  langs:
  - csharp
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
  type: Class
  summary: "カスタム式のデザイン時にエディター シートを表します。 このクラスは継承する必要があります。"
  remarks: "カスタム式エディターのシートには、デザイン時にカスタム式のプロパティを設定、開発者ことができます。 コントロール プロパティの値は、式文字列を使用して設定できます。式の文字列は、式エディターして式ビルダーによって実行時およびデザイン時に評価されます。       参照すると、 <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>、デザイン時のプロパティ グリッド内のコントロールのプロパティは、ビジュアル デザイナーがコントロールのプロパティの値を指定する式を設定するダイアログ ボックスを表示します</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>。 式のプレフィックスのリストに基づく式の型を選択することができます。 ビジュアル デザイナーを使用して、関連付けられている、一覧から式のプレフィックスを選択すると<xref:System.Web.UI.Design.ExpressionEditor>ExpressionEditorSheet オブジェクトを評価し、式の文字列に変換する構文に基づいて、その式の種類と</xref:System.Web.UI.Design.ExpressionEditor>。 ビジュアル デザイナーでは、式エディターのシートのプロパティを使用して、カスタム式の文字列に結合する&1; つ以上の文字列の入力を求めます。       通常、新しい式の型を指定すると、デザイン時に固有の式のプレフィックスを定義し、提供するカスタム、<xref:System.Web.Compilation.ExpressionBuilder>と<xref:System.Web.UI.Design.ExpressionEditor>実装</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.Compilation.ExpressionBuilder>。 必要に応じて、式の形成に使用されるプロパティを定義するカスタム ExpressionEditorSheet 実装を提供することができます。 式ビルダーと式エディターには、式のプレフィックスを関連付ける、適用、<xref:System.Web.Compilation.ExpressionEditorAttribute>属性および<xref:System.Web.Compilation.ExpressionPrefixAttribute>をカスタム属性<xref:System.Web.Configuration.ExpressionBuilder>クラス、し、式ビルダーでの式のプレフィックスを構成、 `expressionBuilders` Web 構成ファイル内の要素</xref:System.Web.Configuration.ExpressionBuilder></xref:System.Web.Compilation.ExpressionPrefixAttribute></xref:System.Web.Compilation.ExpressionEditorAttribute>。       既定の実装、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>メソッドを&1; つの入力文字列を使用して式を作成する基本的なエディター シートを返します</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>。 派生したカスタム式エディター、<xref:System.Web.UI.Design.ExpressionEditor>をオーバーライドできます、<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>をカスタム エディターのシートの実装を返すメソッド</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A></xref:System.Web.UI.Design.ExpressionEditor>。 通常、カスタム エディターのシートには、式の文字列の構築に使用される複数のプロパティが含まれています。 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>メソッドは、現在の式のプロパティに基づく結果として得られる式の文字列を返します</xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>。       たとえば、<xref:System.Web.UI.Design.ResourceExpressionEditor>から派生したクラス、<xref:System.Web.UI.Design.ExpressionEditor>クラスおよび評価して、デザイン時にコントロール プロパティを持つリソース文字列の参照を関連付けることの実装を提供します</xref:System.Web.UI.Design.ExpressionEditor></xref:System.Web.UI.Design.ResourceExpressionEditor>。 <xref:System.Web.Compilation.ResourceExpressionBuilder>クラスは、式のプレフィックスに関連付けられた`Resources`と<xref:System.Web.UI.Design.ResourceExpressionEditor>実装</xref:System.Web.UI.Design.ResourceExpressionEditor></xref:System.Web.Compilation.ResourceExpressionBuilder>。 <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>メソッドを返します、 <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>、リソースの参照式が形成する個々 のプロパティを定義します</xref:System.Web.UI.Design.ResourceExpressionEditorSheet></xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>。       ExpressionEditorSheet クラスから継承する場合は、次のメンバーをオーバーライドする必要があります: -<xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>をカスタム エディターのシートの実装を返すメソッド</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>。      -<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>式エディター シートを実装するためのカスタムの初期化のアクションを実装するコンス トラクター</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 。"
  syntax:
    content: public abstract class ExpressionEditorSheet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.Design.ExpressionEditorSheet>クラスは抽象クラスのインスタンスを作成することはできません、 <xref:System.Web.UI.Design.ExpressionEditorSheet>ExpressionEditorSheet コンス トラクターを使用して直接</xref:System.Web.UI.Design.ExpressionEditorSheet></xref:System.Web.UI.Design.ExpressionEditorSheet>。"
  syntax:
    content: protected ExpressionEditorSheet (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "追加のデザイン時サービスを取得するために使用、デザイナー ホストによって提供されるサービス プロバイダーの実装です。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  id: GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "派生クラスでオーバーライドされると、式エディターのシートのプロパティ値によって形成される式の文字列を返します。"
  remarks: "カスタム式エディターのシートには、デザイン時の式の文字列を結合する、複数の式プロパティの設定が含まれています。 コントロール プロパティの値は、式文字列を使用して設定できます。式の文字列は、式ビルダーによって実行時に評価されます。       GetExpression メソッドでは、現在の式のプロパティから組み込まれている式の文字列を返します。 ビジュアル デザイナーでは、シートのプロパティ式を設定することができ、式の文字列を取得し、コントロールのプロパティ値を設定するには、GetExpression メソッドを呼び出しています。"
  syntax:
    content: public abstract string GetExpression ();
    parameters: []
    return:
      type: System.String
      description: "現在のプロパティ値のカスタム式の文字列。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  id: IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "式の文字列が有効かどうかを示す値を取得します。"
  remarks: "この基本実装を常に返します`true`です。"
  syntax:
    content: public virtual bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、式の文字列が無効である場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  id: ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "式エディターのシートによって使用されるサービス プロバイダーの実装を取得します。"
  remarks: "使用して、<xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>カスタム式エディターのシートのサービス プロバイダーの実装を設定するコンス トラクター</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> 。       ServiceProvider プロパティは、デザイナー ホストによって提供されるサービスへのアクセスに使用できます。 たとえば、呼び出し、<xref:System.IServiceProvider.GetService%2A>メソッドを<xref:System.Web.UI.Design.IWebApplication>プロジェクト項目にアクセスする、ドキュメント、または、ビジュアルなデザイナーによって提供される構成ファイルの詳細へのインターフェイス</xref:System.Web.UI.Design.IWebApplication></xref:System.IServiceProvider.GetService%2A>。"
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    return:
      type: System.IServiceProvider
      description: "<xref:System.IServiceProvider>、追加のデザイン時サービスを得るために使用できるデザイン ホストで提供される通常</xref:System.IServiceProvider>。"
  overload: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression
  nameWithType: ExpressionEditorSheet.GetExpression
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
