### YamlMime:ManagedReference
items:
- uid: System.Xml.Xsl.XslTransform
  id: XslTransform
  children:
  - System.Xml.Xsl.XslTransform.#ctor
  - System.Xml.Xsl.XslTransform.Load(System.String)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  - System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  - System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  - System.Xml.Xsl.XslTransform.XmlResolver
  langs:
  - csharp
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
  type: Class
  summary: "XML の使用してデータ、Extensible Stylesheet Language Transformations (XSLT) スタイル シートを変換します。"
  remarks: "> [!NOTE]>、XslTransform クラスは、Microsoft .NET Framework version 2.0 廃止されています。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       XslTransform には、XSLT 1.0 の構文がサポートしています。 XSLT スタイル シートは、名前空間を使用する必要があります`http://www.w3.org/1999/XSL/Transform`です。       <xref:System.Xml.Xsl.XsltArgumentList>クラス</xref:System.Xml.Xsl.XsltArgumentList>を使用してスタイル シートに追加の引数を追加することも このクラスには、スタイル シートから呼び出すことができるスタイル シートと拡張オブジェクトの入力パラメーターが含まれています。       XML データを変換する: 1。  XslTransform オブジェクトを作成します。      2.  使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>変換のスタイル シートを読み込みます</xref:System.Xml.Xsl.XslTransform.Load%2A>。 このメソッドは、いくつかのオーバー ロードがありを使用してスタイル シートを読み込むことができます、 <xref:System.Xml.XmlReader>、 <xref:System.Xml.XPath.XPathNavigator>、 <xref:System.Xml.XPath.IXPathNavigable>、またはファイルの場所の URL</xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlReader> 。      3.  使用して、 <xref:System.Xml.Xsl.XslTransform.Transform%2A>XML データを変換するメソッド</xref:System.Xml.Xsl.XslTransform.Transform%2A>。 このメソッドは、いくつかのオーバー ロードがあり、さまざまな種類の入力と出力を処理できます。 指定することも、 <xref:System.Xml.Xsl.XsltArgumentList>、変換中に入力として使用する追加の引数を格納します</xref:System.Xml.Xsl.XsltArgumentList>。       **セキュリティに関する考慮事項**XslTransform クラスを使用するアプリケーションを作成するときにおく必要があります、次の項目とその関連事項に注意してください:-拡張オブジェクトが既定で有効にします。 場合、<xref:System.Xml.Xsl.XsltArgumentList>に拡張オブジェクトを含むオブジェクトが渡される、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが使用されます</xref:System.Xml.Xsl.XslTransform.Transform%2A></xref:System.Xml.Xsl.XsltArgumentList>。      -XSLT スタイル シートには、他のファイルや埋め込みのスクリプト ブロックへの参照を含めることができます。 悪意のあるユーザーがデータを使用するを指定することによってこれを悪用やスタイル シートを実行すると、コンピューターのリソースが不足するまで、処理する、システムが発生します。      -混在信頼環境で実行される XSLT アプリケーションは、スタイル シートのなりすましになります。 たとえば、悪意のあるユーザーできます有害なスタイル シートを持つオブジェクトを読み込んで、その後呼び出す別のユーザーに渡す、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッド変換を実行します</xref:System.Xml.Xsl.XslTransform.Transform%2A>。       XslTransform オブジェクト、XSLT スタイル シート、または信頼されていないソースから XML ソース データを受け付けないことで、これらのセキュリティ問題を軽減できます。       **スクリプトのサポート**このクラスは、使用した埋め込みスクリプトをサポートしている、`msxsl:script`要素。       .NET Framework のバージョン 1.1 では、スタイル シートの証拠は、埋め込みのスクリプトに与えられる権限を決定します。      -スタイル シートが読み込まれてから、Uniform Resource Identifier () 場合、URI は証拠の作成に使用されます。 この証拠には、そのサイトおよびゾーンと共に URI が含まれています。      -別のソースを使用して、スタイル シートが読み込まれている場合は、渡すことによって証拠を指定できます、<xref:System.Security.Policy.Evidence?displayProperty=fullName>オブジェクトを<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslTransform.Load%2A></xref:System.Security.Policy.Evidence?displayProperty=fullName>。 それ以外の場合、スクリプト アセンブリが完全な信頼を持ちます。       呼び出し元が信頼度の低い:`UnmanagedCode`埋め込みスクリプトをコンパイルする権限が必要です。 `ControlEvidence`提供するアクセス許可が必要な<xref:System.Security.Policy.Evidence>を<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッド</xref:System.Xml.Xsl.XslTransform.Load%2A></xref:System.Security.Policy.Evidence>。 A <xref:System.Security.SecurityException>、呼び出し元が必要なアクセス許可を持っていない場合にスローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission?displayProperty=fullName>。       `msxsl:script`要素には、次の要件: -`msxsl:script`要素が属する、`urn:schemas-microsoft-com:xslt`名前空間。 スタイル シートは、名前空間宣言を含める必要があります`xmlns:msxsl=urn:schemas-microsoft-com:xslt`です。      -`msxsl:script`要素を含めることができます、`language`属性を使用するスクリプト言語を指定します。 値、`language`属性は、次のいずれかを指定する必要があります: C# の場合、CSharp、VB、VisualBasic、JScript、または JavaScript。 言語名を大文字小文字を区別できないために、JavaScript および javascript はどちらも有効です。 場合、`language`属性が指定されていない、既定値は JScript です。      -`msxsl:script`要素を含める必要があります、`implements-prefix`スクリプト ブロックに関連付けられている名前空間を表すプレフィックスが含まれている属性です。 この名前空間は、スタイル シート内で定義されている必要があります。 スタイル シートには、名前空間にグループ分けされる複数のスクリプト ブロックを含めることができます。 同じ名前空間内の複数の言語のスクリプト ブロックすることはできません。 スクリプト ブロックは、スクリプト ブロックは、同じ名前空間内に存在していれば、別のスクリプト ブロックで定義された関数を呼び出すことができます。 スクリプト ブロックの内容をスクリプト言語の構文と規則に従って解析されます (によって提供される、`language`属性)。 たとえば、c# スクリプト ブロックがあれば、コメントが付きます、`//`文字です。 コメントは、有効な XML コンテンツである必要があります。       `Note`CDATA セクションでは、スクリプト ブロックをラップすることをお勧めします。      ```   <msxsl:script implements-prefix=&quot;xy&quot; language=&quot;C#&quot;>     <![CDATA[     // Add code here.     ]]>   </msxsl:script>   ```内で関数を宣言することができます、`msxsl:script`要素。 次の表は、既定ではサポートされている名前空間を示します。      |名前空間はサポート |説明 |  |--------------------------|-----------------|  |`System`|システムのクラスです |。  |`System.Collection`|コレクション クラスです |。  |`System.Text`|テキストのクラスを処理します |。  |`System.Xml`|コア XML クラスです |。  |`System.Xml.Xsl`|XSLT クラスです |。  |`System.Xml.XPath`|XML パス言語 (XPath) クラス |。      指定された引数とスクリプト関数で定義された戻り値を以下に示す World Wide Web Consortium (W3C) 型のいずれかのことがあります。 次の表に、W3C 型、XPath または XSLT のいずれかの間のマッピングと、対応する .NET Framework のクラスです。      |W3C 型 |同等の .NET クラス |  |--------------|---------------------------|  |文字列 (XPath) |`System.String`|  |ブール値 (XPath) |`System.Boolean`|  |数 (XPath) |`System.Double`|  |結果ツリー フラグメント (XSLT) |`System.Xml.XPath.XPathNavigator`|  |ノード セット (XPath) |`System.Xml.XPath.XPathNodeIterator`|      スクリプト関数では、1、次の数値型のかどうか: Int16、UInt16、Int32、UInt32、Int64、UInt64、Single、または&10; 進数、これらの型を強制的に、W3C XPath 数値型に対応する Double にします。       関数が呼び出されたときに、例外がスローされます、必要な型のいずれかに引数の結果を変換できません。      > [!NOTE]  >   `msxsl:script`と`msxsl:node-list`からのみの機能は、 `urn:schemas-microsoft-com:xslt` XslTransform クラスでサポートされている名前空間。       XslTransform には、拡張メカニズムとしての共通言語ランタイム (CLR) コードを使用することがあります。 これは、XslTransform クラスに、クラスのインスタンスを渡すことと、XSLT スタイル シート内でそのパブリック メソッドを呼び出すことによって行います。 定義されているメソッド、`params`このシナリオでは、渡されるパラメーター数が指定されていないキーワードが正しく機能しません。 参照してください[params](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       詳細については、次を参照してください。 [XslTransform クラスによる XSLT 変換](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example transforms the specified XML document and outputs the result to the console.  \n  \n [!code-vb[Classic WebData XslTransform Example#1](~/add/codesnippet/visualbasic/t-system.xml.xsl.xsltran_1.vb)]\n [!code-cs[Classic WebData XslTransform Example#1](~/add/codesnippet/csharp/t-system.xml.xsl.xsltran_1.cs)]"
  syntax:
    content: >-
      [System.Obsolete("This class has been deprecated. Please use System.Xml.Xsl.XslCompiledTransform instead. http://go.microsoft.com/fwlink/?linkid=14202")]

      public sealed class XslTransform
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.#ctor
  id: '#ctor'
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref>クラスです。"
  syntax:
    content: public XslTransform ();
    parameters: []
  overload: System.Xml.Xsl.XslTransform.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URL で指定された XSLT スタイル シートを読み込みます。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl=``http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 使用して外部リソースが解決される、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 受け取るオーバー ロードを使用してスタイル シートがある場合、認証が必要なネットワーク リソースには、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 スタイル シートの URI を使用して、アセンブリに適用する証拠を作成できます。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_0_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_0_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_0_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_0_3.xsl)]"
  syntax:
    content: public void Load (string url);
    parameters:
    - id: url
      type: System.String
      description: "読み込みに XSLT スタイル シートを指定する URL です。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "読み込まれたリソースは、有効なスタイル シートではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>に含まれている XSLT スタイル シートを読み込みます"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 使用して外部リソースが解決される、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 受け取るオーバー ロードを使用してスタイル シートがある場合、認証が必要なネットワーク リソースには、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を介してすべての子</xref:System.Xml.XmlReader>。 これにより、スタイル シートとして、ドキュメントの一部を使用することができます。 後に、<xref:System.Xml.Xsl.XslTransform.Load%2A>メソッドを返します、<xref:System.Xml.XmlReader>スタイル シートの終了後に次のノードに配置されています</xref:System.Xml.XmlReader></xref:System.Xml.Xsl.XslTransform.Load%2A>。 ドキュメントの末尾に達した場合、<xref:System.Xml.XmlReader>は、ファイルの末尾 (EOF) に配置します</xref:System.Xml.XmlReader>。       かどうか、スタイル シートが含まれているエンティティを指定してください、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName>返します`true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> ここで、<xref:System.Xml.XmlValidatingReader>使用できます</xref:System.Xml.XmlValidatingReader>。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、する証拠を使用して、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  example:
  - "The following example transforms an XML file sorting all the books by title.  \n  \n [!code-cs[XslTransform.Load3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_1_1.cs)]\n [!code-cpp[XslTransform.Load3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_1_1.cpp)]\n [!code-vb[XslTransform.Load3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_1_1.vb)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load3#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_2.xml)]  \n  \n `titles.xsl`  \n  \n [!code-xml[XslTransform.Load3#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_1_3.xsl)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>XSLT スタイル シートを含むオブジェクトです</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  id: Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref>です。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 使用して外部リソースが解決される、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 受け取るオーバー ロードを使用してスタイル シートがある場合、認証が必要なネットワーク リソースには、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、する証拠を使用して、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT スタイル シートを含むです。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "読み込まれたリソースは、有効なスタイル シートではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  id: Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 使用して外部リソースが解決される、<xref:System.Xml.XmlUrlResolver>ユーザー資格情報を持たない</xref:System.Xml.XmlUrlResolver>。 受け取るオーバー ロードを使用してスタイル シートがある場合、認証が必要なネットワーク リソースには、 <xref:System.Xml.XmlResolver>、引数の&1; つとして指定し、 <xref:System.Xml.XmlResolver>、必要な資格情報</xref:System.Xml.XmlResolver></xref:System.Xml.XmlResolver>。       <xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の現在位置からスタイル シートが読み込まれます スタイル シートとして、読み込んだドキュメントの一部のみを使用するには、スタイル シートの先頭に対応するノードに移動します。 Load メソッドから制御が戻た後、<xref:System.Xml.XPath.XPathNavigator>がスタイル シートの先頭に配置されている (上、`xsl:style sheet`ノード).</xref:System.Xml.XPath.XPathNavigator>       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、する証拠を使用して、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> XSLT スタイル シートを含むオブジェクトです。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  id: Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "URL で指定された XSLT スタイル シートを読み込みます。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 スタイル シートの URI を使用して、アセンブリに適用する証拠を作成できます。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  example:
  - "The following example transforms an XML document into an HTML document. The example loads an XSLT style sheet which contains an `xsl:include` element referencing another style sheet. An <xref:System.Xml.XmlUrlResolver> is passed to the Load method which sets the credentials necessary to access the network resource for the included style sheet.  \n  \n [!code-vb[XslTransform.Load2#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_3_1.vb)]\n [!code-cs[XslTransform.Load2#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_3_1.cs)]  \n  \n The example uses the following data files as input.  \n  \n `books.xml`  \n  \n [!code-xml[XslTransform.Load2#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_2.xml)]  \n  \n `sort.xsl`  \n  \n [!code-xml[XslTransform.Load2#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_3.xsl)]  \n  \n `includefile.xsl`  \n  \n [!code-xml[XslTransform.Load2#4](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_3_4.xsl)]"
  syntax:
    content: public void Load (string url, System.Xml.XmlResolver resolver);
    parameters:
    - id: url
      type: System.String
      description: "読み込みに XSLT スタイル シートを指定する URL です。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>スタイル シートおよびで参照されているどのスタイル シートの読み込みに使用する`xsl:import`と`xsl:include`要素。       これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、既定の<xref href=&quot;System.Xml.XmlUrlResolver&quot;></xref>を開くには、スタイル シートなしのユーザーに資格情報が使用されます。 既定の<xref href=&quot;System.Xml.XmlUrlResolver&quot;></xref>ため、スタイル シート内の任意の外部リソースを解決するのには使用されません`xsl:import`と`xsl:include`要素は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>ロード メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "読み込まれたリソースは、有効なスタイル シートではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>に含まれている XSLT スタイル シートを読み込みます"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を介してすべての子</xref:System.Xml.XmlReader>。 これにより、スタイル シートとして、ドキュメントの一部を使用することができます。       Load メソッドが返った後に、<xref:System.Xml.XmlReader>が配置されている次のノードで、スタイル シートの終了後にします</xref:System.Xml.XmlReader>。 ドキュメントの末尾に達した場合、<xref:System.Xml.XmlReader>は、ファイルの末尾 (EOF) に配置します</xref:System.Xml.XmlReader>。       かどうか、スタイル シートが含まれているエンティティを指定してください、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName>返します`true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> ここで、<xref:System.Xml.XmlValidatingReader>使用できます</xref:System.Xml.XmlValidatingReader>。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、する証拠を使用して、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートを Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>XSLT スタイル シートを含むオブジェクトです</xref:System.Xml.XmlReader>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>ロード メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref>です。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、する証拠を使用して、<xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>メソッド</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.IXPathNavigable%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT スタイル シートを含むです。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Load*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Load*>。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "読み込まれたリソースは、有効なスタイル シートではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       <xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の現在位置からスタイル シートが読み込まれます 使用するには、読み込んだドキュメントの一部として、スタイル シートには、スタイル シートの先頭に対応するノードに移動します。 Load メソッドから制御が戻た後、<xref:System.Xml.XPath.XPathNavigator>がスタイル シートの先頭に配置されている (上、`xsl:style sheet`ノード).</xref:System.Xml.XPath.XPathNavigator>       場合は、スタイル シートには、埋め込みスクリプトが含まれています、スクリプトは、アセンブリにコンパイルされます。 アセンブリは、完全な信頼を持ちます。 推奨される方法は、 <xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>。</xref:System.Xml.Xsl.XslTransform.Load%28System.Xml.XPath.XPathNavigator%2CSystem.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29>を使用する証拠を指定するには 問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。      > [!NOTE] >、呼び出し元がない場合`UnmanagedCode`権限、埋め込みのスクリプトがコンパイルされていないと、<xref:System.Security.SecurityException>スローされます</xref:System.Security.SecurityException>。 参照してください<xref:System.Security.Permissions.SecurityPermission>と<xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>詳細についてはします</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName></xref:System.Security.Permissions.SecurityPermission>。"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> XSLT スタイル シートを含むオブジェクトです。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Load*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Load*>。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "スタイル シートには、埋め込みのスクリプトと、呼び出し元が持たない<xref uid=&quot;langword_csharp_UnmanagedCode&quot; name=&quot;UnmanagedCode&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "<xref:System.Xml.XmlReader>。</xref:System.Xml.XmlReader>に含まれている XSLT スタイル シートを読み込みます このメソッドでは、証拠を指定することで、スタイル シートのアクセス許可を制限することができます。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       このメソッドは、XSLT スタイル シートを読み込みます`xsl:include`と`xsl:import`要素。 現在のノードからスタイル シートを読み込み、<xref:System.Xml.XmlReader>を介してすべての子</xref:System.Xml.XmlReader>。 これにより、スタイル シートとして、ドキュメントの一部を使用することができます。       Load メソッドが返った後に、<xref:System.Xml.XmlReader>が配置されている次のノードで、スタイル シートの終了後にします</xref:System.Xml.XmlReader>。 ドキュメントの末尾に達した場合、<xref:System.Xml.XmlReader>は、ファイルの末尾 (EOF) に配置します</xref:System.Xml.XmlReader>。       かどうか、スタイル シートが含まれているエンティティを指定してください、<xref:System.Xml.XmlReader>エンティティを解決することができます (<xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName>返します`true`).</xref:System.Xml.XmlReader.CanResolveEntity%2A?displayProperty=fullName> </xref:System.Xml.XmlReader> ここで、<xref:System.Xml.XmlValidatingReader>使用できます</xref:System.Xml.XmlValidatingReader>。       問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。       証拠を提供するさまざまな方法はあります。 次の表では、一般的なユーザー シナリオを実現する証拠の種類について説明します。"
  example:
  - "The following example performs an XSLT transformation where `xsltReader` is an <xref:System.Xml.XmlReader> containing a style sheet and `secureURL` is a trusted URL that can be used to create <xref:System.Security.Policy.Evidence>. The <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A?displayProperty=fullName> method is used to create <xref:System.Security.Policy.Evidence> which is applied to the style sheet.  \n  \n [!code-vb[XslTransform.Load4#1](~/add/codesnippet/visualbasic/a033551f-1c0f-4994-8153-_1.vb)]\n [!code-cs[XslTransform.Load4#1](~/add/codesnippet/csharp/a033551f-1c0f-4994-8153-_1.cs)]\n [!code-cpp[XslTransform.Load4#1](~/add/codesnippet/cpp/a033551f-1c0f-4994-8153-_1.cpp)]"
  syntax:
    content: public void Load (System.Xml.XmlReader stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>を読み込む、スタイル シートを含むオブジェクト</xref:System.Xml.XmlReader>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Load*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Load*>。"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT スタイル シートのスクリプト ブロックに生成されたアセンブリを設定します。       これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、スクリプト ブロックには、処理、XSLT`document()`関数はサポートされていないと、特権を持つ拡張オブジェクトは許可されません。       呼び出し元には<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>スクリプト アセンブリの証拠を提供するために許可します。 部分的に信頼された呼び出し元は、このパラメーターを設定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "参照されるスタイル シートには、指定された証拠によって許可されていない機能が必要です。       呼び出し元の証拠を提供しようし、はいません<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;></xref>です。 このメソッドでは、証拠を指定することで、スタイル シートのアクセス許可を制限することができます。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。       証拠を提供するさまざまな方法はあります。 次の表では、一般的なユーザー シナリオを実現する証拠の種類について説明します。"
  syntax:
    content: public void Load (System.Xml.XPath.IXPathNavigable stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;> </xref> XSLT スタイル シートを含むです。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Load*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Load*>。"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT スタイル シートのスクリプト ブロックに生成されたアセンブリを設定します。       これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、スクリプト ブロックには、処理、XSLT`document()`関数はサポートされていないと、特権を持つ拡張オブジェクトは許可されません。       呼び出し元には<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>スクリプト アセンブリの証拠を提供するために許可します。 部分的に信頼された呼び出し元は、このパラメーターを設定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "読み込まれたリソースは、有効なスタイル シートではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "参照されるスタイル シートには、指定された証拠によって許可されていない機能が必要です。       呼び出し元の証拠を提供しようし、はいません<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  id: Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "格納されている XSLT スタイル シートを読み込み、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。 このメソッドでは、証拠を指定することで、スタイル シートのアクセス許可を制限することができます。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       <xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の現在位置からスタイル シートが読み込まれます 使用するには、読み込んだドキュメントの一部として、スタイル シートには、スタイル シートの先頭に対応するノードに移動します。 Load メソッドから制御が戻た後、<xref:System.Xml.XPath.XPathNavigator>がスタイル シートの先頭に配置されている (上、`xsl:style sheet`ノード).</xref:System.Xml.XPath.XPathNavigator>       問題について、<xref:System.Xml.Xsl.XslTransform.Load%2A>を埋め込みスクリプトでのメソッド、スタイル シートが Q316755 http://support.microsoft.com にで、Microsoft サポート技術情報の記事を参照してください</xref:System.Xml.Xsl.XslTransform.Load%2A>。       証拠を提供するさまざまな方法はあります。 次の表では、一般的なユーザー シナリオを実現する証拠の種類について説明します。"
  example:
  - "The following example performs an XSLT transformation using a style sheet from an outside source. Because the style sheet comes from an untrusted source, the `resolver` and `evidence` parameters are set to `null`.  \n  \n [!code-cs[XslTransform.Load5#1](~/add/codesnippet/csharp/3ff68c6b-cad3-409a-909a-_1.cs)]\n [!code-vb[XslTransform.Load5#1](~/add/codesnippet/visualbasic/3ff68c6b-cad3-409a-909a-_1.vb)]"
  syntax:
    content: public void Load (System.Xml.XPath.XPathNavigator stylesheet, System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);
    parameters:
    - id: stylesheet
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>読み込めませんスタイル シートを含むオブジェクト。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>で参照されているどのスタイル シートを読み込んだりするために使用`xsl:import`と`xsl:include`要素。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、外部のリソースが解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Load*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Load*>。"
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> XSLT スタイル シートのスクリプト ブロックに生成されたアセンブリを設定します。       これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、スクリプト ブロックには、処理、XSLT`document()`関数はサポートされていないと、特権を持つ拡張オブジェクトは許可されません。       呼び出し元には<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>スクリプト アセンブリの証拠を提供するために許可します。 部分的に信頼された呼び出し元は、このパラメーターを設定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Xsl.XslTransform.Load*
  exceptions:
  - type: System.Xml.Xsl.XsltCompileException
    commentId: T:System.Xml.Xsl.XsltCompileException
    description: "現在のノードは、有効なスタイル シートには従っていません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "参照されるスタイル シートには、指定された証拠によって許可されていない機能が必要です。       呼び出し元の証拠を提供しようし、はいません<xref uid=&quot;langword_csharp_ControlEvidence&quot; name=&quot;ControlEvidence&quot; href=&quot;&quot;></xref>権限です。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  id: Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "入力ファイル内の XML データを変換し、出力ファイルに結果を出力します。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。      > [!NOTE] > このメソッドは .NET Framework のバージョン 1.1 で廃止されています。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。"
  example:
  - "The following example transforms the `books.xml` file using the `output.xsl` style sheet and outputs the results to the `books.html` file.  \n  \n [!code-cs[XslTransform.Transform3#1](~/add/codesnippet/csharp/m-system.xml.xsl.xsltran_2_1.cs)]\n [!code-cpp[XslTransform.Transform3#1](~/add/codesnippet/cpp/m-system.xml.xsl.xsltran_2_1.cpp)]\n [!code-vb[XslTransform.Transform3#1](~/add/codesnippet/visualbasic/m-system.xml.xsl.xsltran_2_1.vb)]  \n  \n The sample uses the following two input files:  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/m-system.xml.xsl.xsltran_2_3.xsl)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile);
    parameters:
    - id: inputfile
      type: System.String
      description: "変換対象のソース ドキュメントの URL です。"
    - id: outputfile
      type: System.String
      description: "出力ファイルの URL です。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlReader>(、`xsl:output`要素は無視されます).</xref:System.Xml.XmlReader> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>変換の結果を格納します</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       <xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます</xref:System.Xml.XmlReader>。 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。      > [!NOTE] > このメソッドは今後使用しません。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティは、XSLT document() 関数の解決方法を決定します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>変換の結果を格納します</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  id: Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "入力ファイル内の XML データを変換し、出力ファイルに結果を出力します。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。"
  example:
  - "The following example performs an XSLT transformation and outputs to a file. An <xref:System.Xml.XmlUrlResolver> with default credentials is used resolve an external resources. See <xref:System.Net.CredentialCache.DefaultCredentials%2A> for details.  \n  \n [!code-cs[XslTransform.Transform7#1](~/add/codesnippet/csharp/86f1726f-f5ec-4750-8359-_1.cs)]\n [!code-vb[XslTransform.Transform7#1](~/add/codesnippet/visualbasic/86f1726f-f5ec-4750-8359-_1.vb)]\n [!code-cpp[XslTransform.Transform7#1](~/add/codesnippet/cpp/86f1726f-f5ec-4750-8359-_1.cpp)]"
  syntax:
    content: public void Transform (string inputfile, string outputfile, System.Xml.XmlResolver resolver);
    parameters:
    - id: inputfile
      type: System.String
      description: "変換対象のソース ドキュメントの URL です。"
    - id: outputfile
      type: System.String
      description: "出力ファイルの URL です。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Transform*>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.Stream
      description: "出力するストリーム。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。       エンコーディング属性を`xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>を出力するときに、要素がサポートされていません 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメント、ノードだけを含むと渡す<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlReader>(、`xsl:output`要素は無視されます).</xref:System.Xml.XmlReader> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメント、ノードだけを含むと渡す<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document and outputs the results to an `XmlReader`. An <xref:System.Xml.XmlUrlResolver> with the necessary credentials is used to process any XSLT `document()` functions.  \n  \n [!code-cpp[XslTransform.Transform4#1](~/add/codesnippet/cpp/33389ef1-3a26-4334-acdd-_1.cpp)]\n [!code-cs[XslTransform.Transform4#1](~/add/codesnippet/csharp/33389ef1-3a26-4334-acdd-_1.cs)]\n [!code-vb[XslTransform.Transform4#1](~/add/codesnippet/visualbasic/33389ef1-3a26-4334-acdd-_1.vb)]"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>変換の結果を格納します</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlWriter>(`xsl:output`は無視されます).</xref:System.Xml.XmlWriter> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.Stream
      description: "出力するストリーム。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       エンコーディング属性を`xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>を出力するときに、要素がサポートされていません 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlReader>.</xref:System.Xml.XmlReader>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       <xref:System.Xml.XmlReader>読み取り専用の出力を提供、`xsl:output`要素は無視されます</xref:System.Xml.XmlReader>。 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       このメソッドでは、ソース ドキュメントの非同期変換を実行することができます。"
  syntax:
    content: public System.Xml.XmlReader Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>変換の結果を格納します</xref:System.Xml.XmlReader>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、指定した引数を使用して、結果<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>を出力します"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、あるノードで、変換処理の前に現在は、変換メソッドが呼び出された後に、現在のノードを状態です。       `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlWriter>(`xsl:output`は無視されます).</xref:System.Xml.XmlWriter> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。      > [!NOTE] > このメソッドは廃止されました。 設定、<xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>プロパティを決定する方法、XSLT`document()`関数は解決します</xref:System.Xml.Xsl.XslTransform.XmlResolver%2A>。 使用が推奨されて、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドは、<xref:System.Xml.XmlResolver>オブジェクト引数のいずれかのとして取得します</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Transform%2A>。"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example performs a transformation within an ASP.NET page.  \n  \n [!code-vb[XslTransform.Transform5#1](~/add/codesnippet/visualbasic/0aececb0-8968-432a-8b61-_1.aspx)]\n [!code-cs[XslTransform.Transform5#1](~/add/codesnippet/csharp/0aececb0-8968-432a-8b61-_1.aspx)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.Stream
      description: "出力するストリーム。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform*>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Transform*>。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。       エンコーディング属性を`xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>を出力するときに、要素がサポートされていません 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />      <template match=&quot;/&quot;>        Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML file and outputs an HTML string. The <xref:System.IO.StringReader> and <xref:System.IO.StringWriter> classes are used to read and write the strings.  \n  \n [!code-vb[XslTransform.Transform6#1](~/add/codesnippet/visualbasic/f37e0493-6ab0-43d9-9439-_1.vb)]\n [!code-cs[XslTransform.Transform6#1](~/add/codesnippet/csharp/f37e0493-6ab0-43d9-9439-_1.cs)]  \n  \n The example uses the `books.xml` file as input.  \n  \n [!code-xml[XslTransform.Transform6#2](~/add/codesnippet/xml/f37e0493-6ab0-43d9-9439-_2.xml)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>指定して<code> args </code> <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlWriter>(`xsl:output`は無視されます).</xref:System.Xml.XmlWriter> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。       変換は、ドキュメント全体に適用されます。 つまり、渡した場合は、ドキュメント ルート ノード以外のノードで、これは防止しません、変換処理、読み込んだドキュメントのすべてのノードへのアクセスします。 ノード フラグメントを変換する必要がありますを作成する、<xref:System.Xml.XmlDocument>フラグメントし、渡すを単にノードを含む<xref:System.Xml.XmlDocument>変換メソッドにします</xref:System.Xml.XmlDocument></xref:System.Xml.XmlDocument>。       次の例では、ノード フラグメントの変換を実行します。      ```   XslTransform xslt = new XslTransform();        xslt.Load(&quot;print_root.xsl&quot;);   XmlDocument doc = new XmlDocument();   doc.Load(&quot;library.xml&quot;);   // Create a new document containing just the node fragment.   XmlNode testNode = doc.DocumentElement.FirstChild;    XmlDocument tmpDoc = new XmlDocument();    tmpDoc.LoadXml(testNode.OuterXml);   // Pass the document containing the node fragment    // to the Transform method.   Console.WriteLine(&quot;Passing &quot; + tmpDoc.OuterXml + &quot; to print_root.xsl&quot;);   xslt.Transform(tmpDoc, null, Console.Out, null);   ```この例では、`library.xml`と`print_root.xsl`ファイルを入力としてし、コンソールには、次を出力します。      ```   Passing <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;><title>Pride And Prejudice</title></book> to print_root.xsl    Root node is book.   ```       `library.xml`      ```   <library>     <book genre=&quot;novel&quot; ISBN=&quot;1-861001-57-5&quot;>        <title>Pride And Prejudice</title>     </book>     <book genre=&quot;novel&quot; ISBN=&quot;1-81920-21-2&quot;>        <title>Hook</title>     </book>   </library>   ```       `print_root.xsl`      ```   <style sheet version=&quot;1.0&quot; xmlns=&quot;http://www.w3.org/1999/XSL/Transform&quot; >     <output method=&quot;text&quot; />     <template match=&quot;/&quot;>     Root node is  <value-of select=&quot;local-name(//*[position() = 1])&quot; />      </template>   </style sheet>   ```"
  example:
  - "The following example transforms an XML document into an HTML document. It displays the ISBN, title, and price for each book in a table.  \n  \n [!code-cs[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/csharp/e2f436c8-72f8-4045-80f0-_1.cs)]\n [!code-cpp[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/cpp/e2f436c8-72f8-4045-80f0-_1.cpp)]\n [!code-vb[Classic WebData XslTransform.Transform7 Example#1](~/add/codesnippet/visualbasic/e2f436c8-72f8-4045-80f0-_1.vb)]  \n  \n The sample uses the following two input files.  \n  \n `books.xml`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#2](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_2.xml)]  \n  \n `output.xsl`  \n  \n [!code-xml[Classic WebData XslTransform.Transform7 Example#3](~/add/codesnippet/xml/e2f436c8-72f8-4045-80f0-_3.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.IXPathNavigable input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.IXPathNavigable
      description: "実装するオブジェクト、 <xref href=&quot;System.Xml.XPath.IXPathNavigable&quot;> </xref>インターフェイスです。 .NET framework では、このいずれかになります、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref> (通常、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>)、または<xref href=&quot;System.Xml.XPath.XPathDocument&quot;></xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.IO.Stream>.</xref:System.IO.Stream>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。"
  example:
  - "The following example loads a customer table into an <xref:System.Xml.XmlDataDocument> and performs an XSLT transformation to pull the customer data into an HTML table. The example uses the Microsoft SQL Server 2000 Northwind database.  \n  \n [!code-cs[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/csharp/cf85a737-72d0-4c28-b81d-_1.cs)]\n [!code-vb[XmlDataDocument.CreateNavigator#1](~/add/codesnippet/visualbasic/cf85a737-72d0-4c28-b81d-_1.vb)]  \n  \n The example uses the `customers.xsl` file as input.  \n  \n [!code-xml[XmlDataDocument.CreateNavigator#2](~/add/codesnippet/xml/cf85a737-72d0-4c28-b81d-_2.xsl)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.Stream output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.Stream
      description: "出力するストリーム。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<code> args </code> <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>に結果を出力し、"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、ノードは、変換処理の前は、変換メソッドが呼び出された後に、現在のノードを状態です。       エンコーディング属性を`xsl:output` <xref:System.IO.TextWriter>.</xref:System.IO.TextWriter>を出力するときに、要素がサポートされていません 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)に固有の`xsl:output`属性がサポートされます。"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.IO.TextWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.IO.TextWriter
      description: "<xref:System.IO.TextWriter>を出力する</xref:System.IO.TextWriter>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  id: Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "XML データを変換、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、指定した引数を使用して、結果<xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>を出力します"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Xml.Xsl.XslTransform>XSLT 1.0 の構文をサポートしています。</xref:System.Xml.Xsl.XslTransform> XSLT スタイル シートは、名前空間宣言を含める必要があります`xmlns:xsl= http://www.w3.org/1999/XSL/Transform`です。       `args`と照合されます、`xsl:param`スタイル シートで定義された要素。 選択された変換は、ドキュメント全体に適用されます。 つまり、現在のノードは、ドキュメント ルート ノード以外のノード ツリーに設定されている場合これは防止しません、変換処理、読み込んだドキュメントのすべてのノードにアクセスします。 変換が実行された後、<xref:System.Xml.XPath.XPathNavigator>元の状態のままになります</xref:System.Xml.XPath.XPathNavigator>。 つまり、あるノードで、変換処理の前に現在は、変換メソッドが呼び出された後に、現在のノードを状態です。       `xsl:output`を出力するときに、要素がサポートされていません、 <xref:System.Xml.XmlWriter>(`xsl:output`は無視されます).</xref:System.Xml.XmlWriter> 参照してください[XslTransform からの出力](~/add/includes/ajax-current-ext-md.md)詳細についてはします。"
  example:
  - "The following example loads and edits an XML document before performing an XSLT transform.  \n  \n [!code-vb[XslTransform.Transform2#1](~/add/codesnippet/visualbasic/3e32b237-2708-4620-b957-_1.vb)]\n [!code-cs[XslTransform.Transform2#1](~/add/codesnippet/csharp/3e32b237-2708-4620-b957-_1.cs)]\n [!code-cpp[XslTransform.Transform2#1](~/add/codesnippet/cpp/3e32b237-2708-4620-b957-_1.cpp)]"
  syntax:
    content: public void Transform (System.Xml.XPath.XPathNavigator input, System.Xml.Xsl.XsltArgumentList args, System.Xml.XmlWriter output, System.Xml.XmlResolver resolver);
    parameters:
    - id: input
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>変換対象のデータを格納します。"
    - id: args
      type: System.Xml.Xsl.XsltArgumentList
      description: "<xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>変換に対する入力として使用される名前空間で修飾された引数を格納します。"
    - id: output
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>を出力する</xref:System.Xml.XmlWriter>。"
    - id: resolver
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref> XSLT を解決するために使用`document()`関数。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、`document()`関数は解決されません。       <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換メソッドが完了した後はキャッシュされません。"
  overload: System.Xml.Xsl.XslTransform.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XSLT 変換を処理中にエラーが発生しました。       注: これは、以前のバージョンからの動作の変更です。 <xref href=&quot;System.Xml.Xsl.XsltException&quot;> </xref> Microsoft .NET Framework version 1.1 以前を使用している場合にスローされます。"
  platform:
  - net462
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  id: XmlResolver
  parent: System.Xml.Xsl.XslTransform
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Xsl
  summary: "セット、 <xref href=&quot;System.Xml.XmlResolver&quot;> </xref>外部リソースの解決に使用するときに、<xref:System.Xml.Xsl.XslTransform.Transform*>メソッドが呼び出されます</xref:System.Xml.Xsl.XslTransform.Transform*>。"
  remarks: "> [!NOTE]>、<xref:System.Xml.Xsl.XslTransform>クラスは、.NET Framework version 2.0 で使用されていません</xref:System.Xml.Xsl.XslTransform>。 <xref:System.Xml.Xsl.XslCompiledTransform>クラスは、新しい XSLT プロセッサです</xref:System.Xml.Xsl.XslCompiledTransform>。 詳細については、次を参照してください。 [XslCompiledTransform クラスを使用して](~/add/includes/ajax-current-ext-md.md)と[XslTransform クラスからの移行](~/add/includes/ajax-current-ext-md.md)です。       アプリケーションの信頼レベルが既定の動作を決定する、.NET Framework のバージョン 1.1 で:`Fully trusted code:`既定<xref:System.Xml.XmlUrlResolver>解決するのにはユーザーがいない資格情報が使用される、`document()`関数</xref:System.Xml.XmlUrlResolver>。 外部リソースへのアクセスを認証が必要な場合は、このプロパティを使用して、指定する、<xref:System.Xml.XmlResolver>必要な資格情報を使用します</xref:System.Xml.XmlResolver>。       `Semi-trusted code:`プロパティに設定`null`、つまり、`document()`関数は解決されません。 完全な信頼を指定する必要があるため、 <xref:System.Xml.XmlResolver>、このプロパティも設定できません</xref:System.Xml.XmlResolver>。       この競合回避モジュールが使用されるときに、XSLT`document()`関数が呼び出されます。 解決するのには使用されません`xsl:import`と`xsl:include`スタイル シートで参照される要素。 指定する、<xref:System.Xml.XmlResolver>解決に使用する`xsl:import`と`xsl:include`スタイル シートで参照される要素を使用して、<xref:System.Xml.Xsl.XslTransform.Load%2A>オーバー ロードを受け取り、 <xref:System.Xml.XmlResolver>、引数の&1; つとして</xref:System.Xml.XmlResolver></xref:System.Xml.Xsl.XslTransform.Load%2A></xref:System.Xml.XmlResolver>。      > [!NOTE] > このプロパティは、.NET Framework のバージョン 1.1 で廃止されています。 指定する、<xref:System.Xml.XmlResolver>を使用して、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドはことをお勧めします</xref:System.Xml.Xsl.XslTransform.Transform%2A></xref:System.Xml.XmlResolver>。 ここで、<xref:System.Xml.XmlResolver>後にキャッシュされていない、<xref:System.Xml.Xsl.XslTransform.Transform%2A>メソッドが完了した</xref:System.Xml.Xsl.XslTransform.Transform%2A></xref:System.Xml.XmlResolver>。"
  syntax:
    content: public System.Xml.XmlResolver XmlResolver { set; }
    return:
      type: System.Xml.XmlResolver
      description: "<xref href=&quot;System.Xml.XmlResolver&quot;> </xref>変換中に使用します。 場合設定<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、XSLT`document()`関数は解決されません。"
  overload: System.Xml.Xsl.XslTransform.XmlResolver*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Xsl.XsltCompileException
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltCompileException
  nameWithType: XsltCompileException
  fullName: System.Xml.Xsl.XsltCompileException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.Xsl.XslTransform.#ctor
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform()
  nameWithType: XslTransform.XslTransform()
  fullName: System.Xml.Xsl.XslTransform.XslTransform()
- uid: System.Xml.Xsl.XslTransform.Load(System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String)
  nameWithType: XslTransform.Load(String)
  fullName: System.Xml.Xsl.XslTransform.Load(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XslTransform.Load(XmlReader)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable)
  nameWithType: XslTransform.Load(IXPathNavigable)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable)
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator)
  nameWithType: XslTransform.Load(XPathNavigator)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.Xsl.XslTransform.Load(System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(String,XmlResolver)
  nameWithType: XslTransform.Load(String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(String,XmlResolver)
- uid: System.Xml.XmlResolver
  parent: System.Xml
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XmlReader,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XmlReader,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XmlReader,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XmlReader,XmlResolver,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.IXPathNavigable,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(IXPathNavigable,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(IXPathNavigable,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Load(System.Xml.XPath.XPathNavigator,System.Xml.XmlResolver,System.Security.Policy.Evidence)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load(XPathNavigator,XmlResolver,Evidence)
  nameWithType: XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
  fullName: System.Xml.Xsl.XslTransform.Load(XPathNavigator,XmlResolver,Evidence)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String)
  nameWithType: XslTransform.Transform(String,String)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList)
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList)
- uid: System.Xml.Xsl.XslTransform.Transform(System.String,System.String,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(String,String,XmlResolver)
  nameWithType: XslTransform.Transform(String,String,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(String,String,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.IXPathNavigable,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(IXPathNavigable,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.Stream,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,Stream,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.IO.TextWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,TextWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.Transform(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.XsltArgumentList,System.Xml.XmlWriter,System.Xml.XmlResolver)
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  nameWithType: XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
  fullName: System.Xml.Xsl.XslTransform.Transform(XPathNavigator,XsltArgumentList,XmlWriter,XmlResolver)
- uid: System.Xml.Xsl.XslTransform.XmlResolver
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
  fullName: System.Xml.Xsl.XslTransform.XmlResolver
- uid: System.Xml.Xsl.XslTransform.#ctor*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform.XslTransform
- uid: System.Xml.Xsl.XslTransform.Load*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Load
  nameWithType: XslTransform.Load
- uid: System.Xml.Xsl.XslTransform.Transform*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: Transform
  nameWithType: XslTransform.Transform
- uid: System.Xml.Xsl.XslTransform.XmlResolver*
  parent: System.Xml.Xsl.XslTransform
  isExternal: false
  name: XmlResolver
  nameWithType: XslTransform.XmlResolver
