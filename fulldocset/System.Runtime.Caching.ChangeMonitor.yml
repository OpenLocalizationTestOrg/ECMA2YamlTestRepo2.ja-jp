### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.ChangeMonitor
  id: ChangeMonitor
  children:
  - System.Runtime.Caching.ChangeMonitor.#ctor
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  - System.Runtime.Caching.ChangeMonitor.UniqueId
  langs:
  - csharp
  name: ChangeMonitor
  nameWithType: ChangeMonitor
  fullName: System.Runtime.Caching.ChangeMonitor
  type: Class
  summary: "キャッシュ アイテムに依存するデータの状態の変更を監視する派生したカスタム型の基本クラスを提供します。"
  remarks: "ChangeMonitor クラスを特定のキャッシュ実装に特化してモニターの派生クラスの基底クラスとして使用します。 ChangeMonitor インスタンスは、キャッシュのアイテムに依存するデータの状態の変化を監視します。 たとえば、項目はキャッシュの内容を持つファイルまたはデータ エンティティとすることができます。 ファイルまたはデータのエンティティが更新された場合も、関連付けられているキャッシュ エントリを変更してください。 監視可能な共通の項目には、データ エンティティ (データベース フィールド、値、行、またはテーブル) など、別のキャッシュ エントリとファイルおよびファイル属性が含まれます。       依存関係の変更は、依存関係の状態の変更です。 一般的なキャッシュの実装で ChangeMonitor インスタンスが、キャッシュ依存関係が変更されたことを通知した後、キャッシュは、挿入されたキャッシュ エントリが無効になるなど、必要なアクションを実行します。       特定のさまざまなデータ ストアの依存関係の変更を監視する派生 ChangeMonitor クラスをカスタマイズできます。 たとえば、特定のファイル システム、物理メモリ、またはデータベースのキャッシュ実装が使用されます。 ChangeMonitor クラスは、キャッシュ、外部で発生する変更内容を検査し、し、変更が発生したキャッシュを警告します。       [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] ChangeMonitor クラスから派生する次のクラスが含まれています:- <xref:System.Runtime.Caching.CacheEntryChangeMonitor>- <xref:System.Runtime.Caching.FileChangeMonitor>- <xref:System.Runtime.Caching.HostFileChangeMonitor>-<xref:System.Runtime.Caching.SqlChangeMonitor>これらの各クラスのさまざまな種類の依存関係の動作します</xref:System.Runtime.Caching.SqlChangeMonitor></xref:System.Runtime.Caching.HostFileChangeMonitor></xref:System.Runtime.Caching.FileChangeMonitor></xref:System.Runtime.Caching.CacheEntryChangeMonitor>。 たとえば、派生<xref:System.Runtime.Caching.FileChangeMonitor>クラスは、キャッシュ項目が依存しているファイル システム データ (ファイルおよびフォルダー) のキャッシュへの変更を監視します</xref:System.Runtime.Caching.FileChangeMonitor>。"
  syntax:
    content: 'public abstract class ChangeMonitor : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>クラスです。 このコンス トラクターは、基本クラスを初期化するために派生クラスのコンス トラクターから呼び出されます。"
  remarks: "<xref:System.Runtime.Caching.ChangeMonitor>クラスは、既定のコンス トラクターを持つ</xref:System.Runtime.Caching.ChangeMonitor>。 ただし、クラスを継承する基本から<xref:System.Runtime.Caching.ChangeMonitor>クラスし、カスタムの変更の監視の定義の動作は、コンス トラクターで初期化を実行する必要があります</xref:System.Runtime.Caching.ChangeMonitor>。 詳細については、継承元のセクションのノートを参照してください。"
  syntax:
    content: protected ChangeMonitor ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  id: Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "現在のインスタンスによって使用されているすべてのリソースを解放、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>クラスです。"
  remarks: "Dispose メソッドを呼び出して、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>の派生クラスの&1; 回だけ、初めて呼び出されたメソッド</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。 Dispose メソッドの後続の呼び出しは、影響を与えるありません。 メソッドが呼び出された後、<xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>プロパティに設定されている`true`</xref:System.Runtime.Caching.ChangeMonitor.IsDisposed%2A>。       <xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>を破棄するオーバー ロードを呼び出す必要があります、<xref:System.Runtime.Caching.ChangeMonitor>インスタンス</xref:System.Runtime.Caching.ChangeMonitor></xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。 Dispose メソッドを呼び出す場合の規則を次に示します:-キャッシュに項目が、前にすることは、呼び出し元の責任の破棄、<xref:System.Runtime.Caching.ChangeMonitor>インスタンス</xref:System.Runtime.Caching.ChangeMonitor>。      のキャッシュ項目&1; 回、<xref:System.Runtime.Caching.ChangeMonitor>が関連付けられているインスタンスが、キャッシュ、ように注意してください、キャッシュの実行者に渡される<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>が呼び出されると、挿入が失敗した場合でも</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></xref:System.Runtime.Caching.ChangeMonitor>。      項目とそれに関連付けられた後<xref:System.Runtime.Caching.ChangeMonitor>インスタンスはキャッシュに渡される、ため、呼び出し元が、依存関係を破棄しなければならないときに、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>メソッドが呼び出されると、依存関係が変更された場合、その呼び出しは処理します</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></xref:System.Runtime.Caching.ChangeMonitor>。 その結果、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが自動的に呼び出されます</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。      -これらの規則を考慮に入れて、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>メソッドは、次の方法のいずれかで呼び出す必要があります:-派生変更監視インスタンスをキャッシュに挿入する場合、ユーザーは、Dispose メソッドのオーバー ロードを呼び出す必要があります</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。          -キャッシュの実装は、実装では、オブジェクトのキャッシュに変更監視インスタンスを挿入しようとしましたが、挿入が失敗する場合は、Dispose オーバー ロードを呼び出すことを担当します。 挿入の試行は、例外を発生させ、キャッシュ実装が関連付けられている依存関係を破棄する必要があります。          場合は、キャッシュ エントリを削除すると、キャッシュ実装では、依存関係が破棄もする必要があります。       内部実装、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが自動的に呼び出し、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>を通してメソッドが呼び出された後、コールバックを登録している、<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>メソッド</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A></xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。      > [!NOTE] > 場合にのみ発生イベントの発生時にこの自動 dispose の初期化、<xref:System.Runtime.Caching.ChangeMonitor>完了済みのインスタンス</xref:System.Runtime.Caching.ChangeMonitor>。       派生した変更モニターのコンス トラクターを呼び出すと、<xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>メソッド、既に変更モニターの状態が変更された場合 (つまり、監視されている状態に既に変更されて、コンス トラクターがまだアクティブであった場合)、<xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>メソッドが変更の監視を自動的に破棄されます</xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A></xref:System.Runtime.Caching.ChangeMonitor.InitializationComplete%2A>。      > [!NOTE] > ユーザーでは、Dispose メソッドを呼び出す必要がありますされません。 ただし、メソッドの呼び出しからユーザーを防ぐことはできません。 そのため場合は、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが呼び出されます</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。 その場合は、キャッシュ エントリは、依存関係が変更された場合、通知されます。       派生クラスの Dispose メソッドのオーバーライドを防ぐために、メソッドは、明示的なインターフェイスの実装ではありません。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "初期化では、基本の Dispose メソッドを呼び出した変更モニターの派生クラスで完了しません。"
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "すべてのマネージ コードとアンマネージ リソースおよびへの参照を解放、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>インスタンス。 このオーバー ロードは、変更モニターの派生クラスで実装する必要があります。"
  remarks: "ときに、値の`disposing`値は`true`、すべてのマネージ コードとアンマネージ リソースが破棄され、変更モニターの派生インスタンスがガベージ コレクトされるように、このオブジェクトへの参照は解放されます。 保証される基本<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>メソッドは、実装された Dispose&1; 回だけです</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。"
  syntax:
    content: protected abstract void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ リソースとアンマネージ リソースおよびへの参照を解放する、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>インスタンス。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。 ときに<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>渡されると、メソッドによって呼び出されます Dispose、 <xref uid=&quot;langword_csharp_finalizer&quot; name=&quot;finalizer&quot; href=&quot;&quot;> </xref>スレッドと外部の管理対象の参照をすべて可能性が高いため、ガベージ コレクションが既に有効期限切れです。"
  overload: System.Runtime.Caching.ChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  id: HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "状態監視していることを示す値を取得、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>クラスが変更されました。"
  remarks: "派生では、このプロパティの値をチェックする<xref:System.Runtime.Caching.ChangeMonitor>クラスに依存関係が変更されたかどうかを参照してください</xref:System.Runtime.Caching.ChangeMonitor>。       値に設定されて`true`依存関係の変更が発生した場合 (いるとき、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが呼び出されます).</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A> 後に、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが派生クラスによって呼び出されると、HasChanged プロパティの値になります`true`かどうかに関係なく、<xref:System.Runtime.Caching.OnChangedCallback>インスタンスへの呼び出しによって通知、<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>メソッド</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A></xref:System.Runtime.Caching.OnChangedCallback></xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。      > [!NOTE] > 呼び出し元は依存関係が変更されたかどうかを表示する HasChanged プロパティを確認できます。 ただし、マルチ スレッド環境で、簡単かつより保守しやすいアプローチは HasChanged プロパティをチェックせず、データをキャッシュ実装を挿入します。 キャッシュ実装する必要があります HasChanged プロパティを確認および必要があります not の挿入を実行または&1; つまたは複数の関連する依存関係が既に変更されている場合は、操作を設定します。"
  syntax:
    content: public bool HasChanged { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合によって監視されている状態、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>インスタンスが変更されました。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ChangeMonitor.HasChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  id: InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "初期化の完了を示すために派生クラスのコンス トラクターから呼び出されます。"
  remarks: "派生クラスのコンス トラクターを呼び出す必要がありますの初期化が派生クラスで完了する前に、依存関係が変更された場合、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッド</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。       ときに、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが呼び出され、<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>プロパティに設定されて自動的に`true`変更モニターによって</xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A></xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。 その結果、変更モニターのコンス トラクターを呼び出すと、InitializationComplete メソッドを呼び出すの基本クラスが自動的に呼び出さ、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>メソッド</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。 初期化が完了すると場合、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドが派生変更監視インスタンスを自動的に破棄します</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。"
  syntax:
    content: protected void InitializationComplete ();
    parameters: []
  overload: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  id: IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "派生インスタンスのことを示す値を取得、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>クラスが破棄されています。"
  remarks: "プロパティに設定`true`ベース後<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>メソッドの呼び出し、<xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>インスタンスを破棄する派生クラスでメソッド</xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A></xref:System.Runtime.Caching.ChangeMonitor.Dispose%2A>。"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>インスタンスが破棄される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  id: NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "コールバックを登録し、通知のキャッシュ実装によって呼び出される、 <xref href=&quot;System.Runtime.Caching.ObjectCache&quot;> </xref>を通じてインスタンス、 <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref>依存関係が変更されたときに委任します。"
  remarks: "キャッシュの実装側は、変更監視機能に自身のネットワーク上にこのメソッドを使用します。 関連付ける&1; つまたは複数の変更、キャッシュ項目を使用してモニターを渡す、<xref:System.Runtime.Caching.CacheItemPolicy>キャッシュ項目に設定されている変更モニターのプロパティを使用してインスタンス</xref:System.Runtime.Caching.CacheItemPolicy>。 サポートしていますが、モニターを変更するキャッシュの実行者がに対する繰り返し処理を担当する、<xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>プロパティは、登録、<xref:System.Runtime.Caching.OnChangedCallback>各デリゲートが検出したモニターを変更します</xref:System.Runtime.Caching.OnChangedCallback></xref:System.Runtime.Caching.CacheItemPolicy.ChangeMonitors%2A>。       <xref:System.Runtime.Caching.OnChangedCallback>デリゲートには、省略可能な状態パラメーターが含まれています、具体的な変更モニターの実装は、省略可能な状態情報を渡すことができます</xref:System.Runtime.Caching.OnChangedCallback>。 キャッシュの実行者は、カスタムの変更の監視は、コールバックの一部として渡される状態の種類への明示的な依存関係を取得できるかどうかを判断します。      > [!NOTE] > 基本キャッシュ機能拡張 API を持たない明示的な依存関係の要件の状態の種類。       NotifyOnChanged メソッドの実装では、自動的にモニターの状態に既に NotifyOnChanged メソッドが呼び出された時点で変更されているかどうかを判断します。 場合、<xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>プロパティは`true`、メソッドが自動的には呼び出して、<xref:System.Runtime.Caching.OnChangedCallback>を通じて、登録されたイベント ハンドラー、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッド</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A></xref:System.Runtime.Caching.OnChangedCallback></xref:System.Runtime.Caching.ChangeMonitor.HasChanged%2A>。 これは、キャッシュの実装にキャッシュの実装は、監視機能を取得し、まで、接続自体の変更モニターの作成時刻から基になる監視対象の状態が変更されたことを可能になっているために発生します。 かどうか、状態が既に変更しに渡されるオブジェクト、<xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>メソッドは`null`</xref:System.Runtime.Caching.ChangeMonitor.OnChanged%2A>。       NotifyOnChanged メソッドは、1 回だけ呼び出すことができ、後続の呼び出しで例外がスローされます。"
  syntax:
    content: public void NotifyOnChanged (System.Runtime.Caching.OnChangedCallback onChangedCallback);
    parameters:
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "依存関係が変更されたときに呼び出されるメソッドへの参照。"
  overload: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コールバック メソッドは既に呼び出されています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>onChangedCallback</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  id: OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "依存関係が変更されると、イベントを発生させるために派生クラスによって呼び出されます。"
  remarks: "通常、OnChanged メソッドは、依存関係の変更が発生したときに呼び出されます。 OnChanged もこのメソッドは変更監視インスタンスが破棄されるが、コールバックが既に呼び出されていない場合にのみに、破棄が発生します。       前に、OnChanged メソッドが呼び出された場合、<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>メソッドが呼び出されると、キャッシュの実装によって OnChanged メソッドへの呼び出しの状態データを保存します</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>。 コールバックにも、<xref:System.Runtime.Caching.OnChangedCallback>メソッドが即座に起動されるときに、<xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A>メソッドが呼び出されます</xref:System.Runtime.Caching.ChangeMonitor.NotifyOnChanged%2A></xref:System.Runtime.Caching.OnChangedCallback>。"
  syntax:
    content: protected void OnChanged (object state);
    parameters:
    - id: state
      type: System.Object
      description: "変更イベントのデータ。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Caching.ChangeMonitor.OnChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "表す値を取得、 <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref>クラスのインスタンス。"
  remarks: "UniqueId プロパティ値通常から成る依存名結合文字列データを一意に識別子によって監視されているデータ、<xref:System.Runtime.Caching.ChangeMonitor>インスタンス</xref:System.Runtime.Caching.ChangeMonitor>。 UniqueId プロパティの値は、文字列です。 一意の ID を割り当てる文字列の値が使用される、<xref:System.Runtime.Caching.ChangeMonitor>インスタンス</xref:System.Runtime.Caching.ChangeMonitor>。"
  syntax:
    content: public abstract string UniqueId { get; }
    return:
      type: System.String
      description: "変更監視インスタンスの識別子。"
  overload: System.Runtime.Caching.ChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Caching.ChangeMonitor.#ctor
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor()
  nameWithType: ChangeMonitor.ChangeMonitor()
  fullName: System.Runtime.Caching.ChangeMonitor.ChangeMonitor()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose()
  nameWithType: ChangeMonitor.Dispose()
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose()
- uid: System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.ChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
  fullName: System.Runtime.Caching.ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete()
  nameWithType: ChangeMonitor.InitializationComplete()
  fullName: System.Runtime.Caching.ChangeMonitor.InitializationComplete()
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
  fullName: System.Runtime.Caching.ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged(OnChangedCallback)
  nameWithType: ChangeMonitor.NotifyOnChanged(OnChangedCallback)
  fullName: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(OnChangedCallback)
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged(Object)
  nameWithType: ChangeMonitor.OnChanged(Object)
  fullName: System.Runtime.Caching.ChangeMonitor.OnChanged(Object)
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.ChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.ChangeMonitor.#ctor*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: ChangeMonitor
  nameWithType: ChangeMonitor.ChangeMonitor
- uid: System.Runtime.Caching.ChangeMonitor.Dispose*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: ChangeMonitor.Dispose
- uid: System.Runtime.Caching.ChangeMonitor.HasChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: HasChanged
  nameWithType: ChangeMonitor.HasChanged
- uid: System.Runtime.Caching.ChangeMonitor.InitializationComplete*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: InitializationComplete
  nameWithType: ChangeMonitor.InitializationComplete
- uid: System.Runtime.Caching.ChangeMonitor.IsDisposed*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: IsDisposed
  nameWithType: ChangeMonitor.IsDisposed
- uid: System.Runtime.Caching.ChangeMonitor.NotifyOnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: NotifyOnChanged
  nameWithType: ChangeMonitor.NotifyOnChanged
- uid: System.Runtime.Caching.ChangeMonitor.OnChanged*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: OnChanged
  nameWithType: ChangeMonitor.OnChanged
- uid: System.Runtime.Caching.ChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.ChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: ChangeMonitor.UniqueId
