### YamlMime:ManagedReference
items:
- uid: System.Base64FormattingOptions
  id: Base64FormattingOptions
  children:
  - System.Base64FormattingOptions.InsertLineBreaks
  - System.Base64FormattingOptions.None
  langs:
  - csharp
  name: Base64FormattingOptions
  nameWithType: Base64FormattingOptions
  fullName: System.Base64FormattingOptions
  type: Enum
  summary: "指定関連するかどうか&lt;xref:System.Convert.ToBase64CharArray%2A?displayProperty=fullName&gt;と&lt;xref:System.Convert.ToBase64String%2A?displayProperty=fullName&gt;メソッドは、その出力に改行を挿入します。"
  remarks: "<xref:System.Convert.ToBase64CharArray%2A?displayProperty=fullName>と<xref:System.Convert.ToBase64String%2A?displayProperty=fullName>メソッドは、8 ビット符号なし整数の配列の値を base64 の数字で構成される等価の文字列形式に変換します</xref:System.Convert.ToBase64String%2A?displayProperty=fullName></xref:System.Convert.ToBase64CharArray%2A?displayProperty=fullName>。 文字列形式には、1 つ含めることができますを返したり、復帰文字として改行が定義されている複数の改行文字 (U+000D)、改行文字 (u+000 a)。 改行は、base&64; エンコード形式での空白文字と見なされる、ために、エンコードされたバイト配列に文字列を base&64; に変換するときに、無視されます。 改行は、コントロールまたはコンソール ウィンドウなどのデバイスに、エンコードされた文字列を表示するときにだけに便利です。       [なし] と InsertLineBreaks 値は相互に排他的です。 したがって、Base64FormattingOptions 列挙が付いていますが、<xref:System.FlagsAttribute>属性、意味はありませんこれら&2; つの値のビットごとの組み合わせを実行する</xref:System.FlagsAttribute>。"
  example:
  - "The following example calls the [Convert.ToBase64String(Byte\\[\\], Base64FormattingOptions)](assetId:///M:System.Convert.ToBase64String(System.Byte[],System.Base64FormattingOptions)?qualifyHint=True&autoUpgrade=False) with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.  \n  \n [!code-vb[System.Convert.ToBase64String#3](~/add/codesnippet/visualbasic/t-system.base64formattin_1.vb)]\n [!code-cs[System.Convert.ToBase64String#3](~/add/codesnippet/csharp/t-system.base64formattin_1.cs)]  \n  \n As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=fullName> succeeds in restoring the original byte array; the line break characters are ignored during the conversion."
  syntax:
    content: >-
      [System.Flags]

      public enum Base64FormattingOptions
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Base64FormattingOptions.InsertLineBreaks
  id: InsertLineBreaks
  parent: System.Base64FormattingOptions
  langs:
  - csharp
  name: InsertLineBreaks
  nameWithType: Base64FormattingOptions.InsertLineBreaks
  fullName: System.Base64FormattingOptions.InsertLineBreaks
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: "文字列形式で 76 文字ごとに改行を挿入します。"
  syntax:
    content: InsertLineBreaks
    return:
      type: System.Base64FormattingOptions
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Base64FormattingOptions.None
  id: None
  parent: System.Base64FormattingOptions
  langs:
  - csharp
  name: None
  nameWithType: Base64FormattingOptions.None
  fullName: System.Base64FormattingOptions.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System
  summary: "文字列形式で 76 文字ごとに改行を挿入しません。"
  syntax:
    content: None
    return:
      type: System.Base64FormattingOptions
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Base64FormattingOptions.InsertLineBreaks
  parent: System.Base64FormattingOptions
  isExternal: false
  name: InsertLineBreaks
  nameWithType: Base64FormattingOptions.InsertLineBreaks
  fullName: System.Base64FormattingOptions.InsertLineBreaks
- uid: System.Base64FormattingOptions
  parent: System
  isExternal: false
  name: Base64FormattingOptions
  nameWithType: Base64FormattingOptions
  fullName: System.Base64FormattingOptions
- uid: System.Base64FormattingOptions.None
  parent: System.Base64FormattingOptions
  isExternal: false
  name: None
  nameWithType: Base64FormattingOptions.None
  fullName: System.Base64FormattingOptions.None
