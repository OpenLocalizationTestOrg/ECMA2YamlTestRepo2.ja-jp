### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.MessageHeaderAttribute
  id: MessageHeaderAttribute
  children:
  - System.ServiceModel.MessageHeaderAttribute.#ctor
  - System.ServiceModel.MessageHeaderAttribute.Actor
  - System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  - System.ServiceModel.MessageHeaderAttribute.Relay
  langs:
  - csharp
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute
  fullName: System.ServiceModel.MessageHeaderAttribute
  type: Class
  summary: "データ メンバーが SOAP メッセージ ヘッダーであることを指定します。"
  remarks: "MessageHeaderAttribute 属性でマークされた型のフィールドとプロパティをマップすることができます、<xref:System.ServiceModel.MessageContractAttribute>属性を SOAP メッセージ ヘッダー</xref:System.ServiceModel.MessageContractAttribute> 。 フィールドまたはプロパティは、単純型または複合型をシリアル化できるは指定できます。       既定の SOAP エンベロープ自体を変更することがなく、SOAP 本体のコンテンツのシリアル化を制御する方法については、次を参照してください<xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName>、[サービス コントラクトのデータ転送を指定する](~/add/includes/ajax-current-ext-md.md)、および[を使用してデータ コントラクト](~/add/includes/ajax-current-ext-md.md)。</xref:System.Runtime.Serialization.DataContractAttribute?displayProperty=fullName> 。       メッセージ コントラクトの作成の詳細については、次を参照してください。[メッセージ コントラクトを使用して](~/add/includes/ajax-current-ext-md.md)です。       SOAP 標準ヘッダーを存在できる、次の属性の定義:-`Actor`または`Role`(`Actor` SOAP 1.1 の場合は、 `Role` SOAP 1.2 で)- `MustUnderstand`       -    `Relay` 、`Actor`または`Role`属性が、指定のヘッダーの対象となるノードの URI を指定します。 `MustUnderstand`属性は、ヘッダーがノード処理を理解しているかどうかを指定します。 `Relay`属性は、ヘッダーが、ダウン ストリーム ノードに中継するかどうかを指定します。 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]以外の受信メッセージの場合、これらの属性の処理を実行しませんが、`MustUnderstand`属性。       ただし、読み取りおよび場合でも、既定では送信されません、これらの属性を書き込みすることができます。 2 つの方法では、属性値を設定できます。 最初に、変更することができます、 <xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>、<xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A>と<xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A>MessageHeaderAttribute のプロパティ</xref:System.ServiceModel.MessageHeaderAttribute.Relay%2A></xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A></xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>。 (がない`Role`プロパティ – 設定、<xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A>プロパティおよび`Role`は、SOAP 1.2 を使用する場合に渡されます).</xref:System.ServiceModel.MessageHeaderAttribute.Actor%2A> 例: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]これらの属性を制御する&2; 番目の方法を目的のヘッダーの型パラメーターの入力を行うには、<xref:System.ServiceModel.MessageHeader%601>クラス タイプを使用して、結果として得られる MessageHeaderAttribute と共に</xref:System.ServiceModel.MessageHeader%601>。 使用して、 <xref:System.ServiceModel.MessageHeader%601>SOAP 属性を設定するには、プログラムでのプロパティ</xref:System.ServiceModel.MessageHeader%601>。 例: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]動的と静的制御機構の両方を使用している場合、静的な設定既定値は、動的なメカニズムを使用してオーバーライドできます。        例: [!code-cs [XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)][!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ]動的属性の制御に繰り返すヘッダーを作成では許可します。        例: ```   [MessageHeaderArray] public MessageHeader<Person> documentApprovers[];   ``` 、受信側では、これらの SOAP 属性を読み取ることができる場合にのみ実行ジェネリック<xref:System.ServiceModel.MessageHeader%601>クラスを使用します</xref:System.ServiceModel.MessageHeader%601>。 確認、 <xref:System.ServiceModel.MessageHeader%601.Actor%2A>、<xref:System.ServiceModel.MessageHeader%601.Relay%2A>または<xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A>のヘッダーのプロパティ、<xref:System.ServiceModel.MessageHeader%601>受信メッセージの属性の設定を検出する種類</xref:System.ServiceModel.MessageHeader%601></xref:System.ServiceModel.MessageHeader%601.MustUnderstand%2A></xref:System.ServiceModel.MessageHeader%601.Relay%2A></xref:System.ServiceModel.MessageHeader%601.Actor%2A>。       メッセージが受信され、SOAP 属性設定として往復するだけのヘッダーを送信元に戻す、<xref:System.ServiceModel.MessageHeader%601>型です</xref:System.ServiceModel.MessageHeader%601>。"
  example:
  - "The following code example shows the use of the MessageHeaderAttribute to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and <xref:System.ServiceModel.MessageHeaderAttribute.MustUnderstand%2A> properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false, Inherited=false)]

      public class MessageHeaderAttribute : System.ServiceModel.MessageContractMemberAttribute
  inheritance:
  - System.ServiceModel.MessageContractMemberAttribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.MessageHeaderAttribute&quot;> </xref>クラスです。"
  syntax:
    content: public MessageHeaderAttribute ();
    parameters: []
  overload: System.ServiceModel.MessageHeaderAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  id: Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または設定をこのヘッダーが対象とするノードを示す URI。 SOAP 1.2 を使用するときに、ロール ヘッダーの属性と SOAP 1.1 を使用する場合は actor ヘッダー属性にマップされます。"
  remarks: "詳細については、の「解説」セクションを参照してください。<xref:System.ServiceModel.MessageHeaderAttribute>詳細についてはします。</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "このヘッダーが対象とするノードを示す URI。 この URI は、SOAP 1.1 を使用する場合、SOAP 1.2 を使用するときに、ロール ヘッダーの属性とは actor ヘッダー属性にマップします。"
  overload: System.ServiceModel.MessageHeaderAttribute.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  id: MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定するかどうかで動作するノード、<xref:System.ServiceModel.MessageHeaderAttribute.Actor*>ロールは、このヘッダーを認識する必要があります</xref:System.ServiceModel.MessageHeaderAttribute.Actor*>。 これにマップ、 <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> SOAP ヘッダー属性。"
  remarks: "詳細については、の「解説」セクションを参照してください。<xref:System.ServiceModel.MessageHeaderAttribute>詳細についてはします。</xref:System.ServiceModel.MessageHeaderAttribute>      > [!IMPORTANT] > MustUnderstand プロパティがある場合の点に注意することが重要`true`送信と受信側では、アプリケーションが、エラーが生成されるヘッダーを認識していないメッセージにします。 逆に場合のヘッダーは、 `mustUnderstand` SOAP ヘッダー属性に設定`true`が受信した[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]、メッセージ コントラクトの一部をする必要があります (かのいずれかで処理する必要があります、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]チャネル)、それ以外のヘッダーが認識されないことと、例外がスローされますと見なされます。"
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.MessageHeaderAttribute> to create a SOAP header for the response message with the <xref:System.ServiceModel.MessageContractMemberAttribute.Name%2A>, <xref:System.ServiceModel.MessageContractMemberAttribute.Namespace%2A> and MustUnderstand properties set to values appropriate for this header. The code example is followed by an example of the message when sent.  \n  \n [!code-vb[MessageHeaderAttribute#4](~/add/codesnippet/visualbasic/messageheaderattribute.client/services.vb#4)]\n [!code-cs[MessageHeaderAttribute#4](~/add/codesnippet/csharp/messageheaderattribute.client/services.cs#4)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合で動作するノード、<xref:System.ServiceModel.MessageHeaderAttribute.Actor*>ロールは、このヘッダーを認識する必要がありますそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.ServiceModel.MessageHeaderAttribute.Actor*> 。"
  overload: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  id: Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  langs:
  - csharp
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "このヘッダーをダウン ストリーム ノードに中継するかどうかを指定します。 これにマップ、 <xref uid=&quot;langword_csharp_relay&quot; name=&quot;relay&quot; href=&quot;&quot;> </xref> SOAP ヘッダー属性。"
  remarks: "このプロパティには、SOAP 1.1 を使用する場合は無視されます。 詳細については、の「解説」セクションを参照してください。<xref:System.ServiceModel.MessageHeaderAttribute>詳細についてはします。</xref:System.ServiceModel.MessageHeaderAttribute>"
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このヘッダーは、ダウン ストリーム ノードに中継される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.MessageHeaderAttribute.Relay*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.MessageContractMemberAttribute
  isExternal: false
  name: System.ServiceModel.MessageContractMemberAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute()
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute()
  fullName: System.ServiceModel.MessageHeaderAttribute.MessageHeaderAttribute()
- uid: System.ServiceModel.MessageHeaderAttribute.Actor
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
  fullName: System.ServiceModel.MessageHeaderAttribute.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
  fullName: System.ServiceModel.MessageHeaderAttribute.MustUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.MessageHeaderAttribute.Relay
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
  fullName: System.ServiceModel.MessageHeaderAttribute.Relay
- uid: System.ServiceModel.MessageHeaderAttribute.#ctor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MessageHeaderAttribute
  nameWithType: MessageHeaderAttribute.MessageHeaderAttribute
- uid: System.ServiceModel.MessageHeaderAttribute.Actor*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Actor
  nameWithType: MessageHeaderAttribute.Actor
- uid: System.ServiceModel.MessageHeaderAttribute.MustUnderstand*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: MustUnderstand
  nameWithType: MessageHeaderAttribute.MustUnderstand
- uid: System.ServiceModel.MessageHeaderAttribute.Relay*
  parent: System.ServiceModel.MessageHeaderAttribute
  isExternal: false
  name: Relay
  nameWithType: MessageHeaderAttribute.Relay
