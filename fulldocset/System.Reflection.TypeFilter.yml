### YamlMime:ManagedReference
items:
- uid: System.Reflection.TypeFilter
  id: TypeFilter
  langs:
  - csharp
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
  type: Delegate
  summary: "配列で表されるクラスをフィルタ<xref:System.Type>オブジェクト</xref:System.Type>。"
  remarks: "`TypeFilter`デリゲートは、クラスの一覧をフィルター処理に使用します。 配列で表されるクラスをフィルター処理に使用する具体的には、<xref:System.Type>オブジェクト</xref:System.Type>。 <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>メソッドでは、このデリゲートを使用して、返されるインターフェイスのリストをフィルター処理します</xref:System.Type.FindInterfaces%2A?displayProperty=fullName>。 すべての派生クラスの<xref:System.Delegate>と<xref:System.MulticastDelegate>コンス トラクターを持つと`DynamicInvoke`メソッド</xref:System.MulticastDelegate></xref:System.Delegate>。 説明で指定された Visual C のコード例を参照してください`Delegate`です。"
  example:
  - "This example shows how to define a method matching the TypeFilter delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \n  \n [!code-vb[Typefilter#1](~/add/codesnippet/visualbasic/t-system.reflection.type_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate bool TypeFilter(Type m, object filterCriteria);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
