### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  id: UserNameSecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  type: Class
  summary: "認証、 <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>セキュリティ トークン。"
  remarks: "ユーザー名とパスワードに基づくセキュリティ トークンの認証に UserNameSecurityTokenAuthenticator クラスをオーバーライドします。       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]を認証するためのサポートを提供する次のクラスが付属しています<xref:System.IdentityModel.Tokens.UserNameSecurityToken>のセキュリティ トークン</xref:System.IdentityModel.Tokens.UserNameSecurityToken>。      |型 |説明 |  |----------|-----------------|  |<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>|により、ユーザー名とパスワードのカスタム認証方式を提供するアプリケーション</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>。 <xref:System.IdentityModel.Selectors.UserNamePasswordValidator>クラスから派生するクラスを使用する認証スキームを指定します |。  |<xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator>|ユーザー名と Windows アカウントとパスワードを認証します |。      ほとんどのカスタム認証方式を使用できます<xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator>クラスおよび<xref:System.IdentityModel.Selectors.UserNamePasswordValidator>クラス</xref:System.IdentityModel.Selectors.UserNamePasswordValidator>から派生したクラスの実装</xref:System.IdentityModel.Selectors.CustomUserNameSecurityTokenAuthenticator></xref:System.IdentityModel.Selectors.WindowsUserNameSecurityTokenAuthenticator></xref:System.IdentityModel.Selectors.UserNamePasswordValidator>  ただし、さらに高い柔軟性が必要な場合は、UserNameSecurityTokenAuthenticator クラスからクラスを派生して上書き、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>メソッド</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>。"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/csharp/t-system.identitymodel.s_6_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_6_1.vb)]
  syntax:
    content: 'public abstract class UserNameSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator&quot;> </xref>クラスです。"
  syntax:
    content: protected UserNameSecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "このセキュリティ トークン認証システムで指定したセキュリティ トークンを検証できるかどうかを示す値を取得します。"
  remarks: "CanValidateTokenCore メソッドは、セキュリティ トークンを認証しません。によって実行される、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore%2A>。"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>when <code>token</code> is a <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref> security token; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "指定したセキュリティ トークンを認証し、セキュリティ トークンの承認ポリシーのセットを返します。"
  remarks: "ValidateTokenCore メソッドの呼び出し、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A>を認証する方法、`token`ユーザー名とパスワードを使用してパラメーター</xref:System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore%2A> 。"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>検証に使用します。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>このアプリケーションに対して有効な承認ポリシーのセットを格納します。"
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  id: ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "派生クラスでオーバーライドされると、指定されたユーザー名とパスワードを認証および承認ポリシーのセットを返します<xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>のセキュリティ トークン。"
  remarks: "認証に ValidateUserNamePasswordCore メソッドをオーバーライドして<xref:System.IdentityModel.Tokens.UserNameSecurityToken>のセキュリティ トークン</xref:System.IdentityModel.Tokens.UserNameSecurityToken>。       ValidateUserNamePasswordCore メソッドがオーバーライドされると、これらのガイドラインに従います: に渡したセキュリティ トークンとするときに、`token`パラメーターを指定できません検証されると、スロー、<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>。      -このアプリケーションに対して有効な承認ポリシーがない場合戻り値、空<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>の<xref:System.IdentityModel.Policy.IAuthorizationPolicy>。</xref:System.IdentityModel.Policy.IAuthorizationPolicy>の種類</xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       ときに`null`このメソッドによって返される[!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]スロー、<xref:System.IdentityModel.Tokens.SecurityTokenValidationException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>。"
  example:
  - >-
    [!code-cs[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/csharp/2e0e79be-aa35-46e5-a7cb-_1.cs)]
     [!code-vb[UserNameSecurityTokenAuthenticator#1](~/add/codesnippet/visualbasic/2e0e79be-aa35-46e5-a7cb-_1.vb)]
  syntax:
    content: protected abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateUserNamePasswordCore (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "セキュリティ トークンに関連付けられているユーザー名。"
    - id: password
      type: System.String
      description: "セキュリティ トークンに関連付けられているパスワードです。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;></xref>このアプリケーションに対して有効な承認ポリシーのセットを格納します。"
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator()
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore(String,String)
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: UserNameSecurityTokenAuthenticator
  nameWithType: UserNameSecurityTokenAuthenticator.UserNameSecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateTokenCore
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenAuthenticator
  isExternal: false
  name: ValidateUserNamePasswordCore
  nameWithType: UserNameSecurityTokenAuthenticator.ValidateUserNamePasswordCore
