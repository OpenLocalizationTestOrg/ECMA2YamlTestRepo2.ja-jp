### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProviderTraceListener
  id: EventProviderTraceListener
  children:
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Close
  - System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  - System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  - System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  - System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener
  type: Class
  summary: "リスナーを<xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> ETW サブシステムにイベントを書き込みます。"
  remarks: "すべてのイベント データ (トレースまたはデバッグ) ソース イベントは、文字列として ETW サブシステムに書き込まれます。 データ要素では、コンマを使用して区切られます。 別の区切り記号を指定するには、使用、<xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>プロパティ</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>。       リスナーを追加する<xref:System.Diagnostics.TraceSource?displayProperty=fullName>ETW サブシステムにプロバイダーを登録します</xref:System.Diagnostics.TraceSource?displayProperty=fullName>。 ログ ファイルに、イベントを書き込めません Logman.exe 実行可能プログラム (またはよう) を使用して ETW トレース セッションを作成する必要があります。       イベント データが&1; つの文字列であるためにリスナーからのイベントを処理するためにマニフェストは不要です。       呼び出すと、<xref:System.Diagnostics.TraceSource?displayProperty=fullName>書き込むイベントを渡す方法、<xref:System.Diagnostics.TraceEventType?displayProperty=fullName>列挙値</xref:System.Diagnostics.TraceEventType?displayProperty=fullName></xref:System.Diagnostics.TraceSource?displayProperty=fullName>。 列挙には、レベルとキーワードの両方の値が含まれています。 指定したレベルの値が<xref:System.Diagnostics.TraceEventType?displayProperty=fullName>列挙値は次のいずれかに関連付けられている値を指定できます、ETW セッションからのトレース リスナー プロバイダーを有効にする場合: - 重大 (値は 1) - エラー (値は 2) - 情報 (値は 8) - 詳細 (値は 16) - 警告 (値は 4)<xref:System.Diagnostics.TraceEventType?displayProperty=fullName>列挙値は次のいずれかに関連付けられている値を指定できます、セッション用に指定したキーワードの値:-再開 (値は 2,048 です -) (値は 256) の開始 - 停止 (値は 512) の中断 (値は 1,024) - (値は 4,096) 転送</xref:System.Diagnostics.TraceEventType?displayProperty=fullName></xref:System.Diagnostics.TraceEventType?displayProperty=fullName>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}\");  \n  \n    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), \"Test Listener\", \"::\");  \n  \n    // You should use the All default level and control the level using the  \n    // ETW session; otherwise, you may not log all the events requested by the  \n    // session.  \n    TraceSource source = new TraceSource(\"MyProvider\", SourceLevels.All);  \n  \n    source.Listeners.Add(listener);  \n  \n    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { \"abc\", \"def\", true, 123 });  \n  \n    source.TraceEvent(TraceEventType.Warning, 12, \"Provider guid: {0}\", new object[] { providerId });  \n  \n    source.TraceInformation(\"string {0}, bool {1}, int {2}, ushort {3}\", new object[] { \"abc\", false, 123, (UInt32)5 });  \n```"
  syntax:
    content: 'public class EventProviderTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref>クラスを使用して指定されたプロバイダーの識別子。"
  syntax:
    content: public EventProviderTraceListener (string providerId);
    parameters:
    - id: providerId
      type: System.String
      description: "一意の文字列<xref:System.Guid>プロバイダーを識別します</xref:System.Guid>。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref>クラスの指定されたプロバイダーの識別子とリスナーの名前を使用します。"
  syntax:
    content: public EventProviderTraceListener (string providerId, string name);
    parameters:
    - id: providerId
      type: System.String
      description: "一意の文字列<xref:System.Guid>プロバイダーを識別します</xref:System.Guid>。"
    - id: name
      type: System.String
      description: "リスナーの名前です。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref>クラスを使用して指定されたプロバイダーの識別子、リスナー、および区切り記号の名前。"
  remarks: '-'
  syntax:
    content: public EventProviderTraceListener (string providerId, string name, string delimiter);
    parameters:
    - id: providerId
      type: System.String
      description: "一意の文字列<xref:System.Guid>プロバイダーを識別します</xref:System.Guid>。"
    - id: name
      type: System.String
      description: "リスナーの名前です。"
    - id: delimiter
      type: System.String
      description: "イベント データの区切りに使用する区切り記号。 (詳細については、次を参照してください、<xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>プロパティです。)</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*> 。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "トレース出力またはデバッグ出力を受信しないように、出力ストリームを閉じます。"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "取得し、ETW サブシステムに書き込まれたイベント データの区切りに使用する区切り記号を設定します。"
  remarks: "リスナーは、データ要素を文字列に変換し、文字列連結、文字列内の各データ要素を区切るために指定された区切り記号を使用します。 文字列は次のイベント データを ETW サブシステムとして書き込まれます。       文字列を正しく解析するには、コンシューマーが使用された区切り記号を知る必要があります。       データにコンマを含む可能性のある文字列が含まれている場合は、イベント データを正しく解析できるように、適切な区切り記号を指定します。       イベント データが&1; つの文字列であるためにリスナーからのイベントを処理するためにマニフェストは不要です。       使用して書き込まれたイベント データに適用されます、区切り記号、<xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>メソッド</xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>。"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "イベント データの区切りに使用する区切り記号。 既定の区切り記号は、コンマです。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "エラー出力を実装するときに作成するメッセージと詳細なエラー メッセージ、リスナーを<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>クラスです。"
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "出力するメッセージ。"
    - id: detailMessage
      type: System.String
      description: "出力する詳細なメッセージ。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "出力バッファーをフラッシュします。"
  syntax:
    content: public override sealed void Flush ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "トレース リスナーによってサポートされるカスタム属性を取得します。"
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "トレース リスナーによってサポートされるカスタム属性の名前を付ける文字列配列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>カスタム属性がない場合。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "安全なトレース リスナーがスレッドであるかどうかを示す値を取得します。"
  syntax:
    content: public override sealed bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トレース リスナーがスレッド セーフである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "書き込むトレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力。"
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "1 つ、 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>トレースを発生させたイベントの種類を指定する値。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
    - id: data
      type: System.Object
      description: "出力するトレース データ。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "書き込むトレース情報、データ オブジェクト、およびイベント情報をリスナー固有の出力。"
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "1 つ、 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>トレースを発生させたイベントの種類を指定する値。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
    - id: data
      type: System.Object[]
      description: "データとして出力するオブジェクトの配列。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "書き込みトレース情報およびイベント情報をリスナー固有の出力。"
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "1 つ、 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>トレースを発生させたイベントの種類を指定する値。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "トレース情報、メッセージ、およびイベント情報をリスナー固有の出力に書き込みます。"
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "1 つ、 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>トレースを発生させたイベントの種類を指定する値。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "トレース情報、オブジェクトおよびイベント情報をリスナー固有の出力の書式付き配列に書き込みます。"
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "1 つ、 <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref>トレースを発生させたイベントの種類を指定する値。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
    - id: format
      type: System.String
      description: "書式指定文字列内のオブジェクトに対応する、0 個以上の書式項目を含む、`args`配列。"
    - id: args
      type: System.Object[]
      description: "<xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref>書式指定する&0; 個以上のオブジェクトを含む配列。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "トレース情報、メッセージ、関連するアクティビティ id、およびイベント情報をリスナー固有の出力に書き込みます。"
  syntax:
    content: public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "A <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>プロセス ID、スレッド ID、およびスタック トレース情報を含む現在のオブジェクト。"
    - id: source
      type: System.String
      description: "通常は、トレース イベントを生成したアプリケーションの名前、出力を識別するために使用する名前です。"
    - id: id
      type: System.Int32
      description: "イベントの数値識別子。"
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
    - id: relatedActivityId
      type: System.Guid
      description: "A<xref:System.Guid>関連アクティビティを識別するオブジェクト</xref:System.Guid>。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "派生クラスでオーバーライドされると、指定したメッセージを書き込み、派生クラスで作成したリスナーにします。"
  syntax:
    content: public override sealed void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "派生クラスでオーバーライドされると、リスナーにメッセージの書き込みする、派生クラスで作成、続けて行終端記号です。"
  syntax:
    content: public override sealed void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "書き込むメッセージ。"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener.EventProviderTraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close
  nameWithType: EventProviderTraceListener.Close
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail
  nameWithType: EventProviderTraceListener.Fail
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush
  nameWithType: EventProviderTraceListener.Flush
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: EventProviderTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventProviderTraceListener.TraceData
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventProviderTraceListener.TraceEvent
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: EventProviderTraceListener.TraceTransfer
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write
  nameWithType: EventProviderTraceListener.Write
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventProviderTraceListener.WriteLine
