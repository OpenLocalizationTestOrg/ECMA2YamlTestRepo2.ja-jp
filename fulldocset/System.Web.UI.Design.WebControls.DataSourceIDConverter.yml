### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter
  id: DataSourceIDConverter
  children:
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  langs:
  - csharp
  name: DataSourceIDConverter
  nameWithType: DataSourceIDConverter
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter
  type: Class
  summary: "データ ソース名のユーザーが選択可能なリストを作成します。"
  remarks: "DataSourceIDConverter クラスは、<xref:System.ComponentModel.TypeConverter>オブジェクトによって参照される通常の<xref:System.ComponentModel.TypeConverterAttribute>属性</xref:System.ComponentModel.TypeConverterAttribute></xref:System.ComponentModel.TypeConverter>。       データ ソースによって返される名、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>メソッドが有効なデータ ソースは、指定したコンテキストのコンテナーからのコンポーネント</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>。       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>メソッドは、返されたデータ ソース名が使用可能な値の排他的なリストかどうかを示す値を取得します</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive%2A>。 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>メソッドは、データ ソースの名前が一覧から選択できる値の標準セットであるかどうかを示す値を取得します</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported%2A>。       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>メソッドは、指定したオブジェクトにネイティブな型コンバーターの変換します</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>。 <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>メソッドは、この DataSourceIDConverter が、指定したソースの種類のオブジェクトをネイティブ型に変換できるかどうかを示す値を取得します</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom%2A>。       <xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>メソッドは、指定したコンポーネントを実装するかどうかを示す、<xref:System.Web.UI.IDataSource>インターフェイス</xref:System.Web.UI.IDataSource></xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource%2A>。"
  syntax:
    content: 'public class DataSourceIDConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: DataSourceIDConverter()
  nameWithType: DataSourceIDConverter.DataSourceIDConverter()
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.DataSourceIDConverter()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.Design.WebControls.DataSourceIDConverter&quot;> </xref>クラスです。"
  remarks: ".NET Framework は、内部での新しいインスタンスを作成、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>クラスによってクラスが参照されている場合、<xref:System.ComponentModel.TypeConverterAttribute>属性</xref:System.ComponentModel.TypeConverterAttribute></xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>。"
  syntax:
    content: public DataSourceIDConverter ();
    parameters: []
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "このコンバーターが、指定したソースの種類のオブジェクトをコンバーターのネイティブ型に変換できるかどうかを示す値を取得します。"
  remarks: "<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>メソッドにのみ変換できます、文字列からため CanConvertFrom のみを返します`true`とき`sourcetype`文字列です</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom%2A>。       CanConvertFrom は使用しない、`context`パラメーター。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>型コンバーターが変換を実行できるようにする型コンバーターにコンテキストに関する情報を提供します。"
    - id: sourceType
      type: System.Type
      description: "<xref:System.Type>の変換を要求する対象のオブジェクト</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>sourceType</code> is a string; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "指定したオブジェクトをコンバーターのネイティブ型に変換します。"
  remarks: "場合、`value`パラメーターが文字列の型を持つ文字列として返されます。 場合`value`は`null`、空の文字列 (&quot;&quot;) が返されます。 それ以外の場合、<xref:System.NotSupportedException>がスローされます</xref:System.NotSupportedException>。       ConvertFrom メソッドを使用しません、`context`または`culture`パラメーター。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>型コンバーターが変換を実行できるようにする型コンバーターにコンテキストに関する情報を提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>のカルチャを指定するオブジェクト、`value`パラメーター</xref:System.Globalization.CultureInfo> 。"
    - id: value
      type: System.Object
      description: "変換するオブジェクト。"
    return:
      type: System.Object
      description: "<code> value </code>パラメーターが文字列として返されます。"
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>value</code>文字列以外または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "使用可能なデータ ソース名の一覧を返します。"
  remarks: "GetStandardValues メソッドで指定されているオブジェクトのコンテナーに、有効なデータ ソースにあるコンポーネントの名前のリストを作成する、`context`パラメーター。 その一覧を次に、変換、<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>オブジェクト</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>。"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>型コンバーターが変換を実行できるようにする型コンバーターにコンテキストに関する情報を提供します。"
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "A<xref:System.ComponentModel.TypeConverter.StandardValuesCollection>を実装するコントロールの名前を含む、 <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref>インターフェイスし、指定されたコンテキストで使用可能な</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>。"
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "返されたデータ ソース名が使用可能な値の排他的なリストかどうかを示す値を取得します。"
  remarks: "クラスを派生する場合、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>クラスし、オーバーライド、<xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A>をデータ ソース名の排他的なリストを返すメソッドも、GetStandardValuesExclusive するメソッドをオーバーライドを返す`true`データ ソースの名前リストが排他的な場合</xref:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues%2A></xref:System.Web.UI.Design.WebControls.DataSourceIDConverter>。       `context` GetStandardValuesExclusive によってパラメーターは使用されません。"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>型コンバーターが変換を実行できるようにする型コンバーターにコンテキストに関する情報を提供します。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "このオブジェクトがリストから選択できるデータ ソース名の標準セットを返すかどうかを示す値を取得します。"
  remarks: "`context` GetStandardValuesSupported メソッド パラメーターは使用されません。"
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>型コンバーターが変換を実行できるようにする型コンバーターにコンテキストに関する情報を提供します。"
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  id: IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  langs:
  - csharp
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceIDConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design.WebControls
  summary: "指定したコンポーネントが有効なデータ ソースであるかどうかを示す値を取得します。"
  remarks: "IsValidDataSource メソッドでは考慮、`component`を実装する場合に有効なデータ ソースのパラメーター、<xref:System.Web.UI.IDataSource>インターフェイス</xref:System.Web.UI.IDataSource>。"
  syntax:
    content: protected virtual bool IsValidDataSource (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>インターフェイスです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> component </code>有効なデータ ソースには、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: DataSourceIDConverter()
  nameWithType: DataSourceIDConverter.DataSourceIDConverter()
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.DataSourceIDConverter()
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: IsValidDataSource(IComponent)
  nameWithType: DataSourceIDConverter.IsValidDataSource(IComponent)
  fullName: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: DataSourceIDConverter
  nameWithType: DataSourceIDConverter.DataSourceIDConverter
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: DataSourceIDConverter.CanConvertFrom
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: DataSourceIDConverter.ConvertFrom
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: DataSourceIDConverter.GetStandardValues
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: DataSourceIDConverter.GetStandardValuesExclusive
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: DataSourceIDConverter.GetStandardValuesSupported
- uid: System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource*
  parent: System.Web.UI.Design.WebControls.DataSourceIDConverter
  isExternal: false
  name: IsValidDataSource
  nameWithType: DataSourceIDConverter.IsValidDataSource
