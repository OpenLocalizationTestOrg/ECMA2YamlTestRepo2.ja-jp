### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  id: SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  langs:
  - csharp
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
  type: Class
  summary: "SOAP メッセージの送信者のセキュリティ トークンを処理するセキュリティ トークン プロバイダーを表します。"
  remarks: "カスタム セキュリティ トークンが必要な場合は、SecurityTokenProvider クラスを使用します。 セキュリティ トークン プロバイダーの役割は、SOAP メッセージがクライアントによって送信され、セキュリティ トークンを使用すると、クライアントを認証したり、SOAP メッセージを保護セキュリティ トークンを取得します。 具体的には、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>セキュリティ トークンを取得するメソッドが呼び出されます</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。 セキュリティ トークン プロバイダーを呼び出してキャンセルやセキュリティを使用して、更新することもできます、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>と<xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A></xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>。       派生したクラス、<xref:System.IdentityModel.Selectors.SecurityTokenManager>クラスの実装、<xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>セキュリティ トークン プロバイダーが特定のセキュリティ トークンの要求を調べます</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A></xref:System.IdentityModel.Selectors.SecurityTokenManager>。       <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>と<xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>トークンの種類に組み込みのセキュリティの既定の実装を提供するクラス</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager></xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>。 カスタム セキュリティ トークンのシナリオでは、いずれかからクラスを派生する必要があります、 <xref:System.IdentityModel.Selectors.SecurityTokenManager>、 <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>、または<xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>クラスし、セキュリティ トークン プロバイダー、セキュリティ トークン認証システム、およびカスタム セキュリティ トークンのセキュリティ トークン シリアライザーを作成する機能を提供します</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager></xref:System.ServiceModel.ClientCredentialsSecurityTokenManager></xref:System.IdentityModel.Selectors.SecurityTokenManager>。 [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]カスタム トークンを作成するを参照してください[する方法: カスタム トークンを作成する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]
     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]
  syntax:
    content: public abstract class SecurityTokenProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref>クラスです。"
  syntax:
    content: protected SecurityTokenProvider ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルする非同期操作を開始します。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。"
  syntax:
    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を取り消します。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期取り消し操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルする非同期操作を開始します。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。"
  syntax:
    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を取り消します。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期取り消し操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得する非同期操作を開始します。"
  remarks: "BeginGetToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>。"
  syntax:
    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期の close 操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得する非同期操作を開始します。"
  remarks: "継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>クラスとして、非同期メソッドをオーバーライドする必要はありません、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底クラスが同期メソッドに基づいて非同期のサポートを提供します</xref:System.IdentityModel.Selectors.SecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 そのため、する必要はありません BeginGetTokenCore メソッドをオーバーライドする場合を除き、独自の非同期実装を提供する必要があります。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>メソッド BeginGetTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>。"
  syntax:
    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新する非同期操作を開始します。"
  remarks: "BeginRenewToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>。"
  syntax:
    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をセキュリティ トークンを更新するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新します。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新する非同期操作を開始します。"
  remarks: "継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>クラスとして、非同期メソッドをオーバーライドする必要はありません、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底クラスが同期メソッドに基づいて非同期のサポートを提供します</xref:System.IdentityModel.Selectors.SecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 そのため、する必要はありません BeginRenewTokenCore メソッドをオーバーライドする場合を除き、独自の非同期実装を提供する必要があります。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>メソッド BeginRenewTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>。"
  syntax:
    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をセキュリティ トークンを更新するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新します。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期の close 操作の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の close 操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期操作を参照する</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルします。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。       CancelToken メソッド呼び出し<xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>。"
  syntax:
    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を取り消します。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルします。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>メソッド CancelTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>。       スロー、CancelTokenCore メソッドがオーバーライドされ、トークン パラメーターに渡したセキュリティ トークンをキャンセルすることはできません、<xref:System.IdentityModel.Tokens.SecurityTokenException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenException>。"
  syntax:
    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンをキャンセルするメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を取り消します。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  id: EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルする非同期操作を完了します。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。       EndCancelToken メソッド呼び出し<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>。"
  syntax:
    content: public void EndCancelToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*></xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  id: EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルする非同期操作を完了します。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。       継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>クラスとして、非同期メソッドをオーバーライドする必要はありません、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底クラスが同期メソッドに基づいて非同期のサポートを提供します</xref:System.IdentityModel.Selectors.SecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 そのため、する必要はありません EndCancelTokenCore メソッドをオーバーライドする場合を除き、独自の非同期実装を提供する必要があります。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>メソッド EndCancelTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>。"
  syntax:
    content: protected virtual void EndCancelTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*></xref:System.IAsyncResult>。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得する非同期操作を完了します。"
  remarks: "EndGetToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*></xref:System.IAsyncResult>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>セキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  id: EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得する非同期操作を完了します。"
  remarks: "継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>クラスとして、非同期メソッドをオーバーライドする必要はありません、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底クラスが同期メソッドに基づいて非同期のサポートを提供します</xref:System.IdentityModel.Selectors.SecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 そのため、する必要はありません EndGetTokenCore メソッドをオーバーライドする場合を除き、独自の非同期実装を提供する必要があります。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>メソッド EndGetTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*></xref:System.IAsyncResult>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>セキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  id: EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新する非同期操作を完了します。"
  remarks: "EndRenewToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*></xref:System.IAsyncResult>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新するセキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  id: EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新する非同期操作を完了します。"
  remarks: "継承する場合、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>クラスとして、非同期メソッドをオーバーライドする必要はありません、<xref:System.IdentityModel.Selectors.SecurityTokenProvider>基底クラスが同期メソッドに基づいて非同期のサポートを提供します</xref:System.IdentityModel.Selectors.SecurityTokenProvider></xref:System.IdentityModel.Selectors.SecurityTokenProvider>。 そのため、する必要はありません EndRenewTokenCore メソッドをオーバーライドする場合を除き、独自の非同期実装を提供する必要があります。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>メソッド EndRenewTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*></xref:System.IAsyncResult>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新するセキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  id: GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得します。"
  remarks: "GetToken メソッドによって呼び出されます、<xref:System.ServiceModel.Description.ClientCredentials>時、クライアントが SOAP メッセージを送信し、セキュリティ トークンが必要です</xref:System.ServiceModel.Description.ClientCredentials>。       GetToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>。       ほとんどの場合、 `timeout` <xref:System.IdentityModel.Selectors.SecurityTokenProvider> <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>など</xref:System.IdentityModel.Selectors.SecurityTokenProvider>の派生クラスではパラメーターは使用されません ただし、場合によって、セキュリティ トークンを取得するには、分散メッセージングが含まれます。 例としては<xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>がフェデレーション サービスで使用します</xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>。 このような場合、`timeout`パラメーターは、ネットワーク エラー、メッセージの紛失、およびその他のエラー条件によって引き起こされる例外を避けるために使用します。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、セキュリティ トークンを取得します。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを取得します。"
  remarks: "GetTokenCore メソッドがオーバーライドされ、トークンのパラメーターに渡したセキュリティ トークンを取得できないと、スロー、<xref:System.IdentityModel.Tokens.SecurityTokenException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenException>。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッドによって呼び出されます、<xref:System.ServiceModel.Description.ClientCredentials>時、クライアントが SOAP メッセージを送信し、セキュリティ トークンが必要です</xref:System.ServiceModel.Description.ClientCredentials></xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッド GetTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]
     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、セキュリティ トークンを取得します。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新します。"
  remarks: "更新可能である発行されたセキュリティ トークンには、それを更新し、セキュリティ トークンにまたは有効期限が切れたときに、クライアントができます。       RenewToken メソッドの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をセキュリティ トークンを更新するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新します。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新するセキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新します。"
  remarks: "更新可能である発行されたセキュリティ トークンには、それを更新し、セキュリティ トークンにまたは有効期限が切れたときに、クライアントができます。       スロー、RenewTokenCore メソッドがオーバーライドされ、トークン パラメーターに渡したセキュリティ トークンを更新することはできません、<xref:System.IdentityModel.Tokens.SecurityTokenException>例外です</xref:System.IdentityModel.Tokens.SecurityTokenException>。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>メソッド RenewTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>。"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をセキュリティ トークンを更新するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新します。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を更新するセキュリティ トークンを表すです。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  id: SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンをキャンセルできるかどうかを示す値を取得します。"
  remarks: "いずれかが発行するなど、キャンセルできるセキュリティ トークンには、その処理が終わったら、[キャンセル] をセキュリティ トークンを要求したクライアントができます。"
  syntax:
    content: public virtual bool SupportsTokenCancellation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、セキュリティ トークンをキャンセルできます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  id: SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "セキュリティ トークンを更新できるかどうかを示す値を取得します。"
  remarks: "更新可能である発行されたセキュリティ トークンには、それを更新し、セキュリティ トークンにまたは有効期限が切れたときに、クライアントができます。"
  syntax:
    content: public virtual bool SupportsTokenRenewal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、セキュリティ トークンを更新することができます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken
  nameWithType: SecurityTokenProvider.BeginCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken
  nameWithType: SecurityTokenProvider.BeginGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore
  nameWithType: SecurityTokenProvider.BeginGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken
  nameWithType: SecurityTokenProvider.BeginRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken
  nameWithType: SecurityTokenProvider.CancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore
  nameWithType: SecurityTokenProvider.CancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken
  nameWithType: SecurityTokenProvider.EndCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore
  nameWithType: SecurityTokenProvider.EndCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken
  nameWithType: SecurityTokenProvider.EndGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore
  nameWithType: SecurityTokenProvider.EndGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken
  nameWithType: SecurityTokenProvider.EndRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore
  nameWithType: SecurityTokenProvider.EndRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken
  nameWithType: SecurityTokenProvider.GetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: SecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken
  nameWithType: SecurityTokenProvider.RenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore
  nameWithType: SecurityTokenProvider.RenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
