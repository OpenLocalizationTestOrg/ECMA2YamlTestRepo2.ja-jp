### YamlMime:ManagedReference
items:
- uid: System.Net.NetworkInformation.Ping
  id: Ping
  children:
  - System.Net.NetworkInformation.Ping.#ctor
  - System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  - System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  - System.Net.NetworkInformation.Ping.PingCompleted
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.Send(System.String)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  - System.Net.NetworkInformation.Ping.SendAsyncCancel
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  - System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  langs:
  - csharp
  name: Ping
  nameWithType: Ping
  fullName: System.Net.NetworkInformation.Ping
  type: Class
  summary: "により、アプリケーションがネットワーク経由でリモート コンピューターにアクセスするかどうかを確認します。"
  remarks: "アプリケーションは、リモート コンピューターが到達できるかどうかを検出するために、Ping クラスを使用します。       ネットワーク トポロジでは、Ping がリモート ホストを正常に接続できるかどうかを判断できます。 存在し、プロキシ、ネットワーク アドレス変換 (NAT) 装置、またはファイアウォールの構成では、Ping が成功しないことができます。 ネットワーク上のリモート ホストにアクセスできること、Ping に成功がのみを示しますリモート ホストで (Web サーバーなど) の上位レベル サービスの存在は保証されません。       このクラスは、Ping.exe コマンド ライン ツールと同様の機能を提供します。 <xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドは、そのコンピューターからリモート コンピューターと ICMP エコー応答メッセージを待機するインターネット制御メッセージ プロトコル (ICMP) エコー要求メッセージを送信します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ICMP メッセージの詳細については、RFC 792 で利用可能なを参照してください。 [http://www.ietf.org](http://www.ietf.org/)です。       次の種類は、Ping クラスと共に使用され、後で詳しく説明します。      |**型名**|**説明**|  |-------------------|---------------------|  |<xref:System.Net.NetworkInformation.IPStatus>|デバイスが ICMP エコー要求メッセージの結果を示すステータス コードを定義します |。  |<xref:System.Net.NetworkInformation.PingOptions>|構成するか、要求パケットを転送できます (<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>) 回数を制御する設定を取得することができ、断片化された (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A> ) であることができるかどうか |。  |<xref:System.Net.NetworkInformation.PingReply>|ICMP エコー要求の結果が含まれています |。  |<xref:System.Net.NetworkInformation.PingException>|回復不能なエラーが発生した場合にスローされます |。  |<xref:System.Net.NetworkInformation.PingCompletedEventArgs>|<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが完了したかが取り消されたときに発生する<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベントに関連付けられているデータが含まれています |。  |<xref:System.Net.NetworkInformation.PingCompletedEventHandler>|<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが完了したかが取り消されるときに呼び出されるコールバック メソッドを提供するデリゲート |。      <xref:System.Net.NetworkInformation.Ping.Send%2A>と<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>で応答を返し、<xref:System.Net.NetworkInformation.PingReply>オブジェクト</xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler></xref:System.Net.NetworkInformation.Ping.PingCompleted></xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs></xref:System.Net.NetworkInformation.PingException></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.PingOptions></xref:System.Net.NetworkInformation.IPStatus>。 <xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>プロパティから返される、<xref:System.Net.NetworkInformation.IPStatus>要求の結果を示す値</xref:System.Net.NetworkInformation.IPStatus></xref:System.Net.NetworkInformation.PingReply.Status%2A?displayProperty=fullName>。       要求を送信するときに、リモート コンピューターを指定する必要があります。 ホスト名の文字列、文字列の形式で IP アドレスを提供することによってこれを行う、または<xref:System.Net.IPAddress>オブジェクト</xref:System.Net.IPAddress>。       情報の種類を次のいずれかを指定することもできます:-要求に付随するデータ。 指定する`buffer`して、リモート ホストおよびネットワーク パスの最大転送単位を移動する特定のサイズのパケットに必要な時間を学習することができます。 (、<xref:System.Net.NetworkInformation.Ping.Send%2A>を参照してください<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads を受け取るか、`buffer`パラメーターです)。     の ICMP エコー パケットを転送中に断片化されるかどうか</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 (<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティと、<xref:System.Net.NetworkInformation.Ping.Send%2A><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>オーバー ロードを呼び出しますかかかる、`options`パラメーターです)。     -何回ルーティング ノードは、ルーターまたはゲートウェイ、パケットを転送できる変換先のコンピューターに到達したかが破棄されますより前のに、など</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A></xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 (「 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>」および、 <xref:System.Net.NetworkInformation.Ping.Send%2A> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>overloads を受け取るか、`options`パラメーターです)。     制限時間を応答を受信する必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.Send%2A></xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>。 (を参照してください、<xref:System.Net.NetworkInformation.Ping.Send%2A>または<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`timeout`パラメーター</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> </xref:System.Net.NetworkInformation.Ping.Send%2A> 。       Ping クラスには、要求を送信するための同期および非同期の両方の方法が用意されています。 場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。 場合は、アプリケーションをブロックしないでくださいを使用して、非同期<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>スレッド プールから自動的に割り当てられている独自のスレッドで実行します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>に対して呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。       Ping クラスの同じインスタンスを使用して、複数の同時 ICMP エコー要求を生成することはできません。 <xref:System.Net.NetworkInformation.Ping.Send%2A><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出しが進行中か、呼び出し元で<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>複数回になるまでに以前の呼び出しをすべて完了した原因<xref:System.InvalidOperationException>。</xref:System.InvalidOperationException></xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>中</xref:System.Net.NetworkInformation.Ping.Send%2A>の呼び出し"
  example:
  - "The following code example demonstrates using the Ping class synchronously.  \n  \n [!code-cs[NCLPingSync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_1.cs)]\n [!code-cpp[NCLPingSync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_1.cpp)]  \n  \n The following code example demonstrates using the Ping class asynchronously.  \n  \n [!code-cpp[NCLPingASync#1](~/add/codesnippet/cpp/t-system.net.networkinfo_4_2.cpp)]\n [!code-cs[NCLPingASync#1](~/add/codesnippet/csharp/t-system.net.networkinfo_4_2.cs)]"
  syntax:
    content: 'public class Ping : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.#ctor
  id: '#ctor'
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.Net.NetworkInformation.Ping> instance. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/m-system.net.networkinfo_4_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/m-system.net.networkinfo_4_1.cs)]"
  syntax:
    content: public Ping ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.Net.NetworkInformation.Ping&quot;> </xref>オブジェクト、および必要に応じてマネージ リソースを破棄します。"
  remarks: "このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.ComponentModel.Component.Finalize%2A>メソッド</xref:System.ComponentModel.Component.Finalize%2A>。 パブリック`Dispose()`メソッドで保護された Dispose メソッドを呼び出して、`disposing`パラメーターに設定`true`です。 <xref:System.ComponentModel.Component.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.ComponentModel.Component.Finalize%2A>       ときに、`disposing`パラメーターは`true`、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.Net.NetworkInformation.Ping>オブジェクト参照。</xref:System.Net.NetworkInformation.Ping> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Net.NetworkInformation.Ping.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  id: OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "発生させる、 <xref href=&quot;System.Net.NetworkInformation.Ping.PingCompleted&quot;> </xref>イベント。"
  remarks: "継承するクラス、<xref:System.Net.NetworkInformation.Ping>クラスに含まれているデータのログ記録などの他のタスクを実行するには、このメソッドをオーバーライドします`e`パラメーター</xref:System.Net.NetworkInformation.Ping> 。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnPingCompleted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected void OnPingCompleted (System.Net.NetworkInformation.PingCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.NetworkInformation.PingCompletedEventArgs
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingCompletedEventArgs&quot;> </xref>イベント データを格納するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.OnPingCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  id: PingCompleted
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信し、対応する ICMP エコー応答メッセージを受信する非同期操作が完了したかが取り消されると発生します。"
  remarks: "アプリケーションのいずれかへの呼び出しによって収集されたデータと完了ステータスに関する情報を取得する PingCompleted イベントを使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッド</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler>デリゲートの呼び出しは、バック メソッドが呼び出されたときに<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>このイベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。"
  example:
  - "The following code example demonstrates specifying a callback method for the PingCompleted event. The complete example is available in the <xref:System.Net.NetworkInformation.Ping> class overview.  \n  \n [!code-cpp[NCLPingAsync#2](~/add/codesnippet/cpp/e-system.net.networkinfo_1.cpp)]\n [!code-cs[NCLPingAsync#2](~/add/codesnippet/csharp/e-system.net.networkinfo_1.cs)]"
  syntax:
    content: public event System.Net.NetworkInformation.PingCompletedEventHandler PingCompleted;
    return:
      type: System.Net.NetworkInformation.PingCompletedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  id: Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとしています<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します。</xref:System.Net.IPAddress> 。"
  remarks: "このメソッドで指定されているホストに送信`address`32<xref:System.Byte>データ バッファーを ICMP エコー メッセージ</xref:System.Byte>。 このメソッドは、ICMP エコー応答メッセージを&5; 秒を待ちます。 そのとき、メソッドを返しますおよび<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されている</xref:System.Net.NetworkInformation.PingReply.Status%2A>応答を受信しなかった場合       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#3](~/add/codesnippet/csharp/m-system.net.networkinfo_5_1.cs)]\n [!code-cpp[NCLPingSampler#3](~/add/codesnippet/cpp/m-system.net.networkinfo_5_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>オブジェクトに関する情報を示す ICMP エコー応答メッセージを受信しましたが、1 つ、またはメッセージが受信されなかった場合に、失敗の理由を説明します。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  id: Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "送受信するように、インターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを指定したコンピューターに対応する ICMP エコー応答メッセージをそのコンピューターからです。"
  remarks: "このメソッドは、32、送信<xref:System.Byte>データ バッファーを ICMP エコー メッセージ</xref:System.Byte>。 このメソッドは、ICMP エコー応答メッセージを&5; 秒を待ちます。 そのとき、メソッドを返しますおよび<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されている</xref:System.Net.NetworkInformation.PingReply.Status%2A>応答を受信しなかった場合       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NCLPingSampler#2](~/add/codesnippet/csharp/m-system.net.networkinfo_2_1.cs)]\n [!code-cpp[NCLPingSampler#2](~/add/codesnippet/cpp/m-system.net.networkinfo_2_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>メッセージが受信されない場合、受信したか、失敗の理由を提供する場合は ICMP エコー応答メッセージに関する情報を提供するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  id: Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとしています<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します。</xref:System.Net.IPAddress> 。 このメソッドでは、操作のタイムアウト値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       パケットまたはパケット フラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>を受信しましたが、1 つ、またはメッセージが受信されない場合、失敗の理由を提供する場合は、ICMP エコー応答メッセージに関する情報を提供するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  id: Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "送受信するように、インターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを指定したコンピューターに対応する ICMP エコー応答メッセージをそのコンピューターからです。 このメソッドでは、操作のタイムアウト値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.Send%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>を受信しましたが、1 つ、またはメッセージが受信されない場合、失敗の理由を提供する場合は、ICMP エコー応答メッセージに関する情報を提供するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとしています<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します。</xref:System.Net.IPAddress> 。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       パケットまたはパケット フラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#6](~/add/codesnippet/csharp/b44ef8f6-ad7e-49c2-8af4-_1.cs)]\n [!code-cpp[NCLPingSampler#6](~/add/codesnippet/cpp/b44ef8f6-ad7e-49c2-8af4-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>メッセージが受信されない場合、受信したか、失敗の理由を提供する場合は ICMP エコー応答メッセージに関する情報を提供するオブジェクト。 メソッドが返す<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;></xref>場合は、パケットは、最大転送単位 (MTU) を超えています。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>buffer</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、または<code>buffer</code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  id: Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "送受信するように指定されたデータ バッファーをインターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを指定したコンピューターに対応する ICMP エコー応答メッセージをそのコンピューターからです。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       パケットまたはパケット フラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.Send%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.Send%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For an example that demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.Send%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>を受信しましたが、1 つ、またはメッセージが受信されない場合、失敗の理由を提供する場合は、ICMP エコー応答メッセージに関する情報を提供するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。       - または -<code>buffer</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、または<code>buffer</code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとしています<xref:System.Net.IPAddress>し、そのコンピューターから対応する ICMP エコー応答メッセージを受信します。</xref:System.Net.IPAddress> 。 このオーバー ロードでは、操作とコントロールの断片化のタイムアウト値と ICMP エコー メッセージ パケットの有効期間の値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用して、 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>ICMP エコー メッセージを送信先に到達する前に転送できる時間の最大数を指定するプロパティ</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#5](~/add/codesnippet/csharp/81445dc1-adbd-44fc-b79c-_1.cs)]\n [!code-cpp[NCLPingSampler#5](~/add/codesnippet/cpp/81445dc1-adbd-44fc-b79c-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>メッセージが受信されない場合、受信したか、失敗の理由を提供する場合は ICMP エコー応答メッセージに関する情報を提供するオブジェクト。 メソッドが返す<xref href=&quot;System.Net.NetworkInformation.IPStatus&quot;></xref>場合は、パケットは、最大転送単位 (MTU) を超えています。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>buffer</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、または<code>buffer</code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "送受信するように指定されたデータ バッファーをインターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを指定したコンピューターに対応する ICMP エコー応答メッセージをそのコンピューターからです。 このオーバー ロードでは、操作とコントロールの断片化のタイムアウト値と ICMP パケットの有効期間の値を指定することができます。"
  remarks: "指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用して、 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>ICMP エコー メッセージを送信先に到達する前に転送できる時間の最大数を指定するプロパティ</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cs[NCLPingSampler#4](~/add/codesnippet/csharp/ce144ae4-a1a7-44f3-ac8a-_1.cs)]\n [!code-cpp[NCLPingSampler#4](~/add/codesnippet/cpp/ce144ae4-a1a7-44f3-ac8a-_1.cpp)]"
  syntax:
    content: public System.Net.NetworkInformation.PingReply Send (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    return:
      type: System.Net.NetworkInformation.PingReply
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingReply&quot;> </xref>を受信しましたが、1 つ、またはメッセージが受信されない場合、失敗の理由を提供する場合は、ICMP エコー応答メッセージに関する情報を提供するオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.Send*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>か、長さ&0; の文字列。       - または -<code>buffer</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、または<code>buffer</code>サイズは 65,500 バイトを超えています。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定されたコンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとした<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します</xref:System.Net.IPAddress>。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックしないでください</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 このメソッドに対する各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行します。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させます<xref:System.Net.NetworkInformation.PingCompletedEventHandler><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。      > [!NOTE] > 場合は、アプリケーションは、応答を待機中にブロックする必要がありますのいずれかを使用、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       このメソッドは、32、送信<xref:System.Byte>データ バッファーを ICMP エコー メッセージ</xref:System.Byte>。 このメソッドは、ICMP エコー応答メッセージを&5; 秒を待ちます。 そのとき、メソッドを返しますおよび<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されている</xref:System.Net.NetworkInformation.PingReply.Status%2A>応答を受信しなかった場合       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       パケットまたはパケット フラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し、<xref:System.Net.NetworkInformation.Ping.SendAsync*>メソッドが進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  id: SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定したコンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージの受信を試みます。"
  remarks: "SendAsync メソッドは、エコー メッセージを非同期的に送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します。 アプリケーションを妨げないようにする場合は、SendAsync メソッドを呼び出します。 このメソッドに対する各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行します。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させます<xref:System.Net.NetworkInformation.PingCompletedEventHandler><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。      > [!NOTE] > 場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       このメソッドは、32、送信<xref:System.Byte>データ バッファーを ICMP エコー メッセージ</xref:System.Byte>。 このメソッドは、ICMP エコー応答メッセージを&5; 秒を待ちます。 その応答が受信しなかった場合たびにメソッドを返します。 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       パケットまたはパケット フラグメントは、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SendAsync メソッドへの呼び出しが進行中です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>有効な IP アドレスに解決できませんでした。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定されたコンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとした<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します</xref:System.Net.IPAddress>。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックしないでください</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>ときに呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。       場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>メソッドが進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  id: SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定したコンピューターにインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージの受信を試みます。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックしないでください</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>ときに呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。       場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>有効な IP アドレスに解決できませんでした。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとするは非同期的に<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します</xref:System.Net.IPAddress>。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "このメソッドは、エコー メッセージを非同期的に送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックしないでください</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 ときに呼び出されるメソッドを指定する<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>、イベントを発生させます<xref:System.Net.NetworkInformation.PingCompletedEventHandler><xref:System.Net.NetworkInformation.Ping.SendAsync%2A>.</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A> デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。      > [!NOTE] > の応答を待機中に、アプリケーションをブロックする場合を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - For a code example that demonstrates calling a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定したコンピューターに指定されたデータ バッファーをインターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージの受信を試みます。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックしないでください</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>ときに呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。       場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       このオーバー ロードは、パケットの断片化とパケット転送のための既定の設定を使用します。 ICMP エコー メッセージを含むパケット断片化できる転送中に合計パケット サイズを送信できる最大パケット サイズを超える場合、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでします。 断片化を防ぐためには、いずれかの操作を使用して、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るメソッド、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティを`true`</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 ときに<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>は`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A> パケットまたはパケット フラグメント (断片化) する場合は、破棄される前に、ルーティングのノードで 128 回転送されます。 この設定を変更するには、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を受け取るオーバー ロード、`options`パラメーター、およびセット、<xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>プロパティを目的の値にします</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A></xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - The following code example demonstrates how to call a <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> overload, see the <xref:System.Net.NetworkInformation.Ping> class overview.
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>hostNameOrAddress</code>IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>有効な IP アドレスに解決できませんでした。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信しようとするは非同期的に<xref:System.Net.IPAddress>、およびそのコンピューターから対応する ICMP エコー応答メッセージを受信します</xref:System.Net.IPAddress>。 このオーバー ロードでは、操作とコントロールの断片化のタイムアウト値と ICMP エコー メッセージ パケットの有効期間の値を指定することができます。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>ときに呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。       応答の待機中に、アプリケーションをブロックする場合を使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用して、 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>ICMP エコー メッセージを送信先に到達する前に転送できる時間の最大数を指定するプロパティ</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method. For an implementation of the callback method, see the <xref:System.Net.NetworkInformation.Ping.SendAsync%2A> method overload example section.  \n  \n The following code example requires the following namespaces:  \n  \n [!code-cs[NCLPingSampler#0](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_1.cs)]\n [!code-cpp[NCLPingSampler#0](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_1.cpp)]  \n  \n The following code example sends an ICMP echo message asynchronously.  \n  \n [!code-cs[NCLPingSampler#7](~/add/codesnippet/csharp/cc37a528-8801-4ac0-83d4-_2.cs)]\n [!code-cpp[NCLPingSampler#7](~/add/codesnippet/cpp/cc37a528-8801-4ac0-83d4-_2.cpp)]"
  syntax:
    content: public void SendAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "<xref:System.Net.IPAddress>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.Net.IPAddress>。"
    - id: timeout
      type: System.Int32
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  id: SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "非同期的に、指定したコンピューターに指定されたデータ バッファーをインターネット制御メッセージ プロトコル (ICMP) エコーのメッセージを送信し、そのコンピューターから対応する ICMP エコー応答メッセージの受信を試みます。 このオーバー ロードでは、操作とコントロールの断片化のタイムアウト値と ICMP パケットの有効期間の値を指定することができます。"
  remarks: "<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドが非同期的にエコー メッセージを送信し、アプリケーションに状態を返します (が正常にまたは正常)、操作の完了します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 呼び出す、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>メソッドと、アプリケーションをブロックする必要があります</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。 各呼び出しは、スレッド プールから自動的に割り当てられている個別のスレッドで実行されます。 場合は、非同期操作の完了が発生、<xref:System.Net.NetworkInformation.Ping.PingCompleted>イベント</xref:System.Net.NetworkInformation.Ping.PingCompleted>。 アプリケーションを使用して、<xref:System.Net.NetworkInformation.PingCompletedEventHandler>ときに呼び出されるメソッドを指定するデリゲート<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>イベントを発生させます</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingCompletedEventHandler>。 <xref:System.Net.NetworkInformation.PingCompletedEventHandler> <xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す前に、イベントにデリゲート</xref:System.Net.NetworkInformation.PingCompletedEventHandler>を追加する必要があります。 デリゲートのメソッドは受信、<xref:System.Net.NetworkInformation.PingCompletedEventArgs>オブジェクトを含む、<xref:System.Net.NetworkInformation.PingReply>の結果を記述するオブジェクト、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を呼び出す</xref:System.Net.NetworkInformation.Ping.SendAsync%2A></xref:System.Net.NetworkInformation.PingReply></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 <xref:System.Net.NetworkInformation.PingCompletedEventArgs>のオブジェクトの継承、<xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A>プロパティ</xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A></xref:System.Net.NetworkInformation.PingCompletedEventArgs>。 このプロパティが含まれています、`userToken`にオブジェクトが渡された、<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>呼び出します</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。       場合は、アプリケーションは、応答を待機中にブロックする必要がありますを使用して、<xref:System.Net.NetworkInformation.Ping.Send%2A>メソッド; これらのメソッドは同期的です</xref:System.Net.NetworkInformation.Ping.Send%2A>。       指定された時間内に ICMP エコー応答メッセージが受信されない場合、`timeout`パラメーター、ICMP echo 失敗および<xref:System.Net.NetworkInformation.PingReply.Status%2A><xref:System.Net.NetworkInformation.IPStatus>.</xref:System.Net.NetworkInformation.IPStatus>にプロパティが設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>      > [!NOTE] > の非常に小さな数値を指定するときに`timeout`、Ping の応答を受信できる場合でも`timeout`ミリ秒が経過しました。       場合、<xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>プロパティは`true`合計パケット サイズが送信できるは、ローカルおよびリモート コンピューター間のルーティング ノードのいずれかでパケットの最大サイズを超えると、ICMP エコー要求は失敗します</xref:System.Net.NetworkInformation.PingOptions.DontFragment%2A>。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>       使用して、 <xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>ICMP エコー メッセージを送信先に到達する前に転送できる時間の最大数を指定するプロパティ</xref:System.Net.NetworkInformation.PingOptions.Ttl%2A>。 パケットは、送信先を指定した回数だけが転送される後に到達しなかった場合、パケットは破棄され、ICMP エコー要求は失敗します。 この場合、 <xref:System.Net.NetworkInformation.PingReply.Status%2A> <xref:System.Net.NetworkInformation.IPStatus>。</xref:System.Net.NetworkInformation.IPStatus>に設定されています。</xref:System.Net.NetworkInformation.PingReply.Status%2A>"
  example:
  - "The following code example demonstrates how to call this method.  \n  \n [!code-cpp[NCLPingAsync#1](~/add/codesnippet/cpp/56cfcaea-d9d5-4c26-9eea-_1.cpp)]\n [!code-cs[NCLPingAsync#1](~/add/codesnippet/csharp/56cfcaea-d9d5-4c26-9eea-_1.cs)]"
  syntax:
    content: public void SendAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options, object userToken);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "A <xref:System.String>ICMP エコー メッセージの送信先となるコンピューターを識別します</xref:System.String>。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: buffer
      type: System.Byte[]
      description: "<xref:System.Int32>(エコー メッセージを送信する) の後のミリ秒単位の最大数を示す値を ICMP エコー応答メッセージを待機します</xref:System.Int32>。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    - id: userToken
      type: System.Object
      description: "非同期操作の完了時に呼び出されるメソッドに渡されるオブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>hostNameOrAddress</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空の文字列 (&quot;&quot;) です。       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendAsync*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>address</code> IPv6 アドレスであり、ローカル コンピューターがオペレーティング システムを Windows 2000 より前に実行します。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>hostNameOrAddress</code>有効な IP アドレスに解決できませんでした。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code>サイズは 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信するすべての保留中の非同期要求をキャンセルし、対応する ICMP エコー応答メッセージを受信します。"
  remarks: "呼び出しを終了するには、このメソッドを呼び出す<xref:System.Net.NetworkInformation.Ping.SendAsync%2A>を完了していない</xref:System.Net.NetworkInformation.Ping.SendAsync%2A>。"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  id: SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信<xref:System.Net.IPAddress>、し、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受け取ります</xref:System.Net.IPAddress>。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP エコー メッセージの送信先となるコンピューターを識別する IP アドレスです。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  id: SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージ データを指定して、指定したコンピューターにバッファーし、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受信を送信します。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP エコー メッセージの送信先となるコンピューター。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  id: SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信<xref:System.Net.IPAddress>、し、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受け取ります</xref:System.Net.IPAddress>。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP エコー メッセージの送信先となるコンピューターを識別する IP アドレスです。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  id: SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージ データを指定して、指定したコンピューターにバッファーし、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受信を送信します。 このオーバー ロードでは、操作のタイムアウト値を指定することができます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP エコー メッセージの送信先となるコンピューター。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信<xref:System.Net.IPAddress>、し、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受け取ります</xref:System.Net.IPAddress>。 このオーバー ロードでは、送信を使用して、受信バッファーと、操作のタイムアウト値を指定することができます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP エコー メッセージの送信先となるコンピューターを識別する IP アドレスです。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code> 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  id: SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージ データを指定して、指定したコンピューターにバッファーし、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受信を送信します。 このオーバー ロードでは、送信を使用して、受信バッファーと、操作のタイムアウト値を指定することができます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP エコー メッセージの送信先となるコンピューター。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "指定したコンピューターに指定されたデータ バッファーでインターネット制御メッセージ プロトコル (ICMP) エコー メッセージを送信<xref:System.Net.IPAddress>、し、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受け取ります</xref:System.Net.IPAddress>。 このオーバー ロードを使用すると、操作は、受信、送信に使用するバッファーのタイムアウト値を指定し、断片化と ICMP エコー メッセージ パケットの有効期間の値を制御できます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (System.Net.IPAddress address, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: address
      type: System.Net.IPAddress
      description: "ICMP エコー メッセージの送信先となるコンピューターを識別する IP アドレスです。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>buffer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>timeout</code>0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "呼び出し<xref:System.Net.NetworkInformation.Ping.SendPingAsync*>が進行中です</xref:System.Net.NetworkInformation.Ping.SendPingAsync*>。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "ICMP メッセージを送受信するときに例外がスローされました。 スローされた正確な例外の内部例外を参照してください。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>address</code> 有効な IP アドレスではありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このオブジェクトは破棄されました。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ<code> buffer </code> 65,500 バイトを超えています。"
  platform:
  - net462
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  id: SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  langs:
  - csharp
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  type: Method
  assemblies:
  - System
  namespace: System.Net.NetworkInformation
  summary: "インターネット制御メッセージ プロトコル (ICMP) エコー メッセージ データを指定して、指定したコンピューターにバッファーし、非同期操作としては、そのコンピューターから対応する ICMP エコー応答メッセージを受信を送信します。 このオーバー ロードを使用すると、操作は、受信、送信に使用するバッファーのタイムアウト値を指定し、断片化と ICMP エコー メッセージ パケットの有効期間の値を制御できます。"
  remarks: "この操作はブロックされません。 返された<xref:System.Threading.Tasks.Task%601>> オブジェクトは、ICMP パケットが送信されているし、応答が受信された後に完了します</xref:System.Threading.Tasks.Task%601>。"
  syntax:
    content: public System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply> SendPingAsync (string hostNameOrAddress, int timeout, byte[] buffer, System.Net.NetworkInformation.PingOptions options);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "ICMP エコー メッセージの送信先となるコンピューター。 このパラメーターに指定された値には、ホスト名または IP アドレスの文字列形式を指定できます。"
    - id: timeout
      type: System.Int32
      description: "(エコー メッセージを送信する) までのミリ秒の最大数を ICMP エコー応答メッセージを待機します。"
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>ICMP エコー メッセージと共に送信され、ICMP エコー応答メッセージで返されるデータを含む配列</xref:System.Byte>。 配列は 65,500 バイト以上を含めることはできません。"
    - id: options
      type: System.Net.NetworkInformation.PingOptions
      description: "A <xref href=&quot;System.Net.NetworkInformation.PingOptions&quot;> </xref>断片化と ICMP エコー メッセージ パケットの有効期間の値を制御するために使用します。"
    return:
      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
      description: "返します&lt;xref:System.Threading.Tasks.Task%601&gt;です。       非同期操作を表すタスク オブジェクト。"
  overload: System.Net.NetworkInformation.Ping.SendPingAsync*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.NetworkInformation.Ping.#ctor
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping()
  nameWithType: Ping.Ping()
  fullName: System.Net.NetworkInformation.Ping.Ping()
- uid: System.Net.NetworkInformation.Ping.Dispose(System.Boolean)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Ping.Dispose(Boolean)
  fullName: System.Net.NetworkInformation.Ping.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted(System.Net.NetworkInformation.PingCompletedEventArgs)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted(PingCompletedEventArgs)
  nameWithType: Ping.OnPingCompleted(PingCompletedEventArgs)
  fullName: System.Net.NetworkInformation.Ping.OnPingCompleted(PingCompletedEventArgs)
- uid: System.Net.NetworkInformation.PingCompletedEventArgs
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventArgs
  nameWithType: PingCompletedEventArgs
  fullName: System.Net.NetworkInformation.PingCompletedEventArgs
- uid: System.Net.NetworkInformation.Ping.PingCompleted
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: PingCompleted
  nameWithType: Ping.PingCompleted
  fullName: System.Net.NetworkInformation.Ping.PingCompleted
- uid: System.Net.NetworkInformation.PingCompletedEventHandler
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingCompletedEventHandler
  nameWithType: PingCompletedEventHandler
  fullName: System.Net.NetworkInformation.PingCompletedEventHandler
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress)
  nameWithType: Ping.Send(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress)
- uid: System.Net.NetworkInformation.PingReply
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingReply
  nameWithType: PingReply
  fullName: System.Net.NetworkInformation.PingReply
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Net.NetworkInformation.Ping.Send(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String)
  nameWithType: Ping.Send(String)
  fullName: System.Net.NetworkInformation.Ping.Send(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32)
  nameWithType: Ping.Send(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32)
  nameWithType: Ping.Send(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32)
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[])
  nameWithType: Ping.Send(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[])
  nameWithType: Ping.Send(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.Send(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.PingOptions
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingOptions
  nameWithType: PingOptions
  fullName: System.Net.NetworkInformation.PingOptions
- uid: System.Net.NetworkInformation.Ping.Send(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.Send(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.Send(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Object)
  nameWithType: Ping.SendAsync(IPAddress,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Object)
  nameWithType: Ping.SendAsync(String,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Object)
  nameWithType: Ping.SendAsync(String,Int32,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(IPAddress,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions,System.Object)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync(String,Int32,Byte[],PingOptions,Object)
  nameWithType: Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
  fullName: System.Net.NetworkInformation.Ping.SendAsync(String,Int32,Byte[],PingOptions,Object)
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: Ping.SendAsyncCancel()
  fullName: System.Net.NetworkInformation.Ping.SendAsyncCancel()
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress)
  nameWithType: Ping.SendPingAsync(IPAddress)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress)
- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.PingReply}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<PingReply>
  nameWithType: Task<PingReply>
  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.PingReply>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Net.NetworkInformation.PingReply>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.NetworkInformation.PingReply
    name: PingReply
    nameWithType: PingReply
    fullName: PingReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String)
  nameWithType: Ping.SendPingAsync(String)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32)
  nameWithType: Ping.SendPingAsync(String,Int32)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[])
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[])
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[])
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[])
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.Net.IPAddress,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.SendPingAsync(System.String,System.Int32,System.Byte[],System.Net.NetworkInformation.PingOptions)
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync(String,Int32,Byte[],PingOptions)
  nameWithType: Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
  fullName: System.Net.NetworkInformation.Ping.SendPingAsync(String,Int32,Byte[],PingOptions)
- uid: System.Net.NetworkInformation.Ping.#ctor*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Ping
  nameWithType: Ping.Ping
- uid: System.Net.NetworkInformation.Ping.Dispose*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Dispose
  nameWithType: Ping.Dispose
- uid: System.Net.NetworkInformation.Ping.OnPingCompleted*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: OnPingCompleted
  nameWithType: Ping.OnPingCompleted
- uid: System.Net.NetworkInformation.Ping.Send*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: Send
  nameWithType: Ping.Send
- uid: System.Net.NetworkInformation.Ping.SendAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsync
  nameWithType: Ping.SendAsync
- uid: System.Net.NetworkInformation.Ping.SendAsyncCancel*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendAsyncCancel
  nameWithType: Ping.SendAsyncCancel
- uid: System.Net.NetworkInformation.Ping.SendPingAsync*
  parent: System.Net.NetworkInformation.Ping
  isExternal: false
  name: SendPingAsync
  nameWithType: Ping.SendPingAsync
