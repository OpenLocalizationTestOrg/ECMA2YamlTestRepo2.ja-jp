### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor
  id: Cursor
  children:
  - System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  - System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  - System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  - System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  - System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  langs:
  - csharp
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor
  type: Class
  summary: "軸の位置を定義する水平または垂直線を表します。"
  remarks: "カーソルは、水平または垂直の行で、軸の位置を定義します。 範囲の選択は、先頭と末尾の位置によって定義され、半透明の色を使用して表示する軸に沿った範囲です。       カーソルと範囲選択の両方として表されますカーソル クラスによって実装される、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>のプロパティ、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクト</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea></xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A></xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>。 <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>オブジェクトは、グラフ領域の X 軸と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>オブジェクトは、Y 軸です</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A></xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>。 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>これらのオブジェクトのプロパティは、関連付けられた軸がプライマリかセカンダリかどうかを決定します</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>。       カーソルと範囲選択機能だけでは、カーソル クラスの外部イベントに関連するルート内にあるカーソルと範囲選択が見つかりました<xref:System.Windows.Forms.DataVisualization.Charting.Chart>オブジェクト</xref:System.Windows.Forms.DataVisualization.Charting.Chart>。"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Enabled")]

      public class Cursor : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
  type: Constructor
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.Cursor&quot;> </xref>クラスです。"
  syntax:
    content: public Cursor ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  id: AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはスクロールを行うか範囲選択操作がグラフ領域の境界を越える場合を決定するフラグを設定します。"
  remarks: "データ ビューには、プロットされる系列のすべてのデータ ポイントは表示されません、範囲が、ユーザーが選択されている場合は、ビューの自動スクロールは、このプロパティは`true`とマウス — とカーソルしたがって — がグラフ領域の境界外に移動します。       スクロールがのみ発生する軸に沿ったを表示できる使用可能な多くのデータがある場合。       通常のすべてのデータを表示しないデータ ビューは、エンドユーザーがデータのサブセットにズーム インする場合になります。 ビューとズームは、<xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>クラス</xref:System.Windows.Forms.DataVisualization.Charting.AxisScaleView>によって実装されます。"
  syntax:
    content: public bool AutoScroll { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データ ビューを自動的にスクロールできる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  id: AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはにカーソルがアタッチされている軸の種類を設定します。"
  remarks: "2 つの軸のセットがある: プライマリおよびセカンダリ。 プライマリ軸の横棒グラフを除くすべてのグラフは、下 (主軸の x 軸) と、グラフ領域の境界線を左 (主軸の y 軸) にあります。       セカンダリ軸は、グラフ領域の上部 (第&2; y 軸) 罫線と右 (第&2; x 軸) にあります。      > [!NOTE] > 内のすべての系列をプロットする場合、グラフ領域は、軸 (たとえば、プライマリ x 軸) の&1; つだけの種類を使用し、このプロパティの設定軸されません (このケースでは、第&2; x 軸) 内の系列で使用される型には影響はありません; 系列のプロットに使用されている唯一の軸には、カーソルが自動的に添付されます。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.AxisType AxisType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.AxisType
      description: "<xref href=&quot;System.Windows.Forms.DataVisualization.Charting.AxisType&quot;> </xref>軸は、プライマリまたはセカンダリ軸にアタッチされているかどうかを表す列挙値。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  id: Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "解放、リリース、またはアンマネージ リソースをリセットするアプリケーション定義のタスクを実行します。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "リリースでは、管理されていないし、オプションでマネージ リソース。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アンマネージ コードとマネージの両方のリソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  id: Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルの間隔を設定します。"
  remarks: "間隔のプロパティは、エンドユーザーがカーソルに描画できる頻度および場所を決定だけでなく、先頭と範囲選択の終点に描画できる場所です。 既定値には、0 の値は、カーソルまたは範囲の選択にグラフ領域内で任意の場所描画できることを表します。 0 以外の値は、そのカーソルまたは先頭の選択範囲の終点が、ユーザー操作によって設定すると、指定した間隔に描画のみことを示します。       測定単位がによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>プロパティ</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>。       このプロパティと組み合わせても使用できます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティで、指定した間隔のオフセットを指定することができます</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>。 たとえば、毎週土曜日にのみ表示されますへのカーソルは、1 週間間隔必要がありますと共に指定する、6 日間の間隔のオフセット。 .NET framework では、日曜日は、週の最初の日であると見なされます。       設定してカーソルのユーザー インターフェイスが有効になっている場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>プロパティ、およびマウスが、グラフ領域の内側がクリックされると、カーソルの位置に設定されます、許容される場所に最も近い</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>。      > [!IMPORTANT] > Interval プロパティも何も起こりません場合は、カーソルの位置を設定するか、選択範囲をプログラムによって範囲です。"
  syntax:
    content: public double Interval { get; set; }
    return:
      type: System.Double
      description: "カーソルの間隔です。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  id: IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得または間隔のオフセットをどのように影響する、ユーザーが設定されている場合のカーソルと範囲選択の描画位置を設定します。"
  remarks: "IntervalOffset プロパティは、カーソルと開始の間隔のオフセットと範囲選択の終了点を判断します。 組み合わせて、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティ、このプロパティは、カーソルを決定し、グラフ領域内に範囲を表示することができます</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>。 既定では、ゼロの値は、オフセットがないことを示します。       測定単位がによって決定されます、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>プロパティ</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType%2A>。       オフセットは、あるカーソルと先頭と範囲選択の終点に描画できる場所に影響します。 たとえば、毎週土曜日にのみ表示されますへのカーソルは、1 週間間隔必要がありますと共に指定する、6 日間の間隔のオフセット。 .NET framework では、日曜日は、週の最初の日であると見なされます。       設定してカーソルのユーザー インターフェイスが有効になっている場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>プロパティ、およびマウスが、グラフ領域の内側がクリックされると、カーソルの位置に設定されます、許容される場所に最も近い</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled%2A>。      > [!IMPORTANT] > 間隔に関連するプロパティが範囲の選択した場合であるか、カーソル位置をプログラムによって設定されます。"
  syntax:
    content: public double IntervalOffset { get; set; }
    return:
      type: System.Double
      description: "間隔のオフセット。 既定値は&0; で、制限がないことを示します、および、負の値が許可されます。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  id: IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルと軸の選択範囲の間隔のオフセットの種類を設定します。"
  remarks: "IntervalOffsetType プロパティを使用して指定されている間隔のオフセットの種類を決定する、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティ</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>。       IntervalOffsetType プロパティ設定されている場合<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A>プロパティ設定が使用されます</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType%2A></xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>。      > [!NOTE] > 間隔に関連するプロパティが範囲の選択した場合であるか、カーソル位置をプログラムによって設定されます。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalOffsetType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "A <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType&quot;> </xref>間隔のオフセットの測定単位を決定する列挙値。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  id: IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルと選択した範囲の軸の間隔の種類を設定します。"
  remarks: "IntervalType プロパティを使用して指定されている間隔の種類を決定する、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>プロパティ</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>。       間隔の種類がある場合<xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>、間隔の単位として扱われます、`double`は&1; 日に相当するときに<xref:System.DateTime>値を指定します</xref:System.DateTime></xref:System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType>。      > [!NOTE] > 間隔に関連するプロパティが有効と範囲選択であるか、カーソル位置がプログラムによって設定します。       軸の間隔の種類は、時刻を表す場合 — 時間、分、およびなど-ズーム機能を正しく有効にするために、IntervalType 必要がありますも設定する時刻値にします。 たとえば場合は、ChartArea1.AxisX.IntervalType は時間単位で表す、分に、ChartArea1.CursorX.IntervalType を設定可能性があります。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType IntervalType { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
      description: "カーソルと選択した範囲の軸の間隔の種類。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  id: IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはまたはカーソルのユーザー インターフェイスを無効にするフラグを設定します。"
  syntax:
    content: public bool IsUserEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>カーソルのユーザー インターフェイスが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  id: IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはまたは範囲選択ユーザー インターフェイスを無効にするフラグを設定します。"
  syntax:
    content: public bool IsUserSelectionEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>範囲選択ユーザー インターフェイスが有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  id: LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルの線の色を設定します。"
  syntax:
    content: public System.Drawing.Color LineColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "カーソルの線の色。 既定値は<xref:System.Drawing.Color.Red*>。</xref:System.Drawing.Color.Red*>"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  id: LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソル行のスタイルを設定します。"
  syntax:
    content: public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle LineDashStyle { get; set; }
    return:
      type: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
      description: "カーソル行のスタイルです。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  id: LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得または設定、線の幅 (ピクセル単位)、カーソルの"
  remarks: "このプロパティを使用して、カーソルのピクセル単位で、線の幅を指定します。"
  syntax:
    content: public int LineWidth { get; set; }
    return:
      type: System.Int32
      description: "線の幅 (ピクセル単位)。 既定値は&1; です) です。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  id: Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルの位置を設定します。"
  remarks: "このプロパティと、カーソル、カーソルの位置をプログラムで設定についての位置を取得するためにことができます。       位置が計算によって決定されるカーソルが所属する軸の値として、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>プロパティ</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType%2A>。 たとえば、主軸の X 軸、2000 年 1 月 1 日の値にこのプロパティを設定する、カーソルが属している場合が軸に沿った 2000 年 1 月 1 日の位置に描画されている x 軸カーソルで発生します。 この軸の値が存在しない場合、カーソルは表示されません。       このプロパティを設定する場合、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A>プロパティには影響はありませんこの指定された場所にカーソルが表示されます、。</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset%2A> </xref:System.Windows.Forms.DataVisualization.Charting.Cursor.Interval%2A> 。       設定がこのプロパティを生成しませんが、<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>または<xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging>イベント</xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanging></xref:System.Windows.Forms.DataVisualization.Charting.Chart.CursorPositionChanged>。       または、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A>メソッドは、カーソルを設定するために使用できます</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition%2A>。       カーソルをプログラムによって削除するには、このプロパティを使用して<xref:System.Double.NaN>。</xref:System.Double.NaN>カーソルの位置を設定"
  syntax:
    content: public double Position { get; set; }
    return:
      type: System.Double
      description: "カーソルの位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  id: SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはデータの範囲をハイライト半透明の色を設定します。"
  remarks: "このプロパティは、範囲選択の色を決定し、ARGB (アルファ、赤、緑、青) の有効な値に設定することができます。 透明度のレベルを決定する、アルファ値が指定されていない場合、既定のアルファ値は 120 は使用されます。       選択した色に設定できる、X と Y 軸カーソルを使用して実装される、<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>と<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A>プロパティの<xref:System.Windows.Forms.DataVisualization.Charting.ChartArea>オブジェクトをそれぞれ</xref:System.Windows.Forms.DataVisualization.Charting.ChartArea></xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorY%2A></xref:System.Windows.Forms.DataVisualization.Charting.ChartArea.CursorX%2A>。 範囲を x 軸に沿ってのみ選択すると場合、は、x 軸カーソルの SelectionColor 値が使用されます。範囲を y 軸に沿ってのみ選択すると、y 軸カーソル SelectionColor 値が使用されます。 両方の軸に沿って範囲を選択すると場合の y 軸カーソル SelectionColor 値を選択した色のも使用されます。"
  syntax:
    content: public System.Drawing.Color SelectionColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "強調表示された範囲の色。 既定値は<xref:System.Drawing.Color.LightGray*>、120 のアルファ値を持つ</xref:System.Drawing.Color.LightGray*>。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  id: SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得または選択範囲の終了位置を設定します。"
  remarks: "ユーザーは、マウスの左ボタンをクリックしてマウスをドラッグして、グラフ領域内の範囲を選択できます。 なお、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>プロパティを設定する必要がありますも`true`</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>。 いずれか、SelectionEnd を使用してプログラムから範囲の選択 を設定できますさらに、および<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>メソッド</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>。       範囲選択の終了位置は、カーソルが所属する軸の値として計算されます。 たとえば、主軸の x 軸にカーソルが属し、2000 年 12 月 31 日の値に SelectionEnd プロパティを設定する選択範囲の末尾が発生、2000 年 12 月 31 日にプライマリに沿って X 軸です。       プログラムで削除するには、範囲の選択 設定、先頭と範囲の終点<xref:System.Double.NaN>、SelectionEnd を使用して<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A>プロパティ、またはを使用して、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>メソッド</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart%2A></xref:System.Double.NaN>。"
  syntax:
    content: public double SelectionEnd { get; set; }
    return:
      type: System.Double
      description: "範囲選択の終了位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  id: SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  type: Property
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "取得またはカーソルの選択範囲の開始位置を設定します。"
  remarks: "ユーザーは、マウスの左ボタンをクリックすると、マウスをドラッグして、カーソルの位置を移動して、範囲を選択できます。 なお、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>プロパティを設定する必要がありますも`true`</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled%2A>。 プログラムでいずれかを使用して選択範囲を設定できますさらに、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>と SelectionStart プロパティまたは<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>または<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A>メソッド</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>。       範囲選択の開始位置は、カーソルが所属する軸の値として計算されます。 たとえば、主軸の x 軸にカーソルが属し、2000 年 1 月 1 日の値に SelectionStart プロパティを設定する場合、選択した領域の先頭が 2000 年 1 月 1 日にに沿って行わプライマリ X 軸です。       プログラムで削除するには、範囲の選択 設定、先頭と範囲の終点<xref:System.Double.NaN>を使用して、 <xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A>SelectionStart プロパティ、または使用すると、<xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A>メソッド</xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition%2A></xref:System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd%2A></xref:System.Double.NaN>。"
  syntax:
    content: public double SelectionStart { get; set; }
    return:
      type: System.Double
      description: "カーソルの選択範囲の開始位置。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  id: SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "指定した位置にカーソルを表示します。 ピクセル単位で測定されます。"
  syntax:
    content: public void SetCursorPixelPosition (System.Drawing.PointF point, bool roundToBoundary);
    parameters:
    - id: point
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>カーソルを描画するかを指定します。"
    - id: roundToBoundary
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、カーソルを描画するグラフ領域の最も近い境界に沿っての指定した位置に当てはまらない場合、 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;> </xref>オブジェクト。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  id: SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "指定した軸の値でグラフ領域内のカーソルの位置を設定します。"
  syntax:
    content: public void SetCursorPosition (double newPosition);
    parameters:
    - id: newPosition
      type: System.Double
      description: "カーソルの新しい位置。 関連する軸に沿った値として計測されます。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  id: SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "範囲選択の開始と終了位置を設定します。"
  syntax:
    content: public void SetSelectionPixelPosition (System.Drawing.PointF startPoint, System.Drawing.PointF endPoint, bool roundToBoundary);
    parameters:
    - id: startPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>範囲選択の開始位置を指定します。"
    - id: endPoint
      type: System.Drawing.PointF
      description: "A <xref href=&quot;System.Drawing.PointF&quot;> </xref>範囲選択範囲の終了位置を指定します。"
    - id: roundToBoundary
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、内で指定した位置が当てはまらない場合、始点と終点を最も近いグラフ領域の境界に丸められますが、 <xref href=&quot;System.Windows.Forms.DataVisualization.Charting.ChartArea&quot;> </xref>オブジェクト。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  id: SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  langs:
  - csharp
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
  type: Method
  assemblies:
  - System.Windows.Forms.DataVisualization
  namespace: System.Windows.Forms.DataVisualization.Charting
  summary: "指定した軸の値は、グラフ領域内の選択範囲の位置を設定します。"
  syntax:
    content: public void SetSelectionPosition (double newStart, double newEnd);
    parameters:
    - id: newStart
      type: System.Double
      description: "範囲選択の新しい開始位置。 関連する軸に沿った値として計測されます。"
    - id: newEnd
      type: System.Double
      description: "範囲選択の新しい終了位置。 関連する軸に沿った値として計測されます。"
  overload: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor()
  nameWithType: Cursor.Cursor()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Cursor()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.AxisType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: AxisType
  nameWithType: AxisType
  fullName: System.Windows.Forms.DataVisualization.Charting.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose()
  nameWithType: Cursor.Dispose()
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose()
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Cursor.Dispose(Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose(Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: DateTimeIntervalType
  nameWithType: DateTimeIntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.DateTimeIntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
  parent: System.Windows.Forms.DataVisualization.Charting
  isExternal: false
  name: ChartDashStyle
  nameWithType: ChartDashStyle
  fullName: System.Windows.Forms.DataVisualization.Charting.ChartDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition(PointF,Boolean)
  nameWithType: Cursor.SetCursorPixelPosition(PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition(PointF,Boolean)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition(Double)
  nameWithType: Cursor.SetCursorPosition(Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition(Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(System.Drawing.PointF,System.Drawing.PointF,System.Boolean)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition(PointF,PointF,Boolean)
  nameWithType: Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition(PointF,PointF,Boolean)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(System.Double,System.Double)
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition(Double,Double)
  nameWithType: Cursor.SetSelectionPosition(Double,Double)
  fullName: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition(Double,Double)
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.#ctor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Cursor
  nameWithType: Cursor.Cursor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AutoScroll*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AutoScroll
  nameWithType: Cursor.AutoScroll
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.AxisType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: AxisType
  nameWithType: Cursor.AxisType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Dispose*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Dispose
  nameWithType: Cursor.Dispose
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Interval*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Interval
  nameWithType: Cursor.Interval
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffset*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffset
  nameWithType: Cursor.IntervalOffset
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalOffsetType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalOffsetType
  nameWithType: Cursor.IntervalOffsetType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IntervalType*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IntervalType
  nameWithType: Cursor.IntervalType
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserEnabled
  nameWithType: Cursor.IsUserEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.IsUserSelectionEnabled*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: IsUserSelectionEnabled
  nameWithType: Cursor.IsUserSelectionEnabled
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineColor
  nameWithType: Cursor.LineColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineDashStyle*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineDashStyle
  nameWithType: Cursor.LineDashStyle
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.LineWidth*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: LineWidth
  nameWithType: Cursor.LineWidth
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.Position*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: Position
  nameWithType: Cursor.Position
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionColor*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionColor
  nameWithType: Cursor.SelectionColor
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionEnd*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionEnd
  nameWithType: Cursor.SelectionEnd
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SelectionStart*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SelectionStart
  nameWithType: Cursor.SelectionStart
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPixelPosition
  nameWithType: Cursor.SetCursorPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetCursorPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetCursorPosition
  nameWithType: Cursor.SetCursorPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPixelPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPixelPosition
  nameWithType: Cursor.SetSelectionPixelPosition
- uid: System.Windows.Forms.DataVisualization.Charting.Cursor.SetSelectionPosition*
  parent: System.Windows.Forms.DataVisualization.Charting.Cursor
  isExternal: false
  name: SetSelectionPosition
  nameWithType: Cursor.SetSelectionPosition
