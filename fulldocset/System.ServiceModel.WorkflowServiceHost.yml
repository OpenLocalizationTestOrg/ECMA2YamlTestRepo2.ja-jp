### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.WorkflowServiceHost
  id: WorkflowServiceHost
  children:
  - System.ServiceModel.WorkflowServiceHost.#ctor
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.WorkflowServiceHost.OnClosing
  langs:
  - csharp
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost
  fullName: System.ServiceModel.WorkflowServiceHost
  type: Class
  summary: "ワークフロー ベースのサービスのホストを提供します。"
  remarks: "使用されるホストを実装して、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]サービス モデルのモデルをプログラミングします。       構成およびサービスを公開する、いないインターネット インフォメーション サービス (IIS) または Windows アクティブ化サービス (WAS) を使用する場合は、クライアント アプリケーションによって使用するサービスとしてワークフローを公開するには、WorkflowServiceHost クラスを使用します。 IIS と WAS はどちらも、あなたに代わって WorkflowServiceHost オブジェクトと対話します。       WCF ワークフローを呼び出し元が使用するサービスとして公開するには完全なサービスの説明が必要です (によって表される、<xref:System.ServiceModel.Description.ServiceDescription>クラス).</xref:System.ServiceModel.Description.ServiceDescription> WorkflowServiceHost のクラスを作成、<xref:System.ServiceModel.Description.ServiceDescription>ワークフロー サービスの種類と構成情報からし、その説明を使用して作成<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>説明内の各エンドポイント用のオブジェクト</xref:System.ServiceModel.Dispatcher.ChannelDispatcher></xref:System.ServiceModel.Description.ServiceDescription>。       ワークフロー サービスのロード、エンドポイントの構成、セキュリティ設定を適用および受信要求を処理するためのリスナーを開始するには、WorkflowServiceHost オブジェクトを使用します。"
  syntax:
    content: >-
      [System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")]

      public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラスです。"
  syntax:
    content: protected WorkflowServiceHost ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義と指定されたサービスのベース アドレスを含んでいるバイト ストリームを使用します。"
  remarks: "ワークフロー定義がデータベースなどのセキュリティで保護されたストレージに格納されている場合は、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ワークフロー定義が含まれています。</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  id: '#ctor(System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義と指定されたサービスのベース アドレスへのパスを使用します。"
  remarks: "ワークフロー定義が windows ファイルの形式の場合は、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "ワークフロー定義ファイルへのパスを含む文字列です。"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー型と、指定されたサービスのベース アドレスを使用します。"
  remarks: "ワークフローがコンパイルされた型として定義されている場合は、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (Type workflowType, Uri[] baseAddress);
    parameters:
    - id: workflowType
      type: System.Type
      description: "<xref:System.Type>ワークフロー インスタンスの</xref:System.Type>。"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義を含んでいるバイト ストリーム、ワークフローを含んでいるバイト ストリームを使用してルールの定義、および指定されたサービスのベース アドレス。"
  remarks: "ワークフロー定義とルールの定義がデータベースなどのセキュリティで保護されたストレージに格納されている場合は、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ワークフロー定義が含まれています。</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ワークフロー ルール定義が含まれています。</xref:System.IO.Stream>"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  id: '#ctor(System.String,System.String,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義へのパス、ワークフロー ルールの定義と指定されたサービスのベース アドレスへのパスを使用します。"
  remarks: "ワークフロー定義とルールの定義は、windows ファイルの形式では、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "ワークフロー定義ファイルへのパスを含む文字列です。"
    - id: ruleDefinitionPath
      type: System.String
      description: "ワークフロー ルール定義ファイルへのパスを含む文字列です。"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義を含んでいるバイト ストリーム、ワークフローを含んでいるバイト ストリームを使用してルールの定義、カスタム アクティビティ型の型プロバイダーおよび指定されたサービスのベース アドレス。"
  remarks: "コンパイルされたワークフローは、別のアセンブリで定義されたカスタムの型を参照する場合は、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ワークフロー定義が含まれています。</xref:System.IO.Stream>"
    - id: ruleDefinition
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ワークフロー ルール定義が含まれています。</xref:System.IO.Stream>"
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "実装する型プロバイダー、 <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref>インターフェイスです。"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  id: '#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  type: Constructor
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref>クラス、ワークフロー定義へのパス、ワークフロー ルール定義、カスタム アクティビティ型の型プロバイダーと指定されたサービスのベース アドレスへのパスを使用します。"
  remarks: "ワークフロー マークアップ ファイル (.xoml) で定義されている、ワークフローがあり、別のアセンブリで定義されたカスタムの型を参照して、このオーバー ロードを使用します。"
  syntax:
    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);
    parameters:
    - id: workflowDefinitionPath
      type: System.String
      description: "ワークフロー定義ファイルへのパスを含む文字列です。"
    - id: ruleDefinitionPath
      type: System.String
      description: "ワークフロー ルール定義ファイルへのパスを含む文字列です。"
    - id: typeProvider
      type: System.Workflow.ComponentModel.Compiler.ITypeProvider
      description: "実装する型プロバイダー、 <xref href=&quot;System.Workflow.ComponentModel.Compiler.ITypeProvider&quot;> </xref>インターフェイスです。"
    - id: baseAddress
      type: System.Uri[]
      description: "型の配列<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.WorkflowServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、およびエンドポイント アドレスを使用して、ワークフロー サービスのサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>追加されたエンドポイントのコントラクトの</xref:System.Type>。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.String
      description: "追加されたエンドポイントのアドレス。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ワークフロー サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ワークフロー サービスを実装しません<code> implementedContract</code>です。"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、およびエンドポイント アドレスを格納する URI を使用して、ワークフロー サービスにサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>追加されたエンドポイントのコントラクトの</xref:System.Type>。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>追加されたエンドポイントのアドレスを格納している</xref:System.Uri>。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ワークフロー サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ワークフロー サービスを実装しません<code> implementedContract</code>です。"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、エンドポイント アドレス、およびサービスがリッスンする URI して、ワークフロー サービスにサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>追加されたエンドポイントのコントラクトの</xref:System.Type>。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.String
      description: "サービスのエンドポイント アドレス。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>上のサービス エンドポイントがリッスンできる</xref:System.Uri>。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ワークフロー サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>指定されていない<code> implementedContract</code>です。</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、エンドポイント アドレスを格納する URI をサービスがリッスンする URI と、ワークフロー サービスにサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.Type
      description: "<xref:System.Type>追加されたエンドポイントのコントラクトの</xref:System.Type>。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>追加されたエンドポイントのアドレスを格納している</xref:System.Uri>。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>上のサービス エンドポイントがリッスンできる</xref:System.Uri>。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ワークフロー サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>address</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.ServiceModel.ServiceContractAttribute>指定されていない<code> implementedContract</code>です。</xref:System.ServiceModel.ServiceContractAttribute>"
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "ワークフロー サービスの説明を作成します。"
  syntax:
    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "このメソッドが戻るとき、 &lt;xref:System.Collections.Generic.IDictionary%602&gt;オブジェクトには、キー付きコントラクト ホステッド サービスの実装されているが含まれています。"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "A <xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>ワークフロー サービスのです。"
  overload: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  id: OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  langs:
  - csharp
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
  type: Method
  assemblies:
  - System.WorkflowServices
  namespace: System.ServiceModel
  summary: "このメソッドは、前に呼び出されます、 <xref href=&quot;System.ServiceModel.WorkflowServiceHost&quot;> </xref> closing 状態に格納されます。"
  remarks: "<xref:System.ServiceModel.WorkflowServiceHost>呼び出し<xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A><xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>。</xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>を呼び出す前に</xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A></xref:System.ServiceModel.WorkflowServiceHost>既定の実装で これは、サービス ホストを閉じる前に、ワークフロー ランタイムがシャット ダウンを意味します。"
  syntax:
    content: protected override void OnClosing ();
    parameters: []
  overload: System.ServiceModel.WorkflowServiceHost.OnClosing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.ServiceModel.ServiceHostBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.WorkflowServiceHost.#ctor
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost()
  nameWithType: WorkflowServiceHost.WorkflowServiceHost()
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Uri[])
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,Uri[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Type,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(Stream,Stream,ITypeProvider,Uri[])
- uid: System.Workflow.ComponentModel.Compiler.ITypeProvider
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: ITypeProvider
  nameWithType: ITypeProvider
  fullName: System.Workflow.ComponentModel.Compiler.ITypeProvider
- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
  fullName: System.ServiceModel.WorkflowServiceHost.WorkflowServiceHost(String,String,ITypeProvider,Uri[])
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,String,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,String,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint(Type,Binding,Uri,Uri)
  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
  fullName: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(Type,Binding,Uri,Uri)
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing()
  nameWithType: WorkflowServiceHost.OnClosing()
  fullName: System.ServiceModel.WorkflowServiceHost.OnClosing()
- uid: System.ServiceModel.WorkflowServiceHost.#ctor*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: WorkflowServiceHost
  nameWithType: WorkflowServiceHost.WorkflowServiceHost
- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: WorkflowServiceHost.AddServiceEndpoint
- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: CreateDescription
  nameWithType: WorkflowServiceHost.CreateDescription
- uid: System.ServiceModel.WorkflowServiceHost.OnClosing*
  parent: System.ServiceModel.WorkflowServiceHost
  isExternal: false
  name: OnClosing
  nameWithType: WorkflowServiceHost.OnClosing
