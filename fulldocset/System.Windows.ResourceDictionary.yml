### YamlMime:ManagedReference
items:
- uid: System.Windows.ResourceDictionary
  id: ResourceDictionary
  children:
  - System.Windows.ResourceDictionary.#ctor
  - System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  - System.Windows.ResourceDictionary.BeginInit
  - System.Windows.ResourceDictionary.Clear
  - System.Windows.ResourceDictionary.Contains(System.Object)
  - System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  - System.Windows.ResourceDictionary.Count
  - System.Windows.ResourceDictionary.DeferrableContent
  - System.Windows.ResourceDictionary.EndInit
  - System.Windows.ResourceDictionary.FindName(System.String)
  - System.Windows.ResourceDictionary.GetEnumerator
  - System.Windows.ResourceDictionary.IsFixedSize
  - System.Windows.ResourceDictionary.IsReadOnly
  - System.Windows.ResourceDictionary.Item(System.Object)
  - System.Windows.ResourceDictionary.Keys
  - System.Windows.ResourceDictionary.MergedDictionaries
  - System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  - System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  - System.Windows.ResourceDictionary.Remove(System.Object)
  - System.Windows.ResourceDictionary.Source
  - System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  - System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  - System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  - System.Windows.ResourceDictionary.UnregisterName(System.String)
  - System.Windows.ResourceDictionary.Values
  langs:
  - csharp
  name: ResourceDictionary
  nameWithType: ResourceDictionary
  fullName: System.Windows.ResourceDictionary
  type: Class
  summary: "ハッシュ テーブルは、ディクショナリの実装を含む/[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]コンポーネントおよびその他の要素によって使用されているリソース、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]アプリケーションです。"
  remarks: "アプリケーション コードが読み込まれるときに、ResourceDictionary 内の項目がすぐに処理されません、[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]ローダー。 オブジェクトとして、ResourceDictionary が引き続き発生して、個々 の値が要求された場合にのみ処理されます。       <xref:System.Collections.DictionaryBase>。</xref:System.Collections.DictionaryBase>から ResourceDictionary クラスを派生していません。 ResourceDictionary クラスを実装する代わりに、<xref:System.Collections.IDictionary>に依存していますが、<xref:System.Collections.Hashtable>内部的にします</xref:System.Collections.Hashtable></xref:System.Collections.IDictionary>。       [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)]、ResourceDictionary クラスは、暗黙的なコレクションは要素をいくつかのオブジェクト要素の値では通常`Resources`プロパティ、プロパティ要素構文で指定されるとします。 詳細については、暗黙の型のコレクションで[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]を参照してください[XAML 構文の詳細](~/add/includes/ajax-current-ext-md.md)です。 例外は、マージされたディクショナリを指定する場合詳細については、「[リソース ディクショナリのトピックとマージ](~/add/includes/ajax-current-ext-md.md)です。       考えられる別[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]使用状況、リソース ディクショナリが個別としてを宣言する[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]ファイル、およびどちらかで実行時に読み込む<xref:System.Windows.Markup.XamlReader.Load%2A>(完全に信頼された) プロジェクトにリソースまたは厳密でないファイルとして含める、または</xref:System.Windows.Markup.XamlReader.Load%2A>。 この例では、ResourceDictionary として宣言できますオブジェクト要素のルート要素として機能している、[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。 適切な XML 名前空間の値をマップする必要があります (の既定値、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]名前空間と通常`x:`の[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]名前空間) にルート要素として使用する場合は、ResourceDictionary 要素。 値を持つ各リソースを定義する子要素を追加することができます。      <a name=&quot;xamlImplicitCollectionUsage_ResourceDictionary&quot;></a>## XAML 暗黙的コレクションの使用```   <object>     <object.resourcesProperty>       oneOrMoreResources     </object.resourcesProperty>   </object>   ``` <a name=&quot;xamlValues_ResourceDictionary&quot;> </a> ## XAML 値*resourcesProperty* ResourceDictionary をそのプロパティの値の型がここでは、プロパティ要素を指定するプロパティです。       通常、これは、`Resources`のプロパティ<xref:System.Windows.FrameworkElement>または<xref:System.Windows.FrameworkContentElement>、またはの<xref:System.Windows.Application>アプリケーション リソース場合</xref:System.Windows.Application></xref:System.Windows.FrameworkContentElement></xref:System.Windows.FrameworkElement>。       *oneOrMoreResources*オブジェクト要素として指定された&1; つまたは複数のリソース。 各リソースを指定する必要があります、 [X:key ディレクティブ](~/add/includes/ajax-current-ext-md.md)割り当てられます。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)]

      [System.Windows.Markup.Ambient]

      [System.Windows.Markup.UsableDuringInitialization(true)]

      public class ResourceDictionary : System.Collections.IDictionary, System.ComponentModel.ISupportInitialize, System.Windows.Markup.INameScope, System.Windows.Markup.IUriContext
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.INameScope
  - System.Windows.Markup.IUriContext
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.#ctor
  id: '#ctor'
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>クラスです。"
  syntax:
    content: public ResourceDictionary ();
    parameters: []
  overload: System.Windows.ResourceDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "キーでこのリソースを追加します。 <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  remarks: "重複するキーを追加しようと、例外が発生します。       キーは常に、基本ディクショナリに追加します。 キーを<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>現在内<xref:System.Windows.ResourceDictionary>に対してはチェックされませんの重複、重複部分の基本ディクショナリのみがチェックされます</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "追加するキーの名前。"
    - id: value
      type: System.Object
      description: "追加するリソースの値。"
  overload: System.Windows.ResourceDictionary.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>ロックされているか読み取り専用です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "同じキーを持つ要素は既に、 <xref href=&quot;System.Collections.Hashtable&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.BeginInit
  id: BeginInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "この初期化フェーズを開始<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  remarks: "このメソッドの呼び出しを示す値の内容、<xref:System.Windows.ResourceDictionary>が読み込まれます</xref:System.Windows.ResourceDictionary>。 プロセスの次の手順が<xref:System.Windows.ResourceDictionary.EndInit%2A>。</xref:System.Windows.ResourceDictionary.EndInit%2A>を呼び出すには       呼び出すことはありません BeginInit も複数回<xref:System.Windows.ResourceDictionary.EndInit%2A>。</xref:System.Windows.ResourceDictionary.EndInit%2A>を呼び出す前に そうと、例外が発生します。"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前に BeginInit を複数回呼び出す<xref:System.Windows.ResourceDictionary.EndInit*>が呼び出されました</xref:System.Windows.ResourceDictionary.EndInit*>。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Clear
  id: Clear
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "すべてのキー (と値) をベースに消去<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。 これはクリアされません、ディクショナリの項目をマージします。"
  remarks: "マージされたディクショナリの項目をクリアする必要がある場合から特定の辞書を取得<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>コレクションと具体的には呼び出しをオフに<xref:System.Windows.ResourceDictionary>、通常、辞書がリモートにあると、アクセスがない</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。 または、全体を削除<xref:System.Windows.ResourceDictionary>から<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>ジェネリック コレクションを呼び出して</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.ResourceDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "決定するかどうか、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>指定のキーを持つ要素が含まれています。"
  remarks: "要求されたキーがこのリソース ディクショナリ内にしない場合は、リソースの検索ロジックは、マージされたディクショナリも確認します。"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "内で検索するキー、 <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref> 、指定したキー/値ペアを含むキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  id: CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コピー、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>要素を&1; 次元<xref:System.Collections.DictionaryEntry>指定したインデックス位置</xref:System.Collections.DictionaryEntry>。"
  remarks: "これにより、基本ディクショナリだけがコピーされます。 結果の配列を持たない<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>それが再構成する場合、<xref:System.Windows.ResourceDictionary>再度</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。"
  syntax:
    content: public void CopyTo (System.Collections.DictionaryEntry[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Collections.DictionaryEntry[]
      description: "コピー先である&1; 次元の配列、<xref:System.Collections.DictionaryEntry>からコピーされるオブジェクト、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>インスタンス</xref:System.Collections.DictionaryEntry>。 配列は、0 から始まるインデックスが必要です。"
    - id: arrayIndex
      type: System.Int32
      description: "0 から始まるインデックス`array`コピー開始位置。"
  overload: System.Windows.ResourceDictionary.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Count
  id: Count
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "ベース内のエントリの数を取得<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "現在の基本ディクショナリ内のエントリの数。"
  overload: System.Windows.ResourceDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.DeferrableContent
  id: DeferrableContent
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得またはこのリソース ディクショナリの遅延コンテンツを設定します。"
  syntax:
    content: public System.Windows.DeferrableContent DeferrableContent { get; set; }
    return:
      type: System.Windows.DeferrableContent
      description: "常に返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.DeferrableContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.EndInit
  id: EndInit
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "初期化フェーズを終了し、初期化フェーズ中にキーに加えられたすべての変更を考慮するように、前のツリーを無効にします。"
  remarks: "<xref:System.Windows.ResourceDictionary.BeginInit%2A>EndInit トランザクション モデルに従います。</xref:System.Windows.ResourceDictionary.BeginInit%2A> <xref:System.Windows.ResourceDictionary.BeginInit%2A>初期化されていないディクショナリと EndInit マークに初期化のマークを付けます。</xref:System.Windows.ResourceDictionary.BeginInit%2A>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.ResourceDictionary.EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  id: FindName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このディクショナリの実装ではサポートされていません。"
  remarks: "<xref:System.Windows.ResourceDictionary>クラスは、名前で登録をサポートしていません</xref:System.Windows.ResourceDictionary>。 代わりにキーを使用します。"
  syntax:
    content: public object FindName (string name);
    parameters:
    - id: name
      type: System.String
      description: "要求されたオブジェクトの名前の識別子。"
    return:
      type: System.Object
      description: "常に返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.FindName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "返します、<xref:System.Collections.IDictionaryEnumerator>反復処理に使用できる、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref></xref:System.Collections.IDictionaryEnumerator> 。"
  remarks: "反復子は基本ディクショナリのみです。"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "特殊な列挙子、 <xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得するかどうかこの<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>固定サイズです。"
  remarks: "既定の実装を返します、<xref:System.Collections.Hashtable>既定値、つまり`false`</xref:System.Collections.Hashtable>。"
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハッシュ テーブルが固定サイズの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得するかどうかこの<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>は読み取り専用です。"
  remarks: "このプロパティを返します、<xref:System.Collections.Hashtable>既定値、つまり`false`</xref:System.Collections.Hashtable>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハッシュ テーブルが読み取り専用の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または指定したキーに関連付けられている値を設定します。"
  remarks: "要求されたキーがこのリソース ディクショナリ内にしない場合は、フレームワーク リソース システムは、マージされたディクショナリも確認します。       チェック、<xref:System.Windows.ResourceDictionary>項目またはインデックスでは通常、リソースを取得することをお勧めします</xref:System.Windows.ResourceDictionary>。 代わりに、完全なリソースのルックアップ プロセスに参加しているは、そのキーを使用してリソースを検索し、アプリケーションまたはテーマでのリソースを検索するメソッドを呼び出す必要があります。 <xref:System.Windows.FrameworkElement.FindResource%2A>これらのメソッドであり、 <xref:System.Windows.FrameworkElement>。</xref:System.Windows.FrameworkElement>上に存在</xref:System.Windows.FrameworkElement.FindResource%2A> それ以外の場合、リソースを検索しようとするでは、true の実行時の動作が一致しません。       ただし、個々 の辞書から直接リソースを取得する場合があります既知からリソースを取得している場合に適しています<xref:System.Windows.ResourceDictionary>、場所、可能なキーの検索を実行時のパフォーマンスとスコープによる影響を回避するために実行します</xref:System.Windows.ResourceDictionary>。       コレクション メンバーを定義するインデクサーを使用しない[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。 代わりに、要素を作成する子のマークアップ。 いずれかの子要素の子要素が<xref:System.Windows.ResourceDictionary>、またはプロパティの型がここでは、プロパティ要素の`ResourceDictionary`</xref:System.Windows.ResourceDictionary>。 詳細については、次を参照してください、 [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] <xref:System.Windows.ResourceDictionary>。</xref:System.Windows.ResourceDictionary>の使用方法に関するセクション。      <a name=&quot;xamlTextUsage_Item&quot;></a>## XAML テキストの使用方法は、「解説」を参照してください。"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "任意のキーを取得または設定します。"
    return:
      type: System.Object
      description: "キーの値です。"
  overload: System.Windows.ResourceDictionary.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Keys
  id: Keys
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "これに含まれるすべてのキーのコレクションを取得<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  remarks: "必要としているために、このプロパティが存在する<xref:System.Collections.IDictionary>、キー、通常はほとんどに便利ですが、<xref:System.Windows.ResourceDictionary>シナリオ</xref:System.Windows.ResourceDictionary></xref:System.Collections.IDictionary>。       返されるキー <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>内のキーを含めないでください。 また、キーのコレクションは、基本ディクショナリ内のキーのスナップショットです。 変更した場合、その後この<xref:System.Windows.ResourceDictionary>、ストアド キーでは、変更は反映されません</xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "すべてのキーのコレクション。"
  overload: System.Windows.ResourceDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  id: MergedDictionaries
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コレクションを取得、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>をマージされたディクショナリ内のさまざまなリソース ディクショナリを構成します。"
  remarks: "ディクショナリは追加することによって、 <xref:System.Windows.ResourceDictionary>MergedDictionaries によって参照されるジェネリック コレクションを</xref:System.Windows.ResourceDictionary>。 マージ<xref:System.Windows.ResourceDictionary>マークアップ内に定義されているリソース要素がありません</xref:System.Windows.ResourceDictionary>。 代わりに、マージされたディクショナリは、<xref:System.Windows.ResourceDictionary>が定義されている (またはコードによって追加された要素のない)、マークアップの子要素で、 [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] <xref:System.Windows.ResourceDictionary.Source%2A></xref:System.Windows.ResourceDictionary.Source%2A>指定</xref:System.Windows.ResourceDictionary>。 <xref:System.Windows.ResourceDictionary.Source%2A>指定により、アプリケーションに付属している別のリソース アセンブリなどの外部ソースから入手するマージされたディクショナリ&quot;loose [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]&quot;、または特定のローカライズまたはグローバル リソースのアセンブリ</xref:System.Windows.ResourceDictionary.Source%2A>。       内のリソース要素を指定する、<xref:System.Windows.ResourceDictionary>を持つ<xref:System.Windows.ResourceDictionary.Source%2A>指定はサポートされていません</xref:System.Windows.ResourceDictionary.Source%2A></xref:System.Windows.ResourceDictionary>。       最後に追加した MergedDictionaries コレクション内の検索の動作は検索<xref:System.Windows.ResourceDictionary>最初、および要求されたキーが見つかるとすぐに、検索は停止します</xref:System.Windows.ResourceDictionary>。 マージされたディクショナリのコレクション全体にわたって重複するキーが無効ではありません。 マージされたディクショナリ動作の詳細については、次を参照してください。[マージされたリソース ディクショナリ](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;xamlPropertyElementUsage_MergedDictionaries&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.MergedDictionaries>       oneOrMoreResourceDictionaries     </object.MergedDictionaries>   </object>      ``` <a name=&quot;xamlValues_MergedDictionaries&quot;> </a> ## XAML 値*oneOrMoreResourceDictionaries*&1; つまたは複数<xref:System.Windows.ResourceDictionary>object 要素</xref:System.Windows.ResourceDictionary>。       A<xref:System.Windows.ResourceDictionary>使用 MergedDictionaries コレクションのコンテンツを持たないし、を指定します、 <xref:System.Windows.ResourceDictionary.Source%2A>、完全な参照属性<xref:System.Windows.ResourceDictionary>リモート</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary.Source%2A></xref:System.Windows.ResourceDictionary>。"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_1_1.xaml)]"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary> MergedDictionaries { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
      description: "マージされたディクショナリのコレクションです。"
  overload: System.Windows.ResourceDictionary.MergedDictionaries*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  id: OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "発生したときに、 <xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>リソースに対する要求を受信します。"
  syntax:
    content: protected virtual void OnGettingValue (object key, ref object value, out bool canCache);
    parameters:
    - id: key
      type: System.Object
      description: "取得するリソースのキー。"
    - id: value
      type: System.Object
      description: "要求されたリソースの値です。"
    - id: canCache
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リソースを保存し、後で使用される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.OnGettingValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  id: RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このディクショナリの実装ではサポートされていません。"
  remarks: "<xref:System.Windows.ResourceDictionary>クラスは、名前で登録をサポートしていません</xref:System.Windows.ResourceDictionary>。 代わりにキーを使用します。 XAML 名前スコープのメソッドで動作していないバージョンとして実装<xref:System.Windows.ResourceDictionary>リソースに適用されない名前その XAML を明確になるためです</xref:System.Windows.ResourceDictionary>。       このメソッドは、通話、<xref:System.NotSupportedException>がスローされます</xref:System.NotSupportedException>。"
  syntax:
    content: public void RegisterName (string name, object scopedElement);
    parameters:
    - id: name
      type: System.String
      description: "「解説」を参照してください。"
    - id: scopedElement
      type: System.Object
      description: "「解説」を参照してください。"
  overload: System.Windows.ResourceDictionary.RegisterName*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このメソッドが呼び出されたときのすべての場合。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "基本ディクショナリから指定したキーを持つエントリを削除します。"
  remarks: "場合、<xref:System.Windows.ResourceDictionary>指定のキーを持つ要素が含まれていない、<xref:System.Windows.ResourceDictionary>は変更されません</xref:System.Windows.ResourceDictionary></xref:System.Windows.ResourceDictionary>。 例外は発生しません。       このメソッドが<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>からキーを削除できません。 固有の仕様を取得する必要があります<xref:System.Windows.ResourceDictionary>キーもの削除するコレクションからがいるできない可能性がありますので、このような辞書をリモートでアクセスしている通常</xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "削除するエントリのキー。"
  overload: System.Windows.ResourceDictionary.Remove*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.ResourceDictionary&quot;> </xref>ロックされているか読み取り専用です。"
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Source
  id: Source
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定、[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]からリソースを読み込みます。"
  remarks: "通常、ソースは、コンパイルされないリソースとして含まれているリソース ディクショナリの場所を参照するパック URI として指定またはコンテンツ アクション プロジェクトでビルドしたアプリケーション構築します。 パック URI の形式に関する詳細については、「 [WPF のパック Uri](~/add/includes/ajax-current-ext-md.md)です。       一般に、基になるプロパティの設定の場合のみ、<xref:System.Windows.ResourceDictionary>に指定されている、<xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>プロパティ (いずれかのプロパティ要素として[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]、または、<xref:System.Windows.ResourceDictionary>コード内のコレクションの項目).</xref:System.Windows.ResourceDictionary> </xref:System.Windows.ResourceDictionary.MergedDictionaries%2A> </xref:System.Windows.ResourceDictionary> このコンテキストでソースの値の設定がマージされます辞書の内容を指定されたで見つかった[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]現在<xref:System.Windows.ResourceDictionary>.</xref:System.Windows.ResourceDictionary> 読み込みエラーがスローされる例外となります。"
  example:
  - "The following example specifies two <xref:System.Windows.ResourceDictionary> elements to be merged into the primary <xref:System.Windows.ResourceDictionary>.  \n  \n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]\n [!code-xml[ResourceMerge#MergedXAML](~/add/codesnippet/xaml/p-system.windows.resourc_0_1.xaml)]"
  syntax:
    content: public Uri Source { get; set; }
    return:
      type: System.Uri
      description: "外部リソース ディクショナリのソースの場所。"
  overload: System.Windows.ResourceDictionary.Source*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.ResourceDictionary>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: void ICollection.CopyTo (Array array, int arrayIndex);
    parameters:
    - id: array
      type: System.Array
      description: "0 から始まる<xref:System.Array>からコピーされた項目を受け取る、 <xref href=&quot;System.Windows.Markup.Localizer.BamlLocalizationDictionary&quot;> </xref></xref:System.Array> 。"
    - id: arrayIndex
      type: System.Int32
      description: "指定した最初の位置<xref:System.Array>内容のコピーを受信する</xref:System.Array>。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.ResourceDictionary>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセスを<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>が同期 (スレッド セーフな) です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.ResourceDictionary>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用できるオブジェクト<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  overload: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.ResourceDictionary>インスタンスにキャスト、<xref:System.Collections.IEnumerable>インターフェイス</xref:System.Collections.IEnumerable></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>コレクションを反復処理するために使用できるオブジェクト</xref:System.Collections.IEnumerator>。"
  overload: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  id: System#Windows#Markup#IUriContext#BaseUri
  isEii: true
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Windows.Markup.IUriContext.BaseUri%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.ResourceDictionary>インスタンスにキャスト、<xref:System.Windows.Markup.IUriContext>インターフェイス</xref:System.Windows.Markup.IUriContext></xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }
    return:
      type: System.Uri
      description: "基本[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]現在のコンテキスト。"
  overload: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  id: UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "このディクショナリの実装ではサポートされていません。"
  remarks: "<xref:System.Windows.ResourceDictionary>クラスは、名前で登録をサポートしていません</xref:System.Windows.ResourceDictionary>。 代わりにキーを使用します。 このメソッドを呼び出すと、何も行われません。"
  syntax:
    content: public void UnregisterName (string name);
    parameters:
    - id: name
      type: System.String
      description: "「解説」を参照してください。"
  overload: System.Windows.ResourceDictionary.UnregisterName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ResourceDictionary.Values
  id: Values
  parent: System.Windows.ResourceDictionary
  langs:
  - csharp
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "これに含まれるキーに関連付けられているすべての値のコレクションを取得<xref href=&quot;System.Windows.ResourceDictionary&quot;></xref>です。"
  remarks: "必要としているために、このプロパティが存在する<xref:System.Collections.IDictionary>、通常はほとんど役に立ちませんが、<xref:System.Windows.ResourceDictionary>シナリオ</xref:System.Windows.ResourceDictionary></xref:System.Collections.IDictionary>。       返される値は、 <xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>。</xref:System.Windows.ResourceDictionary.MergedDictionaries%2A>内の値を含めないでください。 また、コレクションは、基本ディクショナリ内の値のスナップショットです。 変更した場合、その後この<xref:System.Windows.ResourceDictionary>、格納された値では、変更は反映されません</xref:System.Windows.ResourceDictionary>。"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "すべての値のコレクションです。"
  overload: System.Windows.ResourceDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.ResourceDictionary.#ctor
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary()
  nameWithType: ResourceDictionary.ResourceDictionary()
  fullName: System.Windows.ResourceDictionary.ResourceDictionary()
- uid: System.Windows.ResourceDictionary.Add(System.Object,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: ResourceDictionary.Add(Object,Object)
  fullName: System.Windows.ResourceDictionary.Add(Object,Object)
- uid: System.Windows.ResourceDictionary.BeginInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit()
  nameWithType: ResourceDictionary.BeginInit()
  fullName: System.Windows.ResourceDictionary.BeginInit()
- uid: System.Windows.ResourceDictionary.Clear
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear()
  nameWithType: ResourceDictionary.Clear()
  fullName: System.Windows.ResourceDictionary.Clear()
- uid: System.Windows.ResourceDictionary.Contains(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: ResourceDictionary.Contains(Object)
  fullName: System.Windows.ResourceDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ResourceDictionary.CopyTo(System.Collections.DictionaryEntry[],System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo(DictionaryEntry[],Int32)
  nameWithType: ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
  fullName: System.Windows.ResourceDictionary.CopyTo(DictionaryEntry[],Int32)
- uid: System.Collections.DictionaryEntry[]
  parent: System.Collections
  isExternal: true
  name: DictionaryEntry
  nameWithType: DictionaryEntry
  fullName: System.Collections.DictionaryEntry[]
  spec.csharp:
  - uid: System.Collections.DictionaryEntry
    name: DictionaryEntry
    nameWithType: DictionaryEntry
    fullName: DictionaryEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ResourceDictionary.Count
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
  fullName: System.Windows.ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
  fullName: System.Windows.ResourceDictionary.DeferrableContent
- uid: System.Windows.DeferrableContent
  parent: System.Windows
  isExternal: false
  name: DeferrableContent
  nameWithType: DeferrableContent
  fullName: System.Windows.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit()
  nameWithType: ResourceDictionary.EndInit()
  fullName: System.Windows.ResourceDictionary.EndInit()
- uid: System.Windows.ResourceDictionary.FindName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName(String)
  nameWithType: ResourceDictionary.FindName(String)
  fullName: System.Windows.ResourceDictionary.FindName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ResourceDictionary.GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResourceDictionary.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
  fullName: System.Windows.ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
  fullName: System.Windows.ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: ResourceDictionary.Item(Object)
  fullName: System.Windows.ResourceDictionary.Item(Object)
- uid: System.Windows.ResourceDictionary.Keys
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
  fullName: System.Windows.ResourceDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Windows.ResourceDictionary.MergedDictionaries
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
  fullName: System.Windows.ResourceDictionary.MergedDictionaries
- uid: System.Collections.ObjectModel.Collection{System.Windows.ResourceDictionary}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ResourceDictionary>
  nameWithType: Collection<ResourceDictionary>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.ResourceDictionary>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.ResourceDictionary>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.ResourceDictionary
    name: ResourceDictionary
    nameWithType: ResourceDictionary
    fullName: ResourceDictionary
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ResourceDictionary.OnGettingValue(System.Object,System.Object@,System.Boolean@)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue(Object,Object,Boolean)
  nameWithType: ResourceDictionary.OnGettingValue(Object,Object,Boolean)
  fullName: System.Windows.ResourceDictionary.OnGettingValue(Object,Object,Boolean)
- uid: System.Windows.ResourceDictionary.RegisterName(System.String,System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName(String,Object)
  nameWithType: ResourceDictionary.RegisterName(String,Object)
  fullName: System.Windows.ResourceDictionary.RegisterName(String,Object)
- uid: System.Windows.ResourceDictionary.Remove(System.Object)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: ResourceDictionary.Remove(Object)
  fullName: System.Windows.ResourceDictionary.Remove(Object)
- uid: System.Windows.ResourceDictionary.Source
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
  fullName: System.Windows.ResourceDictionary.Source
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.ResourceDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
  fullName: System.Windows.ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName(System.String)
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName(String)
  nameWithType: ResourceDictionary.UnregisterName(String)
  fullName: System.Windows.ResourceDictionary.UnregisterName(String)
- uid: System.Windows.ResourceDictionary.Values
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
  fullName: System.Windows.ResourceDictionary.Values
- uid: System.Windows.ResourceDictionary.#ctor*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: ResourceDictionary
  nameWithType: ResourceDictionary.ResourceDictionary
- uid: System.Windows.ResourceDictionary.Add*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Add
  nameWithType: ResourceDictionary.Add
- uid: System.Windows.ResourceDictionary.BeginInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: BeginInit
  nameWithType: ResourceDictionary.BeginInit
- uid: System.Windows.ResourceDictionary.Clear*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Clear
  nameWithType: ResourceDictionary.Clear
- uid: System.Windows.ResourceDictionary.Contains*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Contains
  nameWithType: ResourceDictionary.Contains
- uid: System.Windows.ResourceDictionary.CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: CopyTo
  nameWithType: ResourceDictionary.CopyTo
- uid: System.Windows.ResourceDictionary.Count*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Count
  nameWithType: ResourceDictionary.Count
- uid: System.Windows.ResourceDictionary.DeferrableContent*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: DeferrableContent
  nameWithType: ResourceDictionary.DeferrableContent
- uid: System.Windows.ResourceDictionary.EndInit*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: EndInit
  nameWithType: ResourceDictionary.EndInit
- uid: System.Windows.ResourceDictionary.FindName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: FindName
  nameWithType: ResourceDictionary.FindName
- uid: System.Windows.ResourceDictionary.GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: ResourceDictionary.GetEnumerator
- uid: System.Windows.ResourceDictionary.IsFixedSize*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: ResourceDictionary.IsFixedSize
- uid: System.Windows.ResourceDictionary.IsReadOnly*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: ResourceDictionary.IsReadOnly
- uid: System.Windows.ResourceDictionary.Item*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Item
  nameWithType: ResourceDictionary.Item
- uid: System.Windows.ResourceDictionary.Keys*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Keys
  nameWithType: ResourceDictionary.Keys
- uid: System.Windows.ResourceDictionary.MergedDictionaries*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: MergedDictionaries
  nameWithType: ResourceDictionary.MergedDictionaries
- uid: System.Windows.ResourceDictionary.OnGettingValue*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: OnGettingValue
  nameWithType: ResourceDictionary.OnGettingValue
- uid: System.Windows.ResourceDictionary.RegisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: RegisterName
  nameWithType: ResourceDictionary.RegisterName
- uid: System.Windows.ResourceDictionary.Remove*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Remove
  nameWithType: ResourceDictionary.Remove
- uid: System.Windows.ResourceDictionary.Source*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Source
  nameWithType: ResourceDictionary.Source
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#CopyTo*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ResourceDictionary.System.Collections.ICollection.CopyTo
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ResourceDictionary.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.ResourceDictionary.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ResourceDictionary.System.Collections.ICollection.SyncRoot
- uid: System.Windows.ResourceDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResourceDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.ResourceDictionary.System#Windows#Markup#IUriContext#BaseUri*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: System.Windows.Markup.IUriContext.BaseUri
  nameWithType: ResourceDictionary.System.Windows.Markup.IUriContext.BaseUri
- uid: System.Windows.ResourceDictionary.UnregisterName*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: UnregisterName
  nameWithType: ResourceDictionary.UnregisterName
- uid: System.Windows.ResourceDictionary.Values*
  parent: System.Windows.ResourceDictionary
  isExternal: false
  name: Values
  nameWithType: ResourceDictionary.Values
