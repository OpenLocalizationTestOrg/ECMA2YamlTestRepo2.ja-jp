### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonField
  id: ButtonField
  children:
  - System.Web.UI.WebControls.ButtonField.#ctor
  - System.Web.UI.WebControls.ButtonField.CommandName
  - System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.ButtonField.CreateField
  - System.Web.UI.WebControls.ButtonField.DataTextField
  - System.Web.UI.WebControls.ButtonField.DataTextFormatString
  - System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonField.ImageUrl
  - System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.ButtonField.Text
  - System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  langs:
  - csharp
  name: ButtonField
  nameWithType: ButtonField
  fullName: System.Web.UI.WebControls.ButtonField
  type: Class
  summary: "データ バインド コントロールのボタンとして表示されるフィールドを表します。"
  remarks: "ButtonField クラスは、データ バインドされたコントロールによって使用 (など<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>) 表示されている各レコードのボタンを表示する</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 ButtonField オブジェクトが異なる方法では使用されているデータ バインドされたコントロールによって表示されます。 たとえば、<xref:System.Web.UI.WebControls.GridView>コントロールは、列として ButtonField オブジェクトを表示中に、<xref:System.Web.UI.WebControls.DetailsView>コントロールは行として表示します</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       ボタン フィールドのボタンをクリックするには、親データ バインド コントロールのコマンド イベントを発生させます。 Command イベントのイベント ハンドラーを指定してコマンド ボタンがクリックされたときに実行するカスタム ルーチンを提供できます。      > [!NOTE] >、<xref:System.Web.UI.WebControls.GridView>昇給を制御、<xref:System.Web.UI.WebControls.GridView.RowCommand>イベント中に、<xref:System.Web.UI.WebControls.DetailsView>昇給を制御、<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>イベント</xref:System.Web.UI.WebControls.DetailsView.ItemCommand></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView.RowCommand></xref:System.Web.UI.WebControls.GridView>。       コマンド イベントを発生させるためのレコードのインデックスを確認するには<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>データ バインド コントロールの command イベントに渡されるイベント引数のプロパティ</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>。 ButtonField クラスを自動的に入力、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>適切なインデックス値を持つプロパティです</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>。       表示するボタンの種類を指定するには、使用、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>プロパティ</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>。 使用して、リンクまたはコマンド ボタンを表示するときに、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティをボタンに表示するキャプションを指定する</xref:System.Web.UI.WebControls.ButtonField.Text%2A>。      > [!NOTE] > 設定した場合、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティ、同じキャプション ButtonField 共有内のすべてのボタン</xref:System.Web.UI.WebControls.ButtonField.Text%2A>。       また、データ ソースのフィールドに ButtonField オブジェクトをバインドできます。 これにより、ButtonField オブジェクト内のボタンの異なるキャプションを表示できます。 指定したフィールドに含まれる値は、ボタンのテキスト キャプションに使用されます。 設定、 <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>ButtonField オブジェクトをデータ ソースのフィールドにバインドするプロパティ</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>。       イメージ ボタンを表示するときに使用して、 <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>ButtonField オブジェクト内のボタンを表示するイメージを指定するプロパティ</xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>。      > [!NOTE] > ButtonField オブジェクト内のすべてのボタンは、同じイメージを共有します。       データ バインド コントロール内の ButtonField オブジェクトを非表示を設定してできます、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>プロパティを`false`</xref:System.Web.UI.WebControls.DataControlField.Visible%2A>。       ButtonField オブジェクトでは、そのヘッダー セクションとフッター セクションをカスタマイズすることができます。 ヘッダーまたはフッター セクションで、キャプションを表示するには、設定、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>または<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A></xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>。 設定して、イメージを表示するテキストを表示する、ヘッダー セクションに、代わりに、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>プロパティ</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>。 ButtonField オブジェクトのヘッダー セクションを非表示にするには設定、<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>プロパティを`false`</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>。      > [!NOTE] > いくつかのデータ バインド コントロール (など、<xref:System.Web.UI.WebControls.GridView>コントロール) を表示またはコントロールのすべてのヘッダー セクションだけを非表示にできます</xref:System.Web.UI.WebControls.GridView>。 これらのデータ バインド コントロールをサポートしていない、<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>個々 のボタン フィールドのプロパティ</xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>。 表示または (使用可能な場合) は、ヘッダー セクション全体のデータ バインド コントロールを非表示を使用して、`ShowHeader`コントロールのプロパティです。       また、フィールドのさまざまな部分のスタイル プロパティを設定して ButtonField オブジェクト (フォントの色、背景色、およびなど) の外観をカスタマイズすることができますも。 次の表は、異なるスタイル プロパティを一覧表示します。      |スタイル プロパティ |スタイルの設定 |  |--------------------|----------------------------|  |<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|ButtonField の子の Web サーバー コントロールです |。  |<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|ButtonField のフッター セクションです |。  |<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|ButtonField のヘッダー セクションです |。  |<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|データ項目の ButtonField |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A> 。"
  example:
  - "The following code example demonstrates how to use a ButtonField object to display a column of command buttons in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_176_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_176_1.aspx)]"
  syntax:
    content: 'public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  - System.Web.UI.WebControls.ButtonFieldBase
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.ButtonFieldBase.ButtonType
  - System.Web.UI.WebControls.ButtonFieldBase.CausesValidation
  - System.Web.UI.WebControls.ButtonFieldBase.ShowHeader
  - System.Web.UI.WebControls.ButtonFieldBase.ValidationGroup
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ValidateRequestMode
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.ButtonField>クラス</xref:System.Web.UI.WebControls.ButtonField>の新しいインスタンスを初期化するために ButtonField コンス トラクターを使用します。 このコンス トラクターは、フィールドを動的に作成されたデータ バインド コントロールに追加する際に通常使用されます。       追加する、<xref:System.Web.UI.WebControls.ButtonField>データ バインド コントロールを動的にオブジェクトを新規作成<xref:System.Web.UI.WebControls.ButtonField>オブジェクト、そのプロパティを設定し、データ バインド コントロールのフィールド コレクションに追加します</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField>。 たとえば、使用している場合、<xref:System.Web.UI.WebControls.GridView>コントロールを追加、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトを<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクションです</xref:System.Web.UI.WebControls.GridView.Columns%2A></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.GridView>。      > [!NOTE] > 追加できますが、フィールドに動的にデータ バインド コントロールにフィールド、静的に宣言されていると、表示するか非表示にします。 すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが縮小します。"
  example:
  - "The following code example demonstrates how to use the M:System.Web.UI.WebControls.ButtonField.#ctor constructor to add a <xref:System.Web.UI.WebControls.ButtonField> object dynamically to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[ButtonFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public ButtonField ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定時のボタンを実行するアクションを表す文字列、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>オブジェクトをクリックします。"
  remarks: "CommandName プロパティを使用するように、コマンド名を関連付ける`&quot;Add&quot;`または`&quot;Remove&quot;`、ボタンを使用、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField>。 CommandName プロパティは、コマンド ボタンがクリックされたときに実行するアクションを識別する任意の文字列を設定することができます。 プログラムでイベント ハンドラーでコマンド名を特定し、適切な操作を実行します。      > [!NOTE] > 内のすべてのボタン、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトが、同じコマンド名を共有します</xref:System.Web.UI.WebControls.ButtonField>。       データ バインド コントロールは特定のコマンド名を認識し自動的に発生してコントロールの適切なイベントを処理します。 次のコマンド名は認識:- `&quot;Cancel&quot;`       -    `&quot;Delete&quot;`       -    `&quot;Edit&quot;`       -    `&quot;Insert&quot;`       -    `&quot;New&quot;`       -    `&quot;Page&quot;`       -    `&quot;Select&quot;`       -    `&quot;Sort&quot;`       -    `&quot;Update&quot;`するページングを呼び出すには、設定、CommandName`&quot;Page&quot;`と<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>の格納されている<xref:System.Web.UI.WebControls.Button>に制御を`&quot;First&quot;`、 `&quot;Last&quot;`、 `&quot;Prev&quot;`、 `&quot;Next&quot;`、またはページ番号</xref:System.Web.UI.WebControls.Button></xref:System.Web.UI.WebControls.Button.CommandArgument%2A>。 ただし、以降、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>の<xref:System.Web.UI.WebControls.ButtonField>コントロールは、整数の行インデックスでは常に、<xref:System.Web.UI.WebControls.ButtonField>コントロールはページングの呼び出しに適していません</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.Button.CommandArgument%2A>。 同様 CommandName を設定して並べ替えを呼び出すことができます`&quot;Sort&quot;`、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを<xref:System.Web.UI.WebControls.ButtonField>コントロールは、常に整数の行インデックス</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.Button.CommandArgument%2A>。 このため、<xref:System.Web.UI.WebControls.ButtonField>コントロールは並べ替えの呼び出しに適していません</xref:System.Web.UI.WebControls.ButtonField>。 コマンド名などのカスタム`&quot;Add&quot;`と`&quot;Remove&quot;`コマンド名を確認して、カスタム アクションを実行するイベントのコードを記述する必要があります。 詳細については、 <xref:System.Web.UI.WebControls.DataControlCommands>。</xref:System.Web.UI.WebControls.DataControlCommands>を参照してください。      > [!NOTE] > すべてのコマンド名は、すべてのデータ バインド コントロールで認識されます。 たとえば、`&quot;New&quot;`で認識されない、<xref:System.Web.UI.WebControls.GridView>コントロールと`&quot;Select&quot;`で認識されない、<xref:System.Web.UI.WebControls.DetailsView>コントロール</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the CommandName property to specify a command name for the buttons in a <xref:System.Web.UI.WebControls.ButtonField> object of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_922_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_922_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "ときにボタンを実行するアクションの名前、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>をクリックします。"
  overload: System.Web.UI.WebControls.ButtonField.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のプロパティをコピー <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>を指定したオブジェクト<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;></xref>オブジェクト。"
  remarks: "<xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>メソッド、現在のプロパティをコピーする<xref:System.Web.UI.WebControls.ButtonFieldBase>-派生オブジェクトを<xref:System.Web.UI.WebControls.DataControlField>によって作成されたオブジェクト、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.DataControlField></xref:System.Web.UI.WebControls.ButtonFieldBase></xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>。"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>を現在のプロパティをコピーする<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ButtonField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "作成しの新しいインスタンスを返します、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>クラスです。"
  remarks: "CreateField メソッドで使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>、空を作成する基本クラスのメソッド<xref:System.Web.UI.WebControls.ButtonField>、現在のプロパティをコピーするオブジェクト<xref:System.Web.UI.WebControls.ButtonField>-派生オブジェクト</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.DataControlField.CloneField%2A>。"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "新しいインスタンス、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>クラスです。"
  overload: System.Web.UI.WebControls.ButtonField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定する対象の値がバインドされているデータ フィールドの名前、<xref:System.Web.UI.WebControls.Button.Text*>のプロパティ、 <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref>コントロールによって表示される、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>オブジェクト</xref:System.Web.UI.WebControls.Button.Text*>。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>のプロパティ、<xref:System.Web.UI.WebControls.ButtonField>に設定されているオブジェクト、<xref:System.Web.UI.WebControls.ButtonType>または<xref:System.Web.UI.WebControls.ButtonType>値、DataTextField プロパティにバインドするフィールドの名前を指定を使用して、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>。 フィールドの値がのボタンのテキストとして表示されます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField>。 必要に応じて、表示されるテキストを書式設定を設定してできます、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティ</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>。       バインドする DataTextField プロパティを使用する代わりに、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトのフィールドに、データ ソースから使用する、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>のボタンのテキストの静的なテキストを表示するプロパティを<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField.Text%2A></xref:System.Web.UI.WebControls.ButtonField>。 ときに、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティを使用して、各ボタンは、同じキャプションを共有します</xref:System.Web.UI.WebControls.ButtonField.Text%2A>。      > [!NOTE] > 場合、DataTextField と<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティが両方設定されて、DataTextField プロパティが優先されます</xref:System.Web.UI.WebControls.ButtonField.Text%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to specify which field to display in a <xref:System.Web.UI.WebControls.ButtonField> column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1139_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1139_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールドの名前、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;)、DataTextField プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはフィールドの値の表示形式を指定する文字列を設定します。"
  remarks: "表示される値のカスタムの表示形式を指定、DataTextFormatString プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField>。 DataTextFormatString プロパティが設定されていない場合は、特殊な書式なし、フィールドの値が表示されます。      > [!NOTE] > 書式指定文字列が適用される場合にのみ、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>。       書式指定文字列は、任意のリテラル文字列を指定でき、通常、フィールドの値のプレース ホルダーが含まれます。 たとえば、書式指定文字列で`&quot;Item Value: {0}&quot;`、`{0}`に表示されるときに、プレース ホルダーがフィールドの値に置き換えられます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField>。 書式指定文字列の残りの部分は、リテラル テキストとして表示されます。      > [!NOTE] > 書式指定文字列にプレース ホルダーが含まれていない場合、データ ソースのフィールドの値は最終的な表示テキストに含まれません。       プレース ホルダーは、2 つの部分をコロンで区切られた形式で、中かっこ内にラップで構成されます { `A` : `Bxx` }。 コロンの前に値 (`A`一般的な例で) パラメーターの&0; から始まるリストのフィールド値のインデックスを指定します。      > [!NOTE] > この`A`パラメーターは書式指定構文の一部です。 各セルに 1 つだけのフィールドの値があるため、この値は 0 にのみ設定できます。       コロンとコロンの後の値は省略可能です。 コロンの後に文字 (`B`一般的な例で) 値を表示する形式を指定します。 次の表は、一般的な形式を示します。      |形式指定文字 |説明 |  |----------------------|-----------------|  |`C`|数値を通貨形式で表示します |。  |`D`|10 進数形式で数値を表示します |。  |`E`|数値を指数表記の指数が表示されます |。  |`F`|固定形式で数値を表示します |。  |`G`|数値の値の一般的な形式で表示されます |。  |`N`|数値書式の数値を表示します |。  |`X`|16 進形式で数値を表示します |。     > [!NOTE] > 除く`X`、書式指定文字が大文字小文字を区別できません。 `X`形式の文字が指定されている場合、16 進文字を表示します。       書式指定文字の後の値 (`xx`一般的な例で) の有効桁数または小数点以下桁数を表示する数を指定します。 たとえば、書式指定文字列`&quot;{0:F2}&quot;`小数点以下&2; 桁の固定小数点数が表示されます。       書式指定文字列の詳細については、次を参照してください。[型の書式設定](~/add/includes/ajax-current-ext-md.md)です。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[ButtonFieldDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_654_1.aspx)]\n [!code-vb[ButtonFieldDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_654_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 (&quot;&quot;)、いる特殊な書式設定には適用されませんフィールドの値を示します。"
  overload: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のセルの指定したフィールドの値を書式設定、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>オブジェクト。"
  remarks: "FormatDataTextValue メソッドは、フィールドの値で指定されている形式に変換に使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティ</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>。"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "書式を設定するフィールドの値。"
    return:
      type: System.String
      description: "指定された形式に変換後のフィールド値、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>プロパティ</xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString*>。"
  overload: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定内の各ボタンを表示するイメージ、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>オブジェクト。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>のプロパティ、<xref:System.Web.UI.WebControls.ButtonField>に設定されているオブジェクト、<xref:System.Web.UI.WebControls.ButtonType>値を ImageUrl プロパティを使用して、各ボタンを表示するイメージを指定します</xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>。 このイメージは、クライアントのブラウザーでサポートされている限り、任意のファイル形式 (.jpg、.gif、.bmp など) でも使用できます。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the ImageUrl property to specify an image to display for each button in the <xref:System.Web.UI.WebControls.ButtonField> object. For this code example to display, you must provide your own image.  \n  \n [!code-vb[ButtonFieldImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_99_1.aspx)]\n [!code-cs[ButtonFieldImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_99_1.aspx)]"
  syntax:
    content: public virtual string ImageUrl { get; set; }
    return:
      type: System.String
      description: "内の各ボタンを表示するイメージ、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;)、ImageUrl プロパティが設定されていないことを示します。"
  overload: System.Web.UI.WebControls.ButtonField.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在<xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>オブジェクト。"
  remarks: "Initialize メソッドが使用するデータ コントロールにより呼び出されます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトが関連の基本的なオブジェクトの初期化を実行する前に、行コレクションに、フィールドが追加されることは、フィールドのインスタンス</xref:System.Web.UI.WebControls.ButtonField>。 などのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>、呼び出し、<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>メソッドで、`CreateChildControls`他のメソッドより前にメソッドなど`CreateRow`データを特定の行を作成すると呼ばれます</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A></xref:System.Web.UI.WebControls.GridView></xref:System.Web.UI.WebControls.DetailsView>。       使用するカスタム データ バインド コントロールを作成しているときに、Initialize メソッドを呼び出す<xref:System.Web.UI.WebControls.TableCell>の基本的な初期化を実行するオブジェクト、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.TableCell>。 場合は、このメソッドを実装して、 <xref:System.Web.UI.WebControls.ButtonField>-派生型を設定する前に、オブジェクトの初期化が必要と<xref:System.Web.UI.WebControls.TableCell>でコントロールのデータをオブジェクトまたは、<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>メソッド</xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A></xref:System.Web.UI.WebControls.TableCell></xref:System.Web.UI.WebControls.ButtonField>。"
  syntax:
    content: public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);
    parameters:
    - id: sortingEnabled
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>並べ替えを有効にするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: control
      type: System.Web.UI.Control
      description: "所有するデータ コントロール、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>、コントロールを示すは、データにバインドする必要はありません。"
  overload: System.Web.UI.WebControls.ButtonField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された初期化<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;></xref>オブジェクトを指定した行の状態にします。"
  remarks: "InitializeCell メソッドで指定されているボタンの種類の作成、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>プロパティに追加し、<xref:System.Web.UI.Control.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.DataControlFieldCell>オブジェクト</xref:System.Web.UI.WebControls.DataControlFieldCell></xref:System.Web.UI.Control.Controls%2A></xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>。 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールに設定されている`rowIndex`</xref:System.Web.UI.WebControls.Button></xref:System.Web.UI.WebControls.Button.CommandArgument%2A>。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "<xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>を初期化します。"
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref>行 (ヘッダー、フッター、またはデータ) の種類を示す値。"
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref>値。"
    - id: rowIndex
      type: System.Int32
      description: "行の&0; から始まるインデックス。"
  overload: System.Web.UI.WebControls.ButtonField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定内の各ボタンに表示される静的キャプション、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>オブジェクト。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A><xref:System.Web.UI.WebControls.ButtonField>オブジェクトに設定されて、<xref:System.Web.UI.WebControls.ButtonType>または<xref:System.Web.UI.WebControls.ButtonType>静的なテキスト<xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField>ボタンのキャプションを表示するテキスト プロパティを使用して、値</xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonType></xref:System.Web.UI.WebControls.ButtonField>のプロパティ</xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>。 各ボタンは、同じキャプションを共有します。       静的なテキストを表示するテキストのプロパティを使用する代わりに、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトを使用する、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>バインドするプロパティ、<xref:System.Web.UI.WebControls.ButtonField>データ ソースのフィールドにします</xref:System.Web.UI.WebControls.ButtonField></xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A></xref:System.Web.UI.WebControls.ButtonField>。 フィールドの値は、ボタンのキャプションとして表示されます。      > [!NOTE] > 場合、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>テキスト プロパティはどちらも設定し、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティが優先されます</xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A></xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption to display for each button in a <xref:System.Web.UI.WebControls.ButtonField> object.  \n  \n [!code-vb[ButtonField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_489_1.aspx)]\n [!code-cs[ButtonField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_489_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "内の各ボタンに表示されるキャプション、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonField.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "かどうか、コントロールに含まれている、 <xref href=&quot;System.Web.UI.WebControls.ButtonField&quot;> </xref>サポート コールバック オブジェクトします。"
  remarks: "ValidateSupportsCallback メソッドがかどうかをコントロールするために使用されるヘルパー メソッドに含まれている、<xref:System.Web.UI.WebControls.ButtonField>サポート コールバック オブジェクトします</xref:System.Web.UI.WebControls.ButtonField>。 このメソッドは、コールバックがサポートされていることを示すために、空のメソッド (コードが含まれていないメソッド) として実装されます。      > [!NOTE] >、ValidateSupportsCallback メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.ButtonFieldBase
  isExternal: false
  name: System.Web.UI.WebControls.ButtonFieldBase
- uid: System.Web.UI.WebControls.ButtonField.#ctor
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField()
  nameWithType: ButtonField.ButtonField()
  fullName: System.Web.UI.WebControls.ButtonField.ButtonField()
- uid: System.Web.UI.WebControls.ButtonField.CommandName
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
  fullName: System.Web.UI.WebControls.ButtonField.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: ButtonField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.ButtonField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.DataControlField
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlField
  nameWithType: DataControlField
  fullName: System.Web.UI.WebControls.DataControlField
- uid: System.Web.UI.WebControls.ButtonField.CreateField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField()
  nameWithType: ButtonField.CreateField()
  fullName: System.Web.UI.WebControls.ButtonField.CreateField()
- uid: System.Web.UI.WebControls.ButtonField.DataTextField
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
  fullName: System.Web.UI.WebControls.ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonField.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonField.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
  fullName: System.Web.UI.WebControls.ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: ButtonField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.ButtonField.Initialize(Boolean,Control)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.ButtonField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ButtonField.Text
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
  fullName: System.Web.UI.WebControls.ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: ButtonField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.ButtonField.#ctor*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ButtonField
  nameWithType: ButtonField.ButtonField
- uid: System.Web.UI.WebControls.ButtonField.CommandName*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CommandName
  nameWithType: ButtonField.CommandName
- uid: System.Web.UI.WebControls.ButtonField.CopyProperties*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CopyProperties
  nameWithType: ButtonField.CopyProperties
- uid: System.Web.UI.WebControls.ButtonField.CreateField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: CreateField
  nameWithType: ButtonField.CreateField
- uid: System.Web.UI.WebControls.ButtonField.DataTextField*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextField
  nameWithType: ButtonField.DataTextField
- uid: System.Web.UI.WebControls.ButtonField.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonField.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonField.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonField.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonField.ImageUrl*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ImageUrl
  nameWithType: ButtonField.ImageUrl
- uid: System.Web.UI.WebControls.ButtonField.Initialize*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Initialize
  nameWithType: ButtonField.Initialize
- uid: System.Web.UI.WebControls.ButtonField.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonField.InitializeCell
- uid: System.Web.UI.WebControls.ButtonField.Text*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: Text
  nameWithType: ButtonField.Text
- uid: System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.ButtonField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: ButtonField.ValidateSupportsCallback
