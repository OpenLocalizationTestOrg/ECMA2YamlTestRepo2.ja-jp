### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ActivationArguments
  id: ActivationArguments
  children:
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  - System.Runtime.Hosting.ActivationArguments.ActivationContext
  - System.Runtime.Hosting.ActivationArguments.ActivationData
  - System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  - System.Runtime.Hosting.ActivationArguments.Clone
  langs:
  - csharp
  name: ActivationArguments
  nameWithType: ActivationArguments
  fullName: System.Runtime.Hosting.ActivationArguments
  type: Class
  summary: "アプリケーションのマニフェストに基づくアクティベーション用のデータを提供します。 このクラスは継承できません。"
  remarks: "ActivationArguments クラスは、<xref:System.AppDomainSetup>クラス</xref:System.AppDomainSetup>によって使用します。       マニフェスト ベースのアクティブ化モデルでは、ライセンス認証用のアセンブリではなく、アプリケーション マニフェストを使用します。 マニフェストは、完全に、アプリケーション、その依存関係、セキュリティ要件、およびなどについて説明します。 マニフェストのモデルでは、特に Web アプリケーションの場合、アセンブリ ベースのアクティブ化モデル全体でいくつかの利点があります。 たとえば、マニフェストには、ユーザーがアプリケーション コードをダウンロードする前に実行を許可するかどうかを決定できるようにすると、アプリケーションのセキュリティ要件が含まれています。 マニフェストには、アプリケーションの依存関係に関する情報も含まれています。"
  example:
  - "The following code example shows how to obtain the current ActivationArguments object from the <xref:System.AppDomainSetup> for the <xref:System.AppDomain> of a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_1_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ActivationArguments : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  id: '#ctor(System.ActivationContext)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>指定したアクティベーション コンテキストを持つクラス。"
  remarks: "<xref:System.ActivationContext>によって表されるオブジェクト、`activationData`パラメーターが含まれる、<xref:System.ApplicationIdentity>とマニフェストに基づくアクティベーションのコンテキスト情報</xref:System.ApplicationIdentity></xref:System.ActivationContext>。"
  syntax:
    content: public ActivationArguments (ActivationContext activationData);
    parameters:
    - id: activationData
      type: System.ActivationContext
      description: "マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。"
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationData</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  id: '#ctor(System.ApplicationIdentity)'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>指定したアプリケーション id を持つクラス。"
  remarks: "アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。"
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。"
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  id: '#ctor(System.ActivationContext,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>クラスを指定したアクティベーション コンテキストおよびライセンス認証データを使用します。"
  remarks: "<xref:System.ActivationContext>によって表されるオブジェクト、`activationContext`パラメーターが含まれる、<xref:System.ApplicationIdentity>とマニフェストに基づくアクティベーションのコンテキスト情報</xref:System.ApplicationIdentity></xref:System.ActivationContext>。 ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。"
  syntax:
    content: public ActivationArguments (ActivationContext activationContext, string[] activationData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。"
    - id: activationData
      type: System.String[]
      description: "ホストから提供されたライセンス認証データを格納する文字列の配列。"
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  id: '#ctor(System.ApplicationIdentity,System.String[])'
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref>指定したアプリケーション id とライセンス認証データを持つクラス。"
  remarks: "アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。 ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。"
  syntax:
    content: public ActivationArguments (ApplicationIdentity applicationIdentity, string[] activationData);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。"
    - id: activationData
      type: System.String[]
      description: "ホストから提供されたライセンス認証データを格納する文字列の配列。"
  overload: System.Runtime.Hosting.ActivationArguments.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationIdentity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  id: ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "アプリケーションのマニフェストに基づくアクティベーションのアクティベーション コンテキストを取得します。"
  remarks: "<xref:System.ActivationContext>オブジェクトが含まれています、<xref:System.ApplicationIdentity>し、アプリケーション マニフェストを内部専用のアクセスを提供します</xref:System.ApplicationIdentity></xref:System.ActivationContext>。 アクティブ化コンテキストは、ドメイン ポリシーを設定し、アプリケーション ベースのセキュリティ モデルを提供するマニフェスト ベースのアクティブ化時に使用されます。"
  example:
  - "The following code example shows how to obtain the value of the ActivationContext property from the <xref:System.Runtime.Hosting.ActivationArguments> for a manifest-based application.  \n  \n This code example is part of a larger example provided for the <xref:System.Runtime.Hosting.ActivationArguments> class.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/visualbasic/p-system.runtime.hosting_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#4](~/add/codesnippet/csharp/p-system.runtime.hosting_1.cs)]"
  syntax:
    content: public ActivationContext ActivationContext { get; }
    return:
      type: System.ActivationContext
      description: "マニフェスト ベースのアクティブ化アプリケーションを識別するオブジェクト。"
  overload: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  id: ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "ホストからライセンス認証データを取得します。"
  remarks: "ライセンス認証データは、URL のクエリ文字列部分などの情報で構成されます。"
  syntax:
    content: public string[] ActivationData { get; }
    return:
      type: System.String[]
      description: "ホストから提供されたライセンス認証データを格納する文字列の配列。"
  overload: System.Runtime.Hosting.ActivationArguments.ActivationData*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "マニフェストでアクティブ化されるアプリケーションのアプリケーション id を取得します。"
  remarks: "アプリケーション id は、新しいドメインでアクティブにするマニフェストに基づくアプリケーションを一意に識別します。"
  syntax:
    content: public ApplicationIdentity ApplicationIdentity { get; }
    return:
      type: System.ApplicationIdentity
      description: "マニフェストに基づくアクティベーション用のアプリケーションを識別するオブジェクト。"
  overload: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  id: Clone
  parent: System.Runtime.Hosting.ActivationArguments
  langs:
  - csharp
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "現在のコピーを生成<xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;></xref>オブジェクト。"
  remarks: "このメソッドは、新しい<xref:System.Runtime.Hosting.ActivationArguments>オブジェクト、および現在の<xref:System.Runtime.Hosting.ActivationArguments>オブジェクト</xref:System.Runtime.Hosting.ActivationArguments>のメンバーのコピーで設定</xref:System.Runtime.Hosting.ActivationArguments>が作成されます。"
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "現在のオブジェクトのコピー。"
  overload: System.Runtime.Hosting.ActivationArguments.Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext)
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity)
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity)
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity)
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ActivationContext,String[])
  nameWithType: ActivationArguments.ActivationArguments(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ActivationArguments.#ctor(System.ApplicationIdentity,System.String[])
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments(ApplicationIdentity,String[])
  nameWithType: ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationArguments(ApplicationIdentity,String[])
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
  fullName: System.Runtime.Hosting.ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
  fullName: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone()
  nameWithType: ActivationArguments.Clone()
  fullName: System.Runtime.Hosting.ActivationArguments.Clone()
- uid: System.Runtime.Hosting.ActivationArguments.#ctor*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationArguments
  nameWithType: ActivationArguments.ActivationArguments
- uid: System.Runtime.Hosting.ActivationArguments.ActivationContext*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationArguments.ActivationContext
- uid: System.Runtime.Hosting.ActivationArguments.ActivationData*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ActivationData
  nameWithType: ActivationArguments.ActivationData
- uid: System.Runtime.Hosting.ActivationArguments.ApplicationIdentity*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ActivationArguments.ApplicationIdentity
- uid: System.Runtime.Hosting.ActivationArguments.Clone*
  parent: System.Runtime.Hosting.ActivationArguments
  isExternal: false
  name: Clone
  nameWithType: ActivationArguments.Clone
