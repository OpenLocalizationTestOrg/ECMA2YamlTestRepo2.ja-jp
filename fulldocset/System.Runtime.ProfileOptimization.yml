### YamlMime:ManagedReference
items:
- uid: System.Runtime.ProfileOptimization
  id: ProfileOptimization
  children:
  - System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  - System.Runtime.ProfileOptimization.StartProfile(System.String)
  langs:
  - csharp
  name: ProfileOptimization
  nameWithType: ProfileOptimization
  fullName: System.Runtime.ProfileOptimization
  type: Class
  summary: "以前のコンパイル中に作成されたプロファイルに基づいて、実行すると思われるメソッドのバック グラウンドのコンパイルを実行することによって、・ イン タイム (JIT) コンパイラを必要とするアプリケーションのアプリケーション ドメインの起動時のパフォーマンスが向上します。"
  remarks: "> [!IMPORTANT]> 最適化のプロファイルには、マルチコア コンピューターが必要です。 メソッドは、他のコンピューターでは無視されます。       アプリケーション ドメインでの最適化のプロファイルを開始するたびに、前回の使用中に作成されたプロファイルが読み取られます。 プロファイルの情報は、スタートアップ時に実行される可能性が最も高いメソッドを識別することによってバック グラウンドのコンパイルに使用されます。 マルチコア コンピューターは、これメソッドである可能性が高くなりますが必要になったとき、メイン アプリケーション スレッドは JIT コンパイラを呼び出す必要があるないようにしてコンパイルされます。       スタートアップ時のメソッドの使用に関する最新の情報を常に含まれるように、それぞれに使用するとき、プロファイル ファイルが上書きされます。       最適化のプロファイルは、アプリケーション ドメインの起動時に限定されません。 これらは、JIT コンパイラの頻繁に使用が必要になるアクティビティに対して使用できます。 このような各アクティビティに、独自のプロファイルを持つように、アプリケーション ドメインに対して複数のプロファイルを管理できます。       最適化のプロファイルを使用して、アプリケーション ドメインを呼び出す必要があります、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>メソッド プロファイルが格納先フォルダーを指定します</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>。 フォルダーが既に存在する必要があります。 プロファイルを使用するには、呼び出し、<xref:System.Runtime.ProfileOptimization.StartProfile%2A>メソッド、プロファイルのファイル名を指定します</xref:System.Runtime.ProfileOptimization.StartProfile%2A>。 場合は、ファイルが以前に記録されませんでした、初回使用時に作成されます。 プロファイルが作成されるパフォーマンス特典、最初の時刻がありません。       最適化のプロファイルでは、メソッドの実行順序は変更されません。 メソッドは、バック グラウンド スレッドでは実行されません。場合は、メソッドはコンパイルされますが、呼び出されません、これは単に使用されません。 プロファイル ファイルが壊れているか (たとえば、フォルダーが存在しない) ために、指定したフォルダーに書き込めない場合、プログラムの実行が最適化のプロファイルことがなく続行します。"
  syntax:
    content: public static class ProfileOptimization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  id: SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "現在のアプリケーション ドメインでは、プロファイリングの最適化を有効にし、最適化のプロファイルのファイルの格納先フォルダーを設定します。 コンピューターでは単一コア、メソッドは無視されます。"
  remarks: "呼び出す前に、このメソッドを呼び出す必要があります、<xref:System.Runtime.ProfileOptimization.StartProfile%2A>が最初に現在のアプリケーション ドメイン内のメソッド</xref:System.Runtime.ProfileOptimization.StartProfile%2A>。 SetProfileRoot を&2; 回以上同じアプリケーション ドメイン内に呼び出す場合は、最初より後のすべての呼び出しは無視されます。       指定したフォルダーが既に存在する必要があります。 存在しない場合は、このメソッドを呼び出すことは作成されません、され、プロファイリングは発生しません。       複数のコアがないコンピューターでこのメソッドは無視されます。"
  syntax:
    content: public static void SetProfileRoot (string directoryPath);
    parameters:
    - id: directoryPath
      type: System.String
      description: "現在のアプリケーション ドメインのプロファイルのファイルが格納フォルダーの完全パスです。"
  overload: System.Runtime.ProfileOptimization.SetProfileRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  id: StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "バック グラウンド スレッドで、指定したプロファイル ファイルに記録した以前の方法の・ イン タイム (JIT) コンパイルを開始します。 現在メソッドを使用して、後で、指定したプロファイル ファイルを上書きするを記録するプロセスを開始します。"
  remarks: "によって指定されたフォルダーに指定されたプロファイルが存在する場合、<xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>メソッドが、バック グラウンド スレッドでコンパイルされた順序を決定するメソッド、含まれている情報を使用します</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>。 StartProfile メソッドは、使用方法の記録を開始し、既に存在しない場合は、プロファイルを作成します。       かどうか、バック グラウンド スレッドまたはメイン アプリケーション スレッド上にコンパイルされているに関係なく、実際に呼び出されるメソッドのみが記録されます。 アプリケーションがバック グラウンド スレッドがコンパイルされる前に呼び出す必要がある場合、メソッドは、アプリケーションのメイン スレッドでコンパイルされます。       記録を実行するコードはあるメソッドはコンパイル、メイン スレッドとバック グラウンド スレッドでコンパイルされるメソッドを含む速度を追跡します。 ときに、レート レベルを下回ったあらかじめ決められた、録音を停止します。 記録は、JIT コンパイルの比率が事前に定義された上限を超えた場合にも停止します。       場合、 <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>、現在のアプリケーション ドメインのメソッドが呼び出されていないか、コンピューターが複数のコアを持たない場合、StartProfile メソッドも何も起こりません</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>。"
  syntax:
    content: public static void StartProfile (string profile);
    parameters:
    - id: profile
      type: System.String
      description: "使用するプロファイルのファイル名。"
  overload: System.Runtime.ProfileOptimization.StartProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
- uid: System.Runtime.ProfileOptimization.SetProfileRoot*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot
  nameWithType: ProfileOptimization.SetProfileRoot
- uid: System.Runtime.ProfileOptimization.StartProfile*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile
  nameWithType: ProfileOptimization.StartProfile
