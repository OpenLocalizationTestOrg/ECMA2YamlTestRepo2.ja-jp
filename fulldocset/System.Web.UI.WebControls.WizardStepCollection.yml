### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepCollection
  id: WizardStepCollection
  children:
  - System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Clear
  - System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Count
  - System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  - System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  - System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  - System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  - System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: WizardStepCollection
  nameWithType: WizardStepCollection
  fullName: System.Web.UI.WebControls.WizardStepCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-ウィザードとして機能するコントロール内のオブジェクトを派生します。 このクラスは継承できません。"
  remarks: "WizardStepCollection クラスは、格納し、管理のコレクションに使用<xref:System.Web.UI.WebControls.WizardStepBase>-派生など、ウィザードとして機能するコントロールでのオブジェクト、<xref:System.Web.UI.WebControls.CreateUserWizard>コントロールまたは<xref:System.Web.UI.WebControls.Wizard>コントロール</xref:System.Web.UI.WebControls.Wizard></xref:System.Web.UI.WebControls.CreateUserWizard></xref:System.Web.UI.WebControls.WizardStepBase>。 たとえば、<xref:System.Web.UI.WebControls.Wizard>コントロール クラスを使用して、WizardStepCollection の<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>プロパティ</xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A></xref:System.Web.UI.WebControls.Wizard>。       さまざまな方法でアクセスできる、 <xref:System.Web.UI.WebControls.WizardStepBase>-、WizardStepCollection 内のオブジェクトを派生:-を使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>プロパティに直接アクセスを<xref:System.Web.UI.WebControls.WizardStepBase>-特定の&0; から始まるインデックス位置にオブジェクトを派生します</xref:System.Web.UI.WebControls.WizardStepBase></xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A></xref:System.Web.UI.WebControls.WizardStepBase>。      -を使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>メソッドをコレクションを反復処理に使用できる列挙子を作成します</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>。      -を使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>メソッドに WizardStepCollection コレクションの内容をコピーする、<xref:System.Array>オブジェクト</xref:System.Array></xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>。"
  example:
  - "The following example demonstrates how to populate the WizardStepCollection collection using declarative syntax.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_1.aspx)]  \n  \n The following example demonstrates how to programmatically populate a WizardStepCollection collection.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_2.aspx)]  \n  \n The following is the code-behind file for the Web page in the preceding example.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_56_3.cs)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_56_3.vb)]"
  syntax:
    content: 'public sealed class WizardStepCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  id: Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した追加<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクションの末尾にオブジェクトを派生します。"
  remarks: "Add メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。 追加する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトを特定のインデックス位置を使用するコレクション、<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッド</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A></xref:System.Web.UI.WebControls.WizardStepBase>。"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Add method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived <xref:System.Web.UI.WebControls.WizardStep> objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/visualbasic/dbb341bd-e6ba-460d-b742-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardSteps#1](~/add/codesnippet/csharp/dbb341bd-e6ba-460d-b742-_1.aspx)]"
  syntax:
    content: public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生に追加するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが渡されたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した追加<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクションの指定したインデックス位置にオブジェクトを派生します。"
  remarks: "AddAt メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションの指定したインデックス位置にオブジェクトを派生します</xref:System.Web.UI.WebControls.WizardStepBase>。       追加する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>収集、使用、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッド</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A></xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "挿入する位置のインデックス位置<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクト。"
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生に追加するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
  overload: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが渡されたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  id: Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべて削除<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-オブジェクトをコレクションから派生します。"
  remarks: "すべてを削除する Clear メソッドを使用して、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトから、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。      > [!NOTE] > 後に、クリア メソッドは、削除、 <xref:System.Web.UI.WebControls.WizardStepBase>-をコレクションから派生したオブジェクト、<xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>のプロパティ、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションには、ゼロの値</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  id: Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクションには、固有の仕様が含まれている<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクト。"
  remarks: "Contains メソッドを使用しているかどうか、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトがコレクションに含まれている</xref:System.Web.UI.WebControls.WizardStepBase>。 このメソッドは通常の存在をテストする使用、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトを削除するなどのタスクを実行する前に、 <xref:System.Web.UI.WebControls.WizardStepBase>-オブジェクトをコレクションから派生します</xref:System.Web.UI.WebControls.WizardStepBase></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生内で検索するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクションです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>wizardStep</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべての項目をコピー、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>の場合は、互換性のある&1; 次元配列にコレクション<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>オブジェクト、ターゲット配列の指定したインデックスから始まります。"
  remarks: "CopyTo メソッドを使用すると、指定された&0; から始まる配列にコレクションの内容をコピーできます。 項目をコピーするには、対象となる配列の指定したインデックスから始まります。 内の項目にアクセスする配列の構文を使用するには項目は、配列では、後に、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection>。       代わりに、使用することも、<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>メソッドをコレクション内の項目へのアクセスに使用できる列挙子を作成します</xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>。"
  example:
  - "The following example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.WizardStepBase> objects from the collection to an array. The array is then iterated through to display the <xref:System.Web.UI.Control.ID%2A> property of each <xref:System.Web.UI.WebControls.WizardStepBase>-derived object. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/csharp/069e4b03-58e3-4a5a-8594-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/add/codesnippet/visualbasic/069e4b03-58e3-4a5a-8594-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.WizardStepBase[]
      description: "0 から始まる配列<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>項目を受信するオブジェクトのコレクションからコピーします。"
    - id: index
      type: System.Int32
      description: "先の配列、配列がコピーされた項目の受信を開始する位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  id: Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "数を取得<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-内のオブジェクトの派生、 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>コントロールの<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>コレクション。"
  remarks: "数を決定する、Count プロパティを使用して<xref:System.Web.UI.WebControls.WizardStepBase>-内のオブジェクトの派生、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。 Count プロパティは場合によく使用コレクションの反復処理をその上限を決定します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "数<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-内のオブジェクトの派生、 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "返します、<xref:System.Collections.IEnumerator>の反復処理に使用できるオブジェクトを実装する、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクション内のオブジェクトを派生します</xref:System.Collections.IEnumerator>。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>-すべてを含むオブジェクトを実装する、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-内のオブジェクトの派生、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクションです</xref:System.Collections.IEnumerator>。"
  overload: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  id: IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された位置を表すインデックス値を決定<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクション内のオブジェクトを派生します。"
  remarks: "IndexOf メソッドを使用して、指定したインデックスを決定する<xref:System.Web.UI.WebControls.WizardStepBase>-現在のオブジェクトを派生<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。 場合、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトのコレクションではない、-1 が返されます</xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生内で検索するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
    return:
      type: System.Int32
      description: "場合が見つかると、最初に見つかった位置の&0; から始まるインデックス、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが現在内で渡される<xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;></xref>コレクションです。 それ以外の場合、-1。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが渡されたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  id: Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した挿入<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクション内の指定したインデックス位置にオブジェクトを派生します。"
  remarks: "挿入メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションの指定したインデックス位置にオブジェクトを派生します</xref:System.Web.UI.WebControls.WizardStepBase>。       また、使用することができます、<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>を追加するメソッド、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションにオブジェクトを派生します</xref:System.Web.UI.WebControls.WizardStepBase></xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>。 追加する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>収集、使用、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッド</xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A></xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。      > [!NOTE] > メソッドの Insert と<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッドは、基本的に同じ機能を実行します</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>。 Insert メソッドが呼び出されたときに渡すだけ、`wizardStep`と`index`パラメーターを<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッド</xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>。"
  example:
  - "The following code example demonstrates programmatically creating a <xref:System.Web.UI.WebControls.Wizard> control and using the Insert method to add <xref:System.Web.UI.WebControls.WizardStepBase>-derived objects to the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/visualbasic/a6945f59-a965-41a5-8e08-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/add/codesnippet/csharp/a6945f59-a965-41a5-8e08-_1.aspx)]"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: index
      type: System.Int32
      description: "挿入する位置のインデックスの場所、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクト。"
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生に挿入するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクション内の派生オブジェクトを変更することができます。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>変更後、それ以外のコレクションを指定できます<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションへのアクセスが同期されているかどうかを示す値を (スレッド セーフである) を取得します。"
  remarks: "このプロパティはから派生した、<xref:System.Collections.ICollection>インターフェイスし、常にオーバーライド`false`</xref:System.Collections.ICollection>。       IsSynchronized プロパティの詳細については、<xref:System.Collections.ICollection.IsSynchronized%2A><xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection>のプロパティ</xref:System.Collections.ICollection.IsSynchronized%2A>を参照してください。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-コレクション内の指定したインデックス位置から派生したオブジェクト。"
  remarks: "項目のプロパティを使用して取得する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトで指定したインデックス位置にある、<xref:System.Web.UI.WebControls.WizardStepCollection>配列表記を使用してコレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "インデックス、 <xref href=&quot;System.Web.UI.WebControls.WizardStep&quot;> </xref>オブジェクトを取得します。"
    return:
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-内のオブジェクトの派生、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション内の指定したインデックス位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  id: Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された削除<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-オブジェクトをコレクションから派生します。"
  remarks: "Remove メソッドを使用して削除を<xref:System.Web.UI.WebControls.WizardStepBase>-オブジェクトから派生した、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。 また、使用することができます、<xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>を削除する方法、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトで指定した場所から、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションです</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase></xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>。"
  example:
  - "The following example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.WizardStepBase>-derived object from the <xref:System.Web.UI.WebControls.WizardStepCollection> collection. Note that in the example, the <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A> property of the <xref:System.Web.UI.WebControls.Wizard> control is an instance of the <xref:System.Web.UI.WebControls.WizardStepCollection> class.  \n  \n [!code-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/visualbasic/f9ffdaaf-8580-49a0-8194-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/add/codesnippet/csharp/f9ffdaaf-8580-49a0-8194-_1.aspx)]"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);
    parameters:
    - id: wizardStep
      type: System.Web.UI.WebControls.WizardStepBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトをコレクションから削除します。"
  overload: System.Web.UI.WebControls.WizardStepCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトが渡されたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-指定した位置にコレクションからオブジェクトを派生します。"
  remarks: "RemoveAt メソッドを使用して、削除、 <xref:System.Web.UI.WebControls.WizardStepBase>-オブジェクトから派生した、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション内の指定したインデックス位置</xref:System.Web.UI.WebControls.WizardStepCollection></xref:System.Web.UI.WebControls.WizardStepBase>。 または、特定を削除することができます<xref:System.Web.UI.WebControls.WizardStepBase>-を使用してコレクションから派生したオブジェクト、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>メソッド</xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "インデックス、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>-派生オブジェクトを削除します。"
  overload: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  id: SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: "この実装で返されるオブジェクトは、<xref:System.Web.UI.WebControls.WizardStepCollection>オブジェクト自体です</xref:System.Web.UI.WebControls.WizardStepCollection>。       SyncRoot プロパティの詳細については、次を参照してください、<xref:System.Collections.ICollection.SyncRoot%2A>のプロパティ、<xref:System.Collections.ICollection>インターフェイス。</xref:System.Collections.ICollection> </xref:System.Collections.ICollection.SyncRoot%2A> 。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用できるオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
  overload: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべての項目をコピー、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクションを&1; 次元配列を対象となる配列の指定したインデックスから始まります。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "0 から始まる<xref:System.Array>の項目のコピーを受け取る、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクションです</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "コピーされた内容の受信を開始する位置を示す、ターゲット配列内の位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたオブジェクトをコレクションの末尾に追加します。"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>コレクションの末尾に追加する</xref:System.Object>。"
    return:
      type: System.Int32
      description: "新しい要素が挿入された位置。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したオブジェクトがコレクションに含まれているかどうかを判断します。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>コレクション内で検索する</xref:System.Object>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Object>で見つかった、<xref:System.Collections.IList>それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Collections.IList> </xref:System.Object> 。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したオブジェクトのコレクション内の位置を表すインデックス値を決定します。"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "コレクション内で検索するオブジェクト。"
    return:
      type: System.Int32
      description: "コレクション内の指定したオブジェクトのインデックス値。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した位置にあるコレクションで指定したオブジェクトを挿入します。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "コレクションにオブジェクトを挿入する位置を示すインデックス。"
    - id: value
      type: System.Object
      description: "コレクションに挿入するオブジェクト。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションが固定サイズであるかどうかを示す値を取得します。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、コレクションがある固定サイズです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクション内の指定したインデックス位置には、オブジェクトを取得します。"
  remarks: 'このプロパティは、次の構文を使用して、コレクション内の特定の要素にアクセスする機能を提供します。 myCollection [index] です。'
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "コレクションから取得するオブジェクトのインデックス。"
    return:
      type: System.Object
      description: "取得するオブジェクト。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.WizardStepCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したオブジェクトをコレクションから削除します。"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "コレクションから削除するオブジェクト。"
  overload: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add(WizardStepBase)
  nameWithType: WizardStepCollection.Add(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Add(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepBase
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.AddAt(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.AddAt(Int32,WizardStepBase)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear()
  nameWithType: WizardStepCollection.Clear()
  fullName: System.Web.UI.WebControls.WizardStepCollection.Clear()
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains(WizardStepBase)
  nameWithType: WizardStepCollection.Contains(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Contains(WizardStepBase)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo(WizardStepBase[],Int32)
  nameWithType: WizardStepCollection.CopyTo(WizardStepBase[],Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.CopyTo(WizardStepBase[],Int32)
- uid: System.Web.UI.WebControls.WizardStepBase[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.WizardStepBase
    name: WizardStepBase
    nameWithType: WizardStepBase
    fullName: WizardStepBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.WizardStepCollection.Count
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
  fullName: System.Web.UI.WebControls.WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: WizardStepCollection.GetEnumerator()
  fullName: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf(WizardStepBase)
  nameWithType: WizardStepCollection.IndexOf(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.IndexOf(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert(Int32,WizardStepBase)
  nameWithType: WizardStepCollection.Insert(Int32,WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Insert(Int32,WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
  fullName: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: WizardStepCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove(WizardStepBase)
  nameWithType: WizardStepCollection.Remove(WizardStepBase)
  fullName: System.Web.UI.WebControls.WizardStepCollection.Remove(WizardStepBase)
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: WizardStepCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
  fullName: System.Web.UI.WebControls.WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Add(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Add(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Contains(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Contains(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: WizardStepCollection.System.Collections.IList.Item(Int32)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Item(Int32)
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: WizardStepCollection.System.Collections.IList.Remove(Object)
  fullName: System.Web.UI.WebControls.WizardStepCollection.System.Collections.IList.Remove(Object)
- uid: System.Web.UI.WebControls.WizardStepCollection.Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Add
  nameWithType: WizardStepCollection.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.AddAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: AddAt
  nameWithType: WizardStepCollection.AddAt
- uid: System.Web.UI.WebControls.WizardStepCollection.Clear*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Clear
  nameWithType: WizardStepCollection.Clear
- uid: System.Web.UI.WebControls.WizardStepCollection.Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Contains
  nameWithType: WizardStepCollection.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: CopyTo
  nameWithType: WizardStepCollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.Count*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Count
  nameWithType: WizardStepCollection.Count
- uid: System.Web.UI.WebControls.WizardStepCollection.GetEnumerator*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: WizardStepCollection.GetEnumerator
- uid: System.Web.UI.WebControls.WizardStepCollection.IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IndexOf
  nameWithType: WizardStepCollection.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Insert
  nameWithType: WizardStepCollection.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.IsReadOnly*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: WizardStepCollection.IsReadOnly
- uid: System.Web.UI.WebControls.WizardStepCollection.IsSynchronized*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: WizardStepCollection.IsSynchronized
- uid: System.Web.UI.WebControls.WizardStepCollection.Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Item
  nameWithType: WizardStepCollection.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: Remove
  nameWithType: WizardStepCollection.Remove
- uid: System.Web.UI.WebControls.WizardStepCollection.RemoveAt*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: RemoveAt
  nameWithType: WizardStepCollection.RemoveAt
- uid: System.Web.UI.WebControls.WizardStepCollection.SyncRoot*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: SyncRoot
  nameWithType: WizardStepCollection.SyncRoot
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: WizardStepCollection.System.Collections.ICollection.CopyTo
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: WizardStepCollection.System.Collections.IList.Add
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: WizardStepCollection.System.Collections.IList.Contains
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: WizardStepCollection.System.Collections.IList.IndexOf
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: WizardStepCollection.System.Collections.IList.Insert
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: WizardStepCollection.System.Collections.IList.IsFixedSize
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: WizardStepCollection.System.Collections.IList.Item
- uid: System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove*
  parent: System.Web.UI.WebControls.WizardStepCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: WizardStepCollection.System.Collections.IList.Remove
