### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.InstanceContextMode
  id: InstanceContextMode
  children:
  - System.ServiceModel.InstanceContextMode.PerCall
  - System.ServiceModel.InstanceContextMode.PerSession
  - System.ServiceModel.InstanceContextMode.Single
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
  type: Enum
  summary: "受信メッセージに含まれている呼び出しを処理するために使用できるサービス インスタンスの数を指定します。"
  remarks: "<xref:System.ServiceModel.InstanceContext?displayProperty=fullName>チャネルとユーザー定義サービス オブジェクト間の関連付けを管理します</xref:System.ServiceModel.InstanceContext?displayProperty=fullName>。 InstanceContextMode の列挙を使用して、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName>の有効期間を指定するプロパティ、<xref:System.ServiceModel.InstanceContext>オブジェクト</xref:System.ServiceModel.InstanceContext></xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=fullName>。 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]新規に作成できる<xref:System.ServiceModel.InstanceContext>オブジェクトのすべてのセッションのすべての呼び出しまたはことを指定する、<xref:System.ServiceModel.InstanceContext>オブジェクトが&1; つのサービス オブジェクトにバインドします</xref:System.ServiceModel.InstanceContext></xref:System.ServiceModel.InstanceContext>。 実際の例では、次を参照してください。、[インスタンス化](~/add/includes/ajax-current-ext-md.md)です。       1 つの値を指定する&1; つ<xref:System.ServiceModel.InstanceContext>オブジェクトは、サービスの有効期間にわたって使用する必要があります</xref:System.ServiceModel.InstanceContext>。      > [!NOTE] > 場合<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>、結果は、サービスが<xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A><xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode>値</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>も設定しない限り、一度に&1; つのメッセージを処理のみを&1; つに値が設定されている</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>。"
  example:
  - "The following code illustrates how to set the InstanceContextMode for a service class:  \n  \n [!code-cs[S_ReliableSession#1](~/add/codesnippet/csharp/t-system.servicemodel.in_1.cs)]\n [!code-vb[S_ReliableSession#1](~/add/codesnippet/visualbasic/t-system.servicemodel.in_1.vb)]"
  syntax:
    content: public enum InstanceContextMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerCall
  id: PerCall
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しい<xref:System.ServiceModel.InstanceContext>オブジェクトが前に作成され、各呼び出しの後にリサイクルします</xref:System.ServiceModel.InstanceContext>。 チャネルがセッションを作成していない場合、PerCall の場合と同様、この値が動作します。"
  syntax:
    content: PerCall
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.PerSession
  id: PerSession
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しい<xref:System.ServiceModel.InstanceContext>セッションごとにオブジェクトを作成します</xref:System.ServiceModel.InstanceContext>。"
  syntax:
    content: PerSession
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.InstanceContextMode.Single
  id: Single
  parent: System.ServiceModel.InstanceContextMode
  langs:
  - csharp
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "1 つだけ<xref:System.ServiceModel.InstanceContext>オブジェクトは、すべての着信呼び出しを使用し、呼び出し後に再利用することはありません</xref:System.ServiceModel.InstanceContext>。 サービス オブジェクトが存在しない場合は、1 つが作成されます。"
  remarks: >-
    > [!NOTE]

    >  For singleton lifetime behavior (for example, if the host application calls the [System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri\[\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=False&autoUpgrade=True) constructor and passes an object to use as the service), the service class must set <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> to Single, or an exception is thrown when the service host is opened.
  syntax:
    content: Single
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.InstanceContextMode.PerCall
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerCall
  nameWithType: InstanceContextMode.PerCall
  fullName: System.ServiceModel.InstanceContextMode.PerCall
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode.PerSession
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: PerSession
  nameWithType: InstanceContextMode.PerSession
  fullName: System.ServiceModel.InstanceContextMode.PerSession
- uid: System.ServiceModel.InstanceContextMode.Single
  parent: System.ServiceModel.InstanceContextMode
  isExternal: false
  name: Single
  nameWithType: InstanceContextMode.Single
  fullName: System.ServiceModel.InstanceContextMode.Single
