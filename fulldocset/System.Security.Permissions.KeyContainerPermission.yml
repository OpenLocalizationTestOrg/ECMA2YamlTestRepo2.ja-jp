### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermission
  id: KeyContainerPermission
  children:
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  - System.Security.Permissions.KeyContainerPermission.AccessEntries
  - System.Security.Permissions.KeyContainerPermission.Copy
  - System.Security.Permissions.KeyContainerPermission.Flags
  - System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  - System.Security.Permissions.KeyContainerPermission.ToXml
  - System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission
  fullName: System.Security.Permissions.KeyContainerPermission
  type: Class
  summary: "キー コンテナーにアクセスする機能を制御します。 このクラスは継承できません。"
  remarks: "このアクセス許可を使用して、キー コンテナーへのアクセス制限を提供します。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>指定のアクセス権を持つクラス。"
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/csharp/dcb7bb7e-ef30-44de-aaf3-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/cpp/dcb7bb7e-ef30-44de-aaf3-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#20](~/add/codesnippet/visualbasic/dcb7bb7e-ef30-44de-aaf3-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>値。"
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>有効な組み合わせではありません、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>制限されているか、無制限のアクセス許可を持つクラス。"
  remarks: "作成するか`None`(完全に制限される) または`Unrestricted`キー コンテナーへのアクセス。"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>値。"
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>state</code>有効ではありません<xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>値。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  id: '#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])'
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;> </xref>指定のグローバル アクセス権と特定のキー コンテナー アクセス権を持つクラス。"
  remarks: ''
  example:
  - "The following code example shows the use of the KeyContainerPermission constructor.  \n  \n [!code-cs[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/csharp/504c0c1a-d76c-49a6-8315-_1.cs)]\n [!code-cpp[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/cpp/504c0c1a-d76c-49a6-8315-_1.cpp)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#13](~/add/codesnippet/visualbasic/504c0c1a-d76c-49a6-8315-_1.vb)]"
  syntax:
    content: public KeyContainerPermission (System.Security.Permissions.KeyContainerPermissionFlags flags, System.Security.Permissions.KeyContainerPermissionAccessEntry[] accessList);
    parameters:
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>値。"
    - id: accessList
      type: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
      description: "配列<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>特定のキー コンテナー アクセス権を識別するオブジェクト。"
  overload: System.Security.Permissions.KeyContainerPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>flags</code>有効な組み合わせではありません、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>値。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>accessList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  id: AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "コレクションを取得<xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;></xref>現在のアクセス許可に関連付けられているオブジェクト。"
  remarks: "各<xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>コレクション内のオブジェクトが特定のキー コンテナーのアクセス権を指定します</xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>。"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionAccessEntryCollection AccessEntries { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
      description: "A <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntryCollection&quot;> </xref>を含む、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionAccessEntry&quot;> </xref>オブジェクト<xref href=&quot;System.Security.Permissions.KeyContainerPermission&quot;></xref>です。"
  overload: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  id: Copy
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成して、現在のアクセス許可の完全なコピーを返します。"
  remarks: "アクセス許可のコピーは、元のアクセス許可としてリソースに対して同じアクセス権を表します。"
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可のコピー。"
  overload: System.Security.Permissions.KeyContainerPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "キー コンテナーのアクセス許可に関連付けられているすべてのキー コンテナーに適用されるアクセス許可フラグを取得します。"
  remarks: "Flags プロパティは、コンス トラクターで設定されます。"
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Security.Permissions.KeyContainerPermissionFlags&quot;> </xref>値。"
  overload: System.Security.Permissions.KeyContainerPermission.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "XML エンコードから指定された状態で、アクセス許可を再構築します。"
  remarks: "FromXml メソッドが<xref:System.Security.Permissions.KeyContainerPermission><xref:System.Security.SecurityElement>クラス</xref:System.Security.SecurityElement>によって定義された XML エンコードからオブジェクト</xref:System.Security.Permissions.KeyContainerPermission>を再構築します。 使用して、 <xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>XML エンコード方法、 <xref:System.Security.Permissions.KeyContainerPermission>、状態情報を含むします</xref:System.Security.Permissions.KeyContainerPermission></xref:System.Security.Permissions.KeyContainerPermission.ToXml%2A>。"
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>アクセス許可の再構築に使用する XML エンコードを格納しています。"
  overload: System.Security.Permissions.KeyContainerPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>securityElement</code>有効なアクセス許可要素ではありません。       - または - のバージョン番号<code>securityElement</code>はサポートされていません。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成し、現在のアクセス許可と指定したアクセス許可の積集合であるアクセス許可を返します。"
  remarks: "2 つのアクセス許可の積集合は、一連の両方に共通する操作を説明する権限です。 個々 の両方の権限を通過する要求だけでは、積集合を渡されます。"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と交差するアクセス許可。 現在のアクセス許可と同じ型の可能性があります。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と指定したアクセス許可の積集合を表す新しいアクセス許可。 この新しいアクセス許可は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>積集合が空の場合。"
  overload: System.Security.Permissions.KeyContainerPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が指定したアクセス許可のサブセットであるかどうかを判断します。"
  remarks: "現在のアクセス許可は、現在のアクセス許可を指定した権限で完全に含まれる一連の操作を指定する場合、指定したアクセス許可のサブセットです。 アクセス許可など、<xref:System.Security.Permissions.KeyContainerPermissionFlags>アクセスに対するアクセス許可のサブセットである<xref:System.Security.Permissions.KeyContainerPermissionFlags>アクセス</xref:System.Security.Permissions.KeyContainerPermissionFlags></xref:System.Security.Permissions.KeyContainerPermissionFlags>。"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "サブセットの関係性をテストするアクセス許可。 このアクセス許可は、現在のアクセス許可と同じ型である必要があります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が指定した権限のサブセットである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可が制限されているかどうかを判断します。"
  remarks: "無制限のアクセス許可は、アクセス許可によって保護されているすべてのリソースへのアクセスを表します。"
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のアクセス許可が無制限ではない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "アクセス許可と、現在の状態の XML エンコードを作成します。"
  remarks: "<xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A> <xref:System.Security.SecurityElement>。</xref:System.Security.SecurityElement>から状態情報を復元する方法</xref:System.Security.Permissions.KeyContainerPermission.FromXml%2A>を使用して"
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "A <xref href=&quot;System.Security.SecurityElement&quot;> </xref>状態情報を含む、アクセス許可の XML エンコードを含むです。"
  overload: System.Security.Permissions.KeyContainerPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "現在のアクセス許可と、指定した権限の和集合であるアクセス許可を作成します。"
  remarks: "共用体への呼び出しの結果は、現在のアクセス許可と、指定した権限の両方で表されるすべての操作を表すアクセス許可です。 いずれかのアクセス許可に適合する要求は、その共用体を渡します。"
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "現在のアクセス許可と結合するアクセス許可。 これは、現在のアクセス許可と同じ型でなければなりません。"
    return:
      type: System.Security.IPermission
      description: "現在のアクセス許可と、指定した権限の和集合を表す新しいアクセス許可。"
  overload: System.Security.Permissions.KeyContainerPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>と同じ型のアクセス許可を現在のアクセス許可と指定されていません。"
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags)
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(PermissionState)
  nameWithType: KeyContainerPermission.KeyContainerPermission(PermissionState)
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.KeyContainerPermission.#ctor(System.Security.Permissions.KeyContainerPermissionFlags,System.Security.Permissions.KeyContainerPermissionAccessEntry[])
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  nameWithType: KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
  fullName: System.Security.Permissions.KeyContainerPermission.KeyContainerPermission(KeyContainerPermissionFlags,KeyContainerPermissionAccessEntry[])
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry[]
  spec.csharp:
  - uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
    name: KeyContainerPermissionAccessEntry
    nameWithType: KeyContainerPermissionAccessEntry
    fullName: KeyContainerPermissionAccessEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
  fullName: System.Security.Permissions.KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionAccessEntryCollection
  nameWithType: KeyContainerPermissionAccessEntryCollection
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntryCollection
- uid: System.Security.Permissions.KeyContainerPermission.Copy
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy()
  nameWithType: KeyContainerPermission.Copy()
  fullName: System.Security.Permissions.KeyContainerPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.KeyContainerPermission.Flags
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
  fullName: System.Security.Permissions.KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: KeyContainerPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.KeyContainerPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.KeyContainerPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: KeyContainerPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Intersect(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: KeyContainerPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: KeyContainerPermission.IsUnrestricted()
  fullName: System.Security.Permissions.KeyContainerPermission.IsUnrestricted()
- uid: System.Security.Permissions.KeyContainerPermission.ToXml
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml()
  nameWithType: KeyContainerPermission.ToXml()
  fullName: System.Security.Permissions.KeyContainerPermission.ToXml()
- uid: System.Security.Permissions.KeyContainerPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: KeyContainerPermission.Union(IPermission)
  fullName: System.Security.Permissions.KeyContainerPermission.Union(IPermission)
- uid: System.Security.Permissions.KeyContainerPermission.#ctor*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: KeyContainerPermission
  nameWithType: KeyContainerPermission.KeyContainerPermission
- uid: System.Security.Permissions.KeyContainerPermission.AccessEntries*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: AccessEntries
  nameWithType: KeyContainerPermission.AccessEntries
- uid: System.Security.Permissions.KeyContainerPermission.Copy*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Copy
  nameWithType: KeyContainerPermission.Copy
- uid: System.Security.Permissions.KeyContainerPermission.Flags*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermission.Flags
- uid: System.Security.Permissions.KeyContainerPermission.FromXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: FromXml
  nameWithType: KeyContainerPermission.FromXml
- uid: System.Security.Permissions.KeyContainerPermission.Intersect*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Intersect
  nameWithType: KeyContainerPermission.Intersect
- uid: System.Security.Permissions.KeyContainerPermission.IsSubsetOf*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: KeyContainerPermission.IsSubsetOf
- uid: System.Security.Permissions.KeyContainerPermission.IsUnrestricted*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: KeyContainerPermission.IsUnrestricted
- uid: System.Security.Permissions.KeyContainerPermission.ToXml*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: ToXml
  nameWithType: KeyContainerPermission.ToXml
- uid: System.Security.Permissions.KeyContainerPermission.Union*
  parent: System.Security.Permissions.KeyContainerPermission
  isExternal: false
  name: Union
  nameWithType: KeyContainerPermission.Union
