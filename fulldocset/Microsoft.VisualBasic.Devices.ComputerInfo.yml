### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.ComputerInfo
  id: ComputerInfo
  children:
  - Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  - Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  - Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  langs:
  - csharp
  name: ComputerInfo
  nameWithType: ComputerInfo
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo
  type: Class
  summary: "コンピューターのメモリ、読み込まれたアセンブリ、名前、およびオペレーティング システムに関する情報を取得するためには、プロパティを提供します。"
  remarks: "によって公開されるプロパティ、`My.Computer.Info`オブジェクトの実行時に決定される、アプリケーションの配置元のコンピューターに関する情報を返します。 通常、このデータは、開発用コンピューター上で利用できるは異なります。"
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerTypeProxy(typeof(Microsoft.VisualBasic.Devices.ComputerInfo/ComputerInfoDebugView))]

      public class ComputerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.Devices.ComputerInfo&quot;> </xref>クラスです。"
  syntax:
    content: public ComputerInfo ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  id: AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターの空き物理メモリの総量を取得します。"
  remarks: "`My.Computer.Info.AvailablePhysicalMemory`プロパティは、Windows XP、Windows 2000 Professional、Windows Server 2003、Windows 2000 Server、または Windows Vista が必要です。"
  example:
  - "This example uses the `My.Computer.Info.AvailablePhysicalMemory` property to display the amount of available physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#2](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#2)]"
  syntax:
    content: public ulong AvailablePhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>コンピューターの空き物理メモリのバイト数を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "アプリケーションでは、メモリの状態を取得できません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  id: AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターの空き仮想アドレス領域の合計サイズを取得します。"
  remarks: "`My.Computer.Info.AvailableVirtualMemory`プロパティは、Windows XP、Windows 2000 Professional、Windows Server 2003、Windows 2000 Server、または Windows Vista が必要です。"
  example:
  - "This example uses the `My.Computer.Info.AvailableVirtualMemory` property to display the amount of available virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#3](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#3)]"
  syntax:
    content: public ulong AvailableVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>コンピューターの空き仮想アドレス空間のバイト数を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "アプリケーションでは、メモリの状態を取得できません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  id: InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "オペレーティング システムにインストールされている現在の UI カルチャを取得します。"
  remarks: "`My.Computer.Info.InstalledUICulture`プロパティと同じ動作には、<xref:System.Globalization.CultureInfo.InstalledUICulture%2A>プロパティ</xref:System.Globalization.CultureInfo.InstalledUICulture%2A>。       日本語版の Windows 2000 Professional など、ローカライズされたオペレーティング システムでは、このプロパティは、オペレーティング システムのカルチャを返します。"
  example:
  - "This example uses the `My.Computer.Info.InstalledUICulture` property to display the name of the operating system's UI culture.  \n  \n [!code-vb[VbVbalrMyComputer#4](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#4)]"
  syntax:
    content: public System.Globalization.CultureInfo InstalledUICulture { get; }
    return:
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>オブジェクトは、コンピューターにインストールされている UI カルチャを表します</xref:System.Globalization.CultureInfo>。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  id: OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "オペレーティング システムの完全名を取得します。"
  remarks: "このプロパティは、Windows Management Instrumentation (WMI) がコンピューターにインストールされている場合に、オペレーティング システムの名前に関する詳細情報を返します。 同じ文字列を返しますそれ以外の場合、`My.Computer.Info.OSPlatform`プロパティで、WMI で提供できるよりも小さいの詳細情報を提供します。"
  example:
  - "This example uses the `My.Computer.Info.OSFullName` property to display the name of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#5](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#5)]"
  syntax:
    content: public string OSFullName { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>オペレーティング システム名を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元のコードには、完全な信頼はありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  id: OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターのオペレーティング システムのプラットフォーム id を取得します。"
  remarks: "`My.Computer.Info.OSPlatform`プロパティと同様の機能を提供する、<xref:System.OperatingSystem.Platform%2A>によって返されるオブジェクトのプロパティ、<xref:System.Environment.OSVersion%2A>プロパティ</xref:System.Environment.OSVersion%2A></xref:System.OperatingSystem.Platform%2A>。"
  example:
  - "This example uses the `My.Computer.Info.OSPlatform` property to display the platform of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#6](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#6)]"
  syntax:
    content: public string OSPlatform { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>のメンバー名から選択したコンピューターのオペレーティング システムのプラットフォーム識別子を含む、 <xref href=&quot;System.PlatformID&quot;> </xref>列挙します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "アプリケーションでは、オペレーティング システム プラットフォーム情報を取得できません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  id: OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターのオペレーティング システムのバージョンを取得します。"
  remarks: "`My.Computer.Info.OSVersion`プロパティが&quot;major.minor.build.revision&quot;とバージョンを書式設定します。       `My.Computer.Info.OSVersion`プロパティと同様の機能を提供する、<xref:System.OperatingSystem.Version%2A>によって返されるオブジェクトのプロパティ、<xref:System.Environment.OSVersion%2A>プロパティ</xref:System.Environment.OSVersion%2A></xref:System.OperatingSystem.Version%2A>。"
  example:
  - "This example uses the `My.Computer.Info.OSVersion` property to display the version of the computer's operating system.  \n  \n [!code-vb[VbVbalrMyComputer#7](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#7)]"
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>オペレーティング システムの現在のバージョン番号を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  exceptions:
  - type: System.ExecutionEngineException
    commentId: T:System.ExecutionEngineException
    description: "アプリケーションでは、オペレーティング システムのバージョン情報を取得できません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  id: TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターの合計物理メモリ量を取得します。"
  remarks: "`My.Computer.Info.TotalPhysicalMemory`プロパティは、Windows XP、Windows 2000 Professional、Windows Server 2003、Windows 2000 Server、または Windows Vista が必要です."
  example:
  - "This example uses the `My.Computer.Info.TotalPhysicalMemory` property to display the total amount of physical memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#8](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#8)]"
  syntax:
    content: public ulong TotalPhysicalMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>コンピューターの物理メモリのバイト数を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "アプリケーションでは、メモリの状態を取得できません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  id: TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  langs:
  - csharp
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターの使用可能な仮想アドレス領域の合計量を取得します。"
  remarks: "`My.Computer.Info.TotalVirtualMemory`プロパティは、Windows XP、Windows 2000 Professional、Windows Server 2003、Windows 2000 Server、または Windows Vista が必要です."
  example:
  - "This example uses the `My.Computer.Info.TotalVirtualMemory` property to display the total amount of virtual memory for the computer on which the code runs.  \n  \n [!code-vb[VbVbalrMyComputer#9](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class1.vb#9)]"
  syntax:
    content: public ulong TotalVirtualMemory { get; }
    return:
      type: System.UInt64
      description: "A <xref uid=&quot;langword_csharp_ULong&quot; name=&quot;ULong&quot; href=&quot;&quot;> </xref>コンピューターの使用可能な仮想アドレス領域のバイト数を格納します。"
  overload: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "アプリケーションでは、メモリの状態を取得できません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ExecutionEngineException
  parent: System
  isExternal: false
  name: ExecutionEngineException
  nameWithType: ExecutionEngineException
  fullName: System.ExecutionEngineException
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo()
  nameWithType: ComputerInfo.ComputerInfo()
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.ComputerInfo()
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
  fullName: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.#ctor*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: ComputerInfo
  nameWithType: ComputerInfo.ComputerInfo
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailablePhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailablePhysicalMemory
  nameWithType: ComputerInfo.AvailablePhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.AvailableVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: AvailableVirtualMemory
  nameWithType: ComputerInfo.AvailableVirtualMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.InstalledUICulture*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: InstalledUICulture
  nameWithType: ComputerInfo.InstalledUICulture
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSFullName*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSFullName
  nameWithType: ComputerInfo.OSFullName
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSPlatform*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSPlatform
  nameWithType: ComputerInfo.OSPlatform
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.OSVersion*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: OSVersion
  nameWithType: ComputerInfo.OSVersion
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalPhysicalMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalPhysicalMemory
  nameWithType: ComputerInfo.TotalPhysicalMemory
- uid: Microsoft.VisualBasic.Devices.ComputerInfo.TotalVirtualMemory*
  parent: Microsoft.VisualBasic.Devices.ComputerInfo
  isExternal: false
  name: TotalVirtualMemory
  nameWithType: ComputerInfo.TotalVirtualMemory
