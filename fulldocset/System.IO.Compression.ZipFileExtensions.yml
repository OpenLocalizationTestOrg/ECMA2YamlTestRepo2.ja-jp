### YamlMime:ManagedReference
items:
- uid: System.IO.Compression.ZipFileExtensions
  id: ZipFileExtensions
  children:
  - System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  - System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  - System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  - System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  - System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  langs:
  - csharp
  name: ZipFileExtensions
  nameWithType: ZipFileExtensions
  fullName: System.IO.Compression.ZipFileExtensions
  type: Class
  summary: "拡張メソッドを提供、 <xref href=&quot;System.IO.Compression.ZipArchive&quot;> </xref>と<xref href=&quot;System.IO.Compression.ZipArchiveEntry&quot;></xref>クラスです。"
  remarks: "ZipFileExtensions クラスには拡張する静的メソッドのみが含まれています、<xref:System.IO.Compression.ZipArchive>と<xref:System.IO.Compression.ZipArchiveEntry>クラス</xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>。 ZipFileExtensions クラスのインスタンスを作成できません。インスタンス<xref:System.IO.Compression.ZipArchive>または<xref:System.IO.Compression.ZipArchiveEntry>。</xref:System.IO.Compression.ZipArchiveEntry></xref:System.IO.Compression.ZipArchive>からこれらのメソッドを使用する代わりに、       拡張メソッドを使用する参照する必要があります、`System.IO.Compression.FileSystem`プロジェクト内のアセンブリ。 `System.IO.Compression.FileSystem`アセンブリでは使用できません[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリ。 ZipFileExtensions そのため、および<xref:System.IO.Compression.ZipFile>クラス (でどちらも、`System.IO.Compression.FileSystem`アセンブリ) では使用できない[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリ</xref:System.IO.Compression.ZipFile>。 [!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリでは、使用する圧縮ファイル内のメソッドを使用して、 <xref:System.IO.Compression.ZipArchive>、 <xref:System.IO.Compression.ZipArchiveEntry>、 <xref:System.IO.Compression.DeflateStream>、 <xref:System.IO.Compression.GZipStream></xref:System.IO.Compression.GZipStream> </xref:System.IO.Compression.DeflateStream> </xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipArchive> 。       ZipFileExtensions クラスには、次の&3; つを拡張するメソッドが含まれています<xref:System.IO.Compression.ZipArchive>:- <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29>- <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29>- <xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29>、ZipFileExtensions クラスを拡張する&2; つのメソッドが含まれています<xref:System.IO.Compression.ZipArchiveEntry>:- <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>- <xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29></xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29> </xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29> </xref:System.IO.Compression.ZipArchiveEntry> </xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%28System.IO.Compression.ZipArchive%2CSystem.String%29> </xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%2CSystem.IO.Compression.CompressionLevel%29> </xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%28System.IO.Compression.ZipArchive%2CSystem.String%2CSystem.String%29> </xref:System.IO.Compression.ZipArchive> 。"
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and extract the contents of the archive to a directory.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/t-system.io.compression._0_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/t-system.io.compression._0_1.vb)]  \n  \n The following example shows how to iterate through the contents of a zip archive and extract files that have a .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/t-system.io.compression._0_2.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/t-system.io.compression._0_2.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public static class ZipFileExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  id: CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: CreateEntryFromFile(ZipArchive,String,String)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "圧縮して、zip アーカイブへの追加によってファイルをアーカイブします。"
  remarks: "アーカイブに新しいエントリで指定されたファイルの内容を格納する`sourceFileName`です。 指定した名前のエントリ (`entryName`) 既に存在する、アーカイブと同じ名前の&2; 番目のエントリを作成します。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>、エントリのプロパティは、ファイル システム上のファイルが変更された最後の時刻に設定されています</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。"
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/2ae78e9a-102e-41b0-a8a5-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/2ae78e9a-102e-41b0-a8a5-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName);
    parameters:
    - id: destination
      type: System.IO.Compression.ZipArchive
      description: "ファイルを追加する zip アーカイブ。"
    - id: sourceFileName
      type: System.String
      description: "アーカイブするファイルへのパス。 相対パスまたは絶対パスのいずれかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: entryName
      type: System.String
      description: "Zip アーカイブ内に作成するエントリの名前です。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip アーカイブ内の新しいエントリのラッパーです。"
  overload: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。       -or-       <code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceFileName</code>正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "によって指定されたファイル<code> sourceFileName </code>開くことができません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>sourceFileName</code>ディレクトリを指定します。       - または - で指定されたファイルへのアクセスに必要なアクセス許可が呼び出し元にない<code>sourceFileName</code>です。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "によって指定されたファイル<code> sourceFileName </code>が見つかりません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> sourceFileName </code>パラメーターは、形式が無効です。       - または - zip アーカイブが書き込みをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  id: CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "指定した圧縮レベルを使用して、zip アーカイブへの追加の圧縮によるファイルをアーカイブします。"
  remarks: "アーカイブに新しいエントリで指定されたファイルの内容を格納する`sourceFileName`です。 指定した名前のエントリ (`entryName`) 既に存在する、アーカイブと同じ名前の&2; 番目のエントリを作成します。 <xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>、エントリのプロパティは、ファイル システム上のファイルが変更された最後の時刻に設定されています</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。"
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and specify the compression level.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#4](~/add/codesnippet/csharp/75299a50-40f3-40da-b38c-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#4](~/add/codesnippet/visualbasic/75299a50-40f3-40da-b38c-_1.vb)]"
  syntax:
    content: public static System.IO.Compression.ZipArchiveEntry CreateEntryFromFile (this System.IO.Compression.ZipArchive destination, string sourceFileName, string entryName, System.IO.Compression.CompressionLevel compressionLevel);
    parameters:
    - id: destination
      type: System.IO.Compression.ZipArchive
      description: "ファイルを追加する zip アーカイブ。"
    - id: sourceFileName
      type: System.String
      description: "アーカイブするファイルへのパス。 相対パスまたは絶対パスのいずれかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: entryName
      type: System.String
      description: "Zip アーカイブ内に作成するエントリの名前です。"
    - id: compressionLevel
      type: System.IO.Compression.CompressionLevel
      description: "エントリの作成時に速度または圧縮の有効性を強調するかどうかを示す列挙値の&1; つ。"
    return:
      type: System.IO.Compression.ZipArchiveEntry
      description: "Zip アーカイブ内の新しいエントリのラッパーです。"
  overload: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceFileName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。       -or-       <code>entryName</code> is <xref:System.String>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceFileName</code>or <code>entryName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "<code>sourceFileName</code>正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "<code> sourceFileName </code>、指定したパス、ファイル名、またはその両方がシステム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "によって指定されたファイル<code> sourceFileName </code>開くことができません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<code>sourceFileName</code>ディレクトリを指定します。       - または - で指定されたファイルへのアクセスに必要なアクセス許可が呼び出し元にない<code>sourceFileName</code>です。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "によって指定されたファイル<code> sourceFileName </code>が見つかりません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> sourceFileName </code>パラメーターは、形式が無効です。       - または - zip アーカイブが書き込みをサポートしません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Zip アーカイブが破棄されています。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  id: ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToDirectory(ZipArchive,String)
  nameWithType: ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "ディレクトリの zip アーカイブにファイル システム上のすべてのファイルを抽出します。"
  remarks: "このメソッドで指定されたディレクトリを作成`destinationDirectoryName`です。 コピー先ディレクトリが既に存在する場合このメソッドは上書きされません。スロー、<xref:System.IO.IOException>例外です</xref:System.IO.IOException>。 メソッドには、zip アーカイブ内の階層を反映するサブディレクトリも作成されます。 抽出中にエラーが発生した場合、アーカイブは部分的に展開されたままです。 抽出された各ファイルが同じ相対パスで指定されたディレクトリに`destinationDirectoryName`のソースとしてエントリが、アーカイブのルートです。"
  example:
  - "The following example shows how to create a new entry in a zip archive from an existing file, and extract the archive to a new directory. In order to compiler this code example, you must reference the `System.IO.Compression` and `System.IO.Compression.FileSystem` assemblies in your project.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#3](~/add/codesnippet/csharp/4accbbec-99e5-4a5c-a5ba-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#3](~/add/codesnippet/visualbasic/4accbbec-99e5-4a5c-a5ba-_1.vb)]"
  syntax:
    content: public static void ExtractToDirectory (this System.IO.Compression.ZipArchive source, string destinationDirectoryName);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchive
      description: "ファイルを抽出する zip アーカイブ。"
    - id: destinationDirectoryName
      type: System.String
      description: "抽出ファイルを配置するディレクトリへのパス。 相対パスまたは絶対パスのいずれかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
  overload: System.IO.Compression.ZipFileExtensions.ExtractToDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationDirectoryName</code><xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定されたパスは、システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定されたディレクトリ<code> destinationDirectoryName </code>既に存在します。       - または -、アーカイブのエントリの名前が<xref:System.String>空白しか含んでいない、または少なくとも&1; つの無効な文字が含まれています</xref:System.String>。       - または - で指定されたディレクトリ外にあるファイルを作成、アーカイブからエントリを抽出する<code> destinationDirectoryName</code>です。 (たとえば、起こり、エントリ名に親ディレクトリのアクセサーが含まれている場合。)      または、アーカイブ内の&2; つ以上のエントリが同じ名前に設定します。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、宛先ディレクトリへの書き込みに必要なアクセス許可がありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationDirectoryName</code>無効な形式が含まれています。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "アーカイブ エントリが見つからないかが破損しています。       - または - アーカイブ エントリはサポートされていない圧縮方式を使用して圧縮されました。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  id: ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToFile(ZipArchiveEntry,String)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "ファイルを zip アーカイブのエントリを抽出します。"
  remarks: "コピー先ファイルが既に存在する場合このメソッドは上書きされません。スロー、<xref:System.IO.IOException>例外です</xref:System.IO.IOException>。 既存のファイルを上書きするを使用して、<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>メソッド オーバー ロードを代用します</xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>。       ファイルの最終書き込み時刻が、前回の zip アーカイブ内のエントリが変更された; に設定されています。この値は、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>プロパティ</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。       このメソッドを使用してディレクトリを抽出することはできません。使用して、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>メソッド代わりにします</xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>。"
  example:
  - "The following example shows how to iterate through the contents of a zip archive file and extract files that have a .txt extension.  \n  \n [!code-cs[System.IO.Compression.ZipArchive#1](~/add/codesnippet/csharp/8bd2b877-de70-46a7-bd7b-_1.cs)]\n [!code-vb[System.IO.Compression.ZipArchive#1](~/add/codesnippet/visualbasic/8bd2b877-de70-46a7-bd7b-_1.vb)]"
  syntax:
    content: public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchiveEntry
      description: "ファイルを抽出する zip アーカイブ エントリ。"
    - id: destinationFileName
      type: System.String
      description: "エントリの内容から作成するファイルのパス。 相対パスまたは絶対パスのいずれかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
  overload: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>長さ&0; の文字列は、空白しか含んでいないかで定義されている&1; つまたは複数の無効な文字が含まれています<xref:System.IO.Path.InvalidPathChars>です。       - または -<code>destinationFileName</code>ディレクトリを指定します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定したパス、ファイル名、またはその両方に、システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationFileName</code>既に存在します。       または、I/O エラーが発生しました。       または、エントリが現在開いている書き込み用です。       - または - アーカイブからエントリは削除されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、新しいファイルの作成に必要なアクセス許可がありません。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "エントリは、アーカイブから不足している、またはが壊れており、読み取ることができません。       または、エントリがサポートされていない圧縮方式を使用して圧縮されました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このエントリが属している zip アーカイブが破棄されています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationFileName</code>無効な形式です。       または、このエントリの zip アーカイブが開かれた<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>モードで、エントリの取得が許可されていません。"
  platform:
  - net462
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  id: ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  parent: System.IO.Compression.ZipFileExtensions
  langs:
  - csharp
  name: ExtractToFile(ZipArchiveEntry,String,Boolean)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  type: Method
  assemblies:
  - System.IO.Compression.FileSystem
  namespace: System.IO.Compression
  summary: "ファイルを zip アーカイブのエントリを抽出し、必要に応じて、同じ名前を持つ既存のファイルを上書きします。"
  remarks: "ファイルの最終書き込み時刻が、前回の zip アーカイブ内のエントリが変更された; に設定されています。この値は、<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>プロパティ</xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>。       このメソッドを使用してディレクトリを抽出することはできません。使用して、<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>メソッド代わりにします</xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>。"
  example:
  - "The following example shows how to iterate through the contents of a zip archive file, and extract files that have a .txt extension. It overwrites an existing file that has the same name in the destination folder. In order to compiler this code example, you must reference the `System.IO.Compression` and `System.IO.Compression.FileSystem` assemblies in your project.  \n  \n [!code-vb[System.IO.Compression.ZipArchive#2](~/add/codesnippet/visualbasic/8c3e1507-3ebb-41ad-8fc8-_1.vb)]\n [!code-cs[System.IO.Compression.ZipArchive#2](~/add/codesnippet/csharp/8c3e1507-3ebb-41ad-8fc8-_1.cs)]"
  syntax:
    content: public static void ExtractToFile (this System.IO.Compression.ZipArchiveEntry source, string destinationFileName, bool overwrite);
    parameters:
    - id: source
      type: System.IO.Compression.ZipArchiveEntry
      description: "ファイルを抽出する zip アーカイブ エントリ。"
    - id: destinationFileName
      type: System.String
      description: "エントリの内容から作成するファイルのパス。 相対パスまたは絶対パスのいずれかを指定することができます。 相対パスは、現在の作業ディレクトリに対して相対的に解釈されます。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リンク先のファイルと同じ名前を持つ既存のファイルを上書きするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>長さ&0; の文字列は、空白しか含んでいないかで定義されている&1; つまたは複数の無効な文字が含まれています<xref:System.IO.Path.InvalidPathChars>です。       - または -<code>destinationFileName</code>ディレクトリを指定します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "指定したパス、ファイル名、またはその両方に、システム定義の最大長を超えています。 たとえば、Windows ベースのプラットフォームでは、パスは 248 文字以下し、ファイル名は 260 文字を超えない必要があります。"
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "指定されたパスが正しくありません (たとえば、上にある、マップされていないドライブ)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>destinationFileName</code>既に存在し、<code>overwrite</code>は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       または、I/O エラーが発生しました。       または、エントリが現在開いている書き込み用です。       - または - アーカイブからエントリは削除されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、新しいファイルの作成に必要なアクセス許可がありません。"
  - type: System.IO.InvalidDataException
    commentId: T:System.IO.InvalidDataException
    description: "エントリは、アーカイブから不足している、またはが壊れており、読み取ることができません。       または、エントリがサポートされていない圧縮方式を使用して圧縮されました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "このエントリが属している zip アーカイブが破棄されています。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>destinationFileName</code>無効な形式です。       または、このエントリの zip アーカイブが開かれた<xref href=&quot;System.IO.Compression.ZipArchiveMode&quot;></xref>モードで、エントリの取得が許可されていません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.InvalidDataException
  isExternal: true
  name: System.IO.InvalidDataException
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile(ZipArchive,String,String)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String)
- uid: System.IO.Compression.ZipArchiveEntry
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchiveEntry
  nameWithType: ZipArchiveEntry
  fullName: System.IO.Compression.ZipArchiveEntry
- uid: System.IO.Compression.ZipArchive
  parent: System.IO.Compression
  isExternal: false
  name: ZipArchive
  nameWithType: ZipArchive
  fullName: System.IO.Compression.ZipArchive
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(System.IO.Compression.ZipArchive@,System.String,System.String,System.IO.Compression.CompressionLevel)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  nameWithType: ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
  fullName: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
- uid: System.IO.Compression.CompressionLevel
  parent: System.IO.Compression
  isExternal: true
  name: CompressionLevel
  nameWithType: CompressionLevel
  fullName: System.IO.Compression.CompressionLevel
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(System.IO.Compression.ZipArchive@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToDirectory(ZipArchive,String)
  nameWithType: ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToDirectory(ZipArchive,String)
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile(ZipArchiveEntry,String)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String)
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry@,System.String,System.Boolean)
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile(ZipArchiveEntry,String,Boolean)
  nameWithType: ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
  fullName: System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Compression.ZipFileExtensions.CreateEntryFromFile*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: CreateEntryFromFile
  nameWithType: ZipFileExtensions.CreateEntryFromFile
- uid: System.IO.Compression.ZipFileExtensions.ExtractToDirectory*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToDirectory
  nameWithType: ZipFileExtensions.ExtractToDirectory
- uid: System.IO.Compression.ZipFileExtensions.ExtractToFile*
  parent: System.IO.Compression.ZipFileExtensions
  isExternal: false
  name: ExtractToFile
  nameWithType: ZipFileExtensions.ExtractToFile
