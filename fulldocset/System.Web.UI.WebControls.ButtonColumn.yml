### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ButtonColumn
  id: ButtonColumn
  children:
  - System.Web.UI.WebControls.ButtonColumn.#ctor
  - System.Web.UI.WebControls.ButtonColumn.ButtonType
  - System.Web.UI.WebControls.ButtonColumn.CausesValidation
  - System.Web.UI.WebControls.ButtonColumn.CommandName
  - System.Web.UI.WebControls.ButtonColumn.DataTextField
  - System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  - System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  - System.Web.UI.WebControls.ButtonColumn.Initialize
  - System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.ButtonColumn.Text
  - System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  langs:
  - csharp
  name: ButtonColumn
  nameWithType: ButtonColumn
  fullName: System.Web.UI.WebControls.ButtonColumn
  type: Class
  summary: "列の種類、 <xref href=&quot;System.Web.UI.WebControls.DataGrid&quot;> </xref>を含むユーザー定義のボタン コントロールです。"
  remarks: "ButtonColumn クラスを使用して、<xref:System.Web.UI.WebControls.DataGrid>の各行に対応するボタンを作成するコントロールを<xref:System.Web.UI.WebControls.DataGrid>コントロール</xref:System.Web.UI.WebControls.DataGrid></xref:System.Web.UI.WebControls.DataGrid>。 設定して、ボタンに表示されるキャプションを指定、<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>プロパティ</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>。 設定した場合、<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>プロパティ、ButtonColumn オブジェクト共有同じキャプション内のすべてのボタン</xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>。 また、データ ソースのフィールドに ButtonColumn ボタンをバインドできます。 これにより、各ボタンの異なるキャプションを表示できます。 指定されたフィールドの値は、テキスト キャプションに使用されます。 設定、 <xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>、ButtonColumn をデータ ソースのフィールドにバインドするプロパティ</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>。       設定して、ボタンに表示されるキャプションの書式を設定することができます、<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>書式指定文字列を持つプロパティです</xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>。       ButtonColumn のボタンをクリックすると発生、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>イベント</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>。 イベント ハンドラーを提供することで、ボタンがクリックされたときに実行されるアクションをプログラムから制御することができます、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>イベント</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>。       既定では、ButtonColumn のボタンがクリックされたときにページの検証は実行されません。 ページの検証は、検証コントロールによって指定されている検証規則を合格すべて ページで、検証に関連付けられている入力コントロールを制御するかどうかを判断します。 ボタンがクリックされたときにページの検証を実行するには設定、<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>プロパティを`true`</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>。"
  example:
  - "The following code example demonstrates how to use ButtonColumn class in a <xref:System.Web.UI.WebControls.DataGrid> control to create **Add** buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_178_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_178_1.vb)]"
  syntax:
    content: 'public class ButtonColumn : System.Web.UI.WebControls.DataGridColumn'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataGridColumn
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataGridColumn.DesignMode
  - System.Web.UI.WebControls.DataGridColumn.FooterStyle
  - System.Web.UI.WebControls.DataGridColumn.FooterText
  - System.Web.UI.WebControls.DataGridColumn.HeaderImageUrl
  - System.Web.UI.WebControls.DataGridColumn.HeaderStyle
  - System.Web.UI.WebControls.DataGridColumn.HeaderText
  - System.Web.UI.WebControls.DataGridColumn.IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.ItemStyle
  - System.Web.UI.WebControls.DataGridColumn.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.OnColumnChanged
  - System.Web.UI.WebControls.DataGridColumn.Owner
  - System.Web.UI.WebControls.DataGridColumn.SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.SortExpression
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataGridColumn.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ToString
  - System.Web.UI.WebControls.DataGridColumn.TrackViewState
  - System.Web.UI.WebControls.DataGridColumn.ViewState
  - System.Web.UI.WebControls.DataGridColumn.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>クラスです。"
  remarks: "ButtonColumn コンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.ButtonColumn>クラス</xref:System.Web.UI.WebControls.ButtonColumn>の新しいインスタンスを初期化"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.ButtonColumn> class and add it to the <xref:System.Web.UI.WebControls.DataGrid.Columns%2A> collection.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_167_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_167_1.vb)]"
  syntax:
    content: public ButtonColumn ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  id: ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に表示するボタンの種類、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクト。"
  remarks: "ButtonType プロパティを使用して、指定するかどうかのボタン、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクトがリンクまたはプッシュ ボタンとして表示されます</xref:System.Web.UI.WebControls.ButtonColumn>。 次の表には、使用可能な設定が一覧表示します。      |ボタンの種類 |表示 |  |-----------------|-------------|  |<xref:System.Web.UI.WebControls.ButtonColumnType>|リンク |。  |<xref:System.Web.UI.WebControls.ButtonColumnType>|ボタン コントロールです |。      内のボタンをクリックすると、<xref:System.Web.UI.WebControls.ButtonColumn>を生成、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>イベント</xref:System.Web.UI.WebControls.DataGrid.ItemCommand></xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumnType></xref:System.Web.UI.WebControls.ButtonColumnType>。 イベント ハンドラーを提供することで、ボタンがクリックされたときに実行されるアクションをプログラムから制御することができます、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>イベント</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how use the ButtonType property to specify that the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object are displayed as push buttons.  \n  \n [!code-cs[ButtonColumnButtonType#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_119_1.cs)]\n [!code-vb[ButtonColumnButtonType#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_119_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.ButtonColumnType ButtonType { get; set; }
    return:
      type: System.Web.UI.WebControls.ButtonColumnType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_LinkButton&quot; name=&quot;LinkButton&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された列のデータ型が、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumnType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定時のボタンに検証を実行するかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクトをクリックします。"
  remarks: "既定では、ページの検証は実行されませんでボタン、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクトをクリックします</xref:System.Web.UI.WebControls.ButtonColumn>。 ページの検証は、検証コントロールによって指定されている検証規則を合格すべて ページで、検証に関連付けられている入力コントロールを制御するかどうかを判断します。 ときにボタンのページ検証を実行する、<xref:System.Web.UI.WebControls.ButtonColumn>がクリックすると、プロパティを設定 CausesValidation `true`</xref:System.Web.UI.WebControls.ButtonColumn> 。       CausesValidation プロパティの値が`true`、使用することも、<xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>プロパティを対象の検証グループの名前を指定する、<xref:System.Web.UI.WebControls.ButtonColumn>が原因で検証します</xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumn.ValidationGroup%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ときにボタンの検証を実行する場合、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>がクリックされた場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定時のボタンを実行するコマンドを表す文字列、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクトをクリックします。"
  remarks: "CommandName プロパティを使用するように、コマンド名を関連付ける`Add`または`Remove`ボタンを使用します。 ときにボタンを実行するアクションを識別する任意の文字列に CommandName プロパティを設定することができます、<xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName>オブジェクトをクリックします</xref:System.Web.UI.WebControls.ButtonColumn?displayProperty=fullName>。 次を指定できますプログラムからのイベント ハンドラーで、コマンド名、<xref:System.Web.UI.WebControls.DataGrid.ItemCommand>イベントと適切なアクションを実行します</xref:System.Web.UI.WebControls.DataGrid.ItemCommand>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the CommandName property to associate a command name with a button. Then, the command name of the clicked button is determined programmatically in the event handler for the <xref:System.Web.UI.WebControls.DataGrid.ItemCommand> event and the appropriate action is performed.  \n  \n [!code-cs[ButtonColumnCommandName#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_753_1.aspx)]\n [!code-vb[ButtonColumnCommandName#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_753_1.aspx)]"
  syntax:
    content: public virtual string CommandName { get; set; }
    return:
      type: System.String
      description: "ときにボタンを実行するコマンドを表す文字列、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>をクリックします。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonColumn.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  id: DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、フィールド名にバインドするデータ ソース、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクト。"
  remarks: "DataTextField プロパティにバインドするデータ ソースからのフィールド名の指定を使用して、<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>のボタンのプロパティ、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクト</xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>。       列を直接設定する代わりにフィールドにバインド、<xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>プロパティでは、ボタンの異なるキャプションを表示することができます、<xref:System.Web.UI.WebControls.ButtonColumn>指定したフィールドに値を使用しています</xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumn.Text%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to use the DataTextField property to bind the <xref:System.Web.UI.WebControls.ButtonColumn> object to a field in a data source.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_814_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_814_1.aspx)]"
  syntax:
    content: public virtual string DataTextField { get; set; }
    return:
      type: System.String
      description: "バインドするフィールド名、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  id: DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の各ボタンのキャプションの表示形式を指定する文字列。"
  remarks: "DataTextFormatString プロパティ内のボタンのキャプションに対するカスタムの表示形式を使用して、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクト</xref:System.Web.UI.WebControls.ButtonColumn>。       データ形式の文字列形式で、コロンで区切られた&2; つの部分から成る`{A:Bxx}`です。 たとえば、書式設定文字列`{0:F2}`小数点以下&2; 桁の番号、固定小数点を表示するセルの書式を設定します。      > [!NOTE] > 文字列全体があることを示す書式指定文字列とリテラル文字列ではなくよう中かっこで囲む必要があります。 かっこの外側の任意のテキストは、リテラル テキストとして表示されます。       コロンの前に値 (`A`一般的な例で) パラメーターの&0; から始まるリストのパラメーターのインデックスを指定します。      > [!NOTE] > 各セルには 1 つだけの値がないために、この値を 0 に設定することができます。       コロンの後に文字 (`B`一般的な例で)、値を表示する形式を指定します。 次の表は、一般的な形式を示します。      |形式指定文字 |数値が表示されます |  |----------------------|--------------------------------|  |`C`|通貨の形式です |。  |`D`|10 進形式です |。  |`E`|指数 (指数) 形式です |。  |`F`|固定形式です |。  |`G`|一般的な形式です |。  |`N`|数値書式 |。  |`X`|16 進数形式です |。     > [!NOTE] > 形式の文字が大文字小文字を区別を除く`X`、指定した場合、16 進文字が表示されます。       書式指定文字の後の値 (`xx`一般的な例で) の有効桁数または小数点以下桁数を表示する数を指定します。       このプロパティの値は、ビュー ステートに格納されます。       書式指定文字列の詳細については、次を参照してください。[型の書式設定](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the DataTextFormatString property to display the caption of each button in the <xref:System.Web.UI.WebControls.ButtonColumn> object in currency format.  \n  \n [!code-vb[ButtonColumnDataTextField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1201_1.aspx)]\n [!code-cs[ButtonColumnDataTextField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1201_1.aspx)]"
  syntax:
    content: public virtual string DataTextFormatString { get; set; }
    return:
      type: System.String
      description: "各ボタンのキャプションの表示形式を指定する文字列。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  id: FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した値で示される形式に変換、<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>プロパティ</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>。"
  remarks: "FormatDataTextValue メソッドで示される形式の指定された値の変換を使用して、<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>プロパティ</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>。      > [!NOTE] >、FormatDataTextValue メソッドは、文字列を返しますと等価の値の場合、<xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>プロパティが設定されていません</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString%2A>。"
  syntax:
    content: protected virtual string FormatDataTextValue (object dataTextValue);
    parameters:
    - id: dataTextValue
      type: System.Object
      description: "書式を設定する値。"
    return:
      type: System.String
      description: "<code> dataTextValue </code> <xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>.</xref:System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*>によって示される形式に変換"
  overload: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  id: Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "リセット、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>を初期状態のオブジェクト。"
  remarks: "Initialize メソッドを使用して、リセット、<xref:System.Web.UI.WebControls.ButtonColumn>を初期状態のオブジェクト</xref:System.Web.UI.WebControls.ButtonColumn>。"
  syntax:
    content: public override void Initialize ();
    parameters: []
  overload: System.Web.UI.WebControls.ButtonColumn.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  id: InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のセルのリセット、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>を初期状態のオブジェクト。"
  remarks: "InitializeCell メソッドで指定されたセルのリセット、<xref:System.Web.UI.WebControls.ButtonColumn>を初期状態のオブジェクト</xref:System.Web.UI.WebControls.ButtonColumn>。"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.TableCell cell, int columnIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.TableCell
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>をリセットするセルを表すです。"
    - id: columnIndex
      type: System.Int32
      description: "セルが配置されている列の番号。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  id: Text
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のボタンに表示されるキャプション、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクト。"
  remarks: "指定するかのボタンに表示されるキャプションを調べるテキスト プロパティを使用して、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクト</xref:System.Web.UI.WebControls.ButtonColumn>。      > [!NOTE] > 場合は、Text プロパティを設定すると、すべてのボタンをクリックして、<xref:System.Web.UI.WebControls.ButtonColumn>同じキャプションを共有します</xref:System.Web.UI.WebControls.ButtonColumn>。       また、バインド、<xref:System.Web.UI.WebControls.ButtonColumn>データ ソースのフィールドにします</xref:System.Web.UI.WebControls.ButtonColumn>。 これにより、指定したフィールドに値を使用して、列にボタンの異なるキャプションを表示できます。 設定、<xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>バインドするプロパティ、<xref:System.Web.UI.WebControls.ButtonColumn>データ ソースのフィールドにします</xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumn.DataTextField%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption for the buttons in the <xref:System.Web.UI.WebControls.ButtonColumn> object.  \n  \n [!code-vb[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_349_1.aspx)]\n [!code-cs[Classic ButtonColumn.ButtonType Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_349_1.aspx)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "ボタンに表示されるキャプション、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonColumn.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の検証コントロールのグループを<xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;></xref>オブジェクトは、サーバーへのポストバック時に検証を実行します。"
  remarks: "検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。 各グループの検証は、ページ上の他の検証グループとは無関係に検証できます。 ValidationGroup プロパティを使用する検証グループの名前を指定して、<xref:System.Web.UI.WebControls.ButtonColumn>オブジェクトは、サーバーへのポストバック時に検証を実行します</xref:System.Web.UI.WebControls.ButtonColumn>。       ValidationGroup プロパティは、有効される場合にのみの値、<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>プロパティに設定されている`true`</xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>。 指定されたグループの一部である ValidationGroup プロパティの値を指定すると、検証を制御するだけが検証されるときに、<xref:System.Web.UI.WebControls.ButtonColumn>投稿をサーバーに戻す</xref:System.Web.UI.WebControls.ButtonColumn>。 ValidationGroup プロパティの値を指定しないかどうか、<xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>プロパティに設定されている`true`、検証グループに割り当てられていないページ上のすべての検証コントロールが検証されるときに、<xref:System.Web.UI.WebControls.ButtonColumn>投稿をサーバーに戻す</xref:System.Web.UI.WebControls.ButtonColumn></xref:System.Web.UI.WebControls.ButtonColumn.CausesValidation%2A>。       このプロパティの値は、ビュー ステートに格納されます。"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "検証のグループを対象の制御、 <xref href=&quot;System.Web.UI.WebControls.ButtonColumn&quot;> </xref>オブジェクトは、サーバーへのポストバック時に検証を実行します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataGridColumn
  isExternal: false
  name: System.Web.UI.WebControls.DataGridColumn
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn()
  nameWithType: ButtonColumn.ButtonColumn()
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonColumn()
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
  fullName: System.Web.UI.WebControls.ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumnType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ButtonColumnType
  nameWithType: ButtonColumnType
  fullName: System.Web.UI.WebControls.ButtonColumnType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
  fullName: System.Web.UI.WebControls.ButtonColumn.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
  fullName: System.Web.UI.WebControls.ButtonColumn.CommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
  fullName: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(System.Object)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue(Object)
  nameWithType: ButtonColumn.FormatDataTextValue(Object)
  fullName: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize()
  nameWithType: ButtonColumn.Initialize()
  fullName: System.Web.UI.WebControls.ButtonColumn.Initialize()
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell(System.Web.UI.WebControls.TableCell,System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell(TableCell,Int32,ListItemType)
  nameWithType: ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
  fullName: System.Web.UI.WebControls.ButtonColumn.InitializeCell(TableCell,Int32,ListItemType)
- uid: System.Web.UI.WebControls.TableCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCell
  nameWithType: TableCell
  fullName: System.Web.UI.WebControls.TableCell
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.ButtonColumn.Text
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
  fullName: System.Web.UI.WebControls.ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
  fullName: System.Web.UI.WebControls.ButtonColumn.ValidationGroup
- uid: System.Web.UI.WebControls.ButtonColumn.#ctor*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonColumn
  nameWithType: ButtonColumn.ButtonColumn
- uid: System.Web.UI.WebControls.ButtonColumn.ButtonType*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ButtonType
  nameWithType: ButtonColumn.ButtonType
- uid: System.Web.UI.WebControls.ButtonColumn.CausesValidation*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CausesValidation
  nameWithType: ButtonColumn.CausesValidation
- uid: System.Web.UI.WebControls.ButtonColumn.CommandName*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: CommandName
  nameWithType: ButtonColumn.CommandName
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextField*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextField
  nameWithType: ButtonColumn.DataTextField
- uid: System.Web.UI.WebControls.ButtonColumn.DataTextFormatString*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: DataTextFormatString
  nameWithType: ButtonColumn.DataTextFormatString
- uid: System.Web.UI.WebControls.ButtonColumn.FormatDataTextValue*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: FormatDataTextValue
  nameWithType: ButtonColumn.FormatDataTextValue
- uid: System.Web.UI.WebControls.ButtonColumn.Initialize*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Initialize
  nameWithType: ButtonColumn.Initialize
- uid: System.Web.UI.WebControls.ButtonColumn.InitializeCell*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: InitializeCell
  nameWithType: ButtonColumn.InitializeCell
- uid: System.Web.UI.WebControls.ButtonColumn.Text*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: Text
  nameWithType: ButtonColumn.Text
- uid: System.Web.UI.WebControls.ButtonColumn.ValidationGroup*
  parent: System.Web.UI.WebControls.ButtonColumn
  isExternal: false
  name: ValidationGroup
  nameWithType: ButtonColumn.ValidationGroup
