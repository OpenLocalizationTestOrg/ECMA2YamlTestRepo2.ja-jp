### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Container
  id: Container
  children:
  - System.ComponentModel.Container.#ctor
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Components
  - System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  - System.ComponentModel.Container.Dispose
  - System.ComponentModel.Container.Dispose(System.Boolean)
  - System.ComponentModel.Container.Finalize
  - System.ComponentModel.Container.GetService(System.Type)
  - System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  - System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  langs:
  - csharp
  name: Container
  nameWithType: Container
  fullName: System.ComponentModel.Container
  type: Class
  summary: "0 個以上のコンポーネントをカプセル化します。"
  remarks: "コンテナー クラスは、の既定の実装、<xref:System.ComponentModel.IContainer>インターフェイス</xref:System.ComponentModel.IContainer>。       コンテナーとは、カプセル化し、0 個以上のコンポーネントを追跡するオブジェクトです。 このコンテキストでは、包含構造は、論理的なコンテインメント、非ビジュアルの包含を指します。 コンポーネントと、さまざまな視覚的および非ビジュアルの両方であるシナリオを含むシナリオでコンテナーを使用することができます。       先入れ先出しの一覧でも、コンテナー内のコンポーネントの順序を定義するコンテナー内のコンポーネントが追跡されます。 追加したコンポーネントは、リストの末尾に付加されます。"
  syntax:
    content: 'public class Container : IDisposable, System.ComponentModel.IContainer'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IContainer
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Container.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Container&quot;> </xref>クラスです。"
  syntax:
    content: public Container ();
    parameters: []
  overload: System.ComponentModel.Container.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  id: Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した追加<xref href=&quot;System.ComponentModel.Component&quot;></xref>を<xref href=&quot;System.ComponentModel.Container&quot;></xref>です。 コンポーネントは、名前がありません。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。       新しい<xref:System.ComponentModel.Component>がリストの末尾に追加します</xref:System.ComponentModel.Component>。"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "追加するコンポーネントです。"
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  id: Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "指定した追加<xref href=&quot;System.ComponentModel.Component&quot;></xref>を<xref href=&quot;System.ComponentModel.Container&quot;></xref>名前を割り当てます。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。       新しい<xref:System.ComponentModel.Component>がリストの末尾に追加します</xref:System.ComponentModel.Component>。"
  syntax:
    content: public virtual void Add (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "追加するコンポーネントです。"
    - id: name
      type: System.String
      description: "成分に代入する、大文字と小文字の一意の名前。       - または - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、名前のないコンポーネントが残っています。"
  overload: System.ComponentModel.Container.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>一意ではありません。"
  platform:
  - net462
- uid: System.ComponentModel.Container.Components
  id: Components
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "内のすべてのコンポーネントを取得、 <xref href=&quot;System.ComponentModel.Container&quot;></xref>です。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。       <xref:System.ComponentModel.Container>。</xref:System.ComponentModel.Container>に追加されたと、コレクション内のコンポーネントが同じ順序で格納されます。"
  syntax:
    content: public virtual System.ComponentModel.ComponentCollection Components { get; }
    return:
      type: System.ComponentModel.ComponentCollection
      description: "コンポーネントを格納するコレクション、 <xref href=&quot;System.ComponentModel.Container&quot;></xref>です。"
  overload: System.ComponentModel.Container.Components*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  id: CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "サイトを作成<xref href=&quot;System.ComponentModel.ISite&quot;></xref>の指定された<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>し、サイトに指定された名前を割り当てます。"
  remarks: "場合、`name`パラメーターは`null`、<xref:System.ComponentModel.IComponent>を追加、<xref:System.ComponentModel.Container>識別名がない場合</xref:System.ComponentModel.Container></xref:System.ComponentModel.IComponent>。       このメソッドは、派生クラスでオーバーライドできます。 実装するクラスを使用して、カスタム実装を提供できます CreateSite メソッドをオーバーライドする必要がある実行者、<xref:System.ComponentModel.ISite>インターフェイス</xref:System.ComponentModel.ISite>。"
  syntax:
    content: protected virtual System.ComponentModel.ISite CreateSite (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>のサイトを作成します。"
    - id: name
      type: System.String
      description: "割り当てる名前`component`、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を割り当てられている名前をスキップします。"
    return:
      type: System.ComponentModel.ISite
      description: "新しく作成されたサイトです。"
  overload: System.ComponentModel.Container.CreateSite*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose
  id: Dispose
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ComponentModel.Container&quot;></xref>です。"
  remarks: "<xref:System.ComponentModel.Container.Dispose%2A> <xref:System.ComponentModel.Container>。</xref:System.ComponentModel.Container>の使用が終了したときに</xref:System.ComponentModel.Container.Dispose%2A>呼び出す <xref:System.ComponentModel.Container.Dispose%2A>メソッドによって、<xref:System.ComponentModel.Container>使用不可の状態</xref:System.ComponentModel.Container></xref:System.ComponentModel.Container.Dispose%2A>。 呼び出した後<xref:System.ComponentModel.Container.Dispose%2A>、に対するすべての参照を解放する必要があります、<xref:System.ComponentModel.Container>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Container>占有されていた</xref:System.ComponentModel.Container></xref:System.ComponentModel.Container></xref:System.ComponentModel.Container.Dispose%2A>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.ComponentModel.Container.Dispose%2A><xref:System.ComponentModel.Container></xref:System.ComponentModel.Container>の最後の参照を解放する前に</xref:System.ComponentModel.Container.Dispose%2A>、必ず呼び出して。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.ComponentModel.Container>オブジェクトの`Finalize`メソッド</xref:System.ComponentModel.Container>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.ComponentModel.Container&quot;> </xref>、マネージ リソースも解放します。"
  remarks: "このメソッドは、パブリック`Dispose`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.ComponentModel.Container>参照。</xref:System.ComponentModel.Container> 。 このメソッドを呼び出して、`Dispose`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.ComponentModel.Container.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Finalize
  id: Finalize
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "アンマネージ リソースを解放し、前に他のクリーンアップ操作を実行、 <xref href=&quot;System.ComponentModel.Container&quot;> </xref>がガベージ コレクションによって回収されます。"
  remarks: "このメソッドは<xref:System.Object.Finalize%2A>。</xref:System.Object.Finalize%2A> アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッド</xref:System.GC.SuppressFinalize%2A>。       詳細については、次を参照してください。 [Finalize メソッドおよびデストラクター](http://msdn.microsoft.com/en-us/fd376774-1643-499b-869e-9546a3aeea70)、[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)、および[Finalize メソッドをオーバーライドする](http://msdn.microsoft.com/en-us/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)です。"
  syntax:
    content: ~Container ();
    parameters: []
  overload: System.ComponentModel.Container.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "使用可能になる場合は、指定した型のサービス オブジェクトを取得します。"
  remarks: "場合、このメソッドの既定の実装がクラスの現在のインスタンスを返します`service`は、 <xref:System.ComponentModel.IContainer>、それ以外を返します`null`</xref:System.ComponentModel.IContainer>。 サービス オブジェクトを返すためのカスタム実装を提供するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください、<xref:System.IServiceProvider.GetService%2A?displayProperty=fullName>メソッド。</xref:System.IServiceProvider.GetService%2A?displayProperty=fullName> 。"
  syntax:
    content: protected virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "<xref:System.Type>へのサービスを取得します</xref:System.Type>。"
    return:
      type: System.Object
      description: "<xref:System.Object>要求したサービスを実装するか、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>サービスを解決できない場合</xref:System.Object>。"
  overload: System.ComponentModel.Container.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネントを削除、 <xref href=&quot;System.ComponentModel.Container&quot;></xref>です。"
  remarks: "このメソッドは、派生クラスでオーバーライドできます。"
  syntax:
    content: public virtual void Remove (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "削除するコンポーネント。"
  overload: System.ComponentModel.Container.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  id: RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネントを削除、 <xref href=&quot;System.ComponentModel.Container&quot;> </xref>設定がない<xref:System.ComponentModel.IComponent.Site*>を<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.ComponentModel.IComponent.Site*> 。"
  remarks: "RemoveWithoutUnsiting メソッドは通常どおり、サイトをクリーンアップが、コンポーネントは設定しません<xref:System.ComponentModel.IComponent.Site%2A>プロパティを`null`</xref:System.ComponentModel.IComponent.Site%2A>。"
  syntax:
    content: protected void RemoveWithoutUnsiting (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "削除するコンポーネント。"
  overload: System.ComponentModel.Container.RemoveWithoutUnsiting*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  id: ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  langs:
  - csharp
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネント名がこのコンテナーの一意かどうかを判断します。"
  remarks: "ValidateName メソッドによって呼び出されます、<xref:System.ComponentModel.Container.Add%2A>かどうかをメソッドの名前、`component`この<xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container>に対して一意では、追加される</xref:System.ComponentModel.Container.Add%2A> 場合、`name`パラメーターではありません`null`が一意でないと、<xref:System.ArgumentException>がスローされます</xref:System.ArgumentException>。"
  syntax:
    content: protected virtual void ValidateName (System.ComponentModel.IComponent component, string name);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "名前付きコンポーネントです。"
    - id: name
      type: System.String
      description: "検証するコンポーネントの名前。"
  overload: System.ComponentModel.Container.ValidateName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>component</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>一意ではありません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Container.#ctor
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container()
  nameWithType: Container.Container()
  fullName: System.ComponentModel.Container.Container()
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent)
  nameWithType: Container.Add(IComponent)
  fullName: System.ComponentModel.Container.Add(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Container.Add(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add(IComponent,String)
  nameWithType: Container.Add(IComponent,String)
  fullName: System.ComponentModel.Container.Add(IComponent,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Container.Components
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
  fullName: System.ComponentModel.Container.Components
- uid: System.ComponentModel.ComponentCollection
  parent: System.ComponentModel
  isExternal: false
  name: ComponentCollection
  nameWithType: ComponentCollection
  fullName: System.ComponentModel.ComponentCollection
- uid: System.ComponentModel.Container.CreateSite(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite(IComponent,String)
  nameWithType: Container.CreateSite(IComponent,String)
  fullName: System.ComponentModel.Container.CreateSite(IComponent,String)
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.Container.Dispose
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose()
  nameWithType: Container.Dispose()
  fullName: System.ComponentModel.Container.Dispose()
- uid: System.ComponentModel.Container.Dispose(System.Boolean)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Container.Dispose(Boolean)
  fullName: System.ComponentModel.Container.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Container.Finalize
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize()
  nameWithType: Container.Finalize()
  fullName: System.ComponentModel.Container.Finalize()
- uid: System.ComponentModel.Container.GetService(System.Type)
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService(Type)
  nameWithType: Container.GetService(Type)
  fullName: System.ComponentModel.Container.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Container.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove(IComponent)
  nameWithType: Container.Remove(IComponent)
  fullName: System.ComponentModel.Container.Remove(IComponent)
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting(IComponent)
  nameWithType: Container.RemoveWithoutUnsiting(IComponent)
  fullName: System.ComponentModel.Container.RemoveWithoutUnsiting(IComponent)
- uid: System.ComponentModel.Container.ValidateName(System.ComponentModel.IComponent,System.String)
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName(IComponent,String)
  nameWithType: Container.ValidateName(IComponent,String)
  fullName: System.ComponentModel.Container.ValidateName(IComponent,String)
- uid: System.ComponentModel.Container.#ctor*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Container
  nameWithType: Container.Container
- uid: System.ComponentModel.Container.Add*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Add
  nameWithType: Container.Add
- uid: System.ComponentModel.Container.Components*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Components
  nameWithType: Container.Components
- uid: System.ComponentModel.Container.CreateSite*
  parent: System.ComponentModel.Container
  isExternal: false
  name: CreateSite
  nameWithType: Container.CreateSite
- uid: System.ComponentModel.Container.Dispose*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Dispose
  nameWithType: Container.Dispose
- uid: System.ComponentModel.Container.Finalize*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Finalize
  nameWithType: Container.Finalize
- uid: System.ComponentModel.Container.GetService*
  parent: System.ComponentModel.Container
  isExternal: false
  name: GetService
  nameWithType: Container.GetService
- uid: System.ComponentModel.Container.Remove*
  parent: System.ComponentModel.Container
  isExternal: false
  name: Remove
  nameWithType: Container.Remove
- uid: System.ComponentModel.Container.RemoveWithoutUnsiting*
  parent: System.ComponentModel.Container
  isExternal: false
  name: RemoveWithoutUnsiting
  nameWithType: Container.RemoveWithoutUnsiting
- uid: System.ComponentModel.Container.ValidateName*
  parent: System.ComponentModel.Container
  isExternal: false
  name: ValidateName
  nameWithType: Container.ValidateName
