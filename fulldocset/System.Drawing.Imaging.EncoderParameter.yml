### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.EncoderParameter
  id: EncoderParameter
  children:
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Drawing.Imaging.EncoderParameter.Dispose
  - System.Drawing.Imaging.EncoderParameter.Encoder
  - System.Drawing.Imaging.EncoderParameter.Finalize
  - System.Drawing.Imaging.EncoderParameter.NumberOfValues
  - System.Drawing.Imaging.EncoderParameter.Type
  - System.Drawing.Imaging.EncoderParameter.ValueType
  langs:
  - csharp
  name: EncoderParameter
  nameWithType: EncoderParameter
  fullName: System.Drawing.Imaging.EncoderParameter
  type: Class
  summary: "イメージ エンコーダー値、または値の配列を渡すために使用します。"
  remarks: "また、特定のイメージ エンコーダーの特定のパラメーターでサポートされている使用可能な値の一覧を受信するのに EncoderParameter オブジェクトを使用することができます。"
  example:
  - "The following code example demonstrates how to create a EncoderParameter using the <xref:System.Drawing.Imaging.EncoderParameter.%23ctor%2A> constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/t-system.drawing.imaging_0_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/t-system.drawing.imaging_0_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/t-system.drawing.imaging_0_2.cs)]"
  syntax:
    content: 'public sealed class EncoderParameter : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 1 つの 8 ビット符号なし整数。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Byte
      description: "8 ビット符号なし整数に格納されている値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと符号なし 8 ビット整数の配列。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ配列内の要素の数をします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Byte[]
      description: "8 ビット符号なし整数の配列に格納されている値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 1 つは、16 ビット整数。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Int16
      description: "16 ビット整数に格納されている値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 負でない必要があります。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int16[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトおよび 16 ビット整数の配列。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ配列内の要素の数をします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, short[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Int16[]
      description: "格納されている値を指定する 16 ビット整数の配列、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 配列内の整数は、負以外である必要があります。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 1 つの 64 ビット整数。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 ビット) を設定し、 <> </> *> プロパティを 1 にします。"
  remarks: ''
  example:
  - "The following code example demonstrates how to create a <xref:System.Drawing.Imaging.EncoderParameter> using the EncoderParameter constructor. To run this example, paste the code into a Windows Form and call the `VaryQualityLevel` method from the form's constructor. This example requires an image file named `TestPhoto.jpg` located at **c:\\\\**.  \n  \n [!code-vb[UsingImageEncodersDecoders#8](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_1.vb)]\n [!code-cs[UsingImageEncodersDecoders#8](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_1.cs)]  \n[!code-vb[UsingImageEncodersDecoders#6](~/add/codesnippet/visualbasic/f30a3dab-0a65-43e4-a0d4-_2.vb)]\n[!code-cs[UsingImageEncodersDecoders#6](~/add/codesnippet/csharp/f30a3dab-0a65-43e4-a0d4-_2.cs)]"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Int64
      description: "64 ビットの整数に格納されている値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 64 ビット整数の配列。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref> (32 ビット) を設定し、 <> </> *> プロパティ配列内の要素の数をします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Int64[]
      description: "格納されている値を指定する 64 ビット整数の配列、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.String)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと、文字の文字列。 格納される前に、文字列が null で終わる ASCII 文字列に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを NULL 終端文字を含む ASCII 文字列の長さ。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, string value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.String
      description: "A<xref:System.String>に格納された値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト</xref:System.String>。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 1 つの 8 ビット値。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>または<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Byte
      description: "格納されている値を指定するバイト、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
    - id: undefined
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 <> </> *> プロパティに設定されている<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、それ以外の<> *> プロパティに設定されている<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>です。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトとのバイト配列。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>または<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ配列内の要素の数をします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, byte[] value, bool undefined);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: value
      type: System.Byte[]
      description: "バイト配列に格納されている値を指定する、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
    - id: undefined
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、 <> </> *> プロパティに設定されている<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、それ以外の<> *> プロパティに設定されている<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>です。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 32 ビット整数値のペア。 整数のペア分数を表し、最初の整数は分子、2 番目の整数は分母です。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator, int denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: numerator
      type: System.Int32
      description: "分数の分子を表す 32 ビット整数。 負でない必要があります。"
    - id: denominator
      type: System.Int32
      description: "分数の分母を表す 32 ビット整数。 負でない必要があります。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 32 ビット整数の 2 つの配列。 2 つの配列は、小数部の配列を表します。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ内の要素の数を<code> numerator </code>要素の数と同じである必要があります、配列で、 <code> denominator </code>配列。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator, int[] denominator);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: numerator
      type: System.Int32[]
      description: "分数の分子を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。"
    - id: denominator
      type: System.Int32[]
      description: "分数の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。 指定したインデックスの分母は、同じインデックスの分子とペアリングされています。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 64 ビット整数値のペア。 整数のペアは、整数、最小の数値範囲の最初の整数および範囲内の数が&2; 番目の整数の範囲を表します。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long rangebegin, long rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: rangebegin
      type: System.Int64
      description: "整数の範囲の最小値を表す 64 ビット整数。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
    - id: rangeend
      type: System.Int64
      description: "整数の範囲の最大数を表す 64 ビット整数。 負でない必要があります。 格納されるまで、このパラメーターは 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 64 ビット整数の 2 つの配列。 2 つの配列は、整数範囲の配列を表します。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ内の要素の数を<code> rangebegin </code>要素の数と同じである必要があります、配列で、 <code> rangeend </code>配列。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, long[] rangebegin, long[] rangeend);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: rangebegin
      type: System.Int64[]
      description: "整数の範囲の最小値を指定する 64 ビット整数の配列。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
    - id: rangeend
      type: System.Int64[]
      description: "整数の範囲の最大値を指定する 64 ビット整数の配列。 配列内の整数は、負以外である必要があります。 格納する前に 64 ビットの整数は 32 ビット整数に変換、 <xref href=&quot;System.Drawing.Imaging.EncoderParameters&quot;> </xref>オブジェクト。 指定したインデックスの最大値は、同じインデックスの最小値とペアリングされています。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクト、値の数、値、およびに格納されている値へのポインターのデータ型、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numberValues, System.Drawing.Imaging.EncoderParameterValueType type, IntPtr value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: numberValues
      type: System.Int32
      description: "格納されている値の数を指定する整数、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>プロパティがこの値に設定します</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>。"
    - id: type
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "メンバー、 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>に格納された値のデータ型を指定する列挙体、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 <xref:System.Type>と<xref:System.Drawing.Imaging.EncoderParameter.ValueType*>プロパティは、この値に設定されます</xref:System.Drawing.Imaging.EncoderParameter.ValueType*></xref:System.Type>。"
    - id: value
      type: System.IntPtr
      description: "指定された型の値の配列へのポインター、`Type`パラメーター。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと、値、およびに格納されている値へのポインターのデータ型の値の数を指定する&3; つの整数、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int NumberOfValues, int Type, int Value);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: NumberOfValues
      type: System.Int32
      description: "格納されている値の数を指定する整数、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 <xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>プロパティがこの値に設定します</xref:System.Drawing.Imaging.EncoderParameter.NumberOfValues*>。"
    - id: Type
      type: System.Int32
      description: "メンバー、 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>に格納された値のデータ型を指定する列挙体、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクト。 <xref:System.Type>と<xref:System.Drawing.Imaging.EncoderParameter.ValueType*>プロパティは、この値に設定されます</xref:System.Drawing.Imaging.EncoderParameter.ValueType*></xref:System.Type>。"
    - id: Value
      type: System.Int32
      description: "指定された型の値の配列へのポインター、`Type`パラメーター。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "型が有効ではありません<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;></xref>です。"
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 4 つ、32 ビット整数。 4 つの整数では、分数の範囲を表します。 最初の&2; つの整数は、範囲内の最小の分数を表し、残りの&2; つの整数を表す範囲内の最大の分数。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティを 1 にします。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int numerator1, int demoninator1, int numerator2, int demoninator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: numerator1
      type: System.Int32
      description: "範囲の最小の分数の分子を表す 32 ビット整数。 負でない必要があります。"
    - id: demoninator1
      type: System.Int32
      description: "範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。"
    - id: numerator2
      type: System.Int32
      description: "範囲内の最小の分数の分母を表す 32 ビット整数。 負でない必要があります。"
    - id: demoninator2
      type: System.Int32
      description: "範囲内の最大の分数の分子を表す 32 ビット整数。 負でない必要があります。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: '#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])'
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Imaging.Encoder&quot;></xref>オブジェクトと 32 ビット整数の 4 つの配列。 次の&4; つの配列は、合理的な範囲の配列を表します。 合理的な範囲は、最大値は小数部から最小値は小数部からのすべての分数のセットです。 設定、 <> </> *> プロパティを<xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>、設定と、 <> </> *> プロパティ内の要素の数を<code> numerator1 </code>配列で、その他の&3; つの配列の要素の数と同じである必要があります。"
  remarks: "I 番目の範囲はすべて小数 numerator1 から [i]/denominator1 [i] numerator2 を介して [i]/denominator2 [i] です。"
  syntax:
    content: public EncoderParameter (System.Drawing.Imaging.Encoder encoder, int[] numerator1, int[] denominator1, int[] numerator2, int[] denominator2);
    parameters:
    - id: encoder
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>パラメーター カテゴリのグローバルに一意の識別子をカプセル化するオブジェクト。"
    - id: numerator1
      type: System.Int32[]
      description: "分子の範囲の最小値を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。"
    - id: denominator1
      type: System.Int32[]
      description: "範囲の最小値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。"
    - id: numerator2
      type: System.Int32[]
      description: "分子の範囲の最大値を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。"
    - id: denominator2
      type: System.Int32[]
      description: "範囲の最大値の分母を指定する 32 ビット整数の配列。 配列内の整数は、負以外である必要があります。"
  overload: System.Drawing.Imaging.EncoderParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  id: Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  remarks: "Dispose を呼び出すことにより、これによって使用されるリソース<xref:System.Drawing.Imaging.EncoderParameter>を他の目的を再割り当てするオブジェクト</xref:System.Drawing.Imaging.EncoderParameter>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  id: Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>オブジェクトに関連付けられた<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。 <xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>オブジェクトは、カテゴリを指定するグローバル一意識別子 (GUID) をカプセル化 (たとえば<xref href=&quot;System.Drawing.Imaging.Encoder.Quality&quot;> </xref>、 <xref href=&quot;System.Drawing.Imaging.Encoder.ColorDepth&quot;> </xref>、または<xref href=&quot;System.Drawing.Imaging.Encoder.Compression&quot;> </xref>) これに格納されているパラメーターの<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Imaging.Encoder Encoder { get; set; }
    return:
      type: System.Drawing.Imaging.Encoder
      description: "<xref href=&quot;System.Drawing.Imaging.Encoder&quot;> </xref>これに格納されているパラメーターのカテゴリを指定する GUID をカプセル化するオブジェクト<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.Encoder*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  id: Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "により、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>リソースを解放し、前に他のクリーンアップ操作を実行しようとするオブジェクト、 <xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;> </xref>オブジェクトがガベージ コレクションによって回収されます。"
  syntax:
    content: ~EncoderParameter ();
    parameters: []
  overload: System.Drawing.Imaging.EncoderParameter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  id: NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "これに格納されている値の配列内の要素の数を取得<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  syntax:
    content: public int NumberOfValues { get; }
    return:
      type: System.Int32
      description: "これに格納されている値の配列の要素の数を示す整数<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.Type
  id: Type
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "これに格納されている値のデータ型を取得<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType Type { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "メンバー、 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>をこれに格納された値のデータ型を示す列挙体<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  id: ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  langs:
  - csharp
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "これに格納されている値のデータ型を取得<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Imaging.EncoderParameterValueType ValueType { get; }
    return:
      type: System.Drawing.Imaging.EncoderParameterValueType
      description: "メンバー、 <xref href=&quot;System.Drawing.Imaging.EncoderParameterValueType&quot;> </xref>をこれに格納された値のデータ型を示す列挙体<xref href=&quot;System.Drawing.Imaging.EncoderParameter&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.EncoderParameter.ValueType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte)
- uid: System.Drawing.Imaging.Encoder
  parent: System.Drawing.Imaging
  isExternal: false
  name: Encoder
  nameWithType: Encoder
  fullName: System.Drawing.Imaging.Encoder
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int16[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int16[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int16[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int16[])
- uid: System.Int16[]
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16[]
  spec.csharp:
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: Int16[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[])
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.String)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,String)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,String)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte,System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte,Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Byte[],System.Boolean)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Byte[],Boolean)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Byte[],Boolean)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64,System.Int64)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64,Int64)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64,Int64)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int64[],System.Int64[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int64[],Int64[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int64[],Int64[])
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Drawing.Imaging.EncoderParameterValueType,System.IntPtr)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,EncoderParameterValueType,IntPtr)
- uid: System.Drawing.Imaging.EncoderParameterValueType
  parent: System.Drawing.Imaging
  isExternal: false
  name: EncoderParameterValueType
  nameWithType: EncoderParameterValueType
  fullName: System.Drawing.Imaging.EncoderParameterValueType
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32,Int32,Int32,Int32)
- uid: System.Drawing.Imaging.EncoderParameter.#ctor(System.Drawing.Imaging.Encoder,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  nameWithType: EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
  fullName: System.Drawing.Imaging.EncoderParameter.EncoderParameter(Encoder,Int32[],Int32[],Int32[],Int32[])
- uid: System.Drawing.Imaging.EncoderParameter.Dispose
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose()
  nameWithType: EncoderParameter.Dispose()
  fullName: System.Drawing.Imaging.EncoderParameter.Dispose()
- uid: System.Drawing.Imaging.EncoderParameter.Encoder
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
  fullName: System.Drawing.Imaging.EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize()
  nameWithType: EncoderParameter.Finalize()
  fullName: System.Drawing.Imaging.EncoderParameter.Finalize()
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
  fullName: System.Drawing.Imaging.EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
  fullName: System.Drawing.Imaging.EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
  fullName: System.Drawing.Imaging.EncoderParameter.ValueType
- uid: System.Drawing.Imaging.EncoderParameter.#ctor*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: EncoderParameter
  nameWithType: EncoderParameter.EncoderParameter
- uid: System.Drawing.Imaging.EncoderParameter.Dispose*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Dispose
  nameWithType: EncoderParameter.Dispose
- uid: System.Drawing.Imaging.EncoderParameter.Encoder*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Encoder
  nameWithType: EncoderParameter.Encoder
- uid: System.Drawing.Imaging.EncoderParameter.Finalize*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Finalize
  nameWithType: EncoderParameter.Finalize
- uid: System.Drawing.Imaging.EncoderParameter.NumberOfValues*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: NumberOfValues
  nameWithType: EncoderParameter.NumberOfValues
- uid: System.Drawing.Imaging.EncoderParameter.Type*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: Type
  nameWithType: EncoderParameter.Type
- uid: System.Drawing.Imaging.EncoderParameter.ValueType*
  parent: System.Drawing.Imaging.EncoderParameter
  isExternal: false
  name: ValueType
  nameWithType: EncoderParameter.ValueType
