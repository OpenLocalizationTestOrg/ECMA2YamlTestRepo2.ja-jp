### YamlMime:ManagedReference
items:
- uid: System.Drawing.Printing.PrinterSettings
  id: PrinterSettings
  children:
  - System.Drawing.Printing.PrinterSettings.#ctor
  - System.Drawing.Printing.PrinterSettings.CanDuplex
  - System.Drawing.Printing.PrinterSettings.Clone
  - System.Drawing.Printing.PrinterSettings.Collate
  - System.Drawing.Printing.PrinterSettings.Copies
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  - System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  - System.Drawing.Printing.PrinterSettings.Duplex
  - System.Drawing.Printing.PrinterSettings.FromPage
  - System.Drawing.Printing.PrinterSettings.GetHdevmode
  - System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  - System.Drawing.Printing.PrinterSettings.GetHdevnames
  - System.Drawing.Printing.PrinterSettings.InstalledPrinters
  - System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  - System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  - System.Drawing.Printing.PrinterSettings.IsPlotter
  - System.Drawing.Printing.PrinterSettings.IsValid
  - System.Drawing.Printing.PrinterSettings.LandscapeAngle
  - System.Drawing.Printing.PrinterSettings.MaximumCopies
  - System.Drawing.Printing.PrinterSettings.MaximumPage
  - System.Drawing.Printing.PrinterSettings.MinimumPage
  - System.Drawing.Printing.PrinterSettings.PaperSizes
  - System.Drawing.Printing.PrinterSettings.PaperSources
  - System.Drawing.Printing.PrinterSettings.PrinterName
  - System.Drawing.Printing.PrinterSettings.PrinterResolutions
  - System.Drawing.Printing.PrinterSettings.PrintFileName
  - System.Drawing.Printing.PrinterSettings.PrintRange
  - System.Drawing.Printing.PrinterSettings.PrintToFile
  - System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  - System.Drawing.Printing.PrinterSettings.SupportsColor
  - System.Drawing.Printing.PrinterSettings.ToPage
  - System.Drawing.Printing.PrinterSettings.ToString
  langs:
  - csharp
  name: PrinterSettings
  nameWithType: PrinterSettings
  fullName: System.Drawing.Printing.PrinterSettings
  type: Class
  summary: "Windows フォーム アプリケーションから印刷したときに、印刷するプリンターなど、ドキュメントを印刷する方法に関する情報を指定します。"
  remarks: "を通じて PrinterSettings にアクセスする通常、<xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>または<xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName>プリンターの設定を変更するプロパティ</xref:System.Drawing.Printing.PageSettings.PrinterSettings%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>。 最も一般的なプリンター設定は<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>、印刷するプリンターを指定します</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>。       Windows フォームで印刷の詳細については、次を参照してください、<xref:System.Drawing.Printing>名前空間の概要。</xref:System.Drawing.Printing> 。 Windows Presentation Foundation アプリケーションから印刷する場合を参照してください、<xref:System.Printing>名前空間</xref:System.Printing>。"
  example:
  - "The following code example prints a document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/t-system.drawing.printin_2_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/t-system.drawing.printin_2_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/t-system.drawing.printin_2_1.vb)]"
  syntax:
    content: 'public class PrinterSettings : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  id: '#ctor'
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>クラスです。"
  remarks: "既定のコンス トラクターは、すべてのフィールドを既定値を初期化します。       インスタンスで通常は、作成していない<xref:System.Drawing.Printing.PrinterSettings>ではなく、 <xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName>、プリンターの設定を設定する</xref:System.Drawing.Printing.PrintDocument.PrinterSettings%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings>。"
  syntax:
    content: public PrinterSettings ();
    parameters: []
  overload: System.Drawing.Printing.PrinterSettings.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  id: CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターが両面印刷をサポートしているかどうかを示す値を取得します。"
  remarks: "双方向を使用して印刷し、プリンターでサポートされる場合、設定<xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>のいずれかに、<xref:System.Drawing.Printing.Duplex>値</xref:System.Drawing.Printing.Duplex></xref:System.Drawing.Printing.PrinterSettings.Duplex%2A>。"
  syntax:
    content: public bool CanDuplex { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プリンターが両面印刷をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.CanDuplex*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Clone
  id: Clone
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "このコピーを作成<xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>です。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "このオブジェクトのコピー。"
  overload: System.Drawing.Printing.PrinterSettings.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Collate
  id: Collate
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または印刷されるドキュメントを部単位であるかどうかを示す値を設定します。"
  remarks: "コピーの数が 1 より大きい場合にのみ、照合が実行されます。 <xref:System.Drawing.Printing.PrinterSettings.Copies%2A>印刷する部数を指定するプロパティ</xref:System.Drawing.Printing.PrinterSettings.Copies%2A>を設定します。       Collate 設定`true`[次へ] のコピーの最初のページを印刷する前に、ドキュメントの完全なコピーが印刷されます。 `false`次のページを印刷する前に指定されたコピーの数によっては、各ページが印刷されます。"
  syntax:
    content: public bool Collate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、印刷ドキュメントを部単位で。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.Collate*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Copies
  id: Copies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または印刷するドキュメントのコピーの数を設定します。"
  remarks: "すべてのプリンターでは、複数部数の印刷をサポートします。 使用することができます、<xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A>の最大数を確認するには、プリンターがサポートするをコピーします</xref:System.Drawing.Printing.PrinterSettings.MaximumCopies%2A>。 コピーの数が設定されている場合、プリンターでサポートされているコピーの最大数よりも高い、コピーの最大数のみを印刷して、例外は発生しません。      > [!NOTE] > 一部のプリンターが一度に&1; つ以上の印刷をサポートしていません。"
  syntax:
    content: public short Copies { get; set; }
    return:
      type: System.Int16
      description: "印刷するコピーの数。 既定値は 1 です。"
  overload: System.Drawing.Printing.PrinterSettings.Copies*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは、コピーが&0; 未満の値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  id: CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返します、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>を作成する場合に便利なプリンター情報を含む、 <xref href=&quot;System.Drawing.Printing.PrintDocument&quot;></xref>です。"
  remarks: "CreateMeasurementGraphics メソッドを使用して取得できます、 <xref:System.Drawing.Graphics>、プリンター、印刷ジョブを作成せずにします</xref:System.Drawing.Graphics>。 使用することができます、<xref:System.Drawing.Graphics>基づく決定を行う方法のレイアウトにビジュアル要素のフォント、サイズ、および複雑な印刷ジョブの種類のスタイルと同様にします</xref:System.Drawing.Graphics>。"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics ();
    parameters: []
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>プリンターから情報を格納します。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "プリンターがという名前で、<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>プロパティは存在しません</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  id: CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返します、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>余白の原点をオプションで指定して、プリンターの情報を格納します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>メソッドを取得できます、 <xref:System.Drawing.Graphics>、プリンター、印刷ジョブを作成せずにします</xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>。 使用して、<xref:System.Drawing.Graphics>基づく決定を行う方法のレイアウトにビジュアル要素のフォント、サイズ、および複雑な印刷ジョブの種類のスタイルと同様にします</xref:System.Drawing.Graphics>。"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (bool honorOriginAtMargins);
    parameters:
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>余白の原点を示すためにそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>からプリンター情報を含む、 <xref href=&quot;System.Drawing.Printing.PageSettings&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "返します、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>に指定された関連付けられているプリンター情報を含む<xref href=&quot;System.Drawing.Printing.PageSettings&quot;></xref>です。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>メソッドを取得できます、 <xref:System.Drawing.Graphics>、プリンター、印刷ジョブを作成せずにします</xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>。 使用して、<xref:System.Drawing.Graphics>基づく決定を行う方法のレイアウトにビジュアル要素のフォント、サイズ、および複雑な印刷ジョブの種類のスタイルと同様にします</xref:System.Drawing.Graphics>。"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>のグラフィック オブジェクトを取得します。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>からプリンター情報を含む、 <xref href=&quot;System.Drawing.Printing.PageSettings&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  id: CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "作成、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>指定されたページの設定に関連付けられているし、余白の原点を指定します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>メソッドを取得できるように、 <xref:System.Drawing.Graphics>、プリンター、印刷ジョブを作成せずにします</xref:System.Drawing.Graphics></xref:System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics%2A>。 使用して、<xref:System.Drawing.Graphics>基づく決定を行う方法のレイアウトにビジュアル要素のフォント、サイズ、および複雑な印刷ジョブの種類のスタイルと同様にします</xref:System.Drawing.Graphics>。"
  syntax:
    content: public System.Drawing.Graphics CreateMeasurementGraphics (System.Drawing.Printing.PageSettings pageSettings, bool honorOriginAtMargins);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>を取得する、 <xref href=&quot;System.Drawing.Graphics&quot;> </xref>のオブジェクトします。"
    - id: honorOriginAtMargins
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定、余白の原点です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>からプリンター情報を含む、 <xref href=&quot;System.Drawing.Printing.PageSettings&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  id: DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "このプリンターのページ設定の既定値を取得します。"
  remarks: "ページの設定には、ページの余白のサイズ、用紙を使用して、カラーで印刷するかどうかのサイズが含まれます。 ページの設定の詳細については、<xref:System.Drawing.Printing.PageSettings>クラス</xref:System.Drawing.Printing.PageSettings>を参照してください。"
  syntax:
    content: public System.Drawing.Printing.PageSettings DefaultPageSettings { get; }
    return:
      type: System.Drawing.Printing.PageSettings
      description: "A <xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>このプリンタの既定のページ設定を表すです。"
  overload: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  id: Duplex
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または両面印刷、プリンターの設定を設定します。"
  remarks: "使用することができます、<xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>プロパティをプリンターが両面印刷をサポートしているかを確認してください</xref:System.Drawing.Printing.PrinterSettings.CanDuplex%2A>。"
  syntax:
    content: public System.Drawing.Printing.Duplex Duplex { get; set; }
    return:
      type: System.Drawing.Printing.Duplex
      description: "1 つ、 <xref href=&quot;System.Drawing.Printing.Duplex&quot;> </xref>値。 既定値は、プリンターによって決定されます。"
  overload: System.Drawing.Printing.PrinterSettings.Duplex*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "双方向のプロパティの値は、のいずれかではない、 <xref href=&quot;System.Drawing.Printing.Duplex&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  id: FromPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または最初のページを印刷するページ番号を設定します。"
  remarks: "FromPage と<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プロパティによって使用され、 <xref:System.Windows.Forms.PrintDialog>、ユーザーが印刷範囲を選択するとします</xref:System.Windows.Forms.PrintDialog></xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>。 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>プロパティに設定する必要があります`true`印刷範囲を指定するユーザーを有効にします</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>。 さらに、<xref:System.Windows.Forms.PrintDialog>が必要です、<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>を指定して、その範囲内にある FromPage 値</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A></xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A></xref:System.Windows.Forms.PrintDialog>。       印刷処理中に、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>イベントは、ビュー、<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>内容を印刷するかを決定する</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A></xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>。 場合<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>は<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>、FromPage を使用し、<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プロパティを確認してどのページを印刷する必要があります</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrintRange?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>。 場合<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>は<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>、選択したページにのみ出力を指定します</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>。       FromPage<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>設定することも、プログラムによっても、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>実装は、同じです</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A></xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>。"
  syntax:
    content: public int FromPage { get; set; }
    return:
      type: System.Int32
      description: "最初のページを印刷するページ数。"
  overload: System.Drawing.Printing.PrinterSettings.FromPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティの値が FromPage が&0; 未満です。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  id: GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "ハンドルを作成、 <xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;> </xref>プリンターの設定に対応する構造体。"
  remarks: '`DEVMODE`構造は、デバイス固有です。 コピー、`DEVMODE`構造からいずれかの<xref:System.Drawing.Printing.PrinterSettings>を<xref:System.Drawing.Printing.PrinterSettings>別のプリンターがサポートされていません</xref:System.Drawing.Printing.PrinterSettings></xref:System.Drawing.Printing.PrinterSettings>。 このメソッドで作成しているハンドルが完了したら、ときにする必要があります割り当てを解除する自分で、ネイティブ win32`GlobalFree`メソッドです。 このメソッドを呼び出すときに渡すパラメーターとして、戻り値 GetHdevmode メソッドから。'
  syntax:
    content: public IntPtr GetHdevmode ();
    parameters: []
    return:
      type: System.IntPtr
      description: "ハンドル、 <xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;> </xref>構造体。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "プリンターがという名前で、<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>プロパティは存在しません</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "プリンターの初期化情報を取得できませんでした。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  id: GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "ハンドルを作成、 <xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;> </xref>プリンターとで指定されたページの設定に対応する構造体、 <code> pageSettings </code>パラメーター。"
  remarks: "`DEVMODE`構造は、デバイス固有です。 コピー、`DEVMODE`構造からいずれかの<xref:System.Drawing.Printing.PrinterSettings>を<xref:System.Drawing.Printing.PrinterSettings>別のプリンターがサポートされていません</xref:System.Drawing.Printing.PrinterSettings></xref:System.Drawing.Printing.PrinterSettings>。       このメソッドで作成しているハンドルが完了したら、ときにする必要があります割り当てを解除する自分で、ネイティブ win32`GlobalFree`メソッドです。 戻り値をパラメーターとして渡すこのメソッドを呼び出すときに、<xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>メソッド</xref:System.Drawing.Printing.PrinterSettings.GetHdevmode%2A>。"
  syntax:
    content: public IntPtr GetHdevmode (System.Drawing.Printing.PageSettings pageSettings);
    parameters:
    - id: pageSettings
      type: System.Drawing.Printing.PageSettings
      description: "<xref href=&quot;System.Drawing.Printing.PageSettings&quot;> </xref>オブジェクトを<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>に対応する構造体のハンドル。"
    return:
      type: System.IntPtr
      description: "ハンドル、 <xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;> </xref>構造体。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  exceptions:
  - type: System.Drawing.Printing.InvalidPrinterException
    commentId: T:System.Drawing.Printing.InvalidPrinterException
    description: "プリンターがという名前で、<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>プロパティは存在しません</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>。"
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "プリンターの初期化情報を取得できませんでした。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  id: GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "ハンドルを作成、 <xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;> </xref>プリンターの設定に対応する構造体。"
  remarks: "このメソッドで作成しているハンドルが完了したら、ときにする必要があります割り当てを解除する自分で、ネイティブ win32`GlobalFree`メソッドです。 このメソッドを呼び出すときに渡すパラメーターとして、戻り値 GetHdevnames メソッドから。"
  syntax:
    content: public IntPtr GetHdevnames ();
    parameters: []
    return:
      type: System.IntPtr
      description: "ハンドル、 <xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;> </xref>構造体。"
  overload: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  id: InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "コンピューターにインストールされているすべてのプリンターの名前を取得します。"
  remarks: "インストールされているプリンター名のコレクションを使用すると、印刷するのにプリンターの選択をユーザーに提供します。"
  example:
  - "The following code example populates the `comboInstalledPrinters` combo box with the installed printers and also sets the printer to print, using the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, when the selection changes. The `PopulateInstalledPrintersCombo` routine is called when the form is being initialized. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/csharp/p-system.drawing.printin_14_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/cpp/p-system.drawing.printin_14_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#5](~/add/codesnippet/visualbasic/p-system.drawing.printin_14_1.vb)]"
  syntax:
    content: public static System.Drawing.Printing.PrinterSettings.StringCollection InstalledPrinters { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.StringCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.StringCollection>コンピューターにインストールされているすべてのプリンターの名前を表す</xref:System.Drawing.Printing.PrinterSettings.StringCollection>。"
  overload: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "使用可能なプリンターを列挙できませんでした。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  id: IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "示す値を取得するかどうか、 <> </> *> プロパティは、ユーザーが明示的に設定した場合を除き、既定のプリンターを指定<> *> です。"
  remarks: "IsDefaultPrinter は常に返します`false`明示的に設定すると、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>プロパティ以外の文字列値を`null`</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>。"
  example:
  - "The following example demonstrates how to use the IsDefaultPrinter property. To run this example, paste the following code into a form and call `PopulateInstalledPrintersCombo` from the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-vb[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_7_1.vb)]\n [!code-cs[System.Drawing.Printing.PrinterSettingsEx#1](~/add/codesnippet/csharp/p-system.drawing.printin_7_1.cs)]"
  syntax:
    content: public bool IsDefaultPrinter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>通常使うプリンターを指定、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Drawing.Printing.PrinterSettings.PrinterName*> 。"
  overload: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  id: IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターが指定されたイメージ ファイルの印刷をサポートしているかどうかを示す値を取得します。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Image image);
    parameters:
    - id: image
      type: System.Drawing.Image
      description: "印刷する画像。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プリンターは、指定したイメージを印刷をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  id: IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターが指定された形式の印刷をサポートしているかどうかを示す値を返します。"
  syntax:
    content: public bool IsDirectPrintingSupported (System.Drawing.Imaging.ImageFormat imageFormat);
    parameters:
    - id: imageFormat
      type: System.Drawing.Imaging.ImageFormat
      description: "<xref href=&quot;System.Drawing.Imaging.ImageFormat&quot;> </xref>を印刷します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プリンターは、指定したイメージ形式の印刷をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  id: IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターがプロッターかどうかを示す値を取得します。"
  remarks: "プロッターは、ベクター ベースのラスター ベースではなくプリンターです。 ほとんどのベクター ベースのプリンターは、出力を生成するために個々 のプロット ペンを使用します。"
  syntax:
    content: public bool IsPlotter { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、プリンターがプロッターです。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>プリンターはラスター場合。"
  overload: System.Drawing.Printing.PrinterSettings.IsPlotter*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  id: IsValid
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "示す値を取得するかどうか、<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>プロパティは有効なプリンターを指定します</xref:System.Drawing.Printing.PrinterSettings.PrinterName*>。"
  remarks: "取得するか、一部のプロパティを設定するときに有効なプリンターが必要か、例外が発生します。 例外を避けるためには、設定後 IsValid プロパティを使用して、<xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>を安全に、プリンターが有効なかどうかを判断します</xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A>。"
  example:
  - "The following code example specifies the target printer by setting the <xref:System.Drawing.Printing.PrinterSettings.PrinterName%2A> property, and if the IsValid is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_9_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_9_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_9_1.vb)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Drawing.Printing.PrinterSettings.PrinterName*>プロパティは有効なプリンターを指定、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Drawing.Printing.PrinterSettings.PrinterName*> 。"
  overload: System.Drawing.Printing.PrinterSettings.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  id: LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "横の向きを生成するために、縦向きを回転角度を度数でを取得します。"
  remarks: "有効な値は、90、および 270 ° です。 ランドス ケープがサポートされていない場合のみ有効な値は 0 ° です。 設定する、<xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>プロパティを`true`横向きのページを印刷する</xref:System.Drawing.Printing.PageSettings.Landscape%2A?displayProperty=fullName>。"
  syntax:
    content: public int LandscapeAngle { get; }
    return:
      type: System.Int32
      description: "縦向きの横の向きを生成するために回転を度単位の角度。"
  overload: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  id: MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターには、ユーザーが一度に印刷ができるようにコピーの最大数を取得します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.Copies%2A>プロパティ</xref:System.Drawing.Printing.PrinterSettings.Copies%2A>を設定します。 MaximumCopies プロパティを使用して、一部のプリンターがないため、プリンターが一度に複数のコピーを印刷をサポートしているかを決定します。"
  syntax:
    content: public int MaximumCopies { get; }
    return:
      type: System.Int32
      description: "プリンターには、ユーザーが一度に印刷ができるようにコピーの最大数。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  id: MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "上限を設定または取得<> *> または<> *> で選択されている、 <xref href=&quot;System.Windows.Forms.PrintDialog&quot;></xref>です。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プロパティによって使用され、 <xref:System.Windows.Forms.PrintDialog>、ユーザーが印刷範囲を選択するとします</xref:System.Windows.Forms.PrintDialog></xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>。 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>プロパティに設定する必要があります`true`印刷範囲を指定するユーザーを有効にします</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>。 設定する場合、<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>または<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プログラムでは、値定義<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>して<xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog>を表示するときに MaximumPage プロパティ、または例外がスローされた</xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>範囲内であることを確認</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int MaximumPage { get; set; }
    return:
      type: System.Int32
      description: "最大<> *> または<> *> で選択されている、 <xref href=&quot;System.Windows.Forms.PrintDialog&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.MaximumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは MaximumPage が&0; 未満の値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  id: MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "最小値の設定を取得または<> *> または<> *> で選択されている、 <xref href=&quot;System.Windows.Forms.PrintDialog&quot;></xref>です。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プロパティによって使用され、 <xref:System.Windows.Forms.PrintDialog>、ユーザーが印刷範囲を選択するとします</xref:System.Windows.Forms.PrintDialog></xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>。 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>プロパティに設定する必要があります`true`印刷範囲を指定するユーザーを有効にします</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>。 設定する場合、<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>または<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プログラムでは、値では、MinimumPage と<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A><xref:System.Windows.Forms.PrintDialog>.</xref:System.Windows.Forms.PrintDialog>を表示するときにプロパティ、または例外がスローされます</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>によって定義された範囲内であることを確認</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>"
  syntax:
    content: public int MinimumPage { get; set; }
    return:
      type: System.Int32
      description: "最小<> *> または<> *> で選択されている、 <xref href=&quot;System.Windows.Forms.PrintDialog&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.MinimumPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは MinimumPage が&0; 未満の値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  id: PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターでサポートされている用紙サイズを取得します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>が含まれています<xref:System.Drawing.Printing.PaperSize>を通じて用紙サイズを表すインスタンス、<xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName>プロパティのいずれかが含まれています、<xref:System.Drawing.Printing.PaperKind>値</xref:System.Drawing.Printing.PaperKind></xref:System.Drawing.Printing.PaperSize.Kind%2A?displayProperty=fullName></xref:System.Drawing.Printing.PaperSize></xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>。       通常、ページの用紙サイズを設定する、<xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>プロパティを有効な<xref:System.Drawing.Printing.PaperSize>PaperSizes コレクションを介して使用できます</xref:System.Drawing.Printing.PaperSize></xref:System.Drawing.Printing.PageSettings.PaperSize%2A?displayProperty=fullName>。       カスタム用紙サイズを指定するを参照してください、<xref:System.Drawing.Printing.PaperSize.%23ctor%2A>コンス トラクター。</xref:System.Drawing.Printing.PaperSize.%23ctor%2A> 。"
  example:
  - "The following code example populates the `comboPaperSize` combo box with the printer's supported paper sizes. In addition, a custom paper size is created and added to the combo box. The <xref:System.Drawing.Printing.PaperSize.PaperName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/csharp/p-system.drawing.printin_17_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/cpp/p-system.drawing.printin_17_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_17_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSizeCollection PaperSizes { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>プリンターでサポートされている用紙サイズを表す</xref:System.Drawing.Printing.PrinterSettings.PaperSizeCollection>。"
  overload: System.Drawing.Printing.PrinterSettings.PaperSizes*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  id: PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "プリンターで使用できる用紙トレイを取得します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>が含まれています<xref:System.Drawing.Printing.PaperSource>ソースを介してトレイの用紙を表すインスタンス、<xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName>プロパティのいずれかが含まれています、<xref:System.Drawing.Printing.PaperSourceKind>値</xref:System.Drawing.Printing.PaperSourceKind></xref:System.Drawing.Printing.PaperSource.Kind%2A?displayProperty=fullName></xref:System.Drawing.Printing.PaperSource></xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>。       通常、ページの設定、<xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>プロパティを有効な<xref:System.Drawing.Printing.PaperSource>PaperSources コレクションを介して使用できます</xref:System.Drawing.Printing.PaperSource></xref:System.Drawing.Printing.PageSettings.PaperSource%2A?displayProperty=fullName>。"
  example:
  - "The following code example populates the `comboPaperSource` combo box with the printer's supported paper sources. The <xref:System.Drawing.Printing.PaperSource.SourceName%2A> is identified as the property that provides the display string for the item being added through the <xref:System.Windows.Forms.ListControl.DisplayMember%2A> property of the combo box. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/csharp/p-system.drawing.printin_13_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/cpp/p-system.drawing.printin_13_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#2](~/add/codesnippet/visualbasic/p-system.drawing.printin_13_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PaperSourceCollection PaperSources { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>このプリンターで使用できる用紙トレイを表す</xref:System.Drawing.Printing.PrinterSettings.PaperSourceCollection>。"
  overload: System.Drawing.Printing.PrinterSettings.PaperSources*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  id: PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または使用するプリンターの名前を設定します。"
  remarks: "プリンター名を設定するには、後に呼び出す<xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>システムで有効なプリンターとプリンター名が認識されるかどうかを判断する</xref:System.Drawing.Printing.PrinterSettings.IsValid%2A>。       使用することも、<xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>システムにインストールされているプリンターの一覧を取得するプロパティ</xref:System.Drawing.Printing.PrinterSettings.InstalledPrinters%2A>。"
  example:
  - "The following code example specifies the target printer by setting the PrinterName property, and if the <xref:System.Drawing.Printing.PrinterSettings.IsValid%2A> is `true`, prints the document on the specified printer. The example has three prerequisites:  \n  \n-   A variable named `filePath` has been set to the path of the file to print.  \n  \n-   A method named `pd_PrintPage`, which handles the <xref:System.Drawing.Printing.PrintDocument.PrintPage> event, has been defined.  \n  \n-   A variable named `printer` has been set to the printer's name.  \n  \n Use the <xref:System.Drawing>, <xref:System.Drawing.Printing>, and <xref:System.IO> namespaces for this example.  \n  \n [!code-cpp[Classic PrinterSettings Example#1](~/add/codesnippet/cpp/p-system.drawing.printin_11_1.cpp)]\n [!code-cs[Classic PrinterSettings Example#1](~/add/codesnippet/csharp/p-system.drawing.printin_11_1.cs)]\n [!code-vb[Classic PrinterSettings Example#1](~/add/codesnippet/visualbasic/p-system.drawing.printin_11_1.vb)]"
  syntax:
    content: public string PrinterName { get; set; }
    return:
      type: System.String
      description: "使用するプリンターの名前。"
  overload: System.Drawing.Printing.PrinterSettings.PrinterName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  id: PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "このプリンターでサポートされているすべての解像度を取得します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>が含まれています<xref:System.Drawing.Printing.PrinterResolution>を通じてサポートするプリンターの解像度を表すインスタンス、<xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName>プロパティのいずれかが含まれています、<xref:System.Drawing.Printing.PrinterResolutionKind>値</xref:System.Drawing.Printing.PrinterResolutionKind></xref:System.Drawing.Printing.PrinterResolution.Kind%2A?displayProperty=fullName></xref:System.Drawing.Printing.PrinterResolution></xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>。       通常、ページの設定、<xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>プロパティを有効な<xref:System.Drawing.Printing.PrinterResolution>PrinterResolutions コレクションを介して使用できます</xref:System.Drawing.Printing.PrinterResolution></xref:System.Drawing.Printing.PageSettings.PrinterResolution%2A?displayProperty=fullName>。       場合<xref:System.Drawing.Printing.PrinterResolutionKind>は`Custom`を使用して、<xref:System.Drawing.Printing.PrinterResolution.X%2A>と<xref:System.Drawing.Printing.PrinterResolution.Y%2A>プロパティをそれぞれ、水平方向および垂直方向に、カスタムのプリンターの解像度を確認します</xref:System.Drawing.Printing.PrinterResolution.Y%2A></xref:System.Drawing.Printing.PrinterResolution.X%2A></xref:System.Drawing.Printing.PrinterResolutionKind>。"
  example:
  - "The following code example populates the `comboPrintResolution` combo box with the supported resolutions. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` exists and that the specific combo box exists.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/csharp/p-system.drawing.printin_0_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/cpp/p-system.drawing.printin_0_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#3](~/add/codesnippet/visualbasic/p-system.drawing.printin_0_1.vb)]"
  syntax:
    content: public System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection PrinterResolutions { get; }
    return:
      type: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
      description: "A<xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>プリンターでサポートされている解像度を表す</xref:System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection>。"
  overload: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  id: PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得またはファイルに印刷するときに、ファイル名を設定します。"
  syntax:
    content: public string PrintFileName { get; set; }
    return:
      type: System.String
      description: "ファイルに印刷するときのファイル名。"
  overload: System.Drawing.Printing.PrinterSettings.PrintFileName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  id: PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得またはユーザーを指定して印刷するページ番号を設定します。"
  remarks: "PrintRange プロパティを使って、<xref:System.Windows.Forms.PrintDialog>含めて、ユーザーが印刷範囲を選択します</xref:System.Windows.Forms.PrintDialog>。 既定の PrintRange は`AllPages`します。 ユーザーを印刷するページの範囲を指定するために、<xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>プロパティに設定する必要があります`true`</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>。 ユーザーを印刷するには、選択したページを指定するために、<xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>プロパティに設定する必要があります`true`</xref:System.Windows.Forms.PrintDialog.AllowSelection%2A?displayProperty=fullName>。       印刷処理中に、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>イベントは、ビューを判定する PrintRange を印刷する必要があります</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>。 PrintRange 場合<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>を使用して、<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>プロパティを確認してどのページを印刷する必要があります</xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A></xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>。 PrintRange 場合<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>、選択したページにのみ出力を指定します</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>。       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>、 <xref:System.Drawing.Printing.PrinterSettings.ToPage%2A>PrintRange 設定することも、プログラムによってもと、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>実装は、同じです</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.ToPage%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>。"
  syntax:
    content: public System.Drawing.Printing.PrintRange PrintRange { get; set; }
    return:
      type: System.Drawing.Printing.PrintRange
      description: "1 つ、 <xref href=&quot;System.Drawing.Printing.PrintRange&quot;> </xref>値。"
  overload: System.Drawing.Printing.PrinterSettings.PrintRange*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "PrintRange プロパティの値は、のいずれかではない、 <xref href=&quot;System.Drawing.Printing.PrintRange&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  id: PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または印刷の出力は、ポートではなくファイルに送信されているかどうかを示す値を設定します。"
  remarks: "PrintToFile プロパティを使って、 <xref:System.Windows.Forms.PrintDialog>、ユーザーが選択すると、**ファイルへ出力**オプション</xref:System.Windows.Forms.PrintDialog>。 このような場合は、出力ポートに設定されている&quot;FILE&quot;に、ファイルのユーザー入力を求める Windows 印刷サブシステムの原因とときに名前、<xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>メソッドが呼び出されます</xref:System.Drawing.Printing.PrintDocument.Print%2A?displayProperty=fullName>。      > [!NOTE] >、PrintToFile プロパティでのみ使用、<xref:System.Windows.Forms.PrintDialog>プログラムで設定することはできません</xref:System.Windows.Forms.PrintDialog>。 `Print to file`オプションはのみに表示されます、<xref:System.Windows.Forms.PrintDialog>ときに、<xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName>プロパティに設定されている`true`</xref:System.Windows.Forms.PrintDialog.AllowPrintToFile%2A?displayProperty=fullName></xref:System.Windows.Forms.PrintDialog>。"
  syntax:
    content: public bool PrintToFile { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>印刷の出力がファイルに送信される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.PrintToFile*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  id: SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "指定されたハンドルから、関連情報をコピー、 <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>です。"
  remarks: '`DEVMODE`構造は、デバイス特有であり、コピー、`DEVMODE`構造からいずれかの<xref:System.Drawing.Printing.PrinterSettings>を<xref:System.Drawing.Printing.PrinterSettings>別のプリンターがサポートされていません</xref:System.Drawing.Printing.PrinterSettings></xref:System.Drawing.Printing.PrinterSettings>。'
  syntax:
    content: public void SetHdevmode (IntPtr hdevmode);
    parameters:
    - id: hdevmode
      type: System.IntPtr
      description: "Win32 ハンドル<xref uid=&quot;langword_csharp_DEVMODE&quot; name=&quot;DEVMODE&quot; href=&quot;&quot;></xref>構造体。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プリンターのハンドルが正しくありません。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  id: SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "指定されたハンドルから、関連情報をコピー、 <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;></xref>です。"
  syntax:
    content: public void SetHdevnames (IntPtr hdevnames);
    parameters:
    - id: hdevnames
      type: System.IntPtr
      description: "Win32 ハンドル<xref uid=&quot;langword_csharp_DEVNAMES&quot; name=&quot;DEVNAMES&quot; href=&quot;&quot;></xref>構造体。"
  overload: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プリンターのハンドルが正しくありません。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  id: SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "このプリンターがカラー印刷をサポートしているかどうかを示す値を取得します。"
  remarks: "色を使用して印刷し、プリンターでサポートされる場合、設定<xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>に`true`</xref:System.Drawing.Printing.PageSettings.Color%2A?displayProperty=fullName>。"
  example:
  - "The following code example prints a document with the first page in color, if the printer supports it. The example requires that a <xref:System.Drawing.Printing.PrintDocument> variable named `printDoc` has been created, and the <xref:System.Drawing.Printing.PrintDocument.PrintPage> and <xref:System.Drawing.Printing.PrintDocument.QueryPageSettings> events are handled.  \n  \n Use the <xref:System.Drawing> and <xref:System.Drawing.Printing> namespaces for this example.  \n  \n [!code-cs[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/csharp/p-system.drawing.printin_15_1.cs)]\n [!code-cpp[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/cpp/p-system.drawing.printin_15_1.cpp)]\n [!code-vb[PaperSource and PaperSize Example with Resolution#6](~/add/codesnippet/visualbasic/p-system.drawing.printin_15_1.vb)]"
  syntax:
    content: public bool SupportsColor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このプリンターはカラー; をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Printing.PrinterSettings.SupportsColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  id: ToPage
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "取得または印刷する最後のページの数を設定します。"
  remarks: "<xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>ToPage プロパティがによって使用されるため、 <xref:System.Windows.Forms.PrintDialog>、ユーザーが印刷範囲を選択するとします</xref:System.Windows.Forms.PrintDialog></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>。 <xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>プロパティに設定する必要があります`true`印刷範囲を指定するユーザーを有効にします</xref:System.Windows.Forms.PrintDialog.AllowSomePages%2A?displayProperty=fullName>。 さらに、<xref:System.Windows.Forms.PrintDialog>も必要です、<xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A>と<xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A>を指定して、その範囲内にある ToPage 値</xref:System.Drawing.Printing.PrinterSettings.MaximumPage%2A></xref:System.Drawing.Printing.PrinterSettings.MinimumPage%2A></xref:System.Windows.Forms.PrintDialog>。       印刷処理中に、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>イベントは、ビュー、<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>内容を印刷するかを決定する</xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A></xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>。 場合<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>は<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>を使用して、 <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>ToPage プロパティを確認してどのページを印刷する必要があります</xref:System.Drawing.Printing.PrinterSettings.FromPage%2A></xref:System.Drawing.Printing.PrintRange?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>。 場合<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>は<xref:System.Drawing.Printing.PrintRange?displayProperty=fullName>、選択したページにのみ出力を指定します</xref:System.Drawing.Printing.PrintRange?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>。       <xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>、ToPage と<xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A>設定することも、プログラムによっても、<xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName>実装は、同じです</xref:System.Drawing.Printing.PrintDocument.PrintPage?displayProperty=fullName></xref:System.Drawing.Printing.PrinterSettings.PrintRange%2A></xref:System.Drawing.Printing.PrinterSettings.FromPage%2A>。"
  syntax:
    content: public int ToPage { get; set; }
    return:
      type: System.Int32
      description: "印刷する最後のページの数。"
  overload: System.Drawing.Printing.PrinterSettings.ToPage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは ToPage が&0; 未満の値。"
  platform:
  - net462
- uid: System.Drawing.Printing.PrinterSettings.ToString
  id: ToString
  parent: System.Drawing.Printing.PrinterSettings
  langs:
  - csharp
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Printing
  summary: "に関する情報を提供、 <xref href=&quot;System.Drawing.Printing.PrinterSettings&quot;> </xref>の文字列形式。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "文字列。"
  overload: System.Drawing.Printing.PrinterSettings.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Printing.InvalidPrinterException
  parent: System.Drawing.Printing
  isExternal: false
  name: InvalidPrinterException
  nameWithType: InvalidPrinterException
  fullName: System.Drawing.Printing.InvalidPrinterException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Drawing.Printing.PrinterSettings.#ctor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings()
  nameWithType: PrinterSettings.PrinterSettings()
  fullName: System.Drawing.Printing.PrinterSettings.PrinterSettings()
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
  fullName: System.Drawing.Printing.PrinterSettings.CanDuplex
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Printing.PrinterSettings.Clone
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone()
  nameWithType: PrinterSettings.Clone()
  fullName: System.Drawing.Printing.PrinterSettings.Clone()
- uid: System.Drawing.Printing.PrinterSettings.Collate
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
  fullName: System.Drawing.Printing.PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
  fullName: System.Drawing.Printing.PrinterSettings.Copies
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics()
  nameWithType: PrinterSettings.CreateMeasurementGraphics()
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics()
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(Boolean)
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings)
- uid: System.Drawing.Printing.PageSettings
  parent: System.Drawing.Printing
  isExternal: false
  name: PageSettings
  nameWithType: PageSettings
  fullName: System.Drawing.Printing.PageSettings
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(System.Drawing.Printing.PageSettings,System.Boolean)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics(PageSettings,Boolean)
  nameWithType: PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
  fullName: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics(PageSettings,Boolean)
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
  fullName: System.Drawing.Printing.PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
  fullName: System.Drawing.Printing.PrinterSettings.Duplex
- uid: System.Drawing.Printing.Duplex
  parent: System.Drawing.Printing
  isExternal: false
  name: Duplex
  nameWithType: Duplex
  fullName: System.Drawing.Printing.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
  fullName: System.Drawing.Printing.PrinterSettings.FromPage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode()
  nameWithType: PrinterSettings.GetHdevmode()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode(System.Drawing.Printing.PageSettings)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode(PageSettings)
  nameWithType: PrinterSettings.GetHdevmode(PageSettings)
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevmode(PageSettings)
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames()
  nameWithType: PrinterSettings.GetHdevnames()
  fullName: System.Drawing.Printing.PrinterSettings.GetHdevnames()
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
  fullName: System.Drawing.Printing.PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.StringCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+StringCollection
  nameWithType: PrinterSettings+StringCollection
  fullName: System.Drawing.Printing.PrinterSettings+StringCollection
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
  fullName: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Image)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(Image)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(Image)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(Image)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(System.Drawing.Imaging.ImageFormat)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported(ImageFormat)
  nameWithType: PrinterSettings.IsDirectPrintingSupported(ImageFormat)
  fullName: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported(ImageFormat)
- uid: System.Drawing.Imaging.ImageFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: ImageFormat
  nameWithType: ImageFormat
  fullName: System.Drawing.Imaging.ImageFormat
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
  fullName: System.Drawing.Printing.PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
  fullName: System.Drawing.Printing.PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
  fullName: System.Drawing.Printing.PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
  fullName: System.Drawing.Printing.PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
  fullName: System.Drawing.Printing.PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
  fullName: System.Drawing.Printing.PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
  fullName: System.Drawing.Printing.PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSizeCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSizeCollection
  nameWithType: PrinterSettings+PaperSizeCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSizeCollection
- uid: System.Drawing.Printing.PrinterSettings.PaperSources
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
  fullName: System.Drawing.Printing.PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PaperSourceCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PaperSourceCollection
  nameWithType: PrinterSettings+PaperSourceCollection
  fullName: System.Drawing.Printing.PrinterSettings+PaperSourceCollection
- uid: System.Drawing.Printing.PrinterSettings.PrinterName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
  fullName: System.Drawing.Printing.PrinterSettings.PrinterName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
  fullName: System.Drawing.Printing.PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutionCollection
  parent: System.Drawing.Printing
  isExternal: false
  name: PrinterSettings+PrinterResolutionCollection
  nameWithType: PrinterSettings+PrinterResolutionCollection
  fullName: System.Drawing.Printing.PrinterSettings+PrinterResolutionCollection
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
  fullName: System.Drawing.Printing.PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
  fullName: System.Drawing.Printing.PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrintRange
  parent: System.Drawing.Printing
  isExternal: false
  name: PrintRange
  nameWithType: PrintRange
  fullName: System.Drawing.Printing.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
  fullName: System.Drawing.Printing.PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode(IntPtr)
  nameWithType: PrinterSettings.SetHdevmode(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevmode(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames(System.IntPtr)
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames(IntPtr)
  nameWithType: PrinterSettings.SetHdevnames(IntPtr)
  fullName: System.Drawing.Printing.PrinterSettings.SetHdevnames(IntPtr)
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
  fullName: System.Drawing.Printing.PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
  fullName: System.Drawing.Printing.PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString()
  nameWithType: PrinterSettings.ToString()
  fullName: System.Drawing.Printing.PrinterSettings.ToString()
- uid: System.Drawing.Printing.PrinterSettings.#ctor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterSettings
  nameWithType: PrinterSettings.PrinterSettings
- uid: System.Drawing.Printing.PrinterSettings.CanDuplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CanDuplex
  nameWithType: PrinterSettings.CanDuplex
- uid: System.Drawing.Printing.PrinterSettings.Clone*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Clone
  nameWithType: PrinterSettings.Clone
- uid: System.Drawing.Printing.PrinterSettings.Collate*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Collate
  nameWithType: PrinterSettings.Collate
- uid: System.Drawing.Printing.PrinterSettings.Copies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Copies
  nameWithType: PrinterSettings.Copies
- uid: System.Drawing.Printing.PrinterSettings.CreateMeasurementGraphics*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: CreateMeasurementGraphics
  nameWithType: PrinterSettings.CreateMeasurementGraphics
- uid: System.Drawing.Printing.PrinterSettings.DefaultPageSettings*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: DefaultPageSettings
  nameWithType: PrinterSettings.DefaultPageSettings
- uid: System.Drawing.Printing.PrinterSettings.Duplex*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: Duplex
  nameWithType: PrinterSettings.Duplex
- uid: System.Drawing.Printing.PrinterSettings.FromPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: FromPage
  nameWithType: PrinterSettings.FromPage
- uid: System.Drawing.Printing.PrinterSettings.GetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevmode
  nameWithType: PrinterSettings.GetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.GetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: GetHdevnames
  nameWithType: PrinterSettings.GetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.InstalledPrinters*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: InstalledPrinters
  nameWithType: PrinterSettings.InstalledPrinters
- uid: System.Drawing.Printing.PrinterSettings.IsDefaultPrinter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDefaultPrinter
  nameWithType: PrinterSettings.IsDefaultPrinter
- uid: System.Drawing.Printing.PrinterSettings.IsDirectPrintingSupported*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsDirectPrintingSupported
  nameWithType: PrinterSettings.IsDirectPrintingSupported
- uid: System.Drawing.Printing.PrinterSettings.IsPlotter*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsPlotter
  nameWithType: PrinterSettings.IsPlotter
- uid: System.Drawing.Printing.PrinterSettings.IsValid*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: IsValid
  nameWithType: PrinterSettings.IsValid
- uid: System.Drawing.Printing.PrinterSettings.LandscapeAngle*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: LandscapeAngle
  nameWithType: PrinterSettings.LandscapeAngle
- uid: System.Drawing.Printing.PrinterSettings.MaximumCopies*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumCopies
  nameWithType: PrinterSettings.MaximumCopies
- uid: System.Drawing.Printing.PrinterSettings.MaximumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MaximumPage
  nameWithType: PrinterSettings.MaximumPage
- uid: System.Drawing.Printing.PrinterSettings.MinimumPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: MinimumPage
  nameWithType: PrinterSettings.MinimumPage
- uid: System.Drawing.Printing.PrinterSettings.PaperSizes*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSizes
  nameWithType: PrinterSettings.PaperSizes
- uid: System.Drawing.Printing.PrinterSettings.PaperSources*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PaperSources
  nameWithType: PrinterSettings.PaperSources
- uid: System.Drawing.Printing.PrinterSettings.PrinterName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterName
  nameWithType: PrinterSettings.PrinterName
- uid: System.Drawing.Printing.PrinterSettings.PrinterResolutions*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrinterResolutions
  nameWithType: PrinterSettings.PrinterResolutions
- uid: System.Drawing.Printing.PrinterSettings.PrintFileName*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintFileName
  nameWithType: PrinterSettings.PrintFileName
- uid: System.Drawing.Printing.PrinterSettings.PrintRange*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintRange
  nameWithType: PrinterSettings.PrintRange
- uid: System.Drawing.Printing.PrinterSettings.PrintToFile*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: PrintToFile
  nameWithType: PrinterSettings.PrintToFile
- uid: System.Drawing.Printing.PrinterSettings.SetHdevmode*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevmode
  nameWithType: PrinterSettings.SetHdevmode
- uid: System.Drawing.Printing.PrinterSettings.SetHdevnames*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SetHdevnames
  nameWithType: PrinterSettings.SetHdevnames
- uid: System.Drawing.Printing.PrinterSettings.SupportsColor*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: SupportsColor
  nameWithType: PrinterSettings.SupportsColor
- uid: System.Drawing.Printing.PrinterSettings.ToPage*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToPage
  nameWithType: PrinterSettings.ToPage
- uid: System.Drawing.Printing.PrinterSettings.ToString*
  parent: System.Drawing.Printing.PrinterSettings
  isExternal: false
  name: ToString
  nameWithType: PrinterSettings.ToString
