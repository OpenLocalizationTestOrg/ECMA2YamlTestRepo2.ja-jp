### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "コントロールまたは格納およびアプリケーションの設定を取得するライブラリの標準的な機能を定義します。"
  remarks: "派生する設定のラッパー クラスを作成することで、アプリケーションにアプリケーション設定のサポートを追加する通常、 <xref:System.Configuration.ApplicationSettingsBase>、このクラスに特殊なプロパティを追加および</xref:System.Configuration.ApplicationSettingsBase> ただし、このアプローチ十分にカプセル化しないコントロール用のアプリケーション設定の詳細から、コンテナーがシールドされてようにします。 IPersistComponentSettings インターフェイスでは、コントロール、コンポーネント、またはライブラリ モジュールにアプリケーション設定の状態変更要求を通信するための標準のインターフェイスを持つアプリケーションを提供します。 デザイン時ツールは、コントロールおよびコンポーネントを適切に管理するには、このインターフェイスによっても異なります。"
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "対応するプロパティとコントロールのアプリケーション設定を読み込んで、コントロールの状態を更新します。"
  remarks: "一般に、LoadComponentSettings メソッドが&2; つの重要な操作を実行します:-を呼び出すことによって通常のアプリケーション設定のプロパティの値を更新するコントロールに含まれる各アプリケーションの設定インスタンスになります、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッド</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>。      必要に応じてプロパティを再読み込みされたこれらの設定に依存する全般プロパティを更新します。 設定クラスが含まれている場合など、`location`設定プロパティ、LoadComponentSettings できるように、コントロールの<xref:System.Windows.Forms.Control.Location%2A>プロパティが再読み込みされたこの設定を反映するように更新します</xref:System.Windows.Forms.Control.Location%2A>。"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "コントロールのアプリケーション設定のプロパティを既定値にリセットします。"
  remarks: "ResetComponentSettings メソッドの実装を呼び出す通常、<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>が含まれているアプリケーション設定クラスの各インスタンス上のメソッド</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>。"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "コントロールのアプリケーション設定のプロパティが保持されます。"
  remarks: "SaveComponentSettings メソッドは、コントロールのアプリケーション設定のプロパティの値を関連するデータ ストアに書き込みます。 メソッドを使用してデータ ストアとシリアル化技法は<xref:System.Configuration.SettingsProviderAttribute>。</xref:System.Configuration.SettingsProviderAttribute>を介して各設定クラスに関連付けられている設定プロバイダーによって決定されます。 使用して設定プロバイダーの選択をオーバーライドすることができます、<xref:System.Configuration.ISettingsProviderService>インターフェイス</xref:System.Configuration.ISettingsProviderService>。      > [!NOTE] > 場合、<xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>プロパティは`true`、コントロール呼び出す必要があります SaveComponentSettings 独自<xref:System.Windows.Forms.Control.Dispose%2A>メソッド、アプリケーションが終了する前に、コントロールの構成データは自動的に格納できるようにします</xref:System.Windows.Forms.Control.Dispose%2A></xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>。"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得またはコントロールがそのアプリケーション設定のプロパティを自動的に保持する必要があるかどうかを示す値を設定します。"
  remarks: "明示的に呼び出すへの応答でこのデータが保持されます通常コントロール構成データが含まれている場合、<xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>メソッドも暗黙的にまたはときに、コントロールの<xref:System.Windows.Forms.Control.Dispose%2A>メソッドが呼び出されます</xref:System.Windows.Forms.Control.Dispose%2A></xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>。 SaveSettings プロパティが破棄されるとき、コントロールがその、構成データを自動的に保持するかどうかを判断します。       SaveSettings の既定値は、コントロールの実装に依存します。 ドキュメント コントロールには、アプリケーションの設定を使用するかどうか、どのようなデータが保持され、SaveSettings プロパティの既定値は、新機能を示す必要があります。"
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コントロールを自動的に保持の状態です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得またはコントロールの現在のインスタンスのアプリケーション設定キーの値を設定します。"
  remarks: "同一のラッパー クラスの複数のインスタンスがある場合は、アプリケーション設定のプロパティのグループを区別するために、SettingsKey プロパティを使用します。 たとえば、コントロールが含まれている、関連付けられているラッパー クラスでは、通常は、同じアプリケーション内の同じコントロールの複数のインスタンスを配置する場合は、ラッパー クラスの複数のインスタンスで発生します。 インスタンスごとの単位で構成データが異なる場合にのみ、設定キーが必要たとえば、動的に配置されているコントロールの場所です。       次の一般的な規則が SettingsKey の使用に適用します-任意のクラスと同様に、コントロールが&0; 個以上のアプリケーション設定クラスを含む可能性があります<xref:System.Configuration.ApplicationSettingsBase>。</xref:System.Configuration.ApplicationSettingsBase>から派生。 各設定クラスには、独自の<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>プロパティ、そのクラスの複数のインスタンスのあいまいさを解消するのに役立ちます</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>が含まれています。      -コントロールには、異なる設定クラスに、インスタンスごとのデータおよび共有データは別です。      インスタンスごとの構成データを使用して、コントロールの`get`SettingsKey プロパティのアクセサーが既定にする必要があります、<xref:System.Windows.Forms.Control.Name%2A>コントロールの</xref:System.Windows.Forms.Control.Name%2A>。 ほとんどの場合、コントロールの名前は、アプリケーション内で一意になります。 コントロールには、構成データを共有のみが含まれている場合`get`既定にする必要があります`null`です。      -`set`設定クラスのインスタンスおよび共有構成データを含む区別するためにこのプロパティのアクセサーを実装する必要があります。 各設定クラスのインスタンスごとにデータを含む`set`<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>設定クラスのプロパティ</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>にだけでパススルーする必要があります 共有のデータを含む設定クラスの`set`必要がありますいないのアクションを実行する設定クラスです。"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>、コントロールの現在のインスタンスの設定キーを含むします</xref:System.String>。"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
