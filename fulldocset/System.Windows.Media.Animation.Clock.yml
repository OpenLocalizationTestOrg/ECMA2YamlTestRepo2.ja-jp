### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Clock
  id: Clock
  children:
  - System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Clock.Completed
  - System.Windows.Media.Animation.Clock.Controller
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  - System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Clock.CurrentGlobalTime
  - System.Windows.Media.Animation.Clock.CurrentIteration
  - System.Windows.Media.Animation.Clock.CurrentProgress
  - System.Windows.Media.Animation.Clock.CurrentState
  - System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  - System.Windows.Media.Animation.Clock.CurrentTime
  - System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  - System.Windows.Media.Animation.Clock.GetCanSlip
  - System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  - System.Windows.Media.Animation.Clock.HasControllableRoot
  - System.Windows.Media.Animation.Clock.IsPaused
  - System.Windows.Media.Animation.Clock.NaturalDuration
  - System.Windows.Media.Animation.Clock.Parent
  - System.Windows.Media.Animation.Clock.RemoveRequested
  - System.Windows.Media.Animation.Clock.SpeedChanged
  - System.Windows.Media.Animation.Clock.Stopped
  - System.Windows.Media.Animation.Clock.Timeline
  langs:
  - csharp
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
  type: Class
  summary: "実行時のタイミング状態を保持する、 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  remarks: "A <xref:System.Windows.Media.Animation.Timeline>、単独で実際に何もしない以外の時間のセグメントについて説明します</xref:System.Windows.Media.Animation.Timeline>。 タイムラインのクロックを実際の作業を行う: タイムラインの実行時のタイミングに関連する状態を保持します。       ほとんどの場合、タイムラインの時計が自動的に作成します。 使用してアニメーション化するときに、<xref:System.Windows.Media.Animation.Storyboard>または<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッド、クロックが自動的にタイムラインとアニメーションを作成し、その対象となるプロパティに適用します</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A></xref:System.Windows.Media.Animation.Storyboard>。 例については、次を参照してください。[する方法: ストーリー ボードを使用してプロパティをアニメーション化](~/add/includes/ajax-current-ext-md.md)と[する方法: プロパティなしを使用して、ストーリー ボードのアニメーション化](~/add/includes/ajax-current-ext-md.md)です。       作成することも、クロックに明示的を使用して、<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>メソッド</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>。 多数の類似オブジェクトをアニメーション化するなど、パフォーマンス重視のシナリオで、独自のクロックの使用を管理する、パフォーマンスが向上します。       クロックがツリーの構造に合ったで配置された、<xref:System.Windows.Media.Animation.Timeline>オブジェクト ツリーから作成されます</xref:System.Windows.Media.Animation.Timeline>。 このようなタイミング ツリーのルート クロック対話的に操作できます (一時停止、再開、停止、およびなど) によってその<xref:System.Windows.Media.Animation.Clock.Controller%2A>.</xref:System.Windows.Media.Animation.Clock.Controller%2A>を取得します。 ルート以外のクロックを直接制御できません。       いったん作成されると、時計を変更できません (ただし、操作することができます)。      ## イベント ハンドラーがある場合にのみタイマー A タイムラインの時計は進行状況に応じて、タイムラインを使用して、関連付けられているか (の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト) プロパティに関連付けられている</xref:System.Windows.Media.Animation.AnimationClock>。 この理由 (など)、これはお勧めしませんを使用すること、<xref:System.Windows.Media.Animation.Timeline>をタイマーとして</xref:System.Windows.Media.Animation.Timeline>。"
  syntax:
    content: 'public class Clock : System.Windows.Threading.DispatcherObject'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  id: '#ctor(System.Windows.Media.Animation.Timeline)'
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>クラスを指定して<xref:System.Windows.Media.Animation.Clock.Timeline*>をテンプレートとして</xref:System.Windows.Media.Animation.Clock.Timeline*>。 新しい<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>オブジェクトに子がありません。"
  syntax:
    content: protected Clock (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<> </> *> からこの時計を構築する必要があります。すべての子の時計は作成されません<> *> オブジェクト、存在する場合。"
  overload: System.Windows.Media.Animation.Clock.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このクロックの再生が完全に完了と発生します。"
  remarks: "このクロックがクロックのツリーのルート クロックである場合は、そのアクティブ期間 (繰り返しを含む) の末尾に達するし、そのすべての子はそれぞれのアクティブ期間の終わりに達しました後に、再生は完了します。 このクロックが子クロックである場合は、再生、ツリーのルート クロック、時計を所属先に達すると、アクティブな期間とそのすべての子のクロックの終了したら、再生が完了したと見なされます。       クロックを停止すると、その完了イベントがトリガーされませんが、塗りつぶし期間に進みます。"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Controller
  id: Controller
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得、 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>開始、一時停止、再開、シーク、スキップ、停止、または削除に使用できる<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>です。"
  remarks: "ルート クロックのみを対話的に制御できます。"
  syntax:
    content: public System.Windows.Media.Animation.ClockController Controller { get; }
    return:
      type: System.Windows.Media.Animation.ClockController
      description: "A <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>場合はこれがルート クロックです。 それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Clock.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  id: CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "現実世界の時間と比較される時計の時刻が現在進行している、レートを取得します。"
  syntax:
    content: public Nullable<double> CurrentGlobalSpeed { get; }
    return:
      type: System.Nullable{System.Double}
      description: "クロックの時間が速度現在進行中では、現実世界の時間を比較します。 このプロパティを返しますのかどうか、クロックが停止すると、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "クロックの速度が更新されたときに発生します。"
  remarks: "一時停止、再開を反転すること、加速する場合に、減速、シーク、停止、またはクロックの変更の対話型を使用して高速化、<xref:System.Windows.Media.Animation.ClockController>このイベントを発生させます</xref:System.Windows.Media.Animation.ClockController>。       このイベントが発生しますが、ときに、<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>プロパティが変更されたプロパティ、必ずしもを無効になります</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>。"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  id: CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "指定されている現在のグローバル時間を取得、[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]タイミング システムです。"
  syntax:
    content: protected TimeSpan CurrentGlobalTime { get; }
    return:
      type: System.TimeSpan
      description: "現在のグローバル時間、[!INCLUDE[TLA2#tla_wpf](~/add/includes/ajax-current-ext-md.md)]タイミング システムです。"
  overload: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  id: CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このクロックの現在のイテレーションを取得します。"
  remarks: "クロックの最初のイテレーションでは、1 の値を持ちます。       この時計のタイムラインがある場合、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定`true`、順方向リバースのペアで構成全体の反復処理、セグメントを次のいずれかだけでなく</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>。       現在のイテレーションに関係なくクロックをシークの現在のイテレーション 1 を返します。 1 に現在の反復を返しますもクロックを再起動します。"
  syntax:
    content: public Nullable<int> CurrentIteration { get; }
    return:
      type: System.Nullable{System.Int32}
      description: "その現在のアクティブな期間内でのクロックの現在のイテレーションまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このクロックが停止している場合。"
  overload: System.Windows.Media.Animation.Clock.CurrentIteration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  id: CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この現在の進行状況を取得<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>その現在のイテレーション内で。"
  remarks: "このプロパティの値が、<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>によって<xref:System.Windows.Media.Animation.Timeline.Duration%2A>この時計の<xref:System.Windows.Media.Animation.Clock.Timeline%2A>。</xref:System.Windows.Media.Animation.Clock.Timeline%2A>の</xref:System.Windows.Media.Animation.Timeline.Duration%2A>正規化された</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>ことを示します       あるクロック<xref:System.Windows.Media.Animation.ClockState>が 1.0 の CurrentProgress</xref:System.Windows.Media.Animation.ClockState> 。      ## イベント ハンドラーがある場合にのみタイマー A タイムラインの時計は進行状況に応じて、タイムラインを使用して、関連付けられているか (の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト) プロパティに関連付けられている</xref:System.Windows.Media.Animation.AnimationClock>。 この理由 (など)、これはお勧めしませんを使用すること、<xref:System.Windows.Media.Animation.Timeline>をタイマーとして</xref:System.Windows.Media.Animation.Timeline>。"
  syntax:
    content: public Nullable<double> CurrentProgress { get; }
    return:
      type: System.Nullable{System.Double}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このクロックが場合<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>、またはこのクロックがアクティブな場合、0.0 とその<> *> が、 <> </> *> の<xref:System.Windows.Duration.Forever*>以外の場合、0.0 ~ 1.0 の現在のイテレーションにおけるこのクロックの現在の進行状況を示す値</xref:System.Windows.Duration.Forever*>。 値が 0.0 のない進行状況を示し、値が 1.0 の時計が、現在のイテレーションの終了値であります。"
  overload: System.Windows.Media.Animation.Clock.CurrentProgress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentState
  id: CurrentState
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "クロックが現在あるかどうかを示す値を取得<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>、 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>、または<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;></xref>です。"
  remarks: "時計の CurrentState プロパティかは示されませんが一時停止するかどうかに注意してください。 クロックが一時停止しているかどうかを判断するのには、使用、<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>プロパティ</xref:System.Windows.Media.Animation.Clock.IsPaused%2A>。       <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>このプロパティの値が変更されるたびに発生します</xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated>。"
  syntax:
    content: public System.Windows.Media.Animation.ClockState CurrentState { get; }
    return:
      type: System.Windows.Media.Animation.ClockState
      description: 'クロックの現在の状態: <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>、 <xref href=&quot;System.Windows.Media.Animation.ClockState&quot;> </xref>、または<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;></xref>です。'
  overload: System.Windows.Media.Animation.Clock.CurrentState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "発生したときに、クロックの<xref:System.Windows.Media.Animation.Clock.CurrentState*>プロパティを更新します</xref:System.Windows.Media.Animation.Clock.CurrentState*>。"
  remarks: "使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>場合は、クロックの開始時に通知されるようにするときにイベントが停止すると、または入力します</xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>。 <xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、<xref:System.Windows.Media.Animation.Clock>状態が無効になりました</xref:System.Windows.Media.Animation.Clock></xref:System.EventHandler></xref:System.Object>。       <xref:System.Windows.Media.Animation.Clock>その<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A>は変わらないので</xref:System.Windows.Media.Animation.Clock>、一時停止 クロックが一時停止しているときに通知するを使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>。       このイベントが発生しますが、ときに、<xref:System.Windows.Media.Animation.ClockState>いって、必ずしもを無効になります、<xref:System.Windows.Media.Animation.ClockState>変更:<xref:System.Windows.Media.Animation.Clock>からに切り替えること<xref:System.Windows.Media.Animation.ClockState>に<xref:System.Windows.Media.Animation.ClockState>に戻ると<xref:System.Windows.Media.Animation.ClockState>同じティックの場合は、このイベントを起動がその<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>プロパティが実際に変更されません</xref:System.Windows.Media.Animation.Clock.CurrentState%2A></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.Clock></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState>。"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  id: CurrentTime
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得このクロックの現在の現在のイテレーションにおける現在の時刻。"
  remarks: "## イベント ハンドラーがある場合にのみタイマー A タイムラインの時計は進行状況に応じて、タイムラインを使用して、関連付けられているか (の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト) プロパティに関連付けられている</xref:System.Windows.Media.Animation.AnimationClock>。 この理由 (など)、これはお勧めしませんを使用すること、<xref:System.Windows.Media.Animation.Timeline>をタイマーとして</xref:System.Windows.Media.Animation.Timeline>。"
  syntax:
    content: public Nullable<TimeSpan> CurrentTime { get; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このクロックが場合<xref href=&quot;System.Windows.Media.Animation.ClockState&quot;></xref>以外の場合、このクロックの現在の時刻。"
  overload: System.Windows.Media.Animation.Clock.CurrentTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "発生したときにこの時計の<xref:System.Windows.Media.Animation.Clock.CurrentTime*>は無効になります</xref:System.Windows.Media.Animation.Clock.CurrentTime*>。"
  remarks: 'A clock''s <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> becomes invalid when the clock progresses. The following interactive operations also trigger the CurrentTimeInvalidated event: <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.SkipToFill%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, and <xref:System.Windows.Media.Animation.ClockController.Stop%2A>.'
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  id: DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "クロックが繰り返されます、スキップ、またはシークされるたびに、派生クラスとして実装された場合は呼び出されます。"
  syntax:
    content: protected virtual void DiscontinuousTimeMovement ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  id: GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "返すかどうか、 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>が自身の外部のタイム ソース タイミング システムとの同期が必要です。"
  remarks: "メディア<xref:System.Windows.Media.MediaTimeline><xref:System.Windows.Media.Animation.Storyboard><xref:System.Windows.Media.Animation.Clock><xref:System.Windows.Media.Animation.Storyboard>.</xref:System.Windows.Media.Animation.Storyboard>内で他のタイムラインとの同期が必要な場合があります外部時刻ソース (たとえばビデオ クリップ) 必要がありますを</xref:System.Windows.Media.Animation.Clock>作成する例</xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.Media.MediaTimeline>を使用して再生します。 参照してください<xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>詳細についてはします</xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>。"
  syntax:
    content: protected virtual bool GetCanSlip ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します**true**場合、 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>自身の外部ソースを時間、タイミング システムとの同期が必要ですがそれ以外の場合、 **false**です。"
  overload: System.Windows.Media.Animation.Clock.GetCanSlip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  id: GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得このクロックの現在の現在のイテレーションにおける現在の時刻。"
  remarks: "実装では、このメソッドを使用してください、<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>メソッドと、コードから直接呼び出すことはできません。</xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> 。"
  syntax:
    content: protected virtual TimeSpan GetCurrentTimeCore ();
    parameters: []
    return:
      type: System.TimeSpan
      description: "アクティブまたは保留されている場合は、このクロックの現在の時刻それ以外の場合、 <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  id: HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>制御可能なクロックのツリーの一部です。"
  syntax:
    content: public bool HasControllableRoot { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このクロックが、制御可能なルート クロックでクロックのツリーに属している場合、またはこのクロック自体が制御可能なルートです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Clock.HasControllableRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.IsPaused
  id: IsPaused
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>、または一時停止は、親のいずれか。"
  syntax:
    content: public bool IsPaused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>または一時停止中です。 それ以外の場合、その親のいずれかが<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Clock.IsPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  id: NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この時計の<xref:System.Windows.Media.Animation.Clock.Timeline*>。</xref:System.Windows.Media.Animation.Clock.Timeline*>の自然な期間を取得します。"
  remarks: "自然な期間の詳細については、次を参照してください、<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName>メソッド。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A?displayProperty=fullName> 。"
  syntax:
    content: public System.Windows.Duration NaturalDuration { get; }
    return:
      type: System.Windows.Duration
      description: "その<xref:System.Windows.Media.Animation.Clock.Timeline*>。</xref:System.Windows.Media.Animation.Clock.Timeline*>によって決定されるこのクロックの自然な期間"
  overload: System.Windows.Media.Animation.Clock.NaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Parent
  id: Parent
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このクロックの親である、クロックを取得します。"
  syntax:
    content: public System.Windows.Media.Animation.Clock Parent { get; }
    return:
      type: System.Windows.Media.Animation.Clock
      description: "このクロックの親または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このクロックがルートである場合。"
  overload: System.Windows.Media.Animation.Clock.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "発生したときに、<xref:System.Windows.Media.Animation.ClockController.Remove*>このメソッドが呼び出された<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>またはその親のクロックの&1; つ</xref:System.Windows.Media.Animation.ClockController.Remove*>。"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  id: SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "派生クラスで実装される、時計されるたびに呼び出されるときに開始、スキップ、一時停止、再開されると、場合や、クロックの<xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>を変更します</xref:System.Windows.Media.Animation.ClockController.SpeedRatio*>。"
  syntax:
    content: protected virtual void SpeedChanged ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.SpeedChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Stopped
  id: Stopped
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "派生クラスで実装が呼び出され、クロックの使用を停止するたびに、<xref:System.Windows.Media.Animation.ClockController.Stop*>メソッド</xref:System.Windows.Media.Animation.ClockController.Stop*>。"
  syntax:
    content: protected virtual void Stopped ();
    parameters: []
  overload: System.Windows.Media.Animation.Clock.Stopped*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Clock.Timeline
  id: Timeline
  parent: System.Windows.Media.Animation.Clock
  langs:
  - csharp
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このタイムラインを取得<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>作成されました。"
  remarks: "クロックの変更<xref:System.Windows.Media.MediaTimeline>; 時計を更新できません変更<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline>から新しいクロックを作成する必要があります</xref:System.Windows.Media.MediaTimeline>"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Timeline { get; }
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "このタイムライン<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>作成されました。"
  overload: System.Windows.Media.Animation.Clock.Timeline*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: System.Windows.Threading.DispatcherObject
- uid: System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock(Timeline)
  nameWithType: Clock.Clock(Timeline)
  fullName: System.Windows.Media.Animation.Clock.Clock(Timeline)
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Clock.Completed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Completed
  nameWithType: Clock.Completed
  fullName: System.Windows.Media.Animation.Clock.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Clock.Controller
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
  fullName: System.Windows.Media.Animation.Clock.Controller
- uid: System.Windows.Media.Animation.ClockController
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockController
  nameWithType: ClockController
  fullName: System.Windows.Media.Animation.ClockController
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed
- uid: System.Nullable{System.Double}
  parent: System
  isExternal: true
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Double>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Clock.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
  fullName: System.Windows.Media.Animation.Clock.CurrentGlobalTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Windows.Media.Animation.Clock.CurrentIteration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
  fullName: System.Windows.Media.Animation.Clock.CurrentIteration
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentProgress
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
  fullName: System.Windows.Media.Animation.Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
  fullName: System.Windows.Media.Animation.Clock.CurrentState
- uid: System.Windows.Media.Animation.ClockState
  parent: System.Windows.Media.Animation
  isExternal: false
  name: ClockState
  nameWithType: ClockState
  fullName: System.Windows.Media.Animation.ClockState
- uid: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Clock.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Clock.CurrentTime
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
  fullName: System.Windows.Media.Animation.Clock.CurrentTime
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Clock.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Clock.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement()
  nameWithType: Clock.DiscontinuousTimeMovement()
  fullName: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement()
- uid: System.Windows.Media.Animation.Clock.GetCanSlip
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip()
  nameWithType: Clock.GetCanSlip()
  fullName: System.Windows.Media.Animation.Clock.GetCanSlip()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore()
  nameWithType: Clock.GetCurrentTimeCore()
  fullName: System.Windows.Media.Animation.Clock.GetCurrentTimeCore()
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
  fullName: System.Windows.Media.Animation.Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
  fullName: System.Windows.Media.Animation.Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
  fullName: System.Windows.Media.Animation.Clock.NaturalDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Clock.Parent
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
  fullName: System.Windows.Media.Animation.Clock.Parent
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Clock.RemoveRequested
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: RemoveRequested
  nameWithType: Clock.RemoveRequested
  fullName: System.Windows.Media.Animation.Clock.RemoveRequested
- uid: System.Windows.Media.Animation.Clock.SpeedChanged
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged()
  nameWithType: Clock.SpeedChanged()
  fullName: System.Windows.Media.Animation.Clock.SpeedChanged()
- uid: System.Windows.Media.Animation.Clock.Stopped
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped()
  nameWithType: Clock.Stopped()
  fullName: System.Windows.Media.Animation.Clock.Stopped()
- uid: System.Windows.Media.Animation.Clock.Timeline
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
  fullName: System.Windows.Media.Animation.Clock.Timeline
- uid: System.Windows.Media.Animation.Clock.#ctor*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Clock
  nameWithType: Clock.Clock
- uid: System.Windows.Media.Animation.Clock.Controller*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Controller
  nameWithType: Clock.Controller
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalSpeed*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalSpeed
  nameWithType: Clock.CurrentGlobalSpeed
- uid: System.Windows.Media.Animation.Clock.CurrentGlobalTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentGlobalTime
  nameWithType: Clock.CurrentGlobalTime
- uid: System.Windows.Media.Animation.Clock.CurrentIteration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentIteration
  nameWithType: Clock.CurrentIteration
- uid: System.Windows.Media.Animation.Clock.CurrentProgress*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentProgress
  nameWithType: Clock.CurrentProgress
- uid: System.Windows.Media.Animation.Clock.CurrentState*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentState
  nameWithType: Clock.CurrentState
- uid: System.Windows.Media.Animation.Clock.CurrentTime*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: CurrentTime
  nameWithType: Clock.CurrentTime
- uid: System.Windows.Media.Animation.Clock.DiscontinuousTimeMovement*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: DiscontinuousTimeMovement
  nameWithType: Clock.DiscontinuousTimeMovement
- uid: System.Windows.Media.Animation.Clock.GetCanSlip*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCanSlip
  nameWithType: Clock.GetCanSlip
- uid: System.Windows.Media.Animation.Clock.GetCurrentTimeCore*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: GetCurrentTimeCore
  nameWithType: Clock.GetCurrentTimeCore
- uid: System.Windows.Media.Animation.Clock.HasControllableRoot*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: HasControllableRoot
  nameWithType: Clock.HasControllableRoot
- uid: System.Windows.Media.Animation.Clock.IsPaused*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: IsPaused
  nameWithType: Clock.IsPaused
- uid: System.Windows.Media.Animation.Clock.NaturalDuration*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: NaturalDuration
  nameWithType: Clock.NaturalDuration
- uid: System.Windows.Media.Animation.Clock.Parent*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Parent
  nameWithType: Clock.Parent
- uid: System.Windows.Media.Animation.Clock.SpeedChanged*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: SpeedChanged
  nameWithType: Clock.SpeedChanged
- uid: System.Windows.Media.Animation.Clock.Stopped*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Stopped
  nameWithType: Clock.Stopped
- uid: System.Windows.Media.Animation.Clock.Timeline*
  parent: System.Windows.Media.Animation.Clock
  isExternal: false
  name: Timeline
  nameWithType: Clock.Timeline
