### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.IDataContractSurrogate
  id: IDataContractSurrogate
  children:
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  - System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  - System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  - System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  langs:
  - csharp
  name: IDataContractSurrogate
  nameWithType: IDataContractSurrogate
  fullName: System.Runtime.Serialization.IDataContractSurrogate
  type: Interface
  summary: "によって、他の&1; つの型の代わりに必要なメソッドを提供、<xref:System.Runtime.Serialization.DataContractSerializer>シリアル化、逆シリアル化、およびエクスポートおよびインポート中の XML スキーマ ドキュメント (XSD).</xref:System.Runtime.Serialization.DataContractSerializer>"
  remarks: "使用する場合に、IDataContractSurrogate を使用して、<xref:System.Runtime.Serialization.DataContractSerializer>場合は、次のいずれかを実行する必要があります&1; つの型に置き換えるか、またはオブジェクト、またはスキーマのバリエーションを動的に生成します。</xref:System.Runtime.Serialization.DataContractSerializer> 。 サンプル アプリケーションについては、次を参照してください。 [DataContract のサロゲート](~/add/includes/ajax-current-ext-md.md)です。 データ コントラクトの詳細については、次を参照してください。[を使用してデータ コントラクト](~/add/includes/ajax-current-ext-md.md)です。       、実行時に、固有の仕様が見つかります<xref:System.Runtime.Serialization.DataContractSerializer>を使用してサービスのすべての操作に対して、<xref:System.ServiceModel.Description.OperationDescription>を検索する、<xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior>インスタンス。</xref:System.ServiceModel.Description.DataContractSerializerOperationBehavior> </xref:System.ServiceModel.Description.OperationDescription> </xref:System.Runtime.Serialization.DataContractSerializer> サロゲートを作成するインターフェイスの実装の詳細については、次を参照してください。[データ コントラクト サロゲート](~/add/includes/ajax-current-ext-md.md)です。       使用しているときに、XML スキーマのエクスポートとインポートを与える、IDataContractSurrogate を使用することもできます、<xref:System.Runtime.Serialization.XsdDataContractExporter>と<xref:System.Runtime.Serialization.XsdDataContractImporter>クラス</xref:System.Runtime.Serialization.XsdDataContractImporter></xref:System.Runtime.Serialization.XsdDataContractExporter>。 監視できるように IDataContractSurrogate を割り当てることによって、<xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>のプロパティ、<xref:System.Runtime.Serialization.ExportOptions>クラス、または<xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A><xref:System.Runtime.Serialization.ImportOptions>クラス</xref:System.Runtime.Serialization.ImportOptions>のプロパティ</xref:System.Runtime.Serialization.ImportOptions.DataContractSurrogate%2A>に</xref:System.Runtime.Serialization.ExportOptions></xref:System.Runtime.Serialization.ExportOptions.DataContractSurrogate%2A>  詳細については、次を参照してください。[スキーマのインポートとエクスポート](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows an implementation of the IDataContractSurrogate interface. The code substitutes the serialization of the `Person` type for a `PersonSurrogated` class.  \n  \n [!code-vb[IDataContractSurrogate#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_6_1.vb)]\n [!code-cs[IDataContractSurrogate#0](~/add/codesnippet/csharp/t-system.runtime.seriali_6_1.cs)]"
  syntax:
    content: public interface IDataContractSurrogate
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  id: GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "スキーマ エクスポート操作中には、null 以外の戻り値のスキーマに注釈を挿入します。"
  syntax:
    content: public object GetCustomDataToExport (System.Reflection.MemberInfo memberInfo, Type dataContractType);
    parameters:
    - id: memberInfo
      type: System.Reflection.MemberInfo
      description: "A<xref:System.Reflection.MemberInfo>メンバーの説明です</xref:System.Reflection.MemberInfo>。"
    - id: dataContractType
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Object
      description: "XML スキーマ定義に挿入される注釈を表すオブジェクト。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  id: GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "スキーマ エクスポート操作中には、null 以外の戻り値のスキーマに注釈を挿入します。"
  syntax:
    content: public object GetCustomDataToExport (Type clrType, Type dataContractType);
    parameters:
    - id: clrType
      type: System.Type
      description: "置き換えられる CLR 型。"
    - id: dataContractType
      type: System.Type
      description: "注釈が付けられるデータ コントラクトの型。"
    return:
      type: System.Object
      description: "XML スキーマ定義に挿入される注釈を表すオブジェクト。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  id: GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "シリアル化、逆シリアル化、およびスキーマのインポートおよびエクスポート中に、指定された型を置き換えるデータ コントラクト型を返します。"
  remarks: ''
  example:
  - "The following example shows an implementation of the GetDataContractType method.  \n  \n [!code-vb[IDataContractSurrogate#1](~/add/codesnippet/visualbasic/90968a41-34e3-48fc-8e53-_1.vb)]\n [!code-cs[IDataContractSurrogate#1](~/add/codesnippet/csharp/90968a41-34e3-48fc-8e53-_1.cs)]"
  syntax:
    content: public Type GetDataContractType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "CLR 型<xref:System.Type>代わりに使用します</xref:System.Type>。"
    return:
      type: System.Type
      description: "<xref:System.Type>の代わりに、 <code> type </code>値</xref:System.Type>。 この型は<xref:System.Runtime.Serialization.DataContractSerializer>。</xref:System.Runtime.Serialization.DataContractSerializer>によってシリアル化可能である必要があります。 たとえばでマークする必要がある、<xref:System.Runtime.Serialization.DataContractAttribute>属性か、シリアライザーが認識できる他のメカニズム</xref:System.Runtime.Serialization.DataContractAttribute>。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  id: GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "逆シリアル化中に指定されたオブジェクトの代わりには、オブジェクトを返します。"
  remarks: "単純な実装の場合に、使用して then... else 制御構造をテストするかどうか、`obj`値は、サロゲートされた型。 場合は、変換に必要な戻り値、置き換えられたオブジェクトを指定します。 置き換えられたオブジェクトは、または同一の新しいインスタンスを指定できます`obj`インスタンス。"
  example:
  - "The following example shows an implementation of the GetDeserializedObject method.  \n  \n [!code-vb[IDataContractSurrogate#3](~/add/codesnippet/visualbasic/98dab246-6ee5-4fc3-8a64-_1.vb)]\n [!code-cs[IDataContractSurrogate#3](~/add/codesnippet/csharp/98dab246-6ee5-4fc3-8a64-_1.cs)]"
  syntax:
    content: public object GetDeserializedObject (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "代わりに使用する逆シリアル化されたオブジェクト。"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>に置き換えられたオブジェクトを割り当てる必要があります</xref:System.Type>。"
    return:
      type: System.Object
      description: "代替の逆シリアル化されたオブジェクト。 このオブジェクトは、 <xref:System.Runtime.Serialization.DataContractSerializer>。</xref:System.Runtime.Serialization.DataContractSerializer>によってシリアル化可能である型でなければなりません たとえばでマークする必要がある、<xref:System.Runtime.Serialization.DataContractAttribute>属性か、シリアライザーが認識できる他のメカニズム</xref:System.Runtime.Serialization.DataContractAttribute>。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  id: GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "カスタム データ オブジェクトの逆シリアル化とシリアル化に使用する既知の型のコレクションを設定します。"
  remarks: "このメソッドが必要な時にスキーマのエクスポートまたはスキーマのインポートを使用して、スキーマに注釈を挿入する場合にのみ、<xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>メソッド</xref:System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport%2A>。"
  syntax:
    content: public void GetKnownCustomDataTypes (System.Collections.ObjectModel.Collection<Type> customDataTypes);
    parameters:
    - id: customDataTypes
      type: System.Collections.ObjectModel.Collection{System.Type}
      description: "A &lt;xref:System.Collections.ObjectModel.Collection%601&gt;の<xref:System.Type>既知の型を追加する</xref:System.Type>。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  id: GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "シリアル化中を指定したオブジェクトを置き換えるオブジェクトを返します。"
  remarks: "このメソッドが返す必要がありますいない`null`型に逆シリアル化で、データがキャストするため<xref:System.Object>と<xref:System.InvalidCastException>がスローされます</xref:System.InvalidCastException></xref:System.Object>。"
  example:
  - "The following example shows an implementation of the GetObjectToSerialize method.  \n  \n [!code-vb[IDataContractSurrogate#2](~/add/codesnippet/visualbasic/5c78fc6a-caaf-4bc0-ab0d-_1.vb)]\n [!code-cs[IDataContractSurrogate#2](~/add/codesnippet/csharp/5c78fc6a-caaf-4bc0-ab0d-_1.cs)]"
  syntax:
    content: public object GetObjectToSerialize (object obj, Type targetType);
    parameters:
    - id: obj
      type: System.Object
      description: "置き換えるオブジェクト。"
    - id: targetType
      type: System.Type
      description: "<xref:System.Type>に置き換えられたオブジェクトを割り当てる必要があります</xref:System.Type>。"
    return:
      type: System.Object
      description: "シリアル化される置き換えられたオブジェクト。 オブジェクトは、 <xref:System.Runtime.Serialization.DataContractSerializer>。</xref:System.Runtime.Serialization.DataContractSerializer>によってシリアル化可能である必要があります。 たとえばでマークする必要がある、<xref:System.Runtime.Serialization.DataContractAttribute>属性か、シリアライザーが認識できる他のメカニズム</xref:System.Runtime.Serialization.DataContractAttribute>。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  id: GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "スキーマのインポート中に、スキーマによって参照される型を返します。"
  remarks: '`Null`スキーマの種類を表すため、CLR 型が存在しないかどうかに返されます。 これは、スキーマのインポート中に生成する新しい型になります。'
  example:
  - "The following example shows an implementation of the GetReferencedTypeOnImport method.  \n  \n [!code-vb[IDataContractSurrogate#4](~/add/codesnippet/visualbasic/9ffa3127-8c36-42f6-862b-_1.vb)]\n [!code-cs[IDataContractSurrogate#4](~/add/codesnippet/csharp/9ffa3127-8c36-42f6-862b-_1.cs)]"
  syntax:
    content: public Type GetReferencedTypeOnImport (string typeName, string typeNamespace, object customData);
    parameters:
    - id: typeName
      type: System.String
      description: "スキーマ内の型の名前。"
    - id: typeNamespace
      type: System.String
      description: "スキーマ内の型の名前空間。"
    - id: customData
      type: System.Object
      description: "参照先の型を検索するために使用できるデータは、XML スキーマ定義に挿入された注釈を表すオブジェクト。"
    return:
      type: System.Type
      description: "<xref:System.Type>参照された型を使用する</xref:System.Type>。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  id: ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  langs:
  - csharp
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "インポートされたスキーマから生成された型を処理します。"
  remarks: "入力<xref:System.CodeDom.CodeTypeDeclaration>または他の情報を<xref:System.CodeDom.CodeCompileUnit>このメソッド内のユーザーによって変更できます</xref:System.CodeDom.CodeCompileUnit></xref:System.CodeDom.CodeTypeDeclaration>。 場合`null`が返されるおそれがある型を生成できません。 場合、新しい<xref:System.CodeDom.CodeTypeDeclaration>が返されると、生成元の型が置き換わります</xref:System.CodeDom.CodeTypeDeclaration>。"
  syntax:
    content: public System.CodeDom.CodeTypeDeclaration ProcessImportedType (System.CodeDom.CodeTypeDeclaration typeDeclaration, System.CodeDom.CodeCompileUnit compileUnit);
    parameters:
    - id: typeDeclaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref>スキーマのインポート中に生成された型の宣言を表すプロセスにします。"
    - id: compileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>スキーマのインポート中に生成された他のコードを格納しています。"
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "A <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref>処理済みの型を格納します。"
  overload: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Reflection.MemberInfo,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(MemberInfo,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(MemberInfo,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(System.Type,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport(Type,Type)
  nameWithType: IDataContractSurrogate.GetCustomDataToExport(Type,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport(Type,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType(Type)
  nameWithType: IDataContractSurrogate.GetDataContractType(Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType(Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject(Object,Type)
  nameWithType: IDataContractSurrogate.GetDeserializedObject(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(System.Collections.ObjectModel.Collection{System.Type})
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes(Collection<Type>)
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes(Collection<Type>)
- uid: System.Collections.ObjectModel.Collection{System.Type}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<Type>
  nameWithType: Collection<Type>
  fullName: System.Collections.ObjectModel.Collection<System.Type>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Type>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(System.Object,System.Type)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize(Object,Type)
  nameWithType: IDataContractSurrogate.GetObjectToSerialize(Object,Type)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize(Object,Type)
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(System.String,System.String,System.Object)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport(String,String,Object)
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport(String,String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  nameWithType: IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
  fullName: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType(CodeTypeDeclaration,CodeCompileUnit)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetCustomDataToExport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetCustomDataToExport
  nameWithType: IDataContractSurrogate.GetCustomDataToExport
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDataContractType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDataContractType
  nameWithType: IDataContractSurrogate.GetDataContractType
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetDeserializedObject*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetDeserializedObject
  nameWithType: IDataContractSurrogate.GetDeserializedObject
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetKnownCustomDataTypes*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetKnownCustomDataTypes
  nameWithType: IDataContractSurrogate.GetKnownCustomDataTypes
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetObjectToSerialize*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetObjectToSerialize
  nameWithType: IDataContractSurrogate.GetObjectToSerialize
- uid: System.Runtime.Serialization.IDataContractSurrogate.GetReferencedTypeOnImport*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: GetReferencedTypeOnImport
  nameWithType: IDataContractSurrogate.GetReferencedTypeOnImport
- uid: System.Runtime.Serialization.IDataContractSurrogate.ProcessImportedType*
  parent: System.Runtime.Serialization.IDataContractSurrogate
  isExternal: false
  name: ProcessImportedType
  nameWithType: IDataContractSurrogate.ProcessImportedType
