### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.RectAnimation
  id: RectAnimation
  children:
  - System.Windows.Media.Animation.RectAnimation.#ctor
  - System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration)
  - System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  - System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration)
  - System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  - System.Windows.Media.Animation.RectAnimation.By
  - System.Windows.Media.Animation.RectAnimation.ByProperty
  - System.Windows.Media.Animation.RectAnimation.Clone
  - System.Windows.Media.Animation.RectAnimation.CreateInstanceCore
  - System.Windows.Media.Animation.RectAnimation.EasingFunction
  - System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty
  - System.Windows.Media.Animation.RectAnimation.From
  - System.Windows.Media.Animation.RectAnimation.FromProperty
  - System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.RectAnimation.IsAdditive
  - System.Windows.Media.Animation.RectAnimation.IsCumulative
  - System.Windows.Media.Animation.RectAnimation.To
  - System.Windows.Media.Animation.RectAnimation.ToProperty
  langs:
  - csharp
  name: RectAnimation
  nameWithType: RectAnimation
  fullName: System.Windows.Media.Animation.RectAnimation
  type: Class
  summary: "値をアニメーション化、 <xref href=&quot;System.Windows.Rect&quot;> </xref>線形補間を使用して&2; つのターゲット値の間のプロパティです。"
  remarks: "アニメーションは、期間のプロパティの値を更新します。 アニメーション効果は、移動など、微妙な<xref:System.Windows.Shapes.Shape>左と右、または回転させ、その色の変更中に元のサイズの 200 回にオブジェクトを拡大するなど、大きないくつかのピクセル</xref:System.Windows.Shapes.Shape>。 アニメーションを作成する[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]アニメーションをオブジェクトのプロパティの値に関連付けます。      ## ターゲット値、RectAnimation クラスでは、次の&2; つのターゲット値の間の遷移を作成します。 ターゲット値を設定するを使用してその<xref:System.Windows.Media.Animation.RectAnimation.From%2A>、 <xref:System.Windows.Media.Animation.RectAnimation.To%2A>、および<xref:System.Windows.Media.Animation.RectAnimation.By%2A>プロパティ</xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A>。  次の表方法、 <xref:System.Windows.Media.Animation.RectAnimation.From%2A>、 <xref:System.Windows.Media.Animation.RectAnimation.To%2A>、および<xref:System.Windows.Media.Animation.RectAnimation.By%2A>プロパティは一緒に使用される可能性がありますまたは単独で、アニメーションのターゲットを決定する値します</xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A>。      |指定したプロパティ |結果の動作 |  |--------------------------|------------------------|  |<xref:System.Windows.Media.Animation.RectAnimation.From%2A>|アニメーションをアニメーション化されているプロパティの基本値または前のアニメーションに<xref:System.Windows.Media.Animation.RectAnimation.From%2A>プロパティで指定された値からの前のアニメーションの構成方法に応じて、値を出力します |。  |<xref:System.Windows.Media.Animation.RectAnimation.From%2A>と<xref:System.Windows.Media.Animation.RectAnimation.To%2A>|アニメーション、<xref:System.Windows.Media.Animation.RectAnimation.To%2A>プロパティで指定された値に<xref:System.Windows.Media.Animation.RectAnimation.From%2A>プロパティで指定された値です |。  |<xref:System.Windows.Media.Animation.RectAnimation.From%2A>と<xref:System.Windows.Media.Animation.RectAnimation.By%2A>|アニメーション、<xref:System.Windows.Media.Animation.RectAnimation.From%2A>プロパティを<xref:System.Windows.Media.Animation.RectAnimation.From%2A>の合計で指定された値と<xref:System.Windows.Media.Animation.RectAnimation.By%2A>プロパティによって指定された値です |。  |<xref:System.Windows.Media.Animation.RectAnimation.To%2A>|アニメーションのプロパティの基本値または前のアニメーションからのアニメーションの進行状況の<xref:System.Windows.Media.Animation.RectAnimation.To%2A>プロパティで指定された値に値を出力します |。  |<xref:System.Windows.Media.Animation.RectAnimation.By%2A>|アニメーションを付けるプロパティのベース値からアニメーション、または前のアニメーションの値と<xref:System.Windows.Media.Animation.RectAnimation.By%2A>プロパティで指定された値の合計値を出力します |。     > [!NOTE] > 両方を設定する場合、<xref:System.Windows.Media.Animation.RectAnimation.To%2A>と<xref:System.Windows.Media.Animation.RectAnimation.By%2A>、プロパティ、<xref:System.Windows.Media.Animation.RectAnimation.To%2A>プロパティが優先されます、<xref:System.Windows.Media.Animation.RectAnimation.By%2A>プロパティは無視されます</xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A>。       その他の補間メソッドを使用して&3; つ以上のターゲット値の間のアニメーション化を使用してまたは、<xref:System.Windows.Media.Animation.RectAnimationUsingKeyFrames>オブジェクト</xref:System.Windows.Media.Animation.RectAnimationUsingKeyFrames>。       1 つのプロパティを複数のアニメーションを適用する方法については、次を参照してください。[キー フレーム アニメーションの概要](~/add/includes/ajax-current-ext-md.md)です。      ## Freezable 機能 RectAnimation クラスから継承するため<xref:System.Windows.Freezable>、RectAnimation オブジェクトが次のよう、いくつかの特別な機能を取得します複数のオブジェクト間で共有としては、宣言された、パフォーマンスを向上させるためには読み取り専用に、複製、およびできます、スレッド セーフにします。</xref:System.Windows.Freezable> 。 によって提供されるさまざまな機能の詳細については<xref:System.Windows.Freezable>、オブジェクトを参照してください[Freezable オブジェクトの概要](~/add/includes/ajax-current-ext-md.md)</xref:System.Windows.Freezable>。"
  syntax:
    content: 'public class RectAnimation : System.Windows.Media.Animation.RectAnimationBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  - System.Windows.Media.Animation.Timeline
  - System.Windows.Media.Animation.AnimationTimeline
  - System.Windows.Media.Animation.RectAnimationBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock
  - System.Windows.Media.Animation.AnimationTimeline.CreateClock
  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty
  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault
  - System.Windows.Media.Animation.RectAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.RectAnimationBase.GetCurrentValue(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.RectAnimationBase.TargetPropertyType
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: RectAnimation()
  nameWithType: RectAnimation.RectAnimation()
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>クラスです。"
  syntax:
    content: public RectAnimation ();
    parameters: []
  overload: System.Windows.Media.Animation.RectAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration)
  id: '#ctor(System.Windows.Rect,System.Windows.Duration)'
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: RectAnimation(Rect,Duration)
  nameWithType: RectAnimation.RectAnimation(Rect,Duration)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>指定期間にわたって指定した値をアニメーション化するクラス。 アニメーションの開始値は、アニメーションを付けるプロパティのベース値、または別のアニメーションからの出力です。"
  syntax:
    content: public RectAnimation (System.Windows.Rect toValue, System.Windows.Duration duration);
    parameters:
    - id: toValue
      type: System.Windows.Rect
      description: "アニメーションの宛先値。"
    - id: duration
      type: System.Windows.Duration
      description: "時間の長さ、アニメーションは、開始から終了まで&1; 回再生に移動します。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  overload: System.Windows.Media.Animation.RectAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  id: '#ctor(System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: RectAnimation(Rect,Duration,FillBehavior)
  nameWithType: RectAnimation.RectAnimation(Rect,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Duration,FillBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>を指定した値に指定した期間にわたってアニメーションを付け、指定された塗りつぶし動作を持つクラス。 アニメーションの開始値は、アニメーションを付けるプロパティのベース値、または別のアニメーションからの出力です。"
  syntax:
    content: public RectAnimation (System.Windows.Rect toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);
    parameters:
    - id: toValue
      type: System.Windows.Rect
      description: "アニメーションの宛先値。"
    - id: duration
      type: System.Windows.Duration
      description: "時間の長さ、アニメーションは、開始から終了まで&1; 回再生に移動します。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
    - id: fillBehavior
      type: System.Windows.Media.Animation.FillBehavior
      description: "アニメーションがアクティブになっていないときの動作を指定します。"
  overload: System.Windows.Media.Animation.RectAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration)
  id: '#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration)'
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: RectAnimation(Rect,Rect,Duration)
  nameWithType: RectAnimation.RectAnimation(Rect,Rect,Duration)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Rect,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>指定期間にわたって指定した開始値から指定した宛先値までアニメーション化するクラス。"
  syntax:
    content: public RectAnimation (System.Windows.Rect fromValue, System.Windows.Rect toValue, System.Windows.Duration duration);
    parameters:
    - id: fromValue
      type: System.Windows.Rect
      description: "アニメーションの開始値。"
    - id: toValue
      type: System.Windows.Rect
      description: "アニメーションの宛先値。"
    - id: duration
      type: System.Windows.Duration
      description: "時間の長さ、アニメーションは、開始から終了まで&1; 回再生に移動します。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  overload: System.Windows.Media.Animation.RectAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  id: '#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: RectAnimation(Rect,Rect,Duration,FillBehavior)
  nameWithType: RectAnimation.RectAnimation(Rect,Rect,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Rect,Duration,FillBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>指定された塗りつぶし動作は、指定した期間にわたって指定した開始値から指定した宛先値までアニメーション化するクラス。"
  syntax:
    content: public RectAnimation (System.Windows.Rect fromValue, System.Windows.Rect toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);
    parameters:
    - id: fromValue
      type: System.Windows.Rect
      description: "アニメーションの開始値。"
    - id: toValue
      type: System.Windows.Rect
      description: "アニメーションの宛先値。"
    - id: duration
      type: System.Windows.Duration
      description: "時間の長さ、アニメーションは、開始から終了まで&1; 回再生に移動します。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
    - id: fillBehavior
      type: System.Windows.Media.Animation.FillBehavior
      description: "アニメーションがアクティブになっていないときの動作を指定します。"
  overload: System.Windows.Media.Animation.RectAnimation.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.By
  id: By
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: By
  nameWithType: RectAnimation.By
  fullName: System.Windows.Media.Animation.RectAnimation.By
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはアニメーションがその開始値を変更する合計金額を設定します。"
  remarks: "Use the By property when you want to animate a value \"by\" a certain amount, rather than specifying a starting or ending value. You may also use the By property with the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property. The following table summarizes how the <xref:System.Windows.Media.Animation.RectAnimation.From%2A>, <xref:System.Windows.Media.Animation.RectAnimation.To%2A>, and By properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A> and <xref:System.Windows.Media.Animation.RectAnimation.To%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A> and By|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> and By properties.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property.|  \n|By|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the By property.|  \n  \n> [!NOTE]\n>  If you set both the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> and By properties, the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property takes precedence and the By property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.RectAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_By\"></a>   \n## XAML Attribute Usage  \n <*object* `By`=\"<xref:System.Windows.Rect>\"/>  \n  \n \\- or -  \n  \n <*object* `By`=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlPropertyElementUsage_By\"></a>   \n## XAML Property Element Usage  \n \\<*object*>  \n  \n <*object*.`By`>  \n  \n \\<<xref:System.Windows.Rect> />  \n  \n </*object*.`By`>  \n  \n \\</*object*>  \n  \n<a name=\"dependencyPropertyInfo_By\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.RectAnimation.ByProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<System.Windows.Rect> By { get; set; }
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "アニメーションがその開始値を変更する総量。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.RectAnimation.By*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.ByProperty
  id: ByProperty
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: ByProperty
  nameWithType: RectAnimation.ByProperty
  fullName: System.Windows.Media.Animation.RectAnimation.ByProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.RectAnimation.By*>依存関係プロパティ</xref:System.Windows.Media.Animation.RectAnimation.By*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ByProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.Clone
  id: Clone
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: Clone()
  nameWithType: RectAnimation.Clone()
  fullName: System.Windows.Media.Animation.RectAnimation.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;> </xref>、このオブジェクトの値の詳細コピーを作成します。"
  remarks: "変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。       詳細については、 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>を参照してください。       依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。"
  syntax:
    content: public System.Windows.Media.Animation.RectAnimation Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.RectAnimation
      description: "現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの<> *> プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合でも、ソースの<> *> プロパティは、<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.RectAnimation.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: RectAnimation.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;></xref>です。"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "新しいインスタンス。"
  overload: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.EasingFunction
  id: EasingFunction
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: EasingFunction
  nameWithType: RectAnimation.EasingFunction
  fullName: System.Windows.Media.Animation.RectAnimation.EasingFunction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはこのアニメーションに適用されているイージング機能を設定します。"
  remarks: "イージング関数を使用すると、さまざまなバウンスを含む特殊なアニメーション効果を作成、揺れやさまざまな大きさのアクセラレータと減速のアニメーションのスプリングできます。"
  syntax:
    content: public System.Windows.Media.Animation.IEasingFunction EasingFunction { get; set; }
    return:
      type: System.Windows.Media.Animation.IEasingFunction
      description: "このアニメーションに適用されているイージング機能。"
  overload: System.Windows.Media.Animation.RectAnimation.EasingFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty
  id: EasingFunctionProperty
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: EasingFunctionProperty
  nameWithType: RectAnimation.EasingFunctionProperty
  fullName: System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.RectAnimation.EasingFunction*>依存関係プロパティ</xref:System.Windows.Media.Animation.RectAnimation.EasingFunction*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty EasingFunctionProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.From
  id: From
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: From
  nameWithType: RectAnimation.From
  fullName: System.Windows.Media.Animation.RectAnimation.From
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはアニメーションの開始値を設定します。"
  remarks: "The following table summarizes how the From, <xref:System.Windows.Media.Animation.RectAnimation.To%2A>, and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|From|The animation progresses from the value specified by the From property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|From and <xref:System.Windows.Media.Animation.RectAnimation.To%2A>|The animation progresses from the value specified by the From property to the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property.|  \n|From and <xref:System.Windows.Media.Animation.RectAnimation.By%2A>|The animation progresses from the value specified by the From property to the value specified by the sum of the From and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.To%2A>|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.By%2A> property.|  \n  \n> [!NOTE]\n>  If you set both the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties, the <xref:System.Windows.Media.Animation.RectAnimation.To%2A> property takes precedence and the <xref:System.Windows.Media.Animation.RectAnimation.By%2A> property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.RectAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_From\"></a>   \n## XAML Attribute Usage  \n <*object* `From`=\"<xref:System.Windows.Rect>\"/>  \n  \n \\- or -  \n  \n <*object* `From`=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlPropertyElementUsage_From\"></a>   \n## XAML Property Element Usage  \n \\<*object*>  \n  \n <*object*.`From`>  \n  \n \\<<xref:System.Windows.Rect> />  \n  \n </*object*.`From`>  \n  \n \\</*object*>  \n  \n<a name=\"dependencyPropertyInfo_From\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.RectAnimation.FromProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<System.Windows.Rect> From { get; set; }
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "アニメーションの開始値。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.RectAnimation.From*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.FromProperty
  id: FromProperty
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: FromProperty
  nameWithType: RectAnimation.FromProperty
  fullName: System.Windows.Media.Animation.RectAnimation.FromProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.RectAnimation.From*>依存関係プロパティ</xref:System.Windows.Media.Animation.RectAnimation.From*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FromProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  id: GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: GetCurrentValueCore(Rect,Rect,AnimationClock)
  nameWithType: RectAnimation.GetCurrentValueCore(Rect,Rect,AnimationClock)
  fullName: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(Rect,Rect,AnimationClock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "によって決定されたように、アニメーションを付けるプロパティの現在の値を表す値を計算、 <xref href=&quot;System.Windows.Media.Animation.RectAnimation&quot;></xref>です。"
  remarks: "場合、`defaultOriginValue`最初のスナップショット値 (1 つある場合) または基本プロパティ値、複合チェーンでこの値になりますそれ以外の場合この値はチェーンの前のアニメーションによって返される値、<xref:System.Windows.Media.Animation.AnimationClock>外にある<xref:System.Windows.Media.Animation.Clock.Stopped%2A>。</xref:System.Windows.Media.Animation.Clock.Stopped%2A> </xref:System.Windows.Media.Animation.AnimationClock> 。       `defaultDestinationValue`は基本値の場合、プロパティにアニメーションの最初のコンポジション レイヤーには、アニメーションのそれ以外の値はプロパティのアニメーションの前の構成のレイヤーからの出力値。"
  syntax:
    content: protected override System.Windows.Rect GetCurrentValueCore (System.Windows.Rect defaultOriginValue, System.Windows.Rect defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);
    parameters:
    - id: defaultOriginValue
      type: System.Windows.Rect
      description: "起点の推奨値をアニメーションに独自明示的に設定されていない場合に使用される値を開始します。"
    - id: defaultDestinationValue
      type: System.Windows.Rect
      description: "アニメーションに独自明示的に設定されていない場合に使用される、終点の推奨値の値を終了します。"
    - id: animationClock
      type: System.Windows.Media.Animation.AnimationClock
      description: "<xref href=&quot;System.Windows.Media.Animation.AnimationClock&quot;> </xref>を生成する、 <> </> *> または<> *> アニメーションで使用します。"
    return:
      type: System.Windows.Rect
      description: "現在のアニメーションで決定された、プロパティの計算値です。"
  overload: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.IsAdditive
  id: IsAdditive
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: IsAdditive
  nameWithType: RectAnimation.IsAdditive
  fullName: System.Windows.Media.Animation.RectAnimation.IsAdditive
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはターゲット プロパティの現在の値をこのアニメーションの開始値を追加する必要があるかどうかを示す値を設定します。"
  remarks: "アニメーションがある&1; つだけの場合、 <xref:System.Windows.Media.Animation.RectAnimation.From%2A>、 <xref:System.Windows.Media.Animation.RectAnimation.To%2A>、または<xref:System.Windows.Media.Animation.RectAnimation.By%2A>このプロパティの設定のプロパティを設定が影響を与えません</xref:System.Windows.Media.Animation.RectAnimation.By%2A></xref:System.Windows.Media.Animation.RectAnimation.To%2A></xref:System.Windows.Media.Animation.RectAnimation.From%2A>。      <a name=&quot;dependencyPropertyInfo_Additive&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  |メタデータ プロパティに設定`true`|None |     > [!NOTE] > この依存関係プロパティは、その識別子のフィールドに由来点で、通常<xref:System.Windows.Media.Animation.AnimationTimeline>、さまざまな派生クラスで共有します</xref:System.Windows.Media.Animation.AnimationTimeline></xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>。"
  syntax:
    content: public bool IsAdditive { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>対象プロパティの現在場合は、値がこのアニメーションの開始値に追加する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.RectAnimation.IsAdditive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.IsCumulative
  id: IsCumulative
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: IsCumulative
  nameWithType: RectAnimation.IsCumulative
  fullName: System.Windows.Media.Animation.RectAnimation.IsCumulative
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得または繰り返されるときに、アニメーションの値を累計するかどうかを指定する値を設定します。"
  remarks: "このプロパティに設定するときに`true`、値のみ蓄積されるときに、アニメーションの出力アニメーションの<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>プロパティにより一定時間の再生を繰り返す</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>。 親が再起動すると、またはそのクロックがから再開されたためにその値が蓄積されない、<xref:System.Windows.Media.Animation.ClockController.Begin%2A>呼び出します</xref:System.Windows.Media.Animation.ClockController.Begin%2A>。      <a name=&quot;dependencyPropertyInfo_Cumulative&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>|  |メタデータ プロパティに設定`true`|None |     > [!NOTE] > この依存関係プロパティは、その識別子のフィールドに由来点で、通常<xref:System.Windows.Media.Animation.AnimationTimeline>、さまざまな派生クラスで共有します</xref:System.Windows.Media.Animation.AnimationTimeline></xref:System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty>。"
  syntax:
    content: public bool IsCumulative { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アニメーションがその値を累計する場合とその<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>プロパティにより一定時間の再生; を繰り返しますがそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> 。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.RectAnimation.IsCumulative*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.To
  id: To
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: To
  nameWithType: RectAnimation.To
  fullName: System.Windows.Media.Animation.RectAnimation.To
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得またはアニメーションの終了値を設定します。"
  remarks: "The following table summarizes how the <xref:System.Windows.Media.Animation.RectAnimation.From%2A>, To, and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties may be used together or separately to determine an animation's target values.  \n  \n|Properties specified|Resulting behavior|  \n|--------------------------|------------------------|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the base value of the property being animated or to a previous animation's output value, depending on how the previous animation is configured.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A> and To|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the value specified by the To property.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.From%2A> and <xref:System.Windows.Media.Animation.RectAnimation.By%2A>|The animation progresses from the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> property to the value specified by the sum of the <xref:System.Windows.Media.Animation.RectAnimation.From%2A> and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties.|  \n|To|The animation progresses from the animated property's base value or a previous animation's output value to the value specified by the To property.|  \n|<xref:System.Windows.Media.Animation.RectAnimation.By%2A>|The animation progresses from the base value of the property being animated or a previous animation's output value to the sum of that value and the value specified by the <xref:System.Windows.Media.Animation.RectAnimation.By%2A> property.|  \n  \n> [!NOTE]\n>  If you set both the To and <xref:System.Windows.Media.Animation.RectAnimation.By%2A> properties, the To property takes precedence and the <xref:System.Windows.Media.Animation.RectAnimation.By%2A> property is ignored.  \n  \n To use other interpolation methods or animate between more than two target values, use a <xref:System.Windows.Media.Animation.RectAnimationUsingKeyFrames> object.  \n  \n<a name=\"xamlAttributeUsage_To\"></a>   \n## XAML Attribute Usage  \n <*object* `To`=\"<xref:System.Byte>\"/>  \n  \n \\- or -  \n  \n <*object* `To`=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlPropertyElementUsage_To\"></a>   \n## XAML Property Element Usage  \n \\<*object*>  \n  \n <*object*.`To`>  \n  \n \\<<xref:System.Windows.Rect> />  \n  \n </*object*.`To`>  \n  \n \\</*object*>  \n  \n<a name=\"dependencyPropertyInfo_To\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.RectAnimation.ToProperty>|  \n|Metadata properties set to `true`|None|"
  syntax:
    content: public Nullable<System.Windows.Rect> To { get; set; }
    return:
      type: System.Nullable{System.Windows.Rect}
      description: "アニメーションの終了値。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.RectAnimation.To*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.RectAnimation.ToProperty
  id: ToProperty
  parent: System.Windows.Media.Animation.RectAnimation
  langs:
  - csharp
  name: ToProperty
  nameWithType: RectAnimation.ToProperty
  fullName: System.Windows.Media.Animation.RectAnimation.ToProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.RectAnimation.To*>依存関係プロパティ</xref:System.Windows.Media.Animation.RectAnimation.To*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty ToProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.RectAnimationBase
  isExternal: false
  name: System.Windows.Media.Animation.RectAnimationBase
- uid: System.Windows.Media.Animation.RectAnimation.#ctor
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation()
  nameWithType: RectAnimation.RectAnimation()
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation()
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration)
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation(Rect,Duration)
  nameWithType: RectAnimation.RectAnimation(Rect,Duration)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Duration)
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation(Rect,Duration,FillBehavior)
  nameWithType: RectAnimation.RectAnimation(Rect,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Duration,FillBehavior)
- uid: System.Windows.Media.Animation.FillBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: FillBehavior
  nameWithType: FillBehavior
  fullName: System.Windows.Media.Animation.FillBehavior
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration)
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation(Rect,Rect,Duration)
  nameWithType: RectAnimation.RectAnimation(Rect,Rect,Duration)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Rect,Duration)
- uid: System.Windows.Media.Animation.RectAnimation.#ctor(System.Windows.Rect,System.Windows.Rect,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation(Rect,Rect,Duration,FillBehavior)
  nameWithType: RectAnimation.RectAnimation(Rect,Rect,Duration,FillBehavior)
  fullName: System.Windows.Media.Animation.RectAnimation.RectAnimation(Rect,Rect,Duration,FillBehavior)
- uid: System.Windows.Media.Animation.RectAnimation.By
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: By
  nameWithType: RectAnimation.By
  fullName: System.Windows.Media.Animation.RectAnimation.By
- uid: System.Nullable{System.Windows.Rect}
  parent: System
  isExternal: true
  name: Nullable<Rect>
  nameWithType: Nullable<Rect>
  fullName: System.Nullable<System.Windows.Rect>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Windows.Rect>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.RectAnimation.ByProperty
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: ByProperty
  nameWithType: RectAnimation.ByProperty
  fullName: System.Windows.Media.Animation.RectAnimation.ByProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.RectAnimation.Clone
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: Clone()
  nameWithType: RectAnimation.Clone()
  fullName: System.Windows.Media.Animation.RectAnimation.Clone()
- uid: System.Windows.Media.Animation.RectAnimation
  parent: System.Windows.Media.Animation
  isExternal: false
  name: RectAnimation
  nameWithType: RectAnimation
  fullName: System.Windows.Media.Animation.RectAnimation
- uid: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: RectAnimation.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.RectAnimation.EasingFunction
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: EasingFunction
  nameWithType: RectAnimation.EasingFunction
  fullName: System.Windows.Media.Animation.RectAnimation.EasingFunction
- uid: System.Windows.Media.Animation.IEasingFunction
  parent: System.Windows.Media.Animation
  isExternal: false
  name: IEasingFunction
  nameWithType: IEasingFunction
  fullName: System.Windows.Media.Animation.IEasingFunction
- uid: System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: EasingFunctionProperty
  nameWithType: RectAnimation.EasingFunctionProperty
  fullName: System.Windows.Media.Animation.RectAnimation.EasingFunctionProperty
- uid: System.Windows.Media.Animation.RectAnimation.From
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: From
  nameWithType: RectAnimation.From
  fullName: System.Windows.Media.Animation.RectAnimation.From
- uid: System.Windows.Media.Animation.RectAnimation.FromProperty
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: FromProperty
  nameWithType: RectAnimation.FromProperty
  fullName: System.Windows.Media.Animation.RectAnimation.FromProperty
- uid: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(System.Windows.Rect,System.Windows.Rect,System.Windows.Media.Animation.AnimationClock)
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: GetCurrentValueCore(Rect,Rect,AnimationClock)
  nameWithType: RectAnimation.GetCurrentValueCore(Rect,Rect,AnimationClock)
  fullName: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(Rect,Rect,AnimationClock)
- uid: System.Windows.Media.Animation.AnimationClock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: AnimationClock
  nameWithType: AnimationClock
  fullName: System.Windows.Media.Animation.AnimationClock
- uid: System.Windows.Media.Animation.RectAnimation.IsAdditive
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: IsAdditive
  nameWithType: RectAnimation.IsAdditive
  fullName: System.Windows.Media.Animation.RectAnimation.IsAdditive
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.RectAnimation.IsCumulative
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: IsCumulative
  nameWithType: RectAnimation.IsCumulative
  fullName: System.Windows.Media.Animation.RectAnimation.IsCumulative
- uid: System.Windows.Media.Animation.RectAnimation.To
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: To
  nameWithType: RectAnimation.To
  fullName: System.Windows.Media.Animation.RectAnimation.To
- uid: System.Windows.Media.Animation.RectAnimation.ToProperty
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: ToProperty
  nameWithType: RectAnimation.ToProperty
  fullName: System.Windows.Media.Animation.RectAnimation.ToProperty
- uid: System.Windows.Media.Animation.RectAnimation.#ctor*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: RectAnimation
  nameWithType: RectAnimation.RectAnimation
- uid: System.Windows.Media.Animation.RectAnimation.By*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: By
  nameWithType: RectAnimation.By
- uid: System.Windows.Media.Animation.RectAnimation.Clone*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: Clone
  nameWithType: RectAnimation.Clone
- uid: System.Windows.Media.Animation.RectAnimation.CreateInstanceCore*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: CreateInstanceCore
  nameWithType: RectAnimation.CreateInstanceCore
- uid: System.Windows.Media.Animation.RectAnimation.EasingFunction*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: EasingFunction
  nameWithType: RectAnimation.EasingFunction
- uid: System.Windows.Media.Animation.RectAnimation.From*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: From
  nameWithType: RectAnimation.From
- uid: System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: GetCurrentValueCore
  nameWithType: RectAnimation.GetCurrentValueCore
- uid: System.Windows.Media.Animation.RectAnimation.IsAdditive*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: IsAdditive
  nameWithType: RectAnimation.IsAdditive
- uid: System.Windows.Media.Animation.RectAnimation.IsCumulative*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: IsCumulative
  nameWithType: RectAnimation.IsCumulative
- uid: System.Windows.Media.Animation.RectAnimation.To*
  parent: System.Windows.Media.Animation.RectAnimation
  isExternal: false
  name: To
  nameWithType: RectAnimation.To
