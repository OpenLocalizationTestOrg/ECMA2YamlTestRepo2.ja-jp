### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Menu
  id: Menu
  children:
  - System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  - System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.CreateMenuHandle
  - System.Windows.Forms.Menu.Dispose(System.Boolean)
  - System.Windows.Forms.Menu.FindHandle
  - System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  - System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  - System.Windows.Forms.Menu.FindShortcut
  - System.Windows.Forms.Menu.GetContextMenu
  - System.Windows.Forms.Menu.GetMainMenu
  - System.Windows.Forms.Menu.Handle
  - System.Windows.Forms.Menu.IsParent
  - System.Windows.Forms.Menu.MdiListItem
  - System.Windows.Forms.Menu.MenuItems
  - System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  - System.Windows.Forms.Menu.Name
  - System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Menu.Tag
  - System.Windows.Forms.Menu.ToString
  langs:
  - csharp
  name: Menu
  nameWithType: Menu
  fullName: System.Windows.Forms.Menu
  type: Class
  summary: "すべてのメニューの基本的な機能を表します。 <xref href=&quot;System.Windows.Forms.ToolStripDropDown&quot;> </xref>と<xref href=&quot;System.Windows.Forms.ToolStripDropDownMenu&quot;></xref>置き換えたり機能を追加したり以前のバージョンのメニュー コントロールにメニューが旧バージョンとの互換性と将来の使用の両方の保持を選択した場合。"
  remarks: "このクラスは、基本クラスの<xref:System.Windows.Forms.MainMenu>、 <xref:System.Windows.Forms.MenuItem>、および<xref:System.Windows.Forms.ContextMenu>クラス</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MainMenu>。 このクラスのインスタンスを作成することはできません。 アプリケーション メッセージ用のメニュー<xref:System.Windows.Forms.MenuItem>オブジェクト</xref:System.Windows.Forms.MenuItem>。 その他を含めることができますこれら<xref:System.Windows.Forms.MenuItem>サブメニュー項目を表すオブジェクト</xref:System.Windows.Forms.MenuItem>。 <xref:System.Windows.Forms.MenuItem>でオブジェクトを格納することができます、<xref:System.Windows.Forms.MainMenu>フォームのメニュー全体構造体として表示するため、または<xref:System.Windows.Forms.ContextMenu>ショートカット メニューを表示に使用される</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MenuItem>。 このクラスは、すべてのメニュー クラスの共通機能を提供します。       多くの基本クラスとは異なりは、メニュー クラスは、多くのプロパティを定義するのに派生クラスを使用します。 使用することができます、マルチ ドキュメント インターフェイス (MDI) アプリケーションで、メニューを使用している場合、<xref:System.Windows.Forms.Menu.MdiListItem%2A>プロパティを指定する、 <xref:System.Windows.Forms.MenuItem>、アプリケーションで開いている MDI 子フォームの一覧を表示する</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.Menu.MdiListItem%2A>。 <xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティには、<xref:System.Windows.Forms.MenuItem>メニュー クラスに格納されているオブジェクト</xref:System.Windows.Forms.MenuItem>の一覧が含まれています。</xref:System.Windows.Forms.Menu.MenuItems%2A> <xref:System.Windows.Forms.MainMenu>または<xref:System.Windows.Forms.ContextMenu>、このプロパティには、すべてが含まれています、<xref:System.Windows.Forms.MenuItem>表示されるオブジェクトです</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MainMenu>。 <xref:System.Windows.Forms.MenuItem><xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティは、それに関連付けられているサブメニュー項目を表します。</xref:System.Windows.Forms.Menu.MenuItems%2A> </xref:System.Windows.Forms.MenuItem>       すべてのメニューの派生クラスに用意されているプロパティに加えて、メニュー クラスもメソッドを提供など<xref:System.Windows.Forms.Menu.CloneMenu%2A>と<xref:System.Windows.Forms.Menu.MergeMenu%2A>、既存のメニューから新しいメニューの作成に使用してマージの&2; つのメニューが一緒に構造体も</xref:System.Windows.Forms.Menu.MergeMenu%2A></xref:System.Windows.Forms.Menu.CloneMenu%2A>。       メニュー クラスは、入れ子になったクラス<xref:System.Windows.Forms.Menu.MenuItemCollection>。</xref:System.Windows.Forms.Menu.MenuItemCollection>をも定義します。 このクラスのコレクションを定義する<xref:System.Windows.Forms.MenuItem>によって使用されるオブジェクト、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティ</xref:System.Windows.Forms.Menu.MenuItems%2A></xref:System.Windows.Forms.MenuItem>。 メソッドを使用することができます、<xref:System.Windows.Forms.Menu.MenuItemCollection>クラスを追加してからメニュー項目を削除、 <xref:System.Windows.Forms.MainMenu>、 <xref:System.Windows.Forms.ContextMenu>、または<xref:System.Windows.Forms.MenuItem>.</xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Menu.MenuItemCollection>"
  example:
  - "The following code example uses the derived class, <xref:System.Windows.Forms.MenuItem>, to create a menu structure for a form. The example code adds a <xref:System.Windows.Forms.MenuItem> to represent the top-level menu item, adds a submenu item to it for selecting a font size, and then adds two submenu items to that menu item that represent large and small font choices in an application. The example requires that there is a <xref:System.Windows.Forms.MainMenu> object named `mainMenu1` and four <xref:System.Windows.Forms.MenuItem> objects named `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`.  \n  \n [!code-cpp[Classic Menu Example#1](~/add/codesnippet/cpp/t-system.windows.forms.m_4_1.cpp)]\n [!code-cs[Classic Menu Example#1](~/add/codesnippet/csharp/t-system.windows.forms.m_4_1.cs)]\n [!code-vb[Classic Menu Example#1](~/add/codesnippet/visualbasic/t-system.windows.forms.m_4_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.ListBindable(false)]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      public abstract class Menu : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  id: '#ctor(System.Windows.Forms.MenuItem[])'
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Menu(MenuItem[])
  nameWithType: Menu.Menu(MenuItem[])
  fullName: System.Windows.Forms.Menu.Menu(MenuItem[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>クラスです。"
  remarks: "<xref:System.Windows.Forms.Menu>抽象クラスは継承するクラスは、メニュー コンス トラクターを呼び出すことができます</xref:System.Windows.Forms.Menu>。"
  syntax:
    content: protected Menu (System.Windows.Forms.MenuItem[] items);
    parameters:
    - id: items
      type: System.Windows.Forms.MenuItem[]
      description: "型の配列<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>メニューに追加するオブジェクトを格納します。"
  overload: System.Windows.Forms.Menu.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  id: CloneMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: CloneMenu(Menu)
  nameWithType: Menu.CloneMenu(Menu)
  fullName: System.Windows.Forms.Menu.CloneMenu(Menu)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コピー、 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>現在にパラメーターとして渡される<xref href=&quot;System.Windows.Forms.Menu&quot;></xref>です。"
  remarks: "このメソッドのリスト全体をコピーする<xref:System.Windows.Forms.MenuItem>オブジェクト (に格納されている、<xref:System.Windows.Forms.Menu>を渡された`menuSrc`) 現在のメニューにします</xref:System.Windows.Forms.Menu></xref:System.Windows.Forms.MenuItem>。 派生クラスでこのメソッドを使用するには複製する<xref:System.Windows.Forms.MenuItem>オブジェクト</xref:System.Windows.Forms.MenuItem>。 派生したその他のクラスで再を利用し、<xref:System.Windows.Forms.Menu>など<xref:System.Windows.Forms.MainMenu>、 <xref:System.Windows.Forms.ContextMenu>、 <xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MainMenu> </xref:System.Windows.Forms.Menu> 。"
  example:
  - "This example creates a main menu, `mainMenu1`, with three menu items: `File`, `Edit`, and `View`. It then uses the CloneMenu method to copy `mainMenu1` into `mainMenu2`. The cloned menu is then assigned to the form and displayed. This program requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[CloneMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_6_1.cs)]\n [!code-vb[CloneMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_6_1.vb)]\n [!code-cpp[CloneMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_6_1.cpp)]"
  syntax:
    content: protected void CloneMenu (System.Windows.Forms.Menu menuSrc);
    parameters:
    - id: menuSrc
      type: System.Windows.Forms.Menu
      description: "<xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>をコピーします。"
  overload: System.Windows.Forms.Menu.CloneMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.CreateMenuHandle
  id: CreateMenuHandle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: CreateMenuHandle()
  nameWithType: Menu.CreateMenuHandle()
  fullName: System.Windows.Forms.Menu.CreateMenuHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "新しいハンドルを作成、 <xref href=&quot;System.Windows.Forms.Menu&quot;></xref>です。"
  syntax:
    content: protected virtual IntPtr CreateMenuHandle ();
    parameters: []
    return:
      type: System.IntPtr
      description: "メソッドが成功した場合は、メニューへのハンドルそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.Menu.CreateMenuHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Menu.Dispose(Boolean)
  fullName: System.Windows.Forms.Menu.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "によって使用されるメモリ以外のリソースを解放、 <xref href=&quot;System.Windows.Forms.Menu&quot;></xref>です。"
  remarks: "<xref:System.Windows.Forms.Menu>。</xref:System.Windows.Forms.Menu>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Windows.Forms.Menu>使用不可の状態</xref:System.Windows.Forms.Menu>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Windows.Forms.Menu>が使用していたメモリをガベージ コレクションによって再要求できるようにします</xref:System.Windows.Forms.Menu>。      > [!NOTE] ><xref:System.Windows.Forms.Menu></xref:System.Windows.Forms.Menu>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、リソース、<xref:System.Windows.Forms.Menu>を使用しては解放されませんガベージ コレクション呼び出すまで、<xref:System.Windows.Forms.Menu>オブジェクトのデストラクターです</xref:System.Windows.Forms.Menu></xref:System.Windows.Forms.Menu>。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Windows.Forms.Menu.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindHandle
  id: FindHandle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindHandle
  nameWithType: Menu.FindHandle
  fullName: System.Windows.Forms.Menu.FindHandle
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定する、<xref:System.Windows.Forms.Menu.FindMenuItem*>ハンドルのメソッドを検索する必要があります</xref:System.Windows.Forms.Menu.FindMenuItem*>。"
  syntax:
    content: public const int FindHandle = 0;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  id: FindMenuItem(System.Int32,System.IntPtr)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindMenuItem(Int32,IntPtr)
  nameWithType: Menu.FindMenuItem(Int32,IntPtr)
  fullName: System.Windows.Forms.Menu.FindMenuItem(Int32,IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>指定された値を格納しています。"
  remarks: "検索する、<xref:System.Windows.Forms.MenuItem>で渡すハンドルを使用して、 <xref:System.Windows.Forms.Menu.FindHandle>、型、およびのハンドルとしてフィールド、<xref:System.Windows.Forms.MenuItem>を値として検索する</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.Menu.FindHandle></xref:System.Windows.Forms.MenuItem>。       検索する、<xref:System.Windows.Forms.MenuItem>で渡すショートカットを使用して、<xref:System.Windows.Forms.Menu.FindShortcut>型、およびショートカット値としてフィールド、<xref:System.Windows.Forms.MenuItem>を値として検索する</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.Menu.FindShortcut></xref:System.Windows.Forms.MenuItem>。"
  syntax:
    content: public System.Windows.Forms.MenuItem FindMenuItem (int type, IntPtr value);
    parameters:
    - id: type
      type: System.Int32
      description: "検索に使用する項目の種類、 <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>です。"
    - id: value
      type: System.IntPtr
      description: "検索に使用するアイテム、 <xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>です。"
    return:
      type: System.Windows.Forms.MenuItem
      description: "<xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>値に一致する、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.Menu.FindMenuItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  id: FindMergePosition(System.Int32)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindMergePosition(Int32)
  nameWithType: Menu.FindMergePosition(Int32)
  fullName: System.Windows.Forms.Menu.FindMergePosition(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "メニュー項目がメニューに挿入する位置を返します。"
  remarks: "メニュー項目をマージする順序は、メニューを構造化する場合、このメニュー項目が前提とする相対位置を指定、<xref:System.Windows.Forms.MenuItem>が含まれているでは別のマージします</xref:System.Windows.Forms.MenuItem>。"
  syntax:
    content: protected int FindMergePosition (int mergeOrder);
    parameters:
    - id: mergeOrder
      type: System.Int32
      description: "マージするメニュー項目のマージ後の位置。"
    return:
      type: System.Int32
      description: "メニュー項目がメニューに挿入する位置。"
  overload: System.Windows.Forms.Menu.FindMergePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.FindShortcut
  id: FindShortcut
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: FindShortcut
  nameWithType: Menu.FindShortcut
  fullName: System.Windows.Forms.Menu.FindShortcut
  type: Field
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "指定する、<xref:System.Windows.Forms.Menu.FindMenuItem*>メソッドは、ショートカットを検索する必要があります</xref:System.Windows.Forms.Menu.FindMenuItem*>。"
  syntax:
    content: public const int FindShortcut = 1;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.GetContextMenu
  id: GetContextMenu
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: GetContextMenu()
  nameWithType: Menu.GetContextMenu()
  fullName: System.Windows.Forms.Menu.GetContextMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>このメニューを格納しています。"
  remarks: "このメソッドでは、<xref:System.Windows.Forms.ContextMenu>このメニューが含まれているインチである</xref:System.Windows.Forms.ContextMenu>への参照を取得できます。 このプロパティを返します`null` <xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.ContextMenu> 、メニューが含まれていない場合。 これに、メニューが含まれている場合に発生することができます、<xref:System.Windows.Forms.MenuItem>または<xref:System.Windows.Forms.MainMenu>、または任意のメニューにメニューが含まれていない場合</xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MenuItem>。 かどうか、メニューは、現在使用中かを判断し、場所を特定するには、このプロパティを使用することができます。"
  example:
  - "In this example, you use the GetContextMenu method to obtain a reference to the shortcut menu that contains `menuItem1` or `menuItem2`, and display the shortcut menu information in a message box. You programmatically create a shortcut menu with two items, `New` and `Open`. You then add functionality to these items by creating the appropriate event handlers. When you run the example, you get a message box that tells you to right-click the form in order to display the shortcut menu. Then, when you click a menu item, you get another message that tells which item has been clicked and displays the information on the containing shortcut menu. This example requires that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetContextMenu2#1](~/add/codesnippet/csharp/m-system.windows.forms.m_15_1.cs)]\n [!code-cpp[GetContextMenu2#1](~/add/codesnippet/cpp/m-system.windows.forms.m_15_1.cpp)]\n [!code-vb[GetContextMenu2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_15_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ContextMenu GetContextMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.ContextMenu
      description: "<xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref>このメニューを格納しています。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.Menu.GetContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.GetMainMenu
  id: GetMainMenu
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: GetMainMenu()
  nameWithType: Menu.GetMainMenu()
  fullName: System.Windows.Forms.Menu.GetMainMenu()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得、 <xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>このメニューを格納しています。"
  remarks: "このメソッドでは、<xref:System.Windows.Forms.MainMenu>このメニューは、現在配置されているインチ</xref:System.Windows.Forms.MainMenu>への参照を取得できます。 このプロパティを返します`null` <xref:System.Windows.Forms.MainMenu></xref:System.Windows.Forms.MainMenu> 、メニューが含まれていない場合。 これに、メニューが含まれている場合に発生することができます、<xref:System.Windows.Forms.MenuItem>または<xref:System.Windows.Forms.ContextMenu>、または任意のメニューにメニューが含まれていない場合</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MenuItem>。 かどうか、メニューは、現在使用中かを判断し、場所を特定するには、このプロパティを使用することができます。"
  example:
  - "This example declares a <xref:System.Windows.Forms.MainMenu>, `mainMenu1`, and four menu items, `menuItem1`, `menuItem2`, `menuItem3`, and `menuItem4`. Only the first three menu items are added to `mainMenu1` for display. The program then checks to see if `menuItem3` is being used, which is `true`, and determines the form in which it is used. A label text is used to display the name of the form that hosts the <xref:System.Windows.Forms.MainMenu>. If you change the menu item being tested to `menuItem4`, the condition evaluates to `false` because `menuItem4` has never been used. This example requires that you have created a <xref:System.Windows.Forms.Form> named `MyForm` that includes a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cpp[GetMainMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_8_1.cpp)]\n [!code-cs[GetMainMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_8_1.cs)]\n [!code-vb[GetMainMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_8_1.vb)]"
  syntax:
    content: public System.Windows.Forms.MainMenu GetMainMenu ();
    parameters: []
    return:
      type: System.Windows.Forms.MainMenu
      description: "<xref href=&quot;System.Windows.Forms.MainMenu&quot;> </xref>このメニューを格納しています。"
  overload: System.Windows.Forms.Menu.GetMainMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Handle
  id: Handle
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Handle
  nameWithType: Menu.Handle
  fullName: System.Windows.Forms.Menu.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "メニュー ウィンドウ ハンドルを表す値を取得します。"
  remarks: "このプロパティを使用すると、このクラスまたはその派生クラスによって提供される機能の外部で、メニューに特別な操作を実行するのにメニューへのハンドルを取得します。"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "メニューの HMENU 値です。"
  overload: System.Windows.Forms.Menu.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.IsParent
  id: IsParent
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: IsParent
  nameWithType: Menu.IsParent
  fullName: System.Windows.Forms.Menu.IsParent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "このメニューにメニュー項目が含まれるかどうかを示す値を取得します。 このプロパティは、読み取り専用です。"
  remarks: "このメソッドを使用するにはいずれかどうかを判断<xref:System.Windows.Forms.MenuItem>オブジェクトがこのメニューに割り当てられます</xref:System.Windows.Forms.MenuItem>。 これは、同等のチェックに`null`で、<xref:System.Windows.Forms.Menu.MenuItems%2A>プロパティ</xref:System.Windows.Forms.Menu.MenuItems%2A>。"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.MainMenu> with two <xref:System.Windows.Forms.MenuItem> objects. It then uses the IsParent property to determine whether `mainMenu1` contains menu items. If the condition evaluates `true`, it sets the <xref:System.Windows.Forms.MainMenu.RightToLeft%2A> property to `true` and binds the main menu to the <xref:System.Windows.Forms.Form>. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \n  \n [!code-cpp[IsParent#1](~/add/codesnippet/cpp/p-system.windows.forms.m_9_1.cpp)]\n [!code-cs[IsParent#1](~/add/codesnippet/csharp/p-system.windows.forms.m_9_1.cs)]\n [!code-vb[IsParent#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_9_1.vb)]"
  syntax:
    content: public virtual bool IsParent { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメニューが含まれている場合<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>オブジェクト。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.Menu.IsParent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MdiListItem
  id: MdiListItem
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MdiListItem
  nameWithType: Menu.MdiListItem
  fullName: System.Windows.Forms.Menu.MdiListItem
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "示す値を取得、 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>マルチ ドキュメント インターフェイス (MDI) 子フォームの一覧を表示に使用されます。"
  remarks: "決定するこのプロパティを使用するかどうか、 <xref:System.Windows.Forms.MenuItem>MDI アプリケーションで開いている子ウィンドウの一覧を表示するが指定されています</xref:System.Windows.Forms.MenuItem>。 固有の仕様を使用する<xref:System.Windows.Forms.MenuItem>MDI リストとして設定、<xref:System.Windows.Forms.MenuItem.MdiList%2A>プロパティに、<xref:System.Windows.Forms.MenuItem>使用する</xref:System.Windows.Forms.MenuItem></xref:System.Windows.Forms.MenuItem.MdiList%2A></xref:System.Windows.Forms.MenuItem>。"
  syntax:
    content: public System.Windows.Forms.MenuItem MdiListItem { get; }
    return:
      type: System.Windows.Forms.MenuItem
      description: "A <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>アプリケーションで開いている MDI 子フォームの一覧を表示するメニュー項目を表すです。"
  overload: System.Windows.Forms.Menu.MdiListItem*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MenuItems
  id: MenuItems
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MenuItems
  nameWithType: Menu.MenuItems
  fullName: System.Windows.Forms.Menu.MenuItems
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コレクションを示す値を取得<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>メニューに関連付けられているオブジェクト。"
  remarks: "このプロパティを使用すると、メニューに現在格納されているメニュー項目のリストへの参照を取得します。 <xref:System.Windows.Forms.MainMenu>と<xref:System.Windows.Forms.ContextMenu>オブジェクト、MenuItems プロパティには、コントロール全体のメニュー構造が含まれています</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MainMenu>。 <xref:System.Windows.Forms.MenuItem>クラス、MenuItems プロパティには<xref:System.Windows.Forms.MenuItem>。</xref:System.Windows.Forms.MenuItem>に関連付けられているサブメニュー項目の一覧が含まれています</xref:System.Windows.Forms.MenuItem> (このプロパティによって提供される)、メニューのメニュー項目のコレクションへの参照を追加し、メニュー項目を削除、メニュー項目の合計数を決定したりコレクションからのメニュー項目のリストをクリアします。 詳細については、メニューのメニュー項目のコレクションを維持することに、次を参照してください、<xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName>ドキュメント。</xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName> 。"
  example:
  - "The following code example creates an instance of the derived class, <xref:System.Windows.Forms.MainMenu>, and adds a <xref:System.Windows.Forms.MenuItem> object to its collection of <xref:System.Windows.Forms.MenuItem> objects. This example requires that the method defined in this example is located within the class for a form and called by a method in that form class.  \n  \n [!code-vb[Classic Menu.MenuItems Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.m_28_1.vb)]\n [!code-cpp[Classic Menu.MenuItems Example#1](~/add/codesnippet/cpp/p-system.windows.forms.m_28_1.cpp)]\n [!code-cs[Classic Menu.MenuItems Example#1](~/add/codesnippet/csharp/p-system.windows.forms.m_28_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Menu.MenuItemCollection MenuItems { get; }
    return:
      type: System.Windows.Forms.Menu.MenuItemCollection
      description: "A &lt;xref:System.Windows.Forms.Menu.MenuItemCollection?displayProperty=fullName&gt;の一覧を表す<xref href=&quot;System.Windows.Forms.MenuItem&quot;></xref>メニューに格納されているオブジェクト。"
  overload: System.Windows.Forms.Menu.MenuItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  id: MergeMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: MergeMenu(Menu)
  nameWithType: Menu.MergeMenu(Menu)
  fullName: System.Windows.Forms.Menu.MergeMenu(Menu)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "マージ、 <xref href=&quot;System.Windows.Forms.MenuItem&quot;> </xref>現在のメニューとメニューは&1; つのオブジェクト。"
  remarks: "このメソッドは、マージ<xref:System.Windows.Forms.MenuItem>現在 メニューの&1; つのメニューからのオブジェクト</xref:System.Windows.Forms.MenuItem>。 <xref:System.Windows.Forms.MenuItem>オブジェクトの値に基づいて結合は、<xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=fullName>と<xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=fullName>プロパティ</xref:System.Windows.Forms.MenuItem.MergeOrder%2A?displayProperty=fullName></xref:System.Windows.Forms.MenuItem.MergeType%2A?displayProperty=fullName>。</xref:System.Windows.Forms.MenuItem>       メニューのマージは通常、そのアクティブな MDI 子フォームのマルチ ドキュメント インターフェイス (MDI) 親フォームのメニューのマージを行います。 これは、.NET Framework 共通言語ランタイムによって自動的に実行されます。 たとえば、MDI 親フォームには一連ファイルを処理するためのメニューにはが含まれています、MDI 子フォームでは、ファイルに関連するメニュー項目も持っている場合は、メニューを設定は子フォームが MDI 親フォームに表示されるときに設定する&1; つのファイル メニューにマージ自動的にします。       MDI アプリケーションの一部ではない&2; つのメニュー構造をマージする場合は、MergeMenu メソッドを使用することができます。 この実装は、<xref:System.Windows.Forms.MainMenu>または<xref:System.Windows.Forms.ContextMenu><xref:System.Windows.Forms.Menu>。</xref:System.Windows.Forms.Menu>から派生した&2; つ以上のオブジェクトをマージするクラス</xref:System.Windows.Forms.ContextMenu></xref:System.Windows.Forms.MainMenu>によって呼び出し可能       2 つのマージを<xref:System.Windows.Forms.MenuItem>オブジェクトによって使用される、<xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=fullName>メソッド</xref:System.Windows.Forms.MenuItem.MergeMenu%2A?displayProperty=fullName></xref:System.Windows.Forms.MenuItem>。"
  example:
  - "This example creates two menus, `mainMenu1` and `mainMenu2`. The first menu contains one <xref:System.Windows.Forms.MenuItem>, `File`, and the second contains one <xref:System.Windows.Forms.MenuItem>, `Edit`. Using the MergeMenu method, `mainMenu2` is merged with `mainMenu1`. When displayed, `mainMenu1` will contain the two menu items, `File` and `Edit`. This example requires that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[MergeMenu#1](~/add/codesnippet/csharp/m-system.windows.forms.m_23_1.cs)]\n [!code-cpp[MergeMenu#1](~/add/codesnippet/cpp/m-system.windows.forms.m_23_1.cpp)]\n [!code-vb[MergeMenu#1](~/add/codesnippet/visualbasic/m-system.windows.forms.m_23_1.vb)]"
  syntax:
    content: public virtual void MergeMenu (System.Windows.Forms.Menu menuSrc);
    parameters:
    - id: menuSrc
      type: System.Windows.Forms.Menu
      description: "<xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>メニュー項目であるが、現在のメニューのメニュー項目と共にマージされます。"
  overload: System.Windows.Forms.Menu.MergeMenu*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "メニューをそれ自体をマージしようとしました。"
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Name
  id: Name
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Name
  nameWithType: Menu.Name
  fullName: System.Windows.Forms.Menu.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得または設定の名前、 <xref href=&quot;System.Windows.Forms.Menu&quot;></xref>です。"
  remarks: "デザイン時に、このプロパティは、コントロールのプログラム識別子に設定します。 ただし、このプロパティは影響しません、コントロールの実行時にします。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "名前を表す文字列。"
  overload: System.Windows.Forms.Menu.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Menu.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Menu.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "コマンド キーを処理します。"
  syntax:
    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "A <xref href=&quot;System.Windows.Forms.Message&quot;></xref>を処理するウィンドウ メッセージを表す、参照によって渡されます。"
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "1 つ、 <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref>を処理するキーを表す値です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>文字がコントロールによって処理された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Forms.Menu.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.Tag
  id: Tag
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: Tag
  nameWithType: Menu.Tag
  fullName: System.Windows.Forms.Menu.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "取得またはコントロールに関連付けられているユーザー定義のデータを設定します。"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "データを表すオブジェクト。"
  overload: System.Windows.Forms.Menu.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Menu.ToString
  id: ToString
  parent: System.Windows.Forms.Menu
  langs:
  - csharp
  name: ToString()
  nameWithType: Menu.ToString()
  fullName: System.Windows.Forms.Menu.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "返します、<xref:System.String>を表す、 <xref href=&quot;System.Windows.Forms.Menu&quot;> </xref>コントロール</xref:System.String>。"
  remarks: "ToString メソッドを返します、<xref:System.String>型と内の項目数が含まれる、<xref:System.Windows.Forms.Menu.MenuItems%2A>コントロールのプロパティ</xref:System.Windows.Forms.Menu.MenuItems%2A></xref:System.String>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>を表す現在<xref href=&quot;System.Windows.Forms.Menu&quot;> </xref></xref:System.String> 。"
  overload: System.Windows.Forms.Menu.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Forms.Menu.#ctor(System.Windows.Forms.MenuItem[])
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Menu(MenuItem[])
  nameWithType: Menu.Menu(MenuItem[])
  fullName: System.Windows.Forms.Menu.Menu(MenuItem[])
- uid: System.Windows.Forms.MenuItem[]
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem[]
  spec.csharp:
  - uid: System.Windows.Forms.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: MenuItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Menu.CloneMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CloneMenu(Menu)
  nameWithType: Menu.CloneMenu(Menu)
  fullName: System.Windows.Forms.Menu.CloneMenu(Menu)
- uid: System.Windows.Forms.Menu
  parent: System.Windows.Forms
  isExternal: false
  name: Menu
  nameWithType: Menu
  fullName: System.Windows.Forms.Menu
- uid: System.Windows.Forms.Menu.CreateMenuHandle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CreateMenuHandle()
  nameWithType: Menu.CreateMenuHandle()
  fullName: System.Windows.Forms.Menu.CreateMenuHandle()
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Menu.Dispose(System.Boolean)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Menu.Dispose(Boolean)
  fullName: System.Windows.Forms.Menu.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Menu.FindHandle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindHandle
  nameWithType: Menu.FindHandle
  fullName: System.Windows.Forms.Menu.FindHandle
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Menu.FindMenuItem(System.Int32,System.IntPtr)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMenuItem(Int32,IntPtr)
  nameWithType: Menu.FindMenuItem(Int32,IntPtr)
  fullName: System.Windows.Forms.Menu.FindMenuItem(Int32,IntPtr)
- uid: System.Windows.Forms.MenuItem
  parent: System.Windows.Forms
  isExternal: false
  name: MenuItem
  nameWithType: MenuItem
  fullName: System.Windows.Forms.MenuItem
- uid: System.Windows.Forms.Menu.FindMergePosition(System.Int32)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMergePosition(Int32)
  nameWithType: Menu.FindMergePosition(Int32)
  fullName: System.Windows.Forms.Menu.FindMergePosition(Int32)
- uid: System.Windows.Forms.Menu.FindShortcut
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindShortcut
  nameWithType: Menu.FindShortcut
  fullName: System.Windows.Forms.Menu.FindShortcut
- uid: System.Windows.Forms.Menu.GetContextMenu
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetContextMenu()
  nameWithType: Menu.GetContextMenu()
  fullName: System.Windows.Forms.Menu.GetContextMenu()
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.Menu.GetMainMenu
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetMainMenu()
  nameWithType: Menu.GetMainMenu()
  fullName: System.Windows.Forms.Menu.GetMainMenu()
- uid: System.Windows.Forms.MainMenu
  parent: System.Windows.Forms
  isExternal: false
  name: MainMenu
  nameWithType: MainMenu
  fullName: System.Windows.Forms.MainMenu
- uid: System.Windows.Forms.Menu.Handle
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Handle
  nameWithType: Menu.Handle
  fullName: System.Windows.Forms.Menu.Handle
- uid: System.Windows.Forms.Menu.IsParent
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: IsParent
  nameWithType: Menu.IsParent
  fullName: System.Windows.Forms.Menu.IsParent
- uid: System.Windows.Forms.Menu.MdiListItem
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MdiListItem
  nameWithType: Menu.MdiListItem
  fullName: System.Windows.Forms.Menu.MdiListItem
- uid: System.Windows.Forms.Menu.MenuItems
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MenuItems
  nameWithType: Menu.MenuItems
  fullName: System.Windows.Forms.Menu.MenuItems
- uid: System.Windows.Forms.Menu.MenuItemCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Menu+MenuItemCollection
  nameWithType: Menu+MenuItemCollection
  fullName: System.Windows.Forms.Menu+MenuItemCollection
- uid: System.Windows.Forms.Menu.MergeMenu(System.Windows.Forms.Menu)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MergeMenu(Menu)
  nameWithType: Menu.MergeMenu(Menu)
  fullName: System.Windows.Forms.Menu.MergeMenu(Menu)
- uid: System.Windows.Forms.Menu.Name
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Name
  nameWithType: Menu.Name
  fullName: System.Windows.Forms.Menu.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Menu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Menu.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Menu.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Menu.Tag
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Tag
  nameWithType: Menu.Tag
  fullName: System.Windows.Forms.Menu.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Menu.ToString
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ToString()
  nameWithType: Menu.ToString()
  fullName: System.Windows.Forms.Menu.ToString()
- uid: System.Windows.Forms.Menu.#ctor*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Menu
  nameWithType: Menu.Menu
- uid: System.Windows.Forms.Menu.CloneMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CloneMenu
  nameWithType: Menu.CloneMenu
- uid: System.Windows.Forms.Menu.CreateMenuHandle*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: CreateMenuHandle
  nameWithType: Menu.CreateMenuHandle
- uid: System.Windows.Forms.Menu.Dispose*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Dispose
  nameWithType: Menu.Dispose
- uid: System.Windows.Forms.Menu.FindMenuItem*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMenuItem
  nameWithType: Menu.FindMenuItem
- uid: System.Windows.Forms.Menu.FindMergePosition*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: FindMergePosition
  nameWithType: Menu.FindMergePosition
- uid: System.Windows.Forms.Menu.GetContextMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetContextMenu
  nameWithType: Menu.GetContextMenu
- uid: System.Windows.Forms.Menu.GetMainMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: GetMainMenu
  nameWithType: Menu.GetMainMenu
- uid: System.Windows.Forms.Menu.Handle*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Handle
  nameWithType: Menu.Handle
- uid: System.Windows.Forms.Menu.IsParent*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: IsParent
  nameWithType: Menu.IsParent
- uid: System.Windows.Forms.Menu.MdiListItem*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MdiListItem
  nameWithType: Menu.MdiListItem
- uid: System.Windows.Forms.Menu.MenuItems*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MenuItems
  nameWithType: Menu.MenuItems
- uid: System.Windows.Forms.Menu.MergeMenu*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: MergeMenu
  nameWithType: Menu.MergeMenu
- uid: System.Windows.Forms.Menu.Name*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Name
  nameWithType: Menu.Name
- uid: System.Windows.Forms.Menu.ProcessCmdKey*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Menu.ProcessCmdKey
- uid: System.Windows.Forms.Menu.Tag*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: Tag
  nameWithType: Menu.Tag
- uid: System.Windows.Forms.Menu.ToString*
  parent: System.Windows.Forms.Menu
  isExternal: false
  name: ToString
  nameWithType: Menu.ToString
