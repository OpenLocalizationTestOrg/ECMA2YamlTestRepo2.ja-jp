### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SiteMapPath
  id: SiteMapPath
  children:
  - System.Web.UI.WebControls.SiteMapPath.#ctor
  - System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  - System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.DataBind
  - System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  - System.Web.UI.WebControls.SiteMapPath.ItemCreated
  - System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  - System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SiteMapPath.NodeStyle
  - System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  - System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  - System.Web.UI.WebControls.SiteMapPath.PathDirection
  - System.Web.UI.WebControls.SiteMapPath.PathSeparator
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  - System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  - System.Web.UI.WebControls.SiteMapPath.Provider
  - System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  - System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  - System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  - System.Web.UI.WebControls.SiteMapPath.SaveViewState
  - System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  - System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  - System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  - System.Web.UI.WebControls.SiteMapPath.TrackViewState
  langs:
  - csharp
  name: SiteMapPath
  nameWithType: SiteMapPath
  fullName: System.Web.UI.WebControls.SiteMapPath
  type: Class
  summary: "一連の最小限のページの領域を作成中に、Web サイトをより簡単に移動できるようにするテキストまたは画像のハイパーリンクが表示されます。"
  remarks: "このトピックで:-[概要](#introduction)      -   [ノード](#nodes)      -   [ノードの外観](#node_appearance)      -   [イベント](#events)      -   [サイト マップ パス コントロールのカスタマイズ](#customizing_the_sitemappath_control)      -   [アクセシビリティ](#accessibility)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## の概要、サイト マップ パス コントロールは、によって提供されるデータを反映するサイトのナビゲーション コントロール、<xref:System.Web.SiteMap>オブジェクト</xref:System.Web.SiteMap>。       サイトを簡単に移動する領域を節約して方法を提供し、現在表示されているページのサイト内の参照のポイントとして機能します。 この種類のコントロールはページの階層を現在の場所からエスケープを提供するハイパーリンクが設定されたページ名の階層パスが表示されるため、階層リンク、または階層リンク、よく呼び出されます。 <xref:System.Web.UI.WebControls.SiteMapDataSource>.</xref:System.Web.UI.WebControls.SiteMapDataSource> サイト マップ パスは where が深い階層のページ構造体を含むサイト用に便利です、<xref:System.Web.UI.WebControls.TreeView>または<xref:System.Web.UI.WebControls.Menu>ページ上の領域が多すぎる可能性がありますが必要です</xref:System.Web.UI.WebControls.Menu></xref:System.Web.UI.WebControls.TreeView>。       サイト マップ パス コントロールは、Web サイトのサイト マップ データを直接操作します。 使用する場合は表現できないページで、サイト マップに、これは表示されません。 サイト マップの詳細については、次を参照してください。 [ASP.NET サイト ナビゲーション](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;nodes&quot;></a>## ノードは、サイト マップ パスで構成されたノード。 パス内の各要素し、呼ばれ、ノードによって表される、<xref:System.Web.UI.WebControls.SiteMapNodeItem>オブジェクト</xref:System.Web.UI.WebControls.SiteMapNodeItem>。 アンカー ポイントが階層ツリーの基本クラスを表しますしたノードには、ルート ノードは呼び出されます。 現在表示されているページを表すノードは、現在のノードです。 現在のノードとルート ノードの間の他の任意のノードは、親ノードです。 次の表では、次の&3; つの異なるノード型について説明します。      |ノードの種類 |説明 |  |---------------|-----------------|  | ルート |階層ノードのセットを保持しているノードです |。  | 親 |1 つまたは複数の子ノードを持つノードはない、現在のノードです |。  | 現在 |現在表示されているページを表すノードです |。     <a name=&quot;node_appearance&quot;> </a> ##、サイト マップ パスによって表示されるノードの外観の各ノードは、<xref:System.Web.UI.WebControls.HyperLink>または<xref:System.Web.UI.WebControls.Literal>コントロール テンプレートを適用またはにスタイルを設定できます</xref:System.Web.UI.WebControls.Literal></xref:System.Web.UI.WebControls.HyperLink>。 テンプレートとスタイルの優先順位の&2; つの規則に従って、ノードに適用されます。-テンプレートがノードに対して定義されている場合、ノードに対して定義されているスタイルよりも優先します。      テンプレートおよびノードの種類に固有のスタイルは、一般的なテンプレートとすべてのノードで定義されているスタイルをオーバーライドします。       <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>プロパティは、ノードの種類に関係なく、すべてのノードに適用されます</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>。 これらのプロパティが定義されている場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>が優先されます</xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>。       <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>プロパティを現在表示されているページを表すノードに適用されます</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>は定義に加え、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>は無視されます</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>は定義に加え、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>とマージされて、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>マージされたスタイルを作成する</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>。 この結合されたスタイルのすべての要素を使用して、 <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>、 <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A> <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>とも競合しないこと</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>の他の要素と</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>       <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>プロパティを表すサイト ナビゲーション階層のルート ノードに適用されます</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>は定義に加え、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>は無視されます</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>は定義に加え、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>とマージされて、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>マージされたスタイルを作成する</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>。 この結合されたスタイルのすべての要素を使用して、 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>、さらに他の要素<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>をしなかったと競合していない<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>の</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> 最後に、現在表示されているページがページの場合、ルート サイトの<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A><xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>または<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>の代わりに</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>使用されます</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>       サイト マップ パス コントロール プロバイダーを使用して、サイト マップによって識別される、<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>ナビゲーションのサイト情報には、そのデータ ソースとしてのプロパティ</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>。 識別されたサイトの既定のプロバイダーを使用して、プロバイダーが指定されていない場合、<xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>プロパティ</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>。 通常、これは、ASP.NET <xref:System.Web.XmlSiteMapProvider>。</xref:System.Web.XmlSiteMapProvider>用の既定のサイト マップ プロバイダーのインスタンス サイト マップ パス コントロールを使用して、サイト内のサイト マップ プロバイダーが構成されていない場合は、コントロールがスローされます、<xref:System.Web.HttpException>例外です</xref:System.Web.HttpException>。      <a name=&quot;events&quot;></a>## イベント サイト マップ パス コントロールには、イベントに対してプログラミングを行うことができますをも用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表には、サイト マップ パス コントロールでサポートされているイベントが一覧表示します。      |イベント |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>|サイト マップ パス コントロールは、まず、<xref:System.Web.UI.WebControls.SiteMapNodeItem>を作成し、<xref:System.Web.SiteMapNode>に関連付けるときに発生します |。  |<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>|<xref:System.Web.UI.WebControls.SiteMapNodeItem>が、<xref:System.Web.SiteMapNode>に含まれるサイト マップ データにバインドされているときに発生します |。     <a name=&quot;customizing_the_sitemappath_control&quot;> </a> ## サイト マップ パスのオーバーライドから派生したサイト マップ パス コントロール クラスをカスタマイズする、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>をカスタマイズする方法、<xref:System.Web.UI.WebControls.SiteMapNodeItem>ナビゲーション コントロールに含まれるコントロール</xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A></xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound></xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>。 完全に制御する方法の<xref:System.Web.UI.WebControls.SiteMapNodeItem>オブジェクトが作成され、サイト マップ パスの派生クラスのオーバーライドを追加、<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A></xref:System.Web.UI.WebControls.SiteMapNodeItem>。      <a name=&quot;accessibility&quot;></a>## ユーザー補助機能のユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法についてを参照してください[Visual Studio と ASP.NET のユーザー補助機能](~/add/includes/ajax-current-ext-md.md)と[ASP.NET コントロールやアクセシビリティ](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:SiteMapPath       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       ParentLevelsDisplayed=&quot;integer&quot;       PathDirection=&quot;RootToCurrent|CurrentToRoot&quot;       PathSeparator=&quot;string&quot;       RenderCurrentNodeAsLink=&quot;True|False&quot;       runat=&quot;server&quot;       ShowToolTips=&quot;True|False&quot;       SiteMapProvider=&quot;string&quot;       SkinID=&quot;string&quot;       SkipLinkText=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <CurrentNodeStyle />           <CurrentNodeTemplate>               <!-- child controls -->           </CurrentNodeTemplate>           <NodeStyle />           <NodeTemplate>               <!-- child controls -->           </NodeTemplate>           <PathSeparatorStyle />           <PathSeparatorTemplate>               <!-- child controls -->           </PathSeparatorTemplate>           <RootNodeStyle />           <RootNodeTemplate>               <!-- child controls -->           </RootNodeTemplate>   </asp:SiteMapPath>   ```"
  example:
  - "The following code example uses a SiteMapPath control declaratively in a Web Forms page. This example demonstrates some of the rules of precedence that govern the order with which templates and styles are applied to SiteMapPath nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_1.aspx)]  \n  \n The previous example uses the default site map provider and a Web.sitemap file with the following structure.  \n  \n```  \n<siteMap>  \n  <siteMapNode title=\"WebForm1\" description=\"WebForm1\" url=\"WebForm1.aspx\" >  \n    <siteMapNode title=\"WebForm2\" description=\"WebForm2\" url=\"WebForm2.aspx\"/>  \n  </siteMapNode>  \n</siteMap>  \n```  \n  \n The following code example demonstrates extends the SiteMapPath control and adds new functionality to it by overriding the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. The `DropDownSiteMapPath` control adds a <xref:System.Web.UI.WebControls.DropDownList> after the current node, to enable easy navigation to pages that are child nodes of the current page. This example demonstrates how to work with <xref:System.Web.UI.WebControls.SiteMapNodeItem> objects, including checking their <xref:System.Web.UI.WebControls.SiteMapNodeItemType> and calling the <xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A> method after the items are created.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_394_2.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_394_2.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SiteMapPathDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class SiteMapPath : System.Web.UI.WebControls.CompositeControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.CompositeControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.CompositeControl.Controls
  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls
  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.SiteMapPath>クラス</xref:System.Web.UI.WebControls.SiteMapPath>の新しいインスタンスを初期化します。 動的に追加<xref:System.Web.UI.WebControls.SiteMapPath>ページにコントロールを作成する新しい<xref:System.Web.UI.WebControls.SiteMapPath>オブジェクト、そのプロパティを設定し<xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName><xref:System.Web.UI.WebControls.PlaceHolder>。</xref:System.Web.UI.WebControls.PlaceHolder>などのコンテナー コントロールのコレクション</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>に追加</xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapPath>するには"
  example:
  - "The following code example demonstrates how to use the SiteMapPath constructor to add a <xref:System.Web.UI.WebControls.SiteMapPath> control to a page. For the example to work, you need to add an image to your root directory and change the image name in the example code from \"myimage.jpg\" to the name of your image file.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_223_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_223_1.aspx)]"
  syntax:
    content: public SiteMapPath ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在の子コントロールのコレクションをクリアして、呼び出すことによって再構築、<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*>。"
  remarks: "このメソッドは、ASP.NET インフラストラクチャから派生したコントロールを含む、合成ベースの実装を使用するコントロールに通知する<xref:System.Web.UI.WebControls.CompositeDataBoundControl>と<xref:System.Web.UI.WebControls.CompositeControl>ポストバックまたはレンダリングの準備として任意の子が含まれているコントロールを作成する</xref:System.Web.UI.WebControls.CompositeControl></xref:System.Web.UI.WebControls.CompositeDataBoundControl>。"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  id: CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって提供されるサイト マップ構造体を調べ、<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>スタイルに基づいてコントロールのコレクションと機能のノードに対して定義されているテンプレートに子を構築します</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>。"
  remarks: "CreateControlHierarchy メソッド作成<xref:System.Web.UI.WebControls.SiteMapNodeItem>コントロールで、対応する関連付け<xref:System.Web.SiteMapNode>、現在のサイト マップ プロバイダーからのオブジェクトし、設定するノードを追加、<xref:System.Web.UI.Control.Controls%2A>コレクションです</xref:System.Web.UI.Control.Controls%2A></xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem>。       メソッドで、まず検索、 <xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>、作成し、次の階層ツリーを<xref:System.Web.SiteMapNode>オブジェクトを作成する、<xref:System.Web.UI.WebControls.SiteMapNodeItem>それぞれまでの<xref:System.Web.SiteMap.RootNode%2A>に達した</xref:System.Web.SiteMap.RootNode%2A></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.SiteMapNode></xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>。 たびに<xref:System.Web.UI.WebControls.SiteMapNodeItem>作成されると、対応するバインドされる前に、 <xref:System.Web.SiteMapNode>、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>メソッドが呼び出されます</xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A></xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem>。 <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>メソッドは、任意のテンプレートまたは特定のノード型に対して定義されたスタイルを適用しを作成し、いずれかを初期化する子コントロール、<xref:System.Web.UI.WebControls.SiteMapNodeItem>が含まれています</xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>。 最後に、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>メソッドの子コントロールを追加、<xref:System.Web.UI.WebControls.SiteMapNodeItem>を<xref:System.Web.UI.Control.Controls%2A>コレクションです</xref:System.Web.UI.Control.Controls%2A></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>。       各後<xref:System.Web.UI.WebControls.SiteMapNodeItem>が初期化されている、<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A>メソッドが呼び出されます</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated%2A></xref:System.Web.UI.WebControls.SiteMapNodeItem>。 次に、<xref:System.Web.UI.WebControls.SiteMapNodeItem>を対応するバインド<xref:System.Web.SiteMapNode>、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A>と呼びます</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound%2A></xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem>。       CreateControlHierarchy メソッドから、<xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.CreateChildControls%2A>。       拡張するクラス、<xref:System.Web.UI.WebControls.SiteMapPath>コントロール、CreateControlHierarchy メソッド オーバーライドを変更する方法、<xref:System.Web.UI.WebControls.SiteMapNodeItem>コントロールの作成またはに追加される、<xref:System.Web.UI.WebControls.SiteMapPath>コントロール</xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath>。 個々 のノード項目の操作が実行される、<xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>メソッド、およびほとんどのクラスを拡張する<xref:System.Web.UI.WebControls.SiteMapPath>のみ、そのメソッドをオーバーライドします</xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A>。"
  syntax:
    content: protected virtual void CreateControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "いいえ<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>が使用できる、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  id: CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在のノードの表示テキストに使用するスタイルを取得します。"
  remarks: "CurrentNodeStyle プロパティを使用すると、現在表示されているページを表すナビゲーション パスのノードの表示テキストの外観を制御できます。 既定では、表示テキストで指定されている、<xref:System.Web.SiteMapNode.Title%2A>のプロパティ、<xref:System.Web.SiteMapNode>ページを表す</xref:System.Web.SiteMapNode></xref:System.Web.SiteMapNode.Title%2A>。 共通のスタイル設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードのスペースが含まれます。       <xref:System.Web.UI.WebControls.SiteMapPath>ノード、スタイル プロパティは、次の順序で、1 つのスタイルにマージされます 1。</xref:System.Web.UI.WebControls.SiteMapPath> 。  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2 になります。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  CurrentNodeStyle 場合、または、現在表示されているページが、ルート ノード、 <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>      > [!NOTE] > に明示的に設定されている場合を除き、取り消し線または上線のスタイルをノードのフォント スタイルを設定した場合、ノードの既定の下線のスタイルは表示されません`true`です。       場合、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>プロパティが定義されている、CurrentNodeStyle プロパティは無視されます</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。"
  example:
  - "The following code example demonstrates how to declaratively set the CurrentNodeStyle of a <xref:System.Web.UI.WebControls.SiteMapPath> control in a Web Forms page.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_328_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_328_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style CurrentNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>の現在のノードの表示テキストのスタイルの設定を格納している、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  id: CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または現在表示されているページを表すサイト ナビゲーション パスのノードに使用するコントロール テンプレートを設定します。"
  remarks: "CurrentNodeTemplate を設定、<xref:System.Web.UI.ITemplate>を使用するオブジェクト、<xref:System.Web.UI.WebControls.Image>コントロールまたはその他の制御など、 <xref:System.Web.UI.WebControls.Label>、文字列ではなく現在のノードのユーザー インターフェイス要素として</xref:System.Web.UI.WebControls.Label></xref:System.Web.UI.WebControls.Image></xref:System.Web.UI.ITemplate>。       テンプレートが表示されるナビゲーション ノードの現在のテキストと<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>それに適用される</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>の両方をオーバーライド CurrentNodeTemplate プロパティが設定されている場合 現在表示されているページがただし、ルート ノードに対応している場合、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>または<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>を使用します</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>。       任意の Web サーバー コントロールを宣言によって CurrentNodeTemplate プロパティを設定できますその ASP.NET インフラストラクチャとして Web サーバー コントロールをラップするために必要な手順を実行する、<xref:System.Web.UI.ITemplate>オブジェクト。</xref:System.Web.UI.ITemplate> 。 ただし、Web サーバー コントロールは実装しないでください、<xref:System.Web.UI.ITemplate>インターフェイスであるため、操作する際に、<xref:System.Web.UI.ITemplate>プロパティ プログラムでは、記述する必要あります、<xref:System.Web.UI.ITemplate>テンプレート コード用のラッパー</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 。 インスタンスに CurrentNodeTemplate プロパティを設定し、<xref:System.Web.UI.ITemplate>ラッパー</xref:System.Web.UI.ITemplate> 。"
  example:
  - "The following code example declaratively defines a CurrentNodeTemplate and overrides a defined <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_538_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_538_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate CurrentNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>を実装するオブジェクト、<xref:System.Web.UI.ITemplate.InstantiateIn*>現在表示されているページを表すナビゲーション パス ノード用のカスタム コンテンツを表示するために、メソッド</xref:System.Web.UI.ITemplate.InstantiateIn*>。"
  overload: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソースのバインド、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロールとその子コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>コントロールを使用して、サイト マップ プロバイダーから直接そのデータを取得するものでは、<xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A>プロパティ</xref:System.Web.UI.WebControls.SiteMapPath.Provider%2A></xref:System.Web.UI.WebControls.SiteMapPath>。 使用しないで、 <xref:System.Web.UI.WebControls.SiteMapPath>ASP.NET データ ソース コントロールにバインドするコントロールし、データ バインド メソッドを明示的に呼び出す必要はありません</xref:System.Web.UI.WebControls.SiteMapPath>。"
  syntax:
    content: public override void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  id: InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "追加、 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>、これは、Web サーバー コントロールを表す、 <xref href=&quot;System.Web.SiteMapNode&quot;></xref>一連のノードの関数と、指定されたテンプレートおよびノードのスタイルに基づく子コントロールにします。"
  remarks: "InitializeItem メソッドをチェックして、項目を表すノードの機能の種類を決定する、 <xref:System.Web.UI.WebControls.SiteMapNodeItemType>、し、任意のテンプレートまたはそのノードの種類に対して定義されているスタイルを適用します</xref:System.Web.UI.WebControls.SiteMapNodeItemType>。       場合、<xref:System.Web.UI.WebControls.SiteMapNodeItem>が、<xref:System.Web.UI.WebControls.SiteMapNodeItemType>項目の種類を<xref:System.Web.UI.WebControls.HyperLink>子コントロールを作成すると、および<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>適用可能性があります</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A></xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.SiteMapNodeItemType></xref:System.Web.UI.WebControls.SiteMapNodeItem>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>設定すると、その<xref:System.Web.UI.ITemplate>は、ノードに適用します</xref:System.Web.UI.ITemplate></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>。 代わりに、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>が設定されている、いずれかの定義とマージされて<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>と適用されます</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>。 最後に、テンプレートまたはスタイルは定義されていない場合、基本的な<xref:System.Web.UI.WebControls.HyperLink>コントロールが作成され、ノードの値で初期化します</xref:System.Web.UI.WebControls.HyperLink>。       場合<xref:System.Web.UI.WebControls.SiteMapNodeItem>は<xref:System.Web.UI.WebControls.SiteMapNodeItemType>項目の種類、いずれか、<xref:System.Web.UI.WebControls.Literal>または<xref:System.Web.UI.WebControls.HyperLink><xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink%2A>の戻り値によって、子コントロールが作成されました。</xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.Literal> </xref:System.Web.UI.WebControls.SiteMapNodeItemType> </xref:System.Web.UI.WebControls.SiteMapNodeItem> そのいずれか、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>または<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>適用可能性があります</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>設定すると、その<xref:System.Web.UI.ITemplate>は、ノードに適用します</xref:System.Web.UI.ITemplate></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。 場合、代わりに、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>が設定されている、いずれかの定義とマージされて<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>と適用されます</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>。       場合、<xref:System.Web.UI.WebControls.SiteMapNodeItem>が、<xref:System.Web.UI.WebControls.SiteMapNodeItemType>項目の種類、<xref:System.Web.UI.WebControls.HyperLink>子コントロールが作成され、<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>適用可能性があります</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A></xref:System.Web.UI.WebControls.HyperLink></xref:System.Web.UI.WebControls.SiteMapNodeItemType></xref:System.Web.UI.WebControls.SiteMapNodeItem>。 場合、<xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>設定すると、その<xref:System.Web.UI.ITemplate>は、ノードに適用します</xref:System.Web.UI.ITemplate></xref:System.Web.UI.WebControls.SiteMapPath.NodeTemplate%2A>。 場合、代わりに、<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>が設定されている、適用されます</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>。       最後に場合、<xref:System.Web.UI.WebControls.SiteMapNodeItem>が、<xref:System.Web.UI.WebControls.SiteMapNodeItemType>項目の種類、<xref:System.Web.UI.WebControls.Literal>子コントロールが作成され、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>に対して定義されている、同じ一般的な規則に従って適用されます、<xref:System.Web.UI.WebControls.SiteMapNodeItemType>ノードの種類</xref:System.Web.UI.WebControls.SiteMapNodeItemType></xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A></xref:System.Web.UI.WebControls.Literal></xref:System.Web.UI.WebControls.SiteMapNodeItemType></xref:System.Web.UI.WebControls.SiteMapNodeItem>。       個々 の操作を InitializeItem メソッドをオーバーライドして<xref:System.Web.UI.WebControls.SiteMapNodeItem>オブジェクト</xref:System.Web.UI.WebControls.SiteMapNodeItem>。 クラスのデザインがより広範囲に制御する方法を必要なかどうかは<xref:System.Web.UI.WebControls.SiteMapNodeItem>オブジェクトが作成され、追加、<xref:System.Web.UI.WebControls.SiteMapPath>コントロールをオーバーライド、<xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy%2A></xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapNodeItem>。"
  example:
  - "The following code example demonstrates how to override the InitializeItem method to add functionality to a control that derives from <xref:System.Web.UI.WebControls.SiteMapPath>. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/visualbasic/707d474c-b96f-4b62-8a92-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#2](~/add/codesnippet/csharp/707d474c-b96f-4b62-8a92-_1.cs)]"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.SiteMapNodeItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.SiteMapNodeItem
      description: "<xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>を初期化します。"
  overload: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>によって作成された、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>とそれに対応する関連付けられる<xref href=&quot;System.Web.SiteMapNode&quot;></xref>です。 このイベントは、<xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.OnItemCreated*>。"
  remarks: "イベント処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "後に発生、 <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItem&quot;> </xref>がその基になるバインドされた<xref href=&quot;System.Web.SiteMapNode&quot;></xref>によってデータ、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>です。 このイベントは、<xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*>。"
  remarks: "イベント処理の詳細については、次を参照してください。[イベント](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SiteMapNodeItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって保存された前回の要求からビューステート情報を復元、<xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>メソッド</xref:System.Web.UI.WebControls.SiteMapPath.SaveViewState*>。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       <xref:System.Web.UI.WebControls.Login.LoadViewState%2A>メソッドが前の要求時に保存されたビュー ステート情報を復元します</xref:System.Web.UI.WebControls.Login.LoadViewState%2A>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>を復元するコントロールの状態を表す</xref:System.Object>。"
  overload: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  id: NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "サイト ナビゲーション パス内のすべてのノードの表示テキストに使用するスタイルを取得します。"
  remarks: "NodeStyle プロパティを使用すると、すべてのナビゲーション パス ノード、コントロールによって表示されるテキストの外観を制御できます。 既定では、表示テキストで指定されている、<xref:System.Web.SiteMapNode.Title%2A>のプロパティ、<xref:System.Web.SiteMapNode>ページを表す</xref:System.Web.SiteMapNode></xref:System.Web.SiteMapNode.Title%2A>。 共通のスタイル設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードのスペースが含まれます。       <xref:System.Web.UI.WebControls.SiteMapPath>ノード、スタイル プロパティは、次の順序で、1 つのスタイルにマージされます 1。</xref:System.Web.UI.WebControls.SiteMapPath> 。  NodeStyle 2。  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>または<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>、ノードの種類によって異なります</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      > [!NOTE] > に明示的に設定されている場合を除き、取り消し線または上線のスタイルをノードのフォント スタイルを設定した場合、ノードの既定の下線のスタイルは表示されません`true`です。       NodeStyle が定義されている場合は、各ノードに最初に適用します。 ルート ノードまたは現在のノードなど、ノードの特定の種類に関する追加のスタイルが定義されている場合、このスタイルには、NodeStyle プロパティで指定した一般的なスタイルがより優先されます。 テンプレートがノードの特定の型に対して定義されている場合、そのノードのすべての定義済みのスタイルはよりも優先されます。"
  example:
  - "The following code example demonstrates how to define a NodeStyle that is merged with a <xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> to demonstrate the order of style precedence for the <xref:System.Web.UI.WebControls.SiteMapPath> nodes.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_510_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_510_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style NodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>内の表示テキストのスタイルの設定を格納している、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  id: NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはサイトのナビゲーション パスのすべての機能のノードに使用するコントロール テンプレートを設定します。"
  remarks: "NodeTemplate を設定、<xref:System.Web.UI.ITemplate>を使用するオブジェクト、<xref:System.Web.UI.WebControls.Image>またはその他の制御など、 <xref:System.Web.UI.WebControls.Label>、ナビゲーション パス ノードのすべてのユーザー インターフェイス要素として</xref:System.Web.UI.WebControls.Label></xref:System.Web.UI.WebControls.Image></xref:System.Web.UI.ITemplate>。       ナビゲーション ノードのテキストが表示され、<xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>適用を突き止め</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>の両方にテンプレートよりも優先 NodeTemplate プロパティが設定されている場合 現在の場合のルート ノード、および、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>または<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>が設定されている、これらのテンプレートが、NodeTemplate をオーバーライドします</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。       任意の Web サーバー コントロールを宣言によって NodeTemplate プロパティを設定できますその ASP.NET インフラストラクチャとして Web サーバー コントロールをラップするために必要な手順を実行する、<xref:System.Web.UI.ITemplate>オブジェクト。</xref:System.Web.UI.ITemplate> 。 ただし、Web サーバー コントロールは実装しないでください、<xref:System.Web.UI.ITemplate>インターフェイスであるため、操作する際に、<xref:System.Web.UI.ITemplate>プロパティ プログラムでは、記述する必要あります、<xref:System.Web.UI.ITemplate>テンプレート コード用のラッパー</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 。 次に、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>プロパティのインスタンスに設定されて、<xref:System.Web.UI.ITemplate>ラッパー</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A> 。"
  example:
  - "The following code example demonstrates how a NodeTemplate, when one is specified, overrides styles defined for all nodes, including special styles for the root node and current node.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_615_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_6#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_615_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate NodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>ナビゲーション パスの各ノード用のカスタム コンテンツを表示するために、メソッド</xref:System.Web.UI.ITemplate.InstantiateIn*>を実装するオブジェクト"
  overload: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "上書き、<xref:System.Web.UI.Control.OnDataBinding*>のメソッド、 <xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;> </xref>クラスとが発生し、 <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref>イベント</xref:System.Web.UI.Control.OnDataBinding*>。"
  syntax:
    content: protected override void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemCreated&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>後にイベントを生成、<xref:System.Web.UI.WebControls.SiteMapPath>コントロールを作成、 <xref:System.Web.UI.WebControls.SiteMapNodeItem>、これは、Web サーバー コントロールを表す、 <xref:System.Web.SiteMapNode>、<xref:System.Web.SiteMapNode></xref:System.Web.SiteMapNode>関連付けます</xref:System.Web.SiteMapNode></xref:System.Web.UI.WebControls.SiteMapNodeItem></xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapPath.ItemCreated>。 作成されたノードの項目がそのデータにバインドする前に、OnItemCreated メソッドが呼び出されます。 これにより、カスタム ルーチンを実行するイベント処理メソッドを提供するたびに、<xref:System.Web.UI.WebControls.SiteMapNodeItem>を作成します</xref:System.Web.UI.WebControls.SiteMapNodeItem>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnItemCreated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to call the OnItemCreated method after creating a <xref:System.Web.UI.WebControls.SiteMapNodeItem> within the <xref:System.Web.UI.WebControls.SiteMapPath.InitializeItem%2A> method. This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.SiteMapPath> class.  \n  \n [!code-vb[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/visualbasic/75986b20-78b2-4533-871b-_1.vb)]\n [!code-cs[Urtue.Samples.Alexkr.DropDownNavigationPath_1#3](~/add/codesnippet/csharp/75986b20-78b2-4533-871b-_1.cs)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath.ItemDataBound&quot;> </xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound>イベントが発生したときに<xref:System.Web.UI.WebControls.SiteMapPath>その<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>.</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>によって提供されるデータにコントロールがバインド</xref:System.Web.UI.WebControls.SiteMapPath></xref:System.Web.UI.WebControls.SiteMapPath.ItemDataBound> これにより、このイベントが発生するたびに、データベースまたは、表示されているコンテンツの更新など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnItemDataBound メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.SiteMapNodeItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SiteMapNodeItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  id: ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールが表示されたら、現在表示されているノードに対して相対的な親ノードのレベルの数を設定します。"
  remarks: "ParentLevelsDisplayed プロパティを制御して親ノードのレベル数が表示される、<xref:System.Web.UI.WebControls.SiteMapPath>現在のコンテキスト ノード上のコントロールです</xref:System.Web.UI.WebControls.SiteMapPath>。 既定では、現在のコンテキスト ノード上のすべての親および祖先ノードが表示されます。       このプロパティの値は、ビュー ステートに格納されます。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  syntax:
    content: public virtual int ParentLevelsDisplayed { get; set; }
    return:
      type: System.Int32
      description: "表示される、現在のコンテキスト ノードに対して相対的な親ノードのレベル数を指定する整数。 既定値は-1 をコントロールが表示される親レベルの数に制限がないことを示します。"
  overload: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ParentLevelsDisplayed の値は、-1 未満です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  id: PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはナビゲーション パス ノードで、表示がされる順序を設定します。"
  remarks: "PathDirection &quot;éý&quot;<xref:System.Web.UI.WebControls.PathDirection>を左から右へのナビゲーション パスを表示する場合、ナビゲーション パスとして表示されます、これまで左からサイト マップ ノードの右側にします</xref:System.Web.UI.WebControls.PathDirection>。 つまり、ルート ノードが左端の位置には、後続の各ノードが右側で、次の位置であり、右端の位置では、現在のノードです。       PathDirection &quot;éý&quot;<xref:System.Web.UI.WebControls.PathDirection>右から左へのナビゲーション パスを表示する場合</xref:System.Web.UI.WebControls.PathDirection>。 つまり、ノードの順序を逆にした右端の位置にあるルート ノードが表示され、左端の位置に、現在のノードを表示できるようにします。 中としてではなく一般的なこの順序を使用できる Web フォーム ページのローカライズと<xref:System.Web.UI.WebControls.SiteMapPath>右から左に読む言語のコントロールです</xref:System.Web.UI.WebControls.SiteMapPath>。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to declaratively set the PathDirection property of a <xref:System.Web.UI.WebControls.SiteMapPath> in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_37_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_37_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PathDirection PathDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.PathDirection
      description: "A <xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>で表示されるナビゲーション ノードの階層の順序を示すです。 既定値は<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;> </xref>、左右からに向かってからノードが現在のノードに、最上位のノードからの階層の順序で表示されることを示します。"
  overload: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "PathDirection の値が、ベースのいずれかの<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;></xref>列挙体です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  id: PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を区切る文字列<xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;></xref>レンダリングされたナビゲーション パス内のノードです。"
  remarks: "場合、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>が定義されている、可能プロパティに適用されます</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>。 ただし場合、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>プロパティを定義すると、両方の可能および<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>プロパティは無視されます</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following example demonstrates how to set the PathSeparator property of a <xref:System.Web.UI.WebControls.SiteMapPath> to a string other than the default.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_604_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_604_1.aspx)]"
  syntax:
    content: public virtual string PathSeparator { get; set; }
    return:
      type: System.String
      description: "ナビゲーション パス内のノードの区切り記号を表す文字列。 既定値は&quot; &gt; &quot;、これは左から右、指す文字であり、既定値に対応する<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;></xref>に設定される<xref href=&quot;System.Web.UI.WebControls.PathDirection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  id: PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用されるスタイルを取得、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>文字列</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>。"
  remarks: "PathSeparatorStyle プロパティを使用すると、ナビゲーション パスのノード間に表示されるパスの区切り文字の外観を制御できます。 フォントのプロパティと、前景色で使用されるフォントのスタイルの共通設定が含まれます、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>プロパティ</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>。       場合、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>プロパティが定義されている両方を<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>と PathSeparatorStyle プロパティは無視されます</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A></xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate%2A>。"
  syntax:
    content: public System.Web.UI.WebControls.Style PathSeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>のスタイル設定を格納している、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロールの<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>テキスト</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator*>。"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  id: PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはサイトのナビゲーション パスのパス区切り記号を使用するコントロール テンプレートを設定します。"
  remarks: "PathSeparatorTemplate を設定、<xref:System.Web.UI.ITemplate>を使用するオブジェクト、<xref:System.Web.UI.WebControls.Image>またはその他の制御など、<xref:System.Web.UI.WebControls.Label>の代わりにナビゲーション ノード間のパス区切り文字として、<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>文字列</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A></xref:System.Web.UI.WebControls.Label></xref:System.Web.UI.WebControls.Image></xref:System.Web.UI.ITemplate>。       PathSeparatorTemplate プロパティが設定されている場合、テンプレートがオーバーライド両方<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>に表示されるテキストと<xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A>それに適用</xref:System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.PathSeparator%2A>       任意の Web サーバー コントロールを宣言によって PathSeparatorTemplate プロパティを設定できます。 その ASP.NET インフラストラクチャが<xref:System.Web.UI.ITemplate>。</xref:System.Web.UI.ITemplate>として Web サーバー コントロールをラップするために必要な手順を実行 ただし、Web サーバー コントロールは実装しないでください、<xref:System.Web.UI.ITemplate>インターフェイスであるため、操作する際に、<xref:System.Web.UI.ITemplate>プロパティ プログラムでは、記述する必要あります、<xref:System.Web.UI.ITemplate>テンプレート コード用のラッパー</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 。 インスタンスに PathSeparatorTemplate プロパティを設定し、<xref:System.Web.UI.ITemplate>ラッパー</xref:System.Web.UI.ITemplate> 。"
  example:
  - "The following code example demonstrates how to define an <xref:System.Web.UI.WebControls.Image> as a PathSeparatorTemplate declaratively in a Web Form.  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_835_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_835_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PathSeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>ナビゲーション パスのパス区切り記号のカスタム コンテンツを表示するために、メソッド</xref:System.Web.UI.ITemplate.InstantiateIn*>を実装するオブジェクト"
  overload: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  id: Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref> Web サーバー コントロールに関連付けられています。"
  remarks: "プロバイダーのプロパティには、コントロールで使用するサイト マップ プロバイダーのインスタンスを指定します。 このプロバイダーは、プロバイダーによって識別される異なる場合があります、<xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>プロパティの場合に設定します</xref:System.Web.UI.WebControls.SiteMapPath.SiteMapProvider%2A>。"
  syntax:
    content: public System.Web.SiteMapProvider Provider { get; set; }
    return:
      type: System.Web.SiteMapProvider
      description: "A <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>コントロールに関連付けられているインスタンス。 プロバイダーが明示的に設定しない場合は、既定のサイト マップ プロバイダーが使用されます。"
  overload: System.Web.UI.WebControls.SiteMapPath.Provider*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The provider named by the <xref:System.Web.UI.WebControls.SiteMapDataSource.SiteMapProvider*> property is not available.  \n  \n \\- or -  \n  \n There is no default provider configured for the site."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "書き込みます、 <xref href=&quot;System.Web.UI.WebControls.CompositeControl&quot;> </xref>を指定したコンテンツ<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>クライアントに表示するためのオブジェクト。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>表示される出力を受け取る。"
  overload: System.Web.UI.WebControls.SiteMapPath.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内のノードを表示、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>コントロールのユーザー補助のレンダリングを実行する場合に RenderContents メソッドをオーバーライドして<xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A><xref:System.String.Empty?displayProperty=fullName></xref:System.String.Empty?displayProperty=fullName>プロパティが設定されていない</xref:System.Web.UI.WebControls.SiteMapPath.SkipLinkText%2A></xref:System.Web.UI.WebControls.SiteMapPath>。"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> Web ページへのコンテンツを書き込むために使用する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  id: RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在表示されているページを表すサイト ナビゲーション ノードをハイパーリンクとして表示するかどうかを示します。"
  remarks: "現在表示されているページを表すノードは<xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName>。</xref:System.Web.SiteMap.CurrentNode%2A?displayProperty=fullName> その<xref:System.Web.SiteMapNode.Title%2A>プロパティは、現在のノードに表示するテキストを指定し、その<xref:System.Web.SiteMapNode.Url%2A>ハイパーリンクを作成するプロパティを使用します</xref:System.Web.SiteMapNode.Url%2A></xref:System.Web.SiteMapNode.Title%2A>。 既定では、エラーがあるフォーム ポストを防ぐために現在のページのハイパーリンクはレンダリングされません。       このプロパティの値は、ビュー ステートに格納されます。"
  example:
  - "The following code example demonstrates how to set the RenderCurrentNodeAsLink property to `true` to make the current node a hyperlink when the <xref:System.Web.UI.WebControls.SiteMapPath> control renders its content.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_212_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_212_1.aspx)]"
  syntax:
    content: public virtual bool RenderCurrentNodeAsLink { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のページを表すノードがハイパーリンクとしてレンダリングされる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  id: RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ルート ノードの表示テキストのスタイルを取得します。"
  remarks: "RootNodeStyle プロパティを使用すると、ナビゲーション パスのルート ノードの表示テキストの外観を制御できます。 既定では、表示テキストで指定されている、<xref:System.Web.SiteMapNode.Title%2A>のプロパティ、<xref:System.Web.SiteMapNode>ページを表す</xref:System.Web.SiteMapNode></xref:System.Web.SiteMapNode.Title%2A>。 共通のスタイル設定には、カスタムの背景色、前景の色、フォントのプロパティ、およびノードのスペースが含まれます。       <xref:System.Web.UI.WebControls.SiteMapPath>ノード、スタイル プロパティは、次の順序で、1 つのスタイルにマージされます 1。</xref:System.Web.UI.WebControls.SiteMapPath> 。  <xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>2 になります。</xref:System.Web.UI.WebControls.SiteMapPath.NodeStyle%2A>  <xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>または、ノードの種類に応じて、RootNodeStyle します。</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>      > [!NOTE] > に明示的に設定されている場合を除き、取り消し線または上線のスタイルをノードのフォント スタイルを設定した場合、ノードの既定の下線のスタイルは表示されません`true`です。       場合、<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>プロパティが定義されている、RootNodeStyle プロパティは無視されます</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate%2A>。"
  example:
  - "The following code example demonstrates how to declaratively set the RootNodeStyle attributes on a <xref:System.Web.UI.WebControls.SiteMapPath> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_696_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_696_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.Style RootNodeStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "<xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>のスタイルの設定を格納している、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>ルート ノードの表示テキストを制御します。"
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  id: RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはサイトのナビゲーション パスのルート ノードに使用するコントロール テンプレートを設定します。"
  remarks: "RootNodeTemplate を設定、<xref:System.Web.UI.ITemplate>を使用するオブジェクト、<xref:System.Web.UI.WebControls.Image>コントロールまたはその他の制御など、<xref:System.Web.UI.WebControls.Label>文字列ではなく、ルート ノードのユーザー インターフェイス要素として</xref:System.Web.UI.WebControls.Label></xref:System.Web.UI.WebControls.Image></xref:System.Web.UI.ITemplate>。       RootNodeTemplate プロパティが設定されている場合、テンプレートとよりも優先両方表示ルート ナビゲーション ノードのテキスト<xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A>を突き止め適用</xref:System.Web.UI.WebControls.SiteMapPath.RootNodeStyle%2A> テンプレートが上書きも、<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>と<xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A>ルート ページが現在表示されているページのプロパティ</xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle%2A></xref:System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate%2A>。       任意の Web サーバー コントロールを宣言によって RootNodeTemplate プロパティを設定できます。 その ASP.NET インフラストラクチャが<xref:System.Web.UI.ITemplate>。</xref:System.Web.UI.ITemplate>として Web サーバー コントロールをラップするために必要な手順を実行 ただし、Web サーバー コントロールは実装しないでください、<xref:System.Web.UI.ITemplate>インターフェイスであるため、操作する際に、<xref:System.Web.UI.ITemplate>プロパティ プログラムでは、記述する必要あります、<xref:System.Web.UI.ITemplate>テンプレート コード用のラッパー</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> </xref:System.Web.UI.ITemplate> 。 インスタンスに RootNodeTemplate プロパティを設定し、<xref:System.Web.UI.ITemplate>ラッパー</xref:System.Web.UI.ITemplate> 。"
  example:
  - "The following code example demonstrates how to programmatically define a class that implements the <xref:System.Web.UI.ITemplate> interface to wrap an <xref:System.Web.UI.WebControls.Image> control. Then, the RootNodeTemplate property is set to an instance of the class.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_178_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_178_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate RootNodeTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "<xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> <xref:System.Web.UI.ITemplate.InstantiateIn*>ナビゲーション パスのルート ノード用のカスタム コンテンツを表示するために、メソッド</xref:System.Web.UI.ITemplate.InstantiateIn*>を実装するオブジェクト"
  overload: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "状態を表示する変更を保存、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロール。"
  remarks: "ビュー ステートが、サーバー コントロールのプロパティの値の累積します。 これらの値は、サーバー コントロールの<xref:System.Web.UI.StateBag><xref:System.Web.UI.Control.ViewState%2A>プロパティ、</xref:System.Web.UI.Control.ViewState%2A></xref:System.Web.UI.StateBag>に自動的に配置します。 保存状態の段階のサーバー コントロールのライフ サイクルの後に、このプロパティの値が文字列オブジェクトを永続化します。       格納されている変数として、この文字列オブジェクトが、クライアントに返されるビュー ステートを保存すると、 `Hidden` HTML 要素です。 カスタム サーバー コントロールを作成するときに、このメソッドをオーバーライドし、変更、サーバー コントロールの効率を向上できます<xref:System.Web.UI.Control.ViewState%2A>プロパティ</xref:System.Web.UI.Control.ViewState%2A>。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "サーバー コントロールの現在のビューステートを返します。 このメソッドが戻るかどうかは、コントロールに関連付けられているビュー ステートがない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  id: ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはを示す値を設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロールは、ハイパーリンクのナビゲーション ノードのハイパーリンクの追加属性を書き込みます。 クライアントのサポートによって、マウス ポインターを設定すると、追加の属性を持つハイパーリンクを置くとツールヒントが表示されます。"
  remarks: "最も一般的なシナリオは、ときに、 `Title` HTML に HTML 属性が存在する`A Href`ハイパーリンクです。 たとえば、Microsoft Internet Explorer 4.0 以降および Netscape 6.0 および以降の実装、 `Title` Opera 3.0 と以降の実装の中に、自動選択のツールヒントとして属性、`Title`ツールヒントと元の Opera のツールバーの領域のキャプションの両方の属性です。 すべてのクライアントは、ハイパーリンクの追加属性のツールヒントを表示します。       このプロパティの値は、ビュー ステートに格納されます。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  example:
  - "The following code example demonstrates how to declaratively set the ShowToolTips property to `false` in a Web Forms page.  \n  \n [!code-vb[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_861_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.NavigationPath_decl_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_861_1.aspx)]"
  syntax:
    content: public virtual bool ShowToolTips { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ハイパーリンクのナビゲーション ノード; 代替テキストを書き込む場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  id: SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の名前、 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>サイト ナビゲーション コントロールをレンダリングするために使用します。"
  remarks: "<xref:System.Web.UI.WebControls.SiteMapPath>コントロール、<xref:System.Web.SiteMapProvider>レンダリング サイト マップ データのソースとして使用します</xref:System.Web.SiteMapProvider></xref:System.Web.UI.WebControls.SiteMapPath>。 SiteMapProvider プロパティが設定されていないかどうかの<xref:System.Web.UI.WebControls.SiteMapPath>コントロールは、<xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>これは<xref:System.Web.SiteMapProvider>通常、 <xref:System.Web.XmlSiteMapProvider>.</xref:System.Web.XmlSiteMapProvider> 、構成階層のサイトに対して定義されている</xref:System.Web.SiteMapProvider>既定のプロパティ</xref:System.Web.SiteMap.Provider%2A?displayProperty=fullName>で識別されるプロバイダーを使用して</xref:System.Web.UI.WebControls.SiteMapPath> SiteMapProvider を設定するプロパティの指示、<xref:System.Web.UI.WebControls.SiteMapPath>プロバイダーを定義するサイト マップ データをレンダリングするコントロール</xref:System.Web.UI.WebControls.SiteMapPath>。       <xref:System.Web.UI.WebControls.SiteMapPath>コントロールの動作を直接、<xref:System.Web.SiteMapProvider>とその<xref:System.Web.SiteMapNode>サイト マップ情報を表示するオブジェクト</xref:System.Web.SiteMapNode></xref:System.Web.SiteMapProvider></xref:System.Web.UI.WebControls.SiteMapPath>。 などの他のコントロール<xref:System.Web.UI.WebControls.Menu>と<xref:System.Web.UI.WebControls.TreeView>、によって提供されるデータ抽象化が必要、<xref:System.Web.UI.WebControls.SiteMapDataSource>クラスは、同じサイト ナビゲーションの情報を表示します</xref:System.Web.UI.WebControls.SiteMapDataSource></xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.Menu>。       このプロパティの値は、ビュー ステートに格納されます。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  syntax:
    content: public virtual string SiteMapProvider { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Web.SiteMapProvider&quot;> </xref>のナビゲーション構造を定義する、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>を表示します。 使用可能なすべてのプロバイダーが含まれている、 &lt;xref:System.Web.SiteMap.Providers%2A?displayProperty=fullName&gt;コレクションと列挙および名前を使用して取得できます、<xref:System.Web.SiteMapProviderCollection.Item*>プロパティ</xref:System.Web.SiteMapProviderCollection.Item*>。"
  overload: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  id: SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはコントロールのコンテンツをスキップする画面リーダー用の代替テキストを表示するために使用される値を設定します。"
  remarks: "SkipLinkText は、Web ページを増減したり、スクリーン リーダーのユーザーにアクセスできるようにする設定できるプロパティです。 サイト マップ データを表示するコントロールなど、複数のページに繰り返し表示されるコンテンツが含まれる web サイトには、読み上げ読み取られないように、繰り返し出現するコンテンツをスキップするスクリーン リーダーのユーザーをできる機構を提供できます。       <xref:System.Web.UI.WebControls.SiteMapPath>コントロールでは、スクリーン リーダーでスキップするのには、全体の制御方法として、SkipLinkText プロパティが用意されています</xref:System.Web.UI.WebControls.SiteMapPath>。  SkipLinkText プロパティが設定されている場合、コンテンツの最後にジャンプするためのオプションをユーザーに提供の代替テキストを非表示のイメージが表示されます。 スクリーン リーダーの代替テキストを読み上げるですが、イメージがページの視覚的な流れを妨害しません。 プロパティが既定では、これにより、コントロールをスキップ スクリーン リーダー「スキップ ナビゲーション リンク」に設定します。 この動作を無効にする場合は、 <xref:System.String.Empty?displayProperty=fullName>。</xref:System.String.Empty?displayProperty=fullName>プロパティを設定します。       このプロパティの値は、ビュー ステートに格納されます。       このプロパティの値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  syntax:
    content: public virtual string SkipLinkText { get; set; }
    return:
      type: System.String
      description: "ある文字列、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>スクリーン リーダーにヒントとして、コントロールが非表示のイメージの代替テキストとして表示します。 既定値は、「スキップ ナビゲーション リンク」です。"
  overload: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "に対する変更を追跡、 <xref href=&quot;System.Web.UI.WebControls.SiteMapPath&quot;> </xref>コントロールのビュー ステート。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath()
  nameWithType: SiteMapPath.SiteMapPath()
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapPath()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls()
  nameWithType: SiteMapPath.CreateChildControls()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateChildControls()
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy()
  nameWithType: SiteMapPath.CreateControlHierarchy()
  fullName: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy()
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind()
  nameWithType: SiteMapPath.DataBind()
  fullName: System.Web.UI.WebControls.SiteMapPath.DataBind()
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem(System.Web.UI.WebControls.SiteMapNodeItem)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem(SiteMapNodeItem)
  nameWithType: SiteMapPath.InitializeItem(SiteMapNodeItem)
  fullName: System.Web.UI.WebControls.SiteMapPath.InitializeItem(SiteMapNodeItem)
- uid: System.Web.UI.WebControls.SiteMapNodeItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItem
  nameWithType: SiteMapNodeItem
  fullName: System.Web.UI.WebControls.SiteMapNodeItem
- uid: System.Web.UI.WebControls.SiteMapPath.ItemCreated
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemCreated
  nameWithType: SiteMapPath.ItemCreated
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemCreated
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventHandler
  nameWithType: SiteMapNodeItemEventHandler
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventHandler
- uid: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ItemDataBound
  nameWithType: SiteMapPath.ItemDataBound
  fullName: System.Web.UI.WebControls.SiteMapPath.ItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SiteMapPath.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SiteMapPath.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: SiteMapPath.OnDataBinding(EventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnDataBinding(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemCreated(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SiteMapNodeItemEventArgs
  nameWithType: SiteMapNodeItemEventArgs
  fullName: System.Web.UI.WebControls.SiteMapNodeItemEventArgs
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(System.Web.UI.WebControls.SiteMapNodeItemEventArgs)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound(SiteMapNodeItemEventArgs)
  nameWithType: SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
  fullName: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound(SiteMapNodeItemEventArgs)
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
  fullName: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
  fullName: System.Web.UI.WebControls.SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.PathDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PathDirection
  nameWithType: PathDirection
  fullName: System.Web.UI.WebControls.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
  fullName: System.Web.UI.WebControls.SiteMapPath.Provider
- uid: System.Web.SiteMapProvider
  parent: System.Web
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapProvider
  fullName: System.Web.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: SiteMapPath.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: SiteMapPath.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
  fullName: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
  fullName: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState()
  nameWithType: SiteMapPath.SaveViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.SaveViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
  fullName: System.Web.UI.WebControls.SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
  fullName: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
  fullName: System.Web.UI.WebControls.SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState()
  nameWithType: SiteMapPath.TrackViewState()
  fullName: System.Web.UI.WebControls.SiteMapPath.TrackViewState()
- uid: System.Web.UI.WebControls.SiteMapPath.#ctor*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapPath
  nameWithType: SiteMapPath.SiteMapPath
- uid: System.Web.UI.WebControls.SiteMapPath.CreateChildControls*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateChildControls
  nameWithType: SiteMapPath.CreateChildControls
- uid: System.Web.UI.WebControls.SiteMapPath.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: SiteMapPath.CreateControlHierarchy
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeStyle
  nameWithType: SiteMapPath.CurrentNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.CurrentNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: CurrentNodeTemplate
  nameWithType: SiteMapPath.CurrentNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.DataBind*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: DataBind
  nameWithType: SiteMapPath.DataBind
- uid: System.Web.UI.WebControls.SiteMapPath.InitializeItem*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: InitializeItem
  nameWithType: SiteMapPath.InitializeItem
- uid: System.Web.UI.WebControls.SiteMapPath.LoadViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: LoadViewState
  nameWithType: SiteMapPath.LoadViewState
- uid: System.Web.UI.WebControls.SiteMapPath.NodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeStyle
  nameWithType: SiteMapPath.NodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.NodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: NodeTemplate
  nameWithType: SiteMapPath.NodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.OnDataBinding*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnDataBinding
  nameWithType: SiteMapPath.OnDataBinding
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemCreated*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemCreated
  nameWithType: SiteMapPath.OnItemCreated
- uid: System.Web.UI.WebControls.SiteMapPath.OnItemDataBound*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: OnItemDataBound
  nameWithType: SiteMapPath.OnItemDataBound
- uid: System.Web.UI.WebControls.SiteMapPath.ParentLevelsDisplayed*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ParentLevelsDisplayed
  nameWithType: SiteMapPath.ParentLevelsDisplayed
- uid: System.Web.UI.WebControls.SiteMapPath.PathDirection*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathDirection
  nameWithType: SiteMapPath.PathDirection
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparator*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparator
  nameWithType: SiteMapPath.PathSeparator
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorStyle
  nameWithType: SiteMapPath.PathSeparatorStyle
- uid: System.Web.UI.WebControls.SiteMapPath.PathSeparatorTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: PathSeparatorTemplate
  nameWithType: SiteMapPath.PathSeparatorTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.Provider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Provider
  nameWithType: SiteMapPath.Provider
- uid: System.Web.UI.WebControls.SiteMapPath.Render*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: Render
  nameWithType: SiteMapPath.Render
- uid: System.Web.UI.WebControls.SiteMapPath.RenderContents*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderContents
  nameWithType: SiteMapPath.RenderContents
- uid: System.Web.UI.WebControls.SiteMapPath.RenderCurrentNodeAsLink*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RenderCurrentNodeAsLink
  nameWithType: SiteMapPath.RenderCurrentNodeAsLink
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeStyle*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeStyle
  nameWithType: SiteMapPath.RootNodeStyle
- uid: System.Web.UI.WebControls.SiteMapPath.RootNodeTemplate*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: RootNodeTemplate
  nameWithType: SiteMapPath.RootNodeTemplate
- uid: System.Web.UI.WebControls.SiteMapPath.SaveViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SaveViewState
  nameWithType: SiteMapPath.SaveViewState
- uid: System.Web.UI.WebControls.SiteMapPath.ShowToolTips*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: ShowToolTips
  nameWithType: SiteMapPath.ShowToolTips
- uid: System.Web.UI.WebControls.SiteMapPath.SiteMapProvider*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SiteMapProvider
  nameWithType: SiteMapPath.SiteMapProvider
- uid: System.Web.UI.WebControls.SiteMapPath.SkipLinkText*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: SkipLinkText
  nameWithType: SiteMapPath.SkipLinkText
- uid: System.Web.UI.WebControls.SiteMapPath.TrackViewState*
  parent: System.Web.UI.WebControls.SiteMapPath
  isExternal: false
  name: TrackViewState
  nameWithType: SiteMapPath.TrackViewState
