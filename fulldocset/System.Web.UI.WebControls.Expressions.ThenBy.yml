### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.ThenBy
  id: ThenBy
  children:
  - System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  - System.Web.UI.WebControls.Expressions.ThenBy.DataField
  - System.Web.UI.WebControls.Expressions.ThenBy.Direction
  langs:
  - csharp
  name: ThenBy
  nameWithType: ThenBy
  fullName: System.Web.UI.WebControls.Expressions.ThenBy
  type: Class
  summary: "並べ替え式を適用する方法を提供、<xref:System.Linq.IQueryable>データ ソース オブジェクトの後に、 <xref href=&quot;System.Web.UI.WebControls.Expressions.OrderByExpression&quot;> </xref>式が適用される</xref:System.Linq.IQueryable>。"
  remarks: "使用して操作を実行する、並べ替えの後、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>内の式、<xref:System.Web.UI.WebControls.QueryExtender>制御、後続の並べ替え操作は、別のデータ フィールドに ThenBy クラスを使用して実行することができます</xref:System.Web.UI.WebControls.QueryExtender></xref:System.Web.UI.WebControls.Expressions.OrderByExpression>。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the ProductID field in ascending order using the ThenBy type. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public class ThenBy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref>クラスです。"
  syntax:
    content: public ThenBy ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  id: DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得または設定のプロパティ、<xref:System.Linq.IQueryable>を適用するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref>する式</xref:System.Linq.IQueryable>。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>指定データ フィールドのデータを並べ替える</xref:System.Web.UI.WebControls.Expressions.OrderByExpression>。 使用して別のデータ フィールドに後続の並べ替え操作を実行できる、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>コレクションです</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A></xref:System.Web.UI.WebControls.Expressions.OrderByExpression>。 このプロパティを適用するデータ フィールドを指定します、`ThenBy`する操作を並べ替えます。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and then on the Product ID field in ascending order. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "プロパティ、<xref:System.Linq.IQueryable>を適用するオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.Expressions.ThenBy&quot;> </xref>する式</xref:System.Linq.IQueryable>。"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  id: Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  langs:
  - csharp
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "取得または設定の並べ替え方向、<xref:System.Linq.IQueryable>データ ソース オブジェクト</xref:System.Linq.IQueryable>。"
  remarks: "<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>で使用される、<xref:System.Web.UI.WebControls.QueryExtender>コントロールにデータを昇順または降順で並べ替えます</xref:System.Web.UI.WebControls.QueryExtender></xref:System.Web.UI.WebControls.Expressions.OrderByExpression>。 使用して、並べ替え操作の方向が指定されて、<xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>プロパティ</xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A>。"
  example:
  - "The following example shows how to sort data by the ListPrice field in descending order and on the ProductID field in ascending order by using the Direction property. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:OrderByExpression DataField=\"ListPrice\"   \n    Direction=\"Descending\">  \n  <asp:ThenBy DataField=\"ProductID\" Direction=\"Ascending\"/>  \n</asp:OrderByExpression>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.SortDirection Direction { get; set; }
    return:
      type: System.Web.UI.WebControls.SortDirection
      description: "並べ替え方向、<xref:System.Linq.IQueryable>データ ソース オブジェクト</xref:System.Linq.IQueryable>。"
  overload: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy()
  nameWithType: ThenBy.ThenBy()
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.ThenBy()
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
  fullName: System.Web.UI.WebControls.Expressions.ThenBy.Direction
- uid: System.Web.UI.WebControls.SortDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SortDirection
  nameWithType: SortDirection
  fullName: System.Web.UI.WebControls.SortDirection
- uid: System.Web.UI.WebControls.Expressions.ThenBy.#ctor*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: ThenBy
  nameWithType: ThenBy.ThenBy
- uid: System.Web.UI.WebControls.Expressions.ThenBy.DataField*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: DataField
  nameWithType: ThenBy.DataField
- uid: System.Web.UI.WebControls.Expressions.ThenBy.Direction*
  parent: System.Web.UI.WebControls.Expressions.ThenBy
  isExternal: false
  name: Direction
  nameWithType: ThenBy.Direction
