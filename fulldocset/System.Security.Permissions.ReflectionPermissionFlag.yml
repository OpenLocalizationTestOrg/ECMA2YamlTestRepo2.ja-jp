### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.ReflectionPermissionFlag
  id: ReflectionPermissionFlag
  children:
  - System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  - System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  - System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  - System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  - System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  langs:
  - csharp
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
  type: Enum
  summary: "使用できるを指定します、 <xref href=&quot;System.Reflection&quot;> </xref>と<xref href=&quot;System.Reflection.Emit&quot;></xref>名前空間。"
  remarks: "この列挙体を使って、<xref:System.Security.Permissions.ReflectionPermission>と<xref:System.Security.Permissions.ReflectionPermissionAttribute>クラス</xref:System.Security.Permissions.ReflectionPermissionAttribute></xref:System.Security.Permissions.ReflectionPermission>。 ない場合は<xref:System.Security.Permissions.ReflectionPermission>が付与されるすべての型とメンバーに対するリフレクションを使用できるが、参照できる型およびメンバーに対してのみ呼び出し操作を許可します</xref:System.Security.Permissions.ReflectionPermission>。 詳細については、次を参照してください。[リフレクションに関するセキュリティの考慮事項](~/add/includes/ajax-current-ext-md.md)です。      > [!CAUTION] > ため<xref:System.Security.Permissions.ReflectionPermission>アクセスを提供できますを付与することお勧めをプライベート クラス メンバーに<xref:System.Security.Permissions.ReflectionPermission>のみ RestrictedMemberAccess フラグとその他の任意のフラグではなく、インターネット コードにします</xref:System.Security.Permissions.ReflectionPermission></xref:System.Security.Permissions.ReflectionPermission>。       RestrictedMemberAccess フラグがで導入された、[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]です。 このフラグを使用するアプリケーションを対象する必要があります、[!INCLUDE[net_v35_long](~/add/includes/ajax-current-ext-md.md)]またはそれ以降。      > [!IMPORTANT] > AllFlags に RestrictedMemberAccess フラグが含まれていません。 この列挙体ですべてのフラグを含むマスクを取得するには、RestrictedMemberAccess を AllFlags の組み合わせを使用する必要があります。       以降で、 [!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]、ReflectionEmit フラグが不要になった、コードを出力する場合を除き、デバッグ シンボルが生成されます。 この機能を使用するアプリケーションを対象する必要があります、[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]またはそれ以降。       以降で、 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]、TypeInformation フラグが非パブリックの型とメンバーに反映させる必要はなくなりました。 フラグが残されています。"
  example:
  - "The following example shows how to use the ReflectionPermissionFlag enumeration to initialize a new instance of the <xref:System.Security.Permissions.ReflectionPermission> class that represents the right to perform restricted member access. This example is part of a larger example that is provided for the <xref:System.Security.Permissions.ReflectionPermission> class.  \n  \n For an example that shows how to use the RestrictedMemberAccess flag with Internet code, see [Walkthrough: Emitting Code in Partial Trust Scenarios](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/visualbasic/t-system.security.permis_18_1.vb)]\n [!code-cs[System.Security.Permissions.ReflectionPermission#8](~/add/codesnippet/csharp/t-system.security.permis_18_1.cs)]"
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ReflectionPermissionFlag
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  id: AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "<xref uid=&quot;langword_csharp_TypeInformation&quot; name=&quot;TypeInformation&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_MemberAccess&quot; name=&quot;MemberAccess&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_ReflectionEmit&quot; name=&quot;ReflectionEmit&quot; href=&quot;&quot;></xref> are set. AllFlags では、RestrictedMemberAccess は含まれません。"
  syntax:
    content: AllFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  id: MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "許可セットに関係なく、すべてのメンバーで呼び出す操作は許可します。 このフラグが設定されていない場合、呼び出し操作は、表示可能なメンバーでのみ許可されます。"
  syntax:
    content: MemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  id: NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "型およびメンバーの列挙が許可されます。 呼び出し操作は、参照できる型およびメンバーで許可されます。"
  syntax:
    content: NoFlags
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  id: ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "デバッグ シンボルの生成が許可されます。 以降で、 [!INCLUDE[net_v20sp1_long](~/add/includes/net-v20sp1-long-md.md)]、このフラグは、コードを出力する必要はなくなりました。"
  syntax:
    content: ReflectionEmit
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  id: RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "部分的に信頼されたコードに対して制限付きメンバー アクセスが提供します。 のみの許可セット、部分的に信頼できるコードが含まれますすべてのアクセス許可には、非パブリック型とアクセスされているメンバーを含むアセンブリの許可セットには部分的に信頼されたコードが非パブリックの型とメンバーにアクセスできます。 このフラグはの新機能、[!INCLUDE[net_v20SP1_short](~/add/includes/net-v20sp1-short-md.md)]です。"
  syntax:
    content: RestrictedMemberAccess
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  id: TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  langs:
  - csharp
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "このフラグは今後使用しません。 フラグの型とメンバーを列挙して、そのメタデータを確認する必要はありません。 NoFlags を使用してください。"
  syntax:
    content: TypeInformation
    return:
      type: System.Security.Permissions.ReflectionPermissionFlag
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: AllFlags
  nameWithType: ReflectionPermissionFlag.AllFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.AllFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag
  parent: System.Security.Permissions
  isExternal: false
  name: ReflectionPermissionFlag
  nameWithType: ReflectionPermissionFlag
  fullName: System.Security.Permissions.ReflectionPermissionFlag
- uid: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: MemberAccess
  nameWithType: ReflectionPermissionFlag.MemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.MemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: NoFlags
  nameWithType: ReflectionPermissionFlag.NoFlags
  fullName: System.Security.Permissions.ReflectionPermissionFlag.NoFlags
- uid: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: ReflectionEmit
  nameWithType: ReflectionPermissionFlag.ReflectionEmit
  fullName: System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit
- uid: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: RestrictedMemberAccess
  nameWithType: ReflectionPermissionFlag.RestrictedMemberAccess
  fullName: System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess
- uid: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
  parent: System.Security.Permissions.ReflectionPermissionFlag
  isExternal: false
  name: TypeInformation
  nameWithType: ReflectionPermissionFlag.TypeInformation
  fullName: System.Security.Permissions.ReflectionPermissionFlag.TypeInformation
