### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.FileDialogPermissionAttribute
  id: FileDialogPermissionAttribute
  children:
  - System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  - System.Security.Permissions.FileDialogPermissionAttribute.Open
  - System.Security.Permissions.FileDialogPermissionAttribute.Save
  langs:
  - csharp
  name: FileDialogPermissionAttribute
  nameWithType: FileDialogPermissionAttribute
  fullName: System.Security.Permissions.FileDialogPermissionAttribute
  type: Class
  summary: "により、セキュリティ アクションを<xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref>宣言セキュリティを使用してコードに適用します。 このクラスは継承できません。"
  remarks: "許可されている宣言のスコープによって異なります、<xref:System.Security.Permissions.SecurityAction>ために使用される</xref:System.Security.Permissions.SecurityAction>。       セキュリティ属性によって宣言されたセキュリティ情報は、属性の対象のメタデータに格納され、実行時に、システムによってアクセスされます。 セキュリティ属性は、宣言型セキュリティにのみ使用されます。 命令型のセキュリティのアクセス許可の対応するクラスを使用します。"
  example:
  - "The following code example demonstrates how to demand that the calling code have <xref:System.Security.Permissions.FileDialogPermission>. Demands are typically made in managed libraries (DLLs) to help protect methods or classes from potentially harmful code.  \n  \n [!code-cpp[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/cpp/t-system.security.permis_1_1.cpp)]\n [!code-cs[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/csharp/t-system.security.permis_1_1.cs)]\n [!code-vb[Classic FileDialogPermissionAttribute Example#2](~/add/codesnippet/visualbasic/t-system.security.permis_1_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class FileDialogPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: FileDialogPermissionAttribute(SecurityAction)
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.FileDialogPermissionAttribute&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>です。"
  syntax:
    content: public FileDialogPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>値。"
  overload: System.Security.Permissions.FileDialogPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: FileDialogPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成して、新しい返します<xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;></xref>です。"
  remarks: "このメソッドは、アプリケーション コードからではなく、セキュリティ システムによってのみ呼び出す必要があります。       コンパイル時に、属性は、セキュリティの宣言をメタデータのシリアル化された形式に変換されます。 メタデータの宣言セキュリティ データは、この属性に対応する権限をこのメソッドが返すから作成されます。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.FileDialogPermission&quot;> </xref>この属性に対応します。"
  overload: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open
  id: Open
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Open
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得またはファイル ダイアログ ボックスを使用してファイルを開くアクセス許可が宣言されているかどうかを示す値を設定します。"
  syntax:
    content: public bool Open { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル ダイアログ ボックスを使用してファイルを開くアクセス許可が宣言されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.FileDialogPermissionAttribute.Open*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save
  id: Save
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  langs:
  - csharp
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Save
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得またはファイル ダイアログ ボックスを使用してファイルを保存するアクセス許可が宣言されているかどうかを示す値を設定します。"
  syntax:
    content: public bool Save { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ファイル ダイアログ ボックスを使用してファイルを保存するアクセス許可が宣言されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Permissions.FileDialogPermissionAttribute.Save*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: FileDialogPermissionAttribute(SecurityAction)
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.FileDialogPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: FileDialogPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Open
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
  fullName: System.Security.Permissions.FileDialogPermissionAttribute.Save
- uid: System.Security.Permissions.FileDialogPermissionAttribute.#ctor*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: FileDialogPermissionAttribute
  nameWithType: FileDialogPermissionAttribute.FileDialogPermissionAttribute
- uid: System.Security.Permissions.FileDialogPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: FileDialogPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Open*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Open
  nameWithType: FileDialogPermissionAttribute.Open
- uid: System.Security.Permissions.FileDialogPermissionAttribute.Save*
  parent: System.Security.Permissions.FileDialogPermissionAttribute
  isExternal: false
  name: Save
  nameWithType: FileDialogPermissionAttribute.Save
