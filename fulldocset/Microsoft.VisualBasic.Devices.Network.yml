### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Network
  id: Network
  children:
  - Microsoft.VisualBasic.Devices.Network.#ctor
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.IsAvailable
  - Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  langs:
  - csharp
  name: Network
  nameWithType: Network
  fullName: Microsoft.VisualBasic.Devices.Network
  type: Class
  summary: "プロパティ、イベント、およびコンピューターが接続されているネットワークと対話するメソッドを提供します。"
  remarks: "次の表に、関連するタスクの例については、`My.Computer.Network`オブジェクト。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルをアップロード](~/add/includes/ajax-current-ext-md.md)|  |ファイルをダウンロードする |[する方法: ファイルをダウンロードする](~/add/includes/ajax-current-ext-md.md)|  |接続の状態を確認して |[する方法: 接続の状態の確認](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to http://www.cohowinery.com/uploads.  \n  \n [!code-vb[VbVbalrMyNetwork#6](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._22_1.vb)]"
  syntax:
    content: public class Network
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Network()
  nameWithType: Network.Network()
  fullName: Microsoft.VisualBasic.Devices.Network.Network()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.Devices.Network&quot;> </xref>クラスです。"
  syntax:
    content: public Network ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Network.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  id: DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String)
  nameWithType: Network.DownloadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 他のオーバー ロードのいずれかを使用することができます、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>、既存のファイルを上書きするように指定するメソッドが、ユーザー資格情報を提供または特定のタイムアウト値を指定します</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/f1ccbf1b-2381-4658-8df7-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/f1ccbf1b-2381-4658-8df7-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName);
    parameters:
    - id: address
      type: System.String
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  id: DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String)
  nameWithType: Network.DownloadFile(Uri,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 他のオーバー ロードのいずれかを使用することができます、 <xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>、既存のファイルを上書きするように指定するメソッドが、ユーザー資格情報を提供または特定のタイムアウト値を指定します</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>。 `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._82_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._82_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName);
    parameters:
    - id: address
      type: System.Uri
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  id: DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String)
  nameWithType: Network.DownloadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>メソッドを既存のファイルを上書きするか、特定のタイムアウト値を指定するように指定します</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/9d6caabe-e6c4-42e3-85a9-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/9d6caabe-e6c4-42e3-85a9-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.String
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  id: DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String)
  nameWithType: Network.DownloadFile(Uri,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "コピー先ファイルが既に存在する場合、`DownloadFile`メソッドでは、既存のファイルは上書きされません。 他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>メソッドを既存のファイルを上書きするか、特定のタイムアウト値を指定するように指定します</xref:Microsoft.VisualBasic.Devices.Network.DownloadFile%2A>。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/085dedee-b3d4-4610-bf4e-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/085dedee-b3d4-4610-bf4e-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password);
    parameters:
    - id: address
      type: System.Uri
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/7f63c943-2e81-43cf-8bbb-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/7f63c943-2e81-43cf-8bbb-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>or <xref:System.Uri>.</xref:System.Uri> ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. ファイル名と、ダウンロードしたファイルのパス。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>.</xref:System.Net.ICredentials> 指定する資格情報です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/f6f86817-a01c-4747-bacc-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/f6f86817-a01c-4747-bacc-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.String
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "<xref:System.Int32>.</xref:System.Int32> タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/fa4d33a3-46bb-42b7-9980-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/fa4d33a3-46bb-42b7-9980-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "指定する資格情報です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときの動作を指定**キャンセル**または**いいえ**の結果として表示されるダイアログ ボックスで`showUI`に設定<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/6c0b06cd-04ce-4a71-bd2c-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/6c0b06cd-04ce-4a71-bd2c-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite);
    parameters:
    - id: address
      type: System.Uri
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/e05b4e5f-fc7b-4386-90b2-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/e05b4e5f-fc7b-4386-90b2-_2.vb)]"
  syntax:
    content: public void DownloadFile (string address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.String
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときの動作を指定**キャンセル**または**いいえ**の結果として表示されるダイアログ ボックスで`ShowUI`に設定<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定されたリモート ファイルをダウンロードし、指定した場所に保存します。"
  remarks: "場合`showUI`に設定されている`True`、操作の進行状況が表示されるダイアログ ボックスが表示されます。 ダイアログ ボックスが含まれています、**キャンセル**操作をキャンセルするために使用するボタンをクリックします。 ダイアログ ボックスでは、モーダルではないと、プログラムでは、他のウィンドウにユーザー入力をブロックしません。       指定したサーバーが応答しない場合`connectionTimeout`操作が取り消され、例外がスローされます。       `DownloadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] >、`DownloadFile`メソッドは省略可能な HTTP ヘッダーを送信しません。 省略可能なユーザー エージェントのヘッダーが見つからない場合、一部のサーバーは 500 (内部サーバー エラー) を返す可能性があります。 省略可能なヘッダーを送信するには、<xref:System.Net.WebClient>クラス</xref:System.Net.WebClient>を使用して、要求を構築する必要があります。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.DownloadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをダウンロードする |[する方法: ファイルをダウンロードします。](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbalrMyNetwork#7](~/add/codesnippet/visualbasic/d9e4433f-9b36-4b25-afa9-_1.vb)]  \n  \n This example downloads the file `WineList.txt` from `http://www.cohowinery.com/downloads` and saves it to `C:\\Documents and Settings\\All Users\\Documents`, specifying a timeout interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#8](~/add/codesnippet/visualbasic/d9e4433f-9b36-4b25-afa9-_2.vb)]"
  syntax:
    content: public void DownloadFile (Uri address, string destinationFileName, string userName, string password, bool showUI, int connectionTimeout, bool overwrite, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: address
      type: System.Uri
      description: "ファイル名とホスト アドレスを含む、ダウンロードするファイルのパス。"
    - id: destinationFileName
      type: System.String
      description: "ファイル名と、ダウンロードしたファイルのパス。"
    - id: userName
      type: System.String
      description: "認証するユーザー名。 既定値は空の文字列&quot;&quot;です。"
    - id: password
      type: System.String
      description: "認証するパスワードです。 既定値は空の文字列&quot;&quot;です。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒)。 既定値は、100 秒です。"
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>既存のファイルを上書きするにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときの動作を指定**キャンセル**または**いいえ**の結果として表示されるダイアログ ボックスで`ShowUI`に設定<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName</code>末尾のスラッシュで終わっています。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>overwrite</code>設定されている<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>とコピー先ファイルが既に存在します。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  id: IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Microsoft.VisualBasic.Devices.Network.IsAvailable
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "コンピューターがネットワークに接続されているかどうかを示します。"
  remarks: "`IsAvailable`常に返します`False`から呼び出された場合、`Click Once`アプリケーションまたはユーザーが、 <xref:System.Net.NetworkInformation.NetworkInformationPermission>.</xref:System.Net.NetworkInformation.NetworkInformationPermission>を持たないかどうか       次の表に、関連するタスクの例については、`My.Computer.Network.IsAvailable`プロパティです。      |||  |-|-|  ||参照してください |  |コンピューターがネットワークに接続されているかどうかを確認して |[する方法: 接続の状態の確認](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example checks the property's status and reports it.  \n  \n [!code-vb[VbVbalrMyNetwork#1](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public bool IsAvailable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>コンピューターがネットワークに接続されている場合それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  id: NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  type: Event
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "ネットワークの可用性が変更されたときに発生します。"
  remarks: "アプリケーションは、`NetworkAvailabilityChanged`イベント、ネットワークの可用性が変更されるたびにします。 使用することができます、<xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>のプロパティ、`e`パラメーターをネットワーク接続の新しい状態を取得します</xref:Microsoft.VisualBasic.Devices.NetworkAvailableEventArgs.IsNetworkAvailable%2A>。 ネットワーク接続の現在の状態を取得する、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>プロパティ</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>。       Windows フォーム アプリケーションでこのイベントは、他のユーザー インターフェイスのイベントと、アプリケーションのメイン スレッドで発生します。 これにより、アプリケーションのユーザー インターフェイスに直接アクセスする、イベント ハンドラーです。 ただし場合、アプリケーションがこのイベントが発生したときに別のユーザー インターフェイス イベントを処理でビジー状態である場合、このイベントは処理できません、他のイベント ハンドラーが完了するかを呼び出すまで、<xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>メソッド</xref:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoEvents%2A>。       使用することはできません、`Handles`を処理するステートメント、`NetworkAvailabilityChanged`イベントです。 使用する必要があります、`AddHandler`ステートメントです。       Windows フォーム アプリケーションで、`MyApplication`オブジェクトの公開、`NetworkAvailabilityChanged`がこのイベントと同じ機能を提供するイベントが処理して、`Handles`ステートメントです。      > [!NOTE] > ハブがより大きなネットワークから切断されている場合でも、多くのネットワーク ハブは、ネットワーク接続を提供します。 その結果、ワイヤード (有線) 接続は、このイベントは、コンピューターとハブの間の接続の変更を示します。      > [!NOTE] >、 `NetworkAvailabilityChanged` Windows 95 および Windows 98 で実行されるアプリケーションや Windows 2000 で非管理者によって実行されるアプリケーションによって、イベントは発生しません。 場合は、アプリケーションがこれらのプラットフォームで実行されるを使用して、<xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>プロパティ</xref:Microsoft.VisualBasic.Devices.Network.IsAvailable%2A>。"
  example:
  - "This example uses the `My.Computer.Network.NetworkAvailabilityChanged` event to update the user interface of a form or control.  \n  \n This code should to be in a form or control that has a <xref:System.Windows.Forms.Label> named `Label1`.  \n  \n [!code-vb[VbVbalrMyApplication#50](~/add/codesnippet/visualbasic/VbVbalrMyApplication/Form1.vb#50)]"
  syntax:
    content: public event Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler NetworkAvailabilityChanged;
    return:
      type: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  id: Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したサーバーに ping を実行します。"
  remarks: "`Ping`メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートをオフにすることがありますまたは ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。       渡されるアドレス、`Ping`メソッドは、DNS で解決可能なをする必要があるあり、前に&quot;http://&quot;することはできません。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._175_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._175_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "URL、コンピューター名、またはサーバーの IP の数に ping を実行します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作が成功した場合それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ネットワーク接続がありません。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL が無効でした。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  id: Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したサーバーに ping を実行します。"
  remarks: "`Ping`メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートをオフにすることがありますまたは ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。       渡されるアドレス、`Ping`メソッドは、DNS で解決可能なをする必要があるあり、前に&quot;http://&quot;することはできません。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._188_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._188_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address);
    parameters:
    - id: address
      type: System.Uri
      description: "Ping を実行するサーバーの URI。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作が成功した場合それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ネットワーク接続がありません。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL が無効でした。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  id: Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(String,Int32)
  nameWithType: Network.Ping(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したサーバーに ping を実行します。"
  remarks: "`Ping`メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートをオフにすることがありますまたは ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。       渡されるアドレス、`Ping`メソッドは、DNS で解決可能なをする必要があるあり、前に&quot;http://&quot;することはできません。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._52_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._52_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (string hostNameOrAddress, int timeout);
    parameters:
    - id: hostNameOrAddress
      type: System.String
      description: "URL、コンピューター名、またはサーバーの IP の数に ping を実行します。"
    - id: timeout
      type: System.Int32
      description: "接続先のミリ秒単位で時間のしきい値。 既定値は 500 です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作が成功した場合それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ネットワーク接続がありません。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL が無効でした。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  id: Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: Ping(Uri,Int32)
  nameWithType: Network.Ping(Uri,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したサーバーに ping を実行します。"
  remarks: "`Ping`メソッドは、リモート コンピューターの可用性を決定するための緊急時のメソッドではありません。 ターゲット コンピューターに ping ポートをオフにすることがありますまたは ping 要求は、ファイアウォールまたはルーターによってブロックされる可能性があります。       渡されるアドレス、`Ping`メソッドは、DNS で解決可能なをする必要があるあり、前に&quot;http://&quot;することはできません。"
  example:
  - "This example reports whether or not the server can be pinged by determining whether the `Ping` method returns `True`.  \n  \n [!code-vb[VbVbalrMyNetwork#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._58_1.vb)]  \n  \n Replace `\"198.01.01.01\"` with the IP address, URL, or computer name of the server to ping.  \n  \n This example reports whether or not the server can be pinged by determining whether the `Ping` method returned `True` and specifies a timeout interval of 1000 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._58_2.vb)]  \n  \n Replace `\"www.cohowinery.com\"` with the IP address, URL, or computer name of the server to ping."
  syntax:
    content: public bool Ping (Uri address, int timeout);
    parameters:
    - id: address
      type: System.Uri
      description: "Ping を実行するサーバーの URI。"
    - id: timeout
      type: System.Int32
      description: "接続先のミリ秒単位で時間のしきい値。 既定値は 500 です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作が成功した場合それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.Ping*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ネットワーク接続がありません。"
  - type: System.Net.NetworkInformation.PingException
    commentId: T:System.Net.NetworkInformation.PingException
    description: "URL が無効でした。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  id: UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String)
  nameWithType: Network.UploadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>ユーザーの資格情報を指定するか、特定のタイムアウト値を指定するメソッド</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._92_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._92_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.String
      description: "URL、IP アドレス、または移行先サーバーの URI。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ソース ファイルのパスが正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  id: UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri)
  nameWithType: Network.UploadFile(String,Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>ユーザーの資格情報を指定するか、特定のタイムアウト値を指定するメソッド</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._95_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._95_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ソース ファイルのパスが正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  id: UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String)
  nameWithType: Network.UploadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>固有のタイムアウト値を指定します</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/6b9346bd-59ce-49fb-bbe5-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/6b9346bd-59ce-49fb-bbe5-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.String
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  id: UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String)
  nameWithType: Network.UploadFile(String,Uri,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "他のオーバー ロードのいずれかを使用することができます、<xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>固有のタイムアウト値を指定します</xref:Microsoft.VisualBasic.Devices.Network.UploadFile%2A>。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/85c93b22-8832-465c-bc80-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/85c93b22-8832-465c-bc80-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "既定のタイムアウト時間 (100 秒) 内のサーバーが応答しません。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/6315816e-6384-43bb-9cc9-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/6315816e-6384-43bb-9cc9-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "認証の資格情報。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/2326c347-44e4-4a02-8d87-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/2326c347-44e4-4a02-8d87-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.String
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/676d4550-c166-4d1c-9652-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/676d4550-c166-4d1c-9652-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, System.Net.ICredentials networkCredentials, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: networkCredentials
      type: System.Net.ICredentials
      description: "認証の資格情報。"
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときに実行するアクションを**キャンセル**です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/1d95509f-09cc-470c-a3ef-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/1d95509f-09cc-470c-a3ef-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: showUI
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>操作の進行状況を表示するにはそれ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/096bb453-b6ad-4bb4-84ca-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/096bb453-b6ad-4bb4-84ca-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, string address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.String
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: showUI
      type: System.Boolean
      description: "操作の進行状況を表示するかどうか。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときに実行するアクションを**キャンセル**です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  langs:
  - csharp
  name: UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "指定したホスト アドレスを指定したファイルを送信します。"
  remarks: "場合`showUI`に設定されている`True`、ダイアログ ボックスは、操作の進行状況が表示され、含まれています、**キャンセル**操作を取り消す、ユーザーがクリックしてボタンをクリックします。 ダイアログがモーダルではないため、プログラムでは、他のウィンドウにユーザー入力はブロックされません。       指定した間隔内で、サーバーが応答しない場合`connectionTimeout`操作は取り消され、例外がスローされます。       `My.Computer.Network.UploadFile`出力は、アプリケーションでネットワーク トレースを有効にすると、情報をトレースします。 詳細については、次を参照してください。[ネットワーク トレースを有効にすると](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > FTP プロトコルについては、プレーン テキストでパスワードを含むを送信し、機密情報を送信するのには使用できません。       次の表に、関連するタスクの例、`My.Computer.Network.UploadFile`メソッドです。      |||  |-|-|  ||参照してください |  |ファイルをアップロード |[する方法: ファイルのアップロード](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads`.  \n  \n [!code-vb[VbVbalrMyNetwork#2](~/add/codesnippet/visualbasic/f6ee17c1-4bbc-483b-bfa5-_1.vb)]  \n  \n This example uploads the file `Order.txt` to `http://www.cohowinery.com/uploads` without supplying a user name or password, shows the progress of the upload, and has a time-out interval of 500 milliseconds.  \n  \n [!code-vb[VbVbalrMyNetwork#3](~/add/codesnippet/visualbasic/f6ee17c1-4bbc-483b-bfa5-_2.vb)]"
  syntax:
    content: public void UploadFile (string sourceFileName, Uri address, string userName, string password, bool showUI, int connectionTimeout, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "パスと、アップロードするファイルの名前。"
    - id: address
      type: System.Uri
      description: "URL、IP アドレス、または移行先サーバーの URI。"
    - id: userName
      type: System.String
      description: '認証するユーザー名。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: password
      type: System.String
      description: '認証するパスワードです。 既定値は空の文字列:`&quot;&quot;`です。'
    - id: showUI
      type: System.Boolean
      description: "操作の進行状況を表示するかどうか。 既定値は<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
    - id: connectionTimeout
      type: System.Int32
      description: "タイムアウト間隔 (ミリ秒単位)。 既定値は、100 秒です。"
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "ユーザーがクリックしたときに実行するアクションを**キャンセル**です。 既定値は<xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Network.UploadFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connectionTimeout</code>0 に等しいまたはそれよりも未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>address</code> ファイル名は含まれません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、ネットワーク操作の実行に必要なアクセス許可が不足しています。"
  - type: System.TimeoutException
    commentId: T:System.TimeoutException
    description: "指定した、サーバーが応答しない<code> connectionTimeout</code>です。"
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "要求は、ターゲット web サーバーによって拒否されます。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.TimeoutException
  isExternal: true
  name: System.TimeoutException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.NetworkInformation.PingException
  parent: System.Net.NetworkInformation
  isExternal: false
  name: PingException
  nameWithType: PingException
  fullName: System.Net.NetworkInformation.PingException
- uid: Microsoft.VisualBasic.Devices.Network.#ctor
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network()
  nameWithType: Network.Network()
  fullName: Microsoft.VisualBasic.Devices.Network.Network()
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String)
  nameWithType: Network.DownloadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String)
  nameWithType: Network.DownloadFile(Uri,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String)
  nameWithType: Network.DownloadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String)
  nameWithType: Network.DownloadFile(Uri,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean)
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.Net.ICredentials,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,ICredentials,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(String,String,String,String,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile(System.Uri,System.String,System.String,System.String,System.Boolean,System.Int32,System.Boolean,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  nameWithType: Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.DownloadFile(Uri,String,String,String,Boolean,Int32,Boolean,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
  fullName: Microsoft.VisualBasic.Devices.Network.IsAvailable
- uid: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: NetworkAvailabilityChanged
  nameWithType: Network.NetworkAvailabilityChanged
  fullName: Microsoft.VisualBasic.Devices.Network.NetworkAvailabilityChanged
- uid: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
  parent: Microsoft.VisualBasic.Devices
  isExternal: false
  name: NetworkAvailableEventHandler
  nameWithType: NetworkAvailableEventHandler
  fullName: Microsoft.VisualBasic.Devices.NetworkAvailableEventHandler
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String)
  nameWithType: Network.Ping(String)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri)
  nameWithType: Network.Ping(Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.String,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(String,Int32)
  nameWithType: Network.Ping(String,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(String,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.Ping(System.Uri,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping(Uri,Int32)
  nameWithType: Network.Ping(Uri,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.Ping(Uri,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String)
  nameWithType: Network.UploadFile(String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri)
  nameWithType: Network.UploadFile(String,Uri)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String)
  nameWithType: Network.UploadFile(String,String,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String)
  nameWithType: Network.UploadFile(String,Uri,String,String)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.Net.ICredentials,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,ICredentials,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String,Boolean,Int32)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.String,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,String,String,String,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile(System.String,System.Uri,System.String,System.String,System.Boolean,System.Int32,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  nameWithType: Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
  fullName: Microsoft.VisualBasic.Devices.Network.UploadFile(String,Uri,String,String,Boolean,Int32,UICancelOption)
- uid: Microsoft.VisualBasic.Devices.Network.#ctor*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Network
  nameWithType: Network.Network
- uid: Microsoft.VisualBasic.Devices.Network.DownloadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: DownloadFile
  nameWithType: Network.DownloadFile
- uid: Microsoft.VisualBasic.Devices.Network.IsAvailable*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: IsAvailable
  nameWithType: Network.IsAvailable
- uid: Microsoft.VisualBasic.Devices.Network.Ping*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: Ping
  nameWithType: Network.Ping
- uid: Microsoft.VisualBasic.Devices.Network.UploadFile*
  parent: Microsoft.VisualBasic.Devices.Network
  isExternal: false
  name: UploadFile
  nameWithType: Network.UploadFile
