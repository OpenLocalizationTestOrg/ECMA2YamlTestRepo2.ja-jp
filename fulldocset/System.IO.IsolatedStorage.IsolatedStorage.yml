### YamlMime:ManagedReference
items:
- uid: System.IO.IsolatedStorage.IsolatedStorage
  id: IsolatedStorage
  children:
  - System.IO.IsolatedStorage.IsolatedStorage.#ctor
  - System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace
  - System.IO.IsolatedStorage.IsolatedStorage.CurrentSize
  - System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
  - System.IO.IsolatedStorage.IsolatedStorage.GetPermission(System.Security.PermissionSet)
  - System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo(System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  - System.IO.IsolatedStorage.IsolatedStorage.MaximumSize
  - System.IO.IsolatedStorage.IsolatedStorage.Quota
  - System.IO.IsolatedStorage.IsolatedStorage.Remove
  - System.IO.IsolatedStorage.IsolatedStorage.Scope
  - System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
  - System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
  - System.IO.IsolatedStorage.IsolatedStorage.UsedSize
  langs:
  - csharp
  name: IsolatedStorage
  nameWithType: IsolatedStorage
  fullName: System.IO.IsolatedStorage.IsolatedStorage
  type: Class
  summary: "すべての分離ストレージの実装の派生元となる抽象基本クラスを表します。"
  remarks: "分離ストレージのファイル ベースの概要については、<xref:System.IO.IsolatedStorage.IsolatedStorageFile>クラス</xref:System.IO.IsolatedStorage.IsolatedStorageFile>を参照してください。      > [!IMPORTANT] > 分離ストレージでは使用できません[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリ。 代わりに、アプリケーション データ クラスを使用して、`Windows.Storage`に含まれる名前空間、 [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API ローカル データとファイルを保存します。 詳細については、次を参照してください。[アプリケーション データ](http://go.microsoft.com/fwlink/?LinkId=229175)、Windows デベロッパー センターにします。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class IsolatedStorage : MarshalByRefObject
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.#ctor
  id: '#ctor'
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: IsolatedStorage()
  nameWithType: IsolatedStorage.IsolatedStorage()
  fullName: System.IO.IsolatedStorage.IsolatedStorage.IsolatedStorage()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>クラスです。"
  syntax:
    content: protected IsolatedStorage ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
  id: ApplicationIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: ApplicationIdentity
  nameWithType: IsolatedStorage.ApplicationIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "分離ストレージのスコープをそのアプリケーションの id を取得します。"
  remarks: "アプリケーションの定義には、アプリケーションに関連付けられているすべてのアセンブリが含まれているために、アプリケーションに関連付けられているアセンブリだけが分離ストレージにアクセスできるようにするのにこの種類の id を使用できます。"
  syntax:
    content: public object ApplicationIdentity { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>を表す、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;> </xref> identity</xref:System.Object> 。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "コードが、必要ない<xref href=&quot;System.Security.Permissions.SecurityPermission&quot;></xref>このオブジェクトにアクセスします。 セキュリティ ポリシーに基づいて、ランタイムによって、これらのアクセス許可が付与されます。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>オブジェクトは、アプリケーション別に分離されたいない<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
  id: AssemblyIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: AssemblyIdentity
  nameWithType: IsolatedStorage.AssemblyIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "分離ストレージのスコープに使用するアセンブリ id を取得します。"
  syntax:
    content: public object AssemblyIdentity { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>を表す、 <xref:System.Reflection.Assembly>identity</xref:System.Reflection.Assembly> </xref:System.Object> 。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "コードが、必要ない<xref href=&quot;System.Security.Permissions.SecurityPermission&quot;></xref>このオブジェクトにアクセスします。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "アセンブリが定義されていません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: IsolatedStorage.AvailableFreeSpace
  fullName: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスでオーバーライドされると、(バイト単位) の分離ストレージの使用可能な空き領域を取得します。"
  remarks: "<xref:System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace%2A?displayProperty=fullName>プロパティは、このプロパティをオーバーライドします</xref:System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: "(バイト単位) の分離ストレージの使用可能な空き領域。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このストアのプロパティが定義されていませんが、AvailableFreeSpace へのアクセスを必要とする操作を実行されました。 列挙体を使用して取得するストアは、部分的な証拠を使用して、ストアを開くため、適切に定義された AvailableFreeSpace プロパティがありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize
  id: CurrentSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: CurrentSize
  nameWithType: IsolatedStorage.CurrentSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "分離ストレージの現在のサイズを表す値を取得します。"
  remarks: "このプロパティは、分離ストレージのスコープ内のすべての記憶域リソースの使用率の合計を表します。 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize%2A?displayProperty=fullName>このプロパティを実装します。</xref:System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize%2A?displayProperty=fullName> 場合に<xref:System.IO.IsolatedStorage.IsolatedStorageFile>オブジェクトをこの値は、(バイト単位)</xref:System.IO.IsolatedStorage.IsolatedStorageFile> 。 場合は、データベースなど他の記憶域オブジェクトの実装は、この値は記憶域の他の単位でする可能性があります。"
  syntax:
    content: public virtual ulong CurrentSize { get; }
    return:
      type: System.UInt64
      description: "分離ストレージのスコープ内で使用される現在の記憶域ユニットの数。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "分離ストアの現在のサイズが定義されていません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
  id: DomainIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: DomainIdentity
  nameWithType: IsolatedStorage.DomainIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "分離ストレージのスコープをそのドメインの id を取得します。"
  syntax:
    content: public object DomainIdentity { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>を表す、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;> </xref> identity</xref:System.Object> 。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "コードが、必要ない<xref href=&quot;System.Security.Permissions.SecurityPermission&quot;></xref>このオブジェクトにアクセスします。 セキュリティ ポリシーに基づいて、ランタイムによって、これらのアクセス許可が付与されます。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>ドメイン別にオブジェクトが分離されたいない<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.GetPermission(System.Security.PermissionSet)
  id: GetPermission(System.Security.PermissionSet)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: GetPermission(PermissionSet)
  nameWithType: IsolatedStorage.GetPermission(PermissionSet)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.GetPermission(PermissionSet)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスで実装された場合、権限からアクセス許可セット内での分離ストレージへのアクセスを表すを返します。"
  remarks: "派生クラスをどのようなアクセス許可の種類を制御の使用を特定し、与えられている型のアクセス許可を返すには、このメソッドを呼び出します。 この情報を使用して、許可されているクォータとその他の派生クラスに固有の分離ストレージの設定を確認します。"
  syntax:
    content: protected abstract System.Security.Permissions.IsolatedStoragePermission GetPermission (System.Security.PermissionSet ps);
    parameters:
    - id: ps
      type: System.Security.PermissionSet
      description: "<xref href=&quot;System.Security.PermissionSet&quot;> </xref>分離ストレージを使用しようとしています。 コードに付与された権限のセットを含むオブジェクト。"
    return:
      type: System.Security.Permissions.IsolatedStoragePermission
      description: "<xref href=&quot;System.Security.Permissions.IsolatedStoragePermission&quot;> </xref>オブジェクト。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.GetPermission*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo(System.Int64)
  id: IncreaseQuotaTo(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: IncreaseQuotaTo(Int64)
  nameWithType: IsolatedStorage.IncreaseQuotaTo(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスでオーバーライドされると、分離ストレージのバイト単位より大きなクォータ サイズを承認するユーザーに要求します。"
  remarks: "<xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=fullName>メソッドは、このメソッドをオーバーライドします</xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual bool IncreaseQuotaTo (long newQuotaSize);
    parameters:
    - id: newQuotaSize
      type: System.Int64
      description: "要求された新しいクォータ サイズ (バイト単位) を承認するユーザー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  id: InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: InitStore(IsolatedStorageScope,Type)
  nameWithType: IsolatedStorage.InitStore(IsolatedStorageScope,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.InitStore(IsolatedStorageScope,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しい初期化<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;></xref>オブジェクト。"
  remarks: "派生クラスでは、このメソッドを使用して、新しいオブジェクトを初期化します。"
  syntax:
    content: protected void InitStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type appEvidenceType);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;> </xref>値。"
    - id: appEvidenceType
      type: System.Type
      description: "型<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>の一覧から選択できる<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>呼び出し元のアプリケーションにします。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>により、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>オブジェクトは、証拠を選択します。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.InitStore*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "指定されたアセンブリでは、分離ストアを作成する十分なアクセス許可を持ちます。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  id: InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: InitStore(IsolatedStorageScope,Type,Type)
  nameWithType: IsolatedStorage.InitStore(IsolatedStorageScope,Type,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.InitStore(IsolatedStorageScope,Type,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しい初期化<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;></xref>オブジェクト。"
  remarks: "派生クラスでは、このメソッドを使用して、新しいオブジェクトを初期化します。"
  syntax:
    content: protected void InitStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type domainEvidenceType, Type assemblyEvidenceType);
    parameters:
    - id: scope
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;> </xref>値。"
    - id: domainEvidenceType
      type: System.Type
      description: "型<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>の一覧から選択できる<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>の呼び出し元のアプリケーション ドメイン内に存在します。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>により、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>オブジェクトは、証拠を選択します。"
    - id: assemblyEvidenceType
      type: System.Type
      description: "型<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>の一覧から選択できる<xref href=&quot;System.Security.Policy.Evidence&quot;></xref>呼び出し元のアプリケーションのアセンブリ内に存在します。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>により、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorage&quot;> </xref>オブジェクトは、証拠を選択します。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.InitStore*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "指定されたアセンブリでは、分離ストアを作成する十分なアクセス許可を持ちます。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize
  id: MaximumSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: MaximumSize
  nameWithType: IsolatedStorage.MaximumSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "分離ストレージの使用可能な領域の最大量を表す値を取得します。 派生クラスでオーバーライドされると、この値は、さまざまな測定単位を実行できます。"
  remarks: "MaximumSize プロパティの既定の実装がの値を返します<xref:System.Security.Permissions.IsolatedStoragePermission.UserQuota%2A?displayProperty=fullName>、これはバイトで表現されます</xref:System.Security.Permissions.IsolatedStoragePermission.UserQuota%2A?displayProperty=fullName>。 派生クラスでは、他のメジャーの単位の値を表すことができます。 このような実装の潜在的な例は、分離ストレージ データベースです。       MaximumSize を設定することはできませんが、クォータが、セキュリティ ポリシーで構成され、設定することができます。 異なる証拠を使用して実行される場合に、同じコードが異なるクォータを受信できるように、コードは、証拠に基づいて領域のクォータを受け取る (たとえば、ローカルと共有からイントラネット上で実行する同じアプリケーションできます受信の異なるクォータ)。 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize%2A?displayProperty=fullName>このプロパティを実装します。</xref:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize%2A?displayProperty=fullName>"
  syntax:
    content: public virtual ulong MaximumSize { get; }
    return:
      type: System.UInt64
      description: "分離ストレージの領域 (バイト単位) の最大量。 派生クラスでは、さまざまな単位で値を返すことができます。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "クォータが定義されていません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.Quota
  id: Quota
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: Quota
  nameWithType: IsolatedStorage.Quota
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Quota
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスでオーバーライドされると、分離ストレージの使用可能な領域の最大量を表す値を取得します。"
  remarks: "<xref:System.IO.IsolatedStorage.IsolatedStorageFile.Quota%2A?displayProperty=fullName>プロパティは、このプロパティをオーバーライドします</xref:System.IO.IsolatedStorage.IsolatedStorageFile.Quota%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual long Quota { get; }
    return:
      type: System.Int64
      description: "(バイト単位) の分離ストレージ領域の制限。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.Quota*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このストアのプロパティが定義されていませんが、クォータへのアクセスを必要とする操作を実行されました。 列挙体を使用して取得するストアは、部分的な証拠を使用して、ストアを開くため、適切に定義されたクォータ プロパティがありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.Remove
  id: Remove
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: Remove()
  nameWithType: IsolatedStorage.Remove()
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Remove()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスでオーバーライドされると、個々 の分離ストアとに含まれるすべてのデータを削除します。"
  remarks: "<xref:System.IO.IsolatedStorage.IsolatedStorageFile.Remove%2A?displayProperty=fullName>このメソッドを実装します。</xref:System.IO.IsolatedStorage.IsolatedStorageFile.Remove%2A?displayProperty=fullName>"
  syntax:
    content: public abstract void Remove ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorage.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.Scope
  id: Scope
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: Scope
  nameWithType: IsolatedStorage.Scope
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Scope
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "取得、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;> </xref>ストアを分離するために使用するスコープを指定する列挙値。"
  remarks: "ストアは、要因 (ユーザー、アセンブリ、ドメイン、およびなど) の組み合わせによって分離されます。"
  syntax:
    content: public System.IO.IsolatedStorage.IsolatedStorageScope Scope { get; }
    return:
      type: System.IO.IsolatedStorage.IsolatedStorageScope
      description: "ビットごとの組み合わせ<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageScope&quot;></xref>ストアを分離するために使用するスコープを指定する値。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
  id: SeparatorExternal
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: SeparatorExternal
  nameWithType: IsolatedStorage.SeparatorExternal
  fullName: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "ディレクトリの文字列で使用できるバック スラッシュ文字を取得します。 派生クラスでオーバーライドされると、別の文字が返される可能性があります。"
  remarks: "このプロパティを使用して、ディレクトリの文字列で使用されている文字を取得できます。"
  syntax:
    content: protected virtual char SeparatorExternal { get; }
    return:
      type: System.Char
      description: "既定の実装を返します、&quot;\\&quot; (バック スラッシュ) 文字です。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
  id: SeparatorInternal
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: SeparatorInternal
  nameWithType: IsolatedStorage.SeparatorInternal
  fullName: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "ディレクトリの文字列で使用できるピリオド文字を取得します。 派生クラスでオーバーライドされると、別の文字が返される可能性があります。"
  remarks: "このプロパティを使用して、ディレクトリの文字列で使用されている文字を取得できます。"
  syntax:
    content: protected virtual char SeparatorInternal { get; }
    return:
      type: System.Char
      description: "既定の実装を返します、&quot;.&quot;(ピリオド) 文字です。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorage.UsedSize
  id: UsedSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  langs:
  - csharp
  name: UsedSize
  nameWithType: IsolatedStorage.UsedSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.UsedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "派生クラスでオーバーライドされると、分離ストレージに使用される領域の量を表す値を取得します。"
  remarks: "<xref:System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize%2A?displayProperty=fullName>プロパティは、このプロパティをオーバーライドします</xref:System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize%2A?displayProperty=fullName>。"
  syntax:
    content: public virtual long UsedSize { get; }
    return:
      type: System.Int64
      description: "(バイト単位) の分離ストレージ領域の使用量。"
  overload: System.IO.IsolatedStorage.IsolatedStorage.UsedSize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このストアのプロパティが定義されていませんが、UsedSize へのアクセスを必要とする操作を実行されました。 列挙体を使用して取得するストアは、部分的な証拠を使用して、ストアを開くため、適切に定義された UsedSize プロパティがありません。"
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageException
  nameWithType: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.IO.IsolatedStorage.IsolatedStorage.#ctor
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: IsolatedStorage()
  nameWithType: IsolatedStorage.IsolatedStorage()
  fullName: System.IO.IsolatedStorage.IsolatedStorage.IsolatedStorage()
- uid: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: ApplicationIdentity
  nameWithType: IsolatedStorage.ApplicationIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: AssemblyIdentity
  nameWithType: IsolatedStorage.AssemblyIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity
- uid: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: IsolatedStorage.AvailableFreeSpace
  fullName: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: CurrentSize
  nameWithType: IsolatedStorage.CurrentSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: DomainIdentity
  nameWithType: IsolatedStorage.DomainIdentity
  fullName: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity
- uid: System.IO.IsolatedStorage.IsolatedStorage.GetPermission(System.Security.PermissionSet)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: GetPermission(PermissionSet)
  nameWithType: IsolatedStorage.GetPermission(PermissionSet)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.GetPermission(PermissionSet)
- uid: System.Security.Permissions.IsolatedStoragePermission
  parent: System.Security.Permissions
  isExternal: false
  name: IsolatedStoragePermission
  nameWithType: IsolatedStoragePermission
  fullName: System.Security.Permissions.IsolatedStoragePermission
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: IncreaseQuotaTo(Int64)
  nameWithType: IsolatedStorage.IncreaseQuotaTo(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo(Int64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: InitStore(IsolatedStorageScope,Type)
  nameWithType: IsolatedStorage.InitStore(IsolatedStorageScope,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.InitStore(IsolatedStorageScope,Type)
- uid: System.IO.IsolatedStorage.IsolatedStorageScope
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageScope
  nameWithType: IsolatedStorageScope
  fullName: System.IO.IsolatedStorage.IsolatedStorageScope
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.IsolatedStorage.IsolatedStorage.InitStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: InitStore(IsolatedStorageScope,Type,Type)
  nameWithType: IsolatedStorage.InitStore(IsolatedStorageScope,Type,Type)
  fullName: System.IO.IsolatedStorage.IsolatedStorage.InitStore(IsolatedStorageScope,Type,Type)
- uid: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: MaximumSize
  nameWithType: IsolatedStorage.MaximumSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize
- uid: System.IO.IsolatedStorage.IsolatedStorage.Quota
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Quota
  nameWithType: IsolatedStorage.Quota
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Quota
- uid: System.IO.IsolatedStorage.IsolatedStorage.Remove
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Remove()
  nameWithType: IsolatedStorage.Remove()
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Remove()
- uid: System.IO.IsolatedStorage.IsolatedStorage.Scope
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Scope
  nameWithType: IsolatedStorage.Scope
  fullName: System.IO.IsolatedStorage.IsolatedStorage.Scope
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: SeparatorExternal
  nameWithType: IsolatedStorage.SeparatorExternal
  fullName: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: SeparatorInternal
  nameWithType: IsolatedStorage.SeparatorInternal
  fullName: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal
- uid: System.IO.IsolatedStorage.IsolatedStorage.UsedSize
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: UsedSize
  nameWithType: IsolatedStorage.UsedSize
  fullName: System.IO.IsolatedStorage.IsolatedStorage.UsedSize
- uid: System.IO.IsolatedStorage.IsolatedStorage.#ctor*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: IsolatedStorage
  nameWithType: IsolatedStorage.IsolatedStorage
- uid: System.IO.IsolatedStorage.IsolatedStorage.ApplicationIdentity*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: ApplicationIdentity
  nameWithType: IsolatedStorage.ApplicationIdentity
- uid: System.IO.IsolatedStorage.IsolatedStorage.AssemblyIdentity*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: AssemblyIdentity
  nameWithType: IsolatedStorage.AssemblyIdentity
- uid: System.IO.IsolatedStorage.IsolatedStorage.AvailableFreeSpace*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: IsolatedStorage.AvailableFreeSpace
- uid: System.IO.IsolatedStorage.IsolatedStorage.CurrentSize*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: CurrentSize
  nameWithType: IsolatedStorage.CurrentSize
- uid: System.IO.IsolatedStorage.IsolatedStorage.DomainIdentity*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: DomainIdentity
  nameWithType: IsolatedStorage.DomainIdentity
- uid: System.IO.IsolatedStorage.IsolatedStorage.GetPermission*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: GetPermission
  nameWithType: IsolatedStorage.GetPermission
- uid: System.IO.IsolatedStorage.IsolatedStorage.IncreaseQuotaTo*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: IncreaseQuotaTo
  nameWithType: IsolatedStorage.IncreaseQuotaTo
- uid: System.IO.IsolatedStorage.IsolatedStorage.InitStore*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: InitStore
  nameWithType: IsolatedStorage.InitStore
- uid: System.IO.IsolatedStorage.IsolatedStorage.MaximumSize*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: MaximumSize
  nameWithType: IsolatedStorage.MaximumSize
- uid: System.IO.IsolatedStorage.IsolatedStorage.Quota*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Quota
  nameWithType: IsolatedStorage.Quota
- uid: System.IO.IsolatedStorage.IsolatedStorage.Remove*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Remove
  nameWithType: IsolatedStorage.Remove
- uid: System.IO.IsolatedStorage.IsolatedStorage.Scope*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: Scope
  nameWithType: IsolatedStorage.Scope
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorExternal*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: SeparatorExternal
  nameWithType: IsolatedStorage.SeparatorExternal
- uid: System.IO.IsolatedStorage.IsolatedStorage.SeparatorInternal*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: SeparatorInternal
  nameWithType: IsolatedStorage.SeparatorInternal
- uid: System.IO.IsolatedStorage.IsolatedStorage.UsedSize*
  parent: System.IO.IsolatedStorage.IsolatedStorage
  isExternal: false
  name: UsedSize
  nameWithType: IsolatedStorage.UsedSize
