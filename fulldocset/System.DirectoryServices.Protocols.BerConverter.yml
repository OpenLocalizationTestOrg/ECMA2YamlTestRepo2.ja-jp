### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.Protocols.BerConverter
  id: BerConverter
  children:
  - System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  - System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  langs:
  - csharp
  name: BerConverter
  nameWithType: BerConverter
  fullName: System.DirectoryServices.Protocols.BerConverter
  type: Class
  summary: "BerConverter クラスは、エンコードし、基本的なエンコード規則 (BER) を使用して構造化データをデコードします。"
  syntax:
    content: public sealed class BerConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  id: Decode(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.BerConverter
  langs:
  - csharp
  name: Decode(String,Byte[])
  nameWithType: BerConverter.Decode(String,Byte[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "デコード メソッドは、構造化データを取得する BER を使用して、データのバイナリ表現をデコードします。"
  syntax:
    content: public static object[] Decode (string format, byte[] value);
    parameters:
    - id: format
      type: System.String
      description: "書式指定文字列。"
    - id: value
      type: System.Byte[]
      description: "BER データの配列。"
    return:
      type: System.Object[]
      description: "デコードされたデータ。"
  overload: System.DirectoryServices.Protocols.BerConverter.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> format </code>パラメーターに null 参照が含まれています (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> format </code>パラメーターには、未定義の文字が含まれています。"
  - type: System.DirectoryServices.Protocols.BerConversionException
    commentId: T:System.DirectoryServices.Protocols.BerConversionException
    description: "基になる、デコード失敗します。 デコードの規則を以下にします。       <table><thead><tr><th> コード       </th><th> 対応する結果       </th></tr></thead><tbody><tr><td> &quot;{&quot; &quot;}&quot; &quot;[&quot; &quot;]&quot; &quot;n&quot; &quot;x&quot;       </td><td> 対応する結果がありません。       </td></tr><tr><td> &quot;i&quot;&quot;e&quot;       </td><td> int       </td></tr><tr><td> &quot; b&quot;       </td><td> ブール       </td></tr><tr><td> &quot; a&quot;       </td><td> string       </td></tr><tr><td> &quot; O &quot;       </td><td> byte[]       </td></tr><tr><td> &quot; B&quot;       </td><td> ビット文字列を含む byte[]       </td></tr><tr><td> &quot;v&quot;       </td><td> 文字列       </td></tr><tr><td> &quot;V&quot;       </td><td> byte[]       </td></tr></tbody></table>"
  platform:
  - net462
- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  id: Encode(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.BerConverter
  langs:
  - csharp
  name: Encode(String,Object[])
  nameWithType: BerConverter.Encode(String,Object[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])
  type: Method
  assemblies:
  - System.DirectoryServices.Protocols
  namespace: System.DirectoryServices.Protocols
  summary: "エンコード メソッドは、データのバイナリ表現を取得する BER を使用して、構造化データをエンコードします。"
  remarks: "有効な形式の文字を次に示します。       ルールのエンコード: |コード |対応する引数 |  |----------|----------------------------|  |&quot;{&quot; &quot;}&quot; &quot;[&quot; &quot;]&quot; &quot;n&quot;|対応する引数なし |  |&quot;t&quot; &quot;i&quot; &quot;e&quot; | int |  |&quot;&quot; |オクテット文字列 |  |&quot;b&quot;| bool |  |&quot;s&quot;| 文字列 |  |&quot;&quot;X&quot; o &quot; | byte[] |  |&quot;v&quot;| string[] |  |&quot;V&quot;| byte[] |     > [!NOTE] >&quot;v&quot;および&quot;V&quot;は特殊な二重の {} が必要です。 たとえば、{{v}} を使用して、{{V}}。      ## 例外 |例外 |条件 |  |---------------|---------------|  |ArgumentNullException |`format` null 参照 (`Nothing` Visual Basic で). |  |ArgumentException |この例外は、次の条件のいずれかで発生します。<br /><br /> -引数が不足して、書式指定文字列にします。<br />-形式の文字列の引数が正しくありません。<br />書式指定文字列には、未定義の文字が含まれています |。  |BerConversionException |戻り値の処理中にエラー |。"
  syntax:
    content: public static byte[] Encode (string format, object[] value);
    parameters:
    - id: format
      type: System.String
      description: "書式指定文字列。"
    - id: value
      type: System.Object[]
      description: "書式付きデータの配列。"
    return:
      type: System.Byte[]
      description: "BER でエンコードされたデータの配列。"
  overload: System.DirectoryServices.Protocols.BerConverter.Encode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DirectoryServices.Protocols.BerConversionException
  parent: System.DirectoryServices.Protocols
  isExternal: false
  name: BerConversionException
  nameWithType: BerConversionException
  fullName: System.DirectoryServices.Protocols.BerConversionException
- uid: System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Decode(String,Byte[])
  nameWithType: BerConverter.Decode(String,Byte[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Decode(String,Byte[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Encode(String,Object[])
  nameWithType: BerConverter.Encode(String,Object[])
  fullName: System.DirectoryServices.Protocols.BerConverter.Encode(String,Object[])
- uid: System.DirectoryServices.Protocols.BerConverter.Decode*
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Decode
  nameWithType: BerConverter.Decode
- uid: System.DirectoryServices.Protocols.BerConverter.Encode*
  parent: System.DirectoryServices.Protocols.BerConverter
  isExternal: false
  name: Encode
  nameWithType: BerConverter.Encode
