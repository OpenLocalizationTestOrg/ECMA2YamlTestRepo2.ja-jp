### YamlMime:ManagedReference
items:
- uid: System.Data.IDbDataAdapter
  id: IDbDataAdapter
  children:
  - System.Data.IDbDataAdapter.DeleteCommand
  - System.Data.IDbDataAdapter.InsertCommand
  - System.Data.IDbDataAdapter.SelectCommand
  - System.Data.IDbDataAdapter.UpdateCommand
  langs:
  - csharp
  name: IDbDataAdapter
  nameWithType: IDbDataAdapter
  fullName: System.Data.IDbDataAdapter
  type: Interface
  summary: "一連の入力に使用されるコマンドに関連するプロパティを表す、 <xref href=&quot;System.Data.DataSet&quot;> </xref>リレーショナル データベースにアクセスする .NET Framework データ プロバイダーによって実装され、データ ソースを更新します。"
  remarks: "The IDbDataAdapter interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database. The IDbDataAdapter interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>. For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/add/includes/ajax-current-ext-md.md). For more information about implementing .NET Framework data providers, see [&#91;\\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/en-us/a9fa1926-071b-4c6f-997d-a16bac633852).  \n  \n An application does not create an instance of the IDbDataAdapter interface directly, but creates an instance of a class that inherits IDbDataAdapter and <xref:System.Data.Common.DbDataAdapter>.  \n  \n Classes that inherit IDbDataAdapter must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the IDbDataAdapter interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter. In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter."
  example:
  - "The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.idbdataada_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.idbdataada_1.cs)]"
  syntax:
    content: 'public interface IDbDataAdapter : System.Data.IDataAdapter'
  implements:
  - System.Data.IDataAdapter
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得またはデータ セットからレコードを削除する SQL ステートメントを設定します。"
  remarks: "中に<xref:System.Data.Common.DbDataAdapter.Update%2A>、このプロパティを設定しないと、主キー情報が内に存在する場合、<xref:System.Data.DataSet>を設定する場合に、DeleteCommand を自動的に生成することができます、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ</xref:System.Data.DataSet></xref:System.Data.Common.DbDataAdapter.Update%2A>。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックには、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列情報が必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。       DeleteCommand が割り当てられている場合、以前に作成する<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません</xref:System.Data.IDbCommand></xref:System.Data.IDbCommand>。 DeleteCommand が以前に作成したへの参照を維持<xref:System.Data.IDbCommand>オブジェクト</xref:System.Data.IDbCommand>。"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_2_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_2_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>中に使用される<xref:System.Data.Common.DbDataAdapter.Update*>データ セット内で削除された行のデータ ソースのレコードを削除する</xref:System.Data.Common.DbDataAdapter.Update*>。"
  overload: System.Data.IDbDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得またはレコードを挿入する新しいデータ ソースに使用される SQL ステートメントを設定します。"
  remarks: "中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、設定した場合、insert コマンドを自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ</xref:System.Data.DataSet></xref:System.Data.Common.DbDataAdapter.Update%2A>。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックには、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列情報が必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。       InsertCommand が割り当てられている場合、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません</xref:System.Data.IDbCommand></xref:System.Data.IDbCommand>。 InsertCommand が以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト</xref:System.Data.IDbCommand>。      > [!NOTE] > にこれらの行を追加することがありますこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.IDbCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.IDbCommand>オブジェクト</xref:System.Data.IDbCommand></xref:System.Data.IDbCommand.UpdatedRowSource%2A></xref:System.Data.DataSet>。"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_3_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_3_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>中に使用される<xref:System.Data.Common.DbDataAdapter.Update*>レコードを挿入するデータ セットの新しい行のデータ ソース</xref:System.Data.Common.DbDataAdapter.Update*>。"
  overload: System.Data.IDbDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得またはレコードを選択するデータ ソースで使用される SQL ステートメントを設定します。"
  remarks: "SelectCommand が割り当てられている場合、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません</xref:System.Data.IDbCommand></xref:System.Data.IDbCommand>。 以前に作成したへの参照を保持する SelectCommand<xref:System.Data.IDbCommand>オブジェクト</xref:System.Data.IDbCommand>。       SelectCommand が任意の行を返さない場合のテーブルに追加されて、 <xref:System.Data.DataSet>、例外が発生したことはありません</xref:System.Data.DataSet>。"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_0_1.cs)]\n [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_0_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>中に使用される<xref:System.Data.Common.DbDataAdapter.Update*>データ セット内の配置のデータ ソースからレコードを選択します</xref:System.Data.Common.DbDataAdapter.Update*>。"
  overload: System.Data.IDbDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.IDbDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.IDbDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得または使用して、データ ソース内のレコードを更新する SQL ステートメントを設定します。"
  remarks: "中に<xref:System.Data.Common.DbDataAdapter.Update%2A>このプロパティを設定しないと、主キー情報が内に存在する場合は、 <xref:System.Data.DataSet>、設定した場合、UpdateCommand を自動的に生成できる、 `SelectCommand` .NET Framework データ プロバイダーのプロパティ</xref:System.Data.DataSet></xref:System.Data.Common.DbDataAdapter.Update%2A>。 次に、追加のコマンドを設定しないは CommandBuilder によって生成されます。 この生成ロジックには、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列情報が必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。       UpdateCommand が割り当てられている場合、以前に作成した<xref:System.Data.IDbCommand>、<xref:System.Data.IDbCommand>は複製されません</xref:System.Data.IDbCommand></xref:System.Data.IDbCommand>。 UpdateCommand が以前に作成したへの参照を保持<xref:System.Data.IDbCommand>オブジェクト</xref:System.Data.IDbCommand>。      > [!NOTE] > <xref:System.Data.DataSet>.</xref:System.Data.DataSet>にこれらの行が追加された場合、このコマンドの実行には、行が返されます、"
  example:
  - "The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties. It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n [!code-cs[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/csharp/p-system.data.idbdataada_1_1.cs)]\n [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/add/codesnippet/visualbasic/p-system.data.idbdataada_1_1.vb)]"
  syntax:
    content: public System.Data.IDbCommand UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>中に使用される<xref:System.Data.Common.DbDataAdapter.Update*>データ セット内で変更された行のデータ ソースのレコードを更新する</xref:System.Data.Common.DbDataAdapter.Update*>。"
  overload: System.Data.IDbDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.IDbDataAdapter.DeleteCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
  fullName: System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.IDbDataAdapter.InsertCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
  fullName: System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
  fullName: System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
  fullName: System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.IDbDataAdapter.DeleteCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: IDbDataAdapter.DeleteCommand
- uid: System.Data.IDbDataAdapter.InsertCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: IDbDataAdapter.InsertCommand
- uid: System.Data.IDbDataAdapter.SelectCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: IDbDataAdapter.SelectCommand
- uid: System.Data.IDbDataAdapter.UpdateCommand*
  parent: System.Data.IDbDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: IDbDataAdapter.UpdateCommand
