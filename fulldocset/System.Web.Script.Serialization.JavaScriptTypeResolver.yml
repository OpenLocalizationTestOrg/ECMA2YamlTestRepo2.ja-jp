### YamlMime:ManagedReference
items:
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver
  id: JavaScriptTypeResolver
  children:
  - System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  - System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  langs:
  - csharp
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver
  type: Class
  summary: "カスタムの型リゾルバーを実装するための抽象基本クラスを提供します。"
  remarks: "JavaScriptTypeResolver クラスはサービスを提供します-マネージへの変換を情報を入力する文字列値を、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>メソッド。</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> 。      の経由で型を管理するに適切な文字列値を解決する、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>メソッド</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>。       ときに、<xref:System.Web.Script.Serialization.JavaScriptSerializer>オブジェクトがカスタムの型をシリアル化に含めることができます必要に応じてシリアル化された JavaScript Object Notation (JSON) 文字列に型情報を含む値です</xref:System.Web.Script.Serialization.JavaScriptSerializer>。 逆シリアル化中に<xref:System.Web.Script.Serialization.JavaScriptSerializer>JSON 文字列を変換することができますし、適切な判断するには、この文字列値の管理の参照を入力します</xref:System.Web.Script.Serialization.JavaScriptSerializer>。       型リゾルバーを指定する場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンス、シリアライザーが使用する、<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A>と<xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A>マネージ型と文字列値間でシリアル化および逆シリアル化の処理中にはそれぞれマップする方法</xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A></xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A></xref:System.Web.Script.Serialization.JavaScriptSerializer>。       JavaScriptTypeResolver クラスが基本クラスを<xref:System.Web.Script.Serialization.SimpleTypeResolver>クラスで、マネージ型のアセンブリ修飾名を使用する型リゾルバーの実装を提供します</xref:System.Web.Script.Serialization.SimpleTypeResolver>。"
  example:
  - "The following example demonstrates how to create a custom type resolver.  \n  \n [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/visualbasic/t-system.web.script.seri_0_1.vb)]\n [!code-cs[System.Web.Script.Serialization.TypeResolver#2](~/add/codesnippet/csharp/t-system.web.script.seri_0_1.cs)]"
  syntax:
    content: public abstract class JavaScriptTypeResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  id: '#ctor'
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Script.Serialization.JavaScriptTypeResolver&quot;> </xref>クラスです。"
  syntax:
    content: protected JavaScriptTypeResolver ();
    parameters: []
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  id: ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "派生クラスでオーバーライドされると、<xref:System.Type>指定された型名に関連付けられているオブジェクト</xref:System.Type>。"
  remarks: "型競合回避モジュールに関連付けられている場合、<xref:System.Web.Script.Serialization.JavaScriptSerializer>インスタンス、シリアライザー メソッドを使用して、ResolveType 反復 JSON 文字列、固有の仕様を決定するマネージ型の JSON の型を変換する必要がある場合</xref:System.Web.Script.Serialization.JavaScriptSerializer>。"
  syntax:
    content: public abstract Type ResolveType (string id);
    parameters:
    - id: id
      type: System.String
      description: "マネージ型の名前です。"
    return:
      type: System.Type
      description: "<xref:System.Type>指定された型名に関連付けられているオブジェクト</xref:System.Type>。"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  id: ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  langs:
  - csharp
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.Script.Serialization
  summary: "派生クラスでオーバーライドされると、指定された型名を返します<xref:System.Type>オブジェクト</xref:System.Type>。"
  remarks: "ResolveTypeId メソッドは、いずれかを返す場合`null`または<xref:System.String>、し型競合回避モジュールは、型をサポートしていません</xref:System.String>。"
  syntax:
    content: public abstract string ResolveTypeId (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "解決するマネージ型です。"
    return:
      type: System.String
      description: "指定したマネージ型の名前。"
  overload: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver()
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver()
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.JavaScriptTypeResolver()
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType(String)
  nameWithType: JavaScriptTypeResolver.ResolveType(String)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId(Type)
  nameWithType: JavaScriptTypeResolver.ResolveTypeId(Type)
  fullName: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(Type)
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: JavaScriptTypeResolver
  nameWithType: JavaScriptTypeResolver.JavaScriptTypeResolver
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveType
  nameWithType: JavaScriptTypeResolver.ResolveType
- uid: System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId*
  parent: System.Web.Script.Serialization.JavaScriptTypeResolver
  isExternal: false
  name: ResolveTypeId
  nameWithType: JavaScriptTypeResolver.ResolveTypeId
