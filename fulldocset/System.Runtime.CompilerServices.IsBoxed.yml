### YamlMime:ManagedReference
items:
- uid: System.Runtime.CompilerServices.IsBoxed
  id: IsBoxed
  children: []
  langs:
  - csharp
  name: IsBoxed
  nameWithType: IsBoxed
  fullName: System.Runtime.CompilerServices.IsBoxed
  type: Class
  summary: "変更された参照型がボックス化された値型であることを示します。 このクラスは継承できません。"
  remarks: "Microsoft C コンパイラでは、言語で直接ボックス化された値の型をサポートしています。  ボックス化された値の型に関する情報は、カスタム修飾子、修飾子がボックス化されている値の型への参照を修飾としてメタデータに出力されます。       コンパイラは、ジャストイン タイム (JIT) コンパイラが既定の動作が適切ではない場合に、値を処理する方法を変更するメタデータ内のカスタム修飾子を生成します。  JIT コンパイラには、カスタム修飾子が検出されると、修飾子を指定する方法で値を処理します。  コンパイラは、メソッド、パラメーターにカスタム修飾子を適用し、値を返します。  JIT コンパイラは、必須の修飾子に応答する必要がありますが、オプションの修飾子を無視することができますです。       次の手法のいずれかを使用してメタデータにカスタム修飾子を出力することができます:-内のメソッドを使用して、<xref:System.Reflection.Emit.TypeBuilder>クラスなど<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>、 <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A></xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineField%2A> </xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A> </xref:System.Reflection.Emit.TypeBuilder> 。      呼び出しを含む Microsoft intermediate language (MSIL) の命令ファイルを生成する`modopt`と`modreq`を使用してファイルをまとめることと、 [Ilasm.exe (IL アセンブラー)](~/add/includes/ajax-current-ext-md.md)です。      アンマネージ リフレクション API を使用します。"
  example:
  - "The following example demonstrates how to emit an IsBoxed object into an assembly using reflection.  \n  \n [!code-cpp[Runtime.CompilerServices.IsBoxed#1](~/add/codesnippet/cpp/t-system.runtime.compile_2_1.cpp)]"
  syntax:
    content: public static class IsBoxed
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
