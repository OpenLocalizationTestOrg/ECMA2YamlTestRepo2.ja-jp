### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "では、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>を制御し、ビジネス データおよびデータ オブジェクトでデータの操作を実行するデータ バインド コントロールのインターフェイスを提供します。"
  remarks: "ObjectDataSourceView クラスものでは、主に、データ バインド コントロール、およびページ コードでプログラミング可能なオブジェクトとしてではなく使用されます。       ObjectDataSourceView クラス、データの機能を実装、<xref:System.Web.UI.WebControls.ObjectDataSource>を制御するなど、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>、および<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作、並べ替え、フィルター処理、および設定の管理ビューステートに保持します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。       各インスタンスに ObjectDataSourceView オブジェクトを作成、<xref:System.Web.UI.WebControls.ObjectDataSource>実行時にクラス</xref:System.Web.UI.WebControls.ObjectDataSource>。 インスタンスのデータ操作への呼び出し、<xref:System.Web.UI.WebControls.ObjectDataSource>クラスが ObjectDataSourceView オブジェクトのインスタンスによって処理されます</xref:System.Web.UI.WebControls.ObjectDataSource>。 ページの開発者では、ObjectDataSourceView クラスのインスタンスを直接アクセスしないでください。 コントロールの開発者は拡張することによってカスタムのデータ コントロールを作成することができます、<xref:System.Web.UI.WebControls.ObjectDataSource>と ObjectDataSourceView クラス</xref:System.Web.UI.WebControls.ObjectDataSource>。       ObjectDataSourceView クラスは、リフレクションを使用してビジネス データやデータのオブジェクトでメソッドを呼び出すことにより、データ操作を実行します。 実行時に、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールによって識別される型のインスタンスを作成、<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>プロパティ、データ操作のため、適切なメソッドを呼び出します</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 メモリ内では、インスタンス化されたオブジェクトは、ObjectDataSourceView によってキャッシュされません。 オブジェクトが作成され、すべてのデータのメソッド呼び出しを破棄します。 メソッドの場合`static`(`Shared` Visual Basic で)、インスタンスは作成されませんが、データ操作メソッドはまだ呼び出されます。       ページの開発者に、ObjectDataSourceView が直接公開されません、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール</xref:System.Web.UI.WebControls.ObjectDataSource>。 プロパティと、ObjectDataSourceView のメソッドを<xref:System.Web.UI.WebControls.ObjectDataSource>。</xref:System.Web.UI.WebControls.ObjectDataSource>を通じてアクセスする代わりに、 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>。</xref:System.Web.UI.WebControls.ObjectDataSource>のプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>を設定して ObjectDataSourceView のプロパティを設定</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## データをデータ ソース ビューを実行する最も基本的な操作を取得する場合は、基になる記憶域を使用してデータからデータの取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>を取得するメソッド、<xref:System.Collections.IEnumerable>データ項目のコレクション</xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。 次のデータ取得方法、プロパティ、およびイベント ObjectDataSourceView オブジェクトによって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.ObjectDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベント -、<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>イベント ## データの更新、ObjectDataSourceView オブジェクトによって識別されるビジネスまたはデータ オブジェクト メソッドを呼び出して、データ更新をサポートする、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Selected></xref:System.Web.UI.WebControls.ObjectDataSource.Selecting></xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 データ バインド コントロールの更新プログラムを自動的に実行する、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、コントロールで、パラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary>、ObjectDataSourceView およびビューのオブジェクトへのインターフェイスが含まれているすべてのパラメーターでこれらのパラメーターをマージ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A></xref:System.Collections.Specialized.IOrderedDictionary></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       次の更新メソッド、プロパティ、およびイベントが、ObjectDataSourceView によって実装されるによって直接公開されるその<xref:System.Web.UI.WebControls.ObjectDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>メソッド -、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>イベント -、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>イベント ## データ、ObjectDataSourceView を挿入するオブジェクトによって識別されるビジネスまたはデータ オブジェクト メソッドを呼び出して新しい行のデータの挿入をサポートしています、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSource.Updating></xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 挿入のように自動的に実行するデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>でそのパラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary>、ObjectDataSourceView およびビューのオブジェクトへのインターフェイスが含まれているすべてのパラメーターでこれらのパラメーターをマージ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A></xref:System.Collections.Specialized.IOrderedDictionary></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       次挿入メソッド、プロパティ、およびイベントが、ObjectDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.ObjectDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>メソッド -、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベント -、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>イベント ## データの削除 ObjectDataSourceView オブジェクトによって識別されるビジネスまたはデータ オブジェクト メソッドを呼び出すことによってデータの削除をサポートしています、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSource.Inserting></xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 データ バインド コントロールなど、削除を自動的に実行する、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>でそのパラメーターを渡す、 <xref:System.Collections.Specialized.IOrderedDictionary>、ObjectDataSourceView およびビューのオブジェクトへのインターフェイスが含まれているすべてのパラメーターでこれらのパラメーターをマージ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A></xref:System.Collections.Specialized.IOrderedDictionary></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 次は、メソッド、プロパティを削除し、イベントが、ObjectDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.ObjectDataSource>ページ作成者および他の呼び出し元にコントロール: -<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>メソッド -、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベント -、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>イベント ## データを動的に表示するときに、フィルター処理と並べ替え、データの取得がより強力な</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted></xref:System.Web.UI.WebControls.ObjectDataSource.Deleting></xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 のみサポートのフィルター処理、<xref:System.Web.UI.WebControls.ObjectDataSource>場合は、制御、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します、<xref:System.Data.DataTable>または<xref:System.Data.DataSet>オブジェクト</xref:System.Data.DataSet></xref:System.Data.DataTable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 使用することができます、<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>データの取得を動的にフィルターを適用するプロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>。 これらのプロパティが ObjectDataSourceView オブジェクトによって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.ObjectDataSource>データ バインド コントロールを他の呼び出し元の制御</xref:System.Web.UI.WebControls.ObjectDataSource>。       取得することで、データを並べ替えることができます、<xref:System.Web.UI.WebControls.ObjectDataSource>が取得された後は、メモリ内のデータを順序付けることによって</xref:System.Web.UI.WebControls.ObjectDataSource>。 のみサポートは、並べ替え、<xref:System.Web.UI.WebControls.ObjectDataSource>場合は、制御<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します<xref:System.Data.DataTable>または<xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>プロパティは常に返します`true`によってどのような型が返される、ObjectDataSourceView が判断できないため、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>せず、メソッドを呼び出すメソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>。 <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>プロパティの構文は同じである、<xref:System.Data.DataView.Sort%2A?displayProperty=fullName>プロパティ</xref:System.Data.DataView.Sort%2A?displayProperty=fullName></xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>。      ## ビュー状態、ObjectDataSourceView の追跡を実装して、<xref:System.Web.UI.IStateManager>インターフェイスと使用法は、ページ要求間での状態を追跡するために状態を表示します</xref:System.Web.UI.IStateManager>。 実装、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>、および<xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>コントロールのビュー状態の追跡を有効にするメソッドが用意されています</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>コンス トラクターを呼び出す、<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>を指定したデータ ソース ビューの新しいインスタンスを返すメソッドを`viewName`パラメーター</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが&1; つのみ関連付けられる<xref:System.Web.UI.WebControls.ObjectDataSourceView>、いつでも常に、ビューの名前と`DefaultView`<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール、いない<xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView></xref:System.Web.UI.WebControls.ObjectDataSource>によってこの名前付けの制限が課されるが、</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> オーバーライドすることができます、<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>別の名前付け規則にビューをサポートするメソッド</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>。       <xref:System.Web.HttpContext>によって渡されるオブジェクト`context`などのオブジェクトにアクセスするパラメーター、データ ソース ビューで使用が<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A></xref:System.Web.HttpContext>。"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;></xref>に関連付けられています。"
    - id: name
      type: System.String
      description: "データ ソース ビューの所有するデータ ソース コントロールのスコープ内の一意の名前。"
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>コントロールは、削除操作をサポートします。"
  remarks: "CanDelete プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>プロパティを設定します</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、削除操作は失敗する可能性がします。"
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 削除がサポートされない場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>プロパティは、空の文字列 (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>コントロールは、挿入操作をサポートします。"
  remarks: "CanInsert プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>プロパティを設定します</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、挿入操作は失敗する可能性がします。"
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 カーソルがサポートされない場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>プロパティは、空の文字列</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>コントロールは、取得されたデータを介してページングをサポートします。"
  remarks: "CanPage プロパティを示すかどうか、<xref:System.Web.UI.WebControls.ObjectDataSourceView>オブジェクトは、ページングをサポートしています</xref:System.Web.UI.WebControls.ObjectDataSourceView>。 詳細については、ページングは<xref:System.Web.UI.WebControls.ObjectDataSourceView><xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>を参照してください</xref:System.Web.UI.WebControls.ObjectDataSourceView>でサポートされて"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>に値が設定されている<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>一連のデータだけでなく、データ行の合計数を取得するコントロールをサポートします。"
  remarks: "CanRetrieveTotalRowCount プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>プロパティを設定します</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>。 カウントを返すメソッドは、ページングすることが、ページ内の行の数ではなく行の合計数を返す必要があります。 データ バインド コントロールでは、ページング コントロールの表示方法を決定するページ可能な行の合計数を使用します。 たとえば、数値ページャー ボタンの数で表示するために、<xref:System.Web.UI.WebControls.GridView>ポケットベルを制御します</xref:System.Web.UI.WebControls.GridView>。 ページングのサポートの詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>を参照してください。       呼び出し中に CanRetrieveTotalRowCount プロパティがチェックされて、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>データ ソース コントロールであることを確認する方法は、さまざまな設定が要求したすべての機能をサポートしている<xref:System.Web.UI.DataSourceSelectArguments>プロパティ</xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>。"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>コントロールには、基になるデータ ソースでの並べ替え表示がサポートしています。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>データの並べ替えをサポートのみを制御するときに、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドを返します、 <xref:System.Data.DataSet>、 <xref:System.Data.DataView>、または<xref:System.Data.DataTable>オブジェクト、ビュー オブジェクトがまで並べ替えがサポートされているかどうかを判断することはできません、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドが呼び出され、を返します。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 。 このため、CanSort プロパティは常を返します`true`です。"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>コントロールは、更新操作をサポートします。"
  remarks: "CanUpdate プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>プロパティを設定します</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合でも、更新操作は失敗する可能性がします。"
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 更新はサポートされていません場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティは、空の文字列 (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を決定する値、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロールは、更新プログラムを実行して、基になるデータ ストレージ内の行のデータが操作の期間中に変更するときに削除します。"
  remarks: "ConflictDetection プロパティに古い値と新しい値のパラメーターを適用するかどうかを決定する、`Update`メソッドです。 メソッドである場合などで指定された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>プロパティから返される、 <xref:System.Data.DataTable>、列を持つオブジェクト`Name`と`Number`、ConflictDetection プロパティに設定し、 <xref:System.Web.UI.ConflictOptions>、パラメーターが作成された値の`Name`と`Number`の`Update`メソッド</xref:System.Web.UI.ConflictOptions></xref:System.Data.DataTable></xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>。 ConflictDetection プロパティ設定されている場合、<xref:System.Web.UI.ConflictOptions>値、パラメーター名で作成、 `Name`、 `Number`、 `original_Name`、および`original_Name`</xref:System.Web.UI.ConflictOptions>。 (元の値のパラメーターの正確な名前が異なります、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A><xref:System.Web.UI.WebControls.ObjectDataSourceView>しかどうかをメソッドをで指定された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>プロパティが一致するパラメーター</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> 。       同時実行制御は、データ ストア データを読み取るし、複数のクライアントがアクセスして、同じデータを操作するときに、ストアで変更する方法を制御するための手法です。 たとえば、1 つのクライアントは、データを読み取り、別のクライアントが、同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。 両方のユーザーは、データ更新、データ ストレージに送信すると、予期しない結果が発生する、両方のクライアントは、同じデータの異なる値を更新するためです。 これは、競合と見なされます。 ConflictDetection プロパティを設定、<xref:System.Web.UI.ConflictOptions>値、`Update`メソッドの競合を検出し、必要に応じて、それらの処理を元のデータ ソースの新旧の値を比較し、</xref:System.Web.UI.ConflictOptions> 。       ビュー内の状態でプロパティは ConflictDetection の値が格納されています。"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "1 つ、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。 既定値は、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうか<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> update、insert、または削除操作に渡される値は自動的にから変換<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を<xref href=&quot;System.DBNull.Value&quot;></xref>値。"
  remarks: "変換せず`null`を<xref:System.DBNull.Value?displayProperty=fullName>値、エラー実行時に発生します</xref:System.DBNull.Value?displayProperty=fullName>。 示すために、ConvertNullToDBNull プロパティを使用しているかどうか、 <xref:System.Web.UI.WebControls.Parameter>、update、insert、または削除操作に渡される値は自動的にから変換`null`を<xref:System.DBNull.Value?displayProperty=fullName>値</xref:System.DBNull.Value?displayProperty=fullName></xref:System.Web.UI.WebControls.Parameter>。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>を参照してください。"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>で<xref href=&quot;System.Web.UI.WebControls.Parameter&quot;></xref>オブジェクトに渡されます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>に自動的に変換されて、 <xref href=&quot;System.DBNull.Value&quot;> </xref>値。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定クラスの名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロールをデータ操作のパラメーターに使用します。 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>コントロール クラスを使用して、指定したのではなく、 <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref>さまざまなパラメーターのコレクションに含まれるオブジェクト。"
  remarks: "渡されるいくつかのパラメーターを指定する代わりに、 `Select`、 `Update`、 `Insert`、および`Delete`メソッド、いくつかの項目を集約する&1; つのオブジェクトを作成することができます。 このオブジェクトは、いくつかのパラメーターではなく、メソッドに渡されます。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>を参照してください。"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "オブジェクトの種類を識別する部分的または完全修飾クラス名を<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>のパラメーターとして使用できる、 <> </> *>、 <> </> *>、または<xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>操作</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって、削除操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>プロパティを指定して<code> keys </code>と<code> oldValues </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>。"
  remarks: "既定値は、-1 で、不明な数の行が削除されたことを意味します。 別の値を返すには、設定、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>イベント ハンドラー</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> 。 影響を受けた行の数がによって返される通常、`Delete`ビジネス オブジェクトとその値にメソッドがから利用可能な<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>イベント ハンドラー</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> 。       削除メソッドの呼び出し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>渡して、メソッド、`keys`と`oldValues`コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>。"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>、キーの値を削除する項目を識別するために使用します</xref:System.Collections.IDictionary>。 これらのパラメーターを使用、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>削除操作を実行するプロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>データ ソース内のアイテムを照合に使用する追加の非キー値を格納している</xref:System.Collections.IDictionary>。 行の値が場合にのみ、メソッドに渡される、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>フィールド</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>。"
    return:
      type: System.Int32
      description: "削除された行の数数が不明の場合は-1。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>。"
  remarks: "戻り値の値を確認し、出力パラメーターまたは後に例外がスローされたかどうかを決定する、削除されたイベントを処理する<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>。 戻り値、出力パラメーター、および例外処理のプロパティから使用できますが、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定メソッドまたは関数の名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>データを削除するオブジェクトを呼び出します。"
  remarks: "DeleteMethod プロパティによって識別されるメソッドはインスタンス メソッドになるまたは`static`(`Shared` Visual Basic で) メソッドです。 インスタンス メソッドである場合は、ビジネス オブジェクトが作成され、DeleteMethod プロパティによって指定されたメソッドが呼び出されるたびに破棄されます。 処理することができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>DeleteMethod プロパティによって指定されたメソッドが呼び出される前に、ビジネス オブジェクトを使用するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>。 処理することも、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>DeleteMethod プロパティによって指定されたメソッドが呼び出された後に発生するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>。 メソッドの場合、 `static` (`Shared` Visual Basic で)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。       ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource>、データ ソース コントロールでは、パラメーターのような条件のセットに応じて正しい&1; つを呼び出すしようとしましたは、1 つ以上のメソッドまたは関数と同じ名前 (メソッドのオーバー ロード) 実装で、コントロールが動作、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>コレクションです。</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 。 場合のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>コレクション DeleteMethod メソッド シグネチャの一致しない場合、データ ソースが例外をスローします</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>。       ビュー内の状態でプロパティは DeleteMethod の値が格納されています。       詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>を参照してください。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "メソッドの名前を表すまたは関数の文字列、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を使用してデータを削除します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>。"
  remarks: "名前と deleteparameters の各コレクションに含まれているパラメーターの型は、名前とによって指定されたメソッド内にあるパラメーターの型に一致する必要があります、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>プロパティの署名</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>。 パラメーター名が影響を受けました、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>プロパティであり、大文字小文字を区別します</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。 など、パラメーターを提供するデータ バインド コントロールを操作するとき<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがデータ バインドされたコントロールによって提供されるこれらのパラメーターを使用して、コレクションで明示的に指定されているすべてのパラメーターを自動的にマージします</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。       詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>を参照してください。"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって指定されたメソッドで使用するパラメーターを格納している、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生する前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>。"
  remarks: "パラメーターの値を検証する、アプリケーションに固有の追加の初期化の操作を実行する、削除すると、イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 パラメーターとして使用できる、<xref:System.Collections.IDictionary>によってアクセスされるコレクション、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A></xref:System.Collections.IDictionary>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソース コントロールが取得したデータのセットのページングをサポートするかどうかを示す値を設定します。"
  remarks: "によってページング、<xref:System.Web.UI.WebControls.ObjectDataSourceView>コントロールは、EnablePaging を設定して処理<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>、および<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>を定義して、`Select`適切なパラメーターを使用して、ビジネス オブジェクトのメソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView></xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>。 EnablePaging プロパティに設定するときに`true`、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>コレクションには、要求された最初の行と要求された行の数の&2; つのパラメーターが含まれています</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>。 これら&2; つのパラメーターがによって定義された名前は、<xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>と<xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>。 `Select`メソッドは、指定したインデックス位置を開始する要求された行数を返す必要があります。 ページ サイズによっては、データが均等に分割されない可能性があります、ため、最後のページより少ない行が含まれます。 したがって、要求された行の数が返される行の実際には最大数です。       <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>の呼び出し中にプロパティがオン、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>データ ソース コントロールであることを確認する方法は、さまざまな設定が要求したすべての機能をサポートしている<xref:System.Web.UI.DataSourceSelectArguments>プロパティ</xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>。       関連付けられたデータ バインド コントロールでページングが有効の場合、データ バインド コントロールを呼び出す、`Select`開始インデックスと必要とされる行の数を持つメソッドです。 また場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>プロパティが設定されて、データ バインド コントロールのページャー コントロールを表示する前にメソッドを呼び出します</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>。 たとえば場合、<xref:System.Web.UI.WebControls.GridView>コントロールがページ サイズが 5 の有効なページングと<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>メソッド 20 をポケットベルで 4 つのページが表示されます</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A></xref:System.Web.UI.WebControls.GridView>。       ビュー内の状態でプロパティは、EnablePaging の値が格納されています。"
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、データ ソース コントロールでは、データを介してページングが取得されます。 サポートされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用して削除操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>メソッドと、指定した<code> keys </code>と<code> oldValues </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>クラス メソッドを実装、継承された ExecuteDelete ビジネス オブジェクトを使用して基になるデータ ストアからデータを削除する</xref:System.Web.UI.WebControls.ObjectDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteDelete メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>。       削除操作を実行すると、前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>。 パラメーターの値を確認し、前に処理を実行するには、このイベントを処理することができます、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>メソッドが呼び出されます</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>。       削除操作を実行する、<xref:System.Web.UI.WebControls.ObjectDataSourceView>によって識別されるメソッドを呼び出すリフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>プロパティおよび任意のパラメーターを関連付けられた、`keys`と`oldValues`コレクション、し、それを実行</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView> 操作の完了後、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>。 任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>で使用されるパラメーターの<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>削除操作を実行するプロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*></xref:System.Collections.IDictionary>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>場合にのみ評価される行の値を含む、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>フィールド</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*></xref:System.Collections.IDictionary>。"
    return:
      type: System.Int32
      description: "削除された行の数数が不明の場合は-1。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>を参照してください。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>プロパティから返される<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値、およびなしの値が渡された、 <code> oldValues </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって、挿入操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>プロパティを指定して<code> values </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>クラス メソッドを実装、継承された ExecuteInsert ビジネス オブジェクトを使用して、基になるデータ ストアにデータを挿入する</xref:System.Web.UI.WebControls.ObjectDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteInsert メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。       挿入が行われる前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>。 パラメーターの値を確認し、前に処理を実行するには、このイベントを処理することができます、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>メソッドが呼び出されます</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。       挿入操作を実行する、<xref:System.Web.UI.WebControls.ObjectDataSourceView>コントロールでは、リフレクションを使用して、によって識別されるメソッドを呼び出して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>プロパティおよび任意に内にあるパラメーターが関連付けられている、`values`コレクションし、それを実行</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView> 操作の完了後、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>。 戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。       挿入された行の数を返す方法については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>を参照してください。"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>で使用されるパラメーターの<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>挿入操作を実行するプロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*></xref:System.Collections.IDictionary>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "挿入された行の数数が不明の場合は-1。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>を参照してください。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>プロパティから返される<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code><xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>または空です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるオブジェクトからデータを取得、 <> </> *> でメソッドを呼び出すことでプロパティを識別、 <> </> *> プロパティおよび任意の値を渡して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>クラス メソッドを実装、継承された ExecuteSelect ビジネス オブジェクトを使用してデータを取得します</xref:System.Web.UI.WebControls.ObjectDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteSelect メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。       指定したメソッドのメソッド シグネチャを持つことができますが、対応する型のいずれかを返す必要があります、<xref:System.Web.UI.WebControls.ObjectDataSource>を正常に呼び出すには、次の表に記載されているコントロール</xref:System.Web.UI.WebControls.ObjectDataSource>。      |型を返す |アクション |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される、 <xref:System.Collections.IEnumerable>|。  |<xref:System.Data.DataTable>|<xref:System.Data.DataView>が、<xref:System.Data.DataTable>を使用して作成し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。  |<xref:System.Data.DataSet>|最初の数値<xref:System.Data.DataTable>、<xref:System.Data.DataSet>が抽出され、<xref:System.Data.DataView>が作成され、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。  |<xref:System.Object>|オブジェクトが&1; つの要素<xref:System.Collections.IEnumerable>内にラップされ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。      データの取得が行われる前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Collections.IEnumerable></xref:System.Object></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataView></xref:System.Data.DataSet></xref:System.Data.DataTable></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable></xref:System.Data.DataView></xref:System.Data.DataTable></xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Collections.IEnumerable>。 パラメーターの値を確認して、操作の前に処理を実行するこのイベントを処理することができます。       選択操作を実行する、<xref:System.Web.UI.WebControls.ObjectDataSourceView>コントロールでは、リフレクションを使用して、によって識別されるメソッドを呼び出して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>プロパティおよび任意に内にあるパラメーターが関連付けられている、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>コレクションし、それを実行</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView> 操作の完了後、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>。 任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。       場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します、<xref:System.Data.DataSet>オブジェクトとキャッシュ機能が有効になっている、<xref:System.Web.UI.WebControls.ObjectDataSourceView>からデータを取得し、操作中にデータをキャッシュに保存します</xref:System.Web.UI.WebControls.ObjectDataSourceView></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。 キャッシュが作成、破棄、または更新の組み合わせで指定されているキャッシュの動作に基づいて、<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A></xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>。       場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します、<xref:System.Data.DataSet>オブジェクトおよび<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>プロパティが指定されて、指定されたいずれかと評価される<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>プロパティとその結果のフィルターの適用中にデータの一覧に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。       選択した行の数を返す方法の詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>を参照してください。"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>基本的なデータの取得を超えたデータの処理を要求するために使用します。"
    return:
      type: System.Collections.IEnumerable
      description: "A<xref:System.Collections.IEnumerable>データ行のリスト</xref:System.Collections.IEnumerable>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるメソッドを呼び出すと、更新操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティで指定されるすべてのパラメーターを使用して、 <code> keys </code>、 <code> values </code>、または<code> oldValues </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>クラスは、ビジネス オブジェクトを使用してデータを更新する継承 ExecuteUpdate メソッドを実装します</xref:System.Web.UI.WebControls.ObjectDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteUpdate メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>。       含まれている値、`keys`と`values`コレクションが評価されに含まれる任意の値とマージされた、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>。 場合、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions>に含まれている値、値、`oldValues`コレクションの書式は、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>プロパティでありもマージします</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A></xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>。       更新操作を実行すると、前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>。 パラメーターの値を確認して、更新の前に処理を実行するこのイベントを処理することができます。 更新操作を実行する、<xref:System.Web.UI.WebControls.ObjectDataSourceView>によって識別されるメソッドを呼び出すリフレクションを使用して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>プロパティおよび任意のパラメーターを関連付けられた、`keys`コレクションし、それを実行</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView> 操作の完了後、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>イベント</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated></xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>。 戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。       更新された行の数を返す方法については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>を参照してください。"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>で使用する主キーの<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティをデータベースの更新操作を実行します</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*></xref:System.Collections.IDictionary>。 メソッドに関連付けられたキーがない場合は渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>と共に使用する値の<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>データベースの更新操作を実行する</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*></xref:System.Collections.IDictionary>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>基になるデータ ストアの元の値を表す</xref:System.Collections.IDictionary>。 クエリに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "更新された行の数または、数が不明の場合は-1。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>。</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>を参照してください。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>プロパティから返される<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定は、ビジネス オブジェクトのメソッドであるときに適用するフィルター式で識別される、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>プロパティが呼び出されます</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、データのフィルター処理をサポートしている場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します、 <xref:System.Data.DataSet>、 <xref:System.Data.DataView>、または<xref:System.Data.DataTable>オブジェクト</xref:System.Data.DataTable></xref:System.Data.DataView></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。       使用される構文、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティは、書式指定文字列スタイル式</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。 フィルター式の構文は同じ構文で受け入れを<xref:System.Data.DataView.RowFilter%2A>プロパティにフィルター式が適用されるため、<xref:System.Data.DataView.RowFilter%2A>のプロパティ、<xref:System.Data.DataView>実行から返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView></xref:System.Data.DataView.RowFilter%2A></xref:System.Data.DataView.RowFilter%2A>。 (詳細については、次を参照してください<xref:System.Data.DataColumn.Expression%2A>。)</xref:System.Data.DataColumn.Expression%2A> 。パラメーターを追加する場合、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクション、たとえば書式文字列のプレース ホルダーを含めることができますも`&quot;{0}&quot;`パラメーター値の代わりに式で</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>。 内のパラメーターのインデックスに従ってプレースは、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>。       <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>パラメーターを含めることができます。 パラメーターの型が文字列型または char 型の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は不要です。<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションには、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>で見つかったプレース ホルダーに評価され、パラメーターが含まれています。</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       ビュー内の状態でプロパティは FilterExpression の値が格納されています。      > [!IMPORTANT] > クライアントから受信した任意のフィルター パラメーターの値を検証することをお勧めします。 ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView>。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>、フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "によって識別されるビジネス オブジェクトのメソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FilterExpression プロパティが設定され、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>メソッドが返されません、 <xref href=&quot;System.Data.DataSet&quot;> </xref></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "フィルター操作の前に発生します。"
  remarks: "処理、<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>フィルターの前にパラメーター値の検証操作を実行するイベント、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、フィルター操作を実行します</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>。 取り消すことができます、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>操作を設定して、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>。 イベントが発生した場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。      > [!IMPORTANT] > クライアントから受信したフィルターのパラメーター値を検証する必要があります。 ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView>。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>、フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "パラメーターのプレース ホルダー内にある関連付けられているパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>文字列</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは、データのフィルター処理をサポートしている場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドを返します、 <xref:System.Data.DataSet>、 <xref:System.Data.DataTable>、または<xref:System.Data.DataView>オブジェクト</xref:System.Data.DataView></xref:System.Data.DataTable></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。       FilterParameters コレクション内のパラメーターで指定されているすべてのパラメーターに割り当てられた、<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>。 指定されているパラメーターのプレース ホルダー、<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>プロパティと一致する FilterParameters コレクション内のパラメーター オブジェクトが、メソッドを指定すると、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>プロパティが呼び出されます</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>で見つかったすべてのパラメーター プレース ホルダーに関連付けられているパラメーターのセットを含む、<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<> </> *> プロパティが設定され、 <> </> *> メソッドが返されません、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるビジネス オブジェクトのメソッドを呼び出すことによって、挿入操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>プロパティを指定して<code> values </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>。"
  remarks: "既定の戻り値は-1 を不明な数の行が挿入されたことを意味します。 別の値を返すには、設定、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>イベント</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>。 影響を受けた行の数がによって返される通常、`Insert`ビジネス オブジェクトとその値にメソッドがから利用可能な<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>イベント</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>。       挿入メソッドの呼び出し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>渡して、メソッド、`values`コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>。"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>で使用されるパラメーターのコレクション、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>挿入操作を実行するプロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*></xref:System.Collections.IDictionary>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "挿入された行の数数が不明の場合は-1。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>プロパティから返される<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>。"
  remarks: "戻り値の値を確認し、出力パラメーターまたは後に例外がスローされたかどうかを決定する、Inserted イベントを処理する<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>。 戻り値、出力パラメーター、および例外処理のプロパティから使用できますが、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生する前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行する挿入イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 パラメーターとして使用できる、<xref:System.Collections.IDictionary>によってアクセスされるコレクション、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A></xref:System.Collections.IDictionary>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定メソッドまたは関数の名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>データを挿入するオブジェクトを呼び出します。"
  remarks: "InsertMethod プロパティによって識別されるメソッドはインスタンス メソッドになるまたは`static`(`Shared` Visual Basic で) メソッドです。 インスタンス メソッドである場合は、ビジネス オブジェクトが作成され、InsertMethod プロパティによって指定されたメソッドが呼び出されるたびに破棄されます。 処理することができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>InsertMethod プロパティによって指定されたメソッドが呼び出される前に、ビジネス オブジェクトを使用するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>。 処理することも、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>InsertMethod プロパティによって指定されたメソッドが呼び出された後に発生するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>。 (`Dispose`と呼ばれる場合は、ビジネス オブジェクトを実装する場合にのみ、<xref:System.IDisposable>インターフェイスです)</xref:System.IDisposable> 。メソッドの場合、 `static` (`Shared` Visual Basic で)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。       ビジネス オブジェクトの場合、<xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトは、1 つ以上のメソッドまたは関数と同じ名前 (メソッドのオーバー ロード) を実装して、データ ソース コントロールがしいものでは、パラメーターのような条件のセットに応じての呼び出しを試行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 場合のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>コレクションと一致しない InsertMethod プロパティのシグネチャで指定されたメソッドのデータ ソースが例外をスローします</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>。       ビュー内の状態でプロパティは、InsertMethod の値が格納されています。       詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>を参照してください。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "メソッドの名前を表すまたは関数の文字列、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を使用してデータを挿入します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>。"
  remarks: "名前と InsertParameters コレクションに含まれているパラメーターの型は、名前とによって指定されたメソッド内にあるパラメーターの型に一致する必要があります、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>プロパティの署名</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>。 など、パラメーターを提供するデータ バインド コントロールを操作するとき<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがデータ バインドされたコントロールによって提供されるこれらのパラメーターを使用して、コレクションで明示的に指定されているすべてのパラメーターを自動的にマージします</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>。</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>を参照してください。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトのビューステートへ変更を保存します。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "以前に保存したデータ ソース ビューのビューステートを復元します。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。  ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドのビュー ステート情報の復元、<xref:System.Web.UI.WebControls.ObjectDataSourceView>によって保存された前回のページ要求からのオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>。"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>状態を復元します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソースのページング サポートを取得するレコードの数を示すために使用されるデータの取得メソッドのパラメーターの名前を設定します。"
  remarks: "MaximumRowsParameterName プロパティは、データ ソース ページングをサポートするために使用されます。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>を参照してください。       ビュー内の状態でプロパティは MaximumRowsParameterName の値が格納されています。"
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "取得するレコードの数を示すために使用されるメソッドのパラメーターの名前です。 既定値は`&quot;maximumRows&quot;`します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "後に発生、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトによって識別される型のインスタンスを作成する、<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>。"
  remarks: "ObjectCreated イベント メソッドを呼び出す他のビジネス オブジェクト、プロパティを設定される前に、ビジネス オブジェクトに固有の他の初期化を実行する処理、<xref:System.Web.UI.WebControls.ObjectDataSource>呼び出しの制御、`Data`ビジネス オブジェクトのメソッド</xref:System.Web.UI.WebControls.ObjectDataSource>。 オブジェクトへの参照がアクセス、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>。       かどうか、データ操作を実行する識別されるメソッドは`static`(`Shared` Visual Basic で) では、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>と ObjectCreated イベントが発生することはありません</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生する前に、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトによって識別される型のインスタンスを作成する、<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが自動的に作成するビジネス オブジェクトおよびリフレクションを使用してそのインスタンスの既定のコンス トラクターを呼び出します</xref:System.Web.UI.WebControls.ObjectDataSource>。 イベントを処理、ObjectCreating を明示的に別のコンス トラクターを呼び出すの結果をオブジェクトのインスタンスを設定する、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>、関連するプロパティ<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       かどうか、データ操作を実行する識別されるメソッドは`static`(`Shared` Visual Basic で)、ObjectCreating と<xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>イベントが発生することはありません</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが作成されるオブジェクトのインスタンスを破棄します。"
  remarks: "ビジネス オブジェクトのインスタンスが破棄される前に、ObjectDisposing イベントが発生します。 ビジネス オブジェクトを実装する場合、 <xref:System.IDisposable>、インターフェイス、 <xref:System.IDisposable.Dispose%2A>、ObjectDisposing イベントが発生した後にメソッドが呼び出されます</xref:System.IDisposable.Dispose%2A></xref:System.IDisposable>。       オブジェクトの他のメソッドを呼び出すし、プロパティを設定またはクリーンアップされる固有オブジェクトにオブジェクトが破棄される前に実行する ObjectDisposing イベントを処理します。 オブジェクトへの参照がアクセス、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>。       かどうか、データ操作を実行する識別されるメソッドは`static`(`Shared` Visual Basic で)、ObjectDisposing イベントは生成されません。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または元の値に渡されるパラメーターの名前に適用する書式指定文字列を設定、 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref>または<xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;></xref>メソッドです。"
  remarks: "識別されるものなど OldValuesParameterFormatString 書式指定文字列が主キーのみに適用される、`DataKeyNames`プロパティ、または削除、データ バインド コントロールの更新シナリオ、および場所、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions>値と、対応するデータのメソッドに渡される元の値のセット</xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>。       OldValuesParameterFormatString プロパティを変更する可能性があります、2 つの一般的なシナリオは、次のとおり: - 更新プログラムの新旧の値を区別するためにします。 ときに、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions>、パラメーターの値と元の新しい値の両方に追加する、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A></xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>。 書式指定文字列をなしの各データ フィールドの同じ名前の&2; つのパラメーターが作成されます。 元の値パラメーターの名前を変更すると、競合を検出し、キーの値を比較する元のデータ ソースへのデータを比較できます。      いくつかのビジュアル デザイナーでは、元の値とキーの特定の名前付けスキームを実装します。       OldValuesParameterFormatString の値は、ビュー ステートに格納されます。"
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "書式指定文字列を表す文字列がいずれかの名前に適用<code> oldValues </code>へ渡される、 <> </> *> または<> *> メソッドです。 既定値が必要な場合は、&quot;{0}&quot;、つまり、パラメーター名は、単純なフィールド名を使用しています。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが削除操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnDeleted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが削除操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnDeleting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトは、フィルター操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnFiltering メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが挿入操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnInserted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが挿入操作を試行します。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>メソッドは、データ操作を実行する識別される方法がない場合にのみ`static`(`Shared` Visual Basic で).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnInserting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>によって識別されるオブジェクトのインスタンスを作成、<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>。"
  remarks: "データ操作を実行する識別される方法がない場合にのみ、OnObjectCreated メソッドが呼び出されます`static`(`Shared` Visual Basic で)。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>を参照してください。       OnObjectCreated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトは、データの操作を実行するビジネス オブジェクトのインスタンスを作成します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnObjectCreating メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトは、型のインスタンスを破棄します。"
  remarks: "データ操作を実行するために作成されたオブジェクトのインスタンスが破棄されたときに、OnObjectDisposing と呼びます。 `Dispose`メソッドを呼び出す場合にのみによって識別される型、<xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>プロパティを実装して、<xref:System.IDisposable>インターフェイス</xref:System.IDisposable></xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnObjectDisposing メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトがデータの取得操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnSelected メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトは、データ取得操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnSelecting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが更新操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnUpdated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>オブジェクトが更新操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnUpdating メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "<xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、またはカルチャ情報が<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>によって示される実際のプロパティの型、型のオブジェクトを構築するために文字列値を変換するときに使用するを示す値を設定"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "カルチャ情報。 既定値は<xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビュー ステートに変更を保存、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>ページがサーバーにポストされた時刻以降のオブジェクト。"
  remarks: "SaveViewState メソッドは、主にコントロールの開発者によって使用されます。       ビュー ステートが、サーバー コントロールのプロパティの値の累積します。 これらの値は<xref:System.Web.UI.Control.ViewState%2A>、<xref:System.Web.UI.StateBag>クラス</xref:System.Web.UI.StateBag>のインスタンスは、サーバー コントロールのプロパティ</xref:System.Web.UI.Control.ViewState%2A>に自動的に配置します。 <xref:System.Web.UI.Control.ViewState%2A>値が文字列オブジェクトに、サーバー コントロールのライフ サイクルの保存状態の段階の後に、永続化します</xref:System.Web.UI.Control.ViewState%2A>。       ビュー ステートの内容は、HTML に格納されている変数として、クライアントに返されますビューステートを保存すると、`Hidden`要素。 SaveViewState メソッドをオーバーライドし、効率を向上できますとカスタム サーバー コントロールを作成するときに、`ViewState`サーバー コントロールのプロパティです。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "変更を格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>それ以外の状態を表示<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトに関連付けられているビュー ステートがない場合は、します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるオブジェクトからデータを取得、 <> </> *> でメソッドを呼び出すことでプロパティを識別、 <> </> *> プロパティおよび任意の値を渡して、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>。"
  remarks: "Select メソッドの呼び出し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>渡す、`arguments`パラメーター</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> 。"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>基本的なデータの取得を超えたデータの処理を要求するために使用します。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>データ行のリスト</xref:System.Collections.IEnumerable>。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>を参照してください。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> arguments </code>渡されるデータ ソースはページングまたは取得したデータの並び替えを有効にするデータの取得中にいくつか追加の作業を実行する必要がありますが、データ ソース コントロールが要求された機能をサポートしていないことを選択するメソッドを指定します。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定メソッドまたは関数の名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>行の数を取得するコントロールを呼び出します。"
  remarks: "SelectCountMethod では、データ ソース ページングをサポートするために行の合計数を取得するために使用するビジネス オブジェクトのメソッドを識別します。 SelectCountMethod プロパティが評価される場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>プロパティに設定されている`true`</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。 詳細については、ページングは<xref:System.Web.UI.WebControls.ObjectDataSourceView><xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>を参照してください</xref:System.Web.UI.WebControls.ObjectDataSourceView>でサポートされて       ビュー内の状態でプロパティは SelectCountMethod の値が格納されています。"
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "メソッドの名前を表すまたは関数の文字列、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を使用して行の数を取得します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ取得操作が完了したときに発生します。"
  remarks: "戻り値の値を確認し、出力パラメーターまたはデータ取得操作が完了した後に例外がスローされたかどうかを決定する、選択したイベントを処理します。 戻り値、出力パラメーター、および例外処理のプロパティから使用できますが、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データの取得操作の前に発生します。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行するを選択するとイベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールはデータの取得操作を実行します</xref:System.Web.UI.WebControls.ObjectDataSource>。 パラメーターとして使用できる、<xref:System.Collections.IDictionary>によってアクセスされるコレクション、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A></xref:System.Collections.IDictionary>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定メソッドまたは関数の名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>データを取得するコントロールを呼び出します。"
  remarks: "指定したメソッドは、メソッド シグネチャを持つことができますが、それを呼び出すことが正常に<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの順序で次の表に示す種類のいずれかを返す必要があります |型を返す |アクション |  |-----------------|------------|  |<xref:System.Collections.IEnumerable>|<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される、 <xref:System.Collections.IEnumerable>|。  |<xref:System.Data.DataTable>|<xref:System.Data.DataView>が、<xref:System.Data.DataTable>を使用して作成し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。  |<xref:System.Data.DataSet>|最初の数値<xref:System.Data.DataTable>、<xref:System.Data.DataSet>が抽出され、<xref:System.Data.DataView>が作成され、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。  |<xref:System.Object>|オブジェクトが&1; つの要素<xref:System.Collections.IEnumerable>内にラップされ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッドによって返される |。      SelectMethod プロパティによって識別されるメソッドはインスタンス メソッドになるまたは`static`(`Shared` Visual Basic で) メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Collections.IEnumerable></xref:System.Object></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataView></xref:System.Data.DataSet></xref:System.Data.DataTable></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Data.DataTable></xref:System.Data.DataView></xref:System.Data.DataTable></xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.ObjectDataSource>。 インスタンス メソッドである場合は、ビジネス オブジェクトが作成され、SelectMethod メソッドが呼び出されるたびに破棄されます。 処理することができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>SelectMethod プロパティによって指定されたメソッドが呼び出される前に、ビジネス オブジェクトを使用するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>。 処理することも、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>SelectMethod プロパティによって指定されたメソッドが呼び出された後に発生するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>。 (`Dispose`ビジネス オブジェクトを実装する場合にのみ呼び出されますが、<xref:System.IDisposable>インターフェイスです)</xref:System.IDisposable> 。メソッドの場合、 `static` (`Shared` Visual Basic で)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。       ビジネス オブジェクトの場合、 <xref:System.Web.UI.WebControls.ObjectDataSource>、データ ソース コントロールでは、パラメーターのような条件のセットに応じて正しい&1; つを呼び出すしようとしましたは、1 つ以上のメソッドまたは関数と同じ名前 (メソッドのオーバー ロード) 実装で、コントロールが動作、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>コレクションです。</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> 。 場合のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>コレクションと一致しない場合、SelectMethod プロパティによって指定されたメソッドのシグネチャのデータ ソースが例外をスローします</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>。       詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>を参照してください。"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "メソッドの名前を表すまたは関数の文字列、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を使用してデータを取得します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>。"
  remarks: "名前と selectparameters のどのコレクションに含まれているパラメーターの型は、名前とによって指定されたメソッド内にあるパラメーターの型に一致する必要があります、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>プロパティの署名</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>。 など、パラメーターを提供するデータ バインド コントロールを操作するとき<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがデータ バインドされたコントロールによって提供されるこれらのパラメーターを使用して、コレクションで明示的に指定されているすべてのパラメーターを自動的にマージします</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>を参照してください。"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって指定されたメソッドで使用するパラメーターを格納している、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または並べ替えをサポートするデータ ソースの並べ替え式を指定するために使用するデータの取得メソッドのパラメーターの名前を設定します。"
  remarks: "SortParameterName プロパティは、データ ソースの並べ替えをサポートするために使用されます。 ときに、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>プロパティが設定されて、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトに渡され、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>メソッド、SortParameterName プロパティを識別して指定されたメソッドのパラメーター名、<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>ビジネス オブジェクトのプロパティを並べ替え式の値を受け入れる</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A></xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>。       ビュー内の状態で、SortParameterName プロパティの値が格納されています。"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "この並べ替え式の値を受け取るパラメーターを示すために使用されるメソッドのパラメーターの名前です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはデータ ソース ページングのサポートの結果セットから取得する最初のレコードの整数のインデックスを示すために使用されるデータの取得メソッドのパラメーターの名前を設定します。"
  remarks: "StartRowIndexParameterName プロパティは、ページングを有効に設定する必要があります。 詳細については、ページングは<xref:System.Web.UI.WebControls.ObjectDataSourceView>オブジェクトを参照してください<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>。</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A></xref:System.Web.UI.WebControls.ObjectDataSourceView>でサポートされて       ビュー内の状態でプロパティは、StartRowIndexParameterName の値が格納されています。"
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "取得する最初のレコードを示すために使用するビジネス オブジェクト メソッドのパラメーターの名前。 既定値は、&quot;startRowIndex&quot;です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.IStateManager.IsTrackingViewState*>。</xref:System.Web.UI.IStateManager.IsTrackingViewState*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>インスタンスにキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.ObjectDataSourceView>。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.ObjectDataSourceView>。"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>状態を復元します。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.ObjectDataSourceView>。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "変更を格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> 、それ以外の状態を表示<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.ObjectDataSourceView>。"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "により、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>に変更を保存できるように、ビュー ステートへの変更を追跡するオブジェクト、<xref:System.Web.UI.Control.ViewState*>制御と同じページの間で永続化された要求オブジェクト</xref:System.Web.UI.Control.ViewState*>。"
  remarks: "TrackViewState メソッドは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定クラスの名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref>制御を表します。"
  remarks: "オブジェクトのインスタンスを作成、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールのバインド先、コントロールでは、リフレクションを使用して、実行時に、型名によって識別される型を読み込めません</xref:System.Web.UI.WebControls.ObjectDataSource>。 したがって、TypeName プロパティの値では、Bin または App_Code ディレクトリに配置されているコードの部分修飾型またはアセンブリをグローバル アセンブリ キャッシュに登録されているコードの完全修飾型名を指定できます。 グローバル アセンブリ キャッシュを使用する場合への適切な参照を追加する必要があります、`assemblies`は Machine.config または Web.config 構成ファイルのセクションです。"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "オブジェクトの種類を識別する部分的または完全修飾クラス名を<xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;></xref>を表します。 既定では、空の文字列です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって識別されるメソッドを呼び出すと、更新操作を実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティで指定されるすべてのパラメーターを使用して、 <code> keys </code>、 <code> values </code>、または<code> oldValues </code>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。"
  remarks: "既定の戻り値は-1 を不明な数の行が更新されたことを意味します。 別の値を返すには、設定、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>イベント</xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>。 影響を受けた行の数がによって返される通常、`Update`ビジネス オブジェクトとその値にメソッドがから利用可能な<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>イベント</xref:System.Web.UI.WebControls.ObjectDataSource.Updated></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>。       更新メソッドの呼び出し、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>渡して、メソッド、 `keys`、 `values`、および`oldValues`パラメーター</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A> 。"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "A <xref:System.Collections.IDictionary>、キーの値を更新するアイテムを識別するために使用します</xref:System.Collections.IDictionary>。 によって指定される方法でこれらのパラメーターを使用、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティを更新操作を実行します</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: values
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>のデータ ソースに適用する新しい値</xref:System.Collections.IDictionary>。 によって指定される方法でこれらのパラメーターを使用、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティをデータベースの更新操作を実行します</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。 メソッドに関連付けられているパラメーターがない場合は、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "A<xref:System.Collections.IDictionary>データ ソース内のアイテムを照合に使用する追加の非キー値を格納している</xref:System.Collections.IDictionary>。 行の値は、削除、メソッドに渡す場合にのみ、<xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>フィールド</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>。"
    return:
      type: System.Int32
      description: "更新された行の数数が不明の場合は-1。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>。"
  remarks: "戻り値の値を確認し、出力パラメーターまたは後に例外がスローされたかどうかを決定する、更新されたイベントを処理する<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作が完了します</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>。 戻り値、出力パラメーター、および例外処理のプロパティから使用できますが、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定メソッドまたは関数の名前、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>データを更新するオブジェクトを呼び出します。"
  remarks: "<xref:System.Web.UI.WebControls.ObjectDataSourceView>オブジェクトが想定 UpdateMethod プロパティによって識別されるメソッドは、バッチ内ではなく、一度に&1; つの更新プログラムを実行します</xref:System.Web.UI.WebControls.ObjectDataSourceView>。       メソッドは、インスタンス メソッドを指定できますも`static`(`Shared` Visual Basic で) メソッドです。 インスタンス メソッドである場合は、ビジネス オブジェクトが作成され、UpdateMethod プロパティによって指定されたメソッドが呼び出されるたびに破棄されます。 処理することができます、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>UpdateMethod プロパティによって指定されたメソッドが呼び出される前に、ビジネス オブジェクトを使用するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>。 処理することも、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>UpdateMethod メソッドが呼び出された後に発生するイベントです</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>。 (`Dispose`と呼ばれる場合は、ビジネス オブジェクトを実装する場合にのみ、<xref:System.IDisposable>インターフェイスです)</xref:System.IDisposable> 。メソッドの場合、 `static` (`Shared` Visual Basic で)、メソッド、ビジネス オブジェクトは作成されず、これらのイベントを処理することはできません。       ビジネス オブジェクトの場合、<xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトは、1 つ以上のメソッドまたは関数と同じ名前 (メソッドのオーバー ロード) 実装の動作、しいものでは、パラメーターのような条件のセットに応じてを呼び出すしようとしているデータ ソース コントロール、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>コレクションです</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 場合のパラメーター、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>コレクション UpdateMethod プロパティで指定されたメソッドのシグネチャの一致しない場合、データ ソースが例外をスローします</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>。       詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>を参照してください。       ビュー内の状態で UpdateMethod プロパティの値が格納されています。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "メソッドの名前を表すまたは関数の文字列、 <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref>を使用してデータを更新します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>メソッド</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。"
  remarks: "名前と UpdateParameters コレクションに含まれているパラメーターの型は、名前とによって指定されたメソッド内にあるパラメーターの型に一致する必要があります、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>プロパティの署名</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>。 パラメーター名が影響を受けました、<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>プロパティであり、大文字小文字を区別します</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>。 など、パラメーターを提供するデータ バインド コントロールを操作するとき<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがデータ バインドされたコントロールによって提供されるこれらのパラメーターを使用して、コレクションで明示的に指定されているすべてのパラメーターを自動的にマージします</xref:System.Web.UI.WebControls.ObjectDataSource></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>。</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>を参照してください。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>プロパティ</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>。"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生する前に、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行する、更新イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールは実行、<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>操作</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A></xref:System.Web.UI.WebControls.ObjectDataSource>。 パラメーターとして使用できる、<xref:System.Collections.IDictionary>によってアクセスされるコレクション、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>によって公開される、プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクト</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs></xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A></xref:System.Collections.IDictionary>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
