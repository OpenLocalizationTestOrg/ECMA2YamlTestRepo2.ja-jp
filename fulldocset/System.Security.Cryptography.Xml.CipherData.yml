### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.CipherData
  id: CipherData
  children:
  - System.Security.Cryptography.Xml.CipherData.#ctor
  - System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  - System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  - System.Security.Cryptography.Xml.CipherData.CipherReference
  - System.Security.Cryptography.Xml.CipherData.CipherValue
  - System.Security.Cryptography.Xml.CipherData.GetXml
  - System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
  type: Class
  summary: "表す、 <xref uid=&quot;langword_csharp_&lt;CipherData&gt;&quot; name=&quot;&lt;CipherData&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。 このクラスは継承できません。"
  remarks: "CipherData クラスを表す、 `<CipherData>` XML 暗号化要素です。 暗号化されたデータを提供する必要な要素です。 Base64 でエンコードされたテキストとして、暗号化されたデータを含める必要がありますか、その、`<CipherValue>`要素を使用して、暗号化されたデータを格納している外部の場所への参照を提供したり、`<CipherReference>`要素。       多くの場合は直接 CipherData クラスの新しいインスタンスを作成する必要はありません。  <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>、 <xref:System.Security.Cryptography.Xml.EncryptedData>、および<xref:System.Security.Cryptography.Xml.EncryptedKey>クラスのインスタンスが作成されます</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData></xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>。      > [!NOTE] > A CipherData オブジェクトは、いずれかを持つことができます、<xref:System.Security.Cryptography.Xml.CipherReference>プロパティまたは<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティが、両方は使用できません</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A></xref:System.Security.Cryptography.Xml.CipherReference>。 A<xref:System.Security.Cryptography.CryptographicException>が、両方は CipherData オブジェクトに割り当てられている場合にスローされます</xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.EncryptedData> class to create an <`EncryptedData`> element that contains a <`CipherData`> element, and then writes the XML to an XML file.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/cpp/t-system.security.crypto_27_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_27_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#1](~/add/codesnippet/csharp/t-system.security.crypto_27_1.cs)]"
  syntax:
    content: public sealed class CipherData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData()
  nameWithType: CipherData.CipherData()
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherData>を表すオブジェクト、 `<CipherData>` XML 暗号化要素です</xref:System.Security.Cryptography.Xml.CipherData>。 `<CipherData>`要素は、XML 暗号化に必要な要素です。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class. The entire sample can be found in the <xref:System.Security.Cryptography.Xml.CipherData> class topic.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/cpp/m-system.security.crypto_12_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/visualbasic/m-system.security.crypto_12_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/csharp/m-system.security.crypto_12_1.cs)]"
  syntax:
    content: public CipherData ();
    parameters: []
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData(Byte[])
  nameWithType: CipherData.CipherData(Byte[])
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(Byte[])
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>クラスとしてバイト配列を使用して、<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>値</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherData>を表すオブジェクト、 `<CipherData>` XML 暗号化要素です</xref:System.Security.Cryptography.Xml.CipherData>。 コンス トラクターは、代入、`cipherValue`値を<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティとして、実際の暗号化されたデータ</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>。      > [!NOTE] >、`<CipherData>`要素は、いずれかを持つことができます、<xref:System.Security.Cryptography.Xml.CipherReference>または<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>子要素が、両方は使用できません</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A></xref:System.Security.Cryptography.Xml.CipherReference>。 A<xref:System.Security.Cryptography.CryptographicException>に両方割り当てられている場合にスローされますが、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData></xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class.  \n  \n [!code-cs[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/csharp/m-system.security.crypto_56_1.cs)]\n [!code-cpp[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/cpp/m-system.security.crypto_56_1.cpp)]\n [!code-vb[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_56_1.vb)]"
  syntax:
    content: public CipherData (byte[] cipherValue);
    parameters:
    - id: cipherValue
      type: System.Byte[]
      description: "使用する暗号化されたデータ、 <xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>cipherValue</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>プロパティは既に設定されています</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  id: '#ctor(System.Security.Cryptography.Xml.CipherReference)'
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherData(CipherReference)
  nameWithType: CipherData.CipherData(CipherReference)
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(CipherReference)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>クラスを使用して、 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>オブジェクト。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherData>を表すオブジェクト、 `<CipherData>` XML の暗号化と割り当て内の要素、`cipherReference`値を<xref:System.Security.Cryptography.Xml.CipherReference>プロパティ</xref:System.Security.Cryptography.Xml.CipherReference></xref:System.Security.Cryptography.Xml.CipherData>。 <xref:System.Security.Cryptography.Xml.CipherReference>オブジェクトが表す、`<CipherReference>`要素は、暗号化されたデータの場所を提供します</xref:System.Security.Cryptography.Xml.CipherReference>。      > [!NOTE] > A<xref:System.Security.Cryptography.Xml.CipherData>オブジェクトは、いずれかを持つことができます、<xref:System.Security.Cryptography.Xml.CipherReference>プロパティまたは<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティが、両方は使用できません</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A></xref:System.Security.Cryptography.Xml.CipherReference></xref:System.Security.Cryptography.Xml.CipherData>。 A<xref:System.Security.Cryptography.CryptographicException>に両方割り当てられている場合にスローされますが、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData></xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class using <xref:System.Security.Cryptography.Xml.CipherReference> information.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/05ff695b-fd83-4697-9e55-_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/05ff695b-fd83-4697-9e55-_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/05ff695b-fd83-4697-9e55-_1.cpp)]"
  syntax:
    content: public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);
    parameters:
    - id: cipherReference
      type: System.Security.Cryptography.Xml.CipherReference
      description: "<xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>を使用するオブジェクト。"
  overload: System.Security.Cryptography.Xml.CipherData.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>cipherValue</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>プロパティは既に設定されています</xref:System.Security.Cryptography.Xml.CipherData.CipherValue*>。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference
  id: CipherReference
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherReference
  nameWithType: CipherData.CipherReference
  fullName: System.Security.Cryptography.Xml.CipherData.CipherReference
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref>要素。"
  remarks: "`<CipherReference>`要素は、送信元を識別するには、処理されると、暗号化されたデータが得られます。 この要素の詳細については、 <xref:System.Security.Cryptography.Xml.CipherReference>。</xref:System.Security.Cryptography.Xml.CipherReference>を参照してください。      > [!NOTE] > A<xref:System.Security.Cryptography.Xml.CipherData>オブジェクトは、いずれかを持つことができます、<xref:System.Security.Cryptography.Xml.CipherReference>プロパティまたは<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティが、両方は使用できません</xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A></xref:System.Security.Cryptography.Xml.CipherReference></xref:System.Security.Cryptography.Xml.CipherData>。 A<xref:System.Security.Cryptography.CryptographicException>に両方割り当てられている場合にスローされますが、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData></xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class using <xref:System.Security.Cryptography.Xml.CipherReference> information.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/p-system.security.crypto_76_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/p-system.security.crypto_76_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/p-system.security.crypto_76_1.cpp)]"
  syntax:
    content: public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherReference
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.CipherData.CipherReference*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CipherReference プロパティに設定された<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "CipherReference プロパティが複数回設定されました。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue
  id: CipherValue
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: CipherValue
  nameWithType: CipherData.CipherValue
  fullName: System.Security.Cryptography.Xml.CipherData.CipherValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;> </xref>要素。"
  remarks: "値は、暗号化されたデータです。      > [!NOTE] >、`<CipherData>`要素は、いずれかを持つことができます、<xref:System.Security.Cryptography.Xml.CipherReference>または CipherValue の子要素が、両方は使用できません</xref:System.Security.Cryptography.Xml.CipherReference>。 A<xref:System.Security.Cryptography.CryptographicException>に両方割り当てられている場合にスローされますが、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData></xref:System.Security.Cryptography.CryptographicException>。"
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> class.  \n  \n [!code-cs[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/csharp/p-system.security.crypto_77_1.cs)]\n [!code-cpp[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/cpp/p-system.security.crypto_77_1.cpp)]\n [!code-vb[cryptography.Xml.EncryptedData2#1](~/add/codesnippet/visualbasic/p-system.security.crypto_77_1.vb)]"
  syntax:
    content: public byte[] CipherValue { get; set; }
    return:
      type: System.Byte[]
      description: "表すバイト配列、 <xref uid=&quot;langword_csharp_&lt;CipherValue&gt;&quot; name=&quot;&lt;CipherValue&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Security.Cryptography.Xml.CipherData.CipherValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CipherValue プロパティに設定された<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "CipherValue プロパティが複数回設定されました。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: GetXml()
  nameWithType: CipherData.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherData.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 値を取得、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>オブジェクト。"
  remarks: "このメソッドの XML の出力を使用して、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData>。"
  example:
  - "The following code example demonstrates how to create a new instance of the <xref:System.Security.Cryptography.Xml.CipherData> object.  \n  \n [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/cpp/m-system.security.crypto_32_1.cpp)]\n [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/visualbasic/m-system.security.crypto_32_1.vb)]\n [!code-cs[cryptgraphy.Xml.EncryptedData#2](~/add/codesnippet/csharp/m-system.security.crypto_32_1.cs)]"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "A <xref href=&quot;System.Xml.XmlElement&quot;> </xref>の XML の情報を表すオブジェクト、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>オブジェクト。"
  overload: System.Security.Cryptography.Xml.CipherData.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> プロパティおよび<> *> プロパティには<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherData
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: CipherData.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherData.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML データを読み込み、 <xref href=&quot;System.Xml.XmlElement&quot;> </xref>に、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>オブジェクト。"
  remarks: "LoadXml メソッドで既存の XML 要素を上書きする、`value`パラメーター。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>読み込む XML データを表すです。"
  overload: System.Security.Cryptography.Xml.CipherData.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<> </> *> プロパティおよび<> *> プロパティには<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Security.Cryptography.Xml.CipherData.#ctor
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData()
  nameWithType: CipherData.CipherData()
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData()
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData(Byte[])
  nameWithType: CipherData.CipherData(Byte[])
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData(CipherReference)
  nameWithType: CipherData.CipherData(CipherReference)
  fullName: System.Security.Cryptography.Xml.CipherData.CipherData(CipherReference)
- uid: System.Security.Cryptography.Xml.CipherReference
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherReference
  nameWithType: CipherReference
  fullName: System.Security.Cryptography.Xml.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherReference
  nameWithType: CipherData.CipherReference
  fullName: System.Security.Cryptography.Xml.CipherData.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherValue
  nameWithType: CipherData.CipherValue
  fullName: System.Security.Cryptography.Xml.CipherData.CipherValue
- uid: System.Security.Cryptography.Xml.CipherData.GetXml
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: GetXml()
  nameWithType: CipherData.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherData.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: CipherData.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherData.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.CipherData.#ctor*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherData
  nameWithType: CipherData.CipherData
- uid: System.Security.Cryptography.Xml.CipherData.CipherReference*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherReference
  nameWithType: CipherData.CipherReference
- uid: System.Security.Cryptography.Xml.CipherData.CipherValue*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: CipherValue
  nameWithType: CipherData.CipherValue
- uid: System.Security.Cryptography.Xml.CipherData.GetXml*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: GetXml
  nameWithType: CipherData.GetXml
- uid: System.Security.Cryptography.Xml.CipherData.LoadXml*
  parent: System.Security.Cryptography.Xml.CipherData
  isExternal: false
  name: LoadXml
  nameWithType: CipherData.LoadXml
