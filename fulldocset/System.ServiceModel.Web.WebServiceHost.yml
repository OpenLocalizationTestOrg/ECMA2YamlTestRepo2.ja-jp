### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Web.WebServiceHost
  id: WebServiceHost
  children:
  - System.ServiceModel.Web.WebServiceHost.#ctor
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  - System.ServiceModel.Web.WebServiceHost.OnOpening
  langs:
  - csharp
  name: WebServiceHost
  nameWithType: WebServiceHost
  fullName: System.ServiceModel.Web.WebServiceHost
  type: Class
  summary: "A <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref>派生クラスでは、補完、 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] REST プログラミング モデルです。"
  remarks: "Webservicehost によって、サービスの説明にエンドポイントが見つからない場合、自動的に、HTTP および HTTPS ベース アドレスのサービスのベース アドレスに既定のエンドポイントを作成します。 これは作成されませんエンドポイントに自動的にユーザーがベース アドレスでエンドポイントを明示的に構成された場合。 Webservicehost によって自動的にセキュリティで保護された仮想ディレクトリで使用されるときに、関連付けられているインターネット インフォメーション サービス (IIS) セキュリティ設定を使用するエンドポイントのバインディングを構成します。       既定の HTTP エンドポイントを作成するときに、webservicehost によっても無効に、HTTP ヘルプ ページと Web サービス記述言語 (WSDL) GET 機能メタデータのエンドポイントが既定の HTTP エンドポイントに干渉しないようにします。       さらに、webservicehost によってクラスを追加、<xref:System.ServiceModel.Description.WebHttpBehavior>され動作ではない、 <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>。</xref:System.ServiceModel.Configuration.WebMessageEncodingElement>すべてのエンドポイントに</xref:System.ServiceModel.Description.WebHttpBehavior> サービス上のすべての操作のいずれか空の HTTP 要求本体または HTTP 要求本体をストリームとして扱う場合は、その、webservicehost によっては、バインディングの適切なコンテンツ タイプ マッパーを自動的に構成されます。"
  example:
  - "The following example shows how to use the WebServiceHost class to host a service that makes use of the [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] REST programming model.  \n  \n [!code-cs[WebServiceHost#0](~/add/codesnippet/csharp/t-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#0](~/add/codesnippet/visualbasic/t-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: 'public class WebServiceHost : System.ServiceModel.ServiceHost'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  - System.ServiceModel.ServiceHostBase
  - System.ServiceModel.ServiceHost
  implements: []
  inheritedMembers:
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHost.ApplyConfiguration
  - System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHost.OnClosed
  - System.ServiceModel.ServiceHost.SingletonInstance
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref>クラスです。"
  syntax:
    content: public WebServiceHost ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  id: '#ctor(System.Object,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref>指定されたシングルトン サーバー インスタンスとベース アドレスを持つクラス。"
  remarks: "`baseAddresses`パラメーターは、1 つまたは複数のベース アドレスで構成できます。"
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#1](~/add/codesnippet/csharp/m-system.servicemodel.we_1_1.cs)]\n [!code-vb[WebServiceHost#1](~/add/codesnippet/visualbasic/m-system.servicemodel.we_1_1.vb)]"
  syntax:
    content: public WebServiceHost (object singletonInstance, Uri[] baseAddresses);
    parameters:
    - id: singletonInstance
      type: System.Object
      description: "シングルトン インスタンスとして使用するサービス インスタンス。"
    - id: baseAddresses
      type: System.Uri[]
      description: "サービスのベース アドレス。"
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  id: '#ctor(System.Type,System.Uri[])'
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref>指定したサービス型とベース アドレスを持つクラス。"
  remarks: "`baseAddresses`パラメーターは、1 つまたは複数のベース アドレスで構成できます。"
  example:
  - "The following example shows how to call this constructor.  \n  \n [!code-cs[WebServiceHost#2](~/add/codesnippet/csharp/m-system.servicemodel.we_0_1.cs)]\n [!code-vb[WebServiceHost#2](~/add/codesnippet/visualbasic/m-system.servicemodel.we_0_1.vb)]"
  syntax:
    content: public WebServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "サービスの種類。"
    - id: baseAddresses
      type: System.Uri[]
      description: "サービスのベース アドレス。"
  overload: System.ServiceModel.Web.WebServiceHost.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  id: OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  langs:
  - csharp
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Web
  summary: "ときに呼び出されます、 <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref>インスタンスが開きます。"
  remarks: "このメソッドが呼び出されたときに、次が発生する: 1。  場合<xref:System.ServiceModel.Web.WebServiceHost>エンドポイントが見つからないサービスの説明に、サービスのベース アドレスに既定のエンドポイントを作成します</xref:System.ServiceModel.Web.WebServiceHost>。 <xref:System.ServiceModel.Web.WebServiceHost>自動的に、メタデータ エンドポイントが既定の HTTP エンドポイントに干渉しないように、HTTP ヘルプ ページと WSDL の GET 機能を無効にします。</xref:System.ServiceModel.Web.WebServiceHost>      2.  <xref:System.ServiceModel.Web.WebServiceHost>すべてのエンドポイントを使用して、<xref:System.ServiceModel.WebHttpBinding>必要な<xref:System.ServiceModel.Description.WebHttpBehavior>。</xref:System.ServiceModel.Description.WebHttpBehavior>がないか確認する</xref:System.ServiceModel.WebHttpBinding>ことを確認します。</xref:System.ServiceModel.Web.WebServiceHost> 存在しない場合は<xref:System.ServiceModel.Web.WebServiceHost>を追加、<xref:System.ServiceModel.Description.WebHttpBehavior>エンドポイント</xref:System.ServiceModel.Description.WebHttpBehavior></xref:System.ServiceModel.Web.WebServiceHost>。      3.  <xref:System.ServiceModel.Web.WebServiceHost>セキュリティで保護された仮想ディレクトリで使用すると、関連付けられている IIS セキュリティ設定を使用するエンドポイントのバインディングを構成します。</xref:System.ServiceModel.Web.WebServiceHost>"
  syntax:
    content: protected override void OnOpening ();
    parameters: []
  overload: System.ServiceModel.Web.WebServiceHost.OnOpening*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.ServiceHost
  isExternal: false
  name: System.ServiceModel.ServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.#ctor
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost()
  nameWithType: WebServiceHost.WebServiceHost()
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Object,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Object,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Object,Uri[])
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost(Type,Uri[])
  nameWithType: WebServiceHost.WebServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Web.WebServiceHost.WebServiceHost(Type,Uri[])
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening()
  nameWithType: WebServiceHost.OnOpening()
  fullName: System.ServiceModel.Web.WebServiceHost.OnOpening()
- uid: System.ServiceModel.Web.WebServiceHost.#ctor*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: WebServiceHost
  nameWithType: WebServiceHost.WebServiceHost
- uid: System.ServiceModel.Web.WebServiceHost.OnOpening*
  parent: System.ServiceModel.Web.WebServiceHost
  isExternal: false
  name: OnOpening
  nameWithType: WebServiceHost.OnOpening
