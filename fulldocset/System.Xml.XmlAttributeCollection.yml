### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlAttributeCollection
  id: XmlAttributeCollection
  children:
  - System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  - System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  - System.Xml.XmlAttributeCollection.ItemOf(System.String)
  - System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  - System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  - System.Xml.XmlAttributeCollection.RemoveAll
  - System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  - System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  - System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  langs:
  - csharp
  name: XmlAttributeCollection
  nameWithType: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
  type: Class
  summary: "名前またはインデックスによってアクセスできる属性のコレクションを表します。"
  remarks: '`XmlAttributeCollection`拡張、<xref:System.Xml.XmlNamedNodeMap>厳密に追加することでクラスにヘルパー メソッドが型指定された</xref:System.Xml.XmlNamedNodeMap>。 このクラスは、追加、削除、またはコレクション内の属性の変更に使用できます。 `XmlAttributeCollection`によって返される、<xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>プロパティ</xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName>。'
  syntax:
    content: 'public sealed class XmlAttributeCollection : System.Xml.XmlNamedNodeMap, System.Collections.ICollection'
  inheritance:
  - System.Object
  - System.Xml.XmlNamedNodeMap
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Xml.XmlNamedNodeMap.Count
  - System.Xml.XmlNamedNodeMap.GetEnumerator
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.GetNamedItem(System.String,System.String)
  - System.Xml.XmlNamedNodeMap.Item(System.Int32)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String)
  - System.Xml.XmlNamedNodeMap.RemoveNamedItem(System.String,System.String)
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  id: Append(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Append(XmlAttribute)
  nameWithType: XmlAttributeCollection.Append(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Append(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "コレクションの最後のノードとして指定された属性を挿入します。"
  remarks: "元の属性がコレクションから削除して、同じ名前を持つ属性が既に場合、コレクション内にあると`node`がコレクションの末尾に追加します。       このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_0_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_0_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.Append Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_0_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Append (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>を挿入します。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>コレクションに追加します。"
  overload: System.Xml.XmlAttributeCollection.Append*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>別のこのコレクションを作成したドキュメントから作成されました。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  id: CopyTo(System.Xml.XmlAttribute[],System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: CopyTo(XmlAttribute[],Int32)
  nameWithType: XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  fullName: System.Xml.XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "すべてをコピー、 <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>渡された配列には、このコレクションからオブジェクト。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example uses `CopyTo` to copy all the attributes in the collection into an array.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/csharp/4c983b8e-d75c-4af8-ade8-_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/visualbasic/4c983b8e-d75c-4af8-ade8-_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.CopyTo Example#1](~/add/codesnippet/cpp/4c983b8e-d75c-4af8-ade8-_1.cpp)]"
  syntax:
    content: public void CopyTo (System.Xml.XmlAttribute[] array, int index);
    parameters:
    - id: array
      type: System.Xml.XmlAttribute[]
      description: "このコレクションからコピーされるオブジェクトのコピー先の配列。"
    - id: index
      type: System.Int32
      description: "コピー開始位置、配列内のインデックス。"
  overload: System.Xml.XmlAttributeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: InsertAfter(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定した属性は、指定した参照属性の直後後に挿入します。"
  remarks: "元の属性をコレクションから削除は、同じ名前の属性が、コレクション内にある既に場合および`newNode`コレクションに挿入します。 場合`refNode`は`null`、`newNode`コレクションの先頭に挿入します。       このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/csharp/5f833ef4-9523-4108-8425-_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/cpp/5f833ef4-9523-4108-8425-_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.InsertAfter Example#1](~/add/codesnippet/visualbasic/5f833ef4-9523-4108-8425-_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute InsertAfter (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>を挿入します。"
    - id: refNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>参照属性はします。 `newNode`後に置かれます、`refNode`です。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>コレクションに挿入します。"
  overload: System.Xml.XmlAttributeCollection.InsertAfter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newNode </code>別のこのコレクションを作成したドキュメントから作成されました。 または、 <code> refNode </code>このコレクションのメンバーではありません。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  id: InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: InsertBefore(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定した参照属性の直前に指定された属性を挿入します。"
  remarks: "元の属性をコレクションから削除は、同じ名前の属性が、コレクション内にある既に場合および`newNode`コレクションに挿入します。 場合`refNode`は`null`、`newNode`コレクションの末尾に挿入します。       このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/csharp/91d2f4bf-8aeb-427a-a43e-_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/visualbasic/91d2f4bf-8aeb-427a-a43e-_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.InsertBefore Example#1](~/add/codesnippet/cpp/91d2f4bf-8aeb-427a-a43e-_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute InsertBefore (System.Xml.XmlAttribute newNode, System.Xml.XmlAttribute refNode);
    parameters:
    - id: newNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>を挿入します。"
    - id: refNode
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>参照属性はします。 `newNode`前に配置されて、`refNode`です。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>コレクションに挿入します。"
  overload: System.Xml.XmlAttributeCollection.InsertBefore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> newNode </code>別のこのコレクションを作成したドキュメントから作成されました。 または、 <code> refNode </code>このコレクションのメンバーではありません。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  id: ItemOf(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(Int32)
  nameWithType: XmlAttributeCollection.ItemOf(Int32)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(Int32)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定したインデックスの属性を取得します。"
  remarks: "このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。 これは<xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=fullName>。</xref:System.Xml.XmlNamedNodeMap.Item%2A?displayProperty=fullName>を呼び出すことに相当"
  example:
  - "The following example displays all the attributes in the collection.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_5_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_5_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.this Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_5_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "属性のインデックス。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>指定したインデックス位置。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "引き渡された index が範囲外です。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String)
  id: ItemOf(System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(String)
  nameWithType: XmlAttributeCollection.ItemOf(String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定した名前の属性を取得します。"
  remarks: "このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。 これは<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>を呼び出すことに相当"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/cpp/p-system.xml.xmlattribut_0_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/csharp/p-system.xml.xmlattribut_0_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlattribut_0_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "属性の修飾名。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>指定した名前です。 このプロパティを返しますのかどうかは、属性が存在しない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  id: ItemOf(System.String,System.String)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: ItemOf(String,String)
  nameWithType: XmlAttributeCollection.ItemOf(String,String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String,String)
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定されたローカル名および名前空間 (Uniform Resource Identifier) の属性を取得します。"
  remarks: "このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。 これは<xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>。</xref:System.Xml.XmlNamedNodeMap.GetNamedItem%2A>を呼び出すことに相当"
  syntax:
    content: public System.Xml.XmlAttribute this[string localName, string namespaceURI] { get; }
    parameters:
    - id: localName
      type: System.String
      description: "属性のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は、属性の URI であります。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>指定されたローカル名と名前空間 URI を使用します。 このプロパティを返しますのかどうかは、属性が存在しない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XmlAttributeCollection.ItemOf*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  id: Prepend(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Prepend(XmlAttribute)
  nameWithType: XmlAttributeCollection.Prepend(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Prepend(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "コレクションの最初のノードとして指定された属性を挿入します。"
  remarks: "元の属性がコレクションから削除して、同じ名前を持つ属性が既に場合、コレクション内にあると`node`がコレクションの先頭に追加します。       このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_4_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_4_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.Prepend Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_4_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Prepend (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>を挿入します。"
    return:
      type: System.Xml.XmlAttribute
      description: "<xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>コレクションに追加します。"
  overload: System.Xml.XmlAttributeCollection.Prepend*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  id: Remove(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: Remove(XmlAttribute)
  nameWithType: XmlAttributeCollection.Remove(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Remove(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定された属性をコレクションから削除します。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_5_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_5_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_5_1.vb)]"
  syntax:
    content: public System.Xml.XmlAttribute Remove (System.Xml.XmlAttribute node);
    parameters:
    - id: node
      type: System.Xml.XmlAttribute
      description: "<xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>を削除します。"
    return:
      type: System.Xml.XmlAttribute
      description: "削除されたノードまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>がコレクション内で見つからない場合。"
  overload: System.Xml.XmlAttributeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: XmlAttributeCollection.RemoveAll()
  fullName: System.Xml.XmlAttributeCollection.RemoveAll()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "コレクションからすべての属性を削除します。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example removes all attributes from the document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_3_1.cs)]\n [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_3_1.cpp)]\n [!code-vb[Classic WebData XmlAttributeCollection.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_3_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Xml.XmlAttributeCollection.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: XmlAttributeCollection.RemoveAt(Int32)
  fullName: System.Xml.XmlAttributeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "コレクションから指定したインデックスに対応する属性を削除します。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example removes an attribute from the document.  \n  \n [!code-cs[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_2_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_2_1.vb)]\n [!code-cpp[Classic WebData XmlAttributeCollection.RemoveAt Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_2_1.cpp)]"
  syntax:
    content: public System.Xml.XmlAttribute RemoveAt (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "削除するノードのインデックス。 最初のノードには、インデックス 0 があります。"
    return:
      type: System.Xml.XmlAttribute
      description: "返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>指定したインデックス位置に属性がない場合。"
  overload: System.Xml.XmlAttributeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  id: SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: SetNamedItem(XmlNode)
  nameWithType: XmlAttributeCollection.SetNamedItem(XmlNode)
  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "追加、 <xref href=&quot;System.Xml.XmlNode&quot;> </xref>その<xref:System.Xml.XmlNode.Name*>プロパティ</xref:System.Xml.XmlNode.Name*>を使用します。"
  remarks: ''
  example:
  - "The following example adds a new attribute to a document.  \n  \n [!code-cpp[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/cpp/m-system.xml.xmlattribut_6_1.cpp)]\n [!code-cs[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/csharp/m-system.xml.xmlattribut_6_1.cs)]\n [!code-vb[Classic WebData XmlAttributeCollection.SetNamedItem Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlattribut_6_1.vb)]"
  syntax:
    content: public override System.Xml.XmlNode SetNamedItem (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "このコレクションに格納する属性ノード。 ノードに後で、ノードの名前を使用してアクセスできます。 新しいによって置き換えられる場合はその名前を持つノードでは、既にコレクションに存在、それ以外の場合、ノードは、コレクションの末尾に追加されます。"
    return:
      type: System.Xml.XmlNode
      description: "場合、 <code> node </code>置き換えます。 置き換え前のノード、同じ名前の既存のノードを返します。 それ以外の場合、追加されたノードが返されます。"
  overload: System.Xml.XmlAttributeCollection.SetNamedItem*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>異なるから作成された<xref href=&quot;System.Xml.XmlDocument&quot;></xref>よりも、このコレクションを作成します。       これは、 <xref uid=&quot;langword_csharp_XmlAttributeCollection&quot; name=&quot;XmlAttributeCollection&quot; href=&quot;&quot;> </xref>は読み取り専用です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>node</code><xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>に別の属性ではない<xref href=&quot;System.Xml.XmlElement&quot;></xref>オブジェクト。 その他の要素の属性を再利用するには、複製する必要があります、 <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref>再利用するオブジェクトします。"
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Xml.XmlAttributeCollection.CopyTo%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.XmlAttributeCollection>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Xml.XmlAttributeCollection>。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "このコレクションからコピーされるオブジェクトのコピー先の配列。"
    - id: index
      type: System.Int32
      description: "コピー開始位置、配列内のインデックス。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  id: System#Collections#ICollection#Count
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "このメンバーの説明、ICollection.Count を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.XmlAttributeCollection>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Xml.XmlAttributeCollection>。"
  syntax:
    content: int System.Collections.ICollection.Count { get; }
    return:
      type: System.Int32
      description: "返します、 <xref uid=&quot;langword_csharp_int&quot; name=&quot;int&quot; href=&quot;&quot;> </xref>属性の数を格納しています。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "このメンバーの説明、ICollection.IsSynchronized を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.XmlAttributeCollection>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Xml.XmlAttributeCollection>。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コレクションが同期されている場合。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Xml.XmlAttributeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "このメンバーの説明、ICollection.SyncRoot を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.XmlAttributeCollection>にインスタンスをキャスト、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection></xref:System.Xml.XmlAttributeCollection>。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "返します、<xref:System.Object>つまりコレクションのルート</xref:System.Object>。"
  overload: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNamedNodeMap
  isExternal: false
  name: System.Xml.XmlNamedNodeMap
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlAttributeCollection.Append(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Append(XmlAttribute)
  nameWithType: XmlAttributeCollection.Append(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Append(XmlAttribute)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.XmlAttributeCollection.CopyTo(System.Xml.XmlAttribute[],System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: CopyTo(XmlAttribute[],Int32)
  nameWithType: XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
  fullName: System.Xml.XmlAttributeCollection.CopyTo(XmlAttribute[],Int32)
- uid: System.Xml.XmlAttribute[]
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute[]
  spec.csharp:
  - uid: System.Xml.XmlAttribute
    name: XmlAttribute
    nameWithType: XmlAttribute
    fullName: XmlAttribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlAttributeCollection.InsertAfter(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertAfter(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertAfter(XmlAttribute,XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.InsertBefore(System.Xml.XmlAttribute,System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertBefore(XmlAttribute,XmlAttribute)
  nameWithType: XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.InsertBefore(XmlAttribute,XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(Int32)
  nameWithType: XmlAttributeCollection.ItemOf(Int32)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(Int32)
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(String)
  nameWithType: XmlAttributeCollection.ItemOf(String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlAttributeCollection.ItemOf(System.String,System.String)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf(String,String)
  nameWithType: XmlAttributeCollection.ItemOf(String,String)
  fullName: System.Xml.XmlAttributeCollection.ItemOf(String,String)
- uid: System.Xml.XmlAttributeCollection.Prepend(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Prepend(XmlAttribute)
  nameWithType: XmlAttributeCollection.Prepend(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Prepend(XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.Remove(System.Xml.XmlAttribute)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Remove(XmlAttribute)
  nameWithType: XmlAttributeCollection.Remove(XmlAttribute)
  fullName: System.Xml.XmlAttributeCollection.Remove(XmlAttribute)
- uid: System.Xml.XmlAttributeCollection.RemoveAll
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlAttributeCollection.RemoveAll()
  fullName: System.Xml.XmlAttributeCollection.RemoveAll()
- uid: System.Xml.XmlAttributeCollection.RemoveAt(System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: XmlAttributeCollection.RemoveAt(Int32)
  fullName: System.Xml.XmlAttributeCollection.RemoveAt(Int32)
- uid: System.Xml.XmlAttributeCollection.SetNamedItem(System.Xml.XmlNode)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: SetNamedItem(XmlNode)
  nameWithType: XmlAttributeCollection.SetNamedItem(XmlNode)
  fullName: System.Xml.XmlAttributeCollection.SetNamedItem(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.Count
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Xml.XmlAttributeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XmlAttributeCollection.Append*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Append
  nameWithType: XmlAttributeCollection.Append
- uid: System.Xml.XmlAttributeCollection.CopyTo*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: CopyTo
  nameWithType: XmlAttributeCollection.CopyTo
- uid: System.Xml.XmlAttributeCollection.InsertAfter*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertAfter
  nameWithType: XmlAttributeCollection.InsertAfter
- uid: System.Xml.XmlAttributeCollection.InsertBefore*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: InsertBefore
  nameWithType: XmlAttributeCollection.InsertBefore
- uid: System.Xml.XmlAttributeCollection.ItemOf*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: ItemOf
  nameWithType: XmlAttributeCollection.ItemOf
- uid: System.Xml.XmlAttributeCollection.Prepend*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Prepend
  nameWithType: XmlAttributeCollection.Prepend
- uid: System.Xml.XmlAttributeCollection.Remove*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: Remove
  nameWithType: XmlAttributeCollection.Remove
- uid: System.Xml.XmlAttributeCollection.RemoveAll*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAll
  nameWithType: XmlAttributeCollection.RemoveAll
- uid: System.Xml.XmlAttributeCollection.RemoveAt*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: XmlAttributeCollection.RemoveAt
- uid: System.Xml.XmlAttributeCollection.SetNamedItem*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: SetNamedItem
  nameWithType: XmlAttributeCollection.SetNamedItem
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#CopyTo*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.CopyTo
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#Count*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.Count
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.Count
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Xml.XmlAttributeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Xml.XmlAttributeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: XmlAttributeCollection.System.Collections.ICollection.SyncRoot
