### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.InvokePattern
  id: InvokePattern
  children:
  - System.Windows.Automation.InvokePattern.Invoke
  - System.Windows.Automation.InvokePattern.InvokedEvent
  - System.Windows.Automation.InvokePattern.Pattern
  langs:
  - csharp
  name: InvokePattern
  nameWithType: InvokePattern
  fullName: System.Windows.Automation.InvokePattern
  type: Class
  summary: "開始または単一の明確なアクションを実行し、アクティブになったときの状態を保持しないコントロールを表します。"
  remarks: "コントロールは、同じ動作が別のコントロール パターンを通じて公開されていない場合、InvokePattern をサポートします。 たとえば場合、<xref:System.Windows.Automation.InvokePattern.Invoke%2A>コントロールのメソッドとして同じアクションを実行、<xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A>または<xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A>メソッド、コントロールは、InvokePattern をサポートしていません</xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A></xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A></xref:System.Windows.Automation.InvokePattern.Invoke%2A>。       [!INCLUDE[TLA2#tla_uiautomation](~/add/includes/tla2sharptla-uiautomation-md.md)]オプション ボタンは、状態を維持するには、チェック ボックスなどのコントロールを表す要素は、代わりに<xref:System.Windows.Automation.TogglePattern>または<xref:System.Windows.Automation.SelectionItemPattern>。</xref:System.Windows.Automation.SelectionItemPattern></xref:System.Windows.Automation.TogglePattern>にサポートします。"
  syntax:
    content: 'public class InvokePattern : System.Windows.Automation.BasePattern'
  inheritance:
  - System.Object
  - System.Windows.Automation.BasePattern
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Invoke
  id: Invoke
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
  type: Method
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "コントロールをアクティブ化し、1 つの明確なアクションを開始する要求を送信します。"
  remarks: "Invoke の呼び出しは、ブロックすることがなくすぐに返す必要があります。 ただし、この動作は完全に依存、[!INCLUDE[TLA#tla_uiautomation](~/add/includes/tlasharptla-uiautomation-md.md)]プロバイダーの実装です。 Invoke を呼び出すことによって、モーダル ダイアログ ボックス) (など、ブロッキング懸案事項、別のヘルパーのシナリオでは、スレッドはメソッドを呼び出す必要があります。"
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern>control pattern is obtained from a control and the Invoke method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public void Invoke ();
    parameters: []
  overload: System.Windows.Automation.InvokePattern.Invoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "要素はサポートしていません、 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref>コントロール パターンが非表示またはブロックします。"
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "要素は無効です。 UI オートメーション プロバイダーが独自の処理を実装した場合に発生することができます、<xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>プロパティ</xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsEnabled*>。"
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  id: InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "コントロールが呼び出されるまたはアクティブ化されたときに発生するイベントを識別します。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは<xref:System.Windows.Automation.InvokePatternIdentifiers>。</xref:System.Windows.Automation.InvokePatternIdentifiers>で同等のフィールドを使用する必要があります。       <xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A>。</xref:System.Windows.Automation.Automation.AddAutomationEventHandler%2A> InvokedEvent 識別子が、パラメーターとして渡される"
  example:
  - "In the following example, the event handler identifies the event as an Invoked event by comparing the <xref:System.Windows.Automation.AutomationEventArgs.EventId%2A> in the event arguments with the InvokedEvent identifier field.  \n  \n [!code-vb[UIAClient_snip#101](~/add/codesnippet/visualbasic/UIAClient_snip/ClientForm.vb#101)]\n [!code-cs[UIAClient_snip#101](~/add/codesnippet/csharp/CustomElementClient/ClientForm.cs#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationEvent InvokedEvent;
    return:
      type: System.Windows.Automation.AutomationEvent
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.InvokePattern.Pattern
  id: Pattern
  parent: System.Windows.Automation.InvokePattern
  langs:
  - csharp
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
  type: Field
  assemblies:
  - UIAutomationClient
  namespace: System.Windows.Automation
  summary: "識別、 <xref href=&quot;System.Windows.Automation.InvokePattern&quot;> </xref>コントロール パターン。"
  remarks: "この識別子は、UI オートメーション クライアント アプリケーションによって使用されます。 UI オートメーション プロバイダーは<xref:System.Windows.Automation.InvokePatternIdentifiers>。</xref:System.Windows.Automation.InvokePatternIdentifiers>で同等のフィールドを使用する必要があります。       パターン識別子が<xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>指定された<xref:System.Windows.Automation.AutomationElement>。</xref:System.Windows.Automation.AutomationElement>から目的のコントロール パターンを取得する</xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A>などのメソッドに渡される"
  example:
  - "In the following example an <xref:System.Windows.Automation.InvokePattern> control pattern is obtained from a control and the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method is called.  \n  \n [!code-cs[UIAInvokePattern_snip#101](~/add/codesnippet/csharp/UIAInvokePattern_snip/UIAInvokePattern_snippets.cs#101)]\n [!code-vb[UIAInvokePattern_snip#101](~/add/codesnippet/visualbasic/UIAInvokePattern_snip/UIAInvokePattern_snippets.vb#101)]"
  syntax:
    content: public static readonly System.Windows.Automation.AutomationPattern Pattern;
    return:
      type: System.Windows.Automation.AutomationPattern
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Automation.BasePattern
  isExternal: false
  name: System.Windows.Automation.BasePattern
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.InvokePattern.Invoke
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke()
  nameWithType: InvokePattern.Invoke()
  fullName: System.Windows.Automation.InvokePattern.Invoke()
- uid: System.Windows.Automation.InvokePattern.InvokedEvent
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: InvokedEvent
  nameWithType: InvokePattern.InvokedEvent
  fullName: System.Windows.Automation.InvokePattern.InvokedEvent
- uid: System.Windows.Automation.AutomationEvent
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationEvent
  nameWithType: AutomationEvent
  fullName: System.Windows.Automation.AutomationEvent
- uid: System.Windows.Automation.InvokePattern.Pattern
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Pattern
  nameWithType: InvokePattern.Pattern
  fullName: System.Windows.Automation.InvokePattern.Pattern
- uid: System.Windows.Automation.AutomationPattern
  parent: System.Windows.Automation
  isExternal: false
  name: AutomationPattern
  nameWithType: AutomationPattern
  fullName: System.Windows.Automation.AutomationPattern
- uid: System.Windows.Automation.InvokePattern.Invoke*
  parent: System.Windows.Automation.InvokePattern
  isExternal: false
  name: Invoke
  nameWithType: InvokePattern.Invoke
