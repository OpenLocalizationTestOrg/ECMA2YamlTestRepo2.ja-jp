### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IHttpSessionState
  id: IHttpSessionState
  children:
  - System.Web.SessionState.IHttpSessionState.Abandon
  - System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  - System.Web.SessionState.IHttpSessionState.Clear
  - System.Web.SessionState.IHttpSessionState.CodePage
  - System.Web.SessionState.IHttpSessionState.CookieMode
  - System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  - System.Web.SessionState.IHttpSessionState.Count
  - System.Web.SessionState.IHttpSessionState.GetEnumerator
  - System.Web.SessionState.IHttpSessionState.IsCookieless
  - System.Web.SessionState.IHttpSessionState.IsNewSession
  - System.Web.SessionState.IHttpSessionState.IsReadOnly
  - System.Web.SessionState.IHttpSessionState.IsSynchronized
  - System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  - System.Web.SessionState.IHttpSessionState.Item(System.String)
  - System.Web.SessionState.IHttpSessionState.Keys
  - System.Web.SessionState.IHttpSessionState.LCID
  - System.Web.SessionState.IHttpSessionState.Mode
  - System.Web.SessionState.IHttpSessionState.Remove(System.String)
  - System.Web.SessionState.IHttpSessionState.RemoveAll
  - System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  - System.Web.SessionState.IHttpSessionState.SessionID
  - System.Web.SessionState.IHttpSessionState.StaticObjects
  - System.Web.SessionState.IHttpSessionState.SyncRoot
  - System.Web.SessionState.IHttpSessionState.Timeout
  langs:
  - csharp
  name: IHttpSessionState
  nameWithType: IHttpSessionState
  fullName: System.Web.SessionState.IHttpSessionState
  type: Interface
  summary: "カスタム セッション状態のコンテナーを実装するためのコントラクトを定義します。"
  remarks: "セッション状態のコンテナーでは、セッション状態の値と関連情報については、現在のセッションへのアクセスを提供します。 セッション状態のコンテナーに含まれるセッション情報が使用してアプリケーション コードに公開されている、<xref:System.Web.SessionState.HttpSessionState>クラスを使用して、<xref:System.Web.HttpContext.Session%2A>プロパティ</xref:System.Web.HttpContext.Session%2A></xref:System.Web.SessionState.HttpSessionState>。 <xref:System.Web.SessionState.HttpSessionState>クラスは、セッション状態のコンテナーのラッパー クラスです</xref:System.Web.SessionState.HttpSessionState>。       セッション状態のコンテナーの ASP.NET の実装は<xref:System.Web.SessionState.HttpSessionStateContainer>クラス</xref:System.Web.SessionState.HttpSessionStateContainer>です。 <xref:System.Web.SessionState.SessionStateModule><xref:System.Web.SessionState.HttpSessionStateContainer><xref:System.Web.HttpApplication.AcquireRequestState>イベント</xref:System.Web.HttpApplication.AcquireRequestState></xref:System.Web.SessionState.HttpSessionStateContainer></xref:System.Web.SessionState.SessionStateModule>中に、要求の開始時 要求の終了時中に、<xref:System.Web.HttpApplication.ReleaseRequestState>イベント、<xref:System.Web.SessionState.SessionStateModule>を取得、<xref:System.Web.SessionState.HttpSessionStateContainer>オブジェクトから現在の<xref:System.Web.HttpContext>セッション ストアへのセッションの値の書き込みや、セッションを破棄など、任意の必要なセッション作業を実行します</xref:System.Web.HttpContext></xref:System.Web.SessionState.HttpSessionStateContainer></xref:System.Web.SessionState.SessionStateModule></xref:System.Web.HttpApplication.ReleaseRequestState>。 要求が突然終了した場合、このようなリダイレクトを介する、<xref:System.Web.SessionState.SessionStateModule>呼び出すことによって同じのクリーンアップを実行する、<xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A>メソッド</xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A></xref:System.Web.SessionState.SessionStateModule>。       カスタム セッション状態のコンテナーを作成するには、IHttpSessionState インターフェイスを実装するクラスを作成します。 独自のカスタム セッション状態コンテナーを作成する場合も置き換える必要があります、<xref:System.Web.SessionState.SessionStateModule>カスタム モジュールにします</xref:System.Web.SessionState.SessionStateModule>。 カスタム モジュールは、カスタム セッション状態のコンテナーのインスタンスが作成され、現在追加<xref:System.Web.HttpContext>を使用して、<xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A>メソッド</xref:System.Web.SessionState.SessionStateUtility.AddHttpSessionStateToContext%2A></xref:System.Web.HttpContext>。 カスタム セッション状態モジュールの例に含まれる、<xref:System.Web.SessionState.SessionStateUtility>クラスの概要</xref:System.Web.SessionState.SessionStateUtility>。"
  example:
  - "The following code example implements the IHttpSessionState interface to create a new session-state container class named `MySessionState`.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/csharp/t-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public interface IHttpSessionState
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  id: Abandon
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在のセッションを終了します。"
  remarks: "セッション データをクリアし、発生する、電話放棄呼メソッドが使用される、 **Session_OnEnd** ASP.NET アプリケーションの Global.asax ファイルで定義されたイベント。"
  example:
  - "The following code example implements the Abandon method of the <xref:System.Web.SessionState.IHttpSessionState> interface. The code example duplicates the behavior of the <xref:System.Web.SessionState.HttpSessionStateContainer> class in that it adds an <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property that is set to `true` when the Abandon method is called. The <xref:System.Web.SessionState.HttpSessionStateContainer.IsAbandoned%2A> property is checked by the session-state module during the <xref:System.Web.HttpApplication.ReleaseRequestState> event to determine whether the session has been abandoned, and the session-state module clears out session data and executes the **Session_OnEnd** event.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/csharp/m-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#8](~/add/codesnippet/visualbasic/m-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public void Abandon ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Abandon*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態コレクションに新しい項目を追加します。"
  remarks: ''
  example:
  - "The following code example implements the Add method of the <xref:System.Web.SessionState.IHttpSessionState> interface to add a new item value to the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/csharp/m-system.web.sessionstat_8_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#15](~/add/codesnippet/visualbasic/m-system.web.sessionstat_8_1.vb)]"
  syntax:
    content: public void Add (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "セッション状態コレクションに追加する項目の名前。"
    - id: value
      type: System.Object
      description: "セッション状態コレクションに追加する項目の値。"
  overload: System.Web.SessionState.IHttpSessionState.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Clear
  id: Clear
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目コレクションからすべての値をクリアします。"
  remarks: "クリア テキストが<xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>。</xref:System.Web.SessionState.IHttpSessionState.RemoveAll%2A>と同じ機能を実行します。"
  example:
  - "The following code example implements the Clear method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  id: CodePage
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得または現在のセッションのコード ページ識別子を設定します。"
  remarks: "文字セット (コード ページ) がマルチ バイト文字データ、文字値の決定を解釈し、並べ替え順序を使用します。 コード ページの設定は、されていない Unicode 文字データへのマルチ バイト文字データにのみ適用されます。       この CodePage プロパティは、ASP の旧バージョンのみとの互換性用に提供されます。 ASP ページとの下位互換性を維持する必要がない場合を使用して、<xref:System.Text.Encoding.CodePage%2A>のプロパティ、<xref:System.Web.HttpResponse.ContentEncoding%2A>プロパティ代わりにします</xref:System.Web.HttpResponse.ContentEncoding%2A></xref:System.Text.Encoding.CodePage%2A>。"
  example:
  - "The following code example implements the CodePage property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the encoding for the current response.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/csharp/p-system.web.sessionstat_22_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#10](~/add/codesnippet/visualbasic/p-system.web.sessionstat_22_1.vb)]"
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "現在のセッションのコード ページ識別子です。"
  overload: System.Web.SessionState.IHttpSessionState.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  id: CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "アプリケーションが cookie なしのセッションのように構成するかどうかを示す値を取得します。"
  remarks: "CookieMode プロパティから返される、<xref:System.Web.HttpCookieMode>列挙値の値に基づいている、`cookieless`の属性、<xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A>構成要素</xref:System.Web.Configuration.SystemWebSectionGroup.SessionState%2A></xref:System.Web.HttpCookieMode>。 場合、`cookieless`属性に設定されている`true`、CookieMode プロパティは、<xref:System.Web.HttpCookieMode>それ以外の CookieMode プロパティ<xref:System.Web.HttpCookieMode>.</xref:System.Web.HttpCookieMode></xref:System.Web.HttpCookieMode>から返されます。"
  example:
  - "The following code example sets the `cookieless` attribute of the [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) element to `true` in the Web.config file to change the CookieMode property. For this sample application configuration, the CookieMode property would return <xref:System.Web.HttpCookieMode>.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <sessionState  \n      mode=\"InProc\"  \n      cookieless=\"true\"  \n      timeout=\"30\" />  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "1 つ、 <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>アプリケーションが cookie なしのセッションのように構成するかどうかを示す値。 既定値は<xref href=&quot;System.Web.HttpCookieMode&quot;></xref>です。"
  overload: System.Web.SessionState.IHttpSessionState.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目の値のコレクションを配列内の指定したインデックスから始まる&1; 次元配列にコピーします。"
  remarks: ''
  example:
  - "The following code example implements the CopyTo method of the <xref:System.Web.SessionState.IHttpSessionState> interface to copy session-state item values to an array.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/csharp/m-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#22](~/add/codesnippet/visualbasic/m-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array>セッションの値を受け取る</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "内のインデックス`array`コピーの開始場所。"
  overload: System.Web.SessionState.IHttpSessionState.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Count
  id: Count
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目のコレクション内の項目数を取得します。"
  remarks: ''
  example:
  - "The following code example implements the Count property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the number of items in the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/csharp/p-system.web.sessionstat_11_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#19](~/add/codesnippet/visualbasic/p-system.web.sessionstat_11_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "セッション状態のアイテム コレクション内の項目の数。"
  overload: System.Web.SessionState.IHttpSessionState.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  id: GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在のセッションですべてのセッション状態の項目の値の読み取りに使用できる列挙子を返します。"
  remarks: ''
  example:
  - "The following code example implements the GetEnumerator method of the <xref:System.Web.SessionState.IHttpSessionState> interface to return an enumerator for the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/csharp/m-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#21](~/add/codesnippet/visualbasic/m-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>セッション状態のアイテム コレクション内の値を反復処理することができます</xref:System.Collections.IEnumerator>。"
  overload: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  id: IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション ID が URL に埋め込まれているか、HTTP cookie に格納されているかどうかを示す値を取得します。"
  remarks: "Cookie なしのセッションについては、次を参照してください。[セッション識別子](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example implements the IsCookieless property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/csharp/p-system.web.sessionstat_7_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#6](~/add/codesnippet/visualbasic/p-system.web.sessionstat_7_1.vb)]"
  syntax:
    content: public bool IsCookieless { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>セッションが URL に埋め込まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.IHttpSessionState.IsCookieless*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  id: IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在の要求でセッションが作成されたかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example implements the IsNewSession property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/csharp/p-system.web.sessionstat_19_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#4](~/add/codesnippet/visualbasic/p-system.web.sessionstat_19_1.vb)]"
  syntax:
    content: public bool IsNewSession { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在の要求でセッションが作成された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.IHttpSessionState.IsNewSession*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  id: IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションが読み取り専用かどうかを示す値を取得します。"
  remarks: "セッション状態が設定読み取り専用に設定して、<xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>ページの属性に`ReadOnly`</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>。"
  example:
  - "The following code example implements the IsReadOnly property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return the value of an internal variable that was set in the constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/csharp/p-system.web.sessionstat_4_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#24](~/add/codesnippet/visualbasic/p-system.web.sessionstat_4_1.vb)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、セッションが読み取り専用です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  id: IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の値のコレクションへのアクセスが同期されているかどうかを示す値 (スレッド セーフである) を取得します。"
  remarks: ''
  example:
  - "The following code example implements the IsSynchronized property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/csharp/p-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#25](~/add/codesnippet/visualbasic/p-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コレクションへのアクセスが同期されている (スレッド セーフである)それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得または数値のインデックスを使用してセッション状態の項目の値を設定します。"
  remarks: ''
  example:
  - "The following code example implements the <xref:System.Web.SessionState.IHttpSessionState.Item%2A> property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by numeric index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/csharp/p-system.web.sessionstat_23_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#14](~/add/codesnippet/visualbasic/p-system.web.sessionstat_23_1.vb)]"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "セッション状態の項目の値の数値インデックス。"
    return:
      type: System.Object
      description: "指定されたセッション状態の項目の値、 <code> index </code>パラメーター。"
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  id: Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得または名前でセッション状態の項目の値を設定します。"
  remarks: ''
  example:
  - "The following code example implements the Item property of the <xref:System.Web.SessionState.IHttpSessionState> interface to store and return an internal dictionary session-state item value by its key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/csharp/p-system.web.sessionstat_16_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#13](~/add/codesnippet/visualbasic/p-system.web.sessionstat_16_1.vb)]"
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: "セッション状態の項目の値のキー名。"
    return:
      type: System.Object
      description: "指定されたセッション状態の項目の値、 <code> name </code>パラメーター。"
  overload: System.Web.SessionState.IHttpSessionState.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Keys
  id: Keys
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目のコレクションに格納されているすべての値のキーのコレクションを取得します。"
  remarks: ''
  example:
  - "The following code example implements the Keys property of the <xref:System.Web.SessionState.IHttpSessionState> interface to return a collection of session-state item key names from the internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/csharp/p-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#20](~/add/codesnippet/visualbasic/p-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.NameObjectCollectionBase.KeysCollection Keys { get; }
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
      description: "<xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>セッション項目のすべてのキーを格納している</xref:System.Collections.Specialized.NameObjectCollectionBase.KeysCollection>。"
  overload: System.Web.SessionState.IHttpSessionState.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.LCID
  id: LCID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得または現在のセッションのロケール識別子 (LCID) を設定します。"
  remarks: "これは、`LCID`プロパティは ASP の旧バージョンのみと互換性のために提供します。 ASP ページとの下位互換性を維持する必要がない場合を使用して、<xref:System.Globalization.CultureInfo.LCID%2A>プロパティ代わりにします</xref:System.Globalization.CultureInfo.LCID%2A>。       ASP.NET では、セッション状態でロケール識別子は保存されません。 LCID プロパティの呼び出し、<xref:System.Globalization.CultureInfo.LCID%2A>を取得し、識別子を設定します</xref:System.Globalization.CultureInfo.LCID%2A>。"
  example:
  - "The following code example implements the LCID property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the locale identifier for the current page.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/csharp/p-system.web.sessionstat_12_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#9](~/add/codesnippet/visualbasic/p-system.web.sessionstat_12_1.vb)]"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "A<xref:System.Globalization.CultureInfo>インスタンスが、現在のセッションのカルチャを指定します</xref:System.Globalization.CultureInfo>。"
  overload: System.Web.SessionState.IHttpSessionState.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Mode
  id: Mode
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "現在のセッション状態モードを取得します。"
  remarks: "別のセッション状態モードについては、次を参照してください。[セッション状態モード](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example implements the Mode property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/csharp/p-system.web.sessionstat_13_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#5](~/add/codesnippet/visualbasic/p-system.web.sessionstat_13_1.vb)]"
  syntax:
    content: public System.Web.SessionState.SessionStateMode Mode { get; }
    return:
      type: System.Web.SessionState.SessionStateMode
      description: "1 つ、 <xref href=&quot;System.Web.SessionState.SessionStateMode&quot;> </xref>値。"
  overload: System.Web.SessionState.IHttpSessionState.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目コレクションから項目を削除します。"
  remarks: ''
  example:
  - "The following code example implements the Remove method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the session-state item collection by key name.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/csharp/m-system.web.sessionstat_18_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#16](~/add/codesnippet/visualbasic/m-system.web.sessionstat_18_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "セッション状態の項目コレクションから削除する項目の名前。"
  overload: System.Web.SessionState.IHttpSessionState.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  id: RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目コレクションからすべての値をクリアします。"
  remarks: "RemoveAll <xref:System.Web.SessionState.IHttpSessionState.Clear%2A>。</xref:System.Web.SessionState.IHttpSessionState.Clear%2A>と同じ機能を実行します。"
  example:
  - "The following code example implements the RemoveAll method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete all items from an internal session-state item collection.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/csharp/m-system.web.sessionstat_1_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#18](~/add/codesnippet/visualbasic/m-system.web.sessionstat_1_1.vb)]"
  syntax:
    content: public void RemoveAll ();
    parameters: []
  overload: System.Web.SessionState.IHttpSessionState.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の項目コレクションから指定したインデックス位置にある項目を削除します。"
  remarks: ''
  example:
  - "The following code example implements the RemoveAt method of the <xref:System.Web.SessionState.IHttpSessionState> interface to delete a session-state item from the internal session-state item collection by numerical index.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/csharp/m-system.web.sessionstat_15_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#17](~/add/codesnippet/visualbasic/m-system.web.sessionstat_15_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "セッション状態コレクションから削除する項目のインデックス。"
  overload: System.Web.SessionState.IHttpSessionState.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  id: SessionID
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッションの一意のセッション識別子を取得します。"
  remarks: ''
  example:
  - "The following code example implements the SessionID property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/csharp/p-system.web.sessionstat_20_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#3](~/add/codesnippet/visualbasic/p-system.web.sessionstat_20_1.vb)]"
  syntax:
    content: public string SessionID { get; }
    return:
      type: System.String
      description: "セッション id です。"
  overload: System.Web.SessionState.IHttpSessionState.SessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  id: StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "宣言されたオブジェクトのコレクションを取得<xref uid=&quot;langword_csharp_&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; name=&quot;&lt;object Runat=&quot;Server&quot; Scope=&quot;Session&quot;/&gt;&quot; href=&quot;&quot;> </xref> Global.asax ASP.NET アプリケーションのファイル内のタグ。"
  remarks: '`StaticObjects`ASP の旧バージョンとの互換性を提供します。'
  example:
  - "The following code example implements the StaticObjects property of the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/csharp/p-system.web.sessionstat_17_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#12](~/add/codesnippet/visualbasic/p-system.web.sessionstat_17_1.vb)]"
  syntax:
    content: public System.Web.HttpStaticObjectsCollection StaticObjects { get; }
    return:
      type: System.Web.HttpStaticObjectsCollection
      description: "<xref href=&quot;System.Web.HttpStaticObjectsCollection&quot;> </xref> Global.asax ファイルで宣言されたオブジェクトを含むです。"
  overload: System.Web.SessionState.IHttpSessionState.StaticObjects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  id: SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "セッション状態の値のコレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: ''
  example:
  - "The following code example implements the SyncRoot property to return a copy of the current object that implements the <xref:System.Web.SessionState.IHttpSessionState> interface.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/csharp/p-system.web.sessionstat_2_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#23](~/add/codesnippet/visualbasic/p-system.web.sessionstat_2_1.vb)]"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するために使用できるオブジェクト。"
  overload: System.Web.SessionState.IHttpSessionState.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  id: Timeout
  parent: System.Web.SessionState.IHttpSessionState
  langs:
  - csharp
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "取得し、セッション状態プロバイダーがセッションを終了する前に、要求間で許可されているタイムアウト期間内 (分) を設定します。"
  remarks: ''
  example:
  - "The following code example implements the Timeout property of the <xref:System.Web.SessionState.IHttpSessionState> interface to get and set the session timeout value that is stored in an internal variable created in the class constructor.  \n  \n [!code-cs[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/csharp/p-system.web.sessionstat_6_1.cs)]\n [!code-vb[System.Web.SessionState.IHttpSessionState#2](~/add/codesnippet/visualbasic/p-system.web.sessionstat_6_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "タイムアウト期間 (分) です。"
  overload: System.Web.SessionState.IHttpSessionState.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IHttpSessionState.Abandon
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon()
  nameWithType: IHttpSessionState.Abandon()
  fullName: System.Web.SessionState.IHttpSessionState.Abandon()
- uid: System.Web.SessionState.IHttpSessionState.Add(System.String,System.Object)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add(String,Object)
  nameWithType: IHttpSessionState.Add(String,Object)
  fullName: System.Web.SessionState.IHttpSessionState.Add(String,Object)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.IHttpSessionState.Clear
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear()
  nameWithType: IHttpSessionState.Clear()
  fullName: System.Web.SessionState.IHttpSessionState.Clear()
- uid: System.Web.SessionState.IHttpSessionState.CodePage
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
  fullName: System.Web.SessionState.IHttpSessionState.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.IHttpSessionState.CookieMode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
  fullName: System.Web.SessionState.IHttpSessionState.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo(System.Array,System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: IHttpSessionState.CopyTo(Array,Int32)
  fullName: System.Web.SessionState.IHttpSessionState.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Web.SessionState.IHttpSessionState.Count
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
  fullName: System.Web.SessionState.IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator()
  nameWithType: IHttpSessionState.GetEnumerator()
  fullName: System.Web.SessionState.IHttpSessionState.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
  fullName: System.Web.SessionState.IHttpSessionState.IsCookieless
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
  fullName: System.Web.SessionState.IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
  fullName: System.Web.SessionState.IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
  fullName: System.Web.SessionState.IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(Int32)
  nameWithType: IHttpSessionState.Item(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.Item(Int32)
- uid: System.Web.SessionState.IHttpSessionState.Item(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item(String)
  nameWithType: IHttpSessionState.Item(String)
  fullName: System.Web.SessionState.IHttpSessionState.Item(String)
- uid: System.Web.SessionState.IHttpSessionState.Keys
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
  fullName: System.Web.SessionState.IHttpSessionState.Keys
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameObjectCollectionBase+KeysCollection
  nameWithType: NameObjectCollectionBase+KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase+KeysCollection
- uid: System.Web.SessionState.IHttpSessionState.LCID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
  fullName: System.Web.SessionState.IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
  fullName: System.Web.SessionState.IHttpSessionState.Mode
- uid: System.Web.SessionState.SessionStateMode
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateMode
  nameWithType: SessionStateMode
  fullName: System.Web.SessionState.SessionStateMode
- uid: System.Web.SessionState.IHttpSessionState.Remove(System.String)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove(String)
  nameWithType: IHttpSessionState.Remove(String)
  fullName: System.Web.SessionState.IHttpSessionState.Remove(String)
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll()
  nameWithType: IHttpSessionState.RemoveAll()
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAll()
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt(System.Int32)
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IHttpSessionState.RemoveAt(Int32)
  fullName: System.Web.SessionState.IHttpSessionState.RemoveAt(Int32)
- uid: System.Web.SessionState.IHttpSessionState.SessionID
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
  fullName: System.Web.SessionState.IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
  fullName: System.Web.SessionState.IHttpSessionState.StaticObjects
- uid: System.Web.HttpStaticObjectsCollection
  parent: System.Web
  isExternal: false
  name: HttpStaticObjectsCollection
  nameWithType: HttpStaticObjectsCollection
  fullName: System.Web.HttpStaticObjectsCollection
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
  fullName: System.Web.SessionState.IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
  fullName: System.Web.SessionState.IHttpSessionState.Timeout
- uid: System.Web.SessionState.IHttpSessionState.Abandon*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Abandon
  nameWithType: IHttpSessionState.Abandon
- uid: System.Web.SessionState.IHttpSessionState.Add*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Add
  nameWithType: IHttpSessionState.Add
- uid: System.Web.SessionState.IHttpSessionState.Clear*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Clear
  nameWithType: IHttpSessionState.Clear
- uid: System.Web.SessionState.IHttpSessionState.CodePage*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CodePage
  nameWithType: IHttpSessionState.CodePage
- uid: System.Web.SessionState.IHttpSessionState.CookieMode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CookieMode
  nameWithType: IHttpSessionState.CookieMode
- uid: System.Web.SessionState.IHttpSessionState.CopyTo*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: CopyTo
  nameWithType: IHttpSessionState.CopyTo
- uid: System.Web.SessionState.IHttpSessionState.Count*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Count
  nameWithType: IHttpSessionState.Count
- uid: System.Web.SessionState.IHttpSessionState.GetEnumerator*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: GetEnumerator
  nameWithType: IHttpSessionState.GetEnumerator
- uid: System.Web.SessionState.IHttpSessionState.IsCookieless*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsCookieless
  nameWithType: IHttpSessionState.IsCookieless
- uid: System.Web.SessionState.IHttpSessionState.IsNewSession*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsNewSession
  nameWithType: IHttpSessionState.IsNewSession
- uid: System.Web.SessionState.IHttpSessionState.IsReadOnly*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsReadOnly
  nameWithType: IHttpSessionState.IsReadOnly
- uid: System.Web.SessionState.IHttpSessionState.IsSynchronized*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: IsSynchronized
  nameWithType: IHttpSessionState.IsSynchronized
- uid: System.Web.SessionState.IHttpSessionState.Item*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Item
  nameWithType: IHttpSessionState.Item
- uid: System.Web.SessionState.IHttpSessionState.Keys*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Keys
  nameWithType: IHttpSessionState.Keys
- uid: System.Web.SessionState.IHttpSessionState.LCID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: LCID
  nameWithType: IHttpSessionState.LCID
- uid: System.Web.SessionState.IHttpSessionState.Mode*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Mode
  nameWithType: IHttpSessionState.Mode
- uid: System.Web.SessionState.IHttpSessionState.Remove*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Remove
  nameWithType: IHttpSessionState.Remove
- uid: System.Web.SessionState.IHttpSessionState.RemoveAll*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAll
  nameWithType: IHttpSessionState.RemoveAll
- uid: System.Web.SessionState.IHttpSessionState.RemoveAt*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: RemoveAt
  nameWithType: IHttpSessionState.RemoveAt
- uid: System.Web.SessionState.IHttpSessionState.SessionID*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SessionID
  nameWithType: IHttpSessionState.SessionID
- uid: System.Web.SessionState.IHttpSessionState.StaticObjects*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: StaticObjects
  nameWithType: IHttpSessionState.StaticObjects
- uid: System.Web.SessionState.IHttpSessionState.SyncRoot*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: SyncRoot
  nameWithType: IHttpSessionState.SyncRoot
- uid: System.Web.SessionState.IHttpSessionState.Timeout*
  parent: System.Web.SessionState.IHttpSessionState
  isExternal: false
  name: Timeout
  nameWithType: IHttpSessionState.Timeout
