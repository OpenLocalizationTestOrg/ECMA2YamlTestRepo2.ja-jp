### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.FileSystemAccessRule
  id: FileSystemAccessRule
  children:
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  langs:
  - csharp
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule
  fullName: System.Security.AccessControl.FileSystemAccessRule
  type: Class
  summary: "ファイルまたはディレクトリのアクセス規則を定義するアクセス制御エントリ (ACE) の抽象化を表します。 このクラスは継承できません。"
  remarks: "FileSystemAccessRule クラスを表します (読み取り、書き込み、およびなど) を提供するアクセスの種類、ユーザー アカウントを指定する基になるアクセス制御エントリ (ACE) の抽象化し、許可するか、その権限を拒否するかどうか。  このクラスは、子オブジェクトへのアクセス規則を反映する方法も指定できます。       FileSystemAccessRule クラスを使用すると、新しいアクセス ルールを作成できます。  <xref:System.Security.AccessControl.FileSecurity>または<xref:System.Security.AccessControl.DirectorySecurity>クラス</xref:System.Security.AccessControl.DirectorySecurity></xref:System.Security.AccessControl.FileSecurity>を使用して規則を保存することができます。"
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/t-system.security.access_4_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/t-system.security.access_4_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/t-system.security.access_4_1.cpp)]"
  syntax:
    content: 'public sealed class FileSystemAccessRule : System.Security.AccessControl.AccessRule'
  inheritance:
  - System.Object
  - System.Security.AccessControl.AuthorizationRule
  - System.Security.AccessControl.AccessRule
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.AccessRule.AccessControlType
  - System.Security.AccessControl.AuthorizationRule.AccessMask
  - System.Security.AccessControl.AuthorizationRule.IdentityReference
  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags
  - System.Security.AccessControl.AuthorizationRule.IsInherited
  - System.Security.AccessControl.AuthorizationRule.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>クラス、ユーザー アカウント、および参照をアクセス規則に関連付けられている操作の種類を指定する値を許可するか、操作を拒否するかどうかを示す値を使用します。"
  remarks: "このコンス トラクターを使用できる永続化すること、<xref:System.Security.AccessControl.FileSecurity>または<xref:System.Security.AccessControl.DirectorySecurity>クラス</xref:System.Security.AccessControl.DirectorySecurity></xref:System.Security.AccessControl.FileSecurity>を使用してアクセス制御規則を作成するには  アクセス制御規則は、アクションを決定は許可されている Microsoft Windows を実行しているコンピューターでは、使用するユーザー アカウントの権限を定義します。"
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>ユーザー アカウントへの参照をカプセル化するオブジェクト。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>アクセス規則に関連付けられている操作の種類を指定する値。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref>許可操作または拒否するかどうかを指定する値。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>パラメーターではありません、 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>オブジェクト。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "正しくない列挙値が渡された、 <code> type </code>パラメーター。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>クラスの名前、ユーザー アカウント、アクセス ルールに関連付けられた操作の種類を指定する値とを許可するか、操作を拒否するかどうかを示す値を使用します。"
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  example:
  - "The following code example uses the <xref:System.Security.AccessControl.FileSecurity> class to add and then remove an access control entry (ACE) from a file.  You must supply a valid user or group account to run this example.  \n  \n [!code-cs[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/csharp/33a6ea58-04ff-40ef-bfcd-_1.cs)]\n [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/visualbasic/33a6ea58-04ff-40ef-bfcd-_1.vb)]\n [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/add/codesnippet/cpp/33a6ea58-04ff-40ef-bfcd-_1.cpp)]"
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "ユーザー アカウントの名前。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>アクセス規則に関連付けられている操作の種類を指定する値。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref>許可操作または拒否するかどうかを指定する値。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "正しくない列挙値が渡された、 <code> type </code>パラメーター。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>クラス、ユーザー アカウント、アクセス規則、権限を継承する方法を決定する値、権限の反映方法を決定する値を許可するか、操作を拒否するかどうかを示す値に関連する操作の種類を指定する値への参照を使用します。"
  remarks: "このコンス トラクターを使用できる永続化すること、<xref:System.Security.AccessControl.FileSecurity>または<xref:System.Security.AccessControl.DirectorySecurity>クラス</xref:System.Security.AccessControl.DirectorySecurity></xref:System.Security.AccessControl.FileSecurity>を使用してアクセス制御規則を作成するには  アクセス制御規則は、アクションを決定は許可されている Microsoft Windows を実行しているコンピューターでは、使用するユーザー アカウントの権限を定義します。"
  syntax:
    content: public FileSystemAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.Security.Principal.IdentityReference
      description: "<xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>ユーザー アカウントへの参照をカプセル化するオブジェクト。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>アクセス規則に関連付けられている操作の種類を指定する値。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>子オブジェクトへのアクセス マスクの反映方法を指定する値。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref>子オブジェクトへのアクセス制御エントリ (Ace) を反映する方法を指定する値。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref>許可操作または拒否するかどうかを指定する値。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identity </code>パラメーターではありません、 <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>オブジェクト。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "正しくない列挙値が渡された、 <code> type </code>パラメーター。       - または - 正しくない列挙体に渡された、 <code> inheritanceFlags </code>パラメーター。       - または - 正しくない列挙体に渡された、 <code> propagationFlags </code>パラメーター。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: '#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)'
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;> </xref>クラス、ユーザー アカウント、アクセス規則、権限を継承する方法を決定する値、権限の反映方法を決定する値を許可するか、操作を拒否するかどうかを示す値に関連する操作の種類を指定する値の名前を使用します。"
  remarks: "Use this constructor to create an access control rule that you can persist using the <xref:System.Security.AccessControl.FileSecurity> or <xref:System.Security.AccessControl.DirectorySecurity> class.  Access control rules define user account rights that determine which actions are allowed or disallowed on computers running Microsoft Windows.  \n  \n The `identity` parameter must identify a valid account on the current computer or domain.  The string takes the following form, where `DOMAIN` is the name of a valid domain or computer name and `account` is the name of a valid user account on a domain or computer: `DOMAIN\\account`."
  syntax:
    content: public FileSystemAccessRule (string identity, System.Security.AccessControl.FileSystemRights fileSystemRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identity
      type: System.String
      description: "ユーザー アカウントの名前。"
    - id: fileSystemRights
      type: System.Security.AccessControl.FileSystemRights
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>アクセス規則に関連付けられている操作の種類を指定する値。"
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>子オブジェクトへのアクセス マスクの反映方法を指定する値。"
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref>子オブジェクトへのアクセス制御エントリ (Ace) を反映する方法を指定する値。"
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "1 つ、 <xref href=&quot;System.Security.AccessControl.AccessControlType&quot;> </xref>許可操作または拒否するかどうかを指定する値。"
  overload: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identity</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "正しくない列挙値が渡された、 <code> type </code>パラメーター。       - または - 正しくない列挙体に渡された、 <code> inheritanceFlags </code>パラメーター。       - または - 正しくない列挙体に渡された、 <code> propagationFlags </code>パラメーター。"
  platform:
  - net462
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  id: FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  langs:
  - csharp
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "取得、 <xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>に現在関連付けられているフラグ<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Security.AccessControl.FileSystemRights FileSystemRights { get; }
    return:
      type: System.Security.AccessControl.FileSystemRights
      description: "<xref href=&quot;System.Security.AccessControl.FileSystemRights&quot;> </xref>に現在関連付けられているフラグ<xref href=&quot;System.Security.AccessControl.FileSystemAccessRule&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.AccessRule
  isExternal: false
  name: System.Security.AccessControl.AccessRule
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,AccessControlType)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.AccessControl.FileSystemRights
  parent: System.Security.AccessControl
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemRights
  fullName: System.Security.AccessControl.FileSystemRights
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,AccessControlType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor(System.String,System.Security.AccessControl.FileSystemRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemAccessRule(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
  fullName: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights
- uid: System.Security.AccessControl.FileSystemAccessRule.#ctor*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemAccessRule
  nameWithType: FileSystemAccessRule.FileSystemAccessRule
- uid: System.Security.AccessControl.FileSystemAccessRule.FileSystemRights*
  parent: System.Security.AccessControl.FileSystemAccessRule
  isExternal: false
  name: FileSystemRights
  nameWithType: FileSystemAccessRule.FileSystemRights
