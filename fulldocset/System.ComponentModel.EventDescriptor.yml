### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EventDescriptor
  id: EventDescriptor
  children:
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  - System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  - System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  - System.ComponentModel.EventDescriptor.ComponentType
  - System.ComponentModel.EventDescriptor.EventType
  - System.ComponentModel.EventDescriptor.IsMulticast
  - System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  langs:
  - csharp
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
  type: Class
  summary: "イベントに関する情報を提供します。"
  remarks: "名前、その属性、イベントにバインドされているコンポーネント、イベント デリゲート、デリゲートの型で構成されています、EventDescriptor デリゲートはマルチキャストかどうかとします。       EventDescriptor 次に示します`abstract`プロパティとメソッド:-<xref:System.ComponentModel.EventDescriptor.ComponentType%2A>でこのイベントが宣言されているコンポーネントの種類が含まれています</xref:System.ComponentModel.EventDescriptor.ComponentType%2A>。      -<xref:System.ComponentModel.EventDescriptor.EventType%2A>イベントのデリゲートの型が含まれています</xref:System.ComponentModel.EventDescriptor.EventType%2A>。      -<xref:System.ComponentModel.EventDescriptor.IsMulticast%2A>イベント デリゲートはマルチキャスト デリゲートであるかどうかを示す値が含まれています</xref:System.ComponentModel.EventDescriptor.IsMulticast%2A>。      -<xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A>イベントをコンポーネントに関連付けます</xref:System.ComponentModel.EventDescriptor.AddEventHandler%2A>。      -<xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A>デリゲートは、コンポーネントからイベントを受信しないように、コンポーネントからデリゲートをバインド解除します</xref:System.ComponentModel.EventDescriptor.RemoveEventHandler%2A>。       イベントの詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。 リフレクションに関する詳細については、トピックを参照してください。[リフレクション](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example is built upon the example in the <xref:System.ComponentModel.EventDescriptorCollection> class. It prints the information (category, description, and display name) of each event on a button in a text box. It requires that `button1` and `textbox1` have been instantiated on a form.  \n  \n [!code-cpp[EventDescriptor#1](~/add/codesnippet/cpp/t-system.componentmodel._26_1.cpp)]\n [!code-cs[EventDescriptor#1](~/add/codesnippet/csharp/t-system.componentmodel._26_1.cs)]\n [!code-vb[EventDescriptor#1](~/add/codesnippet/visualbasic/t-system.componentmodel._26_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class EventDescriptor : System.ComponentModel.MemberDescriptor
  inheritance:
  - System.Object
  - System.ComponentModel.MemberDescriptor
  implements: []
  inheritedMembers:
  - System.ComponentModel.MemberDescriptor.AttributeArray
  - System.ComponentModel.MemberDescriptor.Attributes
  - System.ComponentModel.MemberDescriptor.Category
  - System.ComponentModel.MemberDescriptor.CreateAttributeCollection
  - System.ComponentModel.MemberDescriptor.Description
  - System.ComponentModel.MemberDescriptor.DesignTimeOnly
  - System.ComponentModel.MemberDescriptor.DisplayName
  - System.ComponentModel.MemberDescriptor.Equals(System.Object)
  - System.ComponentModel.MemberDescriptor.FillAttributes(System.Collections.IList)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type)
  - System.ComponentModel.MemberDescriptor.FindMethod(System.Type,System.String,System.Type[],System.Type,System.Boolean)
  - System.ComponentModel.MemberDescriptor.GetHashCode
  - System.ComponentModel.MemberDescriptor.GetInvocationTarget(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetInvokee(System.Type,System.Object)
  - System.ComponentModel.MemberDescriptor.GetSite(System.Object)
  - System.ComponentModel.MemberDescriptor.IsBrowsable
  - System.ComponentModel.MemberDescriptor.Name
  - System.ComponentModel.MemberDescriptor.NameHashCode
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  id: '#ctor(System.ComponentModel.MemberDescriptor)'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>クラス名と、指定した属性を持つ<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>です。"
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>イベントとその属性の名前を格納しています。"
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  id: '#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> 、指定した名前のクラス<xref href=&quot;System.ComponentModel.MemberDescriptor&quot;></xref>と両方の属性、 <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>と<xref:System.Attribute>配列</xref:System.Attribute>。"
  remarks: "このコンス トラクター <xref:System.Attribute> <xref:System.ComponentModel.MemberDescriptor>。</xref:System.ComponentModel.MemberDescriptor>属性に配列</xref:System.Attribute>内の属性を追加します。"
  syntax:
    content: protected EventDescriptor (System.ComponentModel.MemberDescriptor descr, Attribute[] attrs);
    parameters:
    - id: descr
      type: System.ComponentModel.MemberDescriptor
      description: "A <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref>メンバーとその属性の名前を持ちます。"
    - id: attrs
      type: System.Attribute[]
      description: "<xref:System.Attribute>このイベントの説明に追加する属性を持つ配列です</xref:System.Attribute>。"
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  id: '#ctor(System.String,System.Attribute[])'
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref>指定した名前と属性の配列を持つクラス。"
  syntax:
    content: protected EventDescriptor (string name, Attribute[] attrs);
    parameters:
    - id: name
      type: System.String
      description: "イベントの名前。"
    - id: attrs
      type: System.Attribute[]
      description: "型の配列<xref:System.Attribute>イベント属性を格納している</xref:System.Attribute>。"
  overload: System.ComponentModel.EventDescriptor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  id: AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、イベントをコンポーネントにバインドします。"
  remarks: "通常、このメソッドはリフレクションを使用します。 リフレクションに関する詳細については、トピックを参照してください。[リフレクション](~/add/includes/ajax-current-ext-md.md)です。       デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。"
  syntax:
    content: public abstract void AddEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "デリゲートにイベントを提供するコンポーネント。"
    - id: value
      type: System.Delegate
      description: "イベントを処理するメソッドを表すデリゲート。"
  overload: System.ComponentModel.EventDescriptor.AddEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.ComponentType
  id: ComponentType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、このイベントのバインド先のコンポーネントの型を取得します。"
  remarks: "通常、このプロパティは、リフレクションを介して実装されます。"
  syntax:
    content: public abstract Type ComponentType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>コンポーネント、イベントのバインド先の型を表す</xref:System.Type>。"
  overload: System.ComponentModel.EventDescriptor.ComponentType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.EventType
  id: EventType
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、イベントのデリゲートの型を取得します。"
  remarks: "通常、このプロパティは、リフレクションを介して実装されます。"
  syntax:
    content: public abstract Type EventType { get; }
    return:
      type: System.Type
      description: "A<xref:System.Type>イベントのデリゲートの型を表す</xref:System.Type>。"
  overload: System.ComponentModel.EventDescriptor.EventType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  id: IsMulticast
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、イベント デリゲートはマルチキャスト デリゲートであるかどうかを示す値を取得します。"
  remarks: "通常、このプロパティは、リフレクションを介して実装されます。       マルチキャスト デリゲートは、1 つ以上のメソッドへの参照を含めることができますに通常のデリゲートとは異なります。 マルチキャスト デリゲートのメソッドは、表示される順序で、デリゲートが呼び出されたときに同期的に実行されます。 呼び出されたメソッドのいずれかにより、例外が発生した場合、デリゲートは停止し、デリゲートの呼び出し元に例外が反映されます。"
  syntax:
    content: public abstract bool IsMulticast { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>イベントのデリゲートはマルチキャスト以外の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.EventDescriptor.IsMulticast*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  id: RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  langs:
  - csharp
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、デリゲートは、コンポーネントからイベントを受信しなくできるように、コンポーネントからデリゲートをバインド解除します。"
  remarks: "通常、このメソッドはリフレクションを使用します。 詳細については、トピックを参照してください。[リフレクション](~/add/includes/ajax-current-ext-md.md)です。       デリゲートの詳細については、次を参照してください。 [NIB: イベントとデリゲート](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)です。"
  syntax:
    content: public abstract void RemoveEventHandler (object component, Delegate value);
    parameters:
    - id: component
      type: System.Object
      description: "デリゲートのバインド先のコンポーネント。"
    - id: value
      type: System.Delegate
      description: "コンポーネントからバインド解除するデリゲート。"
  overload: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.MemberDescriptor
  isExternal: false
  name: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor)
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor)
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor)
- uid: System.ComponentModel.EventDescriptor.#ctor(System.ComponentModel.MemberDescriptor,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(MemberDescriptor,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(MemberDescriptor,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.EventDescriptor.#ctor(System.String,System.Attribute[])
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor(String,Attribute[])
  nameWithType: EventDescriptor.EventDescriptor(String,Attribute[])
  fullName: System.ComponentModel.EventDescriptor.EventDescriptor(String,Attribute[])
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.EventDescriptor.AddEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.AddEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.AddEventHandler(Object,Delegate)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.ComponentModel.EventDescriptor.ComponentType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
  fullName: System.ComponentModel.EventDescriptor.ComponentType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EventDescriptor.EventType
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
  fullName: System.ComponentModel.EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
  fullName: System.ComponentModel.EventDescriptor.IsMulticast
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler(System.Object,System.Delegate)
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler(Object,Delegate)
  nameWithType: EventDescriptor.RemoveEventHandler(Object,Delegate)
  fullName: System.ComponentModel.EventDescriptor.RemoveEventHandler(Object,Delegate)
- uid: System.ComponentModel.EventDescriptor.#ctor*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor.EventDescriptor
- uid: System.ComponentModel.EventDescriptor.AddEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: AddEventHandler
  nameWithType: EventDescriptor.AddEventHandler
- uid: System.ComponentModel.EventDescriptor.ComponentType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: ComponentType
  nameWithType: EventDescriptor.ComponentType
- uid: System.ComponentModel.EventDescriptor.EventType*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: EventType
  nameWithType: EventDescriptor.EventType
- uid: System.ComponentModel.EventDescriptor.IsMulticast*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: IsMulticast
  nameWithType: EventDescriptor.IsMulticast
- uid: System.ComponentModel.EventDescriptor.RemoveEventHandler*
  parent: System.ComponentModel.EventDescriptor
  isExternal: false
  name: RemoveEventHandler
  nameWithType: EventDescriptor.RemoveEventHandler
