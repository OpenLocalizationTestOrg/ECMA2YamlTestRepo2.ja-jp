### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlType
  id: XamlType
  children:
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  - System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlType.AllowedContentTypes
  - System.Xaml.XamlType.BaseType
  - System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  - System.Xaml.XamlType.ConstructionRequiresArguments
  - System.Xaml.XamlType.ContentProperty
  - System.Xaml.XamlType.ContentWrappers
  - System.Xaml.XamlType.DeferringLoader
  - System.Xaml.XamlType.Equals(System.Object)
  - System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  - System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.GetAllAttachableMembers
  - System.Xaml.XamlType.GetAllMembers
  - System.Xaml.XamlType.GetAttachableMember(System.String)
  - System.Xaml.XamlType.GetHashCode
  - System.Xaml.XamlType.GetMember(System.String)
  - System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  - System.Xaml.XamlType.GetXamlNamespaces
  - System.Xaml.XamlType.Invoker
  - System.Xaml.XamlType.IsAmbient
  - System.Xaml.XamlType.IsArray
  - System.Xaml.XamlType.IsCollection
  - System.Xaml.XamlType.IsConstructible
  - System.Xaml.XamlType.IsDictionary
  - System.Xaml.XamlType.IsGeneric
  - System.Xaml.XamlType.IsMarkupExtension
  - System.Xaml.XamlType.IsNameScope
  - System.Xaml.XamlType.IsNameValid
  - System.Xaml.XamlType.IsNullable
  - System.Xaml.XamlType.IsPublic
  - System.Xaml.XamlType.IsUnknown
  - System.Xaml.XamlType.IsUsableDuringInitialization
  - System.Xaml.XamlType.IsWhitespaceSignificantCollection
  - System.Xaml.XamlType.IsXData
  - System.Xaml.XamlType.ItemType
  - System.Xaml.XamlType.KeyType
  - System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  - System.Xaml.XamlType.LookupAllAttachableMembers
  - System.Xaml.XamlType.LookupAllMembers
  - System.Xaml.XamlType.LookupAllowedContentTypes
  - System.Xaml.XamlType.LookupAttachableMember(System.String)
  - System.Xaml.XamlType.LookupBaseType
  - System.Xaml.XamlType.LookupCollectionKind
  - System.Xaml.XamlType.LookupConstructionRequiresArguments
  - System.Xaml.XamlType.LookupContentProperty
  - System.Xaml.XamlType.LookupContentWrappers
  - System.Xaml.XamlType.LookupCustomAttributeProvider
  - System.Xaml.XamlType.LookupDeferringLoader
  - System.Xaml.XamlType.LookupInvoker
  - System.Xaml.XamlType.LookupIsAmbient
  - System.Xaml.XamlType.LookupIsConstructible
  - System.Xaml.XamlType.LookupIsMarkupExtension
  - System.Xaml.XamlType.LookupIsNameScope
  - System.Xaml.XamlType.LookupIsNullable
  - System.Xaml.XamlType.LookupIsPublic
  - System.Xaml.XamlType.LookupIsUnknown
  - System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  - System.Xaml.XamlType.LookupIsXData
  - System.Xaml.XamlType.LookupItemType
  - System.Xaml.XamlType.LookupKeyType
  - System.Xaml.XamlType.LookupMarkupExtensionReturnType
  - System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  - System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  - System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  - System.Xaml.XamlType.LookupSetTypeConverterHandler
  - System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  - System.Xaml.XamlType.LookupTypeConverter
  - System.Xaml.XamlType.LookupUnderlyingType
  - System.Xaml.XamlType.LookupUsableDuringInitialization
  - System.Xaml.XamlType.LookupValueSerializer
  - System.Xaml.XamlType.MarkupExtensionReturnType
  - System.Xaml.XamlType.Name
  - System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  - System.Xaml.XamlType.PreferredXamlNamespace
  - System.Xaml.XamlType.SchemaContext
  - System.Xaml.XamlType.ToString
  - System.Xaml.XamlType.TrimSurroundingWhitespace
  - System.Xaml.XamlType.TypeArguments
  - System.Xaml.XamlType.TypeConverter
  - System.Xaml.XamlType.UnderlyingType
  - System.Xaml.XamlType.ValueSerializer
  langs:
  - csharp
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
  type: Class
  summary: ".NET Framework XAML サービスで実装されている XAML システム全体の一部として XAML の型に関する情報を報告します。"
  remarks: "XamlType クラスで Api の多くは、についてレポートする概念は、XAML の仕様 [MS-XAML] の特定のセクションに似ています、XAML の型に関する情報を提供します。       XamlType が、XAML の型に関するレポート情報の .NET Framework XAML サービス API で広く使われています。 XamlType のインスタンスを使用するために、または XAML ノード ストリーム、またはと同様に XAML 表現からのメンバーにアクセスする XAML の型について知っておく必要がある情報を報告します。 ような方法は、reporting<xref:System.Type>入力リフレクション クラスと共に、システムなど、CLR で<xref:System.Reflection.MemberInfo>、CLR 型とその使用状況に関する情報を提供します</xref:System.Reflection.MemberInfo></xref:System.Type>。       XAML 型システムを拡張するには、XamlType から派生できます。 実効上には、する必要がありますも<xref:System.Xaml.Schema.XamlTypeInvoker>。</xref:System.Xaml.Schema.XamlTypeInvoker>を実装するには <xref:System.Xaml.Schema.XamlTypeInvoker>一般化された XAML 型システム呼び出しの動作の一部として指定することをバッキング型システムを使用するようになります</xref:System.Xaml.Schema.XamlTypeInvoker>。 特定のカスタム<xref:System.Xaml.Schema.XamlTypeInvoker>既定 XamlType の動作で使用される CLR 型システムへの依存関係を削減する方法を提供します</xref:System.Xaml.Schema.XamlTypeInvoker>。"
  syntax:
    content: 'public class XamlType : IEquatable<System.Xaml.XamlType>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Xaml.XamlType>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>クラス情報を基に、基になる CLR 型。"
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "基になる CLR<xref:System.Type>を構築するために XAML の型</xref:System.Type>。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML リーダーや XAML ライターの XAML スキーマ コンテキスト。"
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>クラスが、型の名前を文字列に基づいています。"
  remarks: "これは、protected コンス トラクターです。 現在のパブリック派生クラスが存在しない構築のこの特定のパスを使用します。 既存のコンシューマーとして<xref:System.Xaml.XamlType>、他のコンス トラクター シグネチャを使用する必要があります (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>、 <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>、または<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) 初期化するために、<xref:System.Xaml.XamlType>オブジェクト</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29></xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29></xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29></xref:System.Xaml.XamlType>。"
  syntax:
    content: protected XamlType (string typeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: typeName
      type: System.String
      description: "作成する型の名前。"
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "型引数、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ジェネリック型を表すです。 指定できます (および多くの場合は) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、表される型が、ジェネリック型ではないことを示します。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML リーダーと XAML ライターの XAML スキーマ コンテキスト。"
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>typeName</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  id: '#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>クラス情報を基に基になる型と<xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;></xref>実装します。"
  syntax:
    content: public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);
    parameters:
    - id: underlyingType
      type: System.Type
      description: "構築するために XAML 型の基になる型。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML リーダーの XAML スキーマ コンテキスト。"
    - id: invoker
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>に対するランタイムのリフレクションを処理する実装を呼び出す、 <xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>underlyingType</code> or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  id: '#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>クラスが、XAML 名前空間と型の文字列名に基づいています。 このコンス トラクターは排他的分析とサポートする型システムと XAML スキーマ コンテキストでのバックアップがないように認識される型の使用法の XAML ノードを記録します。"
  remarks: "このコンス トラクターを使用して、基になる型システムにマップされる XAML の型が使用可能な「不明」の種類に対してのみです。 このコンス トラクターが、結果が得られない、<xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>は`true`</xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=fullName>。 代わりに、既定の reflector ロジックがレポートする基になる型<xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName>。</xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=fullName> ただし、この動作を変更のため、<xref:System.Xaml.XamlType.LookupIsUnknown%2A>をオーバーライドします</xref:System.Xaml.XamlType.LookupIsUnknown%2A>。"
  syntax:
    content: public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList<System.Xaml.XamlType> typeArguments, System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: unknownTypeNamespace
      type: System.String
      description: "文字列として、型の XAML 名前空間。"
    - id: unknownTypeName
      type: System.String
      description: "指定した型の名前`unknownTypeNamespace`の XAML 名前空間。"
    - id: typeArguments
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "型引数、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ジェネリック型を表すです。 指定できます (および多くの場合は) <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、表される型が、ジェネリック型ではないことを示します。"
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "XAML リーダーや XAML ライターの XAML スキーマ コンテキスト。"
  overload: System.Xaml.XamlType.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One or more of <code>unknownTypeNamespace</code>, <code>unknownTypeName</code>, or <code>schemaContext</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlType.AllowedContentTypes
  id: AllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "として使用されている型の読み取り専用コレクションを取得、<xref:System.Xaml.XamlType.ContentProperty*>値<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Xaml.XamlType.ContentProperty*> 。"
  remarks: "割り当てることができる型 (たとえば、許可されているコンテンツ型である基本型に割り当てることができる) 特定のコンテンツ タイプでは AllowedContentTypes の目的で複数の種類は考慮されません。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A></xref:System.Xaml.XamlType>。"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> AllowedContentTypes { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "使用可能なコンテンツ型の読み取り専用コレクション。"
  overload: System.Xaml.XamlType.AllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.BaseType
  id: BaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>この XAML 型の直接の基本型にします。 この値の決定は、基になる型に基づいてこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>とスキーマ コンテキスト。"
  remarks: "既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupBaseType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupBaseType%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupBaseType%2A>この型にします</xref:System.Xaml.XamlType.LookupBaseType%2A>。 既定では、BaseType が、内部の定数を表すを返します、<xref:System.Object>場合<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`</xref:System.Xaml.XamlType.UnderlyingType%2A></xref:System.Object>。      > [!IMPORTANT] ><xref:System.Xaml.XamlType.LookupBaseType%2A>は仮想で、そのため、オーバーライドできます</xref:System.Xaml.XamlType.LookupBaseType%2A>。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合)、基になる CLR 型の型システム情報と予想される方法で整合不要になったように XAML 型について報告される型情報を変更します。 割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public System.Xaml.XamlType BaseType { get; }
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>この XAML 型の直接の基本型にします。"
  overload: System.Xaml.XamlType.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  id: CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返しますこれのインスタンスかどうか<xref href=&quot;System.Xaml.XamlType&quot;> </xref> 、指定された<xref href=&quot;System.Xaml.XamlType&quot;></xref>割り当て可能な種類の一覧にします。"
  remarks: "割り当て可能な型では、参照型のすべての機能はありませんは、割り当てのため使用することができます。 たとえば、プロパティの値の型が一致するようにするのに割り当てを使用することができます。 XAML で割り当てることができる型の概念は、CLR 型システムへのキャストの概念に似ています。 たとえば、CLR 型システムでは、すべての型が、<xref:System.Object>割り当て可能な型のリストにします</xref:System.Object>。       場合、2 つのいずれかの<xref:System.Xaml.XamlType>使用されるインスタンスの比較がある<xref:System.Xaml.XamlType.IsUnknown%2A>と等しい`true`、このメソッドは、特殊な不明なモードを返す`true`場合、2 つ<xref:System.Xaml.XamlType>のインスタンスが等しい</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.IsUnknown%2A></xref:System.Xaml.XamlType>。       既定の実装が CLR を使用して<xref:System.Type>から<xref:System.Xaml.XamlType.UnderlyingType%2A>この<xref:System.Xaml.XamlType>し、入力<xref:System.Xaml.XamlType>、および呼び出し<xref:System.Type.IsAssignableFrom%2A>.</xref:System.Type.IsAssignableFrom%2A> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Type> 割り当てられた型のさまざまな決定をする場合は、このメソッドをオーバーライドします。       Null を渡す`xamlType`、例外をスローしないと、常に返します`false`です。      > [!IMPORTANT] > CanAssignTo は仮想でと、そのため、オーバーライドされることができます。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) を XAML 型の割り当てを変更して、基になる CLR 型の型キャストの動作と予想される方法で整合不要になった。 割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "現在の照合する型<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> xamlType </code> 、割り当てられた型リストには、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.CanAssignTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  id: ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>引数が必要 (ジェネリック制約を通じて<xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;></xref>初期化のテキスト、またはその他の XAML の手法) 型の有効なインスタンスを構築するためにします。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>この型にします</xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A>。"
  syntax:
    content: public bool ConstructionRequiresArguments { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>インスタンスの構築には、引数値が必要とする場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.ConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentProperty
  id: ContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>これのコンテンツ プロパティの情報を<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "ときにバインディングを使用して、または CLR 型システムのバックアップ、XAML コンテンツ プロパティを指定できます型に適用することで<xref:System.Windows.Markup.ContentPropertyAttribute>種類の定義にします</xref:System.Windows.Markup.ContentPropertyAttribute>。       このプロパティに揃えます、 `[content property]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupContentProperty%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupContentProperty%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupContentProperty%2A>この型にします</xref:System.Xaml.XamlType.LookupContentProperty%2A>。"
  syntax:
    content: public System.Xaml.XamlMember ContentProperty { get; }
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>このコンテンツのプロパティの情報を<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。 あります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>コンテンツ プロパティが存在しない場合。"
  overload: System.Xaml.XamlType.ContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ContentWrappers
  id: ContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得できない場合に厳密な型が一致する、厳密に型指定の文字列など、コンテンツのプロパティのコンテンツをラップするために使用される型<xref uid=&quot;langword_csharp_Collection&lt;T&gt;&quot; name=&quot;Collection&lt;T&gt;&quot; href=&quot;&quot;></xref>です。"
  remarks: "このプロパティは、型の一致が低下するためにラッパーがない場合は、`null`です。       型として評価される<xref:System.Xaml.XamlType.CanAssignTo%2A>特定のコンテンツ タイプは考慮されません ContentWrappers の目的で複数の種類</xref:System.Xaml.XamlType.CanAssignTo%2A>。       で、CLR<xref:System.Xaml>と</xref:System.Xaml>バインドを<xref:System.Xaml.XamlType><xref:System.Windows.Markup.ContentWrapperAttribute>。</xref:System.Windows.Markup.ContentWrapperAttribute>と型の XAML のコンテンツ ラッパー型を指定することができます。</xref:System.Xaml.XamlType>       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupContentWrappers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupContentWrappers%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupContentWrappers%2A>この型にします</xref:System.Xaml.XamlType.LookupContentWrappers%2A>。"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> ContentWrappers { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "可能なコンテンツのラッパー型の読み取り専用コレクションそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 「解説」を参照してください。"
  overload: System.Xaml.XamlType.ContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.DeferringLoader
  id: DeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;を表す、遅延読み込みこの型の変換動作します。"
  remarks: "WPF の XAML テンプレートの動作は、遅延読み込み動作の例を示します。       既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupDeferringLoader%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupDeferringLoader%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupDeferringLoader%2A>この型にします</xref:System.Xaml.XamlType.LookupDeferringLoader%2A>。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> DeferringLoader { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "&lt;Xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref href=&quot;System.Xaml.XamlDeferringLoader&quot;></xref>このタイプの遅延読み込み動作を表す制約。"
  overload: System.Xaml.XamlType.DeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "現在のオブジェクトが別のオブジェクトと等しいかどうかを示します。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "このオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のオブジェクトが等しい場合、 <code> obj </code>パラメーターです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  id: Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "現在のオブジェクトが同じ型の別のオブジェクトと等しいかどうかを示します。"
  syntax:
    content: public bool Equals (System.Xaml.XamlType other);
    parameters:
    - id: other
      type: System.Xaml.XamlType
      description: "このオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のオブジェクトが等しい場合、 <code> other </code>パラメーターです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  id: GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "この XAML ディレクティブの別名は、XAML メンバーを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAliasedProperty%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupAliasedProperty%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupAliasedProperty%2A>この型にします</xref:System.Xaml.XamlType.LookupAliasedProperty%2A>。"
  syntax:
    content: public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "エイリアスのメンバーを検索するためのディレクティブ。"
    return:
      type: System.Xaml.XamlMember
      description: "エイリアスのメンバー場合が見つかりました。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.GetAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  id: GetAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これによって公開されているすべてのアタッチ可能なプロパティを含むコレクションを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "各<xref:System.Xaml.XamlMember>返されたコレクションを含めることは、概念をサポートする値を<xref:System.Xaml.XamlMember>アタッチ可能なメンバーは、</xref:System.Xaml.XamlMember> </xref:System.Xaml.XamlMember> 。 たとえば、メンバーを返す必要があります`true`の<xref:System.Xaml.XamlMember.IsAttachable%2A>の型を<xref:System.Xaml.XamlMember.TargetType%2A>のようにします</xref:System.Xaml.XamlMember.TargetType%2A></xref:System.Xaml.XamlMember.IsAttachable%2A>。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>この型にします</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "0 個以上含んだコレクション<xref href=&quot;System.Xaml.XamlMember&quot;></xref>値。"
  overload: System.Xaml.XamlType.GetAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAllMembers
  id: GetAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これによって公開されているすべてのメンバーを含むコレクションを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAllMembers%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupAllMembers%2A>。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Xaml.XamlMember> GetAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
      description: "0 個以上含んだコレクション<xref href=&quot;System.Xaml.XamlMember&quot;></xref>値。"
  overload: System.Xaml.XamlType.GetAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  id: GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>このアタッチ可能なメンバーをという名前を表す特定<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupAttachableMember%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupAttachableMember%2A>。      > [!IMPORTANT] ><xref:System.Xaml.XamlType.LookupAttachableMember%2A>は仮想で、そのため、オーバーライドできます</xref:System.Xaml.XamlType.LookupAttachableMember%2A>。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、<xref:System.ComponentModel.TypeDescriptor>`Get*`基になる CLR 型に関する情報</xref:System.ComponentModel.TypeDescriptor>。 Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public System.Xaml.XamlMember GetAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "でアタッチ可能なメンバーの名前`ownerTypeName.MemberName`フォーム。"
    return:
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>オブジェクト要求されたアタッチ可能なメンバーをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>その名前でアタッチ可能なメンバーが存在しない場合、します。"
  overload: System.Xaml.XamlType.GetAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetHashCode
  id: GetHashCode
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "このオブジェクトのハッシュ コードを返します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "整数ハッシュ コード。"
  overload: System.Xaml.XamlType.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>これからメンバーをという名前の特定の<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "値は、`name`修飾すると想定されます。 アタッチされたメンバーを示す型で修飾された名前を送信する必要があります<xref:System.Xaml.XamlType.GetAttachableMember%2A>代わりにします</xref:System.Xaml.XamlType.GetAttachableMember%2A>。 プレフィックス付きのメンバー名は使用できません。プレフィックスは使用状況と、XAML 型システムは、このような使用法のコンテキストとプレフィックスをマップする方法を知ることはできません。       このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupMember%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupMember%2A>。      > [!IMPORTANT] ><xref:System.Xaml.XamlType.LookupMember%2A>は仮想で、そのため、オーバーライドできます</xref:System.Xaml.XamlType.LookupMember%2A>。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、<xref:System.ComponentModel.TypeDescriptor>`Get*`基になる CLR 型に関する情報</xref:System.ComponentModel.TypeDescriptor>。 Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public System.Xaml.XamlMember GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "(文字列) として取得するメンバーの名前です。"
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>ようなメンバーが、それ以外の場合は、メンバーの情報を<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  id: GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "マークアップ拡張機能の種類の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型が返されます<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "この API は、関連する場合は、こののみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A>は`true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       入力`parameterCount`を使用しない特定の位置指定パラメーターの型を要求します。 マークアップ拡張機能の使用のアリティを指定することがあります。 多くの場合、マークアップ拡張機能の使用は、複数の「署名」を持つし、区別するために位置指定パラメーターの異なるパラメーター アリティ (数) を使用します。 ただし、重複 arities を許可して、差別化要因の位置指定パラメーターの型を使用するスキーマ コンテキストを構成することができます。 詳細については、 <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>。</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>を参照してください。 特定のアリティ (数) の場合、パラメーターの位置と型が異なります。 特定のアリティのマークアップ拡張機能の使用の位置指定の種類を取得するには、最初に呼び出す必要が GetPositionalParameters アリティ数を指定します。 返されるコレクションからその位置に項目を取得します。       このメソッドを呼び出すを呼び出すことができます<xref:System.Xaml.XamlType.LookupPositionalParameters%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupPositionalParameters%2A>。"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> GetPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "情報を表示する特定の構文またはコンス トラクター モードの数 (アリティ)。"
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "一連の<xref href=&quot;System.Xaml.XamlType&quot;></xref>値、ここで各<xref href=&quot;System.Xaml.XamlType&quot;></xref>は構文内の位置の型です。 マークアップ、マークアップ拡張機能の入力を指定するときに、同じ順序で、種類を指定する必要があります。"
  overload: System.Xaml.XamlType.GetPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.GetXamlNamespaces
  id: GetXamlNamespaces
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "型が記載されている XAML 名前空間の文字列識別子の一覧を返します。"
  remarks: "一般的な XAML 名前空間の識別子は、URI 形式の文字列です。       既定の実装の順序で、次のチェック: 構築で指定されている XAML 名前空間 (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>署名のみ); とスキーマ コンテキストから提供されている名前空間</xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>。 これらはそれぞれ場合、 `null`、1 つの空の文字列を含む新しいリストが生成されます。 参照方法を変更するには、このメソッドをオーバーライドすることができます。"
  syntax:
    content: public virtual System.Collections.Generic.IList<string> GetXamlNamespaces ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "ここで、各文字列は、XAML 名前空間の URI 識別子、文字列値の一覧。"
  overload: System.Xaml.XamlType.GetXamlNamespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Invoker
  id: Invoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>これに関連付けられている実装<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、いずれかを呼び出すことが呼び出し元を呼び出して<xref:System.Xaml.XamlType.LookupInvoker%2A>またはそのメソッドの特定のオーバーライド</xref:System.Xaml.XamlType.LookupInvoker%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupInvoker%2A>この型にします</xref:System.Xaml.XamlType.LookupInvoker%2A>。       場合、<xref:System.Xaml.XamlType.LookupInvoker%2A>オーバーライド`null`、既定の実装を返す場合、または`null`がないのため<xref:System.Xaml.XamlType.UnderlyingType%2A>この<xref:System.Xaml.XamlType>呼び出し元に返します<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>.</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName> 、</xref:System.Xaml.XamlType> </xref:System.Xaml.XamlType.UnderlyingType%2A> </xref:System.Xaml.XamlType.LookupInvoker%2A>"
  syntax:
    content: public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>これに関連付けられている実装<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.Invoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsAmbient
  id: IsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、アンビエントの種類を表します。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsAmbient%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsAmbient%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsAmbient%2A>この型にします</xref:System.Xaml.XamlType.LookupIsAmbient%2A>。"
  syntax:
    content: public bool IsAmbient { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、この<xref href=&quot;System.Xaml.XamlType&quot;></xref>アンビエントの型を表し、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsArray
  id: IsArray
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>配列を表します。"
  remarks: "既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupCollectionKind%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします</xref:System.Xaml.XamlType.LookupCollectionKind%2A>。"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>配列を表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Xaml.XamlType.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsCollection
  id: IsCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>コレクションを表します。"
  remarks: "既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupCollectionKind%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします</xref:System.Xaml.XamlType.LookupCollectionKind%2A>。"
  syntax:
    content: public bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>コレクションを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsConstructible
  id: IsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、構築型を表します。"
  remarks: "このプロパティに揃えます、 `[is default constructible]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsConstructible%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsConstructible%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsConstructible%2A>この型にします</xref:System.Xaml.XamlType.LookupIsConstructible%2A>。"
  syntax:
    content: public bool IsConstructible { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>構築型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsDictionary
  id: IsDictionary
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、ディクショナリを表します。"
  remarks: "このプロパティに揃えます、 `[is dictionary]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法は使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupCollectionKind%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupCollectionKind%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupCollectionKind%2A>この型にします</xref:System.Xaml.XamlType.LookupCollectionKind%2A>。"
  syntax:
    content: public bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>ディクショナリを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsGeneric
  id: IsGeneric
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>ジェネリック型を表します。"
  remarks: "このプロパティは<xref:System.Xaml.XamlType.TypeArguments%2A>。</xref:System.Xaml.XamlType.TypeArguments%2A>の null 値をチェックするヘルパー プロパティです。 固有の仕様がない`Lookup`IsGeneric に関連するメソッド。"
  syntax:
    content: public bool IsGeneric { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>ジェネリック型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsGeneric*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsMarkupExtension
  id: IsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>マークアップ拡張機能を表します。"
  remarks: "XAML の仕様の用語では、この型に割り当てることにする必要があります`x:MarkupExtension`を返すために`true`IsMarkupExtension 用です。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>この型にします</xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A>。"
  syntax:
    content: public bool IsMarkupExtension { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>マークアップ拡張機能を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameScope
  id: IsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従っての XAML 名前スコープを表します。"
  remarks: "XAML 名前スコープまたは複数のためのプロパティの名前の一意性を強制する`x:Name`  / `[name property]`です。 IsNameScope 場合`true`一意性を適用するためのいくつかのメカニズムが存在し、XAML 名前空間を所有しているこの種類の観点から評価する必要があります。 XAML 名前スコープは、別の XAML 名前スコープで所有されている型が検出されるまで、型のコンテンツを拡張します。       このプロパティに揃えます、 `[is name scope]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsNameScope%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsNameScope%2A></xref:System.Xaml.XamlType>。"
  syntax:
    content: public bool IsNameScope { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 名前スコープを表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNameValid
  id: IsNameValid
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>が有効なを使用して初期化される<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;></xref>その<xref:System.Xaml.XamlType.Name*>.</xref:System.Xaml.XamlType.Name*>として文字列"
  syntax:
    content: public bool IsNameValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>が有効なを使用して初期化される<xref uid=&quot;langword_csharp_xamlName&quot; name=&quot;xamlName&quot; href=&quot;&quot;></xref>文字列です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsNameValid*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsNullable
  id: IsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、null 許容型を表します。"
  remarks: "このプロパティに揃えます、 `[is nullable]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法を使用していないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsNullable%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsNullable%2A></xref:System.Xaml.XamlType>。"
  syntax:
    content: public bool IsNullable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> null 許容型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsPublic
  id: IsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>関連型システムのパブリック型を表します。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsPublic%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsPublic%2A></xref:System.Xaml.XamlType>。      > [!IMPORTANT] ><xref:System.Xaml.XamlType.LookupIsPublic%2A>は仮想で、そのため、オーバーライドできます</xref:System.Xaml.XamlType.LookupIsPublic%2A>。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合)、基になる CLR 型の型システムとアクセスの情報と予想される方法で整合不要になったように XAML 型についての報告されたアクセスを変更します。 割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>パブリック型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUnknown
  id: IsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>の基になる型システムで解決できない型を表します。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsUnknown%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsUnknown%2A></xref:System.Xaml.XamlType>。       関係する読み込みパスの<xref:System.Xaml.XamlObjectWriter>、<xref:System.Xaml.XamlType>を持つ`true`IsUnknown がオブジェクト グラフに書き込むためです</xref:System.Xaml.XamlType></xref:System.Xaml.XamlObjectWriter>。 既定の実装  <xref:System.Xaml>、<xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName>スローされます、<xref:System.Xaml.XamlObjectWriterException>ときに、関連する<xref:System.Xaml.XamlType>レポート`true`IsUnknown の</xref:System.Xaml.XamlType></xref:System.Xaml.XamlObjectWriterException></xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=fullName></xref:System.Xaml>。 渡さないでください、 <xref:System.Xaml.XamlType>IsUnknown として持つ`true`から例外を処理する準備済みでない限り、 <xref:System.Xaml.XamlObjectWriter>、その他の方法を調整することも、<xref:System.Xaml.XamlObjectWriter>動作や、オブジェクト グラフを作成する前に、XAML ノード ストリーム</xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlObjectWriter></xref:System.Xaml.XamlType>。"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>解決できない型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  id: IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 初期化中に、トップダウンを構築します。"
  remarks: "上から下へは、オブジェクト グラフを作成するときに、XAML プロセッサの動作を概算する比喩です。 トップダウンをビルドすると、型がインスタンス化される、親にアタッチされているし、そのプロパティが設定されます。 トップダウンの構築では、ハンドラーのプロパティ変更の複数回の呼び出しで回避できます。 このような処理は、オブジェクト グラフに波及し、そのため、複数のハンドラーの呼び出しを排除し、オブジェクト グラフの起動時のパフォーマンスの最適化を提供します。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>この型にします</xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A>。"
  syntax:
    content: public bool IsUsableDuringInitialization { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 初期化中に上から下へ、それ以外のビルドは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  id: IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>に従って XML 定義に空白の意味を持つコレクションを表します。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>この型にします</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>。"
  syntax:
    content: public bool IsWhitespaceSignificantCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、この<xref href=&quot;System.Xaml.XamlType&quot;></xref>空白文字の意味を持つコレクションを表します。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.IsXData
  id: IsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XML を表す<xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>、XAML 定義ごとにします。"
  remarks: "このプロパティに揃えます、 `[is xdata]` [MS-XAML] の仕様の情報項目。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsXData%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsXData%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsXData%2A>この型にします</xref:System.Xaml.XamlType.LookupIsXData%2A>。"
  syntax:
    content: public bool IsXData { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.IsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ItemType
  id: ItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "型情報を提供する値を取得、 <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref>プロパティこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このプロパティは関連する場合は、こののみ<xref:System.Xaml.XamlType>コレクションを表します (<xref:System.Xaml.XamlType.IsCollection%2A>は`true`).</xref:System.Xaml.XamlType.IsCollection%2A> </xref:System.Xaml.XamlType> `Items`プロパティは、どのようなプロパティは、その種類のコレクションまたは配列に項目を保持します。       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupItemType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupItemType%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupItemType%2A>この型にします</xref:System.Xaml.XamlType.LookupItemType%2A>。"
  syntax:
    content: public System.Xaml.XamlType ItemType { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>コレクション内の項目の型のオブジェクトをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>コレクションを表していません。"
  overload: System.Xaml.XamlType.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.KeyType
  id: KeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "このキー プロパティの型情報を提供する値を取得<xref href=&quot;System.Xaml.XamlType&quot;></xref>場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ディクショナリを表します。"
  remarks: "このプロパティは関連する場合は、こののみ<xref:System.Xaml.XamlType>ディクショナリを表します (<xref:System.Xaml.XamlType.IsDictionary%2A>は`true`).</xref:System.Xaml.XamlType.IsDictionary%2A> </xref:System.Xaml.XamlType>       既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupKeyType%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupKeyType%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupKeyType%2A>この型にします</xref:System.Xaml.XamlType.LookupKeyType%2A>。"
  syntax:
    content: public System.Xaml.XamlType KeyType { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>のディクショナリの使用、それ以外の場合、キーの型のオブジェクトを<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ディクショナリを表していません。"
  overload: System.Xaml.XamlType.KeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  id: LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "この XAML ディレクティブの別名は、XAML メンバーを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.GetAliasedProperty%2A>。</xref:System.Xaml.XamlType.GetAliasedProperty%2A>から値を取得するときに、このメソッドを呼び出すことができます。       既定の実装は、次の XAML ディレクティブの結果を返すことができます:`Key`です。`Name`;`Uid`; and `xml:lang`. 基になるリフレクションに依存およびが返すもこれらの値`null`エイリアス プロパティが見つからない場合。       既定内部の CLR リフレクションには依存しないと、XAML 型システム情報または型のスキーマ情報を報告のメタデータまたはその他の手法を使用している場合は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);
    parameters:
    - id: directive
      type: System.Xaml.XamlDirective
      description: "エイリアスのメンバーを検索するためのディレクティブ。"
    return:
      type: System.Xaml.XamlMember
      description: "エイリアスのメンバー場合が見つかりました。それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupAliasedProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  id: LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これによって公開されているすべてのアタッチ可能なプロパティを含む列挙可能なセットを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>。</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>から値を取得するときに、このメソッドを呼び出すことができます。       <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>、ジェネリック コレクションを返しますこれ`Lookup`メソッドがジェネリックの列挙可能なセットを返します</xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>。       既定の実装では、内部の CLR リフレクションを使用します。 ときに<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できる<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Xaml.XamlType.UnderlyingType%2A>。 この動作は、有効な基本型を検索しようとする LookupAllAttachableMembers 再帰的に呼び出し、返します`null`有効な基本型が存在しない場合。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。 Null の戻り値は、型のシステムやリフレクションのサポートの不足のための情報を決定できない場合に用に予約する必要があります。 場合は、型が有効では、リフレクションやその他の手法は、利用可能、型には、アタッチ可能なメンバーはありませんは、空を代わりに返す必要があります<xref:System.Collections.Generic.IEnumerable%601>を設定します</xref:System.Collections.Generic.IEnumerable%601>。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllAttachableMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "0 個以上を含む列挙可能なセット<xref href=&quot;System.Xaml.XamlMember&quot;></xref>値です。 それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupAllAttachableMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllMembers
  id: LookupAllMembers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "これによって公開されているすべてのメンバーを含む列挙可能なセットを返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.GetAllMembers%2A>。</xref:System.Xaml.XamlType.GetAllMembers%2A>から値を取得するときに、このメソッドを呼び出すことができます。       <xref:System.Xaml.XamlType.GetAllMembers%2A>、ジェネリック コレクションを返しますこれ`Lookup`メソッドがジェネリックの列挙可能なセットを返します</xref:System.Xaml.XamlType.GetAllMembers%2A>。       既定の実装では、内部の CLR リフレクションを使用します。 場合、<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できます<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Xaml.XamlType.UnderlyingType%2A>。 この動作は、有効な基本型を検索しようとする LookupAllMembers 再帰的に呼び出し、返します`null`有効な基本型が存在しない場合。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。 Null の戻り値は、型のシステムやリフレクションのサポートの不足のための情報を決定できない場合に用に予約する必要があります。 リフレクションまたは他の手法が使用可能な型が有効な場合型がメンバーを持たない場合は、空を代わりに返す必要があります<xref:System.Collections.Generic.IEnumerable%601>を設定します</xref:System.Collections.Generic.IEnumerable%601>。       LookupAllMembers の戻り値と<xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>相互に排他的にする必要があります</xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A>。 そのメンバーが&2; つの異なるとして報告される場合は、バッキング型システムのプロパティが、アタッチ可能な使用法と同様に、標準インスタンスの使用をサポートできる場合がある場合は、<xref:System.Xaml.XamlMember>アタッチ可能な一覧と、標準的なメンバー リスト内の別に表示される値の&1; つの値</xref:System.Xaml.XamlMember>。"
  syntax:
    content: protected virtual System.Collections.Generic.IEnumerable<System.Xaml.XamlMember> LookupAllMembers ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
      description: "0 個以上を含む列挙可能なセット<xref href=&quot;System.Xaml.XamlMember&quot;></xref>値。"
  overload: System.Xaml.XamlType.LookupAllMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  id: LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "として使用されている型の一覧を返します、<xref:System.Xaml.XamlType.ContentProperty*>値<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Xaml.XamlType.ContentProperty*> 。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.AllowedContentTypes%2A>。</xref:System.Xaml.XamlType.AllowedContentTypes%2A>から値を取得するときに、このメソッドを呼び出すことができます。       <xref:System.Xaml.XamlType.CanAssignTo%2A>特定のコンテンツ タイプは考慮されません<xref:System.Xaml.XamlType.AllowedContentTypes%2A>。</xref:System.Xaml.XamlType.AllowedContentTypes%2A>の目的で複数の型</xref:System.Xaml.XamlType.CanAssignTo%2A>として評価される型       既定の実装は、の他のプロパティを使用できます<xref:System.Xaml.XamlType>(<xref:System.Xaml.XamlType.ContentWrappers%2A>、 <xref:System.Xaml.XamlType.ContentProperty%2A>、または<xref:System.Xaml.XamlType.ItemType%2A>) 結果を取得します</xref:System.Xaml.XamlType.ItemType%2A></xref:System.Xaml.XamlType.ContentProperty%2A></xref:System.Xaml.XamlType.ContentWrappers%2A></xref:System.Xaml.XamlType>。 `Lookup`オーバーライドの前のプロパティ リストは、この判断で呼び出すこともできます。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupAllowedContentTypes ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "使用可能なコンテンツ型の一覧。"
  overload: System.Xaml.XamlType.LookupAllowedContentTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  id: LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref> 、特定の名前からアタッチ可能な<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.GetAttachableMember%2A>。</xref:System.Xaml.XamlType.GetAttachableMember%2A>から値を取得するときに、このメソッドを呼び出すことができます。       既定の実装では、内部の CLR リフレクションを使用します。 ときに<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できる<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Xaml.XamlType.UnderlyingType%2A>。 この動作は、有効な基本型を検索しようとする LookupAttachableMember 再帰的に呼び出し、返します`null`有効な基本型が存在しない場合。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。      > [!IMPORTANT] > LookupAttachableMember は仮想でと、そのため、オーバーライドされることができます。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、<xref:System.ComponentModel.TypeDescriptor>`Get*`基になる CLR 型に関する情報</xref:System.ComponentModel.TypeDescriptor>。 Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "でアタッチ可能なメンバーの名前`ownerTypeName.MemberName`フォーム。"
    return:
      type: System.Xaml.XamlMember
      description: "A <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>オブジェクト要求されたアタッチ可能なメンバーをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>その名前でアタッチ可能なメンバーが存在しない場合、します。"
  overload: System.Xaml.XamlType.LookupAttachableMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupBaseType
  id: LookupBaseType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>この XAML 型の直接の基本型にします。 この値の決定は、基になる型に基づいてこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>とスキーマ コンテキスト。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.BaseType%2A>。</xref:System.Xaml.XamlType.BaseType%2A>から値を取得するときに、このメソッドを呼び出すことができます。       既定の実装を表す内部定数を返す場合があります、<xref:System.Object>場合<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`</xref:System.Xaml.XamlType.UnderlyingType%2A></xref:System.Object>。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。      > [!IMPORTANT] > LookupBaseType は仮想でと、そのため、オーバーライドされることができます。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合)、基になる CLR 型の型システム情報と予想される方法で整合不要になったように XAML 型について報告される型情報を変更します。 割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupBaseType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "<xref href=&quot;System.Xaml.XamlType&quot;> </xref>この XAML 型の直接の基本型にします。"
  overload: System.Xaml.XamlType.LookupBaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCollectionKind
  id: LookupCollectionKind
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "値を返します、 <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref>この型の列挙される特定のコレクションを宣言する<xref href=&quot;System.Xaml.XamlType&quot;></xref>を使用します。"
  remarks: "このメソッドは、内部プライベート メソッドによって呼び出されます (パブリック`CollectionKind`または`GetCollectionKind`に API が存在する<xref:System.Xaml.XamlType>).</xref:System.Xaml.XamlType>       既定の実装では、内部の CLR リフレクションを使用します。 場合、<xref:System.Xaml.XamlType.UnderlyingType%2A>は`null`、既定の実装を使用できます<xref:System.Xaml.XamlType.BaseType%2A>が利用可能な場合は</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Xaml.XamlType.UnderlyingType%2A>。 LookupCollectionKind を再帰的に有効な基本型を検索しようとするが、この動作によって間接的に呼び出す返します<xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>有効な基本型が存在しない場合</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>。 既定の実装が検索しようとした一般に、`Add`リフレクションによって基になる型のメソッドです。 場合が見つかると、<xref:System.Reflection.MethodInfo>の`Add`メソッドは、十分な情報を決定する<xref:System.Xaml.Schema.XamlCollectionKind>値が返されます</xref:System.Xaml.Schema.XamlCollectionKind></xref:System.Reflection.MethodInfo>。 <xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>。</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>を返しますそれ以外の場合       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlCollectionKind
      description: "値、 <xref href=&quot;System.Xaml.Schema.XamlCollectionKind&quot;> </xref>列挙します。"
  overload: System.Xaml.XamlType.LookupCollectionKind*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  id: LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>引数を持つ必要があります (使用してジェネリック制約<xref uid=&quot;langword_csharp_x:TypeArguments&quot; name=&quot;x:TypeArguments&quot; href=&quot;&quot;></xref>初期化のテキスト、またはその他の XAML の手法) 型の有効なインスタンスを構築します。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>。</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>から値を取得するときに、このメソッドを呼び出すことができます。       既定の実装を返します`false`CLR で値型と見なされますの種類のシステムと入力します。 値型、CLR リフレクション以外の場合<xref:System.Reflection.ConstructorInfo>既定のコンス トラクターが存在するかどうかを調べるために使用します</xref:System.Reflection.ConstructorInfo>。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual bool LookupConstructionRequiresArguments ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>インスタンスの作成は、引数値を必要とする場合それ以外の場合は false です。"
  overload: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentProperty
  id: LookupContentProperty
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します<xref href=&quot;System.Xaml.XamlMember&quot;></xref>これのコンテンツ プロパティの情報を<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.ContentProperty%2A>。</xref:System.Xaml.XamlType.ContentProperty%2A>から値を取得するときに、このメソッドを呼び出すことができます。       既定の実装<xref:System.Windows.Markup.ContentPropertyAttribute>型定義</xref:System.Windows.Markup.ContentPropertyAttribute>。 チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 既定の実装を返しますのかどうか、これらのチェックはコンテンツの種類を検出しません、`null`です。       既定の内部の CLR リフレクションに依存しない、し、XAML 型システム情報または型のスキーマ情報を報告のメタデータやその他の手法を使用している場合は、このメソッドをオーバーライドします。"
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupContentProperty ();
    parameters: []
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;></xref>このコンテンツのプロパティの情報を<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。 May be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupContentProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupContentWrappers
  id: LookupContentWrappers
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "一覧を取得<xref href=&quot;System.Xaml.XamlType&quot;></xref>このコンテンツのラッパーを表す値<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "コンテンツのラッパーは、そのコレクションに使用される型は、型システムを連続していないときのコンテンツのコレクション型を表すクラスです。 コンテンツ ラッパー コレクション項目の種類を超えるいくつかの方法で制限されるとして予想される<xref:System.Object>または同等のニュートラル オブジェクト</xref:System.Object>。 ただし、このような制限が、およびデザインまたはその型を使用するプロパティの目的は、型システムではなくにのみ適用されます。 1 つ以上のコンテンツ ラッパーは、型に存在できます。       クラスの例と WPF XAML 実装からシナリオの場合は、「 <xref:System.Windows.Documents.InlineCollection>。</xref:System.Windows.Documents.InlineCollection>"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupContentWrappers ();
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "一連の<xref href=&quot;System.Xaml.XamlType&quot;></xref>このコンテンツのラッパーを表す値<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupContentWrappers*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  id: LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "派生クラスで実装された場合を返します、 <xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref>実装します。"
  remarks: "CLR 属性の値を取得する代替方法を内部のリフレクションを提供するには、このメソッドをオーバーライドします。 上書きがない場合では、内部 reflector は、一般的な CLR ロジックでリフレクションを使用します。       既定の実装を返します`null`です。"
  syntax:
    content: protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();
    parameters: []
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "<xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref>実装します。"
  overload: System.Xaml.XamlType.LookupCustomAttributeProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupDeferringLoader
  id: LookupDeferringLoader
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;オブジェクトの XAML 宣言の遅延読み込みの際に使用されるオブジェクト。"
  remarks: "呼び出し元<xref:System.Xaml.XamlType.DeferringLoader%2A>。</xref:System.Xaml.XamlType.DeferringLoader%2A>から値を取得するときに、このメソッドを呼び出すことができます。 このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.DeferringLoader%2A>をカスタムを既定の内部リフレクションで有効になっても提供するよりも、別の値を返す<xref:System.Xaml.Schema.XamlTypeInvoker>情報</xref:System.Xaml.Schema.XamlTypeInvoker></xref:System.Xaml.XamlType.DeferringLoader%2A>。       既定の実装は、読み取り<xref:System.Windows.Markup.XamlDeferLoadAttribute>。</xref:System.Windows.Markup.XamlDeferLoadAttribute>に基づいてオブジェクトを返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 このメソッドが戻るかどうかは、値は使用できません、`null`です。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader> LookupDeferringLoader ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;を持つ、 <xref href=&quot;System.Xaml.XamlDeferringLoader&quot;> </xref>ジェネリックに制約します。"
  overload: System.Xaml.XamlType.LookupDeferringLoader*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupInvoker
  id: LookupInvoker
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>これに関連付けられている<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.Invoker%2A>。</xref:System.Xaml.XamlType.Invoker%2A>への呼び出しによって呼び出すことができます。       既定の実装は不要を<xref:System.Xaml.XamlType>初期<xref:System.Xaml.Schema.XamlTypeInvoker>.</xref:System.Xaml.Schema.XamlTypeInvoker>を通過するコンス トラクターのいずれかを使用して構築します。</xref:System.Xaml.XamlType> ただし、<xref:System.Xaml.XamlType.UnderlyingType%2A>の値が存在する必要があります、<xref:System.Xaml.XamlType>以外の場合、既定の実装を返します`null`</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.UnderlyingType%2A>。       このメソッドをオーバーライドして<xref:System.Xaml.Schema.XamlTypeInvoker>派生クラスを返すしようと</xref:System.Xaml.Schema.XamlTypeInvoker>からも派生クラスを作成する場合 返す場合`null`、<xref:System.Xaml.XamlType.Invoker%2A>返します<xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName>の呼び出し元にします</xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=fullName></xref:System.Xaml.XamlType.Invoker%2A>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlTypeInvoker
      description: "<xref href=&quot;System.Xaml.Schema.XamlTypeInvoker&quot;> </xref>情報<xref href=&quot;System.Xaml.XamlType&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupInvoker*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsAmbient
  id: LookupIsAmbient
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、アンビエントの種類を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsAmbient%2A>。</xref:System.Xaml.XamlType.IsAmbient%2A>への呼び出しによって呼び出すことができます。       既定の実装で CLR のリフレクションを使用して、<xref:System.Xaml.XamlType.UnderlyingType%2A>基本型を確認できます</xref:System.Xaml.XamlType.UnderlyingType%2A>。 この実装を確認、<xref:System.Windows.Markup.AmbientAttribute>をクラス レベルで、関連する種類の定義に適用して返す`true`でも</xref:System.Windows.Markup.AmbientAttribute>。 その他のすべてのケースを返す`false`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsAmbient%2A>を内部リフレクションの既定で有効になってよりも、別の値を返す</xref:System.Xaml.XamlType.IsAmbient%2A>。"
  syntax:
    content: protected virtual bool LookupIsAmbient ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、この<xref href=&quot;System.Xaml.XamlType&quot;></xref>アンビエントの型を表し、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsAmbient*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsConstructible
  id: LookupIsConstructible
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、構築型を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsConstructible%2A>。</xref:System.Xaml.XamlType.IsConstructible%2A>への呼び出しによって呼び出すことができます。       既定の実装<xref:System.Xaml.XamlType.UnderlyingType%2A>。</xref:System.Xaml.XamlType.UnderlyingType%2A> CLR リフレクションを使用します。 具象および終了した、入れ子にされない型があります。 既定の実装をチェックするかどうか型、値型と<xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>。</xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>の戻り値 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、このメソッドが戻る`true`</xref:System.Xaml.XamlType.UnderlyingType%2A>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsConstructible%2A>を内部リフレクションの既定で有効になってよりも、別の値を返す</xref:System.Xaml.XamlType.IsConstructible%2A>。"
  syntax:
    content: protected virtual bool LookupIsConstructible ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>構築型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsConstructible*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  id: LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>マークアップ拡張機能を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsMarkupExtension%2A>。</xref:System.Xaml.XamlType.IsMarkupExtension%2A>への呼び出しによって呼び出すことができます。       既定の実装は、この呼び出しののみで構成されています:`return CanAssignTo(XamlLanguage.MarkupExtension);`する場合は、このメソッドをオーバーライド<xref:System.Xaml.XamlType.IsMarkupExtension%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsMarkupExtension%2A>。       XAML の仕様の用語では、この型に割り当てることにする必要があります`x:MarkupExtension`を返すために`true`<xref:System.Xaml.XamlType.IsMarkupExtension%2A>です</xref:System.Xaml.XamlType.IsMarkupExtension%2A>。"
  syntax:
    content: protected virtual bool LookupIsMarkupExtension ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>マークアップ拡張機能を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsMarkupExtension*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNameScope
  id: LookupIsNameScope
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従っての XAML 名前スコープを表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsNameScope%2A>。</xref:System.Xaml.XamlType.IsNameScope%2A>への呼び出しによって呼び出すことができます。       既定の実装は、<xref:System.Xaml.XamlType.CanAssignTo%2A>型<xref:System.Windows.Markup.INameScope>。</xref:System.Windows.Markup.INameScope>に対して間接的に呼び出す</xref:System.Xaml.XamlType.CanAssignTo%2A> <xref:System.Windows.Markup.INameScope>WindowsBase アセンブリで定義されているインターフェイス。</xref:System.Windows.Markup.INameScope> XAML 名前スコープ識別するためには、この手法を使用する WPF が両方と[!INCLUDE[TLA#tla_workflow](~/add/includes/tlasharptla-workflow-md.md)]XAML の実装です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsNameScope%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsNameScope%2A>。       XAML 名前スコープまたは複数に使用されるプロパティの名前の一意性を強制する`x:Name`  / `[name property]`です。 場合<xref:System.Xaml.XamlType.IsNameScope%2A>は`true`一意性を適用するためのいくつかのメカニズムが存在する必要があり、XAML 名前空間を所有しているこの種類の観点から評価する必要があります</xref:System.Xaml.XamlType.IsNameScope%2A>。 XAML 名前スコープは、XAML 名前スコープを所有している別の型が検出されるまで、型のコンテンツを拡張します。"
  syntax:
    content: protected virtual bool LookupIsNameScope ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 名前スコープを表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsNullable
  id: LookupIsNullable
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 定義に従って、null 許容型を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsNullable%2A>。</xref:System.Xaml.XamlType.IsNullable%2A>への呼び出しによって呼び出すことができます。       既定の実装は、概念に基づいて CLR コア ライブラリ null 許容、 <xref:System.Xaml.XamlType.UnderlyingType%2A>。</xref:System.Xaml.XamlType.UnderlyingType%2A>に照らしてチェックの決定 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`</xref:System.Xaml.XamlType.UnderlyingType%2A>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsNullable%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsNullable%2A>。"
  syntax:
    content: protected virtual bool LookupIsNullable ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> null 許容型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsPublic
  id: LookupIsPublic
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>関連型システムのパブリック型を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsPublic%2A>。</xref:System.Xaml.XamlType.IsPublic%2A>への呼び出しによって呼び出すことができます。       既定の実装が null でない<xref:System.Xaml.XamlType.UnderlyingType%2A>。</xref:System.Xaml.XamlType.UnderlyingType%2A>に対して CLR リフレクションを使用します。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`</xref:System.Xaml.XamlType.UnderlyingType%2A>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsPublic%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsPublic%2A>。      > [!IMPORTANT] > LookupIsPublic は仮想でと、そのため、オーバーライドされることができます。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) を XAML 型について報告されたアクセス情報が変更され、基になる CLR 型の型システムまたはアクセスの情報と予想される方法で配置できなくします。 割り当て操作とアクセスのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual bool LookupIsPublic ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>パブリック型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsUnknown
  id: LookupIsUnknown
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>の基になる型システムで解決できない型を表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsUnknown%2A>。</xref:System.Xaml.XamlType.IsUnknown%2A>への呼び出しによって呼び出すことができます。       既定の実装では、CLR のリフレクションを使用できます。 Null <xref:System.Xaml.XamlType.UnderlyingType%2A>、返します`true`</xref:System.Xaml.XamlType.UnderlyingType%2A>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsUnknown%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsUnknown%2A>。"
  syntax:
    content: protected virtual bool LookupIsUnknown ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> nonresolvable 型を表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  id: LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>に従って XML 定義に空白の意味を持つコレクションを表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>。</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>への呼び出しによって呼び出すことができます。       既定の実装が<xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>。</xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>の読み取りに基づいた値を返します チェック、<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`false`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>。"
  syntax:
    content: protected virtual bool LookupIsWhitespaceSignificantCollection ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>空白文字の意味を持つコレクションを表す、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupIsXData
  id: LookupIsXData
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XML を表す<xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;> </xref>、XAML 定義ごとにします。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.IsXData%2A>。</xref:System.Xaml.XamlType.IsXData%2A>への呼び出しによって呼び出すことができます。       既定の実装は、<xref:System.Xaml.XamlType.CanAssignTo%2A>型<xref:System.Xml.Serialization.IXmlSerializable>。</xref:System.Xml.Serialization.IXmlSerializable>に対して間接的に呼び出す</xref:System.Xaml.XamlType.CanAssignTo%2A>       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsXData%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsXData%2A>。"
  syntax:
    content: protected virtual bool LookupIsXData ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if this <xref href=&quot;System.Xaml.XamlType&quot;></xref> represents <xref uid=&quot;langword_csharp_XDATA&quot; name=&quot;XDATA&quot; href=&quot;&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Xaml.XamlType.LookupIsXData*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupItemType
  id: LookupItemType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "型情報を提供する値を返します、 <xref uid=&quot;langword_csharp_Items&quot; name=&quot;Items&quot; href=&quot;&quot;> </xref>プロパティこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.ItemType%2A>.</xref:System.Xaml.XamlType.ItemType%2A>への呼び出しによって呼び出すことができます。       既定の実装の確認などの CLR リフレクションの概念を使用できます、`Add`メソッドによって<xref:System.Reflection.MethodInfo>を使用して、<xref:System.Reflection.ParameterInfo>以外の場合はチェック<xref:System.Xaml.XamlType.IsArray%2A>; とチェック<xref:System.Xaml.XamlType.BaseType%2A>して同じロジックがあります</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Xaml.XamlType.IsArray%2A></xref:System.Reflection.ParameterInfo></xref:System.Reflection.MethodInfo>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.ItemType%2A>別のロジックを使用する</xref:System.Xaml.XamlType.ItemType%2A>。 あるケース<xref:System.Xaml.XamlType.LookupCollectionKind%2A>返します<xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>返す必要があります`null`</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName></xref:System.Xaml.XamlType.LookupCollectionKind%2A>。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupItemType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>コレクション内の項目の型のオブジェクトをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>この<xref href=&quot;System.Xaml.XamlType&quot;></xref>コレクションを表していません。"
  overload: System.Xaml.XamlType.LookupItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupKeyType
  id: LookupKeyType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "このキーのプロパティの型情報を提供する値を返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>場合は、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ディクショナリを表します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.KeyType%2A>。</xref:System.Xaml.XamlType.KeyType%2A>への呼び出しによって呼び出すことができます。       既定の実装の確認などの CLR リフレクションの概念を使用できます、`Add`メソッドによって<xref:System.Reflection.MethodInfo>を使用して、 <xref:System.Reflection.ParameterInfo>; とチェック<xref:System.Xaml.XamlType.BaseType%2A>同じロジックがしようとしているとします</xref:System.Xaml.XamlType.BaseType%2A></xref:System.Reflection.ParameterInfo></xref:System.Reflection.MethodInfo>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.KeyType%2A>別のロジックを使用する</xref:System.Xaml.XamlType.KeyType%2A>。 あるケース<xref:System.Xaml.XamlType.LookupCollectionKind%2A>返さない<xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName>返す必要があります`null`</xref:System.Xaml.Schema.XamlCollectionKind?displayProperty=fullName></xref:System.Xaml.XamlType.LookupCollectionKind%2A>。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupKeyType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>ディクショナリの使用状況のキーの型のオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この<xref href=&quot;System.Xaml.XamlType&quot;></xref>ディクショナリを表していません"
  overload: System.Xaml.XamlType.LookupKeyType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  id: LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返された型情報を提供する値を返します<xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;></xref>この<xref href=&quot;System.Xaml.XamlType&quot;></xref>マークアップ拡張機能を表す場合は、します。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>。</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>への呼び出しによって呼び出すことができます。       既定の実装は、<xref:System.Xaml.XamlType>読み取り<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>。</xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>に基づいて</xref:System.Xaml.XamlType>返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`null`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>別のロジックを使用する</xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>。"
  syntax:
    content: protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();
    parameters: []
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>マークアップ拡張機能の使用方法の戻り値の型のオブジェクトをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>はマークアップ拡張機能を表していません。"
  overload: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  id: LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 <xref href=&quot;System.Xaml.XamlMember&quot;> </xref>これからメンバーをという名前の特定の<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.GetMember%2A>。</xref:System.Xaml.XamlType.GetMember%2A>への呼び出しによって呼び出すことができます。       既定の実装を返します、 <xref:System.Xaml.XamlType>CLR の内部のリフレクションとスキーマのコンテキストで評価に基づいて</xref:System.Xaml.XamlType>。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.GetMember%2A>別のロジックを使用する</xref:System.Xaml.XamlType.GetMember%2A>。      > [!IMPORTANT] > LookupMember 仮想的では、そのため、オーバーライドされることができます。 上書きされる可能性があります (悪意のあるものかどうかまたはそれ以外の場合) と予想される方法で不要になった位置が揃うように、報告された XAML 型のメンバーを変更する、<xref:System.ComponentModel.TypeDescriptor>`Get*`基になる CLR 型に関する情報</xref:System.ComponentModel.TypeDescriptor>。 Reporting メンバーのセキュリティ クリティカルなチェックには、基になる CLR 型を代わりに使用します。"
  syntax:
    content: protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);
    parameters:
    - id: name
      type: System.String
      description: "(文字列) として取得するメンバーの名前です。"
    - id: skipReadOnlyCheck
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>そのメンバーがある場合でも、メンバーを返す、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>値&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;です。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>を戻さない、 &lt;xref:System.Xaml.XamlMember.IsReadOnly%2A?displayProperty=fullName&gt;メンバー。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Xaml.XamlMember
      description: "<xref href=&quot;System.Xaml.XamlMember&quot;> </xref>メンバーが、それ以外の場合は、メンバーの情報を<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupMember*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  id: LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "マークアップ拡張機能の種類の特定のマークアップ拡張機能の使用でサポートされている位置指定パラメーターの型が返されます<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.</xref:System.Xaml.XamlType.GetPositionalParameters%2A>への呼び出しによって呼び出すことができます。       既定の実装では、コンス トラクターを検索して、アリティのチェックに基づく内部のリフレクション情報を使用します。 このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.GetPositionalParameters%2A>別のロジックを使用する</xref:System.Xaml.XamlType.GetPositionalParameters%2A>。       この API は、関連する場合は、こののみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (<xref:System.Xaml.XamlType.IsMarkupExtension%2A>は`true`).</xref:System.Xaml.XamlType.IsMarkupExtension%2A> </xref:System.Xaml.XamlType>       入力`parameterCount`を使用しない特定の位置指定パラメーターの型を要求します。 マークアップ拡張機能の使用のアリティを指定することがあります。 多くの場合、マークアップ拡張機能の使用は、複数の署名を持つし、区別するために位置指定パラメーターの異なるパラメーター アリティ (数) を使用します。 ただし、重複 arities を許可して、差別化要因の位置指定パラメーターの型を使用するスキーマ コンテキストを構成することができます。 詳細については、 <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>。</xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>を参照してください。 特定のアリティ count の場合は、パラメーターの位置と型が異なります。 特定のアリティのマークアップ拡張機能の使用の位置指定の種類を取得するには、最初に呼び出す<xref:System.Xaml.XamlType.GetPositionalParameters%2A>アリティ カウント</xref:System.Xaml.XamlType.GetPositionalParameters%2A>。 返されるコレクションからその位置に項目を取得します。"
  syntax:
    content: protected virtual System.Collections.Generic.IList<System.Xaml.XamlType> LookupPositionalParameters (int parameterCount);
    parameters:
    - id: parameterCount
      type: System.Int32
      description: "情報を表示する特定の構文またはコンス トラクター モードの数 (アリティ)。"
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "一連の<xref href=&quot;System.Xaml.XamlType&quot;></xref>値 where これらの各<xref href=&quot;System.Xaml.XamlType&quot;></xref>は構文内の位置の型です。 マークアップ、マークアップ拡張機能の入力を指定するときは、同じ順序でそれらの型を指定する必要があります。"
  overload: System.Xaml.XamlType.LookupPositionalParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  id: LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "マークアップ拡張機能のセット操作に使用するハンドラーのコールバックを返します。"
  remarks: "既定の実装が<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>。</xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>の読み取りに基づいた値を返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`null`です。"
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs> LookupSetMarkupExtensionHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
      description: "マークアップ拡張機能のセット操作に使用するハンドラーのコールバック。"
  overload: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  id: LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "型コンバーターを設定する場合に使用するハンドラーを返します。"
  remarks: "既定の実装が<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>。</xref:System.Windows.Markup.XamlSetTypeConverterAttribute>を読み取り中に基づいた値を返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`null`です。"
  syntax:
    content: protected virtual EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs> LookupSetTypeConverterHandler ();
    parameters: []
    return:
      type: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
      description: "型コンバーターを設定する場合に使用するハンドラー。"
  overload: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  id: LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>周囲の空白をトリミングするモードを使用してシリアル化する必要があります。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>。</xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>への呼び出しによって呼び出すことができます。       既定の実装が<xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>。</xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>を読み取り中に基づいた値を返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`false`です。"
  syntax:
    content: protected virtual bool LookupTrimSurroundingWhitespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>周囲の空白をトリミングするモードでシリアル化された、それ以外にする必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupTypeConverter
  id: LookupTypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;を持つ、 <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref>制約で、この値の型変換動作を表す<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.TypeConverter%2A>。</xref:System.Xaml.XamlType.TypeConverter%2A>への呼び出しによって呼び出すことができます。       既定の実装が<xref:System.ComponentModel.TypeConverterAttribute>。</xref:System.ComponentModel.TypeConverterAttribute>を読み取り中に基づいた値を返します 既定の実装を確認できますも<xref:System.Xaml.XamlType.BaseType%2A>即時の基になる型の属性が見つからない場合、属性の</xref:System.Xaml.XamlType.BaseType%2A>。 列挙型、共通の値型とジェネリックの既定の変換の特別なロジックも含まれています。 返すかどうか、値は使用できません、`null`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.TypeConverter%2A>別のロジックを使用する</xref:System.Xaml.XamlType.TypeConverter%2A>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> LookupTypeConverter ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>制約をこの値の型変換動作を表す<xref href=&quot;System.Xaml.XamlType&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUnderlyingType
  id: LookupUnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "CLR を返します<xref:System.Type>この基になっている<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Type> 。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.UnderlyingType%2A>。</xref:System.Xaml.XamlType.UnderlyingType%2A>への呼び出しによって呼び出すことができます。       既定の実装では、内部のフィールドを返します。 そのフィールドは構築時に初期化一般にし、その値はに基づいてどのコンス トラクターが呼び出されたと指定した情報です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.UnderlyingType%2A>別のロジックを使用する</xref:System.Xaml.XamlType.UnderlyingType%2A>。"
  syntax:
    content: protected virtual Type LookupUnderlyingType ();
    parameters: []
    return:
      type: System.Type
      description: "CLR<xref:System.Type>この基になっている<xref href=&quot;System.Xaml.XamlType&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Type> 。"
  overload: System.Xaml.XamlType.LookupUnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  id: LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を返すかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 初期化中に、トップダウンを構築します。"
  remarks: "上から下へは、オブジェクト グラフを作成するときは、XAML プロセッサの動作を概算する比喩です。 構築時に、トップダウン、型がインスタンス化される、親にアタッチされているし、そのプロパティが設定します。 トップダウンの構築では、ハンドラーのプロパティ変更の複数回の呼び出しで回避できます。 このような処理は、オブジェクト グラフに波及し、そのため、複数のハンドラーの呼び出しを排除し、オブジェクト グラフの起動時のパフォーマンスの最適化を提供します。       このメソッドは、 <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>への呼び出しによって呼び出すことができます。       既定の実装が<xref:System.Windows.Markup.UsableDuringInitializationAttribute>。</xref:System.Windows.Markup.UsableDuringInitializationAttribute>の読み取りに基づいた値を返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 返すかどうか、値は使用できません、`false`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>別のロジックを使用する</xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>。"
  syntax:
    content: protected virtual bool LookupUsableDuringInitialization ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;> </xref> XAML 初期化中に上から下へ、それ以外のビルドは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.LookupUsableDuringInitialization*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.LookupValueSerializer
  id: LookupValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返します、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;を持つ、<xref:System.Windows.Markup.ValueSerializer>制約で、この値の値のシリアル化の動作を表す<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Windows.Markup.ValueSerializer> 。"
  remarks: "このメソッドは、 <xref:System.Xaml.XamlType.ValueSerializer%2A>。</xref:System.Xaml.XamlType.ValueSerializer%2A>への呼び出しによって呼び出すことができます。       既定の実装が<xref:System.Windows.Markup.ValueSerializerAttribute>.</xref:System.Windows.Markup.ValueSerializerAttribute>を読み取り中に基づいた値を返します チェック<xref:System.Xaml.XamlType.BaseType%2A>属性に直接の基になる型の属性が見つからない場合</xref:System.Xaml.XamlType.BaseType%2A>。 列挙型、共通の値型またはジェネリックの既定のシリアル化の特別なロジックも含まれています。 返すかどうか、値は使用できません、`null`です。       このメソッドをオーバーライドする場合は<xref:System.Xaml.XamlType.ValueSerializer%2A>別のロジックを使用する</xref:System.Xaml.XamlType.ValueSerializer%2A>。"
  syntax:
    content: protected virtual System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> LookupValueSerializer ();
    parameters: []
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref:System.Windows.Markup.ValueSerializer>をこの値の値のシリアル化の動作を表す制約<xref href=&quot;System.Xaml.XamlType&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Windows.Markup.ValueSerializer> 。"
  overload: System.Xaml.XamlType.LookupValueSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  id: MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "返された型情報を提供する値を取得<xref uid=&quot;langword_csharp_ProvideValue&quot; name=&quot;ProvideValue&quot; href=&quot;&quot;></xref>この<xref href=&quot;System.Xaml.XamlType&quot;></xref>を表している場合、マークアップ拡張機能、します。"
  remarks: "このプロパティは関連する場合は、こののみ<xref:System.Xaml.XamlType>マークアップ拡張機能を表します (`x:MarkupExtension`割り当て可能な種類の一覧には).</xref:System.Xaml.XamlType>       ため既定内部 CLR リフレクション手法使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>で上書き<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>この型にします</xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A>。"
  syntax:
    content: public System.Xaml.XamlType MarkupExtensionReturnType { get; }
    return:
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;> </xref>マークアップ拡張機能の使用方法の戻り値の型のオブジェクトをそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>はマークアップ拡張機能を表していません。"
  overload: System.Xaml.XamlType.MarkupExtensionReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.Name
  id: Name
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "型の文字列名を取得この<xref href=&quot;System.Xaml.XamlType&quot;></xref>を表します。"
  remarks: "このプロパティは、通常、スキーマで構築された名前を取得 (あたり、<xref:System.Xaml.XamlType.%23ctor%2A>署名)、またはの名前、 <xref:System.Type>、CLR 型システムの適切なコンス トラクターを使用して構成する場合</xref:System.Type></xref:System.Xaml.XamlType.%23ctor%2A>。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "この XAML 型の文字列名。"
  overload: System.Xaml.XamlType.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "指定した&2; つあるかどうかを判断<xref href=&quot;System.Xaml.XamlType&quot;></xref>オブジェクトが同じ値を設定します。"
  syntax:
    content: public static bool op_Equality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> xamlType1 </code>はの値と同じ<code> xamlType2 </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  id: op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
  type: Operator
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "指定した&2; つあるかどうかを判断<xref href=&quot;System.Xaml.XamlType&quot;></xref>オブジェクトが異なる値を設定します。"
  syntax:
    content: public static bool op_Inequality (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);
    parameters:
    - id: xamlType1
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    - id: xamlType2
      type: System.Xaml.XamlType
      description: "A <xref href=&quot;System.Xaml.XamlType&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の値<code> xamlType1 </code>の値とは異なる<code> xamlType2 </code>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  id: PreferredXamlNamespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "このプライマリの XAML 名前空間は、1 つの XAML 名前空間を取得<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "この実装は呼び出すことと同じ値を提供<xref:System.Xaml.XamlType.GetXamlNamespaces%2A>返される列挙可能なセットから最初の値の文字列を取得しています</xref:System.Xaml.XamlType.GetXamlNamespaces%2A>。"
  syntax:
    content: public string PreferredXamlNamespace { get; }
    return:
      type: System.String
      description: "この XAML 型のプライマリの XAML 名前空間の文字列としての識別子です。"
  overload: System.Xaml.XamlType.PreferredXamlNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "アクティブな取得<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>これを処理するため<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "<xref:System.Xaml.XamlSchemaContext>必要なパラメーターの入力を<xref:System.Xaml.XamlType>。</xref:System.Xaml.XamlType>を構築するときにします。</xref:System.Xaml.XamlSchemaContext>"
  syntax:
    content: public System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "アクティブな<xref href=&quot;System.Xaml.XamlSchemaContext&quot;></xref>これを処理するため<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ToString
  id: ToString
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "この文字列表現を返します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "<xref:System.Xaml.XamlType> <xref:System.Object.ToString%2A> <xref:System.Xaml.XamlType.Name%2A> <xref:System.Xaml.XamlType>。</xref:System.Xaml.XamlType>プロパティ</xref:System.Xaml.XamlType.Name%2A>を返します</xref:System.Object.ToString%2A>の実装</xref:System.Xaml.XamlType>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "この文字列表現<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  id: TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Xaml.XamlType&quot;></xref>が空白のコンテンツ内の周囲の空白をトリミングするシリアル化の動作を処理します。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことができます<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>この型にします</xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A>。"
  syntax:
    content: public bool TrimSurroundingWhitespace { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Xaml.XamlType&quot;></xref>空白文字を使用する型を表すトリム、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xaml.XamlType.TrimSurroundingWhitespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeArguments
  id: TypeArguments
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "ケースの型引数の一覧を取得、この<xref href=&quot;System.Xaml.XamlType&quot;></xref>ジェネリック型を表します。"
  remarks: "特定のシナリオがある、<xref:System.Xaml.XamlType>場所 TypeArguments パラメーターを呼び出して一覧を返します、型がまだ開いて</xref:System.Xaml.XamlType>。 この場合は、1 つ以上で、返された<xref:System.Xaml.XamlType>値のプレース ホルダーの値になります<xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>など`T`をジェネリックは開いていることを示します</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName></xref:System.Xaml.XamlType>。 このシナリオは、表示された場合に発生することができます、<xref:System.Xaml.XamlType>への呼び出しから<xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>の代わりに、XAML リーダーの実装から</xref:System.Xaml.XamlSchemaContext.GetXamlType%2A></xref:System.Xaml.XamlType>。"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.XamlType> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.XamlType}
      description: "型引数の型の一覧それ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>この場合、 <xref href=&quot;System.Xaml.XamlType&quot;> </xref>はジェネリック型を表していません。"
  overload: System.Xaml.XamlType.TypeArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.TypeConverter
  id: TypeConverter
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>制約型の値の変換動作を表します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことが<xref:System.Xaml.XamlType.LookupTypeConverter%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupTypeConverter%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupTypeConverter%2A>この型にします</xref:System.Xaml.XamlType.LookupTypeConverter%2A>。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter> TypeConverter { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref href=&quot;System.ComponentModel.TypeConverter&quot;></xref>制約型の値の変換動作を表します<xref href=&quot;System.Xaml.XamlType&quot;></xref>です。"
  overload: System.Xaml.XamlType.TypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.UnderlyingType
  id: UnderlyingType
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "CLR の取得<xref:System.Type>この基になっている<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Type> 。"
  syntax:
    content: public Type UnderlyingType { get; }
    return:
      type: System.Type
      description: "CLR<xref:System.Type>この基になっている<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Type> 。"
  overload: System.Xaml.XamlType.UnderlyingType*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlType.ValueSerializer
  id: ValueSerializer
  parent: System.Xaml.XamlType
  langs:
  - csharp
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "取得、 &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref:System.Windows.Markup.ValueSerializer>をこの値の値のシリアル化の動作を表す制約<xref href=&quot;System.Xaml.XamlType&quot;> </xref></xref:System.Windows.Markup.ValueSerializer> 。"
  remarks: "既定値内部 CLR リフレクション手法を使用しないでくださいかどうか、 <xref:System.Xaml.XamlType>、このプロパティへの呼び出しを呼び出すことが<xref:System.Xaml.XamlType.LookupValueSerializer%2A>の上書きを<xref:System.Xaml.XamlType>クラスを派生します</xref:System.Xaml.XamlType></xref:System.Xaml.XamlType.LookupValueSerializer%2A></xref:System.Xaml.XamlType>。 戻り値およびその他の動作に関する詳細については、ドキュメントを参照して<xref:System.Xaml.XamlType.LookupValueSerializer%2A>この型にします</xref:System.Xaml.XamlType.LookupValueSerializer%2A>。"
  syntax:
    content: public System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer> ValueSerializer { get; }
    return:
      type: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
      description: "A &lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;で<xref:System.Windows.Markup.ValueSerializer>をこの値の値のシリアル化の動作を表す制約<xref href=&quot;System.Xaml.XamlType&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Windows.Markup.ValueSerializer> 。"
  overload: System.Xaml.XamlType.ValueSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,IList<XamlType>,XamlSchemaContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IList{System.Xaml.XamlType}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlType>
  nameWithType: IList<XamlType>
  fullName: System.Collections.Generic.IList<System.Xaml.XamlType>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.XamlType>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlType
    name: XamlType
    nameWithType: XamlType
    fullName: XamlType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  nameWithType: XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
  fullName: System.Xaml.XamlType.XamlType(Type,XamlSchemaContext,XamlTypeInvoker)
- uid: System.Xaml.Schema.XamlTypeInvoker
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeInvoker
  nameWithType: XamlTypeInvoker
  fullName: System.Xaml.Schema.XamlTypeInvoker
- uid: System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  nameWithType: XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
  fullName: System.Xaml.XamlType.XamlType(String,String,IList<XamlType>,XamlSchemaContext)
- uid: System.Xaml.XamlType.AllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
  fullName: System.Xaml.XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
  fullName: System.Xaml.XamlType.BaseType
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo(XamlType)
  nameWithType: XamlType.CanAssignTo(XamlType)
  fullName: System.Xaml.XamlType.CanAssignTo(XamlType)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlType.ConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
  fullName: System.Xaml.XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
  fullName: System.Xaml.XamlType.ContentProperty
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlType.ContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
  fullName: System.Xaml.XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
  fullName: System.Xaml.XamlType.DeferringLoader
- uid: System.Xaml.Schema.XamlValueConverter{System.Xaml.XamlDeferringLoader}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<XamlDeferringLoader>
  nameWithType: XamlValueConverter<XamlDeferringLoader>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Xaml.XamlDeferringLoader>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Xaml.XamlDeferringLoader>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlDeferringLoader
    name: XamlDeferringLoader
    nameWithType: XamlDeferringLoader
    fullName: XamlDeferringLoader
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Equals(System.Object)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(Object)
  nameWithType: XamlType.Equals(Object)
  fullName: System.Xaml.XamlType.Equals(Object)
- uid: System.Xaml.XamlType.Equals(System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals(XamlType)
  nameWithType: XamlType.Equals(XamlType)
  fullName: System.Xaml.XamlType.Equals(XamlType)
- uid: System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty(XamlDirective)
  nameWithType: XamlType.GetAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.GetAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlDirective
  parent: System.Xaml
  isExternal: false
  name: XamlDirective
  nameWithType: XamlDirective
  fullName: System.Xaml.XamlDirective
- uid: System.Xaml.XamlType.GetAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers()
  nameWithType: XamlType.GetAllAttachableMembers()
  fullName: System.Xaml.XamlType.GetAllAttachableMembers()
- uid: System.Collections.Generic.ICollection{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XamlMember>
  nameWithType: ICollection<XamlMember>
  fullName: System.Collections.Generic.ICollection<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.GetAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers()
  nameWithType: XamlType.GetAllMembers()
  fullName: System.Xaml.XamlType.GetAllMembers()
- uid: System.Xaml.XamlType.GetAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember(String)
  nameWithType: XamlType.GetAttachableMember(String)
  fullName: System.Xaml.XamlType.GetAttachableMember(String)
- uid: System.Xaml.XamlType.GetHashCode
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode()
  nameWithType: XamlType.GetHashCode()
  fullName: System.Xaml.XamlType.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlType.GetMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember(String)
  nameWithType: XamlType.GetMember(String)
  fullName: System.Xaml.XamlType.GetMember(String)
- uid: System.Xaml.XamlType.GetPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters(Int32)
  nameWithType: XamlType.GetPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.GetPositionalParameters(Int32)
- uid: System.Xaml.XamlType.GetXamlNamespaces
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces()
  nameWithType: XamlType.GetXamlNamespaces()
  fullName: System.Xaml.XamlType.GetXamlNamespaces()
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.Invoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
  fullName: System.Xaml.XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
  fullName: System.Xaml.XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
  fullName: System.Xaml.XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
  fullName: System.Xaml.XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
  fullName: System.Xaml.XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
  fullName: System.Xaml.XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
  fullName: System.Xaml.XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
  fullName: System.Xaml.XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
  fullName: System.Xaml.XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
  fullName: System.Xaml.XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
  fullName: System.Xaml.XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
  fullName: System.Xaml.XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
  fullName: System.Xaml.XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
  fullName: System.Xaml.XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
  fullName: System.Xaml.XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
  fullName: System.Xaml.XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
  fullName: System.Xaml.XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
  fullName: System.Xaml.XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty(XamlDirective)
  nameWithType: XamlType.LookupAliasedProperty(XamlDirective)
  fullName: System.Xaml.XamlType.LookupAliasedProperty(XamlDirective)
- uid: System.Xaml.XamlType.LookupAllAttachableMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers()
  nameWithType: XamlType.LookupAllAttachableMembers()
  fullName: System.Xaml.XamlType.LookupAllAttachableMembers()
- uid: System.Collections.Generic.IEnumerable{System.Xaml.XamlMember}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlMember>
  nameWithType: IEnumerable<XamlMember>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.XamlMember>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.XamlMember>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.XamlMember
    name: XamlMember
    nameWithType: XamlMember
    fullName: XamlMember
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupAllMembers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers()
  nameWithType: XamlType.LookupAllMembers()
  fullName: System.Xaml.XamlType.LookupAllMembers()
- uid: System.Xaml.XamlType.LookupAllowedContentTypes
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes()
  nameWithType: XamlType.LookupAllowedContentTypes()
  fullName: System.Xaml.XamlType.LookupAllowedContentTypes()
- uid: System.Xaml.XamlType.LookupAttachableMember(System.String)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember(String)
  nameWithType: XamlType.LookupAttachableMember(String)
  fullName: System.Xaml.XamlType.LookupAttachableMember(String)
- uid: System.Xaml.XamlType.LookupBaseType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType()
  nameWithType: XamlType.LookupBaseType()
  fullName: System.Xaml.XamlType.LookupBaseType()
- uid: System.Xaml.XamlType.LookupCollectionKind
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind()
  nameWithType: XamlType.LookupCollectionKind()
  fullName: System.Xaml.XamlType.LookupCollectionKind()
- uid: System.Xaml.Schema.XamlCollectionKind
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlCollectionKind
  nameWithType: XamlCollectionKind
  fullName: System.Xaml.Schema.XamlCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments()
  nameWithType: XamlType.LookupConstructionRequiresArguments()
  fullName: System.Xaml.XamlType.LookupConstructionRequiresArguments()
- uid: System.Xaml.XamlType.LookupContentProperty
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty()
  nameWithType: XamlType.LookupContentProperty()
  fullName: System.Xaml.XamlType.LookupContentProperty()
- uid: System.Xaml.XamlType.LookupContentWrappers
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers()
  nameWithType: XamlType.LookupContentWrappers()
  fullName: System.Xaml.XamlType.LookupContentWrappers()
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider()
  nameWithType: XamlType.LookupCustomAttributeProvider()
  fullName: System.Xaml.XamlType.LookupCustomAttributeProvider()
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader()
  nameWithType: XamlType.LookupDeferringLoader()
  fullName: System.Xaml.XamlType.LookupDeferringLoader()
- uid: System.Xaml.XamlType.LookupInvoker
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker()
  nameWithType: XamlType.LookupInvoker()
  fullName: System.Xaml.XamlType.LookupInvoker()
- uid: System.Xaml.XamlType.LookupIsAmbient
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient()
  nameWithType: XamlType.LookupIsAmbient()
  fullName: System.Xaml.XamlType.LookupIsAmbient()
- uid: System.Xaml.XamlType.LookupIsConstructible
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible()
  nameWithType: XamlType.LookupIsConstructible()
  fullName: System.Xaml.XamlType.LookupIsConstructible()
- uid: System.Xaml.XamlType.LookupIsMarkupExtension
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension()
  nameWithType: XamlType.LookupIsMarkupExtension()
  fullName: System.Xaml.XamlType.LookupIsMarkupExtension()
- uid: System.Xaml.XamlType.LookupIsNameScope
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope()
  nameWithType: XamlType.LookupIsNameScope()
  fullName: System.Xaml.XamlType.LookupIsNameScope()
- uid: System.Xaml.XamlType.LookupIsNullable
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable()
  nameWithType: XamlType.LookupIsNullable()
  fullName: System.Xaml.XamlType.LookupIsNullable()
- uid: System.Xaml.XamlType.LookupIsPublic
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic()
  nameWithType: XamlType.LookupIsPublic()
  fullName: System.Xaml.XamlType.LookupIsPublic()
- uid: System.Xaml.XamlType.LookupIsUnknown
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown()
  nameWithType: XamlType.LookupIsUnknown()
  fullName: System.Xaml.XamlType.LookupIsUnknown()
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection()
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection()
  fullName: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection()
- uid: System.Xaml.XamlType.LookupIsXData
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData()
  nameWithType: XamlType.LookupIsXData()
  fullName: System.Xaml.XamlType.LookupIsXData()
- uid: System.Xaml.XamlType.LookupItemType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType()
  nameWithType: XamlType.LookupItemType()
  fullName: System.Xaml.XamlType.LookupItemType()
- uid: System.Xaml.XamlType.LookupKeyType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType()
  nameWithType: XamlType.LookupKeyType()
  fullName: System.Xaml.XamlType.LookupKeyType()
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType()
  nameWithType: XamlType.LookupMarkupExtensionReturnType()
  fullName: System.Xaml.XamlType.LookupMarkupExtensionReturnType()
- uid: System.Xaml.XamlType.LookupMember(System.String,System.Boolean)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember(String,Boolean)
  nameWithType: XamlType.LookupMember(String,Boolean)
  fullName: System.Xaml.XamlType.LookupMember(String,Boolean)
- uid: System.Xaml.XamlType.LookupPositionalParameters(System.Int32)
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters(Int32)
  nameWithType: XamlType.LookupPositionalParameters(Int32)
  fullName: System.Xaml.XamlType.LookupPositionalParameters(Int32)
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler()
  nameWithType: XamlType.LookupSetMarkupExtensionHandler()
  fullName: System.Xaml.XamlType.LookupSetMarkupExtensionHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetMarkupExtensionEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetMarkupExtensionEventArgs>
  nameWithType: EventHandler<XamlSetMarkupExtensionEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetMarkupExtensionEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetMarkupExtensionEventArgs
    name: XamlSetMarkupExtensionEventArgs
    nameWithType: XamlSetMarkupExtensionEventArgs
    fullName: XamlSetMarkupExtensionEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler()
  nameWithType: XamlType.LookupSetTypeConverterHandler()
  fullName: System.Xaml.XamlType.LookupSetTypeConverterHandler()
- uid: System.EventHandler{System.Windows.Markup.XamlSetTypeConverterEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<XamlSetTypeConverterEventArgs>
  nameWithType: EventHandler<XamlSetTypeConverterEventArgs>
  fullName: System.EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Markup.XamlSetTypeConverterEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
    name: XamlSetTypeConverterEventArgs
    nameWithType: XamlSetTypeConverterEventArgs
    fullName: XamlSetTypeConverterEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace()
  nameWithType: XamlType.LookupTrimSurroundingWhitespace()
  fullName: System.Xaml.XamlType.LookupTrimSurroundingWhitespace()
- uid: System.Xaml.XamlType.LookupTypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter()
  nameWithType: XamlType.LookupTypeConverter()
  fullName: System.Xaml.XamlType.LookupTypeConverter()
- uid: System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<TypeConverter>
  nameWithType: XamlValueConverter<TypeConverter>
  fullName: System.Xaml.Schema.XamlValueConverter<System.ComponentModel.TypeConverter>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.ComponentModel.TypeConverter>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.TypeConverter
    name: TypeConverter
    nameWithType: TypeConverter
    fullName: TypeConverter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.LookupUnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType()
  nameWithType: XamlType.LookupUnderlyingType()
  fullName: System.Xaml.XamlType.LookupUnderlyingType()
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization()
  nameWithType: XamlType.LookupUsableDuringInitialization()
  fullName: System.Xaml.XamlType.LookupUsableDuringInitialization()
- uid: System.Xaml.XamlType.LookupValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer()
  nameWithType: XamlType.LookupValueSerializer()
  fullName: System.Xaml.XamlType.LookupValueSerializer()
- uid: System.Xaml.Schema.XamlValueConverter{System.Windows.Markup.ValueSerializer}
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlValueConverter<ValueSerializer>
  nameWithType: XamlValueConverter<ValueSerializer>
  fullName: System.Xaml.Schema.XamlValueConverter<System.Windows.Markup.ValueSerializer>
  spec.csharp:
  - uid: System.Xaml.Schema.XamlValueConverter`1
    name: XamlValueConverter
    nameWithType: XamlValueConverter
    fullName: XamlValueConverter<System.Windows.Markup.ValueSerializer>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Markup.ValueSerializer
    name: ValueSerializer
    nameWithType: ValueSerializer
    fullName: ValueSerializer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.XamlType.MarkupExtensionReturnType
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
  fullName: System.Xaml.XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
  fullName: System.Xaml.XamlType.Name
- uid: System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality(XamlType,XamlType)
  nameWithType: XamlType.op_Equality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Equality(XamlType,XamlType)
- uid: System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality(XamlType,XamlType)
  nameWithType: XamlType.op_Inequality(XamlType,XamlType)
  fullName: System.Xaml.XamlType.op_Inequality(XamlType,XamlType)
- uid: System.Xaml.XamlType.PreferredXamlNamespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
  fullName: System.Xaml.XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
  fullName: System.Xaml.XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString()
  nameWithType: XamlType.ToString()
  fullName: System.Xaml.XamlType.ToString()
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
  fullName: System.Xaml.XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
  fullName: System.Xaml.XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
  fullName: System.Xaml.XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
  fullName: System.Xaml.XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
  fullName: System.Xaml.XamlType.ValueSerializer
- uid: System.Xaml.XamlType.#ctor*
  parent: System.Xaml.XamlType
  isExternal: false
  name: XamlType
  nameWithType: XamlType.XamlType
- uid: System.Xaml.XamlType.AllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: AllowedContentTypes
  nameWithType: XamlType.AllowedContentTypes
- uid: System.Xaml.XamlType.BaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: BaseType
  nameWithType: XamlType.BaseType
- uid: System.Xaml.XamlType.CanAssignTo*
  parent: System.Xaml.XamlType
  isExternal: false
  name: CanAssignTo
  nameWithType: XamlType.CanAssignTo
- uid: System.Xaml.XamlType.ConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ConstructionRequiresArguments
  nameWithType: XamlType.ConstructionRequiresArguments
- uid: System.Xaml.XamlType.ContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentProperty
  nameWithType: XamlType.ContentProperty
- uid: System.Xaml.XamlType.ContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ContentWrappers
  nameWithType: XamlType.ContentWrappers
- uid: System.Xaml.XamlType.DeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: DeferringLoader
  nameWithType: XamlType.DeferringLoader
- uid: System.Xaml.XamlType.Equals*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Equals
  nameWithType: XamlType.Equals
- uid: System.Xaml.XamlType.GetAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAliasedProperty
  nameWithType: XamlType.GetAliasedProperty
- uid: System.Xaml.XamlType.GetAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllAttachableMembers
  nameWithType: XamlType.GetAllAttachableMembers
- uid: System.Xaml.XamlType.GetAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAllMembers
  nameWithType: XamlType.GetAllMembers
- uid: System.Xaml.XamlType.GetAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetAttachableMember
  nameWithType: XamlType.GetAttachableMember
- uid: System.Xaml.XamlType.GetHashCode*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetHashCode
  nameWithType: XamlType.GetHashCode
- uid: System.Xaml.XamlType.GetMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetMember
  nameWithType: XamlType.GetMember
- uid: System.Xaml.XamlType.GetPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetPositionalParameters
  nameWithType: XamlType.GetPositionalParameters
- uid: System.Xaml.XamlType.GetXamlNamespaces*
  parent: System.Xaml.XamlType
  isExternal: false
  name: GetXamlNamespaces
  nameWithType: XamlType.GetXamlNamespaces
- uid: System.Xaml.XamlType.Invoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Invoker
  nameWithType: XamlType.Invoker
- uid: System.Xaml.XamlType.IsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsAmbient
  nameWithType: XamlType.IsAmbient
- uid: System.Xaml.XamlType.IsArray*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsArray
  nameWithType: XamlType.IsArray
- uid: System.Xaml.XamlType.IsCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsCollection
  nameWithType: XamlType.IsCollection
- uid: System.Xaml.XamlType.IsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsConstructible
  nameWithType: XamlType.IsConstructible
- uid: System.Xaml.XamlType.IsDictionary*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsDictionary
  nameWithType: XamlType.IsDictionary
- uid: System.Xaml.XamlType.IsGeneric*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsGeneric
  nameWithType: XamlType.IsGeneric
- uid: System.Xaml.XamlType.IsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsMarkupExtension
  nameWithType: XamlType.IsMarkupExtension
- uid: System.Xaml.XamlType.IsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameScope
  nameWithType: XamlType.IsNameScope
- uid: System.Xaml.XamlType.IsNameValid*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNameValid
  nameWithType: XamlType.IsNameValid
- uid: System.Xaml.XamlType.IsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsNullable
  nameWithType: XamlType.IsNullable
- uid: System.Xaml.XamlType.IsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsPublic
  nameWithType: XamlType.IsPublic
- uid: System.Xaml.XamlType.IsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUnknown
  nameWithType: XamlType.IsUnknown
- uid: System.Xaml.XamlType.IsUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsUsableDuringInitialization
  nameWithType: XamlType.IsUsableDuringInitialization
- uid: System.Xaml.XamlType.IsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsWhitespaceSignificantCollection
  nameWithType: XamlType.IsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.IsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: IsXData
  nameWithType: XamlType.IsXData
- uid: System.Xaml.XamlType.ItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ItemType
  nameWithType: XamlType.ItemType
- uid: System.Xaml.XamlType.KeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: KeyType
  nameWithType: XamlType.KeyType
- uid: System.Xaml.XamlType.LookupAliasedProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAliasedProperty
  nameWithType: XamlType.LookupAliasedProperty
- uid: System.Xaml.XamlType.LookupAllAttachableMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllAttachableMembers
  nameWithType: XamlType.LookupAllAttachableMembers
- uid: System.Xaml.XamlType.LookupAllMembers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllMembers
  nameWithType: XamlType.LookupAllMembers
- uid: System.Xaml.XamlType.LookupAllowedContentTypes*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAllowedContentTypes
  nameWithType: XamlType.LookupAllowedContentTypes
- uid: System.Xaml.XamlType.LookupAttachableMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupAttachableMember
  nameWithType: XamlType.LookupAttachableMember
- uid: System.Xaml.XamlType.LookupBaseType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupBaseType
  nameWithType: XamlType.LookupBaseType
- uid: System.Xaml.XamlType.LookupCollectionKind*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCollectionKind
  nameWithType: XamlType.LookupCollectionKind
- uid: System.Xaml.XamlType.LookupConstructionRequiresArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupConstructionRequiresArguments
  nameWithType: XamlType.LookupConstructionRequiresArguments
- uid: System.Xaml.XamlType.LookupContentProperty*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentProperty
  nameWithType: XamlType.LookupContentProperty
- uid: System.Xaml.XamlType.LookupContentWrappers*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupContentWrappers
  nameWithType: XamlType.LookupContentWrappers
- uid: System.Xaml.XamlType.LookupCustomAttributeProvider*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupCustomAttributeProvider
  nameWithType: XamlType.LookupCustomAttributeProvider
- uid: System.Xaml.XamlType.LookupDeferringLoader*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupDeferringLoader
  nameWithType: XamlType.LookupDeferringLoader
- uid: System.Xaml.XamlType.LookupInvoker*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupInvoker
  nameWithType: XamlType.LookupInvoker
- uid: System.Xaml.XamlType.LookupIsAmbient*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsAmbient
  nameWithType: XamlType.LookupIsAmbient
- uid: System.Xaml.XamlType.LookupIsConstructible*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsConstructible
  nameWithType: XamlType.LookupIsConstructible
- uid: System.Xaml.XamlType.LookupIsMarkupExtension*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsMarkupExtension
  nameWithType: XamlType.LookupIsMarkupExtension
- uid: System.Xaml.XamlType.LookupIsNameScope*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNameScope
  nameWithType: XamlType.LookupIsNameScope
- uid: System.Xaml.XamlType.LookupIsNullable*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsNullable
  nameWithType: XamlType.LookupIsNullable
- uid: System.Xaml.XamlType.LookupIsPublic*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsPublic
  nameWithType: XamlType.LookupIsPublic
- uid: System.Xaml.XamlType.LookupIsUnknown*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsUnknown
  nameWithType: XamlType.LookupIsUnknown
- uid: System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsWhitespaceSignificantCollection
  nameWithType: XamlType.LookupIsWhitespaceSignificantCollection
- uid: System.Xaml.XamlType.LookupIsXData*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupIsXData
  nameWithType: XamlType.LookupIsXData
- uid: System.Xaml.XamlType.LookupItemType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupItemType
  nameWithType: XamlType.LookupItemType
- uid: System.Xaml.XamlType.LookupKeyType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupKeyType
  nameWithType: XamlType.LookupKeyType
- uid: System.Xaml.XamlType.LookupMarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMarkupExtensionReturnType
  nameWithType: XamlType.LookupMarkupExtensionReturnType
- uid: System.Xaml.XamlType.LookupMember*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupMember
  nameWithType: XamlType.LookupMember
- uid: System.Xaml.XamlType.LookupPositionalParameters*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupPositionalParameters
  nameWithType: XamlType.LookupPositionalParameters
- uid: System.Xaml.XamlType.LookupSetMarkupExtensionHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetMarkupExtensionHandler
  nameWithType: XamlType.LookupSetMarkupExtensionHandler
- uid: System.Xaml.XamlType.LookupSetTypeConverterHandler*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupSetTypeConverterHandler
  nameWithType: XamlType.LookupSetTypeConverterHandler
- uid: System.Xaml.XamlType.LookupTrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTrimSurroundingWhitespace
  nameWithType: XamlType.LookupTrimSurroundingWhitespace
- uid: System.Xaml.XamlType.LookupTypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupTypeConverter
  nameWithType: XamlType.LookupTypeConverter
- uid: System.Xaml.XamlType.LookupUnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUnderlyingType
  nameWithType: XamlType.LookupUnderlyingType
- uid: System.Xaml.XamlType.LookupUsableDuringInitialization*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupUsableDuringInitialization
  nameWithType: XamlType.LookupUsableDuringInitialization
- uid: System.Xaml.XamlType.LookupValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: LookupValueSerializer
  nameWithType: XamlType.LookupValueSerializer
- uid: System.Xaml.XamlType.MarkupExtensionReturnType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: MarkupExtensionReturnType
  nameWithType: XamlType.MarkupExtensionReturnType
- uid: System.Xaml.XamlType.Name*
  parent: System.Xaml.XamlType
  isExternal: false
  name: Name
  nameWithType: XamlType.Name
- uid: System.Xaml.XamlType.op_Equality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Equality
  nameWithType: XamlType.op_Equality
- uid: System.Xaml.XamlType.op_Inequality*
  parent: System.Xaml.XamlType
  isExternal: false
  name: op_Inequality
  nameWithType: XamlType.op_Inequality
- uid: System.Xaml.XamlType.PreferredXamlNamespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: PreferredXamlNamespace
  nameWithType: XamlType.PreferredXamlNamespace
- uid: System.Xaml.XamlType.SchemaContext*
  parent: System.Xaml.XamlType
  isExternal: false
  name: SchemaContext
  nameWithType: XamlType.SchemaContext
- uid: System.Xaml.XamlType.ToString*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ToString
  nameWithType: XamlType.ToString
- uid: System.Xaml.XamlType.TrimSurroundingWhitespace*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TrimSurroundingWhitespace
  nameWithType: XamlType.TrimSurroundingWhitespace
- uid: System.Xaml.XamlType.TypeArguments*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeArguments
  nameWithType: XamlType.TypeArguments
- uid: System.Xaml.XamlType.TypeConverter*
  parent: System.Xaml.XamlType
  isExternal: false
  name: TypeConverter
  nameWithType: XamlType.TypeConverter
- uid: System.Xaml.XamlType.UnderlyingType*
  parent: System.Xaml.XamlType
  isExternal: false
  name: UnderlyingType
  nameWithType: XamlType.UnderlyingType
- uid: System.Xaml.XamlType.ValueSerializer*
  parent: System.Xaml.XamlType
  isExternal: false
  name: ValueSerializer
  nameWithType: XamlType.ValueSerializer
