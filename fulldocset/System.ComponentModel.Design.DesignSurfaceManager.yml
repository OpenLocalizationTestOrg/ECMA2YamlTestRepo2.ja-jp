### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignSurfaceManager
  id: DesignSurfaceManager
  children:
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor
  - System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  - System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose
  - System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  - System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  - System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  langs:
  - csharp
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager
  fullName: System.ComponentModel.Design.DesignSurfaceManager
  type: Class
  summary: "コレクションを管理<xref href=&quot;System.ComponentModel.Design.DesignSurface&quot;></xref>オブジェクト。"
  remarks: "DesignSurfaceManager クラスは、コンテナーの設計されています<xref:System.ComponentModel.Design.DesignSurface>オブジェクト</xref:System.ComponentModel.Design.DesignSurface>。 そのハンドル イベントのルーティング デザイナー、プロパティ ウィンドウ、およびその他のグローバル オブジェクトの間で一般的なサービスを提供します。 使って DesignSurfaceManager 省略可能ながいくつかのデザイナー ウィンドウがあるを場合お勧めします。       DesignSurfaceManager クラスでは、いくつかのデザイン時サービスを自動的に提供します。 これらの各サービスを上書きするには、保護対象に置き換えることによって<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>プロパティ</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>。 サービスを置き換えるには、コンス トラクターをオーバーライド、基本、および、保護対象から変更を加える<xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>プロパティ</xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A>。 実装するサービス コンテナーに追加されたすべてのサービス、<xref:System.IDisposable>インターフェイスがデザイン サーフェイス マネージャーが破棄されるときに破棄されます</xref:System.IDisposable>。 DesignSurfaceManager クラスは、提供、<xref:System.ComponentModel.Design.IDesignerEventService>既定のサービスとのインターフェイス</xref:System.ComponentModel.Design.IDesignerEventService>。 <xref:System.ComponentModel.Design.IDesignerEventService>デザイナー イベントのグローバル イベント メカニズムを提供します。</xref:System.ComponentModel.Design.IDesignerEventService> このメカニズムにより、アプリケーションは、デザイナーがアクティブになったときに通知されます。 サービスは、デザイナーのコレクションと、[プロパティ] ウィンドウなどのグローバル オブジェクトが選択範囲を監視できますを&1; か所変更イベントを提供します。"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public class DesignSurfaceManager : IDisposable, IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>クラスです。"
  syntax:
    content: public DesignSurfaceManager ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>クラスです。"
  syntax:
    content: public DesignSurfaceManager (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "親サービス プロバイダー。 サービス要求は、デザイン サーフェイス マネージャーによって解決できない場合、このプロバイダーに転送されます。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  id: ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "取得またはアクティブなデザイナーを設定します。"
  remarks: "デザイナーがアクティブ ウィンドウになったときに、デザイナーのユーザー インターフェイスによって ActiveDesignSurface プロパティを設定してください。 既定の実装でこのプロパティの既定の実装の動作、<xref:System.ComponentModel.Design.IDesignerEventService>新しいデザイナーが現在アクティブである関係者に通知するインターフェイス</xref:System.ComponentModel.Design.IDesignerEventService>。 独自の実装を提供する場合<xref:System.ComponentModel.Design.IDesignerEventService>、サービスを適切に通知するには、このプロパティをオーバーライドする必要があります</xref:System.ComponentModel.Design.IDesignerEventService>。 このプロパティに設定することができます`null`デザイナーがアクティブなないことを示すです。"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignSurface ActiveDesignSurface { get; set; }
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "アクティブなデザイナーです。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  id: ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "現在アクティブなデザイナーが変更されたときに発生します。"
  syntax:
    content: public event System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler ActiveDesignSurfaceChanged;
    return:
      type: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  id: CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン画面のインスタンスを作成します。"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface ();
    parameters: []
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新しいデザイン サーフェス インスタンス。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  id: CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン画面のインスタンスを作成します。"
  remarks: "デザイナーごとのサービスを簡単に追加する場合は、使用、`parentProvider`このデザイン サーフェイスでのサービス プロバイダーを提供するパラメーターです。 CreateDesignSurface メソッドの両方の指定したサービス プロバイダーからのサービス要求を満たすことができる結合サービス プロバイダーを作成するだけでなく<xref:System.ComponentModel.Design.DesignSurfaceManager>自体</xref:System.ComponentModel.Design.DesignSurfaceManager>。 このサービス プロバイダーに渡します CreateDesignSurface メソッド、<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>メソッド</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>。       <xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>デザイン画面で、メソッドが、 <xref:System.ComponentModel.Design.IDesignerEventService>。</xref:System.ComponentModel.Design.IDesignerEventService>を取得しようとしています。 CreateDesignSurface を取得</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A>した後 これが存在する場合、およびサービスのインスタンスである場合を<xref:System.ComponentModel.Design.DesignSurfaceManager>CreateDesignSurface メソッドを発生させる既定では、指定された、<xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated>イベント</xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated></xref:System.ComponentModel.Design.DesignSurfaceManager>。"
  syntax:
    content: public System.ComponentModel.Design.DesignSurface CreateDesignSurface (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "親サービス プロバイダー。 新しい結合サービス プロバイダーが作成されますがまずサービスでこのプロバイダーに確認され、デザイン サーフェイス マネージャー オブジェクトに障害を委任します。 この結合されたプロバイダーに渡される、<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>メソッド</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*>。"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新しいデザイン サーフェス インスタンス。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parentProvider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  id: CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン画面を作成するための実装です。"
  remarks: "CreateDesignSurfaceCore メソッドは両方によって<xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>メソッド</xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A>。 実際には、デザイン画面を作成する実装することをお勧めします。 既定の実装では、新しい<xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface>だけを返します <xref:System.ComponentModel.Design.DesignSurface>クラス</xref:System.ComponentModel.Design.DesignSurface>から派生したカスタム オブジェクトを提供するには、このメソッドをオーバーライドする可能性があります。"
  syntax:
    content: protected virtual System.ComponentModel.Design.DesignSurface CreateDesignSurfaceCore (IServiceProvider parentProvider);
    parameters:
    - id: parentProvider
      type: System.IServiceProvider
      description: "デザイン画面に渡すサービス プロバイダー。 これは、いずれかのインスタンス<xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>を実装するオブジェクトまたは<xref:System.IServiceProvider>のサービス プロバイダーとの間のマージを表すと、 <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>クラスおよび外部から渡されたプロバイダー</xref:System.IServiceProvider> 。"
    return:
      type: System.ComponentModel.Design.DesignSurface
      description: "新しいデザイン サーフェス インスタンス。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  id: DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイナーが作成されるときに発生します。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceCreated;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  id: DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイナーが破棄されるときに発生します。"
  syntax:
    content: public event System.ComponentModel.Design.DesignSurfaceEventHandler DesignSurfaceDisposed;
    return:
      type: System.ComponentModel.Design.DesignSurfaceEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  id: DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン サーフェイスのコレクションを取得します。"
  remarks: "上に直接 DesignSurfaces プロパティは実装<xref:System.ComponentModel.Design.IDesignerEventService>ので、このプロパティが実装を使用してそのサービスの実装を提供する場合</xref:System.ComponentModel.Design.IDesignerEventService>。"
  syntax:
    content: public System.ComponentModel.Design.DesignSurfaceCollection DesignSurfaces { get; }
    return:
      type: System.ComponentModel.Design.DesignSurfaceCollection
      description: "デザイン サーフェイス マネージャーによって現在ホストされているデザイン サーフェイスのコレクション。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "によって使用されるリソースを解放、 <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;></xref>です。"
  remarks: "パブリックの Dispose メソッドの標準に準拠<xref:System.IDisposable>パターン</xref:System.IDisposable>。 このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。 これにより、すべてのサービスを実装するサービス コンテナーを破棄する<xref:System.IDisposable>も破棄されます</xref:System.IDisposable>。 このメソッドの保護されているバージョンは`virtual`であり、標準に従って<xref:System.IDisposable>パターン</xref:System.IDisposable>。      > [!NOTE] > ため<xref:System.ComponentModel.Design.DesignSurfaceManager>、クリーンアップのすべてのネイティブ コードを持たない<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>.</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>を呼び出し、ファイナライザーがない</xref:System.ComponentModel.Design.DesignSurfaceManager> 呼び出す必要がある場合<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>、ファイナライザーを自分で追加する必要があります</xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.ComponentModel.Design.DesignSurfaceManager&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "パブリック<xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>メソッドの標準に準拠<xref:System.IDisposable>パターン</xref:System.IDisposable></xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A>。 このメソッドを呼び出すと、デザイン サーフェイス マネージャーが破棄されます。 これにより、すべてのサービスを実装するサービス コンテナーを破棄する<xref:System.IDisposable>も破棄されます</xref:System.IDisposable>。 このメソッドの保護されているバージョンは`virtual`であり、標準に従って<xref:System.IDisposable>パターン</xref:System.IDisposable>。      > [!NOTE] > ため<xref:System.ComponentModel.Design.DesignSurfaceManager>、クリーンアップのすべてのネイティブ コードを持たない Dispose を呼び出すファイナライザーがない</xref:System.ComponentModel.Design.DesignSurfaceManager>。 Dispose を呼び出す必要がある場合必要があります自分自身を追加するファイナライザーです。       このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose()`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`にパラメーターが設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.ComponentModel.Design.DesignSurfaceManager>参照。</xref:System.ComponentModel.Design.DesignSurfaceManager> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン サーフェイス マネージャーのサービス コンテナーに、サービスを取得します。"
  remarks: "GetService メソッドは、構築時にデザイン サーフェイス マネージャーに指定されたサービス プロバイダーに転送します。"
  syntax:
    content: public object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "サービスの種類を取得します。"
    return:
      type: System.Object
      description: "を実装するか、特定のサービス型の派生クラス オブジェクトそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>サービス コンテナーには、サービスが存在しない場合。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  id: SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "グローバルの選択が変更されたときに発生します。"
  remarks: "このイベントは、コンポーネントのアクティブなデザイナーの選択設定の変更時に発生します。 これにマップされている、<xref:System.ComponentModel.Design.IDesignerEventService>インターフェイス</xref:System.ComponentModel.Design.IDesignerEventService>。"
  syntax:
    content: public event EventHandler SelectionChanged;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  id: ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  langs:
  - csharp
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "デザイン サーフェイス マネージャーの ServiceContainer を取得します。"
  syntax:
    content: protected System.ComponentModel.Design.ServiceContainer ServiceContainer { get; }
    return:
      type: System.ComponentModel.Design.ServiceContainer
      description: "デザイン サーフェイス マネージャーの ServiceContainer します。"
  overload: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager()
  nameWithType: DesignSurfaceManager.DesignSurfaceManager()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager()
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager(IServiceProvider)
  nameWithType: DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurface
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurface
  nameWithType: DesignSurface
  fullName: System.ComponentModel.Design.DesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurfaceChanged
  nameWithType: DesignSurfaceManager.ActiveDesignSurfaceChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged
- uid: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: ActiveDesignSurfaceChangedEventHandler
  nameWithType: ActiveDesignSurfaceChangedEventHandler
  fullName: System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface()
  nameWithType: DesignSurfaceManager.CreateDesignSurface()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface()
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore(IServiceProvider)
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(IServiceProvider)
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceCreated
  nameWithType: DesignSurfaceManager.DesignSurfaceCreated
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated
- uid: System.ComponentModel.Design.DesignSurfaceEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceEventHandler
  nameWithType: DesignSurfaceEventHandler
  fullName: System.ComponentModel.Design.DesignSurfaceEventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceDisposed
  nameWithType: DesignSurfaceManager.DesignSurfaceDisposed
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
  fullName: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignSurfaceCollection
  nameWithType: DesignSurfaceCollection
  fullName: System.ComponentModel.Design.DesignSurfaceCollection
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose()
  nameWithType: DesignSurfaceManager.Dispose()
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose()
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignSurfaceManager.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignSurfaceManager.GetService(Type)
  fullName: System.ComponentModel.Design.DesignSurfaceManager.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: SelectionChanged
  nameWithType: DesignSurfaceManager.SelectionChanged
  fullName: System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
  fullName: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer
- uid: System.ComponentModel.Design.ServiceContainer
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceContainer
  nameWithType: ServiceContainer
  fullName: System.ComponentModel.Design.ServiceContainer
- uid: System.ComponentModel.Design.DesignSurfaceManager.#ctor*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaceManager
  nameWithType: DesignSurfaceManager.DesignSurfaceManager
- uid: System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ActiveDesignSurface
  nameWithType: DesignSurfaceManager.ActiveDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurface
  nameWithType: DesignSurfaceManager.CreateDesignSurface
- uid: System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: CreateDesignSurfaceCore
  nameWithType: DesignSurfaceManager.CreateDesignSurfaceCore
- uid: System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: DesignSurfaces
  nameWithType: DesignSurfaceManager.DesignSurfaces
- uid: System.ComponentModel.Design.DesignSurfaceManager.Dispose*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: Dispose
  nameWithType: DesignSurfaceManager.Dispose
- uid: System.ComponentModel.Design.DesignSurfaceManager.GetService*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: GetService
  nameWithType: DesignSurfaceManager.GetService
- uid: System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer*
  parent: System.ComponentModel.Design.DesignSurfaceManager
  isExternal: false
  name: ServiceContainer
  nameWithType: DesignSurfaceManager.ServiceContainer
