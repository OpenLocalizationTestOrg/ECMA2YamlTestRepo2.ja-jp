### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  id: ChannelDispatcherBase
  children:
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  - System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  langs:
  - csharp
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  type: Class
  summary: "チャネルを受け入れるし、サービスを関連付けるチャネル ディスパッチャーの抽象基本クラスです。"
  remarks: "これは、使用しておく必要のある開発者が、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]プログラミング モデル、ランタイムは置き換えようシステムが提供します。 このようなアプリケーションでは、チャネルからメッセージをプルし、ユーザー定義のディスパッチャーを直接処理します。 そこから派生した ChannelDispatcherBase を使用して、クラスを作成、<xref:System.ServiceModel.ServiceHost>上書き<xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A><xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>。</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> ChannelDispatcherBase から派生したクラスのインスタンスを追加すること、</xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>および</xref:System.ServiceModel.ServiceHost>拡張       <xref:System.ServiceModel.Channels.IChannelListener>と<xref:System.ServiceModel.ServiceHost>、関連付けられている ChannelDispatcherBase オブジェクトでは使用を検査または変更を<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A>と<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>それぞれ</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A></xref:System.ServiceModel.ServiceHost></xref:System.ServiceModel.Channels.IChannelListener>。       <xref:System.ServiceModel.ServiceHost>呼び出し、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29>または<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29>メソッドを追加またはから ChannelDispatcherBase 項目を削除するときにその<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>コレクションです</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29>。</xref:System.ServiceModel.ServiceHost>       <xref:System.ServiceModel.ServiceHost>呼び出し、 <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>InstanceContexts を閉じる前にシャット ダウン中に</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A>。</xref:System.ServiceModel.ServiceHost> [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]この呼び出しを使用して、データグラム チャネルを閉じるし、すべてのメッセージが InstanceContext に到着するまで待機します。"
  syntax:
    content: 'public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherBase&quot;> </xref>クラスです。"
  syntax:
    content: protected ChannelDispatcherBase ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  id: Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "派生クラスでオーバーライドされると、チャネル ディスパッチャーを特定のホストにアタッチします。"
  remarks: "このメソッドがときにのみ設定のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。       A<xref:System.ServiceModel.ServiceHost>このメソッドを呼び出すときに、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>に追加その<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>コレクションです</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase></xref:System.ServiceModel.ServiceHost>。  これにより、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>イベントをフックし、検査する機会、<xref:System.ServiceModel.ServiceHost>から返される値を提供し、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A>プロパティ</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A></xref:System.ServiceModel.ServiceHost></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>。"
  syntax:
    content: protected virtual void Attach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>サービス。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態またはホストが既に設定されています</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  id: CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているエンドポイント ディスパッチャーを削除します。"
  remarks: "<xref:System.ServiceModel.ServiceHost>ディスパッチャーのメッセージをドレインする機会を与えるシャット ダウン中にこのメソッドを呼び出します。</xref:System.ServiceModel.ServiceHost> <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>この呼び出しを使用して、データグラム チャネルを閉じます。</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>"
  syntax:
    content: public virtual void CloseInput ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  id: Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "派生クラスでオーバーライドされると、特定のホストからチャネル ディスパッチャーをデタッチします。"
  remarks: "<xref:System.ServiceModel.ServiceHostBase>できるときにのみ切断のインスタンス、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>では、<xref:System.ServiceModel.CommunicationState>状態は変更可能な両方、破棄されていない唯一の状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.Dispatcher.ChannelDispatcher></xref:System.ServiceModel.ServiceHostBase>。       設定する必要があります、<xref:System.ServiceModel.ServiceHostBase>チャネル ディスパッチャーに関連付けられている`null`</xref:System.ServiceModel.ServiceHostBase>。       <xref:System.ServiceModel.ServiceHost>このメソッドを呼び出すときに、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>から削除その<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>コレクション</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>。</xref:System.ServiceModel.ServiceHost> これは<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>イベントをアンフックし、 <xref:System.ServiceModel.ServiceHost>。</xref:System.ServiceModel.ServiceHost>を検査する機会</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>を与えます"
  syntax:
    content: protected virtual void Detach (System.ServiceModel.ServiceHostBase host);
    parameters:
    - id: host
      type: System.ServiceModel.ServiceHostBase
      description: "The <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>."
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態またはホストが既に設定されています</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "通信オブジェクトは、<xref:System.ServiceModel.CommunicationState>状態</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  id: Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているサービス ホストを取得します。"
  remarks: "各<xref:System.ServiceModel.ServiceHost>オブジェクトが持つ多く<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>オブジェクトを別に関連付けられている各<xref:System.ServiceModel.Channels.IChannelListener>のサービスに対する</xref:System.ServiceModel.Channels.IChannelListener></xref:System.ServiceModel.Dispatcher.ChannelDispatcher></xref:System.ServiceModel.ServiceHost>。 ホストは、これらのリストを保持<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>内のオブジェクト、<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>コレクションです</xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A></xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>。"
  syntax:
    content: public abstract System.ServiceModel.ServiceHostBase Host { get; }
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>ディスパッチャーに関連付けられているサービスです。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  id: Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  langs:
  - csharp
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Dispatcher
  summary: "派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているチャネル リスナーを取得します。"
  remarks: "A<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>関連付けます、<xref:System.ServiceModel.Channels.IChannelListener>いるチャネルおよびメッセージこの<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase>をディスパッチします</xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase></xref:System.ServiceModel.Channels.IChannelListener></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  syntax:
    content: public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }
    return:
      type: System.ServiceModel.Channels.IChannelListener
      description: "<xref href=&quot;System.ServiceModel.Channels.IChannelListener&quot;> </xref>チャネル ディスパッチャーに関連付けられています。"
  overload: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase()
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.ChannelDispatcherBase()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Attach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(ServiceHostBase)
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput()
  nameWithType: ChannelDispatcherBase.CloseInput()
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput()
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach(ServiceHostBase)
  nameWithType: ChannelDispatcherBase.Detach(ServiceHostBase)
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(ServiceHostBase)
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener
- uid: System.ServiceModel.Channels.IChannelListener
  parent: System.ServiceModel.Channels
  isExternal: false
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: ChannelDispatcherBase
  nameWithType: ChannelDispatcherBase.ChannelDispatcherBase
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Attach
  nameWithType: ChannelDispatcherBase.Attach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: CloseInput
  nameWithType: ChannelDispatcherBase.CloseInput
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Detach
  nameWithType: ChannelDispatcherBase.Detach
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Host
  nameWithType: ChannelDispatcherBase.Host
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener*
  parent: System.ServiceModel.Dispatcher.ChannelDispatcherBase
  isExternal: false
  name: Listener
  nameWithType: ChannelDispatcherBase.Listener
