### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  id: SecurityKeyIdentifier
  children:
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  - System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  langs:
  - csharp
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
  type: Class
  summary: "キー識別子を表します。"
  remarks: "通常は、SecurityKeyIdentifier は使用しない、以外の場合、カスタム セキュリティ トークン サービスが作成されるとき。 セキュリティ トークン サービスには、セキュリティ トークンが返される、ときに、発行されたセキュリティ トークンには、接続されており、結び付けられていないセキュリティ トークンへの参照が含まれています。 アタッチされた参照が SOAP メッセージのセキュリティ ヘッダー内に含まれるセキュリティ トークンを参照してください、結び付けられていない参照が SOAP メッセージのセキュリティ ヘッダーに含まれていないセキュリティ トークン。 これらの参照は、通常、発行されたセキュリティ トークンの信頼性を確認します。 これらの参照は、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>クラス</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>から派生したクラスで表されます。 SecurityKeyIdentifier クラスには、これらの参照のコレクションが含まれています。"
  syntax:
    content: 'public class SecurityKeyIdentifier : System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>'
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>クラスです。"
  syntax:
    content: public SecurityKeyIdentifier ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  id: '#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])'
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifier&quot;> </xref>クラスの指定したキー識別子句を使用します。"
  syntax:
    content: public SecurityKeyIdentifier (System.IdentityModel.Tokens.SecurityKeyIdentifierClause[] clauses);
    parameters:
    - id: clauses
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
      description: "配列<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref>キー識別句を格納しています。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clauses</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "リストの末尾には、キー識別句を追加します。"
  syntax:
    content: public void Add (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);
    parameters:
    - id: clause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>リストの末尾に追加します。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "値、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*>プロパティは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*> 。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  id: CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キー識別子句の少なくとも&1; つのキーを作成するかどうかを示す値を取得します。"
  syntax:
    content: public bool CanCreateKey { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キー識別子句; の少なくとも&1; つのキーを作成する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  id: Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キー識別子句の数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "キー識別子句の数。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  id: CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "1 つのキー識別子句のキーを作成します。"
  remarks: "<xref:System.IdentityModel.Tokens.SecurityKey>キーを作成できるコレクション内の最初のキー識別子句のですが返されます</xref:System.IdentityModel.Tokens.SecurityKey>。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKey CreateKey ();
    parameters: []
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>を表す作成されたキー。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "キー識別子句のいずれかのキーを作成できませんでした。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  id: Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public TClause Find<TClause> () where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: TClause
      description: "追加します。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  id: GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キー識別子句のコレクションを反復処理する列挙子を返します。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
      description: "A &lt;xref:System.Collections.Generic.List%601.Enumerator&gt;型の<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;></xref>のコレクション。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのプロパティは読み取り専用であるかどうかを示す値を取得します。"
  remarks: "インスタンスがこのようにする、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>クラスの読み取り専用の呼び出し、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A>メソッド</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly%2A></xref:System.IdentityModel.Tokens.SecurityKeyIdentifier>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合のこのインスタンスのプロパティは読み取り専用です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定したインデックス位置には、キー識別句を取得します。"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityKeyIdentifierClause this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "キー識別子句のコレクション内のキー識別子句の&0; から始まるインデックス。"
    return:
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>指定したインデックス位置。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満です。       - または -<code>index</code>と等しいかより大きい<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "読み取り専用にするには、このインスタンスが発生します。"
  remarks: "MakeReadOnly メソッドが呼び出されたときに、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A>プロパティに設定されている`true`されのこのインスタンスのプロパティを設定不要になったことができます</xref:System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly%2A>。 たとえば、キー識別句は、このオブジェクトに追加できません。"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キー識別子句のコレクションを反復処理する列挙子を返します。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "A &lt;xref:System.Collections.Generic.IEnumerator%601&gt;を使用して、コレクションを反復処理をすることができます。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "現在のオブジェクトを返します。"
  remarks: "ToString メソッドでは、キー識別子のすべてのキー識別子句の詳細を返します。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在のオブジェクト。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  id: TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  langs:
  - csharp
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public bool TryFind<TClause> (out TClause clause) where TClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters:
    - id: clause
      type: TClause
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier()
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifierClause[])
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.SecurityKeyIdentifier(SecurityKeyIdentifierClause[])
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause[]
  spec.csharp:
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add(SecurityKeyIdentifierClause)
  nameWithType: SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey()
  nameWithType: SecurityKeyIdentifier.CreateKey()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey()
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find``1
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find()
  nameWithType: SecurityKeyIdentifier.Find()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find()
- uid: TClause
  isExternal: true
  name: TClause
  nameWithType: TClause
  fullName: TClause
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator()
  nameWithType: SecurityKeyIdentifier.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.IdentityModel.Tokens.SecurityKeyIdentifierClause}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<SecurityKeyIdentifierClause>
  nameWithType: IEnumerator<SecurityKeyIdentifierClause>
  fullName: System.Collections.Generic.IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.IdentityModel.Tokens.SecurityKeyIdentifierClause>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
    name: SecurityKeyIdentifierClause
    nameWithType: SecurityKeyIdentifierClause
    fullName: SecurityKeyIdentifierClause
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(System.Int32)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item(Int32)
  nameWithType: SecurityKeyIdentifier.Item(Int32)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item(Int32)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SecurityKeyIdentifier.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString()
  nameWithType: SecurityKeyIdentifier.ToString()
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind``1(``0@)
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind(TClause)
  nameWithType: SecurityKeyIdentifier.TryFind(TClause)
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind(TClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.#ctor*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Add*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Add
  nameWithType: SecurityKeyIdentifier.Add
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CanCreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CanCreateKey
  nameWithType: SecurityKeyIdentifier.CanCreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Count*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Count
  nameWithType: SecurityKeyIdentifier.Count
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.CreateKey*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: CreateKey
  nameWithType: SecurityKeyIdentifier.CreateKey
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Find<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Find<TClause>
  nameWithType: SecurityKeyIdentifier.Find<TClause>
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: GetEnumerator
  nameWithType: SecurityKeyIdentifier.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.IsReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: IsReadOnly
  nameWithType: SecurityKeyIdentifier.IsReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.Item*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: Item
  nameWithType: SecurityKeyIdentifier.Item
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: MakeReadOnly
  nameWithType: SecurityKeyIdentifier.MakeReadOnly
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.System#Collections#IEnumerable#GetEnumerator*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: SecurityKeyIdentifier.System.Collections.IEnumerable.GetEnumerator
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.ToString*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: ToString
  nameWithType: SecurityKeyIdentifier.ToString
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier.TryFind<TClause>*
  parent: System.IdentityModel.Tokens.SecurityKeyIdentifier
  isExternal: false
  name: TryFind<TClause>
  nameWithType: SecurityKeyIdentifier.TryFind<TClause>
