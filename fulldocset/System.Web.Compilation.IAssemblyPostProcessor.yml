### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.IAssemblyPostProcessor
  id: IAssemblyPostProcessor
  children:
  - System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  langs:
  - csharp
  name: IAssemblyPostProcessor
  nameWithType: IAssemblyPostProcessor
  fullName: System.Web.Compilation.IAssemblyPostProcessor
  type: Interface
  summary: "アセンブリがビルドされたら、アセンブリを処理するクラスを実装するメソッドを定義します。"
  remarks: "このインターフェイスを実装するクラスがコンパイルされた後のアセンブリにアクセスできます。 <xref:System.Web.Compilation.AssemblyBuilder>クラスがアセンブリをコンパイルし、さら IAssemblyPostProcessor インターフェイスが Web 構成ファイルに登録されているかどうかを確認します</xref:System.Web.Compilation.AssemblyBuilder>。 場合は、<xref:System.Web.Compilation.AssemblyBuilder>呼び出しをインスタンス化、<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>コンパイルした後、アセンブリを読み込む前に、操作を実行する IAssemblyPostProcessor インターフェイスのメソッド</xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A></xref:System.Web.Compilation.AssemblyBuilder>。 たとえば、プロファイラー ツールは、アセンブリのプローブを確立するためには、このインターフェイスを実装する可能性があります。       IAssemblyPostProcessor インターフェイスが登録されると、ASP.NET アプリケーションとそのアセンブリは、デバッグ モードでコンパイルするが常にします。"
  example:
  - "The following code example demonstrates how to create an implementation of the IAssemblyPostProcessor interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the IAssemblyPostProcessor interface. This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/t-system.web.compilation_8_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/t-system.web.compilation_8_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: 'public interface IAssemblyPostProcessor : IDisposable'
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  id: PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  langs:
  - csharp
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アセンブリの読み込み、アセンブリの変更を実装するクラスを許可する前に呼び出されます。"
  remarks: "<xref:System.Web.Compilation.AssemblyBuilder>クラスは、アセンブリがコンパイルされた後にこのメソッドを呼び出します</xref:System.Web.Compilation.AssemblyBuilder>。 アセンブリを読み込む前に実行されるアクションは、このメソッドに含める必要があります。"
  example:
  - "The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.  \n  \n The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface. This class performs the simple action of writing a file when the PostProcessAssembly method is called.  \n  \n [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/visualbasic/30b129b5-63b2-48bd-ad9f-_1.vb)]\n [!code-cs[System.Web.Compilation.IAssemblyPostProcessor#1](~/add/codesnippet/csharp/30b129b5-63b2-48bd-ad9f-_1.cs)]  \n  \n Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`. Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.  \n  \n```  \n<compilation debug=\"true\" assemblyPostProcessorType=\"Samples.Process.postProcessTest\" />  \n```  \n  \n When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\\compile."
  syntax:
    content: public void PostProcessAssembly (string path);
    parameters:
    - id: path
      type: System.String
      description: "アセンブリへのパス。"
  overload: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly(String)
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly(String)
  fullName: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly*
  parent: System.Web.Compilation.IAssemblyPostProcessor
  isExternal: false
  name: PostProcessAssembly
  nameWithType: IAssemblyPostProcessor.PostProcessAssembly
