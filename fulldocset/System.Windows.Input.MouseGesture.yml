### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseGesture
  id: MouseGesture
  children:
  - System.Windows.Input.MouseGesture.#ctor
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  - System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  - System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  - System.Windows.Input.MouseGesture.Modifiers
  - System.Windows.Input.MouseGesture.MouseAction
  langs:
  - csharp
  name: MouseGesture
  nameWithType: MouseGesture
  fullName: System.Windows.Input.MouseGesture
  type: Class
  summary: "コマンドの呼び出しに使用できるマウス入力ジェスチャを定義します。"
  remarks: "異なり、 <xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction>と組で使用する必要はありません<xref:System.Windows.Input.ModifierKeys>する有効な MouseGesture</xref:System.Windows.Input.ModifierKeys> </xref:System.Windows.Input.MouseAction> </xref:System.Windows.Input.KeyGesture> 。       MouseGesture をバインドすることができます、 <xref:System.Windows.Input.RoutedCommand>(またはその他の<xref:System.Windows.Input.ICommand>実装) を介して、 <xref:System.Windows.Input.MouseBinding>、MouseGesture が発生すると、コマンドが呼び出されるようにします</xref:System.Windows.Input.MouseBinding></xref:System.Windows.Input.ICommand></xref:System.Windows.Input.RoutedCommand>。       MouseGesture の[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]属性の使用方法で一般に設定されているプロパティ[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]は<xref:System.Windows.Input.MouseBinding.Gesture%2A>、ジェスチャがマウス操作と&1; つまたは複数の修飾子キーの両方を表すことができる場合</xref:System.Windows.Input.MouseBinding.Gesture%2A>。 設定することも、<xref:System.Windows.Input.MouseBinding.Gesture%2A>マウス操作だけになるプロパティです</xref:System.Windows.Input.MouseBinding.Gesture%2A>。 一般に、お勧めのみに使用する、<xref:System.Windows.Input.KeyBinding.Gesture%2A>属性から[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]、設定ではなく<xref:System.Windows.Input.MouseBinding.MouseAction%2A>修飾子を指定しない場合でも、</xref:System.Windows.Input.MouseBinding.MouseAction%2A> </xref:System.Windows.Input.KeyBinding.Gesture%2A> 。 最も簡潔な構文、説明、およびシリアル化の最も簡単な表現を提供このあいまいさを回避します。       MouseGesture[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]オブジェクト要素の使用方法は考えられる珍しいことで、通常は設定できるため、<xref:System.Windows.Input.MouseBinding.Gesture%2A>プロパティ<xref:System.Windows.Input.MouseBinding>プロパティ要素構文を使用せずインライン</xref:System.Windows.Input.MouseBinding></xref:System.Windows.Input.MouseBinding.Gesture%2A>。      <a name=&quot;xamlAttributeUsage_MouseGesture&quot;></a>## XAML 属性の使用```   <object property=&quot;mouseAction&quot;/>   - or -   <object property=&quot;oneOrMoreModifierKeys+mouseAction&quot;/>   ``` <a name=&quot;xamlValues_MouseGesture&quot;> </a> ## XAML 値`mouseAction`<xref:System.Windows.Input.MouseAction>単一のマウス操作</xref:System.Windows.Input.MouseAction>。                 `oneOrMoreModifierKeys`によって定義された&1; つまたは複数の修飾子キー、<xref:System.Windows.Input.ModifierKeys>列挙体です</xref:System.Windows.Input.ModifierKeys>。 1 つ以上の修飾子キーが提供される場合、各修飾子キーは「+」文字で区切られます。"
  example:
  - "The following example shows to create a MouseGesture and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  When the mouse wheel is clicked while the <xref:System.Windows.Input.ModifierKeys> key is pressed, the <xref:System.Windows.Input.ApplicationCommands.Open%2A> is invoked.  \n  \n [!code-xml[commandlibrarysnippets#MouseBindingMouseGestureXAML](~/add/codesnippet/xaml/CommandLibarySnippets/Window1.xaml#mousebindingmousegesturexaml)]  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Input.MouseGestureConverter))]

      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.MouseGestureValueSerializer))]

      public class MouseGesture : System.Windows.Input.InputGesture
  inheritance:
  - System.Object
  - System.Windows.Input.InputGesture
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor
  id: '#ctor'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture()
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>クラスです。"
  syntax:
    content: public MouseGesture ();
    parameters: []
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  id: '#ctor(System.Windows.Input.MouseAction)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture(MouseAction)
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>クラス<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>です。"
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "このジェスチャに関連付けられたアクション。"
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>mouseAction</code>有効ではありません<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>値。"
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  id: '#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)'
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseGesture(MouseAction,ModifierKeys)
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>クラス<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>と<xref href=&quot;System.Windows.Input.ModifierKeys&quot;></xref>です。"
  syntax:
    content: public MouseGesture (System.Windows.Input.MouseAction mouseAction, System.Windows.Input.ModifierKeys modifiers);
    parameters:
    - id: mouseAction
      type: System.Windows.Input.MouseAction
      description: "このジェスチャに関連付けられたアクション。"
    - id: modifiers
      type: System.Windows.Input.ModifierKeys
      description: "このジェスチャに関連付けられている修飾子。"
  overload: System.Windows.Input.MouseGesture.#ctor*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>mouseAction</code>有効ではありません<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>値 - または -<code>modifiers</code>が無効です<xref href=&quot;System.Windows.Input.ModifierKeys&quot;></xref>値。"
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  id: Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: Matches(Object,InputEventArgs)
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定するかどうか<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>に指定された関連付けられている入力と一致する<xref href=&quot;System.Windows.Input.InputEventArgs&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example shows how to test whether a <xref:System.Windows.Input.MouseGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>. A <xref:System.Windows.UIElement.MouseDown> event handler compares the event data with the <xref:System.Windows.Input.MouseGesture> by using the Matches method.  \n  \n [!code-cs[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#keydownhandlermousegesturematches)]\n [!code-vb[commandlibrarysnippets#KeyDownHandlerMouseGestureMatches](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#keydownhandlermousegesturematches)]"
  syntax:
    content: public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);
    parameters:
    - id: targetElement
      type: System.Object
      description: "ターゲット。"
    - id: inputEventArgs
      type: System.Windows.Input.InputEventArgs
      description: "このジェスチャと比較する入力イベントのデータ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このイベント データに一致する場合<xref href=&quot;System.Windows.Input.MouseGesture&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.MouseGesture.Matches*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.Modifiers
  id: Modifiers
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "これに関連付けられている修飾子キーの設定を取得または<xref href=&quot;System.Windows.Input.MouseGesture&quot;></xref>です。"
  remarks: "異なり<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction><xref:System.Windows.Input.ModifierKeys>有効な<xref:System.Windows.Input.MouseGesture>。</xref:System.Windows.Input.MouseGesture>をするために</xref:System.Windows.Input.ModifierKeys>は組で使用する必要はありません。</xref:System.Windows.Input.MouseAction> </xref:System.Windows.Input.KeyGesture>       <xref:System.Windows.Input.ModifierKeys>の複数の修飾子キーを同時に押すことは少しのフィールドの列挙は、します。</xref:System.Windows.Input.ModifierKeys> 押された修飾子キーの正確なセットを決定するビット操作を使用します。      <a name=&quot;xamlAttributeUsage_Modifiers&quot;></a>## XAML 属性の使用```   <object Modifiers=&quot;oneOrMoreModifierKeys&quot;/>   ``` <a name=&quot;xamlValues_Modifiers&quot;> </a> ## XAML 値*oneOrMoreModifierKeys*によって定義された&1; つまたは複数の修飾子キー、<xref:System.Windows.Input.ModifierKeys>列挙型、「+」文字で区切られます</xref:System.Windows.Input.ModifierKeys>。      "
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.ModifierKeys Modifiers { get; set; }
    return:
      type: System.Windows.Input.ModifierKeys
      description: "このジェスチャに関連付けられている修飾子キーです。 既定値は<xref href=&quot;System.Windows.Input.ModifierKeys&quot;></xref>です。"
  overload: System.Windows.Input.MouseGesture.Modifiers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseGesture.MouseAction
  id: MouseAction
  parent: System.Windows.Input.MouseGesture
  langs:
  - csharp
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得または設定、 <xref href=&quot;System.Windows.Input.MouseAction&quot;> </xref>このジェスチャに関連付けられています。"
  remarks: "異なり<xref:System.Windows.Input.KeyGesture>、<xref:System.Windows.Input.MouseAction><xref:System.Windows.Input.ModifierKeys>有効な<xref:System.Windows.Input.MouseGesture>。</xref:System.Windows.Input.MouseGesture>をするために</xref:System.Windows.Input.ModifierKeys>は組で使用する必要はありません。</xref:System.Windows.Input.MouseAction> </xref:System.Windows.Input.KeyGesture>"
  example:
  - "The following example shows to create a <xref:System.Windows.Input.MouseGesture> and associate it with a <xref:System.Windows.Input.RoutedCommand> through a <xref:System.Windows.Input.MouseBinding>.  \n  \n [!code-cs[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/csharp/CommandLibarySnippets/Window1.xaml.cs#mousebindingaddedtoinputbinding)]\n [!code-vb[commandlibrarysnippets#MouseBindingAddedToInputBinding](~/add/codesnippet/visualbasic/commandlibarysnippets/window1.xaml.vb#mousebindingaddedtoinputbinding)]"
  syntax:
    content: public System.Windows.Input.MouseAction MouseAction { get; set; }
    return:
      type: System.Windows.Input.MouseAction
      description: "このジェスチャに関連付けられているマウス操作。 既定値は<xref href=&quot;System.Windows.Input.MouseAction&quot;></xref>です。"
  overload: System.Windows.Input.MouseGesture.MouseAction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputGesture
  isExternal: false
  name: System.Windows.Input.InputGesture
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.MouseGesture.#ctor
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture()
  nameWithType: MouseGesture.MouseGesture()
  fullName: System.Windows.Input.MouseGesture.MouseGesture()
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture(MouseAction)
  nameWithType: MouseGesture.MouseGesture(MouseAction)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction)
- uid: System.Windows.Input.MouseAction
  parent: System.Windows.Input
  isExternal: false
  name: MouseAction
  nameWithType: MouseAction
  fullName: System.Windows.Input.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor(System.Windows.Input.MouseAction,System.Windows.Input.ModifierKeys)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture(MouseAction,ModifierKeys)
  nameWithType: MouseGesture.MouseGesture(MouseAction,ModifierKeys)
  fullName: System.Windows.Input.MouseGesture.MouseGesture(MouseAction,ModifierKeys)
- uid: System.Windows.Input.ModifierKeys
  parent: System.Windows.Input
  isExternal: false
  name: ModifierKeys
  nameWithType: ModifierKeys
  fullName: System.Windows.Input.ModifierKeys
- uid: System.Windows.Input.MouseGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Matches(Object,InputEventArgs)
  nameWithType: MouseGesture.Matches(Object,InputEventArgs)
  fullName: System.Windows.Input.MouseGesture.Matches(Object,InputEventArgs)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.InputEventArgs
  parent: System.Windows.Input
  isExternal: false
  name: InputEventArgs
  nameWithType: InputEventArgs
  fullName: System.Windows.Input.InputEventArgs
- uid: System.Windows.Input.MouseGesture.Modifiers
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
  fullName: System.Windows.Input.MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
  fullName: System.Windows.Input.MouseGesture.MouseAction
- uid: System.Windows.Input.MouseGesture.#ctor*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseGesture
  nameWithType: MouseGesture.MouseGesture
- uid: System.Windows.Input.MouseGesture.Matches*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Matches
  nameWithType: MouseGesture.Matches
- uid: System.Windows.Input.MouseGesture.Modifiers*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: Modifiers
  nameWithType: MouseGesture.Modifiers
- uid: System.Windows.Input.MouseGesture.MouseAction*
  parent: System.Windows.Input.MouseGesture
  isExternal: false
  name: MouseAction
  nameWithType: MouseGesture.MouseAction
