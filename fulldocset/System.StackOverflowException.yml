### YamlMime:ManagedReference
items:
- uid: System.StackOverflowException
  id: StackOverflowException
  children:
  - System.StackOverflowException.#ctor
  - System.StackOverflowException.#ctor(System.String)
  - System.StackOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: StackOverflowException
  nameWithType: StackOverflowException
  fullName: System.StackOverflowException
  type: Class
  summary: "入れ子になったメソッド呼び出しが多すぎますが含まれているために、実行スタックがオーバーフローした場合にスローされる例外。 このクラスは継承できません。"
  remarks: "通常、非常に深いか、無限再帰が発生した場合、実行スタックのオーバーフロー エラーの例外がスローされます。       StackOverflowException は、値は 0x800703E9 HRESULT COR_E_STACKOVERFLOW を使用します。 <xref:System.Reflection.Emit.OpCodes.Localloc>中間言語 (IL) の命令が例外をスローします</xref:System.Reflection.Emit.OpCodes.Localloc>。 StackOverflowException オブジェクトの初期プロパティ値の一覧は、次を参照してください、<xref:System.StackOverflowException.%23ctor%2A>コンス トラクター。</xref:System.StackOverflowException.%23ctor%2A> 。      ## .NET Framework 1.0 および 1.1 でのバージョンの考慮事項、(たとえば、無限再帰から回復する場合)、StackOverflowException オブジェクトをキャッチする可能性があります。 以降、.NET Framework 2.0 では、使用して、例外オブジェクトをキャッチすることはできません、 `try` / `catch`ブロック、および対応するプロセスは既定では終了します。 そのため、検出し、スタック オーバーフローを防止するコードを記述する必要があります。 たとえば、アプリは、再帰に依存している場合を使用してカウンターまたは状態の条件を再帰的なループを終了します。 次の例に再帰の数が呼び出していることを確認するカウンターを使用して、 `Execute` MAX_RECURSIVE_CALLS 定数によって定義されている最大数を超えないメソッドです。       [!code-vb[System.StackOverflowException.Class#1](~/add/codesnippet/visualbasic/t-system.stackoverflowex_1.vb)][!code-cs[System.StackOverflowException.Class#1](~/add/codesnippet/csharp/t-system.stackoverflowex_1.cs) ]       >  [!NOTE] > 適用、 <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>、例外をスローするメソッドに属性が影響を与えません</xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>。   引き続き、ユーザー コードから例外を処理することはできません。       アプリでは、共通言語ランタイム (CLR) をホストしている場合、CLR がスタック オーバーフロー例外が発生し、続行、対応するプロセスのアプリケーション ドメインをアンロードする必要がありますを指定できます。 詳細については、次を参照してください。 [ICLRPolicyManager インターフェイス](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StackOverflowException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor
  id: '#ctor'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.StackOverflowException&quot;> </xref>クラス、 <xref:System.Exception.Message*>&quot;要求された操作、スタック オーバーフローが発生します&quot;などに、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ</xref:System.Exception.Message*>の設定。 このメッセージでは、現在のシステム カルチャが考慮されます。"
  remarks: "次の表は、 <xref:System.StackOverflowException>。</xref:System.StackOverflowException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|`null`.|  |<xref:System.Exception.Message%2A>|ローカライズされたエラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public StackOverflowException ();
    parameters: []
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.StackOverflowException&quot;> </xref>指定したエラー メッセージを使用します。"
  remarks: "次の表は、 <xref:System.StackOverflowException>。</xref:System.StackOverflowException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|Null 参照 (`Nothing` Visual Basic で). |  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public StackOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A<xref:System.String>エラーを説明する</xref:System.String>。 メッセージの内容は、ユーザーが理解できるものでは。 このコンス トラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認するために必要です。"
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.StackOverflowException&quot;> </xref>指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を持つクラス。"
  remarks: "前の例外への参照を含めることができます、前の例外の直接の結果としてスローされる例外、<xref:System.Exception.InnerException%2A>プロパティ</xref:System.Exception.InnerException%2A>。 <xref:System.Exception.InnerException%2A>コンス トラクター、または null 参照に渡されたものと同じ値を返します (`Nothing` Visual Basic で) 場合、<xref:System.Exception.InnerException%2A>プロパティがコンス トラクターには、内部例外値を指定していません</xref:System.Exception.InnerException%2A></xref:System.Exception.InnerException%2A>。       次の表は、 <xref:System.StackOverflowException>。</xref:System.StackOverflowException>のインスタンスの初期プロパティ値を示しています。      |プロパティ |値 |  |--------------|-----------|  |<xref:System.Exception.InnerException%2A>|内部例外の参照 |。  |<xref:System.Exception.Message%2A>|エラー メッセージ文字列 |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A> 。"
  syntax:
    content: public StackOverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "例外の原因を説明するエラー メッセージ。"
    - id: innerException
      type: System.Exception
      description: "現在の例外の原因となった例外。 場合、`innerException`パラメーターが null 参照ではありません (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で) で現在の例外が発生、 <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref>ブロックは、内部例外を処理します。"
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.StackOverflowException.#ctor
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
- uid: System.StackOverflowException.#ctor(System.String)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.StackOverflowException.#ctor*
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException
  nameWithType: StackOverflowException.StackOverflowException
