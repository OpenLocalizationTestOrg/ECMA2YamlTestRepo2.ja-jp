### YamlMime:ManagedReference
items:
- uid: System.Web.Util.RequestValidator
  id: RequestValidator
  children:
  - System.Web.Util.RequestValidator.#ctor
  - System.Web.Util.RequestValidator.Current
  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  langs:
  - csharp
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
  type: Class
  summary: "カスタム要求の検証のための基本メソッドを定義します。"
  remarks: "既定では、ASP.NET は要求を検証できませんコードが要求の値を明示的に要求されるまでです。 たとえば、ASP.NET では検証されませんクエリ文字列の値のコードにアクセスするまで、<xref:System.Web.HttpRequest.QueryString%2A>コレクションです</xref:System.Web.HttpRequest.QueryString%2A>。 既定では、ASP.NET も検証されませんフォームの値、cookie、HTTP、およびの値を使用してアップロードされたファイルの名前などの要求データの種類によって、<xref:System.Web.HttpRequest.RawUrl%2A>プロパティ</xref:System.Web.HttpRequest.RawUrl%2A>。       RequestValidator クラスは、カスタムの要求の検証を提供するために実装できる基本クラスです。 このクラスを実装すると、検証が発生したときと検証を実行する要求データの種類を指定できます。       既定では、ASP.NET は、クロスサイト スクリプト (XSS) のチェックを提供します。 ただし、補完したり、XSS のカスタム実装を作成することで、ASP.NET で提供される要求の検証ロジックを置換できます。 たとえば、XSS 攻撃のチェックに加えて、SQL インジェクション攻撃をスキャンするカスタムの要求の検証の実装を記述することができます。       カスタム要求の検証を作成するには、RequestValidator 基底クラスから派生するカスタム クラスを作成します。 アプリケーション レベルの Web.config ファイルでカスタム要求の検証コントロールを使用する ASP.NET を構成します。 カスタム クラスを App_Code フォルダーにある Bin フォルダーにコンパイル済みのクラス ライブラリ内に配置することも、GAC のコンパイル済みのクラス ライブラリに配置することができます。      > [!NOTE] > アプリケーション用に&1; つだけカスタム要求の検証の種類を構成できます。 個々 の仮想パスまたはページのさまざまな要求の検証の種類を構成することはできません。"
  example:
  - "The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \n  \n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \n  \n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \n  \n```  \n<system.web>  \n  <httpRuntime requestValidationType=\"CustomRequestValidation\" />  \n</system.web>  \n```"
  syntax:
    content: public class RequestValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.#ctor
  id: '#ctor'
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.Util.RequestValidator>クラスは、既定のコンス トラクターを持つ</xref:System.Web.Util.RequestValidator>。 クラスの新しいインスタンスを初期化する場合、内部メソッドは、アプリケーションの構成情報からカスタムの検証の詳細を取得します。 構成の詳細が含まれている、<xref:System.Web.Configuration.HttpRuntimeSection>セクション</xref:System.Web.Configuration.HttpRuntimeSection>。 詳細については、次を参照してください[httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)と<xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>属性。</xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A> 。       1 つのインスタンスの初期化中に、<xref:System.Web.Util.RequestValidator>クラスが作成され、インスタンスへの参照は保持され、<xref:System.Web.Util.RequestValidator.Current%2A>プロパティ</xref:System.Web.Util.RequestValidator.Current%2A></xref:System.Web.Util.RequestValidator>。 ASP.NET では、要求ごとに新しい要求の検証コントロール インスタンスは作成されません。 したがって、カスタム実装の<xref:System.Web.Util.RequestValidator>クラスはスレッド セーフである必要があります</xref:System.Web.Util.RequestValidator>。"
  syntax:
    content: public RequestValidator ();
    parameters: []
  overload: System.Web.Util.RequestValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.Current
  id: Current
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "取得または設定の参照を現在<xref href=&quot;System.Web.Util.RequestValidator&quot;></xref>アプリケーションで使用されるインスタンスです。"
  remarks: "現在のプロパティが<xref:System.Web.Util.RequestValidator>クラス</xref:System.Web.Util.RequestValidator>の&1; つの許可されているインスタンスへの参照を保持します。 インスタンスが存在しない場合、新しいものが作成されます。 インスタンスが既に存在する場合は、現在のインスタンスが返されます。       1 つのインスタンスの初期化中に、<xref:System.Web.Util.RequestValidator>クラスが作成され、インスタンスへの参照は現在のプロパティで使用可能になります</xref:System.Web.Util.RequestValidator>。 ASP.NET では、要求ごとに新しい要求の検証コントロール インスタンスは作成されません。 したがって、カスタム実装の<xref:System.Web.Util.RequestValidator>クラスはスレッド セーフである必要があります</xref:System.Web.Util.RequestValidator>。      > [!NOTE] >、現在のプロパティはスレッド セーフであるプロパティが、現在の<xref:System.Web.Util.RequestValidator>クラス</xref:System.Web.Util.RequestValidator>への参照に設定されている間"
  syntax:
    content: public static System.Web.Util.RequestValidator Current { get; set; }
    return:
      type: System.Web.Util.RequestValidator
      description: "インスタンス、 <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref>クラスです。"
  overload: System.Web.Util.RequestValidator.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "このプロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "パブリック メソッドを呼び出し、保護対象の提供<xref:System.Web.Util.RequestValidator.IsValidRequestString*>HTTP 要求データを検証するためにメソッド</xref:System.Web.Util.RequestValidator.IsValidRequestString*>。"
  remarks: "InvokeIsValidRequestString メソッドは、保護対象へのパブリック アクセスを提供<xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>メソッド</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>。 これにより<xref:System.Web.Util.RequestValidator>クラスと<xref:System.Web.Util.RequestValidator.IsValidRequestString%2A><xref:System.Web.Util.RequestValidator>クラス</xref:System.Web.Util.RequestValidator>から継承することがなくメソッド</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>の呼び出し</xref:System.Web.Util.RequestValidator>のカスタム ラッパー クラスを作成できます。       要求の検証方法については、 <xref:System.Web.UnvalidatedRequestValues>。</xref:System.Web.UnvalidatedRequestValues>を参照してください。"
  syntax:
    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求の HTTP コンテキスト。"
    - id: value
      type: System.String
      description: "HTTP 要求データを検証します。"
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "検証されている要求データのソースを表す列挙体。 列挙体の使用可能な値を次に示します:-<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "(省略可能)検証する項目の要求のコレクション内のキー。 このパラメーターは、検証するデータをコレクションから取得した場合に使用します。 このパラメーターを指定できますを検証するデータはない場合、コレクションから<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: validationFailureIndex
      type: System.Int32
      description: "このメソッドが戻るとき、問題があるか、無効なコレクション内のテキスト、要求の&0; から始まる開始位置を示します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証対象の文字列に悪意のあるスクリプト攻撃; のために使用できるエンコードされていない文字が含まれていない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "HTTP 要求データを表す文字列を検証します。"
  remarks: "要求データのカスタム検証を実行するには、このメソッドを実装するとします。 IsValidRequestString メソッドの基本動作は、クロスサイト スクリプティングの検証に危険な文字列をチェックする ASP.NET が内部的に実装する動作に似ています。 詳細については、次を参照してください。 [How To: ASP.NET でのクロス サイト スクリプティングのを防ぐ](http://go.microsoft.com/fwlink/?LinkID=178708)です。       かどうか、カスタム検証ロジックはエラーを検出、このメソッドが返す`false`で値を指定して`validationFailureIndex`エラーが発生したテキストの開始位置を示すためにします。 値`validationFailureIndex`0 または正の整数にする必要があります。       要求の検証チェックのロジックは次のように続行されます -<xref:System.Web.HttpRequest>クラスは、受け取ったデータに null 文字の削除のチェックを実行します。</xref:System.Web.HttpRequest> 。      -<xref:System.Web.HttpRequest>クラスのメソッドを呼び出すか IsValidRequestString (基本メソッドの既定の実装) または派生バージョンのメソッドを呼び出します</xref:System.Web.HttpRequest>。      -IsValidRequestString メソッドを返す場合`false`検証失敗を示すときに、ASP.NET (必要な場合)、エラー文字列を構築およびスロー、<xref:System.Web.HttpRequestValidationException>例外です</xref:System.Web.HttpRequestValidationException>。"
  syntax:
    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在の要求のコンテキスト。"
    - id: value
      type: System.String
      description: "HTTP 要求データを検証します。"
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "検証されている要求データのソースを表す列挙体。 列挙体の使用可能な値を次に示します。<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_RawUrl&quot; name=&quot;RawUrl&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "検証する項目の要求のコレクション内のキー。 このパラメーターは省略できます。 このパラメーターは、検証するデータをコレクションから取得した場合に使用します。 コレクションから検証するデータがない場合`collectionKey`できます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: validationFailureIndex
      type: System.Int32
      description: "このメソッドが戻るとき、問題があるか、無効なコレクション内のテキスト、要求の&0; から始まる開始位置を示します。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検証に使用する文字列が無効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Util.RequestValidator.IsValidRequestString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Util.RequestValidator.#ctor
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
- uid: System.Web.Util.RequestValidator.Current
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
- uid: System.Web.Util.RequestValidator
  parent: System.Web.Util
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.RequestValidationSource
  parent: System.Web.Util
  isExternal: false
  name: RequestValidationSource
  nameWithType: RequestValidationSource
  fullName: System.Web.Util.RequestValidationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Web.Util.RequestValidator.#ctor*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator.RequestValidator
- uid: System.Web.Util.RequestValidator.Current*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString
  nameWithType: RequestValidator.InvokeIsValidRequestString
- uid: System.Web.Util.RequestValidator.IsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString
  nameWithType: RequestValidator.IsValidRequestString
