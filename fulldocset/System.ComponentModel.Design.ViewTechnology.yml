### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.ViewTechnology
  id: ViewTechnology
  children:
  - System.ComponentModel.Design.ViewTechnology.Default
  - System.ComponentModel.Design.ViewTechnology.Passthrough
  - System.ComponentModel.Design.ViewTechnology.WindowsForms
  langs:
  - csharp
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
  type: Enum
  summary: "デザイナー ホストをサポートするテクノロジのセットの識別子を定義します。"
  remarks: "アダプター モデルの表示が置き換え、ViewTechnology 機能; に機能を追加ただし、選択した場合、旧バージョンとの互換性と将来の使用の両方にはこの ViewTechnology 機能が保持されます。 詳細については、「.NET 図形ライブラリ:: A サンプル デザイナー」http://windowsforms.net/articles/shapedesigner.aspx で Windows フォーム サポート技術情報を参照してください。       ViewTechnology では、デザイナーでホストされるドキュメントの表示を制御するために使用するモードを示す可能性のある識別子を定義します。       既定値は、デザイナー ホスト環境でのみ使用する必要があります。 以前のバージョンので、 [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]、ViewTechnology 列挙型がルート デザイナーでサポートされている UI モデルの種類を指定します。 代わりに使用する必要があるこのモデルを拡張できないため、*ビュー アダプター*モデル。 ビューのアダプターは、1 つの型を別のオブジェクトを対応する型です。       たとえば、HTML デザイナーを返す可能性があります、`DemoDOM`ツリーのビューだけです。 HTML デザイナーでは、既定のビュー テクノロジを返します。 Windows フォームの環境をホストには、1 つまたは複数アダプター使用できるビュー クラスがあります。 このような&1; つのクラスに変換できなかった場合、`DemoDOM`ホスト アプリケーションを Windows フォーム コントロールでは、この種類のデザイナーをサポートできます。 かどうかアダプター型を処理できるなし、データ デザイナーから返された<xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>メソッド、デザイナーの読み込みが失敗し、エラーで、ユーザーが表示されます</xref:System.ComponentModel.Design.IRootDesigner.GetView%2A>。       [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]UI 技術に合わせて調整できますので、ビューのアダプターを提供するための拡張可能なスキームがあります。 サードパーティのテクノロジのプロバイダーは、適切なビュー アダプターも提供し、そのオブジェクト モデルはすぐに使用できるようにします。       使用する例については、アダプターの表示「.NET 図形ライブラリ:: A サンプル デザイナー」http://windowsforms.net/articles/shapedesigner.aspx で Windows フォーム サポート技術情報を参照してください。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ViewTechnology
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Default
  id: Default
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "既定のビュー テクノロジのサポートを指定します。"
  remarks: "ルート デザイナーは、オブジェクトの任意の型を返す可能性がありますが、オブジェクトは、ホストの技術のアダプターとの互換性である必要があります。 ホスティング環境など[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]新しいビュー技術アダプターを接続する方法を提供します。 Windows フォーム デザイナーの既定のビュー オブジェクトは、<xref:System.Windows.Forms.Control?displayProperty=fullName>インスタンス</xref:System.Windows.Forms.Control?displayProperty=fullName>。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.IRootDesigner> interface.  \n  \n [!code-cs[IRootDesigner Sample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_1.cs)]\n [!code-vb[IRootDesigner Sample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_1.vb)]\n [!code-cpp[IRootDesigner Sample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_1.cpp)]"
  syntax:
    content: Default
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  id: Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "ビュー オブジェクトが、開発環境に直接渡されるモードを表します。"
  remarks: "ビュー オブジェクトには、開発環境に必要なインターフェイスを実装する必要があります。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]開発環境は、ActiveX コントロール、作業中の文書またはを介して使用可能な IVsWindowPane インターフェイスを実装するオブジェクトのいずれかであるオブジェクトの表示をサポートしている[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]VSI ([!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]統合) プログラムです。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]開発環境では、このビュー テクノロジのサポートを提供します。 このビュー テクノロジのサポートは、必ずしもすべての開発環境で使用可能ではありません。"
  syntax:
    content: Passthrough
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  id: WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  langs:
  - csharp
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Windows フォーム コントロール オブジェクトがルート デザイナーの表示を提供するモードを表します。"
  remarks: "デザイナー ホストでは、開発環境のドキュメント ウィンドウを Windows フォーム コントロールを使用します。"
  example:
  - "The following code example demonstrates how to use the ViewTechnology class in a designer. This code example is part of a larger example provided for the <xref:System.ComponentModel.Design.LocalizationExtenderProvider> class.  \n  \n [!code-cpp[LocalizationExtenderProviderExample#1](~/add/codesnippet/cpp/t-system.componentmodel._118_2.cpp)]\n [!code-cs[LocalizationExtenderProviderExample#1](~/add/codesnippet/csharp/t-system.componentmodel._118_2.cs)]\n [!code-vb[LocalizationExtenderProviderExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._118_2.vb)]"
  syntax:
    content: WindowsForms
    return:
      type: System.ComponentModel.Design.ViewTechnology
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ComponentModel.Design.ViewTechnology.Default
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Default
  nameWithType: ViewTechnology.Default
  fullName: System.ComponentModel.Design.ViewTechnology.Default
- uid: System.ComponentModel.Design.ViewTechnology
  parent: System.ComponentModel.Design
  isExternal: false
  name: ViewTechnology
  nameWithType: ViewTechnology
  fullName: System.ComponentModel.Design.ViewTechnology
- uid: System.ComponentModel.Design.ViewTechnology.Passthrough
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: Passthrough
  nameWithType: ViewTechnology.Passthrough
  fullName: System.ComponentModel.Design.ViewTechnology.Passthrough
- uid: System.ComponentModel.Design.ViewTechnology.WindowsForms
  parent: System.ComponentModel.Design.ViewTechnology
  isExternal: false
  name: WindowsForms
  nameWithType: ViewTechnology.WindowsForms
  fullName: System.ComponentModel.Design.ViewTechnology.WindowsForms
