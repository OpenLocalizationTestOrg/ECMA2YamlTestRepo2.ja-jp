### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDocumentFragment
  id: XmlDocumentFragment
  children:
  - System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)
  - System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)
  - System.Xml.XmlDocumentFragment.InnerXml
  - System.Xml.XmlDocumentFragment.LocalName
  - System.Xml.XmlDocumentFragment.Name
  - System.Xml.XmlDocumentFragment.NodeType
  - System.Xml.XmlDocumentFragment.OwnerDocument
  - System.Xml.XmlDocumentFragment.ParentNode
  - System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlDocumentFragment
  nameWithType: XmlDocumentFragment
  fullName: System.Xml.XmlDocumentFragment
  type: Class
  summary: "ツリー挿入操作に役立つ軽量オブジェクトを表します。"
  syntax:
    content: 'public class XmlDocumentFragment : System.Xml.XmlNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InnerText
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SchemaInfo
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: XmlDocumentFragment(XmlDocument)
  nameWithType: XmlDocumentFragment.XmlDocumentFragment(XmlDocument)
  fullName: System.Xml.XmlDocumentFragment.XmlDocumentFragment(XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.XmlDocumentFragment&quot;> </xref>クラスです。"
  remarks: "の<xref:System.Xml.XmlDocumentFragment>直接。 代わりに、 <xref:System.Xml.XmlDocument.CreateDocumentFragment%2A>。</xref:System.Xml.XmlDocument.CreateDocumentFragment%2A>などのメソッドを使用して</xref:System.Xml.XmlDocumentFragment>インスタンス化できません。"
  syntax:
    content: protected XmlDocumentFragment (System.Xml.XmlDocument ownerDocument);
    parameters:
    - id: ownerDocument
      type: System.Xml.XmlDocument
      description: "フラグメントのソースである XML ドキュメントです。"
  overload: System.Xml.XmlDocumentFragment.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentFragment.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentFragment.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "このノードの複製を作成します。"
  remarks: "`CloneNode`ノードのコピー コンス トラクターとして機能します。 他のノード型でこのメソッドの動作を表示するには、 <xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>。</xref:System.Xml.XmlNode.CloneNode%2A?displayProperty=fullName>を参照してください。       複製されたノードが親を持たない (<xref:System.Xml.XmlDocumentFragment.ParentNode%2A>返します`null`).</xref:System.Xml.XmlDocumentFragment.ParentNode%2A>"
  example:
  - "The following example shows the difference between a deep and shallow clone.  \n  \n [!code-vb[Classic WebData XmlDocumentFragment.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmldocument_16_1.vb)]\n [!code-cs[Classic WebData XmlDocumentFragment.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmldocument_16_1.cs)]\n [!code-cpp[Classic WebData XmlDocumentFragment.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmldocument_16_1.cpp)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>再帰的に指定されたノードの下のサブツリーのクローンを作成します。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>したノードだけのクローンを作成します。"
    return:
      type: System.Xml.XmlNode
      description: "複製されたノード。"
  overload: System.Xml.XmlDocumentFragment.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.InnerXml
  id: InnerXml
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlDocumentFragment.InnerXml
  fullName: System.Xml.XmlDocumentFragment.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "取得またはこのノードの子を表すマークアップを設定します。"
  remarks: "このプロパティの設定内容に置き換えます、ノードの子は解析された、指定した文字列。 文字列の解析は、現在の名前空間コンテキストで実行します。       このプロパティは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  example:
  - "The following example uses the InnerXml property to set the contents of the document fragment.  \n  \n [!code-cs[Classic WebData XmlDocumentFragment.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_10_1.cs)]\n [!code-vb[Classic WebData XmlDocumentFragment.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_10_1.vb)]\n [!code-cpp[Classic WebData XmlDocumentFragment.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_10_1.cpp)]"
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "このノードの子のマークアップ。"
  overload: System.Xml.XmlDocumentFragment.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML では、ときにこのプロパティの設定が適切な形式を指定します。"
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.LocalName
  id: LocalName
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlDocumentFragment.LocalName
  fullName: System.Xml.XmlDocumentFragment.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "ノードのローカル名を取得します。"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_XmlDocumentFragment&quot; name=&quot;XmlDocumentFragment&quot; href=&quot;&quot;> </xref>ノードの場合、ローカル名は<xref uid=&quot;langword_csharp_#document-fragment&quot; name=&quot;#document-fragment&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XmlDocumentFragment.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.Name
  id: Name
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: Name
  nameWithType: XmlDocumentFragment.Name
  fullName: System.Xml.XmlDocumentFragment.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "ノードの修飾名を取得します。"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "For <xref uid=&quot;langword_csharp_XmlDocumentFragment&quot; name=&quot;XmlDocumentFragment&quot; href=&quot;&quot;></xref>, the name is <xref uid=&quot;langword_csharp_#document-fragment&quot; name=&quot;#document-fragment&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.XmlDocumentFragment.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.NodeType
  id: NodeType
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlDocumentFragment.NodeType
  fullName: System.Xml.XmlDocumentFragment.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "現在のノードの種類を取得します。"
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "<xref uid=&quot;langword_csharp_XmlDocumentFragment&quot; name=&quot;XmlDocumentFragment&quot; href=&quot;&quot;> </xref>ノード、この値は XmlNodeType.DocumentFragment します。"
  overload: System.Xml.XmlDocumentFragment.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlDocumentFragment.OwnerDocument
  fullName: System.Xml.XmlDocumentFragment.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "取得、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>このノードが属しています。"
  remarks: "ノードを現在のノードを追加する場合を使用して、`XmlDocument`によって返される、`OwnerDocument`プロパティ ノードを作成します。"
  example:
  - "The following example adds a new node to the document fragment.  \n  \n [!code-cs[Classic WebData XmlDocumentFragment.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmldocument_2_1.cs)]\n [!code-cpp[Classic WebData XmlDocumentFragment.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmldocument_2_1.cpp)]\n [!code-vb[Classic WebData XmlDocumentFragment.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmldocument_2_1.vb)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref>このノードが属しています。"
  overload: System.Xml.XmlDocumentFragment.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.ParentNode
  id: ParentNode
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlDocumentFragment.ParentNode
  fullName: System.Xml.XmlDocumentFragment.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "(親を持つノード) の場合は、このノードの親を取得します。"
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "このノードの親です。       <xref uid=&quot;langword_csharp_XmlDocumentFragment&quot; name=&quot;XmlDocumentFragment&quot; href=&quot;&quot;> </xref>ノードの場合、このプロパティは常に<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XmlDocumentFragment.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentFragment.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentFragment.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "ノードのすべての子を指定した<xref:System.Xml.XmlWriter>を示します。</xref:System.Xml.XmlWriter>に保存します。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref>に保存します。"
  overload: System.Xml.XmlDocumentFragment.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentFragment
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentFragment.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentFragment.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "指定した<xref:System.Xml.XmlWriter>。</xref:System.Xml.XmlWriter>にノードを保存します。"
  remarks: "このメソッドは、ドキュメント オブジェクト モデル (DOM) に Microsoft 拡張機能です。"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "<xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref>に保存します。"
  overload: System.Xml.XmlDocumentFragment.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlNode
  isExternal: false
  name: System.Xml.XmlNode
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.Xml.XmlDocumentFragment.#ctor(System.Xml.XmlDocument)
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: XmlDocumentFragment(XmlDocument)
  nameWithType: XmlDocumentFragment.XmlDocumentFragment(XmlDocument)
  fullName: System.Xml.XmlDocumentFragment.XmlDocumentFragment(XmlDocument)
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlDocumentFragment.CloneNode(System.Boolean)
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDocumentFragment.CloneNode(Boolean)
  fullName: System.Xml.XmlDocumentFragment.CloneNode(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDocumentFragment.InnerXml
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: InnerXml
  nameWithType: XmlDocumentFragment.InnerXml
  fullName: System.Xml.XmlDocumentFragment.InnerXml
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocumentFragment.LocalName
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentFragment.LocalName
  fullName: System.Xml.XmlDocumentFragment.LocalName
- uid: System.Xml.XmlDocumentFragment.Name
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: Name
  nameWithType: XmlDocumentFragment.Name
  fullName: System.Xml.XmlDocumentFragment.Name
- uid: System.Xml.XmlDocumentFragment.NodeType
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentFragment.NodeType
  fullName: System.Xml.XmlDocumentFragment.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlDocumentFragment.OwnerDocument
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlDocumentFragment.OwnerDocument
  fullName: System.Xml.XmlDocumentFragment.OwnerDocument
- uid: System.Xml.XmlDocumentFragment.ParentNode
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: ParentNode
  nameWithType: XmlDocumentFragment.ParentNode
  fullName: System.Xml.XmlDocumentFragment.ParentNode
- uid: System.Xml.XmlDocumentFragment.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocumentFragment.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlDocumentFragment.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlDocumentFragment.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocumentFragment.WriteTo(XmlWriter)
  fullName: System.Xml.XmlDocumentFragment.WriteTo(XmlWriter)
- uid: System.Xml.XmlDocumentFragment.#ctor*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: XmlDocumentFragment
  nameWithType: XmlDocumentFragment.XmlDocumentFragment
- uid: System.Xml.XmlDocumentFragment.CloneNode*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: CloneNode
  nameWithType: XmlDocumentFragment.CloneNode
- uid: System.Xml.XmlDocumentFragment.InnerXml*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: InnerXml
  nameWithType: XmlDocumentFragment.InnerXml
- uid: System.Xml.XmlDocumentFragment.LocalName*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: LocalName
  nameWithType: XmlDocumentFragment.LocalName
- uid: System.Xml.XmlDocumentFragment.Name*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: Name
  nameWithType: XmlDocumentFragment.Name
- uid: System.Xml.XmlDocumentFragment.NodeType*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: NodeType
  nameWithType: XmlDocumentFragment.NodeType
- uid: System.Xml.XmlDocumentFragment.OwnerDocument*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlDocumentFragment.OwnerDocument
- uid: System.Xml.XmlDocumentFragment.ParentNode*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: ParentNode
  nameWithType: XmlDocumentFragment.ParentNode
- uid: System.Xml.XmlDocumentFragment.WriteContentTo*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlDocumentFragment.WriteContentTo
- uid: System.Xml.XmlDocumentFragment.WriteTo*
  parent: System.Xml.XmlDocumentFragment
  isExternal: false
  name: WriteTo
  nameWithType: XmlDocumentFragment.WriteTo
