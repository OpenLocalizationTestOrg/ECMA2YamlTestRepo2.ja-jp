### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventArgs
  id: RequestBringIntoViewEventArgs
  children:
  - System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  - System.Windows.RequestBringIntoViewEventArgs.TargetObject
  - System.Windows.RequestBringIntoViewEventArgs.TargetRect
  langs:
  - csharp
  name: RequestBringIntoViewEventArgs
  nameWithType: RequestBringIntoViewEventArgs
  fullName: System.Windows.RequestBringIntoViewEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref>ルーティングされたイベント。"
  remarks: "<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>を呼び出すと、要素によってイベントが生成<xref:System.Windows.FrameworkElement.BringIntoView%2A>その要素から</xref:System.Windows.FrameworkElement.BringIntoView%2A></xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>。 一般に、このルーティングされたイベントは、ソースでは処理されません。 スクロール可能な領域を実装していない中間クラスまたはコンテンツをクリップする類似する概念は、イベントを処理する必要があります。  イベントは、スクロール可能な領域を実装するか、それ以外の場合を指定する親要素を許可する必要があります<xref:System.Windows.UIElement.ClipToBounds%2A>`false`</xref:System.Windows.UIElement.ClipToBounds%2A>。 このような親要素は、通常のクラス処理を提供、<xref:System.Windows.FrameworkElement.RequestBringIntoView>これは、必要なレンダリング ロジックが指定された要素に表示可能なクリップ領域内を要求したときに発生するイベントです</xref:System.Windows.FrameworkElement.RequestBringIntoView>。       コンテンツの要素には、イベントがそのコンテンツ ホストにより発生する可能性があります (呼び出しを介して<xref:System.Windows.FrameworkContentElement.BringIntoView%2A>と発生<xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>、コンテンツ ホストから).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> 同様に、要求内に収めるビュー <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>。</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>ヘルパー メソッドを使用する論理ツリーの要素       <xref:System.Windows.Controls.ListBox> <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>。</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>関連ですが異なるメソッドを実装します。</xref:System.Windows.Controls.ListBox>"
  syntax:
    content: 'public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.RoutedEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.RoutedEventArgs.Handled
  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)
  - System.Windows.RoutedEventArgs.OriginalSource
  - System.Windows.RoutedEventArgs.RoutedEvent
  - System.Windows.RoutedEventArgs.Source
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  id: InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "イベントのシステムの効率を高めることができます、型固有の方法でイベント ハンドラーを呼び出します。"
  remarks: "この実装では、ジェネリック ハンドラーをキャスト<xref:System.Windows.RequestBringIntoViewEventHandler>してそれを呼び出します</xref:System.Windows.RequestBringIntoViewEventHandler> この実装パターンとその理由の詳細については、次を参照してください<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>と[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)。</xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> 。"
  syntax:
    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);
    parameters:
    - id: genericHandler
      type: System.Delegate
      description: "型固有の方法で呼び出すジェネリック ハンドラー。"
    - id: genericTarget
      type: System.Object
      description: "ハンドラーを呼び出すターゲット。"
  overload: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  id: TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示、イベントに応答できるようにするオブジェクトを取得します。"
  remarks: "このオブジェクトは通常、同じオブジェクト<xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>。</xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=fullName>によって返される"
  syntax:
    content: public System.Windows.DependencyObject TargetObject { get; }
    return:
      type: System.Windows.DependencyObject
      description: "呼び出した<xref:System.Windows.FrameworkElement.BringIntoView*>。</xref:System.Windows.FrameworkElement.BringIntoView*>オブジェクト"
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  id: TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  langs:
  - csharp
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "表示できるようにするオブジェクトの座標空間内の四角形の領域を取得します。"
  remarks: "場合の署名<xref:System.Windows.FrameworkElement.BringIntoView%2A>が呼び出されたイベントを発生させる対象の四角形を指定して、このプロパティがあります、<xref:System.Windows.Rect.Empty%2A>の値、<xref:System.Windows.Rect>構造</xref:System.Windows.Rect></xref:System.Windows.Rect.Empty%2A></xref:System.Windows.FrameworkElement.BringIntoView%2A>。"
  syntax:
    content: public System.Windows.Rect TargetRect { get; }
    return:
      type: System.Windows.Rect
      description: "要求された四角形領域です。"
  overload: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.RoutedEventArgs
  isExternal: false
  name: System.Windows.RoutedEventArgs
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler(Delegate,Object)
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
  fullName: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(Delegate,Object)
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
  fullName: System.Windows.RequestBringIntoViewEventArgs.TargetRect
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: InvokeEventHandler
  nameWithType: RequestBringIntoViewEventArgs.InvokeEventHandler
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetObject*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetObject
  nameWithType: RequestBringIntoViewEventArgs.TargetObject
- uid: System.Windows.RequestBringIntoViewEventArgs.TargetRect*
  parent: System.Windows.RequestBringIntoViewEventArgs
  isExternal: false
  name: TargetRect
  nameWithType: RequestBringIntoViewEventArgs.TargetRect
