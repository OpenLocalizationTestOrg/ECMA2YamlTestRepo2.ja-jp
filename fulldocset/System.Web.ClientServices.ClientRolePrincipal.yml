### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientRolePrincipal
  id: ClientRolePrincipal
  children:
  - System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.ClientServices.ClientRolePrincipal.Identity
  - System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  langs:
  - csharp
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal
  fullName: System.Web.ClientServices.ClientRolePrincipal
  type: Class
  summary: "ロール情報を含むクライアント アプリケーション サービスのセキュリティ情報を表します。"
  remarks: "クライアント アプリケーション サービスでユーザーを検証するときに、<xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>または<xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>設定、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>をこのクラスのインスタンスに</xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider></xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider><xref:System.Web.ClientServices.ClientFormsIdentity><xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>プロパティ</xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A></xref:System.Web.ClientServices.ClientFormsIdentity>を初期化します</xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>を初期化、<xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>プロパティを<xref:System.Security.Principal.WindowsIdentity>によって返されるオブジェクト、 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>メソッド</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName></xref:System.Security.Principal.WindowsIdentity></xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A></xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>。       ない通常このクラスに直接アクセスします。 通常を呼び出す、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A></xref:System.Security.Principal.IPrincipal></xref:System.Security.Principal.IPrincipal.IsInRole%2A>。 ただし、キャスト、<xref:System.Threading.Thread.CurrentPrincipal%2A>プロパティの値を呼び出す ClientRolePrincipal 参照を<xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A>メソッド例」のセクションで示したように、明示的にします</xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A></xref:System.Threading.Thread.CurrentPrincipal%2A>。"
  example:
  - "The following example code demonstrates how to use this class to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: 'public class ClientRolePrincipal : System.Security.Principal.IPrincipal'
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>の値を持つプロパティが初期化されて、`identity`パラメーター</xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A> 。       クライアント アプリケーション サービスでユーザーを検証するときに、<xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>または<xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>設定、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>をこのクラスのインスタンスに</xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider></xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider><xref:System.Web.ClientServices.ClientFormsIdentity><xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>プロパティ</xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A></xref:System.Web.ClientServices.ClientFormsIdentity>を初期化します</xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>を初期化、<xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A>プロパティを<xref:System.Security.Principal.WindowsIdentity>によって返されるオブジェクト、 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>メソッド</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName></xref:System.Security.Principal.WindowsIdentity></xref:System.Web.ClientServices.ClientRolePrincipal.Identity%2A></xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>。"
  syntax:
    content: public ClientRolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "現在のユーザーを表します。"
  overload: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  id: Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "関連付けられているセキュリティ id を取得、 <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;></xref>です。"
  remarks: "クライアント アプリケーション サービスでユーザーを検証するときに、<xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>または<xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>設定、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>をこのクラスのインスタンスに</xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider></xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider>Identity プロパティを<xref:System.Web.ClientServices.ClientFormsIdentity>クラス</xref:System.Web.ClientServices.ClientFormsIdentity>の新しいインスタンスを初期化します。</xref:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider> <xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>、Identity プロパティを初期化、<xref:System.Security.Principal.WindowsIdentity>によって返されるオブジェクト、 `static` <xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName>メソッド</xref:System.Security.Principal.WindowsIdentity.GetCurrent?displayProperty=fullName></xref:System.Security.Principal.WindowsIdentity></xref:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider>。"
  syntax:
    content: public System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: "現在のユーザーを表します。"
  overload: System.Web.ClientServices.ClientRolePrincipal.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "ユーザーがによって表されるかどうかを示す値を取得、 <xref href=&quot;System.Web.ClientServices.ClientRolePrincipal&quot;> </xref>が指定されたロールです。"
  remarks: "通常を呼び出す、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>のメソッド、<xref:System.Security.Principal.IPrincipal>によって返される、 `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>プロパティ</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName></xref:System.Security.Principal.IPrincipal></xref:System.Security.Principal.IPrincipal.IsInRole%2A>。 ただし、キャスト、<xref:System.Threading.Thread.CurrentPrincipal%2A>プロパティの値を<xref:System.Web.ClientServices.ClientRolePrincipal>このメソッドを呼び出す例」のセクションで示したように、明示的に参照します</xref:System.Web.ClientServices.ClientRolePrincipal></xref:System.Threading.Thread.CurrentPrincipal%2A>。       IsInRole メソッドは常に返します`false`場合は、ユーザーのログインの有効期限が切れました。 これは発生しませんが、アプリケーションを呼び出した場合、<xref:System.Security.Principal.IPrincipal.IsInRole%2A>メソッド認証のすぐ後に&1; 回</xref:System.Security.Principal.IPrincipal.IsInRole%2A>。 アプリケーションは、他のタイミングでユーザー ロールを取得する必要がある場合、は、ログインの有効期限が切れたユーザーを再検証するコードを追加することができます。 有効なユーザーすべては、ロールに割り当てられた場合、は、ログインを呼び出して有効期限が切れたかどうかを確認することができます、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName>メソッド</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A?displayProperty=fullName>。 ロールが返されない場合、ログインが有効期限が切れた。 この機能の例は、次を参照してください、<xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A>メソッド。</xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> 。 この機能は必要なは、選択した場合にのみ**ユーザーがサーバー クッキーの有効期限が切れるたびに再度ログオンする必要があります**アプリケーションの構成にします。 詳細については、次を参照してください。[する方法: クライアント アプリケーション サービスを構成する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example code demonstrates how to use this method to display a button only when the user is in the \"manager\" role. This example requires a <xref:System.Windows.Forms.Button> named `managerOnlyButton` with an initial <xref:System.Windows.Forms.Control.Visible%2A> property value of `false`.  \n  \n [!code-vb[ClientApplicationServices#313](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#313)]\n [!code-cs[ClientApplicationServices#313](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#313)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "確認するロール。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが指定されたロールの場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ユーザーが指定したロールがないか、認証されていない場合。"
  overload: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal(IIdentity)
  nameWithType: ClientRolePrincipal.ClientRolePrincipal(IIdentity)
  fullName: System.Web.ClientServices.ClientRolePrincipal.ClientRolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
  fullName: System.Web.ClientServices.ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: ClientRolePrincipal.IsInRole(String)
  fullName: System.Web.ClientServices.ClientRolePrincipal.IsInRole(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ClientServices.ClientRolePrincipal.#ctor*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: ClientRolePrincipal
  nameWithType: ClientRolePrincipal.ClientRolePrincipal
- uid: System.Web.ClientServices.ClientRolePrincipal.Identity*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: Identity
  nameWithType: ClientRolePrincipal.Identity
- uid: System.Web.ClientServices.ClientRolePrincipal.IsInRole*
  parent: System.Web.ClientServices.ClientRolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: ClientRolePrincipal.IsInRole
