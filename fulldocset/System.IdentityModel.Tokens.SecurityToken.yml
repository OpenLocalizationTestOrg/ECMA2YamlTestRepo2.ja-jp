### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityToken
  id: SecurityToken
  children:
  - System.IdentityModel.Tokens.SecurityToken.#ctor
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.Id
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SecurityToken.ValidTo
  langs:
  - csharp
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
  type: Class
  summary: "すべてのセキュリティ トークンを実装するために使用する基本クラスを表します。"
  remarks: "認証資格情報を提供するか、メッセージを保護するのには、セキュリティ トークンを使用します。       セキュリティ トークン認証の資格情報暗号化のキー マテリアルを提供するために使用したり、セキュリティ トークン サービス (STS) のサブジェクトに関するクレームのコレクションによって発行されたセキュリティ トークンの場合。 すべてのセキュリティ トークンは、SecurityToken クラスから派生します。       .NET 4.5 以降、Windows Identity Foundation (WIF) は、.NET Framework に完全に統合されて、WIF によって公開されるクラス、お勧めの方法で処理、コード内のセキュリティ トークン。 、WIF でセキュリティ トークンのシリアル化および逆シリアル化し、XML から表現であり、で検証の<xref:System.IdentityModel.Tokens.SecurityTokenHandler>基本クラス</xref:System.IdentityModel.Tokens.SecurityTokenHandler>から派生したクラスを使用します。 トークンが有効であることを確認だけでなくも返すこの際にトークンを検証する、<xref:System.Security.Claims.ClaimsIdentity>認証と承認の判断に使用できるトークンからのインスタンス</xref:System.Security.Claims.ClaimsIdentity>。 <xref:System.Security.Claims.ClaimsIdentity>のトークン ハンドラーの実装によって構築された、<xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A>トークンに内在する要求から発生もそれ自体を型として、トークンに含まれる要求からのメソッド</xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A></xref:System.Security.Claims.ClaimsIdentity>。       WIF が、次の種類のセキュリティ トークンのサポートが付属しています:- <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: SAML 2.0 アサーションに基づいているセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.Saml2SecurityToken>。 通常、このトークンの種類は、Ws-trust、Ws-federation またはセキュリティ トークン要求 (RST) への応答でセキュリティ トークン サービスによって発行されます。      - <xref:System.IdentityModel.Tokens.SamlSecurityToken>: SAML 1.1 アサーションに基づいているセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.SamlSecurityToken>。 通常、このトークンの種類は、Ws-trust、Ws-federation またはセキュリティ トークン要求 (RST) への応答でセキュリティ トークン サービスによって発行されます。      -<xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>と<xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: が受信または SOAP メッセージで送信された Kerberos チケットに基づくセキュリティ トークンを表す<xref:System.IdentityModel.Tokens.RsaSecurityToken>: RSA アルゴリズムを使用して作成されるキーに基づいているセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.RsaSecurityToken></xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken></xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken>。      - <xref:System.IdentityModel.Tokens.SessionSecurityToken>: セッションに関する情報が含まれるセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.SessionSecurityToken>。      - <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: ユーザー名とパスワードに基づくセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.UserNameSecurityToken>。      - <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Windows ドメインまたはユーザー アカウントの id に基づいているセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.WindowsSecurityToken>。      - <xref:System.IdentityModel.Tokens.X509SecurityToken>: X.509 証明書に基づくセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.X509SecurityToken>。      - <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Windows ドメイン ユーザーまたはローカル コンピューターのユーザー アカウントにマップされている X.509 証明書に基づいているセキュリティ トークンを表します</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>。       2 つのセキュリティ トークン クラス、<xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>と<xref:System.IdentityModel.Tokens.EncryptedSecurityToken>、一般的なケースを処理するために使用できます</xref:System.IdentityModel.Tokens.EncryptedSecurityToken></xref:System.IdentityModel.Tokens.GenericXmlSecurityToken>。       話し方のセキュリティ トークンは次の&3; つの主要なカテゴリに分類されます幅広く:-実行するか、暗号化を参照するトークンのキー マテリアル。 たとえば、<xref:System.IdentityModel.Tokens.RsaSecurityToken>と<xref:System.IdentityModel.Tokens.X509SecurityToken>型がこの目的に使用される多くの場合</xref:System.IdentityModel.Tokens.X509SecurityToken></xref:System.IdentityModel.Tokens.RsaSecurityToken>。      -既に認証済みユーザーの資格情報を表すトークンです。 たとえば、 <xref:System.IdentityModel.Tokens.UserNameSecurityToken>、 <xref:System.IdentityModel.Tokens.WindowsSecurityToken>、および証明書を使用して認証されたユーザーの場合は、<xref:System.IdentityModel.Tokens.X509SecurityToken>型です</xref:System.IdentityModel.Tokens.X509SecurityToken></xref:System.IdentityModel.Tokens.WindowsSecurityToken></xref:System.IdentityModel.Tokens.UserNameSecurityToken>。      -Ws-trust または Ws-federation プロトコルを使用して、セキュリティ トークン要求に応答するセキュリティ トークン サービス (STS) によって発行されるトークン。 これらは通常で返されます、 `wst:RequestSecurityTokenResponse` XML フラグメントです。 <xref:System.IdentityModel.Tokens.Saml2SecurityToken>と<xref:System.IdentityModel.Tokens.SamlSecurityToken>型は、これらのトークンを表す最もよく使用される</xref:System.IdentityModel.Tokens.SamlSecurityToken></xref:System.IdentityModel.Tokens.Saml2SecurityToken>。       特別なトークンの種類、 <xref:System.IdentityModel.Tokens.SessionSecurityToken>、セッションをアクティブまたはパッシブのシナリオで使用する場合は、プリンシパルを再作成に必要な情報が含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken>。       既存のトークンの種類に機能を追加するには、トークンに追加する新しい要素をサポートするには、特定の種類とその関連付けられたトークン ハンドラーから派生できます。 新しいトークンの種類のサポートを追加するには、SecurityToken クラスから直接派生できます。 これを行うときに、<xref:System.IdentityModel.Tokens.SecurityTokenHandler>クラス</xref:System.IdentityModel.Tokens.SecurityTokenHandler>から派生することによってトークン ハンドラー クラスを作成する必要 によってどのように、トークンを使用して、可能性がありますならない場合も<xref:System.IdentityModel.Tokens.IssuerTokenResolver>、<xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>クラス</xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause>から派生することで、1 つ以上のカスタムのキー識別子句型だけでなくクラス</xref:System.IdentityModel.Tokens.IssuerTokenResolver>から派生することによって、カスタムのトークン リゾルバーを作成するには"
  example:
  - "The code examples that are used in the SecurityToken topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the implementation of the `SimpleWebToken` class. This class extends SecurityToken.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#2](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#2)]"
  syntax:
    content: public abstract class SecurityToken
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityToken()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "初期化するために派生クラスのコンス トラクターによって呼び出される、 <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>クラスです。"
  syntax:
    content: protected SecurityToken ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public virtual bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  syntax:
    content: 'public virtual T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    return:
      type: T
      description: "追加します。"
  overload: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SecurityToken.Id
  fullName: System.IdentityModel.Tokens.SecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "セキュリティ トークンの一意の識別子を取得します。"
  remarks: "XML にセキュリティ トークンがシリアル化されるときに通常、`Id`属性に、セキュリティ トークンが Id プロパティの値に設定します。"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the Id property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#4](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#4)]"
  syntax:
    content: public abstract string Id { get; }
    return:
      type: System.String
      description: "セキュリティ トークンの一意の識別子。"
  overload: System.IdentityModel.Tokens.SecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このインスタンスのキー識別子が指定したキー識別子に解決できるかどうかを示す値を返します。"
  remarks: "既定の実装は、型のキー識別句をサポートしています。<xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause></xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>"
  syntax:
    content: public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>このインスタンスと比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> keyIdentifierClause </code>は、 <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>と同じ一意の識別子があると、<xref:System.IdentityModel.Tokens.SecurityToken.Id*>プロパティ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.IdentityModel.Tokens.SecurityToken.Id*> 。"
  overload: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定したキー識別句に対してキーを取得します。"
  remarks: "ResolveKeyIdentifierClause メソッドの呼び出し、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>を最初に、指定したキー識別句は、このインスタンスと同じかどうかを決定します</xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>。       既定の実装の最初の要素を返します、<xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>コレクション コレクションが空でない場合、<xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A>を返します`true`、それ以外を返します`null`</xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A></xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A>。"
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKeyIdentifierClause&quot;> </xref>キーを取得します。"
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: "A <xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;> </xref>キーを表すです。"
  overload: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "セキュリティ トークンに関連付けられた暗号化キーを取得します。"
  remarks: "使用して、<xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>トークンまたは SOAP メッセージを保護するには、このセキュリティ トークンの暗号化キーを設定するプロパティ</xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A>。 キーでくため、特に、デジタル署名または暗号化トークンまたは SOAP メッセージのいずれか。"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the SecurityKeys property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#5](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#5)]"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref href=&quot;System.IdentityModel.Tokens.SecurityKey&quot;></xref>セキュリティ トークンに関連付けられたキーのセットを格納しています。"
  overload: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このセキュリティ トークンの有効期間の開始時点を取得します。"
  remarks: "ValidFrom を使用して<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>プロパティを確認して、期間を<xref:System.IdentityModel.Tokens.SecurityToken>トークンが無効です</xref:System.IdentityModel.Tokens.SecurityToken></xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>。 ValidFrom および<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>プロパティは、セキュリティ トークンの有効期間、それぞれ最初と最後の時点を表します</xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>。"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the ValidFrom property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#6](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#6)]  \n[!code-cs[WifCustomTokenST#8](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>をこのセキュリティ トークンの有効期間の開始時点を表す</xref:System.DateTime>。"
  overload: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このセキュリティ トークンが有効な時刻の時点の終了を取得します。"
  remarks: "使用して、<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>および ValidTo プロパティを確認して、期間を<xref:System.IdentityModel.Tokens.SecurityToken>トークンが無効です</xref:System.IdentityModel.Tokens.SecurityToken></xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>。 <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>ValidTo プロパティに、セキュリティ トークンの有効期間、それぞれ最初と最後の時点を表すものです</xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>。"
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/add/includes/ajax-current-ext-md.md). The following code shows the override of the ValidTo property.  \n  \n [!code-cs[WifCustomTokenST#1](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-cs[WifCustomTokenST#3](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#3)]  \n[!code-cs[WifCustomTokenST#7](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#7)]  \n[!code-cs[WifCustomTokenST#8](~/add/codesnippet/csharp/wifcustomtokenst.simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>最後にこのセキュリティ トークンが有効な時刻の時点を表す</xref:System.DateTime>。"
  overload: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityToken()
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause()
  nameWithType: SecurityToken.CreateKeyIdentifierClause()
  fullName: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
  fullName: System.IdentityModel.Tokens.SecurityToken.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken.SecurityToken
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause<T>*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>
- uid: System.IdentityModel.Tokens.SecurityToken.Id*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityToken.MatchesKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause
  nameWithType: SecurityToken.ResolveKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
