### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaComplexType
  id: XmlSchemaComplexType
  children:
  - System.Xml.Schema.XmlSchemaComplexType.#ctor
  - System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  - System.Xml.Schema.XmlSchemaComplexType.Attributes
  - System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  - System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  - System.Xml.Schema.XmlSchemaComplexType.Block
  - System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  - System.Xml.Schema.XmlSchemaComplexType.ContentModel
  - System.Xml.Schema.XmlSchemaComplexType.ContentType
  - System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  - System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  - System.Xml.Schema.XmlSchemaComplexType.IsMixed
  - System.Xml.Schema.XmlSchemaComplexType.Particle
  langs:
  - csharp
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType
  fullName: System.Xml.Schema.XmlSchemaComplexType
  type: Class
  summary: "表す、 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref> World Wide Web Consortium (W3C) で指定された XML スキーマの要素。 このクラスは、一連の属性と要素の内容を決定する複合型を定義します。"
  remarks: "参照する型の属性を持つ要素を宣言することができます、`complexType`構造、コンテンツ、およびその要素の属性を定義する要素。"
  example:
  - "The following example creates a `complexType` element.  \n  \n [!code-cpp[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_27_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_27_1.vb)]\n [!code-cs[Classic WebData XmlSchemaComplexType Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_27_1.cs)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaComplexType Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_27_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaComplexType : System.Xml.Schema.XmlSchemaType'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaType
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaType.BaseSchemaType
  - System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType
  - System.Xml.Schema.XmlSchemaType.Datatype
  - System.Xml.Schema.XmlSchemaType.DerivedBy
  - System.Xml.Schema.XmlSchemaType.Final
  - System.Xml.Schema.XmlSchemaType.FinalResolved
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)
  - System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)
  - System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)
  - System.Xml.Schema.XmlSchemaType.Name
  - System.Xml.Schema.XmlSchemaType.QualifiedName
  - System.Xml.Schema.XmlSchemaType.TypeCode
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Schema.XmlSchemaComplexType&quot;> </xref>クラスです。"
  syntax:
    content: public XmlSchemaComplexType ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  id: AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "値を取得または設定、 <xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;> </xref>複合型のコンポーネントです。"
  remarks: "このプロパティが null でない場合、複合型は<xref:System.Xml.Schema.XmlSchemaAnyAttribute>。</xref:System.Xml.Schema.XmlSchemaAnyAttribute>で指定された名前空間からの属性を含めることができます。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AnyAttribute { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaAnyAttribute&quot;> </xref>複合型のコンポーネントです。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  id: Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "複合型の属性のコレクションを取得します。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Attributes { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "含む<xref href=&quot;System.Xml.Schema.XmlSchemaAttribute&quot;></xref>と<xref href=&quot;System.Xml.Schema.XmlSchemaAttributeGroupRef&quot;></xref>クラスです。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  id: AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "この複合型およびその基本型のコンパイル済みのすべての属性のコレクションを取得します。"
  remarks: "たとえばからのすべての属性の組み合わせ、`Attributes`プロパティを各階層内の型からです。       このプロパティの値は、読み取り専用です。 このプロパティは、インスタンス ドキュメントで許可されている属性の完全なセットを決定するスキーマが正常にコンパイルされた後に値を持ちます。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectTable AttributeUses { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectTable
      description: "この複合型およびその基本型からのすべての属性のコレクションです。 コンパイル後の値、 <xref uid=&quot;langword_csharp_AttributeUses&quot; name=&quot;AttributeUses&quot; href=&quot;&quot;> </xref>プロパティです。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  id: AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "コンパイル後の値を取得<xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;></xref>この複合型およびその基本型です。"
  remarks: "このプロパティの値は、読み取り専用です。 このプロパティは、複合型の完全な属性セットを決定するスキーマが正常にコンパイルされた後に値を持ちます。 たとえばである可能性があります、`anyAttribute`基本型のいずれかの要素。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaAnyAttribute AttributeWildcard { get; }
    return:
      type: System.Xml.Schema.XmlSchemaAnyAttribute
      description: "コンパイル後の値、 <xref uid=&quot;langword_csharp_anyAttribute&quot; name=&quot;anyAttribute&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;> </xref>属性。"
  remarks: "派生型を示します。       この属性は、次の値を含めることができます |。Enum |説明 |  |----------|-----------------|  |`None`|によって定義される派生制限を使用して、`BlockDefault`存在する場合は、スキーマのプロパティです |。  |`Extension`|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |`Restriction`|この要素は、制限による派生型によって置き換えられることはできません |。  |`All`|`#all`. この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。      `Substitution`、 `List`、および`Union`派生メソッドは、このプロパティによってサポートされていません。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_block&quot; name=&quot;block&quot; href=&quot;&quot;> </xref>属性は、複合型が指定した派生型で使用されているがようにします。 既定値は<xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;></xref>です。       任意。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "型がスキーマ検証後情報セット (infoset) にコンパイルされた後は、値を取得します。 この値は、型の適用方法を示すとき<xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;></xref>インスタンス ドキュメントで使用します。"
  remarks: "この値が取得されるか、型自体から、または型レベルで定義されていない場合から取得、`schema`要素。 たとえば、値が制限されている場合、具体的に定義された型のみを使用できます、具体的には定義済みの型から派生した型ではありません。       この属性は、次の値を含めることができます |。Enum |説明 |  |----------|-----------------|  |`None`|によって定義される派生制限を使用して、`BlockDefault`存在する場合は、スキーマのプロパティです |。  |`Extension`|この要素は、拡張によって派生した型によって置き換えられることはできません |。  |`Restriction`|この要素は、制限による派生型によって置き換えられることはできません |。  |`All`|`#all`. この要素は、派生方法に関係なく任意の型によって置き換えられることはできません |。      `Substitution`、 `List`、および`Union`派生メソッドは、このプロパティによってサポートされていません。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "ポスト スキーマで検証した infoset 値。 既定値は<xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;></xref>値を<xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;></xref>要素。"
  overload: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  id: ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "コンパイル後の設定を取得または<xref href=&quot;System.Xml.Schema.XmlSchemaContentModel&quot;></xref>この複合型のです。"
  remarks: "これで相互に排他的、<xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>プロパティ</xref:System.Xml.Schema.XmlSchemaComplexType.Particle%2A>。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentModel ContentModel { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaContentModel
      description: "コンテンツ モデルの型の&1; つである、 <xref href=&quot;System.Xml.Schema.XmlSchemaSimpleContent&quot;> </xref>または<xref href=&quot;System.Xml.Schema.XmlSchemaComplexContent&quot;></xref>クラスです。"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  id: ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "コンパイル後の値を保持する複合型のコンテンツ モデルを取得します。"
  remarks: "これは、スキーマ検証後の情報セット内のコンテンツです。       場合、`IsMixed`プロパティに設定されている`true`上、`ContentModel`型を持つプロパティ`XmlSchemaComplexContent`、戻り値は`Mixed`します。       場合、`IsMixed`プロパティは`false`、いずれかの値が`Empty`または`ElementOnly`です。       場合に、型、`ContentModel`プロパティ型が含まれます`XmlSchemaSimpleContent`、この値は常にし、`TextOnly`です。       `ContentType`プロパティには、次の表に示すように値のいずれかが必要です。      |Enum |説明 |  |----------|-----------------|  |`TextOnly`|テキストだけの内容 |。  |`Empty`|コンテンツを空にします |。  |`ElementOnly`|要素のコンテンツのみです |。  |`Mixed`|混合コンテンツ モデルです |。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaContentType ContentType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaContentType
      description: "複合型のコンテンツ モデルのコンパイル後の値。"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  id: ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "コンパイル後の値を保持する型のパーティクルを取得、<xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>パーティクル</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>。"
  remarks: "これは、`ContentTypeParticle`最派生型および基本複合型のコンテンツ モデルが W3C XML スキーマ定義言語 (XSD) の仕様で定義されたルールに従って解決された後に決定されます。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle ContentTypeParticle { get; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "コンテンツ タイプのパーティクル。 コンパイル後の値、<xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>パーティクル</xref:System.Xml.Schema.XmlSchemaComplexType.ContentType*>。"
  overload: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "場合を決定する情報取得または設定、 <xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;> </xref>要素は、インスタンス ドキュメントで使用できます。"
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、要素は、これを使用できません<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;></xref>要素の直後から派生する複合型を使用する必要があります<xref uid=&quot;langword_csharp_complexType&quot; name=&quot;complexType&quot; href=&quot;&quot;></xref>要素。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       任意。"
  overload: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  id: IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "取得または複合型が混合コンテンツ モデル (コンテンツ内のマークアップ) を持つかどうかを決定する情報を設定します。"
  remarks: "これの子要素の間で文字データを表示できるかどうかを示します`complexType`です。 場合、`simpleContent`要素は、子要素、`mixed`属性は許可されていません (`false`)。 場合、`complexContent`要素は、子要素、`mixed`で属性をオーバーライドすることができます、`mixed`属性を`complexContent`要素。"
  syntax:
    content: public override bool IsMixed { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、この複合型の子要素の間で文字データが表示される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。       任意。"
  overload: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  id: Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  langs:
  - csharp
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "として取得または設定のコンポジターの種類のいずれか、 <xref href=&quot;System.Xml.Schema.XmlSchemaGroupRef&quot;> </xref>、 <xref href=&quot;System.Xml.Schema.XmlSchemaChoice&quot;> </xref>、 <xref href=&quot;System.Xml.Schema.XmlSchemaAll&quot;> </xref>、または<xref href=&quot;System.Xml.Schema.XmlSchemaSequence&quot;></xref>クラスです。"
  remarks: "パーティクルは、次のコンポジターのいずれかを指定する必要があります: |要素 |説明 |  |-------------|-----------------|  |`group`|複合型には、参照先のグループで定義された要素が含まれています |。  |`sequence`|複合型には、指定したシーケンスで定義された要素が含まれています |。  |`choice`|複合型で指定された要素のいずれかで使用できる、`choice`要素です |。  |`all`|複合型ではすべてで指定された要素の`all`要素を&1; 回またはまったくないを表示します |。      これで相互に排他的、<xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>プロパティ</xref:System.Xml.Schema.XmlSchemaComplexType.ContentModel%2A>。"
  syntax:
    content: public System.Xml.Schema.XmlSchemaParticle Particle { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaParticle
      description: "コンポジター型。"
  overload: System.Xml.Schema.XmlSchemaComplexType.Particle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaType
  isExternal: false
  name: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType()
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType()
  fullName: System.Xml.Schema.XmlSchemaComplexType.XmlSchemaComplexType()
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
  fullName: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaAnyAttribute
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaAnyAttribute
  nameWithType: XmlSchemaAnyAttribute
  fullName: System.Xml.Schema.XmlSchemaAnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
  fullName: System.Xml.Schema.XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaObjectTable
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectTable
  nameWithType: XmlSchemaObjectTable
  fullName: System.Xml.Schema.XmlSchemaObjectTable
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
  fullName: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
  fullName: System.Xml.Schema.XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaContentModel
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentModel
  nameWithType: XmlSchemaContentModel
  fullName: System.Xml.Schema.XmlSchemaContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaContentType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaContentType
  nameWithType: XmlSchemaContentType
  fullName: System.Xml.Schema.XmlSchemaContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
  fullName: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaParticle
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaParticle
  nameWithType: XmlSchemaParticle
  fullName: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
  fullName: System.Xml.Schema.XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
  fullName: System.Xml.Schema.XmlSchemaComplexType.Particle
- uid: System.Xml.Schema.XmlSchemaComplexType.#ctor*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: XmlSchemaComplexType
  nameWithType: XmlSchemaComplexType.XmlSchemaComplexType
- uid: System.Xml.Schema.XmlSchemaComplexType.AnyAttribute*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AnyAttribute
  nameWithType: XmlSchemaComplexType.AnyAttribute
- uid: System.Xml.Schema.XmlSchemaComplexType.Attributes*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Attributes
  nameWithType: XmlSchemaComplexType.Attributes
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeUses*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeUses
  nameWithType: XmlSchemaComplexType.AttributeUses
- uid: System.Xml.Schema.XmlSchemaComplexType.AttributeWildcard*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: AttributeWildcard
  nameWithType: XmlSchemaComplexType.AttributeWildcard
- uid: System.Xml.Schema.XmlSchemaComplexType.Block*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Block
  nameWithType: XmlSchemaComplexType.Block
- uid: System.Xml.Schema.XmlSchemaComplexType.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaComplexType.BlockResolved
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentModel*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentModel
  nameWithType: XmlSchemaComplexType.ContentModel
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentType*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentType
  nameWithType: XmlSchemaComplexType.ContentType
- uid: System.Xml.Schema.XmlSchemaComplexType.ContentTypeParticle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: ContentTypeParticle
  nameWithType: XmlSchemaComplexType.ContentTypeParticle
- uid: System.Xml.Schema.XmlSchemaComplexType.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaComplexType.IsAbstract
- uid: System.Xml.Schema.XmlSchemaComplexType.IsMixed*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: IsMixed
  nameWithType: XmlSchemaComplexType.IsMixed
- uid: System.Xml.Schema.XmlSchemaComplexType.Particle*
  parent: System.Xml.Schema.XmlSchemaComplexType
  isExternal: false
  name: Particle
  nameWithType: XmlSchemaComplexType.Particle
