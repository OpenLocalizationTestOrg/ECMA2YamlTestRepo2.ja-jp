### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Window フォーム アプリケーションでアプリケーション設定機能を実装する具体的なラッパー クラスを派生させるための基底クラスとして機能します。"
  remarks: "ApplicationSettingsBase 機能が追加され、次に、 <xref:System.Configuration.SettingsBase>Web ベースのアプリケーションによって使用されるクラス-派生、設定のラッパー クラスの属性を検出する機能</xref:System.Configuration.SettingsBase>。 ApplicationSettingsBase は、後述するように、ラッパー クラスのプロパティに使用する宣言型モデルをサポートします。      -上位<xref:System.Configuration.ApplicationSettingsBase.Save%2A>と<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>メソッド</xref:System.Configuration.ApplicationSettingsBase.Reload%2A></xref:System.Configuration.ApplicationSettingsBase.Save%2A>。      、個々 の設定が正しいことを確実に処理できる追加の検証イベント。       アプリケーション設定アーキテクチャでは、設定のプロパティのグループにアクセスする必要があります ApplicationSettingsBase から具体的なラッパー クラスを派生します。 ラッパー クラスは、次の方法で ApplicationSettingsBase をカスタマイズ: 対応する厳密に型指定パブリック、アクセスするには、すべての設定プロパティのプロパティはラッパー クラスに追加します。 このプロパティには`get`と`set`アクセサーのみが、読み取り/書き込みのアプリケーション設定を`get`アクセサー読み取り専用の設定をします。      適切な属性は、ローミング設定プロバイダーを使用してなどが、設定の既定値の設定をサポートするかどうかなど、設定のスコープ (アプリケーションまたはユーザー) を設定するプロパティの特性を示す、ラッパー クラスのパブリック プロパティに適用する必要があります。 各プロパティがいずれか<xref:System.Configuration.ApplicationScopedSettingAttribute>または<xref:System.Configuration.UserScopedSettingAttribute>。</xref:System.Configuration.UserScopedSettingAttribute></xref:System.Configuration.ApplicationScopedSettingAttribute>を使用して、そのスコープを指定する必要が アプリケーション スコープの設定は読み取り専用場合、既定<xref:System.Configuration.LocalFileSettingsProvider>を使用します</xref:System.Configuration.LocalFileSettingsProvider>。       ApplicationSettingsBase クラスでは、リフレクションを使用して、実行時にこれらの属性を検出します。 この情報の大部分は、記憶域や保存形式、担当する設定プロバイダー レイヤーに渡されます。       アプリケーションが複数の設定のラッパー クラス、各クラスの場合を定義、*設定グループ*です。 各グループには、次の特徴:-グループは、任意の数または種類のプロパティの設定を含めることができます。      -グループ名が修飾がラッパー クラスを明示的に設定されていない場合、 <xref:System.Configuration.SettingsGroupNameAttribute>、名前が自動的に生成されます</xref:System.Configuration.SettingsGroupNameAttribute>。       既定では、すべてのクライアント ベースのアプリケーションを使用して、<xref:System.Configuration.LocalFileSettingsProvider>ストレージを提供します</xref:System.Configuration.LocalFileSettingsProvider>。 代替設定プロバイダーが必要な場合、ラッパー クラスまたはプロパティ必要がありますで装飾する対応する<xref:System.Configuration.SettingsProviderAttribute>。</xref:System.Configuration.SettingsProviderAttribute>       詳細については、アプリケーションの設定を使用して、次を参照してください。 [Windows フォーム用のアプリケーション設定](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "インスタンスを初期化、 <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref>クラスを既定の状態にします。"
  remarks: "既定のコンス トラクターは、設定の現在と<xref:System.Configuration.ApplicationSettingsBase>。</xref:System.Configuration.ApplicationSettingsBase>からの派生元の代わりに、ラッパー クラスに関連付けられているコンポーネントがないことを想定の下で動作するように設計されました       ラッパー クラスのインスタンスが作成されると、継承されたコードが自動的に、次の操作を実行します。 1。  クラスに反映されます。      2.  ラッパーの各プロパティのいずれかでマークされている`[UserScopedSettingAttribute]`または`[ApplicationScopedSettingAttribute]`、対応する<xref:System.Configuration.SettingsProperty>を作成します</xref:System.Configuration.SettingsProperty>。      3.  各<xref:System.Configuration.SettingsProperty>がいくつかのオプションで、既定値の設定プロバイダーなどのラッパーのプロパティに組み込まれているその他の属性に基づいて、プロパティを設定します</xref:System.Configuration.SettingsProperty>。      4.  その他のすべての属性は、属性のバッグ<xref:System.Configuration.SettingsProperty.Attributes%2A><xref:System.Configuration.SettingsProperty>クラス</xref:System.Configuration.SettingsProperty>のプロパティ</xref:System.Configuration.SettingsProperty.Attributes%2A>に簡単に言えば      5.  すべての<xref:System.Configuration.SettingsProperty><xref:System.Configuration.SettingsPropertyCollection><xref:System.Configuration.ApplicationSettingsBase.Properties%2A><xref:System.Configuration.ApplicationSettingsBase>クラス</xref:System.Configuration.ApplicationSettingsBase>のプロパティ</xref:System.Configuration.ApplicationSettingsBase.Properties%2A>で表される</xref:System.Configuration.SettingsPropertyCollection>オブジェクトが追加されます。</xref:System.Configuration.SettingsProperty> このコレクションに渡され、<xref:System.Configuration.SettingsBase.Initialize%2A>メソッド</xref:System.Configuration.SettingsBase.Initialize%2A>。       手順 3、前述と暗黙的な<xref:System.Configuration.ApplicationSettingsBase>いくつかのプロパティの属性、具体的には、次の: <xref:System.Configuration.SettingsProviderAttribute>、 <xref:System.Configuration.DefaultSettingValueAttribute>、 <xref:System.Configuration.SettingsSerializeAsAttribute></xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> 。 その他のすべての設定の属性は、適切な基になるプロバイダーに単に渡されます。"
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "インスタンスを初期化、 <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref>クラスの指定された所有者コンポーネントを使用します。"
  remarks: "このコンス トラクターは完全に同等の<xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>呼び出しを使用してコンス トラクター:`ApplicationSettingsBase(owner, String.Empty)`ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29> 。"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "アプリケーション設定オブジェクトの所有者として動作するコンポーネント。"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "インスタンスを初期化、 <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref>クラスの指定した設定キーを使用します。"
  remarks: "このコンス トラクター、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティの値を`settingsKey`パラメーター</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 。 このプロパティは、同じアプリケーション ドメイン内の設定のラッパー クラスの異なるインスタンスを明確化に役立ちます。       ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</xref:System.Configuration.ApplicationSettingsBase.%23ctor> 。"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: "<xref:System.String>ラッパー クラスの個別のインスタンスを一意に識別します。</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "インスタンスを初期化、 <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref>クラス、指定された所有者コンポーネントと設定キーを使用します。"
  remarks: "<xref:System.ComponentModel.IComponent>で指定されたオブジェクト、`owner`パラメーターがこのアプリケーション設定クラスの現在のインスタンスの所有者として動作</xref:System.ComponentModel.IComponent> 設定のラッパー クラスの初期化中に<xref:System.Configuration.ApplicationSettingsBase>、所有者のサイトが<xref:System.Configuration.ISettingsProviderService>。</xref:System.Configuration.ISettingsProviderService>の照会</xref:System.Configuration.ApplicationSettingsBase>から派生します。 1 つが存在する場合に<xref:System.Configuration.SettingsProviderAttribute>。</xref:System.Configuration.SettingsProviderAttribute>で指定したとおり、ラッパー クラスのすべてのプロパティのネイティブの設定プロバイダー方が優先的使用は、       このコンス トラクター、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティの値を`settingsKey`パラメーター</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> 。 このプロパティは、同じアプリケーション ドメイン内のラッパー クラスの異なるインスタンスを明確化に役立ちます。       ラッパー クラスのインスタンス化時にリフレクションを使用する方法については、既定値を参照してください<xref:System.Configuration.ApplicationSettingsBase.%23ctor>コンス トラクター。</xref:System.Configuration.ApplicationSettingsBase.%23ctor> 。"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "アプリケーション設定オブジェクトの所有者として動作するコンポーネント。"
    - id: settingsKey
      type: System.String
      description: "<xref:System.String>ラッパー クラスの個別のインスタンスを一意に識別します。</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "設定グループに関連付けられているアプリケーション設定のコンテキストを取得します。"
  remarks: "<xref:System.Configuration.ApplicationSettingsBase>それに関連付けられているコンテキスト</xref:System.Configuration.ApplicationSettingsBase>から派生した各設定のラッパー クラス コンテキストは、プロパティの使用方法を識別する各プロパティの設定プロバイダーに渡されます。 そのため、コンテキストは設定プロバイダーが最善の方法を決定すると、関連付けられているアプリケーションの設定値を保持するためのヒントとして機能します。       これに対して、<xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>プロパティを使用して、同じのラッパー クラスの複数のインスタンスを区別するために設定プロバイダー</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "A <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref>設定グループに関連付けられています。"
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "同じアプリケーションの以前のバージョンの名前付きの設定のプロパティの値を返します。"
  remarks: "組み合わせて GetPreviousVersion メソッドが使用される多くの場合、<xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>メソッドは、アプリケーションの新しいバージョンのインストール中にアプリケーションの設定を移行するとします</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>。"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>値が返される設定のプロパティの名前を含むします</xref:System.String>。"
    return:
      type: System.Object
      description: "<xref:System.Object>の指定された値を含む<xref href=&quot;System.Configuration.SettingsProperty&quot;></xref>見つかった場合は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Object> 。"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "プロパティが存在しません。 プロパティのカウントがゼロまたはプロパティがデータ ストアに見つかりません。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得または指定されたアプリケーション設定のプロパティの値を設定します。"
  remarks: "項目のプロパティ、インデクサーとも呼ばれますが日常的に<xref:System.Configuration.ApplicationSettingsBase>。</xref:System.Configuration.ApplicationSettingsBase>から派生する設定のラッパー クラスの使用します。 項目は、対応するプロパティの設定のラッパー クラスのパブリック プロパティをバインドします。       項目が実行される操作に応じていくつかのイベントを発生させます: -、プロパティを取得すると、最初に、<xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>イベントが発生します</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>。      にプロパティの設定すると、<xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>イベントが発生します</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>。 ハンドラーが、イベントをキャンセルしていないかどうかは、プロパティ値が設定され、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベントが発生します</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>。"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "A<xref:System.String>にアクセスするプロパティの名前を含むします</xref:System.String>。"
    return:
      type: System.Object
      description: "場合、名前付き設定プロパティの値が見つかりましたそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "現在のラッパーに関連付けられたプロパティがないか、指定したプロパティが見つかりませんでした。"
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "読み取り専用プロパティを設定しようとしています。"
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "指定された値は、設定プロパティと互換性のない型のセットの操作中にです。"
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "構成ファイルを解析できませんでした。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "発生させる、 <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnPropertyChanged メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "A<xref:System.ComponentModel.PropertyChangedEventArgs>イベント データを格納します</xref:System.ComponentModel.PropertyChangedEventArgs>。"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "発生させる、 <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnSettingChanging メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "発生させる、 <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnSettingsLoaded メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "A <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "発生させる、 <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref>イベント。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントを発生させる](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)です。       OnSettingsSaving メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "A<xref:System.ComponentModel.CancelEventArgs>イベント データを格納します</xref:System.ComponentModel.CancelEventArgs>。"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "ラッパーの設定のプロパティのコレクションを取得します。"
  remarks: "`get`から派生する設定のラッパー クラスのメタデータ プロパティのプロパティのアクセサーを十分に調べて<xref:System.Configuration.ApplicationSettingsBase>、使用可能なアプリケーション設定のプロパティのセットを動的に決定します</xref:System.Configuration.ApplicationSettingsBase>。       <xref:System.Configuration.ApplicationSettingsBase>のみの状態、およびシリアル化の基本設定を読み取るクラスがネイティブ アプリケーションの設定、名前、プロパティの型、プロバイダーの設定、既定値などの特定の特性を認識します</xref:System.Configuration.ApplicationSettingsBase>。 <xref:System.Configuration.SettingsProperty>クラス</xref:System.Configuration.SettingsProperty>のプロパティとしてこれらの特性がミラー化されました。 設定プロパティの他のすべての属性は、関連付けられている設定プロバイダーに渡されるを通じてだけです。"
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref>すべてを含む、 <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref>現在のラッパーで使用されるオブジェクト。"
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "関連付けられた設定プロバイダーが見つかりませんでしたか、そのインスタンス化が失敗しました。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "アプリケーション設定プロパティの値が変更された後に発生します。"
  remarks: "PropertyChanged イベントを発生すると、を通じて設定プロパティが変更されたときに、`set`のアクセサー、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド、またはへの呼び出しが行われたときに復元されるすべてのプロパティに対して、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>または<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッド</xref:System.Configuration.ApplicationSettingsBase.Reset%2A></xref:System.Configuration.ApplicationSettingsBase.Reload%2A></xref:System.Configuration.ApplicationSettingsBase.Item%2A>。       対応がない`PropertyChanging`このイベント クラスは、代わりに、参照してください、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>イベント</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>。"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "プロパティ値のコレクションを取得します。"
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "A <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref>プロパティ値。"
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "ラッパーが使用するアプリケーションの設定プロバイダーのコレクションを取得します。"
  remarks: "<xref:System.Configuration.SettingsProviderAttribute>設定のラッパー クラスまたは個々 の設定プロパティによって使用されるどのような設定プロバイダーを決定します</xref:System.Configuration.SettingsProviderAttribute>。 クライアント アプリケーションで<xref:System.Configuration.LocalFileSettingsProvider>。</xref:System.Configuration.LocalFileSettingsProvider>を使用してこの属性が指定されていない場合"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "A <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref>すべてを含む、 <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref>現在の設定のラッパーの設定のプロパティで使用されるオブジェクト。"
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "永続ストレージからのアプリケーション設定のプロパティ値を更新します。"
  remarks: "Reload メソッドでは、現在キャッシュされているプロパティの値は、後でアクセスされるときに永続ストレージからこれらの値の再読み込みの原因を消去します。 このメソッドは、次の操作を実行します-によって表されるコレクションをオフにして、現在キャッシュされているプロパティをクリア、<xref:System.Configuration.SettingsBase.PropertyValues%2A>プロパティ。</xref:System.Configuration.SettingsBase.PropertyValues%2A> 。      -を生成、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベントのすべてのメンバーを<xref:System.Configuration.ApplicationSettingsBase.Properties%2A>コレクションです</xref:System.Configuration.ApplicationSettingsBase.Properties%2A></xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>。       方法と対照な再読み込み<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>で前者を読み込むこと、保存されているアプリケーションの設定値の最後のセット、後者は、保存されている既定値を読み込む一方</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>。"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "対応する既定のプロパティを永続化されたアプリケーション設定の値を復元します。"
  remarks: "Reset メソッドは、各アプリケーションの設定の現在の永続化された値を復元することで、ユーザー スコープ設定のプロパティを上書きします。 このメソッドは、次の操作を実行します:-呼び出し、<xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>この省略可能なメソッドをサポートするすべての設定プロバイダーのメソッド</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>。      呼び出し、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>設定プロパティの値の更新を強制する方法</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>。       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>対照的リセット前者は保存されているアプリケーション設定の値の最後のセットを読み込むことで、後者は、保存されている既定値を読み込み、します。</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "構成ファイルを解析できませんでした。"
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "アプリケーション設定のプロパティの現在の値を格納します。"
  remarks: "Save メソッドは、その関連付けられたデータ ストアの設定の各プロパティの現在の値を書き込みます。 このメソッドを呼び出し、各プロパティ、<xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>メソッドに関連付けられている設定プロバイダー</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A> 。       このメソッドを発生させることで、基本クラスの実装とは異なります、<xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>値が書き込まれる前に、イベント。</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving> 。       保存の設定がある影響しないと、既定<xref:System.Configuration.LocalFileSettingsProvider>。</xref:System.Configuration.LocalFileSettingsProvider>で呼び出された場合は、エラー返されない場合は定義されている唯一の設定は、アプリケーション スコープ <xref:System.Configuration.LocalFileSettingsProvider>ユーザー スコープ設定を保存のみです。</xref:System.Configuration.LocalFileSettingsProvider>      > [!IMPORTANT] > アプリケーション設定の値はラッパー クラスの初期化中に自動的に読み込まれるために、対応するロード メソッドはありません。 これに対し、これらの値は自動的に保存されません、アプリケーションが終了するとします。 そのため、アプリケーションの設定の現在の値を保持する Save メソッドを明示的に呼び出す必要があります。 これは、<xref:System.Windows.Forms.Form.Closing>プライマリのイベント ハンドラーまたは<xref:System.Windows.Forms.Form></xref:System.Windows.Forms.Form>を含む</xref:System.Windows.Forms.Form.Closing>通常実行します。"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "アプリケーション設定プロパティの値を変更するまでに発生します。"
  remarks: "SettingChanging イベントによってアプリケーションの設定値プロパティが変更される前に発生、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド</xref:System.Configuration.ApplicationSettingsBase.Item%2A>。 このイベントは、いつ発生するか、<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>または<xref:System.Configuration.ApplicationSettingsBase.Reset%2A>メソッドが呼び出されます</xref:System.Configuration.ApplicationSettingsBase.Reset%2A></xref:System.Configuration.ApplicationSettingsBase.Reload%2A>。 SettingChanging は、<xref:System.Configuration.SettingChangingEventArgs>イベント データ クラス</xref:System.Configuration.SettingChangingEventArgs>をキャンセルできます。       通常、SettingChanging イベントを使用するには、個々 の設定のプロパティの即時検証を処理します。 検証の詳細については、次を参照してください。[する方法: アプリケーション設定の検証](~/add/includes/ajax-current-ext-md.md)です。       対応がない`SettingChanged`このイベント クラスは、代わりに、参照してください、<xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>イベント</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>。"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "取得またはアプリケーションの設定グループの設定キーを設定します。"
  remarks: "SettingsKey プロパティは、により、クライアント コードを提供し、特に設定プロバイダー、同じアプリケーション設定クラスの複数のインスタンス間を明確にします。       設定のラッパー クラスは、シングルトン パターンを使用するよう設計されていますが、しない限り、1 つのアプリケーションで同じアプリケーション設定クラスの複数のインスタンスがあります。 SettingsKey の値は、共有するプロパティの値は、方法に従って設定する必要があります。      ラッパーの設定のプロパティは、同じアプリケーション内のラッパーのすべてのインスタンスで共有するものでは、し SettingsKey に含めるかどうが同じ値のすべてのインスタンス。 これは、<xref:System.Configuration.ApplicationSettingsBase>クラス</xref:System.Configuration.ApplicationSettingsBase>の既定の動作      場合、ラッパーの設定のプロパティは、インスタンスあたりするものでは、SettingsKey は、すべてのインスタンスの一意の値が必要です。 <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>コンス トラクターのバージョンでは、一意の文字列に SettingsKey を初期化することができます</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>。       これに対し、<xref:System.Configuration.ApplicationSettingsBase.Context%2A>プロパティは、効率的かつ適切な順序に値を永続化をできるように設定プロバイダーにヒントを提供します</xref:System.Configuration.ApplicationSettingsBase.Context%2A>。       <xref:System.Configuration.SettingChangingEventArgs>クラスが含まれていますが、類似<xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>プロパティのソースを識別しやすく、<xref:System.Configuration.ApplicationSettingsBase.SettingChanging>イベント</xref:System.Configuration.ApplicationSettingsBase.SettingChanging></xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A></xref:System.Configuration.SettingChangingEventArgs>。"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>設定グループは、現在の設定キーを含むします</xref:System.String>。"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "アプリケーションの設定が記憶域から取得された後に発生します。"
  remarks: "SettingsLoaded イベントは、最初の後にのみ発生`get`を通して通常使用される最初の構成プロパティのアクセス、<xref:System.Configuration.ApplicationSettingsBase.Item%2A>メソッド</xref:System.Configuration.ApplicationSettingsBase.Item%2A>。 以降のアクセスは、ローカルにキャッシュされている設定プロパティの値を使用します。 <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>と<xref:System.Configuration.ApplicationSettingsBase.Reload%2A>後続プロパティへのアクセス時にこのイベントが再び発生させるためにメソッドがキャッシュされているすべての値がクリアされます</xref:System.Configuration.ApplicationSettingsBase.Reload%2A></xref:System.Configuration.ApplicationSettingsBase.Reset%2A>。"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "値がデータ ストアに保存される前に発生します。"
  remarks: "SettingsSaving イベントによって、<xref:System.Configuration.ApplicationSettingsBase.Save%2A>メソッドが関連付けられているデータ ストアにアプリケーション設定のプロパティを格納する前にします</xref:System.Configuration.ApplicationSettingsBase.Save%2A>。 関連するイベント ハンドラーは、このイベントを取り消すことができます。"
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "アプリケーションの最新のインストールを反映するようにアプリケーション設定を更新します。"
  remarks: "アップグレードの方法は、アプリケーションの新しいバージョンにスムーズに移行を確保するための&2; つのアクションを実行します:-すべての対応する設定プロバイダーを呼び出すことによってアップグレードしたアプリケーションの存在の通知、<xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>メソッドを実装するいると仮定した場合、<xref:System.Configuration.IApplicationSettingsProvider>インターフェイス</xref:System.Configuration.IApplicationSettingsProvider></xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>。 設定のラッパー クラスが<xref:System.Configuration.NoSettingsVersionUpgradeAttribute>。</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>とマークされている場合、このアクションは実行されません。      -すべてのアプリケーションの設定の値を再読み込みします。       カスタム アップグレードまたは動作のマージを実装するアップグレードの既定の動作をオーバーライドすることができます。 使用して、 <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>、以前のバージョンのアプリケーション設定の個々 の値を取得します</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>。 カスタムのアップグレード動作の例:-1 つ以上の以前のユーザーが指定した値をオーバーライドする新規のポリシーの既定値または以前の既定値を使用します。      新しい範囲、さまざまな設定のプロパティ グループ、およびなどに合うように古い値の特殊な変換をします。"
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "構成ファイルを解析できませんでした。"
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
