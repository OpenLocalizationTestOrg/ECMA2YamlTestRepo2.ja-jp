### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildManager
  id: BuildManager
  children:
  - System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  - System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  - System.Web.Compilation.BuildManager.BatchCompilationEnabled
  - System.Web.Compilation.BuildManager.CodeAssemblies
  - System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  - System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.BuildManager.GetGlobalAsaxType
  - System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetReferencedAssemblies
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  - System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  - System.Web.Compilation.BuildManager.IsPrecompiledApp
  - System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  - System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  - System.Web.Compilation.BuildManager.TargetFramework
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildManager
  fullName: System.Web.Compilation.BuildManager
  type: Class
  summary: "ASP.NET アプリケーションのコンパイルを管理するためにメソッドのセットを提供します。"
  remarks: "BuildManager クラスは、アセンブリおよびアプリケーションのページをコンパイルした場合のプロセスを管理します。 シール クラスし、継承できません。       BuildManager には、コンパイルされたアセンブリに関する情報を提供する静的メンバーが含まれています。"
  syntax:
    content: public sealed class BuildManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  id: AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "クリーン ビルドが必要なかどうかを決定するために、ビルド マネージャーを使用する依存関係を表す文字列を指定します。"
  remarks: "中に、メソッドを呼び出す必要があります、`Application_PreStartInit`アプリケーションのステージ。"
  syntax:
    content: public static void AddCompilationDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "依存関係を表す文字列。"
  overload: System.Web.Compilation.BuildManager.AddCompilationDependency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependency </code>パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後にメソッドが呼び出された、 <xref uid=&quot;langword_csharp_Application_PreStartInit&quot; name=&quot;Application_PreStartInit&quot; href=&quot;&quot;> </xref>アプリケーションのステージ。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  id: AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "参照されるアセンブリのアプリケーションのセットをアセンブリを追加します。"
  remarks: "このメソッドを呼び出すことは、アプリケーション レベルの Web.config ファイルにアセンブリを追加すると同じです。 中に、メソッドを呼び出す必要があります、`Application_PreStartInit`アプリケーションのステージ。       <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>メソッドには、構成ファイルから決定されるアセンブリと、このメソッドを使用して追加されたすべてのアセンブリのセットが返されます</xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>。       既に追加されているアセンブリを追加しようとすると、重複するエントリが無視されます。       このメソッドは、前に呼び出す必要があります、 `Application_Start` Global.asax ファイル内のイベントが発生します。"
  syntax:
    content: public static void AddReferencedAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "追加するアセンブリ。"
  overload: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> assembly </code>パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "前に、メソッドが呼び出されなかった、 <xref uid=&quot;langword_csharp_Application_Start&quot; name=&quot;Application_Start&quot; href=&quot;&quot;> </xref> Global.asax ファイル内のイベントが発生しました。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  id: BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "取得またはバッチのコンパイルが有効になっているかどうかを示す値を設定します。"
  remarks: "このプロパティでは、バッチ コンパイルを有効または無効にできます。 プログラムでします。 対応して、`batch`の属性、 `compilation` Web.config ファイル内の要素。 詳細については、次を参照してください。 [compilation 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/7c319582-074a-4d2a-a787-03b9d4541c12)です。       のみ、プロパティを設定することができます、`PreApplicationStart`メソッドです。 詳細については、`PreApplicationStart`メソッド、 <xref:System.Web.PreApplicationStartMethodAttribute>.</xref:System.Web.PreApplicationStartMethodAttribute>を参照してください。"
  syntax:
    content: public static Nullable<bool> BatchCompilationEnabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>バッチ コンパイルは常に有効な場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>バッチ コンパイルを有効にしない場合または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、コンパイルの設定は、構成ファイルから決定されます。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "プロパティ設定されていない、 <xref uid=&quot;langword_csharp_PreApplicationStart&quot; name=&quot;PreApplicationStart&quot; href=&quot;&quot;> </xref>メソッドです。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  id: CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_Code ディレクトリからビルドされたアセンブリの一覧を取得します。"
  syntax:
    content: public static System.Collections.IList CodeAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>App_Code ディレクトリからビルドされたアセンブリを含むコレクション</xref:System.Collections.IList>。"
  overload: System.Web.Compilation.BuildManager.CodeAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  id: CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "キャッシュされたファイルを作成します。"
  remarks: "このメソッドと<xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>メソッドを使用すると、キャッシュ、部分信頼環境でアプリケーション ドメインが再起動の間で永続化を実行します</xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>。 コント ローラーの検索の結果をキャッシュに、MVC フレームワークによって使用されます。       データをキャッシュするへの書き込み、<xref:System.IO.Stream>このメソッドによって返されるオブジェクト</xref:System.IO.Stream>。"
  syntax:
    content: public static System.IO.Stream CreateCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "作成するファイルの名前。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>、新しいファイルのオブジェクト</xref:System.IO.Stream>。"
  overload: System.Web.Compilation.BuildManager.CreateCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  id: CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定された仮想パス、ファイルを処理し、結果のインスタンスを作成します。"
  remarks: "CreateInstanceFromVirtualPath メソッドは、コンパイルとコンパイル以外のページに機能します。"
  syntax:
    content: public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);
    parameters:
    - id: virtualPath
      type: System.String
      description: "インスタンスを作成するファイルの仮想パス。"
    - id: requiredBaseType
      type: System.Type
      description: "作成するオブジェクトを定義する基本データ型。"
    return:
      type: System.Object
      description: "<xref:System.Object>処理されたファイルのインスタンスを表す</xref:System.Object>。"
  overload: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET キャッシュでパスが存在する場合は、仮想パスの設定、ビルドの依存関係を返します。"
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求のコンテキスト。"
    - id: virtualPath
      type: System.String
      description: "ビルドの依存関係を決定するための仮想パスを設定します。"
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 、キャッシュに格納されているオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref>キャッシュからオブジェクトを取得することはできません。"
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド依存関係のコンテンツは最新ではない場合でも ASP.NET キャッシュでパスが存在する場合の仮想パスのセットを返します。"
  remarks: "場合、`ensureIsUpToDate`パラメーターの値に設定されて`true`、GetCachedBuildDependencySet メソッドのオーバー ロードの動作と同様に、<xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>メソッドのオーバー ロード</xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>。 両方のオーバー ロードは、現在ビルドの依存関係が存在する場合は、設定を返す、それ以外の場合、返す`null`です。       ただし、GetCachedBuildDependencySet メソッドのオーバー ロードには、古い、1 つも、利用可能なビルドの依存関係のセットを取得するオプションが含まれています。 場合、`ensureIsUpToDate`パラメーターの値に設定されて`false`メソッドは、利用可能なビルドの依存関係のセットを返します。"
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "要求のコンテキスト。"
    - id: virtualPath
      type: System.String
      description: "ビルドの依存関係を決定するための仮想パスを設定します。"
    - id: ensureIsUpToDate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のみが依存関係を構築することを指定するセットを返す、または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>が最新でない場合でも、任意の利用可能なビルドの依存関係のセットを返すことを示すためにします。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "A <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> 、キャッシュに格納されているオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref>キャッシュからオブジェクトを取得することはできません。"
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  id: GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ファイルを指定した仮想パスを使用してアセンブリにコンパイルします。"
  syntax:
    content: public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "アセンブリにビルドへの仮想パス。"
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>が指定の仮想パスで、いずれかのメモリまたはディスクにキャッシュからコンパイルされたオブジェクト</xref:System.Reflection.Assembly>。"
  overload: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  id: GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスを指定のファイルをコンパイルし、キャッシュに保持するビルド プロバイダーをカスタム文字列を返します。"
  syntax:
    content: public static string GetCompiledCustomString (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ビルド対象のファイルの仮想パス。"
    return:
      type: System.String
      description: "によって返される、文字列、<xref:System.Web.Compilation.BuildProvider.GetCustomString*>ディスクまたはメモリにキャッシュされているメソッド</xref:System.Web.Compilation.BuildProvider.GetCustomString*>。"
  overload: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定された仮想パスをファイルをコンパイルし、コンパイルされた型を返します。"
  syntax:
    content: public static Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "型を構築する仮想パス。"
    return:
      type: System.Type
      description: "<xref:System.Type>仮想パスのコンパイルから生成された型を表すオブジェクト</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetCompiledType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "仮想パスをコンパイルするときにエラーが発生しました。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  id: GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Global.asax ファイルのコンパイル済みの型を表すオブジェクトを取得します。"
  remarks: "Global.asax ファイルのコンパイル前に、このメソッドが呼び出された場合、例外がスローされます。"
  syntax:
    content: public static Type GetGlobalAsaxType ();
    parameters: []
    return:
      type: System.Type
      description: "Global.asax ファイルのコンパイル済みの型を表すオブジェクト。"
  overload: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Global.asax ページをコンパイルする前に、このメソッドを呼び出してしようとしました。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  id: GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定した仮想パスのオブジェクト ファクトリを取得します。"
  remarks: "このメソッドは、仮想パスをコンパイルすることで、型の生成を有効にするオブジェクトを返します。 Web サイトをプリコンパイルするかどうかに関係なく、オブジェクトを返します。"
  syntax:
    content: public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);
    parameters:
    - id: virtualPath
      type: System.String
      description: "仮想パス。"
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>仮想パスが存在しません。 場合、エラーをスローするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 仮想パスが存在しない場合および`throwIfNotFound`は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、このメソッドが戻る<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Web.Util.IWebObjectFactory
      description: "オブジェクトのファクトリです。"
  overload: System.Web.Compilation.BuildManager.GetObjectFactory*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "仮想パスが存在しません。       または、このメソッドが呼び出されたときに、上位レベルの例外は既にが存在します。       - または - コンパイル処理された最上位ファイルの構築時に、このメソッドが呼び出されました。       - または - これは、プリコンパイル済みアプリケーションとキャッシュ内の仮想パスが見つかりません。       - または - 循環参照が検出されました。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "すべてのページ コンパイルが参照する必要がありますのあるアセンブリ参照の一覧を返します。"
  remarks: "GetReferencedAssemblies メソッドから返されるアセンブリのコレクションには、Web.config ファイル、App_Code ディレクトリでのカスタム コードからビルドされたアセンブリおよびその他の最上位のフォルダー内のアセンブリの要素で指定されたアセンブリが含まれています。       GetReferencedAssemblies は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。 [.NET Framework のバージョンとの依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static System.Collections.ICollection GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>アセンブリ参照のコレクション</xref:System.Collections.ICollection>。"
  overload: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "最上位レベルのアセンブリ内、または構成では、定義されているアセンブリで型を検索し、必要に応じてエラー発生時に例外をスローします。"
  remarks: "最上位のアセンブリは、Global.asax ファイルでは、または App_GlobalResources、App_WebReferences、App_Code、または App_Browsers ディレクトリ内にあるファイルを参照します。"
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "型の名前です。"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合に例外をスローする、<xref:System.Type>オブジェクトは、それ以外の型名を生成することはできません<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Type> 。"
    return:
      type: System.Type
      description: "A<xref:System.Type>を表す、要求されたオブジェクト<code> typeName </code>パラメーター</xref:System.Type> 。"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "最上位レベルのアセンブリでまたはを使用して、大文字と小文字をエラー発生時に例外をスローさせることも、構成では、定義されているアセンブリでは、型を検索します。"
  remarks: "最上位のアセンブリは、Global.asax ファイルでは、または App_GlobalResources、App_WebReferences、App_Code、または App_Browsers ディレクトリ内にあるファイルを参照します。"
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "型の名前です。"
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合に例外をスローする、 <xref:System.Type>、それ以外の型名を生成することはできません<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Type> 。"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合`typeName`、それ以外の大文字小文字を区別<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Type
      description: "A<xref:System.Type>を表す、要求されたオブジェクト<code> typeName </code>パラメーター</xref:System.Type> 。"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  id: GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定した仮想パスの仮想パスの依存関係のコレクションを提供します。"
  syntax:
    content: public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "依存関係を決定するために使用する仮想パス。"
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>仮想パスの依存関係をキャッシュする仮想パスで表されるファイルのコレクション</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  id: IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーションをプリコンパイルするかどうかを指定する値を取得します。"
  syntax:
    content: public static bool IsPrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、アプリケーションがプリコンパイル済みです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  id: IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーションが更新可能としてプリコンパイルするかどうかを指定する値を取得します。"
  syntax:
    content: public static bool IsUpdatablePrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>アプリケーションが更新可能な; としてプリコンパイル済みの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  id: ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "キャッシュされたファイルを読み取ります。"
  remarks: "このメソッドと<xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>メソッドを使用すると、キャッシュ、部分信頼環境でアプリケーション ドメインが再起動の間で永続化を実行します</xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>。 コント ローラーの検索の結果をキャッシュに、MVC フレームワークによって使用されます。       読み取り、キャッシュされたデータを取得する、<xref:System.IO.Stream>このメソッドによって返されるオブジェクト</xref:System.IO.Stream>。"
  syntax:
    content: public static System.IO.Stream ReadCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "読み取るファイルの名前です。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>ファイルは、オブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ファイルが存在しない場合</xref:System.IO.Stream>。"
  overload: System.Web.Compilation.BuildManager.ReadCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.TargetFramework
  id: TargetFramework
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "現在の Web サイトの .NET Framework のターゲット バージョンを取得します。"
  remarks: "このプロパティは、ASP.NET のマルチ ターゲット機能の最新バージョンを使用することにより[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]は .NET Framework の以前のバージョンで実行するアプリケーションを開発します。 ビルド プロバイダーは、このプロパティを使用して、プロバイダーが .NET Framework の対象とするバージョンを適切なコードを生成することを確認してください。 Web サイトのターゲットかどうかに応じて異なるコードを生成するなど、[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]または[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]です。 マルチ ターゲットの詳細については、次を参照してください。 [ASP.NET Web プロジェクト用の .NET Framework のマルチ ターゲット](~/add/includes/ajax-current-ext-md.md)です。       Web サイトには、Web.config ファイルがない、ASP.NET はターゲット フレームワークのバージョンで、サイトが実行されている IIS アプリケーション プールに関連付けられているバージョンであることを想定します。 Visual Studio で実行されているファイル システム Web サイトを既定の framework バージョンは現在のバージョンの[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]です。       Web サイトは、Web.config ファイルには、ASP.NET は、Web.config ファイルを確認するには、ターゲット フレームワークを決定します。      ## 対象とする .NET Framework 2.0 の Web アプリケーションを対象とする Web サイト、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]ターゲットが場合と同様にコンパイル、[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]です。 ビルド プロセスが区別されません、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]と[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]のため、これらのバージョンのいずれかが対象となる場合、Web.config ファイルはコンパイラのバージョンまたはターゲット フレームワークを示しません。 (の[!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)]、Web.config ファイルで指定して、コンパイラのバージョンとの[!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]、Web.config ファイルがターゲット フレームワークを指定します)。そのための Web アプリケーションを対象とする、 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]、このプロパティはターゲット フレームワーク モニカーを示すを返します、[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]です。       通常は発生しません問題です。 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]参照を作成することを防止する[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]の対象となるプロジェクトで機能、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]です。 たとえば、 [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] WCF サービスの対象となるプロジェクトの項目テンプレートを行いません[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]WCF がで導入されたため、[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]と互換性がないと、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]です。       Web サイトを展開する場合、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]ランタイム環境とするツールを使用して、以外の[!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]のみと互換性がある参照機能を[!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]エラーや警告を生成せずにプロジェクトをビルド可能性があります。 ただし、アプリケーションがエラーを生成で実行されると、Web サイト、[!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]です。"
  syntax:
    content: public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "現在の Web サイトの .NET Framework のターゲット バージョンです。"
  overload: System.Web.Compilation.BuildManager.TargetFramework*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
- uid: System.Web.Compilation.BuildDependencySet
  parent: System.Web.Compilation
  isExternal: false
  name: BuildDependencySet
  nameWithType: BuildDependencySet
  fullName: System.Web.Compilation.BuildDependencySet
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
- uid: System.Web.Util.IWebObjectFactory
  parent: System.Web.Util
  isExternal: false
  name: IWebObjectFactory
  nameWithType: IWebObjectFactory
  fullName: System.Web.Util.IWebObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
- uid: System.Web.Compilation.BuildManager.TargetFramework
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency
  nameWithType: BuildManager.AddCompilationDependency
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly
  nameWithType: BuildManager.AddReferencedAssembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
- uid: System.Web.Compilation.BuildManager.CodeAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
- uid: System.Web.Compilation.BuildManager.CreateCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile
  nameWithType: BuildManager.CreateCachedFile
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath
  nameWithType: BuildManager.CreateInstanceFromVirtualPath
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet
  nameWithType: BuildManager.GetCachedBuildDependencySet
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly
  nameWithType: BuildManager.GetCompiledAssembly
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString
  nameWithType: BuildManager.GetCompiledCustomString
- uid: System.Web.Compilation.BuildManager.GetCompiledType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: BuildManager.GetCompiledType
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType
  nameWithType: BuildManager.GetGlobalAsaxType
- uid: System.Web.Compilation.BuildManager.GetObjectFactory*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory
  nameWithType: BuildManager.GetObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: BuildManager.GetReferencedAssemblies
- uid: System.Web.Compilation.BuildManager.GetType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType
  nameWithType: BuildManager.GetType
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies
  nameWithType: BuildManager.GetVirtualPathDependencies
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile
  nameWithType: BuildManager.ReadCachedFile
- uid: System.Web.Compilation.BuildManager.TargetFramework*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
