### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.RegistryKey
  id: RegistryKey
  children:
  - Microsoft.Win32.RegistryKey.Close
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  - Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  - Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  - Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.Dispose
  - Microsoft.Win32.RegistryKey.Flush
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  - Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.GetAccessControl
  - Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  - Microsoft.Win32.RegistryKey.GetSubKeyNames
  - Microsoft.Win32.RegistryKey.GetValue(System.String)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  - Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  - Microsoft.Win32.RegistryKey.GetValueNames
  - Microsoft.Win32.RegistryKey.Handle
  - Microsoft.Win32.RegistryKey.Name
  - Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  - Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  - Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  - Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  - Microsoft.Win32.RegistryKey.SubKeyCount
  - Microsoft.Win32.RegistryKey.ToString
  - Microsoft.Win32.RegistryKey.ValueCount
  - Microsoft.Win32.RegistryKey.View
  langs:
  - csharp
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
  type: Class
  summary: "Windows レジストリのキー レベル ノードを表します。 このクラスは、レジストリをカプセル化します。"
  remarks: "To get an instance of RegistryKey, use one of the static members of the <xref:Microsoft.Win32.Registry> class.  \n  \n The registry acts as a central repository of information for the operating system and the applications on a computer. The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <xref:Microsoft.Win32.Registry> for the base-level items in this hierarchy). When storing information in the registry, select the appropriate location based on the type of information being stored. Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.  \n  \n Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer. A particular key can have subkeys, just as a folder can have subfolders. Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys. Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information — for example, information about an application installed on the computer. Each value holds one particular piece of information, which can be retrieved or updated when required. For instance, you can create a RegistryKey for your company, under the key HKEY_LOCAL_MACHINE\\Software, and then a subkey for each application that your company creates. Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.  \n  \n Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.  \n  \n> [!CAUTION]\n>  Do not expose RegistryKey objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs. For example, do not allow callers to enter arbitrary keys or values.  \n  \n Starting in the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], the length of a registry key is no longer limited to 255 characters."
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/t-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/t-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/t-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class RegistryKey : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Close
  id: Close
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "キーを終了し、その内容が変更された場合のディスクへフラッシュします。"
  remarks: "システムのキーでこのメソッドを呼び出す効果はありません、システム キーが閉じていることはありません。       このメソッドは何のインスタンスで呼び出す場合は、`RegistryKey`は既に閉じられています。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_4_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_4_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_4_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Close*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  id: CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しいサブキーを作成するか、または書き込みアクセス用の既存のサブキーを開きます。"
  remarks: "この操作を実行するために、権限が必要このレベルとその下のレジストリ階層でします。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。"
  example:
  - "The following code example shows how to create a subkey under HKEY_CURRENT_USER, manipulate its contents, and then delete the subkey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_15_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_15_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_15_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。 この文字列は区別されません。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。 長さ&0; の文字列が指定されている場合<code> subkey </code>、現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが返されます。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>このメソッドを呼び出すには終了 (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>できません書き込みができません。 たとえば、書き込み可能なキーとして開かれていないか、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しいサブキーを作成するか、または指定したアクセス許可チェック オプションを使用して、書き込みアクセス用の既存のサブキーを開きます。"
  remarks: "この操作を実行するために、権限が必要このレベルとその下のレジストリ階層でします。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。       使用するために、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッド、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスがある必要があります</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。 この文字列は区別されません。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。 長さ&0; の文字列が指定されている場合<code> subkey </code>、現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが返されます。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>無効な値が含まれています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>このメソッドを呼び出すには終了 (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>できません書き込みができません。 たとえば、書き込み可能なキーとして開かれていないか、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  id: CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しいサブキーを作成するか、または指定したアクセスで、既存のサブキーを開きます。       以降で利用可能[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "この操作を実行するために、権限が必要このレベルとその下のレジストリ階層でします。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。       Createsubke メソッドを使用するのには、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスが必要 <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。 この文字列は区別されません。"
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しいサブキーを示すためには書き込み可能です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。 長さ&0; の文字列が指定されている場合<code> subkey </code>、現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが返されます。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>できません書き込みができません。 たとえば、書き込み可能なキーとして開かれていないか、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "サブキーを作成するか、または指定した権限のチェックとレジストリのオプションを使用して、書き込みアクセス用のサブキーを開きます。"
  remarks: "現在を取得する<xref:Microsoft.Win32.RegistryKey>オブジェクトで、空の文字列を指定します (&quot;&quot;) の`subkey`</xref:Microsoft.Win32.RegistryKey>。"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "を使用するレジストリ オプションたとえば、揮発性のキーを作成します。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトは閉じられます (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>にオブジェクトを書き込むことはできません以外の場合は、書き込み可能なキーとして開かれていないなど、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しいサブキーを作成するか、または指定したアクセス許可チェック オプションおよびレジストリ セキュリティを使用して、書き込みアクセス用の既存のサブキーを開きます。"
  remarks: "Createsubke メソッドで指定されたアクセス制御のあるレジストリ キーを作成する、`registrySecurity`パラメーター。 <xref:Microsoft.Win32.RegistryKey>返されるオブジェクトは、レジストリ キーを表しますが、そのオブジェクトがで指定されたアクセス制御によって制限されていない、`registrySecurity`パラメーター</xref:Microsoft.Win32.RegistryKey> 。       場合`permissionCheck`は<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>、キーが読み取り/書き込みアクセス用に開く</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>。 場合`permissionCheck`は<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>、読み取りアクセス用のキーが開きます</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>。       場合の読み書きに旧バージョンとの互換性のため、キーが開かれた`permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>にもが親キー</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>は、 親キーに、他の設定がある場合は、読み取り/書き込みの状態は、親キーの設定によって制御されます。       このアクションを実行するためにユーザーはレジストリ階層のこのレベルでは、次のアクセス許可が必要です。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。       使用するために、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッド、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスがある必要があります</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。 この文字列は区別されません。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "新しいキーのアクセス制御セキュリティ。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。 長さ&0; の文字列が指定されている場合<code> subkey </code>、現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが返されます。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>無効な値が含まれています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>このメソッドを呼び出すには終了 (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>できません書き込みができません。 たとえば、書き込み可能なキーとして開かれていないか、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  id: CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しいサブキーを作成するか、または指定したアクセスで、既存のサブキーを開きます。       以降で利用可能[!INCLUDE[net_v46](~/add/includes/net-v46-md.md)]"
  remarks: "この操作を実行するために、権限が必要このレベルとその下のレジストリ階層でします。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。       Createsubke メソッドを使用するのには、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスが必要 <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, bool writable, Microsoft.Win32.RegistryOptions options);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。 この文字列は区別されません。"
    - id: writable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>新しいサブキーを示すためには書き込み可能です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: options
      type: Microsoft.Win32.RegistryOptions
      description: "使用するレジストリ オプション。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。 長さ&0; の文字列が指定されている場合<code> subkey </code>、現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが返されます。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>有効なオプションが指定されていません"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>できません書き込みができません。 たとえば、書き込み可能なキーとして開かれていないか、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  id: CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "サブキーを作成するか、または指定されたアクセス許可チェック オプション、レジストリ オプション、およびレジストリ セキュリティを使用して、書き込みアクセス用のサブキーを開きます。"
  remarks: "現在を取得する<xref:Microsoft.Win32.RegistryKey>オブジェクトで、空の文字列を指定します (&quot;&quot;) の`subkey`</xref:Microsoft.Win32.RegistryKey>。"
  syntax:
    content: public Microsoft.Win32.RegistryKey CreateSubKey (string subkey, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, Microsoft.Win32.RegistryOptions registryOptions, System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: subkey
      type: System.String
      description: "名前または作成または開くサブキーのパス。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    - id: registryOptions
      type: Microsoft.Win32.RegistryOptions
      description: "使用するレジストリ オプション。"
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "新しいサブキーのアクセス制御セキュリティ。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "新しく作成されたサブキー、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.CreateSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトが閉じられています。 閉じられたキーにアクセスできません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>にオブジェクトを書き込むことはできません以外の場合は、書き込み可能なキーとして開かれていないなど、ユーザーには、必要なアクセス権はありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "入れ子のレベルは、510 を超えています。       - または - でキーを作成しようとすると、キーの削除などのシステム エラーが発生しました、 <xref href=&quot;Microsoft.Win32.Registry.LocalMachine&quot;> </xref>ルート。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを開くために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  id: DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したサブキーを削除します。"
  remarks: "子サブキーを削除するには、 <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>を使用します。       レジストリ キーを削除する場合は、注意を使用します。"
  example:
  - "The following example demonstrates how to use DeleteSubKey.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/cpp/m-microsoft.win32.regist_5_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/csharp/m-microsoft.win32.regist_5_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#5](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_5_1.vb)]"
  syntax:
    content: public void DeleteSubKey (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "削除するサブキーの名前。 この文字列は区別されません。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> subkey </code>子サブキーがあります"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> subkey </code>パラメーターが有効なレジストリ キーを指定していません"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>します。<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーを削除するために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  id: DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したサブキーを削除し、サブキーが見つからない場合、例外が発生するかどうかを指定します。"
  remarks: "子サブキーを削除するには、 <xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>。</xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A>を使用します。       レジストリ キーを削除する場合は、注意を使用します。"
  syntax:
    content: public void DeleteSubKey (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "削除するサブキーの名前。 この文字列は区別されません。"
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "指定したサブキーが見つからない場合に例外を発生させるかどうかを示します。 この引数は場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したサブキーが存在しないと、例外が発生します。 この引数は場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指定したサブキーが存在しないと、アクションは実行されません。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKey*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>subkey</code>子サブキーがあります。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>subkey</code>有効なレジストリ キーが指定されていませんし<code>throwOnMissingSubKey</code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーを削除するために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  id: DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "サブキーとその子サブキーを再帰的に削除します。"
  remarks: "サブキーとそのツリーを削除する適切なアクセス許可が必要です。      > [!CAUTION] >、特定のキーを削除すると、キーの下のすべてのエントリがツリーで、削除されます。 警告は表示されません。 使用して子サブキーがあるない場合にのみ、サブキーを削除する場合、<xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>メソッド</xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A>。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_12_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_12_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_12_1.vb)]"
  syntax:
    content: public void DeleteSubKeyTree (string subkey);
    parameters:
    - id: subkey
      type: System.String
      description: "削除するサブキー。 この文字列は区別されません。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ルート ハイブの削除が試行されます。       - または - <code> subkey </code>有効なレジストリ サブキーが指定されていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O エラーが発生しました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーを削除するために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  id: DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したサブキーとその子サブキーを再帰的に、削除し、サブキーが見つからない場合、例外が発生するかどうかを指定します。"
  syntax:
    content: public void DeleteSubKeyTree (string subkey, bool throwOnMissingSubKey);
    parameters:
    - id: subkey
      type: System.String
      description: "削除するサブキーの名前。 この文字列は区別されません。"
    - id: throwOnMissingSubKey
      type: System.Boolean
      description: "指定したサブキーが見つからない場合に例外を発生させるかどうかを示します。 この引数は場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したサブキーが存在しないと、例外が発生します。 この引数は場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指定したサブキーが存在しないと、アクションは実行されません。"
  overload: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ツリーのルート ハイブを削除しようとしました。       - または - <code> subkey </code>で有効なレジストリ サブキーが指定されていないと<code> throwOnMissingSubKey </code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>subkey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーを削除するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  id: DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "このキーから指定した値を削除します。"
  remarks: "Windows 95、Windows 98、Windows 98 Second Edition、および Windows Millennium Edition、上に空の文字列を指定する、`name`パラメーターでは、既定値は削除されません。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/cpp/m-microsoft.win32.regist_13_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/csharp/m-microsoft.win32.regist_13_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#3](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_13_1.vb)]"
  syntax:
    content: public void DeleteValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "削除する値の名前。"
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>値に有効な参照ではありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、値を削除するために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作中は読み取り専用です。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  id: DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "このキーから指定した値を削除し、値が見つからない場合、例外が発生するかどうかを指定します。"
  remarks: "場合`throwOnMissingValue`は`false`、その後、削除したばかりの値にアクセスしようとしないで、削除が成功したかどうかに指示する方法はありません。 そのため、この方法でレジストリから値を削除する場合は、注意を使用します。       Windows 95、Windows 98、Windows 98 Second Edition、および Windows Millennium Edition、上に空の文字列を指定する、`name`パラメーターでは、既定値は削除されません。"
  syntax:
    content: public void DeleteValue (string name, bool throwOnMissingValue);
    parameters:
    - id: name
      type: System.String
      description: "削除する値の名前。"
    - id: throwOnMissingValue
      type: System.Boolean
      description: "指定した値が見つからない場合に例外を発生させるかどうかを示します。 この引数は場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定された値が存在しないと、例外が発生します。 この引数は場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指定された値が存在しないと、アクションは実行されません。"
  overload: Microsoft.Win32.RegistryKey.DeleteValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>値に有効な参照ではないと<code>throwOnMissingValue</code>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、値を削除するために必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作中は読み取り専用です。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Dispose
  id: Dispose
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "現在のインスタンスによって使用されるすべてのリソースを解放、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>クラスです。"
  remarks: "呼び出す`Dispose` <xref:Microsoft.Win32.RegistryKey>.</xref:Microsoft.Win32.RegistryKey>の使用が終了したときに `Dispose`メソッドによって、<xref:Microsoft.Win32.RegistryKey>使用不可の状態</xref:Microsoft.Win32.RegistryKey>。 呼び出した後`Dispose`へのすべての参照を解放する必要があります、<xref:Microsoft.Win32.RegistryKey>ガベージ コレクターがメモリを再利用できるようにする、<xref:Microsoft.Win32.RegistryKey>占有されていた</xref:Microsoft.Win32.RegistryKey></xref:Microsoft.Win32.RegistryKey>。       詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > 常に呼び出し`Dispose`<xref:Microsoft.Win32.RegistryKey></xref:Microsoft.Win32.RegistryKey>の最後の参照を解放する前に。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:Microsoft.Win32.RegistryKey>オブジェクトの`Finalize`メソッド</xref:Microsoft.Win32.RegistryKey>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Dispose*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Flush
  id: Flush
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "レジストリに指定したオープン レジストリ キーのすべての属性を書き込みます。"
  remarks: "呼び出す必要はありません`Flush`キーに変更を書き込むためです。 レジストリの変更がディスクにフラッシュ レジストリ レイジー フラッシャです。 レイジー フラッシュは、システム指定の時間間隔で自動的かつ定期的にします。 レジストリの変更はフラッシュもシステム シャット ダウン時にディスクにします。       異なり<xref:Microsoft.Win32.RegistryKey.Close%2A>、`Flush`関数の戻り値のすべてのデータがレジストリに書き込まれた場合にのみです</xref:Microsoft.Win32.RegistryKey.Close%2A>。       `Flush`関数がの一部またはすべての他のキーが書き込みも可能性があります。 過度にこの関数を呼び出すと、アプリケーションのパフォーマンスに悪影響を及ぼすことができます。       アプリケーションはのみ呼び出す必要があります`Flush`場合は、絶対パスにする必要があります特定のレジストリの変更が記録されることをディスクにします。 一般に、`Flush`場合、これまでを使用する必要があるまれです。"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: Microsoft.Win32.RegistryKey.Flush*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定されたハンドルからレジストリ キーを作成します。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "レジストリ キーへのハンドル。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "レジストリ キー。"
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、この操作を実行するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  id: FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定されたハンドルおよびレジストリ ビュー設定からレジストリ キーを作成します。"
  remarks: "`view`サブキーを開くなどの後続の操作でこのメソッドのパラメーターを使用します。       場合`view`は<xref:Microsoft.Win32.RegistryView>、マシンには、32 ビット オペレーティング システムが実行されている、返されたキーが使用されますが、<xref:Microsoft.Win32.RegistryView>ビュー</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView> 。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey FromHandle (Microsoft.Win32.SafeHandles.SafeRegistryHandle handle, Microsoft.Win32.RegistryView view);
    parameters:
    - id: handle
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "レジストリ キーへのハンドル。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "使用するレジストリ ビュー。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "レジストリ キー。"
  overload: Microsoft.Win32.RegistryKey.FromHandle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>view</code>正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>handle</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、この操作を実行するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  id: GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "現在のレジストリ キーのアクセス制御セキュリティを返します。"
  remarks: "このメソッドはオーバー ロードを呼び出すことと同等、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29>次のフラグのビットごとの組み合わせを持つメソッド オーバー ロード: <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>、 <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>、 <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName></xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29> 。 そのオーバー ロードを使用すると、他のアクセス許可を検索します。       ユーザーがいる必要があります<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>このメソッドを呼び出す権限</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>。"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl ();
    parameters: []
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "現在によって表されるレジストリ キーに対するアクセス制御権限を示すオブジェクト<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>です。"
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のキーが削除されました。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  id: GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "現在のレジストリ キーのアクセス制御セキュリティの指定したセクションを返します。"
  remarks: "現在のユーザーに付与するアクセス許可を要求するには、次のフラグのビットごとの組み合わせを指定します<xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>、 <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>、 <xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName>。</xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> </xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName> 。 また、使用することができます、<xref:Microsoft.Win32.RegistryKey.GetAccessControl>メソッド オーバー ロードを正確にその値の組み合わせを指定します</xref:Microsoft.Win32.RegistryKey.GetAccessControl>。       ユーザーがいる必要があります<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>このメソッドを呼び出す権限</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>。"
  syntax:
    content: public System.Security.AccessControl.RegistrySecurity GetAccessControl (System.Security.AccessControl.AccessControlSections includeSections);
    parameters:
    - id: includeSections
      type: System.Security.AccessControl.AccessControlSections
      description: "取得するセキュリティ情報の種類を指定する列挙値のビットごとの組み合わせ。"
    return:
      type: System.Security.AccessControl.RegistrySecurity
      description: "現在によって表されるレジストリ キーに対するアクセス制御権限を示すオブジェクト<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>です。"
  overload: Microsoft.Win32.RegistryKey.GetAccessControl*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、必要なアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のキーが削除されました。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  id: GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "すべてのサブキー名を含む文字列の配列を取得します。"
  remarks: "このメソッドは、再帰的に検索名前ではありません。 呼び出し元のベース レベルの名前を返します。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_7_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_7_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_7_1.vb)]"
  syntax:
    content: public string[] GetSubKeyNames ();
    parameters: []
    return:
      type: System.String[]
      description: "現在のキーのサブキーの名前を含む文字列の配列。"
  overload: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "システム エラーが発生しました、たとえば、現在のキーが削除されています。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  id: GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前に関連付けられている値を取得します。 返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>名前/値ペアがレジストリに存在しない場合。"
  remarks: "> [!NOTE]> レジストリ キーには、任意の名前に関連付けられていない&1; つを表すことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を取得するには、どちらかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。       GetValue メソッドを展開可能な文字列値を取得した場合 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、ローカルの環境からのデータを使用して環境文字列に展開されます</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>。 リモート コンピューター上のレジストリから展開可能な文字列値を取得する、<xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>展開環境文字列をしないようにするを指定するメソッドのオーバー ロード</xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29>。      > [!NOTE] > 環境変数を展開可能な参照を含む値を文字列として格納されている場合 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、展開可能な文字列としてではなく (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、GetValue がそれを展開しない</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> このような文字列を展開するには、呼び出すことによって取得された後、<xref:System.Environment.ExpandEnvironmentVariables%2A>メソッド</xref:System.Environment.ExpandEnvironmentVariables%2A>。      > [!NOTE] > からデータを取得することをお勧め、<xref:Microsoft.Win32.Registry.PerformanceData>キーは、使用する、<xref:System.Diagnostics.PerformanceCounter>クラスではなく、<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>メソッド</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName></xref:System.Diagnostics.PerformanceCounter></xref:Microsoft.Win32.Registry.PerformanceData>。   >> GetValue は REG_NONE または REG_LINK 型の値の読み取りをサポートしていません。  どちらの場合も、既定値 (`null`) が、実際の値ではなく返されます。"
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_3_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_3_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_3_1.vb)]"
  syntax:
    content: public object GetValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "取得する値の名前。 この文字列は区別されません。"
    return:
      type: System.Object
      description: "関連付けられている値<code> name </code>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合<code> name </code>が見つかりません。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が削除対象としてマークされています。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  id: GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前に関連付けられている値を取得します。 名前が見つからない場合は、指定した既定値を返します。"
  remarks: "このオーバー ロードを使用して<xref:Microsoft.Win32.RegistryKey.GetValue%2A>ここで名前がまだないケースを処理する — など、初めてアプリケーションを実行します</xref:Microsoft.Win32.RegistryKey.GetValue%2A>。 このオーバー ロードを呼び出すたびに、`defaultValue`場合に返す値を指定するパラメーター`name`存在しません。      > [!NOTE] > レジストリ キーは、任意の名前に関連付けられていない&1; つの値を持つことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を取得するには、どちらかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。       ときに、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>メソッドを展開可能な文字列値を取得します (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、ローカルの環境からのデータを使用して環境文字列に展開されます</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryKey.GetValue%2A>。 リモート コンピューター上のレジストリから展開可能な文字列値を取得する、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>展開環境文字列をしないようにするを指定するオーバー ロード</xref:Microsoft.Win32.RegistryKey.GetValue%2A>。      > [!NOTE] > 環境変数を展開可能な参照を含む値を文字列として格納されている場合 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、展開可能な文字列としてではなく (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、<xref:Microsoft.Win32.RegistryKey.GetValue%2A>メソッドはそれを展開していない</xref:Microsoft.Win32.RegistryKey.GetValue%2A></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> このような文字列を展開するには、呼び出すことによって取得された後、<xref:System.Environment.ExpandEnvironmentVariables%2A>メソッド</xref:System.Environment.ExpandEnvironmentVariables%2A>。      > [!NOTE] > からデータを取得することをお勧め、<xref:Microsoft.Win32.Registry.PerformanceData>キーは、使用する、<xref:System.Diagnostics.PerformanceCounter>クラスではなく、<xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName>メソッド</xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName></xref:System.Diagnostics.PerformanceCounter></xref:Microsoft.Win32.Registry.PerformanceData>。   >> GetValue は REG_NONE または REG_LINK 型の値の読み取りをサポートしていません。  どちらの場合も、既定値 (`null`) が、実際の値ではなく返されます。"
  example:
  - "The following code example creates a test key with a value and retrieves that value. The example then attempts to retrieve a nonexistent value from the key; in this case the GetValue method returns the specified default value.  \n  \n [!code-cs[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_6_1.cs)]\n [!code-cpp[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_6_1.cpp)]\n [!code-vb[Classic RegistryKey.GetValue Example#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_6_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue);
    parameters:
    - id: name
      type: System.String
      description: "取得する値の名前。 この文字列は区別されません。"
    - id: defaultValue
      type: System.Object
      description: "場合に返す値`name`存在しません。"
    return:
      type: System.Object
      description: "関連付けられている値<code> name </code>、いずれかと埋め込み左未展開、環境変数または<code> defaultValue </code>場合<code> name </code>が見つかりません。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が削除対象としてマークされています。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  id: GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前と取得オプションに関連付けられている値を取得します。 名前が見つからない場合は、指定した既定値を返します。"
  remarks: "このオーバー ロードを使用すると、取得した値の特別な処理を指定できます。 たとえば、指定<xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>型のレジストリ値を取得するときに<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>埋め込まれた環境変数を展開することがなく、文字列を取得します</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName>。       使用して、`defaultValue`場合に返す値を指定するパラメーター`name`存在しません。      > [!NOTE] > レジストリ キーは、任意の名前に関連付けられていない&1; つの値を持つことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を取得するには、どちらかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。   >> GetValue は REG_NONE または REG_LINK 型の値の読み取りをサポートしていません。  どちらの場合も、既定値 (`null`) が、実際の値ではなく返されます。"
  example:
  - "The following code sample creates a test key, adds a value with an embedded environment variable, and retrieves the value in both expanded and unexpanded forms.  \n  \n [!code-cs[RegistryValueOptions#1](~/add/codesnippet/csharp/0ecb41d1-0eb1-4d34-96b2-_1.cs)]\n [!code-cpp[RegistryValueOptions#1](~/add/codesnippet/cpp/0ecb41d1-0eb1-4d34-96b2-_1.cpp)]\n [!code-vb[RegistryValueOptions#1](~/add/codesnippet/visualbasic/0ecb41d1-0eb1-4d34-96b2-_1.vb)]"
  syntax:
    content: public object GetValue (string name, object defaultValue, Microsoft.Win32.RegistryValueOptions options);
    parameters:
    - id: name
      type: System.String
      description: "取得する値の名前。 この文字列は区別されません。"
    - id: defaultValue
      type: System.Object
      description: "場合に返す値`name`存在しません。"
    - id: options
      type: Microsoft.Win32.RegistryValueOptions
      description: "取得した値の省略可能な処理を指定する列挙値の&1; つ。"
    return:
      type: System.Object
      description: "関連付けられている値<code> name</code>に従って、指定された処理済み<code> options </code>、または<code> defaultValue </code>場合<code> name </code>が見つかりません。"
  overload: Microsoft.Win32.RegistryKey.GetValue*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が削除対象としてマークされています。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>options</code>有効ではありません<xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;></xref>値; に無効な値をキャストするなど、 <xref href=&quot;Microsoft.Win32.RegistryValueOptions&quot;></xref>です。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  id: GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前に関連付けられている値のレジストリ データ型を取得します。"
  remarks: "> [!NOTE]> レジストリ キーには、任意の名前に関連付けられていない&1; つを表すことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値のレジストリ データ型を取得するには、どちらかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。       詳細についてはサポートされているレジストリ データ型を参照してください、<xref:Microsoft.Win32.RegistryValueKind>列挙体です</xref:Microsoft.Win32.RegistryValueKind>。"
  example:
  - "The following code example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the GetValueKind method to retrieve the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryValueKind GetValueKind (string name);
    parameters:
    - id: name
      type: System.String
      description: "レジストリ データ型を取得する値の名前。 この文字列は区別されません。"
    return:
      type: Microsoft.Win32.RegistryValueKind
      description: "関連付けられている値のレジストリ データ型<code> name</code>です。"
  overload: Microsoft.Win32.RegistryKey.GetValueKind*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "指定した値を含むサブキーが存在しません。       - または - で指定された名前と値のペア<code> name </code>存在しません。       Windows 95、Windows 98 または Windows Millennium Edition では、この例外はスローされません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  id: GetValueNames
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "このキーに関連付けられているすべての値の名前を表す文字列の配列を取得します。"
  remarks: "キーの値の名前が見つからない場合は、空の配列が返されます。       レジストリ キーは、既定値を持つことができます: 名前/値ペアの名前の空の文字列は、(&quot;&quot;) です。 レジストリ キーの既定値が設定されている場合、GetValueNames メソッドによって返される配列には、空の文字列が含まれています。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/m-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/m-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public string[] GetValueNames ();
    parameters: []
    return:
      type: System.String[]
      description: "現在のキーの値の名前を含む文字列の配列。"
  overload: Microsoft.Win32.RegistryKey.GetValueNames*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーからの読み取りに必要な権限がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "システム エラーが発生しました。たとえば、現在のキーが削除されました。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Handle
  id: Handle
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "取得、 <xref href=&quot;Microsoft.Win32.SafeHandles.SafeRegistryHandle&quot;> </xref>オブジェクトを表すレジストリ キーを現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトによってカプセル化します。"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafeRegistryHandle Handle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeRegistryHandle
      description: "レジストリ キーへのハンドル。"
  overload: Microsoft.Win32.RegistryKey.Handle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "レジストリ キーは閉じています。 閉じられたキーにアクセスできません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "現在のキーの削除など、システム エラーが発生しました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーの読み取りに必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.Name
  id: Name
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "キーの名前を取得します。"
  remarks: "キーの名前には、レジストリで、常に開始位置として、基本キー、たとえば、HKEY_LOCAL_MACHINE このキーの絶対パスが含まれます。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/p-microsoft.win32.regist_0_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/p-microsoft.win32.regist_0_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_0_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "キーの絶対 (限定) 名です。"
  overload: Microsoft.Win32.RegistryKey.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  id: OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しい開きます<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>を表す、指定されたビューを使用してローカル コンピューター上の要求されたキー。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenBaseKey (Microsoft.Win32.RegistryHive hKey, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "開く HKEY。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "使用するレジストリ ビュー。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたレジストリ キー。"
  overload: Microsoft.Win32.RegistryKey.OpenBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>または<code>view</code>が無効です。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、この操作を実行するために必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "新しい開きます<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>をリモート コンピューターで要求されたキーを表すです。"
  remarks: "ローカル コンピューターのレジストリを開く`machineName` <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName>には 要求されたキーは、リモート コンピューター上のルート キーにする必要があり、適切なによって識別される<xref:Microsoft.Win32.RegistryHive>値</xref:Microsoft.Win32.RegistryHive>。       キーをリモートで開くためには、サーバーとクライアント コンピューターの両方必要がありますリモート レジストリ サービスを実行していてリモート管理を有効化します。"
  example:
  - "The following code example shows how to open a registry key on a remote computer and enumerate the values of the key. The remote computer must be running the remote registry service. Specify the name of the remote computer as a command-line argument when invoking the program.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/cpp/e08e963c-edd7-45e7-b967-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/csharp/e08e963c-edd7-45e7-b967-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey.OpenRemoteBaseKey#1](~/add/codesnippet/visualbasic/e08e963c-edd7-45e7-b967-_1.vb)]"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "開くには、HKEY から、 <xref href=&quot;Microsoft.Win32.RegistryHive&quot;> </xref>列挙します。"
    - id: machineName
      type: System.String
      description: "リモート コンピューター。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたレジストリ キー。"
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>正しくありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>見つかりません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、この操作を実行する適切なアクセス許可がありません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  id: OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定されたビューでのリモート コンピューターで要求されたキーを表す新しいレジストリ キーを開きます。"
  remarks: "ローカル コンピューターのレジストリを開く`machineName` <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName>には 要求されたキーは、リモート コンピューター上のルート キーにする必要があり、適切なによって識別される<xref:Microsoft.Win32.RegistryHive>値</xref:Microsoft.Win32.RegistryHive>。       キーをリモートで開くためには、サーバーとクライアント コンピューターの両方必要がありますリモート レジストリ サービスを実行していてリモート管理を有効化します。       64 ビット バージョンの Windows では、レジストリの一部が 32 ビットと 64 ビットのアプリケーション用とは別に格納されます。 32 ビット アプリケーションするビューを 32 ビットと 64 ビット アプリケーションを 64 ビットのビューがあります。 場合`view`は<xref:Microsoft.Win32.RegistryView>がリモート コンピューターには、32 ビット オペレーティング システムが実行されている、返されたキーが使用されます、<xref:Microsoft.Win32.RegistryView>ビュー</xref:Microsoft.Win32.RegistryView> </xref:Microsoft.Win32.RegistryView> 。"
  syntax:
    content: public static Microsoft.Win32.RegistryKey OpenRemoteBaseKey (Microsoft.Win32.RegistryHive hKey, string machineName, Microsoft.Win32.RegistryView view);
    parameters:
    - id: hKey
      type: Microsoft.Win32.RegistryHive
      description: "開く HKEY、 <xref href=&quot;Microsoft.Win32.RegistryHive&quot;> </xref>列挙."
    - id: machineName
      type: System.String
      description: "リモート コンピューター。"
    - id: view
      type: Microsoft.Win32.RegistryView
      description: "使用するレジストリ ビュー。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたレジストリ キー。"
  overload: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hKey</code>または<code>view</code>が無効です。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>machineName</code>見つかりません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>machineName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、この操作の実行に必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  id: OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "読み取り専用とサブキーを取得します。"
  remarks: "その他のメソッドとプロパティを操作できる前に、キーを開く必要があります。 キーを変更するを開く必要がありますのオーバー ロードで、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッドなどの書き込みアクセス権を指定することができますを<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29>オーバー ロードまたは<xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29>オーバー ロードします</xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29></xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29></xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>。       指定したサブキーが見つからない場合、し`null`が返されます。       OpenSubKey メソッドを使用するのには<xref:Microsoft.Win32.RegistryKey>。</xref:Microsoft.Win32.RegistryKey>のインスタンスが必要 <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_11_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_11_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_11_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前または読み取り専用として開くサブキーのパス。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたサブキーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>します。<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーの読み取りに必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したサブキーを読み取りまたは読み取り/書き込み用にアクセスを取得します。"
  remarks: "例外はスローされず、このメソッドが戻る`null`要求されたキーが存在しない場合。       場合`permissionCheck`は<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>場合、に、読み取りと書き込みのため、キーが開かれた`permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>で親キーが開かれた場合を除きに、読み取り用にキーを開く、</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName></xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>または</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       使用するために、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッド、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスがある必要があります</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  example:
  - "The following code example creates a subkey containing 100 key/value pairs and closes it. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck>, records the time it takes to read all the values, and closes the subkey. The example opens the subkey with <xref:Microsoft.Win32.RegistryKeyPermissionCheck> and records the time it takes to read all the values. Finally, the example computes and displays the percentage improvement.  \n  \n [!code-cs[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/csharp/1404fbf5-0fde-46f3-9877-_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey_PermCheck#1](~/add/codesnippet/visualbasic/1404fbf5-0fde-46f3-9877-_1.vb)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck);
    parameters:
    - id: name
      type: System.String
      description: "名前または作成または開くサブキーのパス。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたサブキーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>します。<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>無効な値が含まれています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、レジストリ キーの読み取りに必要なアクセス許可がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  id: OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したサブキーを取得し、書き込みアクセスが、キーに適用するかどうかを指定します。"
  remarks: "このメソッドが戻るかどうかは、要求されたキーのファイルが存在しない、`null`例外をスローする代わりにします。       場合`writable`は`true`、読み取りと書き込みのため、キーに開かれる、それ以外の場合、キーが開きます読み取り専用です。       使用するために、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッドのインスタンスが必要、<xref:Microsoft.Win32.RegistryKey>メソッド</xref:Microsoft.Win32.RegistryKey></xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>。 <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> method to open it, demonstrating both overloads of the method.  \n  \n [!code-cs[RegistryKey.OpenSubKey#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_1_1.cs)]\n [!code-vb[RegistryKey.OpenSubKey#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_1_1.vb)]\n [!code-cpp[RegistryKey.OpenSubKey#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_1_1.cpp)]"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, bool writable);
    parameters:
    - id: name
      type: System.String
      description: "名前または開くサブキーのパス。"
    - id: writable
      type: System.Boolean
      description: "設定<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーへの書き込みアクセスを必要がある場合。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたサブキーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、指定したモードでのレジストリ キーへのアクセスに必要な権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前のサブキーを取得しています。       以降で利用可能[!INCLUDE[net_2015](~/add/includes/net-2015-md.md)]"
  remarks: "その他のメソッドとプロパティを操作できる前に、キーを開く必要があります。 キーを変更するを開く必要がありますのオーバー ロードで、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッドを書き込みアクセス権を指定することができます</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>。"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "名前または作成または開くサブキーのパス。"
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "レジストリ キーの権限。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたサブキーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、指定したモードでのレジストリ キーへのアクセスに必要な権限がありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  id: OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "取得します、指定したサブキーを読み取りまたは読み取り/書き込みのアクセス、指定したアクセス権を要求します。"
  remarks: "例外はスローされず、このメソッドが戻る`null`要求されたキーが存在しない場合。       場合`permissionCheck`は<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>場合、に、読み取りと書き込みのため、キーが開かれた`permissionCheck` <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>.</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>で親キーが開かれた場合を除きに、読み取り用にキーを開く、</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName></xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>または</xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>       指定されたアクセス`permissionCheck`に指定されたアクセスよりも優先`rights`です。 指定する場合など、<xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>の`permissionCheck`と<xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName>の`rights`サブキーに書き込もうとして例外をスローします</xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName></xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName>。       使用するために、<xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A>メソッド、<xref:Microsoft.Win32.RegistryKey>クラス</xref:Microsoft.Win32.RegistryKey>のインスタンスがある必要があります</xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A> <xref:Microsoft.Win32.RegistryKey><xref:Microsoft.Win32.Registry>クラス</xref:Microsoft.Win32.Registry>の静的メンバーのいずれかを使用して、</xref:Microsoft.Win32.RegistryKey>インスタンスを取得するには"
  syntax:
    content: public Microsoft.Win32.RegistryKey OpenSubKey (string name, Microsoft.Win32.RegistryKeyPermissionCheck permissionCheck, System.Security.AccessControl.RegistryRights rights);
    parameters:
    - id: name
      type: System.String
      description: "名前または作成または開くサブキーのパス。"
    - id: permissionCheck
      type: Microsoft.Win32.RegistryKeyPermissionCheck
      description: "読み取り用にキーを開くかどうかを指定する列挙値のいずれかまたは読み取り/書き込みアクセス。"
    - id: rights
      type: System.Security.AccessControl.RegistryRights
      description: "必要なセキュリティのアクセスを指定する列挙値のビットごとの組み合わせ。"
    return:
      type: Microsoft.Win32.RegistryKey
      description: "要求されたサブキーまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、操作に失敗しました。"
  overload: Microsoft.Win32.RegistryKey.OpenSubKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>します。<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>permissionCheck</code>無効な値が含まれています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code>rights</code>無効なレジストリ権限の値が含まれます。       または、ユーザーには、要求されたアクセス許可はありません。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  id: SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "既存のレジストリ キーに Windows アクセス制御セキュリティを適用します。"
  remarks: "レジストリ キーに対するアクセス許可を変更するには、使用、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>を取得するメソッド、<xref:System.Security.AccessControl.RegistrySecurity>既存の Windows アクセス制御セキュリティを表すオブジェクトを変更する<xref:System.Security.AccessControl.RegistrySecurity>オブジェクト、および SetAccessControl メソッドを使用して、キーのセキュリティを更新します</xref:System.Security.AccessControl.RegistrySecurity></xref:System.Security.AccessControl.RegistrySecurity></xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>。      > [!CAUTION] >、<xref:System.Security.AccessControl.RegistrySecurity>に指定されたオブジェクト`registrySecurity`レジストリ キーの既存のセキュリティが置き換えられます</xref:System.Security.AccessControl.RegistrySecurity>。 新しいユーザーのアクセス許可を追加するには、<xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>既存のアクセス制御セキュリティを取得し、それを変更する方法</xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A>を使用します。"
  example:
  - "The following code example creates a test key. The current user is allowed <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights but denied <xref:System.Security.AccessControl.RegistryRights> and <xref:System.Security.AccessControl.RegistryRights> rights. Subsequent attempts to manipulate the key succeed or fail depending on these permissions.  \n  \n Before the key is deleted, the code pauses. You can switch to the registry editor and verify that the same access rights apply when the key is accessed using the registry editor. (This works best if you use **RunAs** from the command line to run the registry editor and the sample code as a local user without administrator rights. The registry editor always allows an administrator to change permissions, even if the particular administrator has been denied those rights. If you have defined a local user named TestUser, the command `runas /user:TestUser cmd` opens a command window from which you can run the registry editor and then the sample code.)  \n  \n [!code-cpp[RegistrySecurity101#1](~/add/codesnippet/cpp/463455ee-8295-4a1a-9af9-_1.cpp)]\n [!code-cs[RegistrySecurity101#1](~/add/codesnippet/csharp/463455ee-8295-4a1a-9af9-_1.cs)]\n [!code-vb[RegistrySecurity101#1](~/add/codesnippet/visualbasic/463455ee-8295-4a1a-9af9-_1.vb)]"
  syntax:
    content: public void SetAccessControl (System.Security.AccessControl.RegistrySecurity registrySecurity);
    parameters:
    - id: registrySecurity
      type: System.Security.AccessControl.RegistrySecurity
      description: "現在のサブキーに適用するアクセス制御セキュリティ。"
  overload: Microsoft.Win32.RegistryKey.SetAccessControl*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "現在<xref href=&quot;Microsoft.Win32.RegistryKey&quot;></xref>オブジェクトは、アクセス制御セキュリティ キーを表すし、呼び出し元を持たない<xref href=&quot;System.Security.AccessControl.RegistryRights&quot;></xref>権限です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>registrySecurity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  id: SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定した名前と値のペアを設定します。"
  remarks: "各レジストリ キーに、多くの値を格納できるため、使用、`name`パラメーターを設定する特定の値を指定します。      > [!NOTE] > レジストリ キーは、任意の名前に関連付けられていない&1; つの値を持つことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を設定するには、いずれかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。       キーの値を設定するためには、書き込みアクセス権を持つキーを開く必要があります。 書き込みアクセス権を持つキーを開くと後、は、そのキーの名前/値ペアのいずれかを変更できます。       場合、指定した`name`存在しないキーが作成され、関連付けられている値に設定されて`value`です。       このオーバー ロード<xref:Microsoft.Win32.RegistryKey.SetValue%2A>64 ビット整数値を文字列として格納 (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>).</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> <xref:Microsoft.Win32.RegistryValueKind>。</xref:Microsoft.Win32.RegistryValueKind>を指定するオーバー ロード</xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>を使用して、値</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>として 64 ビットの数値を格納するには       このオーバー ロード<xref:Microsoft.Win32.RegistryKey.SetValue%2A>としてすべての文字列値を格納<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>環境変数を展開可能な参照が含まれている場合でも、</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:Microsoft.Win32.RegistryKey.SetValue%2A> 。 文字列値に、展開可能な文字列を保存する (<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>)、 <xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29> <xref:Microsoft.Win32.RegistryValueKind>.</xref:Microsoft.Win32.RegistryValueKind>を指定するオーバー ロード</xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29>を使用して</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>       32 ビット整数以外の数値の型は、このメソッドのオーバー ロードで文字列として格納されます。 列挙体の要素は、要素名を含む文字列として格納されます。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。      > [!NOTE] > Windows 98 で、Windows Millennium Edition、レジストリでは、Unicode とすべての Unicode 文字は、すべてのコード ページに対して無効です。 現在のコード ページに対して無効な Unicode 文字は、使用可能な最適の一致に置き換えられます。 例外はスローされません。"
  example:
  - "The following code example shows how the SetValue method determines the registry data type when it sets values. The example creates a test key and adds values of different data types to the key. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-vb[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_10_1.vb)]\n [!code-cs[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/csharp/m-microsoft.win32.regist_10_1.cs)]\n [!code-cpp[Microsoft.Win32.RegistryKey.SetValue1#1](~/add/codesnippet/cpp/m-microsoft.win32.regist_10_1.cpp)]"
  syntax:
    content: public void SetValue (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "格納する値の名前。"
    - id: value
      type: System.Object
      description: "データを格納します。"
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>サポートされていないデータ型です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>は読み取り専用とできません書き込みができません。 たとえば、キーが書き込みアクセスで開かれていません。       - または -、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>オブジェクト、ルート レベル ノードを表すし、オペレーティング システムが Windows Millennium Edition または Windows 98 です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを変更するために必要なアクセス許可がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>オブジェクト、ルート レベル ノードを表すし、オペレーティング システムが Windows 2000、Windows XP、または Windows Server 2003 です。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  id: SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "指定したレジストリ データ型を使用して、レジストリ キーの名前/値ペアの値を設定します。"
  remarks: "各レジストリ キーに、多くの値を格納できるため、使用、`name`パラメーターを設定する特定の値を指定します。      > [!NOTE] > レジストリ キーは、任意の名前に関連付けられていない&1; つの値を持つことができます。 レジストリ エディターでこの無名の値が表示されたら、名の代わりに、文字列「(既定値)」が表示されます。 この無名の値を設定するには、いずれかを指定`null`または空の文字列 (&quot;&quot;) の`name`します。       キーの値を設定するためには、書き込みアクセス権を持つキーを開く必要があります。 書き込みアクセス権を持つキーを開くと後、は、そのキーの名前/値ペアのいずれかを変更できます。       場合、指定した`name`存在しないキーでは、作成、および関連付けられている値に設定されて`value`です。      > [!NOTE] > レジストリ データ型を指定する<xref:Microsoft.Win32.RegistryValueKind>が同じを使用して、<xref:Microsoft.Win32.RegistryKey.SetValue%2A>オーバー ロードします</xref:Microsoft.Win32.RegistryKey.SetValue%2A></xref:Microsoft.Win32.RegistryValueKind>。       場合の指定した種類`value`、指定したとが一致しません`valueKind`、データにすることはできません、変換<xref:System.ArgumentException>がスローされます</xref:System.ArgumentException>。 たとえば、保管、<xref:System.Int64?displayProperty=fullName>として、 <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>、その値が<xref:System.Int32?displayProperty=fullName>.</xref:System.Int32?displayProperty=fullName>の最大値より小さい場合にのみが、</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName> </xref:System.Int64?displayProperty=fullName> <xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>。</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>として&1; つの文字列値を格納することはできません。      > [!NOTE] > ボックス化された値が渡された場合<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>または<xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>、変換が行われるインバリアント カルチャを使用します</xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName></xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName>。      > [!CAUTION] > を公開しない<xref:Microsoft.Win32.RegistryKey>こと悪意のあるプログラムが何千もの無意味なサブキーを作成またはキー/値ペアよう内のオブジェクト</xref:Microsoft.Win32.RegistryKey>。 たとえば、任意のキーまたは値を入力する呼び出し元を許可されません。      > [!NOTE] > Windows 98 で、Windows Millennium Edition、レジストリでは、Unicode とすべての Unicode 文字は、すべてのコード ページに対して無効です。 現在のコード ページに対して無効な Unicode 文字は、使用可能な最適の一致に置き換えられます。 例外はスローされません。"
  example:
  - "The following code example creates a test key and uses the <xref:Microsoft.Win32.RegistryKey.SetValue%2A> method to store several values, specifying the registry data type for each value. The example then reads the name/value pairs and displays them to the console, using the <xref:Microsoft.Win32.RegistryKey.GetValueKind%2A> method to display the corresponding registry data types.  \n  \n [!code-cpp[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/cpp/4d7d6152-5710-4faa-8e5f-_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/csharp/4d7d6152-5710-4faa-8e5f-_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryValueKind#1](~/add/codesnippet/visualbasic/4d7d6152-5710-4faa-8e5f-_1.vb)]"
  syntax:
    content: public void SetValue (string name, object value, Microsoft.Win32.RegistryValueKind valueKind);
    parameters:
    - id: name
      type: System.String
      description: "格納される値の名前。"
    - id: value
      type: System.Object
      description: "データを格納します。"
    - id: valueKind
      type: Microsoft.Win32.RegistryValueKind
      description: "データを格納するときに使用するレジストリ データ型。"
  overload: Microsoft.Win32.RegistryKey.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "型<code> value </code>で指定されたレジストリ データ型と一致しませんでした<code> valueKind </code>、したがって、データが正しく変換されません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>を含む、指定された値が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>は読み取り専用とできません書き込みができません。 たとえば、キーが書き込みアクセスで開かれていません。       - または -、 <xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>オブジェクト、ルート レベル ノードを表すし、オペレーティング システムが Windows Millennium Edition または Windows 98 です。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、作成またはレジストリ キーを変更するために必要なアクセス許可がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>オブジェクト、ルート レベル ノードを表すし、オペレーティング システムが Windows 2000、Windows XP、または Windows Server 2003 です。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  id: SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "現在のキーのサブキーの数を取得します。"
  remarks: "このプロパティは、再帰的にカウント名前ではありません。 名前の数は、呼び出し元のベース レベルでのみを返します。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_1_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_1_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_1_1.vb)]"
  syntax:
    content: public int SubKeyCount { get; }
    return:
      type: System.Int32
      description: "現在のキーのサブキーの数。"
  overload: Microsoft.Win32.RegistryKey.SubKeyCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーの読み取りアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "システム エラーが発生しました、たとえば、現在のキーが削除されています。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ToString
  id: ToString
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "このキーの文字列表現を取得します。"
  remarks: "戻り値には、指定したキーとキーの&16; 進数の値のレジストリ パスが含まれます。 レジストリ パスは、常に始まり、レジストリ ベースのキーのいずれかなど、HKEY_LOCAL_MACHINE 指定したキーの絶対ルートされています。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/cpp/m-microsoft.win32.regist_9_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/csharp/m-microsoft.win32.regist_9_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#4](~/add/codesnippet/visualbasic/m-microsoft.win32.regist_9_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "キーを表す文字列。 指定したキーが有効な場合 (見つかりません) し、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>が返されます。"
  overload: Microsoft.Win32.RegistryKey.ToString*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>アクセスされているが閉じられた (閉じたキーにアクセスすることはできません)。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.ValueCount
  id: ValueCount
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "キーの値の数を取得します。"
  remarks: "各レジストリ キーには、任意の名前に関連付けられていない既定値が含まれています。 使用してこの無名の値を設定することができます、<xref:Microsoft.Win32.RegistryKey.SetValue%2A>メソッドといずれかを指定する`null`または空の文字列 (&quot;&quot;) の`name`</xref:Microsoft.Win32.RegistryKey.SetValue%2A>。 既定値が設定されていることはない場合、には含まれません ValueCount プロパティによって返される合計数設定すると、ただし、常にカウントされます。"
  example:
  - "This code example is part of a larger example provided for the <xref:Microsoft.Win32.RegistryKey> class.  \n  \n [!code-cpp[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/cpp/p-microsoft.win32.regist_2_1.cpp)]\n [!code-cs[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/csharp/p-microsoft.win32.regist_2_1.cs)]\n [!code-vb[Microsoft.Win32.RegistryKey2#2](~/add/codesnippet/visualbasic/p-microsoft.win32.regist_2_1.vb)]"
  syntax:
    content: public int ValueCount { get; }
    return:
      type: System.Int32
      description: "キーの名前/値ペアの数。"
  overload: Microsoft.Win32.RegistryKey.ValueCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "ユーザーには、キーの読み取りアクセス許可がありません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;Microsoft.Win32.RegistryKey&quot;> </xref>操作対象が閉じられた (閉じたキーにアクセスすることはできません)。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ユーザーには、必要なレジストリ権限がありません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "システム エラーが発生しました、たとえば、現在のキーが削除されています。"
  platform:
  - net462
- uid: Microsoft.Win32.RegistryKey.View
  id: View
  parent: Microsoft.Win32.RegistryKey
  langs:
  - csharp
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
  type: Property
  assemblies:
  - mscorlib
  namespace: Microsoft.Win32
  summary: "レジストリ キーの作成に使用されたビューを取得します。"
  remarks: "64 ビット バージョンの Windows では、レジストリの一部が 32 ビットと 64 ビットのアプリケーション用とは別に格納されます。 32 ビット アプリケーションするビューを 32 ビットと 64 ビット アプリケーションを 64 ビットのビューがあります。       ビューが<xref:Microsoft.Win32.RegistryKey>。</xref:Microsoft.Win32.RegistryKey>の実際のビューに常に対応するいると仮定しないで"
  syntax:
    content: public Microsoft.Win32.RegistryView View { get; }
    return:
      type: Microsoft.Win32.RegistryView
      description: "レジストリ キーの作成に使用されたビューです。       - または - <xref href=&quot;Microsoft.Win32.RegistryView&quot;></xref>ビューが使用されていない場合は、します。"
  overload: Microsoft.Win32.RegistryKey.View*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.Win32.RegistryKey.Close
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close()
  nameWithType: RegistryKey.Close()
  fullName: Microsoft.Win32.RegistryKey.Close()
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String)
  nameWithType: RegistryKey.CreateSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String)
- uid: Microsoft.Win32.RegistryKey
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKey
  nameWithType: RegistryKey
  fullName: Microsoft.Win32.RegistryKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKeyPermissionCheck
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryKeyPermissionCheck
  nameWithType: RegistryKeyPermissionCheck
  fullName: Microsoft.Win32.RegistryKeyPermissionCheck
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions)
- uid: Microsoft.Win32.RegistryOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryOptions
  nameWithType: RegistryOptions
  fullName: Microsoft.Win32.RegistryOptions
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistrySecurity)
- uid: System.Security.AccessControl.RegistrySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistrySecurity
  nameWithType: RegistrySecurity
  fullName: System.Security.AccessControl.RegistrySecurity
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,System.Boolean,Microsoft.Win32.RegistryOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,Boolean,RegistryOptions)
  nameWithType: RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,Boolean,RegistryOptions)
- uid: Microsoft.Win32.RegistryKey.CreateSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,Microsoft.Win32.RegistryOptions,System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  nameWithType: RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.CreateSubKey(String,RegistryKeyPermissionCheck,RegistryOptions,RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String)
  nameWithType: RegistryKey.DeleteSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String)
  nameWithType: RegistryKey.DeleteSubKeyTree(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String)
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree(String,Boolean)
  nameWithType: RegistryKey.DeleteSubKeyTree(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteSubKeyTree(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String)
  nameWithType: RegistryKey.DeleteValue(String)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String)
- uid: Microsoft.Win32.RegistryKey.DeleteValue(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue(String,Boolean)
  nameWithType: RegistryKey.DeleteValue(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.DeleteValue(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.Dispose
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose()
  nameWithType: RegistryKey.Dispose()
  fullName: Microsoft.Win32.RegistryKey.Dispose()
- uid: Microsoft.Win32.RegistryKey.Flush
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush()
  nameWithType: RegistryKey.Flush()
  fullName: Microsoft.Win32.RegistryKey.Flush()
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle)
- uid: Microsoft.Win32.SafeHandles.SafeRegistryHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeRegistryHandle
  nameWithType: SafeRegistryHandle
  fullName: Microsoft.Win32.SafeHandles.SafeRegistryHandle
- uid: Microsoft.Win32.RegistryKey.FromHandle(Microsoft.Win32.SafeHandles.SafeRegistryHandle,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle(SafeRegistryHandle,RegistryView)
  nameWithType: RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.FromHandle(SafeRegistryHandle,RegistryView)
- uid: Microsoft.Win32.RegistryView
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryView
  nameWithType: RegistryView
  fullName: Microsoft.Win32.RegistryView
- uid: Microsoft.Win32.RegistryKey.GetAccessControl
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl()
  nameWithType: RegistryKey.GetAccessControl()
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl()
- uid: Microsoft.Win32.RegistryKey.GetAccessControl(System.Security.AccessControl.AccessControlSections)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl(AccessControlSections)
  nameWithType: RegistryKey.GetAccessControl(AccessControlSections)
  fullName: Microsoft.Win32.RegistryKey.GetAccessControl(AccessControlSections)
- uid: System.Security.AccessControl.AccessControlSections
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlSections
  nameWithType: AccessControlSections
  fullName: System.Security.AccessControl.AccessControlSections
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames()
  nameWithType: RegistryKey.GetSubKeyNames()
  fullName: Microsoft.Win32.RegistryKey.GetSubKeyNames()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String)
  nameWithType: RegistryKey.GetValue(String)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object)
  nameWithType: RegistryKey.GetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.GetValue(System.String,System.Object,Microsoft.Win32.RegistryValueOptions)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue(String,Object,RegistryValueOptions)
  nameWithType: RegistryKey.GetValue(String,Object,RegistryValueOptions)
  fullName: Microsoft.Win32.RegistryKey.GetValue(String,Object,RegistryValueOptions)
- uid: Microsoft.Win32.RegistryValueOptions
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueOptions
  nameWithType: RegistryValueOptions
  fullName: Microsoft.Win32.RegistryValueOptions
- uid: Microsoft.Win32.RegistryKey.GetValueKind(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind(String)
  nameWithType: RegistryKey.GetValueKind(String)
  fullName: Microsoft.Win32.RegistryKey.GetValueKind(String)
- uid: Microsoft.Win32.RegistryValueKind
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryValueKind
  nameWithType: RegistryValueKind
  fullName: Microsoft.Win32.RegistryValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames()
  nameWithType: RegistryKey.GetValueNames()
  fullName: Microsoft.Win32.RegistryKey.GetValueNames()
- uid: Microsoft.Win32.RegistryKey.Handle
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
  fullName: Microsoft.Win32.RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
  fullName: Microsoft.Win32.RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey(RegistryHive,RegistryView)
  nameWithType: RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenBaseKey(RegistryHive,RegistryView)
- uid: Microsoft.Win32.RegistryHive
  parent: Microsoft.Win32
  isExternal: false
  name: RegistryHive
  nameWithType: RegistryHive
  fullName: Microsoft.Win32.RegistryHive
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String)
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(Microsoft.Win32.RegistryHive,System.String,Microsoft.Win32.RegistryView)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  nameWithType: RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
  fullName: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey(RegistryHive,String,RegistryView)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String)
  nameWithType: RegistryKey.OpenSubKey(String)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Boolean)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,Boolean)
  nameWithType: RegistryKey.OpenSubKey(String,Boolean)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,Boolean)
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryRights)
- uid: System.Security.AccessControl.RegistryRights
  parent: System.Security.AccessControl
  isExternal: false
  name: RegistryRights
  nameWithType: RegistryRights
  fullName: System.Security.AccessControl.RegistryRights
- uid: Microsoft.Win32.RegistryKey.OpenSubKey(System.String,Microsoft.Win32.RegistryKeyPermissionCheck,System.Security.AccessControl.RegistryRights)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  nameWithType: RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
  fullName: Microsoft.Win32.RegistryKey.OpenSubKey(String,RegistryKeyPermissionCheck,RegistryRights)
- uid: Microsoft.Win32.RegistryKey.SetAccessControl(System.Security.AccessControl.RegistrySecurity)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl(RegistrySecurity)
  nameWithType: RegistryKey.SetAccessControl(RegistrySecurity)
  fullName: Microsoft.Win32.RegistryKey.SetAccessControl(RegistrySecurity)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object)
  nameWithType: RegistryKey.SetValue(String,Object)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object)
- uid: Microsoft.Win32.RegistryKey.SetValue(System.String,System.Object,Microsoft.Win32.RegistryValueKind)
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue(String,Object,RegistryValueKind)
  nameWithType: RegistryKey.SetValue(String,Object,RegistryValueKind)
  fullName: Microsoft.Win32.RegistryKey.SetValue(String,Object,RegistryValueKind)
- uid: Microsoft.Win32.RegistryKey.SubKeyCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
  fullName: Microsoft.Win32.RegistryKey.SubKeyCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Win32.RegistryKey.ToString
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString()
  nameWithType: RegistryKey.ToString()
  fullName: Microsoft.Win32.RegistryKey.ToString()
- uid: Microsoft.Win32.RegistryKey.ValueCount
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
  fullName: Microsoft.Win32.RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
  fullName: Microsoft.Win32.RegistryKey.View
- uid: Microsoft.Win32.RegistryKey.Close*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Close
  nameWithType: RegistryKey.Close
- uid: Microsoft.Win32.RegistryKey.CreateSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: CreateSubKey
  nameWithType: RegistryKey.CreateSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKey
  nameWithType: RegistryKey.DeleteSubKey
- uid: Microsoft.Win32.RegistryKey.DeleteSubKeyTree*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteSubKeyTree
  nameWithType: RegistryKey.DeleteSubKeyTree
- uid: Microsoft.Win32.RegistryKey.DeleteValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: DeleteValue
  nameWithType: RegistryKey.DeleteValue
- uid: Microsoft.Win32.RegistryKey.Dispose*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Dispose
  nameWithType: RegistryKey.Dispose
- uid: Microsoft.Win32.RegistryKey.Flush*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Flush
  nameWithType: RegistryKey.Flush
- uid: Microsoft.Win32.RegistryKey.FromHandle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: FromHandle
  nameWithType: RegistryKey.FromHandle
- uid: Microsoft.Win32.RegistryKey.GetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetAccessControl
  nameWithType: RegistryKey.GetAccessControl
- uid: Microsoft.Win32.RegistryKey.GetSubKeyNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetSubKeyNames
  nameWithType: RegistryKey.GetSubKeyNames
- uid: Microsoft.Win32.RegistryKey.GetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValue
  nameWithType: RegistryKey.GetValue
- uid: Microsoft.Win32.RegistryKey.GetValueKind*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueKind
  nameWithType: RegistryKey.GetValueKind
- uid: Microsoft.Win32.RegistryKey.GetValueNames*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: GetValueNames
  nameWithType: RegistryKey.GetValueNames
- uid: Microsoft.Win32.RegistryKey.Handle*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Handle
  nameWithType: RegistryKey.Handle
- uid: Microsoft.Win32.RegistryKey.Name*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: Name
  nameWithType: RegistryKey.Name
- uid: Microsoft.Win32.RegistryKey.OpenBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenBaseKey
  nameWithType: RegistryKey.OpenBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenRemoteBaseKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenRemoteBaseKey
  nameWithType: RegistryKey.OpenRemoteBaseKey
- uid: Microsoft.Win32.RegistryKey.OpenSubKey*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: OpenSubKey
  nameWithType: RegistryKey.OpenSubKey
- uid: Microsoft.Win32.RegistryKey.SetAccessControl*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetAccessControl
  nameWithType: RegistryKey.SetAccessControl
- uid: Microsoft.Win32.RegistryKey.SetValue*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SetValue
  nameWithType: RegistryKey.SetValue
- uid: Microsoft.Win32.RegistryKey.SubKeyCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: SubKeyCount
  nameWithType: RegistryKey.SubKeyCount
- uid: Microsoft.Win32.RegistryKey.ToString*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ToString
  nameWithType: RegistryKey.ToString
- uid: Microsoft.Win32.RegistryKey.ValueCount*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: ValueCount
  nameWithType: RegistryKey.ValueCount
- uid: Microsoft.Win32.RegistryKey.View*
  parent: Microsoft.Win32.RegistryKey
  isExternal: false
  name: View
  nameWithType: RegistryKey.View
