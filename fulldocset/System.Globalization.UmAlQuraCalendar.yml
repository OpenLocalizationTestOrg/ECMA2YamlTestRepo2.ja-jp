### YamlMime:ManagedReference
items:
- uid: System.Globalization.UmAlQuraCalendar
  id: UmAlQuraCalendar
  children:
  - System.Globalization.UmAlQuraCalendar.#ctor
  - System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.UmAlQuraCalendar.AlgorithmType
  - System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.UmAlQuraCalendar.Eras
  - System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  - System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  - System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  - System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  langs:
  - csharp
  name: UmAlQuraCalendar
  nameWithType: UmAlQuraCalendar
  fullName: System.Globalization.UmAlQuraCalendar
  type: Class
  summary: "サウジイ スラム暦 (ウムアルクラ) 暦を表します。"
  remarks: "UmAlQuraCalendar クラスとほぼ同じ、<xref:System.Globalization.HijriCalendar>クラス、ウムアルクラ暦の日付を計算することができます、サウジイ政府からライセンス テーブルに基づくアルゴリズムを使用して点を除いて express a 1500 年. h の. に日付はサポートしていません、<xref:System.Globalization.HijriCalendar.HijriAdjustment%2A>プロパティ</xref:System.Globalization.HijriCalendar.HijriAdjustment%2A></xref:System.Globalization.HijriCalendar>。      > [!NOTE] > について UmAlQuraCalendar クラスと、その他の calendar クラスを使用して、.NET Framework では、次を参照してください。[カレンダーの使用](~/add/includes/ajax-current-ext-md.md)です。       UmAlQuraCalendar クラスの各月に 29 であるか、または 30 日が、通常難しく順序なしです。 イスラム暦のドキュメントには、毎月の対応する曜日を示すテーブルが利用できますが、一方、ウムアルクラ暦のような一般的なテーブルを生成できるはされません。       イスラム暦の詳細については、<xref:System.Globalization.HijriCalendar>クラス</xref:System.Globalization.HijriCalendar>を参照してください。       **注**UmAlQuraCalendar クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
  syntax:
    content: 'public class UmAlQuraCalendar : System.Globalization.Calendar'
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: UmAlQuraCalendar()
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar()
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  syntax:
    content: public UmAlQuraCalendar ();
    parameters: []
  overload: System.Globalization.UmAlQuraCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "日付を指定した初期の日付から指定月数を計算します。"
  remarks: "結果の日の部分<xref:System.DateTime>が影響を受けるは、結果の日は、結果として得られる結果の年の月の有効な曜日ではない場合</xref:System.DateTime>。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果として得られる<xref:System.DateTime>結果の月が指定された<xref:System.DateTime>。</xref:System.DateTime>の年を超えた場合は、影響を受ける</xref:System.DateTime>の年の部分 この実装では、現在の時代のみをサポートします。 結果の年が指定された<xref:System.DateTime>。</xref:System.DateTime>の時代 (年号) を超えた場合、そのため、例外がスローされます。 結果として得られる<xref:System.DateTime>は指定した<xref:System.DateTime>。</xref:System.DateTime>と同じ</xref:System.DateTime>の時刻の部分       たとえば、指定した月が場合 Zulkadah、30 日間、指定された日付は、その月の 30 日の値と、`months`パラメーターが 3 の場合、結果として得られる年は 1 つ以上の指定した年、月が Safar、日、29 日、最後の日 Safar であります。       場合の値、`months`パラメーターが負の場合、<xref:System.DateTime>指定した<xref:System.DateTime>.</xref:System.DateTime>よりも前か</xref:System.DateTime>の結果として得られる       <xref:System.DateTime.Kind%2A>返される<xref:System.DateTime>値は常に等しい<xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A> 保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出して、<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>メソッドは、次の例のように</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName></xref:System.DateTime.Kind%2A>。       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.u_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.u_4_1.cs)]"
  example:
  - "The following example instantiates a <xref:System.DateTime> value and displays the values of several of its components in the Um Al Qura calendar. Next, it calls the <xref:System.Globalization.UmAlQuraCalendar.AddYears%2A> and AddMonths methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_4_2.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_4_2.cs)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "月数を加算する日付。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    - id: months
      type: System.Int32
      description: "正または負の追加する月数。"
    return:
      type: System.DateTime
      description: "指定された月数を追加することによって生成されるとき、日付、 <code> months </code>パラメーターで指定された日付を<code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "結果として得られる日付でサポートされる範囲外です、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>-120,000 120,000 より大きいか未満です。       - または -<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した初期の日付から指定年数をある日を計算します。"
  remarks: "結果の日の部分<xref:System.DateTime>が影響を受けるは、結果の日は、結果として得られる結果の年の月の有効な曜日ではない場合</xref:System.DateTime>。 結果として得られる結果の年の月の最後の有効な日付に変更されます。 結果として得られる<xref:System.DateTime>は指定した<xref:System.DateTime>。</xref:System.DateTime>と同じ</xref:System.DateTime>の月の部分 この実装では、現在の時代のみをサポートします。 結果の年が指定された<xref:System.DateTime>。</xref:System.DateTime>の時代 (年号) を超えた場合、そのため、例外がスローされます。 結果として得られる<xref:System.DateTime>は指定した<xref:System.DateTime>。</xref:System.DateTime>と同じ</xref:System.DateTime>の時刻の部分       たとえば、閏年が 29 日まで、を除き平年の場合は 30 日間です。 指定した日付がうるう年に閏年の 30 日と値の場合、`years`パラメーターが 1 の場合、結果として得られる日付は次の年の閏年 29 日。       場合`years`が負の値、<xref:System.DateTime>指定した<xref:System.DateTime>.</xref:System.DateTime>よりも前か</xref:System.DateTime>の結果として得られる       <xref:System.DateTime.Kind%2A>返される<xref:System.DateTime>値は常に等しい<xref:System.DateTimeKind?displayProperty=fullName>。</xref:System.DateTimeKind?displayProperty=fullName></xref:System.DateTime>のプロパティ</xref:System.DateTime.Kind%2A> 保持する、<xref:System.DateTime.Kind%2A>のプロパティ、`time`パラメーターを呼び出して、<xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>メソッドは、次の例のように</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName></xref:System.DateTime.Kind%2A>。       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.u_2_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.u_2_1.cs)]"
  example:
  - "The following example instantiates a <xref:System.DateTime> value and displays the values of several of its components in the Um AL Qura calendar. Next, it calls the AddYears and <xref:System.Globalization.UmAlQuraCalendar.AddMonths%2A> methods to add 2 years and 10 months in the Um Al Qura calendar to the date value. Finally, it again displays the values of these date components in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_2_2.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_2_2.cs)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "年数を加算する日付。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    - id: years
      type: System.Int32
      description: "追加する年の正または負の数。"
    return:
      type: System.DateTime
      description: "指定された年の数を加算して日付が返されます、 <code> years </code>パラメーターで指定された日付を<code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "結果として得られる日付でサポートされる範囲外です、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>years</code>-10,000 10,000 より大きいか小さいがします。       - または -<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
  fullName: System.Globalization.UmAlQuraCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "現在の暦の太陽暦、太陰暦、または両方の組み合わせを示す値を取得します。"
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.u_0_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.u_0_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "常に返します<xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;></xref>です。"
  overload: System.Globalization.UmAlQuraCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定された年より前にある年の日数の数を取得、<xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>プロパティ</xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>。"
  remarks: "このプロパティは、384 の定数値を返します。"
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "<xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>。</xref:System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*>で指定された年より前にある年の日数"
  overload: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.Eras
  id: Eras
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
  fullName: System.Globalization.UmAlQuraCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "現在のサポートされる時代 (年号) の一覧を取得<xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;></xref>です。"
  remarks: 'イスラム暦の日付が&1; つの時代 (年号) を認識します a. h.。 (ラテン&quot;Anno Hegirae&quot;、「年の移行には、」のムハマッド (PBUH) ふもとからの移行をつまり)。 このプロパティは、常に&1; つだけの要素を含む配列を返します。'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "ある値を持つ要素が&1; つだけで構成される配列<xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>です。"
  overload: System.Globalization.UmAlQuraCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が発生する月の日を計算します。"
  remarks: ''
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_7_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_7_1.cs)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    return:
      type: System.Int32
      description: "によって指定された月の日を表す 1 ~ 30 の整数、 <code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が発生する曜日を計算します。"
  remarks: "<xref:System.DayOfWeek>値は次のとおり: |DayOfWeek 値 | ことを示します |  |---------------------|---------------------|  |日曜日 | الاحد (Al Ahad) |  |月曜日 | الاثنين (Al Ithnayn) |  |火曜日 | الثلاثاء (Thulaathaa に &quot;) |  |水曜日 | الاربعاء (Al Arbi&quot;aa&quot;) |  |木曜日 | الخميس (Al Khamiis) |  |金曜日 | الجمعة (Al Jumu&quot;ah) |  |土曜日 | السبت (として Sabt) |</xref:System.DayOfWeek>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_1_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_1_1.cs)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    return:
      type: System.DayOfWeek
      description: "A<xref:System.DayOfWeek>で指定された週の日を表す値、 <code> time </code>パラメーター</xref:System.DayOfWeek> 。"
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfWeek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が発生する年の日を計算します。"
  remarks: "その年の日付は、その年の最初の日付から日数として定義されます。 たとえば、GetDayOfYear メソッドは、year、および最後の月の最後の日の年の日数の合計数の最初の月の最初の日に 1 を返します。"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmALQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_0_1.vb)]\n [!code-cs[System.Globalization.UmALQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_0_1.cs)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    return:
      type: System.Int32
      description: "指定された年の日を表す 1 ~ 355 の整数、 <code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した年と時代 (年号) の指定した月の日数を計算します。"
  remarks: "このメソッドは、平年閏年であると、指定した月に異なる数の日数を返します。 たとえば、このメソッドを返します 29 または 30 閏年の (`month` = 12) かどうかに応じて、`year`が閏年であります。"
  example:
  - "The following example calls the GetDaysInMonth method to get the number of days in each month of five consecutive years.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/0de53081-7e5b-40a6-97f4-_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/0de53081-7e5b-40a6-97f4-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: month
      type: System.Int32
      description: "1 ~ 12 月を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した年と時代 (年号) の指定した月の日数。 戻り値は、共通の年度、閏年の 30 29 です。"
  overload: System.Globalization.UmAlQuraCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年の日数を計算します。"
  remarks: ''
  example:
  - "The following example calls the GetDaysInYear method to get the number of days in ten consecutive years in each era supported by the <xref:System.Globalization.UmAlQuraCalendar> class.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.u_8_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.u_8_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "指定した年と時代 (年号) の日数。 日数の数が 354 平年または 355 はうるう年にします。"
  overload: System.Globalization.UmAlQuraCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: UmAlQuraCalendar.GetEra(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が発生した時代 (年号) を計算します。"
  remarks: '1 つの時代 (年号) を認識するウムアルクラ暦: a. h. (ラテン&quot;Anno Hegirae&quot;、「年の移行には、」のムハマッド (PBUH) ふもとからの移行をつまり)。'
  example:
  - "The following example displays the values of several components of a date in the Um Al Qura calendar.  \n  \n [!code-vb[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/visualbasic/m-system.globalization.u_5_1.vb)]\n [!code-cs[System.Globalization.UmAlQuraCalendar.AddMonths#1](~/add/codesnippet/csharp/m-system.globalization.u_5_1.cs)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。"
    return:
      type: System.Int32
      description: "常に返します、 <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;> </xref>値。"
  overload: System.Globalization.UmAlQuraCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した年と時代 (年号) の閏月を計算します。"
  remarks: "閏月の概念をサポートする予定表、閏月は特定の月の後、または年のすべての月の後にことができます。 たとえば、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>メソッドは、1 ~ 13 を示す、指定した日に関連付けられている月の範囲数を返します</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>。 場合は、その年の 8 と 9 番目の月が閏月、<xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>メソッド leap 8 番目の月を 9 と 10 の 9 番目の月の 8 番目の月の 8 が返されます</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>。"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "常に 0 ため、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは閏月をサポートしていません。"
  overload: System.Globalization.UmAlQuraCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>より小さい 1318 1450 より大きい。       -or-       <code>era</code> is not <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が発生する月を計算します。"
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars. The GetMonth method is used to retrieve the month of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/m-system.globalization.u_6_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/m-system.globalization.u_6_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    return:
      type: System.Int32
      description: "指定された日付の月を表す 1 ~ 12 の整数、 <code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年の月数を計算します。"
  remarks: ''
  example:
  - "The following example calls the GetMonthsInYear method to determine the number of months in four consecutive years, and then calls the <xref:System.Globalization.UmAlQuraCalendar.GetDaysInMonth%2A> method to determine how many days there are in each month.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/435027f7-d766-47b7-be58-_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/435027f7-d766-47b7-be58-_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuaraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Int32
      description: "常に 12 です。"
  overload: System.Globalization.UmAlQuraCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>このカレンダーでサポートされる範囲外です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>era</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した<xref:System.DateTime>。</xref:System.DateTime>で表される日付の年を計算します。"
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars. The GetYear method is used to retrieve the year of the minimum and maximum supported dates in the Um Al Qura calendar if it is not the current culture's current calendar.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/m-system.globalization.u_9_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/m-system.globalization.u_9_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "読み取る日付値。 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは、04/30/1900 00.00.00 (グレゴリオ暦) ~ 11/16/2077 から日付のみをサポートしている 23時 59分: 59 (グレゴリオ暦)。"
    return:
      type: System.Int32
      description: "指定された年を表す整数、 <code> time </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した日付が閏日であるかどうかを判断します。"
  remarks: "閏日は、閏年であるだけで発生する日です。"
  example:
  - "The following example calls the IsLeapDay method for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/csharp/2ddffb14-73ba-4c58-a47b-_1.cs)]\n [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/cpp/2ddffb14-73ba-4c58-a47b-_1.cpp)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/2ddffb14-73ba-4c58-a47b-_1.vb)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: month
      type: System.Int32
      description: "1 ~ 12 月を表す整数。"
    - id: day
      type: System.Int32
      description: "1 ~ 30 日を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定された日付が閏日である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 戻り値は常に<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ため、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスがうるう年日数をサポートしていません。"
  overload: System.Globalization.UmAlQuraCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、 <code>day</code>、または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した年と時代 (年号) の指定した月が閏月かどうかを判断します。"
  remarks: "閏月は、うるう年でのみ発生する月全体です。"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: month
      type: System.Int32
      description: "1 ~ 12 月を表す整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "常に<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ため、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスは閏月をサポートしていません。"
  overload: System.Globalization.UmAlQuraCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "指定した時代 (年号) の指定した年が閏年であるかどうかを判断します。"
  remarks: "共通の年度平年の日数があり、閏年 355 日。"
  example:
  - "The following example lists the number of days in ten consecutive years and calls the IsLeapYear method to determine which years are leap years.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.u_3_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.u_3_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した年が閏年である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Globalization.UmAlQuraCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "このカレンダーでサポートされている最新の日時を取得します。"
  remarks: >-
    > [!NOTE]

    >  Starting with the [!INCLUDE[net_v45](~/add/includes/ajax-current-ext-md.md)], the value of the MaxSupportedDateTime property is 11/16/2077. In previous versions of the .NET Framework, its value is the last moment of May 13, 2029 C.E. in the Gregorian calendar.
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/p-system.globalization.u_2_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/p-system.globalization.u_2_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最新の日付と時刻でサポートされている、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラス、これは 2077 年 11 月 16日西暦の最後の時点と同じ グレゴリオ暦です。"
  overload: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "このカレンダーでサポートされている最も古い日時を取得します。"
  remarks: ''
  example:
  - "The following example displays the date ranges supported by the <xref:System.Globalization.UmAlQuraCalendar> class in both the Gregorian and Um Al Qura calendars.  \n  \n [!code-cs[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/csharp/p-system.globalization.u_1_1.cs)]\n [!code-vb[System.Globalization.UmAlQuraCalendar.GetMonth#1](~/add/codesnippet/visualbasic/p-system.globalization.u_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "最も古い日付と時刻でサポートされている、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>紀元 1900 年 4 月 30 日の最初の瞬間に相当クラス グレゴリオ暦です。"
  overload: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "返します、<xref:System.DateTime>指定した日付、時刻、および時代 (年号) に設定されている</xref:System.DateTime>。"
  remarks: "ToDateTime メソッドは、現在の暦で日付グレゴリオ暦の日付に変換できるので便利です。 グレゴリオ暦の日付、後で使用できます、たとえば、さまざまなカレンダーの日付を比較または等価の日付を特定の暦で作成します。"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "たくさん。"
    - id: month
      type: System.Int32
      description: "1 ~ 12 月を表す整数。"
    - id: day
      type: System.Int32
      description: "1 ~ 29 日を表す整数。"
    - id: hour
      type: System.Int32
      description: "時間を表す 0 ~ 23 の整数。"
    - id: minute
      type: System.Int32
      description: "0 ~ 59 分を表す整数。"
    - id: second
      type: System.Int32
      description: "0 ~ 59 秒を表す整数。"
    - id: millisecond
      type: System.Int32
      description: "ミリ秒を表す 0 ~ 999 の整数。"
    - id: era
      type: System.Int32
      description: "時代 (年号)。 Specify <xref uid=&quot;langword_csharp_UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; name=&quot;UmAlQuraCalendar.Eras[UmAlQuraCalendar.CurrentEra]&quot; href=&quot;&quot;></xref> or <xref href=&quot;System.Globalization.UmAlQuraCalendar.UmAlQuraEra&quot;></xref>."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>指定した日付と現在の時代 (年号) の時刻に設定されている</xref:System.DateTime>。"
  overload: System.Globalization.UmAlQuraCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>、 <code>month</code>、 <code>day</code>、または<code>era</code>でサポートされている範囲外である、 <xref href=&quot;System.Globalization.UmAlQuraCalendar&quot;> </xref>クラスです。       - または -<code>hour</code>が 23 より大きいか、0 より小さい。       - または -<code>minute</code>が 59 より大きいか、0 より小さい。       - または -<code>second</code>が 59 より大きいか、0 より小さい。       - または -<code>millisecond</code>がゼロ未満か 999 を超えています。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: UmAlQuraCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "使用して、指定された年を&4; 桁の年に変換、<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*>プロパティを適切な世紀を決定します</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*>。"
  remarks: "ToFourDigitYear メソッドを使用して、 `year` 、パラメーター、<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>プロパティ、および年を 4 桁の年を計算します</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>。 4 桁の年は 2 桁の数字の唯一の検索によって決まります`year`その 100 年間の範囲内のパラメーターです。 たとえば場合、<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>設定されている 1429 に 100 年の範囲がから</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>。 そのため、30 の 2 桁の値は、2 桁の値は 29 と 1429 として解釈されます、1330、として解釈されます。       場合、<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>プロパティは、特殊な値 99、ToFourDigitYear メソッドは、地域の設定を無視し、言語は、コントロール パネルの オプションしを返します、`year`パラメーター</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A> 。       ToFourDigitYear には、2 桁または&4; 桁の年のいずれかがサポートしています。 値によると 4 桁の値に変換するメソッドを 2 桁の年の値 (100 よりも小さい) を渡すと、<xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>適切な 4 桁の年を表す値</xref:System.Globalization.UmAlQuraCalendar.TwoDigitYearMax%2A>。 ToFourDigitYear にサポートされている暦の範囲内にある&4; 桁の年の値を提供すると、アプリケーションの場合は、実際の入力値を返します。 アプリケーションはサポートされているカレンダー範囲では、4 桁の値が指定した場合、または負の値が渡された場合は、メソッドは例外をスローします。"
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "0 ~ 99 の場合、または 1318 1450 ~ 4 桁ウムアルクラ暦の年から 2 桁の年。"
    return:
      type: System.Int32
      description: "場合、 <code> year </code>パラメーターが 2 桁の年、戻り値は、対応する 4 桁の年。 場合、 <code> year </code>パラメーターは、4 桁の年、戻り値は、変更されていない<code> year </code>パラメーター。"
  overload: System.Globalization.UmAlQuraCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>このカレンダーでサポートされる範囲外です。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
  fullName: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "取得または 2 桁の年を表すことができる 100 年の範囲の最後の年を設定します。"
  remarks: "このプロパティは、2 桁の年を 4 桁の年に適切に変換を使用します。 たとえば、このプロパティが 1429 に設定されている場合、100 年範囲です。 そのため、30 の 2 桁の値は、2 桁の値は 29 と 1429 として解釈されます、1330、として解釈されます。       このプロパティの初期値は、コントロール パネルの地域と言語のオプション部分の設定から取得されます。 ただし、その情報を<xref:System.AppDomain>。</xref:System.AppDomain>の有効期間中に変更できます。 <xref:System.Globalization.UmAlQuraCalendar>クラスには、システム設定の変更は検出されません自動的にします</xref:System.Globalization.UmAlQuraCalendar>。       特殊値 99 原因、<xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>をシステムの設定を無視し、指定した年を返すメソッドが変更されません</xref:System.Globalization.UmAlQuraCalendar.ToFourDigitYear%2A>。"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "2 桁の年を表すことができる 100 年の範囲の最後の年。"
  overload: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "このカレンダーは、読み取り専用です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定操作で、ウムアルクラ カレンダー年の値より小さい 1318 が 99 でないか 1450 を超えています。"
  platform:
  - net462
- uid: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  id: UmAlQuraEra
  parent: System.Globalization.UmAlQuraCalendar
  langs:
  - csharp
  name: UmAlQuraEra
  nameWithType: UmAlQuraCalendar.UmAlQuraEra
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "現在の時代 (年号) を表します。 このフィールドは定数です。"
  remarks: "UmAlQuraEra フィールドの値は 1 です。       1 つの時代 (年号) を認識するウムアルクラ暦: a. h. (ラテン&quot;Anno Hegirae&quot;、「年の移行には、」のムハマッド (PBUH) ふもとからの移行をつまり)。"
  syntax:
    content: public const int UmAlQuraEra = 1;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.UmAlQuraCalendar.#ctor
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraCalendar()
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar()
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraCalendar()
- uid: System.Globalization.UmAlQuraCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.UmAlQuraCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: UmAlQuraCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
  fullName: System.Globalization.UmAlQuraCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.UmAlQuraCalendar.Eras
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
  fullName: System.Globalization.UmAlQuraCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetEra(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: UmAlQuraCalendar.GetEra(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetEra(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: UmAlQuraCalendar.GetMonth(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonth(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.GetYear(System.DateTime)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: UmAlQuraCalendar.GetYear(DateTime)
  fullName: System.Globalization.UmAlQuraCalendar.GetYear(DateTime)
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: UmAlQuraCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
  fullName: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: UmAlQuraCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.UmAlQuraCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
  fullName: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax
- uid: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraEra
  nameWithType: UmAlQuraCalendar.UmAlQuraEra
  fullName: System.Globalization.UmAlQuraCalendar.UmAlQuraEra
- uid: System.Globalization.UmAlQuraCalendar.#ctor*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: UmAlQuraCalendar
  nameWithType: UmAlQuraCalendar.UmAlQuraCalendar
- uid: System.Globalization.UmAlQuraCalendar.AddMonths*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddMonths
  nameWithType: UmAlQuraCalendar.AddMonths
- uid: System.Globalization.UmAlQuraCalendar.AddYears*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AddYears
  nameWithType: UmAlQuraCalendar.AddYears
- uid: System.Globalization.UmAlQuraCalendar.AlgorithmType*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: UmAlQuraCalendar.AlgorithmType
- uid: System.Globalization.UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: UmAlQuraCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.UmAlQuraCalendar.Eras*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: Eras
  nameWithType: UmAlQuraCalendar.Eras
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: UmAlQuraCalendar.GetDayOfMonth
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfWeek*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: UmAlQuraCalendar.GetDayOfWeek
- uid: System.Globalization.UmAlQuraCalendar.GetDayOfYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: UmAlQuraCalendar.GetDayOfYear
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: UmAlQuraCalendar.GetDaysInMonth
- uid: System.Globalization.UmAlQuraCalendar.GetDaysInYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: UmAlQuraCalendar.GetDaysInYear
- uid: System.Globalization.UmAlQuraCalendar.GetEra*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetEra
  nameWithType: UmAlQuraCalendar.GetEra
- uid: System.Globalization.UmAlQuraCalendar.GetLeapMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: UmAlQuraCalendar.GetLeapMonth
- uid: System.Globalization.UmAlQuraCalendar.GetMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonth
  nameWithType: UmAlQuraCalendar.GetMonth
- uid: System.Globalization.UmAlQuraCalendar.GetMonthsInYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: UmAlQuraCalendar.GetMonthsInYear
- uid: System.Globalization.UmAlQuraCalendar.GetYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: GetYear
  nameWithType: UmAlQuraCalendar.GetYear
- uid: System.Globalization.UmAlQuraCalendar.IsLeapDay*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: UmAlQuraCalendar.IsLeapDay
- uid: System.Globalization.UmAlQuraCalendar.IsLeapMonth*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: UmAlQuraCalendar.IsLeapMonth
- uid: System.Globalization.UmAlQuraCalendar.IsLeapYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: UmAlQuraCalendar.IsLeapYear
- uid: System.Globalization.UmAlQuraCalendar.MaxSupportedDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: UmAlQuraCalendar.MaxSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.MinSupportedDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: UmAlQuraCalendar.MinSupportedDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToDateTime*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: UmAlQuraCalendar.ToDateTime
- uid: System.Globalization.UmAlQuraCalendar.ToFourDigitYear*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: UmAlQuraCalendar.ToFourDigitYear
- uid: System.Globalization.UmAlQuraCalendar.TwoDigitYearMax*
  parent: System.Globalization.UmAlQuraCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: UmAlQuraCalendar.TwoDigitYearMax
