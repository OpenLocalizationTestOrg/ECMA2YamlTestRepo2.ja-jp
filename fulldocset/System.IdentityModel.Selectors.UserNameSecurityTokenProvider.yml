### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  id: UserNameSecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)
  - System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  langs:
  - csharp
  name: UserNameSecurityTokenProvider
  nameWithType: UserNameSecurityTokenProvider
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  type: Class
  summary: "提供するセキュリティ トークン プロバイダーを表す<xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>セキュリティ トークンを SOAP メッセージ送信者です。"
  remarks: "ほとんどの場合、UserNameSecurityTokenProvider クラスを必要はありません、直接呼び出されるようにクライアントを必要とする SOAP メッセージを送信するときに呼び出されます、<xref:System.IdentityModel.Tokens.UserNameSecurityToken>セキュリティ トークン</xref:System.IdentityModel.Tokens.UserNameSecurityToken>。 具体的には、クライアントがセキュリティ必要なを使用してトークンの種類を指定します、<xref:System.ServiceModel.Description.ClientCredentials>クラスおよび<xref:System.ServiceModel.Description.ClientCredentials>クラスの呼び出し、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>セキュリティ トークンを取得するメソッド</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A></xref:System.ServiceModel.Description.ClientCredentials></xref:System.ServiceModel.Description.ClientCredentials>。 必要なセキュリティ トークンの場合は、<xref:System.IdentityModel.Tokens.UserNameSecurityToken>セキュリティ トークン、<xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッドの呼び出し、<xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A>メソッド</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A></xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A></xref:System.IdentityModel.Tokens.UserNameSecurityToken>。"
  syntax:
    content: 'public class UserNameSecurityTokenProvider : System.IdentityModel.Selectors.SecurityTokenProvider'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenProvider
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  langs:
  - csharp
  name: UserNameSecurityTokenProvider(String,String)
  nameWithType: UserNameSecurityTokenProvider.UserNameSecurityTokenProvider(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.UserNameSecurityTokenProvider(String,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Selectors.UserNameSecurityTokenProvider&quot;> </xref>クラスの指定されたユーザー名とパスワードを使用します。"
  remarks: "<xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A>メソッドは、指定されたユーザー名とパスワードに基づいてトークンを取得します</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore%2A>。"
  syntax:
    content: public UserNameSecurityTokenProvider (string userName, string password);
    parameters:
    - id: userName
      type: System.String
      description: "取得するユーザー名を<xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;></xref>のセキュリティ トークン。"
    - id: password
      type: System.String
      description: "取得するユーザーのパスワード、 <xref href=&quot;System.IdentityModel.Tokens.UserNameSecurityToken&quot;> </xref>のセキュリティ トークン。"
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: UserNameSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "ユーザー名と、コンス トラクターで指定されたパスワードに基づくセキュリティ トークンを取得します。"
  remarks: "GetTokenCore メソッドによって呼び出されます、<xref:System.ServiceModel.Description.ClientCredentials>クラスのクライアントが SOAP メッセージを送信するとき、<xref:System.IdentityModel.Tokens.UserNameSecurityToken>セキュリティ トークンが必要です</xref:System.IdentityModel.Tokens.UserNameSecurityToken></xref:System.ServiceModel.Description.ClientCredentials>。       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>メソッド GetTokenCore メソッドを呼び出します</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>。"
  syntax:
    content: protected override System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>セキュリティ トークンを取得するメッセージのタイムアウト値を指定します</xref:System.TimeSpan>。"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref>を表す、セキュリティ トークンを取得します。"
  overload: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor(System.String,System.String)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  isExternal: false
  name: UserNameSecurityTokenProvider(String,String)
  nameWithType: UserNameSecurityTokenProvider.UserNameSecurityTokenProvider(String,String)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.UserNameSecurityTokenProvider(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: UserNameSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  isExternal: false
  name: UserNameSecurityTokenProvider
  nameWithType: UserNameSecurityTokenProvider.UserNameSecurityTokenProvider
- uid: System.IdentityModel.Selectors.UserNameSecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.UserNameSecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: UserNameSecurityTokenProvider.GetTokenCore
