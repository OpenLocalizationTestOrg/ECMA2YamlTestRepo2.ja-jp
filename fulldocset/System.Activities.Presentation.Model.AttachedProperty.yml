### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.AttachedProperty
  id: AttachedProperty
  children:
  - System.Activities.Presentation.Model.AttachedProperty.#ctor
  - System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  - System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  - System.Activities.Presentation.Model.AttachedProperty.Name
  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.OwnerType
  - System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  - System.Activities.Presentation.Model.AttachedProperty.Type
  langs:
  - csharp
  name: AttachedProperty
  nameWithType: AttachedProperty
  fullName: System.Activities.Presentation.Model.AttachedProperty
  type: Class
  summary: "関連付けるまたはオブジェクトのインスタンスに追加情報をアタッチするために使用されます。"
  remarks: "これは使用、[!INCLUDE[wfd1](~/add/includes/wfd1-md.md)]興味深いデータの一部のデータは一時的なものではそれ以外の場合、編集セッションの最後に破棄されます (ほとんどの場合) を編集セッション中の追跡するためにします。 添付プロパティの内の項目として便利ですが、`View`値へのバインドおよび変更に対応できます。 たとえば、これは、選択した項目テンプレートが表示されている方法 (添付プロパティの選択からキー)。"
  syntax:
    content: public abstract class AttachedProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref>クラスです。"
  syntax:
    content: protected AttachedProperty ();
    parameters: []
  overload: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  id: GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したモデル アイテムの値を取得します。"
  syntax:
    content: public abstract object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "モデル アイテム。"
    return:
      type: System.Object
      description: "返します、<xref:System.Object>モデル アイテムの値を格納します</xref:System.Object>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  id: IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得または設定を示すブール値かどうか、 <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref>が参照可能です。"
  remarks: "これを設定するの主要な影響`true`される、<xref:System.Activities.Presentation.Model.AttachedProperty>内で見つけることが、<xref:System.Activities.Presentation.Model.ModelItem.Properties%2A>のコレクション、<xref:System.Activities.Presentation.Model.ModelItem>に接続されている</xref:System.Activities.Presentation.Model.ModelItem></xref:System.Activities.Presentation.Model.ModelItem.Properties%2A></xref:System.Activities.Presentation.Model.AttachedProperty>。"
  syntax:
    content: public bool IsBrowsable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Activities.Presentation.Model.AttachedProperty&quot;> </xref>参照可能である、それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "添付プロパティは読み取り専用であるかどうかを決定する値を取得します。"
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>プロパティが読み取り専用の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  id: Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得またはプロパティの名前を設定します。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "返します、<xref:System.String>プロパティの名前を格納している</xref:System.String>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  id: NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したモデル アイテムが変更されたことを示す通知を作成します。"
  syntax:
    content: public void NotifyPropertyChanged (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "変更された項目。"
  overload: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  id: OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "取得または所有者の種類を設定します。"
  syntax:
    content: public Type OwnerType { get; set; }
    return:
      type: System.Type
      description: "返します、<xref:System.Type>所有者型を格納している</xref:System.Type>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  id: ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したモデル アイテムを既定値にリセットします。"
  syntax:
    content: public abstract void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "リセットするモデル アイテム。"
  overload: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "指定したモデル アイテムを指定された値に設定します。"
  syntax:
    content: public abstract void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: "設定するモデル項目。"
    - id: value
      type: System.Object
      description: "設定する値。"
  overload: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  id: Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "型を取得します。"
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "返します、<xref:System.Type>型を格納します</xref:System.Type>。"
  overload: System.Activities.Presentation.Model.AttachedProperty.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty
  nameWithType: AttachedProperty.AttachedProperty
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue
  nameWithType: AttachedProperty.GetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.AttachedProperty.Name*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged
  nameWithType: AttachedProperty.NotifyPropertyChanged
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue
  nameWithType: AttachedProperty.ResetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue
  nameWithType: AttachedProperty.SetValue
- uid: System.Activities.Presentation.Model.AttachedProperty.Type*
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
