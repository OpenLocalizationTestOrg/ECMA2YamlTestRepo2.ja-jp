### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseContext
  id: LicenseContext
  children:
  - System.ComponentModel.LicenseContext.#ctor
  - System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  - System.ComponentModel.LicenseContext.GetService(System.Type)
  - System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  - System.ComponentModel.LicenseContext.UsageMode
  langs:
  - csharp
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
  type: Class
  summary: "ライセンスされたオブジェクトを使用し、そのドメイン内で実行されているライセンスをサポートするために必要な追加のサービスを取得する方法を説明を指定します。"
  remarks: "このクラスは、既定 LicenseContext を提供します。 のみのランタイム サポートを実装してはライセンス キーを保存サポートされません。"
  syntax:
    content: 'public class LicenseContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.LicenseContext&quot;> </xref>クラスです。"
  syntax:
    content: public LicenseContext ();
    parameters: []
  overload: System.ComponentModel.LicenseContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  id: GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、指定されたリソースのアセンブリから指定した型の保存されているライセンス キーを返します。"
  syntax:
    content: public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>コンポーネントの型を表す</xref:System.Type>。"
    - id: resourceAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>ライセンス キーを持つ</xref:System.Reflection.Assembly>。"
    return:
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>指定の種類</xref:System.ComponentModel.License.LicenseKey*>。 このメソッドが戻る<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>メソッドをオーバーライドする場合を除き、します。"
  overload: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "使用可能になる場合は、要求したサービスを取得します。"
  syntax:
    content: public virtual object GetService (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "取得するサービスの型。"
    return:
      type: System.Object
      description: "サービスのインスタンスまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>サービスが見つからない場合。"
  overload: System.ComponentModel.LicenseContext.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  id: SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、指定した型のライセンス キーを設定します。"
  remarks: "設定すると、通常、このメソッドを呼び出す<xref:System.ComponentModel.LicenseUsageMode>デザイン時にします</xref:System.ComponentModel.LicenseUsageMode>。 オーバーライドする必要があります、<xref:System.ComponentModel.LicenseContext.UsageMode%2A>デザイン タイム ライセンス サポートを実装するプロパティ</xref:System.ComponentModel.LicenseContext.UsageMode%2A>。"
  syntax:
    content: public virtual void SetSavedLicenseKey (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "A<xref:System.Type>ライセンス キーに関連付けられたコンポーネントを表す</xref:System.Type>。"
    - id: key
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>コンポーネントの種類で保存する</xref:System.ComponentModel.License.LicenseKey*>。"
  overload: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.UsageMode
  id: UsageMode
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "派生クラスでオーバーライドされると、ライセンスを使用する場合を指定する値を取得します。"
  syntax:
    content: public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }
    return:
      type: System.ComponentModel.LicenseUsageMode
      description: "1 つ、 <xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;> </xref>ライセンスを使用する場合を指定する値。 既定値は<xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;></xref>です。"
  overload: System.ComponentModel.LicenseContext.UsageMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.LicenseContext.#ctor
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
- uid: System.ComponentModel.LicenseContext.UsageMode
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
- uid: System.ComponentModel.LicenseUsageMode
  parent: System.ComponentModel
  isExternal: false
  name: LicenseUsageMode
  nameWithType: LicenseUsageMode
  fullName: System.ComponentModel.LicenseUsageMode
- uid: System.ComponentModel.LicenseContext.#ctor*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext.LicenseContext
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey
  nameWithType: LicenseContext.GetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.GetService*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService
  nameWithType: LicenseContext.GetService
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey
  nameWithType: LicenseContext.SetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.UsageMode*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
