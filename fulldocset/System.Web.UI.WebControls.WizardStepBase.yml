### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WizardStepBase
  id: WizardStepBase
  children:
  - System.Web.UI.WebControls.WizardStepBase.#ctor
  - System.Web.UI.WebControls.WizardStepBase.AllowReturn
  - System.Web.UI.WebControls.WizardStepBase.EnableTheming
  - System.Web.UI.WebControls.WizardStepBase.ID
  - System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WizardStepBase.Name
  - System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WizardStepBase.StepType
  - System.Web.UI.WebControls.WizardStepBase.Title
  - System.Web.UI.WebControls.WizardStepBase.Wizard
  langs:
  - csharp
  name: WizardStepBase
  nameWithType: WizardStepBase
  fullName: System.Web.UI.WebControls.WizardStepBase
  type: Class
  summary: "ステップで必要な基本機能を実装して、 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>コントロール。"
  remarks: "直接 WizardStepBase クラスのインスタンスを作成することはできません。 代わりに、このクラスは、継承によって、<xref:System.Web.UI.WebControls.WizardStep>クラスおよび<xref:System.Web.UI.WebControls.TemplatedWizardStep>ウィザードとして機能するコントロールの手順の基本的な機能を提供するクラス</xref:System.Web.UI.WebControls.TemplatedWizardStep></xref:System.Web.UI.WebControls.WizardStep>。       ウィザード コントロールの一意なステップを表すカスタム クラスを作成する WizardStepBase クラスから派生できます。"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.ToolboxItem(false)]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))]

      public abstract class WizardStepBase : System.Web.UI.WebControls.View
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.View
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.View.Activate
  - System.Web.UI.WebControls.View.Deactivate
  - System.Web.UI.WebControls.View.OnActivate(System.EventArgs)
  - System.Web.UI.WebControls.View.OnDeactivate(System.EventArgs)
  - System.Web.UI.WebControls.View.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>クラスです。"
  syntax:
    content: protected WizardStepBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WizardStepBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  id: AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはそれ以降のステップから現在の手順に戻るにユーザーが許可されているかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.WizardStepCollection&quot;> </xref>コレクション。"
  remarks: "AllowReturn プロパティで線形のナビゲーションを適用するために使用できます、<xref:System.Web.UI.WebControls.Wizard>コントロール</xref:System.Web.UI.WebControls.Wizard>。 各ステップには、AllowReturn プロパティを設定する場合`false`ユーザーがアクセスされた後の手順に戻ってできません。 この機能を使用する場合があります&1; つのシナリオでは、これが完了した後の各ステップとしてデータベースにデータを永続化するための手順に戻ってにユーザーが行われないようが完了です。 各手順の後にデータを保存して、ステップに戻ってを保存した後に情報を変更するアクセス許可に設定する場合、保存したデータが破損する可能性があります。 AllowReturn プロパティを設定して`false`ユーザーは、ステップを左揃え、一度自分ことはできませんに戻るし、任意の値を変更します。       AllowReturn プロパティを決定する方法とタイミング、**前**ボタンは表示されません。 次の表、**前**レンダリング動作にボタンをクリックします。      |シナリオ |動作 |  |--------------|--------------|  |線形: ステップ 1 に設定 AllowReturn`false`し、ユーザー操作は、手順 2 に進みます |。手順 2 が表示されない、**前**ボタンをクリックします |。  |ノンリニア: ステップ 1 に設定 AllowReturn`false`し、ユーザー操作は、手順 3. に進みます |。手順 3 が表示されない、**前**ボタンをクリックします |。  |サイド バーのボタン: 手順 2. に設定 AllowReturn `false` 、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>に設定されている`true`ユーザーが [サイドバー] ボタンをクリックするとします |。ないボタンは自動的に無効にサイドバー上 AllowReturn に設定されているときに`false`</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>。 ユーザーには、ボタンがクリックすると、操作は無視されます |。  |線形 >/documents/report1.rdl」の非線形カスタム テンプレートを使用して: 手順がカスタム ナビゲーション テンプレートです |。いいえ自動非表示/表示する場合は、AllowReturn に設定されている`false`ナビゲーションのテンプレートを使用する場合。 **前**ボタンは、テンプレートでは省略可能にする必要があります |。  |Visual Studio デザイナーおよび<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>を使用して: コントロールが 5 つの手順で、手順 4. で作業している実行し、ページです |。手順 4 の場合は、 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>、続いて、**前**ボタンが表示されます</xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A></xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>。 **前**のボタンが非表示のみ<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>&quot;éý&quot;<xref:System.Web.UI.WebControls.WizardStepType>履歴に前の手順に設定 AllowReturn が場合`false`</xref:System.Web.UI.WebControls.WizardStepType></xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>。 手順 4 が最初に表示され、履歴にステップがないため、**前**ボタンが非表示にします |。  |手順および非線形ナビゲーションを開始: ユーザーは、手順 3. および手順 4 と<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A><xref:System.Web.UI.WebControls.WizardStepType>に設定を手順 1. を訪れます |。ウィザードは追加されません、**前** <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>、ユーザーがそのステップに移動する方法に関係なく<xref:System.Web.UI.WebControls.WizardStepType>に設定されているときにボタンをクリックします |。  |履歴に同じ手順: ユーザーは、手順 3 を訪れます場所<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>に設定されている<xref:System.Web.UI.WebControls.WizardStepType>し、ユーザーがその操作をコミットできません</xref:System.Web.UI.WebControls.WizardStepType></xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A></xref:System.Web.UI.WebControls.WizardStepType></xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A></xref:System.Web.UI.WebControls.WizardStepType></xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>。 手順 3 で [戻る] ボタンをクリックします |。ウィザード コントロールが確認する場合、**前**履歴内の手順では、ユーザーが現在実行している「同じ」のステップします。 ウィザード コントロールが「別」の前の手順を決定するために、履歴のバックアップに検索しの表示のベース ステップが同じ場合は、**前**ボタンをクリックし、変換先&quot;別の手順に従って&quot;履歴にします |。     > [!NOTE] > に設定されているときに、AllowReturn プロパティ`false`、ですが、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>の親コントロールのプロパティの<xref:System.Web.UI.WebControls.WizardStepBase>に設定されている`true`、サイド バー領域のボタンをクリックすると影響を与えません</xref:System.Web.UI.WebControls.WizardStepBase></xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>。 サイドバーの領域は通常非線形のナビゲーションを提供する表示を設定することが非線形ナビゲーションの機能を使用していない場合、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>プロパティを`false`</xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  example:
  - "The following example demonstrates using the AllowReturn property to stop the user from returning to a step in the <xref:System.Web.UI.WebControls.Wizard> control after it has been accessed. In the example, the `Step1` step has its AllowReturn property set to `false`. After the user leaves the `Step1` step, no Previous button appears on the `Step2` step.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_10_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_10_1.aspx)]"
  syntax:
    content: public virtual bool AllowReturn { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のステップに戻るには、ユーザーが許可された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはこのコントロールにテーマを適用するかどうかを示す値を設定します。"
  remarks: "EnableTheming プロパティは、テーマが有効になっているかどうかを示す、<xref:System.Web.UI.WebControls.WizardStepBase>コントロール</xref:System.Web.UI.WebControls.WizardStepBase>。 EnableTheming プロパティは、その controls コレクションに含まれるコントロールのテーマが有効になっているかどうかにも影響します。 EnableTheming プロパティが`true`、コントロール スキンを適用するテーマのアプリケーションのディレクトリが検索されます。 テーマのディレクトリ内の特定のコントロール スキンが存在しない場合、スキンは適用されません。 EnableTheming プロパティが`false`、テーマのディレクトリは検索されませんの値、<xref:System.Web.UI.Control.SkinID%2A>プロパティは使用されません</xref:System.Web.UI.Control.SkinID%2A>。       コントロールには、EnableTheming 値が、親コントロールまたはコントロールを含むページによって設定をオーバーライドできます。 たとえば場合、<xref:System.Web.UI.WebControls.WizardStepBase>コントロールに設定 EnableTheming`false`を設定して、ウィザードの手順に含まれる子コントロールにテーマを選択的に適用できます、<xref:System.Web.UI.Control.EnableTheming%2A>プロパティを`true`個々 の子コントロールの</xref:System.Web.UI.Control.EnableTheming%2A></xref:System.Web.UI.WebControls.WizardStepBase>。"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>テーマを使用するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  id: ID
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはサーバー コントロールに割り当てられたプログラムの id を設定します。"
  remarks: "ID プロパティを使用して、識別し、Web フォーム ページ内の特定のウィザード手順コントロールを参照します。 ページのコントロールのインスタンスの名前の ID 値になりますこれにより、そのページのコードで特定の手順を簡単にアクセスできます。 たとえばの ID プロパティを設定する場合、<xref:System.Web.UI.WebControls.WizardStepBase>コントロール「ステップ&1;」するには、ウィザードの手順としてそのページのコードでの子コントロールを参照することができます`Step1.Controls`</xref:System.Web.UI.WebControls.WizardStepBase>。       <xref:System.Web.UI.WebControls.WizardStepBase>コントロールにより各ステップで、<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>手順が追加またはデザイン時に変更されたときに、コントロールが有効な一意の識別子</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A></xref:System.Web.UI.WebControls.WizardStepBase>。 たとえば、デザイン時に、ステップの ID を設定するときにことはできませんと一致しているに含まれる別のステップの識別子、<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>コントロールとが一致することはできません、<xref:System.Web.UI.Control.ID%2A>を含んでいるの<xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>コントロール</xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A></xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A>。"
  example:
  - "The following code example defines three wizard steps for a <xref:System.Web.UI.WebControls.Wizard> control in a Web Forms page. In code for the page, the wizard step instances are named by their ID values, and they can be referenced in the code as `WizardStep1`, `WizardStep2`, and `WizardStep3`.  \n  \n [!code-cs[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_480_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_480_1.aspx)]"
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "コントロールに割り当てられているプログラム id。"
  overload: System.Web.UI.WebControls.WizardStepBase.ID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "プロパティは、デザイン時に無効な id 文字列に設定されました。       - または - プロパティが含まれていると同じ識別子に設定された<> *> コントロールをデザイン時です。      - または - プロパティが含まれている別のステップと同じ識別子に設定された<> *> コントロールをデザイン時です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって保存された前回のページ要求からビューステート情報を復元、<xref:System.Web.UI.WebControls.WebControl.SaveViewState*>メソッド</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "<xref:System.Object>を表すコントロールの状態を復元します</xref:System.Object>。"
  overload: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  id: Name
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ウィザードとして機能するコントロールのステップに関連付けられた名前を取得します。"
  remarks: "Name プロパティでは、ウィザード コントロールのステップを識別する文字列を返します。 値が指定されている場合、<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>プロパティ、Name プロパティは、その値を返します</xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>。 値が指定されていない場合、<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>プロパティ、Name プロパティの値を返します、<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>プロパティ</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A></xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>。 いずれかの値が指定されていない場合、<xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>または<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>プロパティ、Name プロパティを返します`null`</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A></xref:System.Web.UI.WebControls.WizardStepBase.Title%2A>。"
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "ウィザードとして機能するコントロールでのステップに関連付けられた名前です。"
  overload: System.Web.UI.WebControls.WizardStepBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、<xref:System.Web.UI.Control.OnLoad*>イベント</xref:System.Web.UI.Control.OnLoad*>。"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納するオブジェクト</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内容を出力、 <xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;> </xref>コントロールの子コントロールを指定した<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>オブジェクトをクライアントに表示される内容を書き込みます。"
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  id: StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の移動ユーザー インターフェイス (UI) のステップを表示する型、 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>コントロール。"
  remarks: "StepType プロパティでステップを表示するナビゲーション ボタンの種類の指定を使用して、<xref:System.Web.UI.WebControls.Wizard>コントロール</xref:System.Web.UI.WebControls.Wizard>。 このプロパティの値を指定する場合に何としてマーク<xref:System.Web.UI.WebControls.WizardStepType>、サイドバーで無効な状態が表示されます</xref:System.Web.UI.WebControls.WizardStepType>。       このプロパティの値を指定しない場合、既定値は`WizardStepType.Auto`します。       次の表に、StepType プロパティとステップの結果の動作の使用可能な設定:`WizardStepType.Auto`ナビゲーション ステップはステップが宣言される順序によって決まります用に表示される UI。       `WizardStepType.Complete`最後に表示される手順です。 ナビゲーション ボタンは表示されません。       `WizardStepType.Finish`ステップは、最終的なデータ コレクションのステップです。 ナビゲーションは、完了 と 前のボタンが表示されます。       `WizardStepType.Start`最初に表示される手順です。 [戻る] ボタンは表示されません。       `WizardStepType.Step`ステップは、いずれかの手順を開始し、[完了] 手順の間です。 ナビゲーションは、前へ および 次へ ボタンが表示されます。 このステップの種類がオーバーライドするために便利ですが、<xref:System.Web.UI.WebControls.WizardStepType>ステップの種類</xref:System.Web.UI.WebControls.WizardStepType>。"
  syntax:
    content: public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }
    return:
      type: System.Web.UI.WebControls.WizardStepType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;> </xref>列挙値。 既定値は<xref uid=&quot;langword_csharp_WizardStepType.Auto&quot; name=&quot;WizardStepType.Auto&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepBase.StepType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.WebControls.WizardStepType&quot;> </xref>列挙値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  id: Title
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の手順を使用するタイトルを<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>サイド バーの機能が有効な場合を制御します。"
  remarks: "ステップに関するわかりやすいタイトルを表示するタイトル プロパティを使用して、<xref:System.Web.UI.WebControls.Wizard>サイド バーの機能が有効な場合を制御します</xref:System.Web.UI.WebControls.Wizard>。 Title プロパティが設定されていないと、サイド バーの機能が有効になっている場合の値、<xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>サイド バー ボタンのプロパティが表示されます</xref:System.Web.UI.WebControls.WizardStepBase.ID%2A>。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following example demonstrates using the Title property to display a user-friendly title for a step in the <xref:System.Web.UI.WebControls.Wizard> control. In the example, `Step1` does not have its Title property set, so it appears in the <xref:System.Web.UI.WebControls.Wizard> control as \"WizardStep1\". `Step2` does have its Title property set, so it appears as \"Step 2\".  \n  \n [!code-cs[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_149_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_149_1.aspx)]"
  syntax:
    content: public virtual string Title { get; set; }
    return:
      type: System.String
      description: "手順を使用するタイトルを<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;></xref>サイド バーの機能が有効な場合を制御します。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.WizardStepBase.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  id: Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  langs:
  - csharp
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得、 <xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>から派生したオブジェクトの親であるコントロール<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>です。"
  syntax:
    content: public System.Web.UI.WebControls.Wizard Wizard { get; }
    return:
      type: System.Web.UI.WebControls.Wizard
      description: "<xref href=&quot;System.Web.UI.WebControls.Wizard&quot;> </xref>から派生したオブジェクトの親であるコントロール<xref href=&quot;System.Web.UI.WebControls.WizardStepBase&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WizardStepBase.Wizard*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.View
  isExternal: false
  name: System.Web.UI.WebControls.View
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase()
  nameWithType: WizardStepBase.WizardStepBase()
  fullName: System.Web.UI.WebControls.WizardStepBase.WizardStepBase()
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
  fullName: System.Web.UI.WebControls.WizardStepBase.AllowReturn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
  fullName: System.Web.UI.WebControls.WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
  fullName: System.Web.UI.WebControls.WizardStepBase.ID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WizardStepBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WizardStepBase.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WizardStepBase.Name
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
  fullName: System.Web.UI.WebControls.WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: WizardStepBase.OnLoad(EventArgs)
  fullName: System.Web.UI.WebControls.WizardStepBase.OnLoad(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: WizardStepBase.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WizardStepBase.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WizardStepBase.StepType
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
  fullName: System.Web.UI.WebControls.WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WizardStepType
  nameWithType: WizardStepType
  fullName: System.Web.UI.WebControls.WizardStepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
  fullName: System.Web.UI.WebControls.WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
  fullName: System.Web.UI.WebControls.WizardStepBase.Wizard
- uid: System.Web.UI.WebControls.Wizard
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Wizard
  nameWithType: Wizard
  fullName: System.Web.UI.WebControls.Wizard
- uid: System.Web.UI.WebControls.WizardStepBase.#ctor*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: WizardStepBase
  nameWithType: WizardStepBase.WizardStepBase
- uid: System.Web.UI.WebControls.WizardStepBase.AllowReturn*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: AllowReturn
  nameWithType: WizardStepBase.AllowReturn
- uid: System.Web.UI.WebControls.WizardStepBase.EnableTheming*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: EnableTheming
  nameWithType: WizardStepBase.EnableTheming
- uid: System.Web.UI.WebControls.WizardStepBase.ID*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: ID
  nameWithType: WizardStepBase.ID
- uid: System.Web.UI.WebControls.WizardStepBase.LoadViewState*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: LoadViewState
  nameWithType: WizardStepBase.LoadViewState
- uid: System.Web.UI.WebControls.WizardStepBase.Name*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Name
  nameWithType: WizardStepBase.Name
- uid: System.Web.UI.WebControls.WizardStepBase.OnLoad*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: OnLoad
  nameWithType: WizardStepBase.OnLoad
- uid: System.Web.UI.WebControls.WizardStepBase.RenderChildren*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: RenderChildren
  nameWithType: WizardStepBase.RenderChildren
- uid: System.Web.UI.WebControls.WizardStepBase.StepType*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: StepType
  nameWithType: WizardStepBase.StepType
- uid: System.Web.UI.WebControls.WizardStepBase.Title*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Title
  nameWithType: WizardStepBase.Title
- uid: System.Web.UI.WebControls.WizardStepBase.Wizard*
  parent: System.Web.UI.WebControls.WizardStepBase
  isExternal: false
  name: Wizard
  nameWithType: WizardStepBase.Wizard
