### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Oracle に作られたマネージ OracleBFile オブジェクトを表す<xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;></xref>データ型。 このクラスは継承できません。"
  remarks: "Oracle`BFILE`データ型は、Oracle`LOB`を 4 ギガバイト単位の最大サイズのバイナリ データへの参照を含むデータ型。 Oracle`BFILE`他の Oracle とは異なります`LOB`データ型の代わりに、オペレーティング システムで、サーバー上の物理ファイルにそのデータを格納します。 なお、`BFILE`データ型は、データへの読み取り専用のアクセスを提供します。 そのため、書き込み指向のメソッドが継承、<xref:System.IO.Stream>クラスはサポートされていません</xref:System.IO.Stream>。       他の特性、`BFILE`から区別するためのデータ型、`LOB`データ型はその it:-非構造化データが含まれています。      -サーバー側チャンキングをサポートしています。      に参照コピーのセマンティクス使用します。 コピー操作を実行する場合など、 `BFILE`、のみ、`BFILE`ロケーター (ファイルへの参照は、) をコピーします。 ファイル内のデータはコピーされません。       `BFILE`データ型を参照するために使用する必要があります`LOB`s、大きいサイズであるため、データベースに格納するには実用的ではないです。 使用するためのクライアント、サーバー、および通信のオーバーヘッドが、`BFILE`データ型と比較して、`LOB`データ型。 アクセスする方が効率的である、`BFILE`のみ少量のデータを取得する必要がある場合。 Access データベースに常駐する方が効率的である`LOB`s 全体のオブジェクトを取得する必要がある場合。       各 NULL 以外の OracleBFile オブジェクトは、基になる物理ファイルの場所を定義する&2; つのエンティティと関連付けられている:-ディレクトリに対するデータベースのエイリアスをファイル システムおよびディレクトリ オブジェクトに関連付けられているディレクトリにある基になる物理ファイルのファイル名では、Oracle DIRECTORY オブジェクト。       後に、`BFILE`が作成されると、OracleBFile オブジェクトを使用して、形式でそのロケーターを取得することができます、<xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>または<xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>メソッド</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A></xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>。       OracleBFile オブジェクトを取得するには、呼び出し、<xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>メソッド</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>。       OracleBFile オブジェクトに関連付けられている物理ファイルは、アクセスしようとするまでは存在する必要はありません。 アプリケーションで、OracleBFile を存在しないファイルにバインドする、必要な場所に物理ファイルを作成および<xref:System.Data.OracleClient.OracleBFile.Read%2A>。</xref:System.Data.OracleClient.OracleBFile.Read%2A>を呼び出す       閉じた OracleBFile を使用して、アクセスしようとすると、<xref:System.Data.OracleClient.OracleBFile.Read%2A>または<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッド OracleBFile ストリームを自動的に再度開きます</xref:System.Data.OracleClient.OracleBFile.Seek%2A></xref:System.Data.OracleClient.OracleBFile.Read%2A>。       次の c# の例では、作成する方法を示しています、 `BFILE` Oracle のテーブル、および OracleBFile オブジェクトの形式で取得します。 使用、例を示します、<xref:System.Data.OracleClient.OracleDataReader>オブジェクトと、OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A>と<xref:System.Data.OracleClient.OracleBFile.Read%2A>メソッド</xref:System.Data.OracleClient.OracleBFile.Read%2A></xref:System.Data.OracleClient.OracleBFile.Seek%2A></xref:System.Data.OracleClient.OracleDataReader>。       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ]を作成して、Oracle の使用の詳細については`BFILE`、適切な Oracle のマニュアルを参照してください。      > [!NOTE] >、 `BeginWrite`、 `EndWrite`、および`WriteByte`から継承するメソッドを`System.IO.Stream`クラス、ためにサポートされていません、`BFILE`データ型は読み取り専用です。"
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "示す値を取得するかどうか、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>ストリームを読み取ることができます。"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>終了または破棄。 それ以外の場合は、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。 Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "前方シークおよび旧バージョンとシーク操作かどうかを示す値を取得を実行できます。"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>終了または破棄。 それ以外の場合は、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。 Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "オブジェクトが書き込みをサポートするかどうかを示す値を取得します。"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ため、Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>データ型は読み取り専用です。"
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "このコピーを作成<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>元と同じ物理ファイルに関連付けられているオブジェクト。"
  remarks: "新しいプロパティ<xref:System.Data.OracleClient.OracleBFile>オブジェクトが最初に元のオブジェクトと同じ値を持ちます</xref:System.Data.OracleClient.OracleBFile>。 ただし、複製完了後、各<xref:System.Data.OracleClient.OracleBFile>オブジェクトは、他から独立しています</xref:System.Data.OracleClient.OracleBFile>。 値を変更するなど、<xref:System.Data.OracleClient.OracleBFile.Position%2A>元のプロパティ<xref:System.Data.OracleClient.OracleBFile>の値は変わりません<xref:System.Data.OracleClient.OracleBFile.Position%2A>コピーにします</xref:System.Data.OracleClient.OracleBFile.Position%2A></xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Position%2A>。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しい<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>元と同じ物理ファイルに関連付けられたオブジェクト<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;></xref>オブジェクト。"
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得、 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>のこのインスタンスによって使用される、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>です。"
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "データ ソースに接続します。 既定値は、null 値です。"
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "これの内容全体をコピー <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>の保存先の先頭に<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>です。"
  remarks: "ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性がなければなりません</xref:System.Data.OracleClient.OracleLob></xref:System.Data.OracleClient.OracleBFile>。 たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持つ</xref:System.Data.OracleClient.OracleLob>。       変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>CopyTo 操作が正常に実行する</xref:System.Data.OracleClient.OracleLob>。"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "変換先<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "コピーされたバイト数。"
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "転送先<xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> null オブジェクト参照です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マップ先は、null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref>です。       または、この接続<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;></xref>が関連付けられているが閉じられます。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref>オブジェクトが終了または破棄します。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "これの内容全体をコピー <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>先<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>指定したオフセット。"
  remarks: "ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性がなければなりません</xref:System.Data.OracleClient.OracleLob></xref:System.Data.OracleClient.OracleBFile>。 たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持つ</xref:System.Data.OracleClient.OracleLob>。       変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>の<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>操作が正常に実行します</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A></xref:System.Data.OracleClient.OracleLob>。"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "転送先<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>です。"
    - id: destinationOffset
      type: System.Int64
      description: "コピー先にオフセットします。"
    return:
      type: System.Int64
      description: "コピーされたバイト数。"
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "転送先<xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> null オブジェクト参照です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マップ先は、null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref>です。       または、この接続<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;></xref>が関連付けられているが閉じられます。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref>オブジェクトが終了または破棄します。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "これをコピーします。 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>変換先に<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>と、指定されたデータ量、ソースのオフセットとコピー先のオフセット。"
  remarks: "ソースの基になるデータ型<xref:System.Data.OracleClient.OracleBFile>と変換先<xref:System.Data.OracleClient.OracleLob>互換性がなければなりません</xref:System.Data.OracleClient.OracleLob></xref:System.Data.OracleClient.OracleBFile>。 たとえば、先にバイナリ データをコピーすることはできません<xref:System.Data.OracleClient.OracleLob>文字データ型を持つ</xref:System.Data.OracleClient.OracleLob>。       変換先に書き込みアクセス権が必要<xref:System.Data.OracleClient.OracleLob>の<xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>操作が正常に実行します</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A></xref:System.Data.OracleClient.OracleLob>。"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "コピー先からのオフセット。"
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "転送先<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>です。"
    - id: destinationOffset
      type: System.Int64
      description: "コピー先にオフセットします。"
    - id: amount
      type: System.Int64
      description: "(バイト単位) をコピーする、データの量。"
    return:
      type: System.Int64
      description: "コピーされたバイト数。"
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "容量パラメーターの値は、ゼロ未満か 4 ギガバイトより大きいです。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "転送先<xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> null オブジェクト参照です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マップ先は、null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;></xref>です。       または、この接続<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;></xref>が関連付けられているが閉じられます。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref>オブジェクトが終了または破棄します。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "これで、ディレクトリ オブジェクトの名前を取得、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>オブジェクトが関連付けられます。"
  remarks: "NULL 以外<xref:System.Data.OracleClient.OracleBFile>オブジェクトが基になる物理ファイルの場所を定義する&2; つのエンティティと関連付けられている:-ディレクトリに対するデータベースのエイリアスをファイル システムおよびディレクトリ オブジェクトに関連付けられているディレクトリにある基になる物理ファイルのファイル名では、Oracle DIRECTORY オブジェクト</xref:System.Data.OracleClient.OracleBFile>。       ディレクトリ名のプロパティは、Oracle データベースからディレクトリ オブジェクトの名前を返します。       作成して、Oracle の使用の詳細については`BFILE`、適切な Oracle のマニュアルを参照してください。"
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "ディレクトリ オブジェクトの名前。"
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "呼び出そうとしました<xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> 、閉じられたのか、破棄される<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;></xref>オブジェクト。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "物理ファイルを含んでいるかどうかを示す値を取得<xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;></xref>データ、オペレーティング システム内に存在します。"
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>物理ファイルを含む場合<xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;></xref>データが存在します。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>オブジェクトが終了または破棄します。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "使用する接続、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>が関連付けられているが閉じられます。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "名前を取得、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>パスを含まない。"
  remarks: "<xref:System.Data.OracleClient.OracleBFile.Null>、空の文字列が返されます</xref:System.Data.OracleClient.OracleBFile.Null>。"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "BFILE の名前。"
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>オブジェクトが終了または破棄します。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在サポートされていません。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>は、 <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref>ストリーム。"
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "使用する物理ファイルのバイト単位の長さを返す値を取得、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>オブジェクトが関連付けられます。"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "物理ファイルのバイトの長さを表す long 値。"
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "メソッドは、ストリームの終了または破棄された後に呼び出されました。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Null 値を表す<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>物理ファイルにバインドされていないオブジェクトです。"
  remarks: "比較操作を実行する場合、null が役に立ちます、<xref:System.Data.OracleClient.OracleBFile>を null 値許容属性を決定します</xref:System.Data.OracleClient.OracleBFile>。       Null オブジェクトの読み取り操作を実行しようとするは成功しますが、任意のデータは返されません。 Null オブジェクトでの書き込み操作を実行しようとすると、例外を生成します。 選択すると、 `BFILE` null 値を含む列は Null を返します。"
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "内の位置を読み取り、現在の取得、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>ストリーム。"
  remarks: "ストリームの長さを超えた位置にシークすることはサポートされていません。       `Position`プロパティがないの追跡が消費されている、スキップ、ストリーム、またはその両方からのバイト数。"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "内の現在位置、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>ストリーム。"
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "負の値またはストリームの長さより大きい値の位置を設定しようとしました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "メソッドは、ストリームの終了または破棄された後に呼び出されました。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在のバイトのシーケンスを読み取り<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>バイト数だけストリーム内の位置が読み取るストリーム。"
  remarks: "Read メソッドの最大を読み取る`count`現在からのバイト ストリームし、で格納`buffer`で始まる`offset`です。 読み取りバイト数だけストリーム内の現在位置が高度なただし、例外が発生する場合、ストリーム内の現在の位置は変更されません。 読み取りでは、読み取られたバイト数を返します。 ストリームの末尾には、位置は現在場合にのみ、戻り値は&0; です。 読み取りは、データがないことには、少なくとも&1; バイトのデータを読み取ることができるまでブロックされます。 ファイルの末尾に達している場合にのみ、0 を返しますを読み取る。 読み取りは、ストリームの末尾に達していない場合でも、要求されたより少ないバイト数を返すようにします。       アクセス、閉じられた試行<xref:System.Data.OracleClient.OracleBFile>読み取りを使用してまたは<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッド再度、<xref:System.Data.OracleClient.OracleBFile>自動的にストリーミングします</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Seek%2A></xref:System.Data.OracleClient.OracleBFile>。       次の c# の例では、Oracle テーブルには、このスキーマ:```   (col1 number, col2 BFILE)   ```の例では、読み取りの使用方法を示しますと<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッドにアクセスする、<xref:System.Data.OracleClient.OracleBFile>オブジェクト</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Seek%2A>。      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "バイトの配列。 指定したバイト配列の値を持つが、バッファーに含まれているこのメソッドが戻るとき`offset`と (`offset` + `count`)、現在のソースから読み取られたバイトに置き換えします。"
    - id: offset
      type: System.Int32
      description: "内の&0; から始まるバイト オフセット`buffer`開始位置を示す現在のストリームから読み取ったデータの格納します。"
    - id: count
      type: System.Int32
      description: "現在のストリームから読み取られるバイトの最大数。"
    return:
      type: System.Int32
      description: "バッファーに読み取られた合計バイト数。 バイト数は要求より小さくバイト数が、現在ご利用いただけませんまたはゼロの場合、ファイルの末尾に達していることがあります。"
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "合計<code> offset </code>と<code> count </code>バッファー長を超えています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>または<code>count</code>が負の値。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "使用する接続、 <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref>が関連付けられているが閉じられます。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "I/O エラーが発生しました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "メソッドは、ストリームの終了または破棄された後に呼び出されました。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在の位置を設定<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref>ストリーム。"
  remarks: "場合`offset`は負の場合、新しい位置が必要で指定した位置の前に`origin`で指定したバイト数だけ`offset`です。 場合`offset`0 の場合は、新しい位置に指定した位置である必要は`origin`します。 場合`offset`が正の値であり、新しい位置は指定した位置に従う必要`origin`で指定したバイト数だけ`offset`です。       ストリームの長さを超えた位置にシークすることはサポートされていません。       アクセス、閉じられた試行<xref:System.Data.OracleClient.OracleBFile>を使用して、<xref:System.Data.OracleClient.OracleBFile.Read%2A>メソッド再度をシークまたは、<xref:System.Data.OracleClient.OracleBFile>自動的にストリーム配信します</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Read%2A></xref:System.Data.OracleClient.OracleBFile>。       次の c# の例では、Oracle テーブルには、このスキーマ:```   (col1 number, col2 BFILE)   ```の例を使用して、<xref:System.Data.OracleClient.OracleBFile.Read%2A>シーク メソッドにアクセスして、<xref:System.Data.OracleClient.OracleBFile>オブジェクト</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Read%2A>。      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "原点からのバイト オフセット。 場合`offset`は負の場合、新しい位置は前に指定で指定した位置`origin`で指定したバイト数だけ`offset`です。 場合`offset`0 の場合は、新しい位置で指定した位置になります`origin`です。 場合`offset`が正の値であり、新しい位置がで指定した位置に従う`origin`で指定したバイト数だけ`offset`です。"
    - id: origin
      type: System.IO.SeekOrigin
      description: "型の値<xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;></xref>新しい位置を取得するために使用する参照ポイントを示すです。"
    return:
      type: System.Int64
      description: "現在のストリーム内の新しい位置。"
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "負の値またはストリームの長さより大きい値の位置を設定しようとしました。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "メソッドは、ストリームの終了または破棄された後に呼び出されました。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "バインド、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>オペレーティング システムで別のファイル オブジェクト。"
  remarks: "SetFileName 操作は、成功するトランザクション内でなければなりません。 単に SetFileName を呼び出すことで、`BFILE`関連付けます、<xref:System.Data.OracleClient.OracleBFile>別のファイルを持つオブジェクトは Oracle のテーブルは更新されません</xref:System.Data.OracleClient.OracleBFile>。 更新するには、Oracle テーブル SetFileName の呼び出し後に呼び出す必要があります、`Update`のメソッド、<xref:System.Data.OracleClient.OracleDataAdapter>し、トランザクションをコミットします</xref:System.Data.OracleClient.OracleDataAdapter>。       取得した後、<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>または<xref:System.Data.OracleClient.OracleBFile.FileName%2A>にキャッシュされる、プロパティ、<xref:System.Data.OracleClient.OracleBFile>オブジェクトし、いずれかの複製による影響を受けません<xref:System.Data.OracleClient.OracleBFile>SetFileName、またはを変更して、オブジェクトの呼び出し、`BFILE`データベース内</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.FileName%2A></xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>。 つまり、他の実際の値を表すことがない、`BFILE`サーバー内のオブジェクト。       さらに、いずれかのプロパティの取得 (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>または<xref:System.Data.OracleClient.OracleBFile.FileName%2A>) により、サーバーから取得され、キャッシュの両方のプロパティ値、<xref:System.Data.OracleClient.OracleBFile>オブジェクト</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.FileName%2A></xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>。       次の c# の例では、Oracle テーブルには、このスキーマ: ```   (col1 number, col2 BFILE)   ``` 、例では、使用して、SetFileName<xref:System.Data.OracleClient.OracleBFile.Read%2A>と<xref:System.Data.OracleClient.OracleBFile.Seek%2A>メソッドにアクセスする、<xref:System.Data.OracleClient.OracleBFile>オブジェクト</xref:System.Data.OracleClient.OracleBFile></xref:System.Data.OracleClient.OracleBFile.Seek%2A></xref:System.Data.OracleClient.OracleBFile.Read%2A>。      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "物理ファイルを格納しているディレクトリ オブジェクトの別名です。"
    - id: file
      type: System.String
      description: "オペレーティング システムでファイルの名前。"
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "操作は、トランザクション内でなければなりません。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在サポートされていません。"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "現在サポートされていません。"
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出されたメソッドがサポートされていない場合、またはを読み取ることがある場合にスローされる例外は、シーク、または呼び出された機能をサポートしていないストリームに書き込みます。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得、<xref:System.Array>型の<xref:System.Byte>を格納している、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>データ</xref:System.Byte></xref:System.Array>。"
  remarks: "値プロパティには、全体が読み込まれる`BFILE`一度に&1; つです。      > [!NOTE] > を使用する利点`BFILE`大量のクライアント側のチャンク単位でデータを取得することができます。 ただし、値を使用する場合は、アプリケーションのオーバーヘッドを大幅に向上する可能性が&1; つの連続したチャンクとして BFILE 列のすべてのデータを取得します。"
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "<xref:System.Array>型の<xref:System.Byte>を格納している、 <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>データ</xref:System.Byte></xref:System.Array>。"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在サポートされていません。"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "現在サポートされていません。"
    - id: offset
      type: System.Int32
      description: "現在サポートされていません。"
    - id: count
      type: System.Int32
      description: "現在サポートされていません。"
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "呼び出されたメソッドがサポートされていない場合、またはを読み取ることがある場合にスローされる例外は、シーク、または呼び出された機能をサポートしていないストリームに書き込みます。"
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
