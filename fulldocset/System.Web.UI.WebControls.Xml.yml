### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Xml
  id: Xml
  children:
  - System.Web.UI.WebControls.Xml.#ctor
  - System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Xml.ClientID
  - System.Web.UI.WebControls.Xml.Controls
  - System.Web.UI.WebControls.Xml.CreateControlCollection
  - System.Web.UI.WebControls.Xml.Document
  - System.Web.UI.WebControls.Xml.DocumentContent
  - System.Web.UI.WebControls.Xml.DocumentSource
  - System.Web.UI.WebControls.Xml.EnableTheming
  - System.Web.UI.WebControls.Xml.FindControl(System.String)
  - System.Web.UI.WebControls.Xml.Focus
  - System.Web.UI.WebControls.Xml.GetDesignModeState
  - System.Web.UI.WebControls.Xml.HasControls
  - System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Xml.SkinID
  - System.Web.UI.WebControls.Xml.Transform
  - System.Web.UI.WebControls.Xml.TransformArgumentList
  - System.Web.UI.WebControls.Xml.TransformSource
  - System.Web.UI.WebControls.Xml.XPathNavigator
  langs:
  - csharp
  name: Xml
  nameWithType: Xml
  fullName: System.Web.UI.WebControls.Xml
  type: Class
  summary: "書式設定または Extensible Stylesheet Language Transformations (XSLT) を使用せず、XML ドキュメントを表示します。"
  remarks: "このトピックの「:-[概要](#introduction)      -   [XML データを指定する](#specifying_xml_data)      -   [XSL 変換を指定する](#specifying_an_xsl_transformation)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## の概要では、Xml コントロールを使用して書式設定または XSL 変換を使用せずに XML ドキュメント内容を表示します。            <a name=&quot;specifying_xml_data&quot;></a>## 表示するを指定する XML データ、XML ドキュメントは、3 つのプロパティのいずれかの設定によって指定されます。 これら&3; つのプロパティは、表示可能な XML ドキュメントのさまざまな種類を表します。 表示することができます、 <xref:System.Xml.XmlDocument?displayProperty=fullName>、XML 文字列、または適切なプロパティを設定して XML ファイル</xref:System.Xml.XmlDocument?displayProperty=fullName>。 次の表は、XML ドキュメントを指定するためのプロパティを一覧表示します。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.Xml.Document%2A>|XML ドキュメントを使用して、設定、<xref:System.Xml.XmlDocument?displayProperty=fullName>オブジェクト</xref:System.Xml.XmlDocument?displayProperty=fullName></xref:System.Web.UI.WebControls.Xml.Document%2A>。 **警告:**このプロパティは今後使用しません。 XML の Xml コントロールのコンテンツを設定するには、このセクションで示すその他のプロパティのいずれかを使用しています |。  |<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|文字列を使用して XML ドキュメントを設定します</xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>。 **注:**開始タグと終了の間のテキストを配置することによってこのプロパティが宣言して設定一般的`<asp:Xml>`Xml コントロールのタグ |。  |<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|ファイルを使用して XML ドキュメントを設定します |。     > [!NOTE] > XML ドキュメントを表示する少なくとも&1; つの XML ドキュメントのプロパティを設定する必要があります</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>。 1 つ以上の XML ドキュメントのプロパティが設定されている場合は、最後のプロパティ セットで参照されている XML ドキュメントが表示されます。 その他のプロパティ内のドキュメントは無視されます。      <a name=&quot;specifying_an_xsl_transformation&quot;></a>## を指定する、XSL 変換すると、2 つのプロパティのいずれかを設定して、出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定する XSL 変換 (XSLT) スタイル シート オプションで指定できます。 2 つのプロパティは、さまざまな種類の XML ドキュメントの書式設定に使用できる XSL 変換スタイル シートを表します。 XML ドキュメントの書式を設定することができます、<xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName>オブジェクト、または適切なプロパティを設定してスタイル シート ファイルの XSL 変換をします</xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName>。 XSL 変換のスタイル シートが指定されていない場合、既定の形式を使用して XML ドキュメントが表示されます。 次の表では、XSL 変換のスタイル シートを指定するためのプロパティが一覧表示します。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.Xml.Transform%2A>|指定されたを使用して XML ドキュメントを書式設定<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>オブジェクト</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName></xref:System.Web.UI.WebControls.Xml.Transform%2A>。 **注:** <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>オブジェクトが必要で使用する`Full Trust`権限です |。  |<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|指定された XSL 変換のスタイル シート ファイルを使用して XML ドキュメントの書式を設定します |。     > [!NOTE] > XSL 変換をスタイル シートは省略可能</xref:System.Web.UI.WebControls.Xml.TransformSource%2A></xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>。 設定する必要はありません、<xref:System.Web.UI.WebControls.Xml.Transform%2A>または<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>プロパティ</xref:System.Web.UI.WebControls.Xml.TransformSource%2A></xref:System.Web.UI.WebControls.Xml.Transform%2A>。 両方の XSL 変換のスタイル シートのプロパティが設定されている場合、最後のプロパティ セットはどの XSL 変換のスタイル シートを使って、XML ドキュメントを書式設定を決定します。 その他のプロパティは無視されます。       Xml クラスも用意されています、<xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>プロパティで、省略可能な引数に XSL 変換のスタイル シートを提供することができます</xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>。 引数には、XSL Transformations (XSLT) のパラメーターまたは拡張オブジェクトのいずれかを指定できます。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:Xml       DocumentSource=&quot;uri&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformSource=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_196_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DocumentSource")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))]

      [System.Web.UI.PersistChildren(false, true)]

      public class Xml : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>クラスです。"
  syntax:
    content: public Xml ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "要素を XML または HTML のいずれかが解析されたし、その要素をサーバー コントロールのサーバー コントロールに通知<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.Xml> server control.  \n  \n [!code-cs[CustomXmlAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_1.aspx)]\n [!code-vb[CustomXmlAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_1.aspx)]  \n  \n [!code-vb[CustomXmlAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_2.vb)]\n [!code-cs[CustomXmlAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_2.cs)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>解析された要素を表す</xref:System.Object>。"
  overload: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>obj</code>型はありません<xref href=&quot;System.Web.UI.LiteralControl&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "上書き、 &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt;プロパティ ベースのサーバー コントロールの識別子を返します。"
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "基本サーバー コントロールの識別子です。"
  overload: System.Web.UI.WebControls.Xml.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Controls
  id: Controls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "も優先、 &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt;プロパティを返します、ベース<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>コレクション。"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "基本<xref href=&quot;System.Web.UI.ControlCollection&quot;></xref>コレクション。"
  overload: System.Web.UI.WebControls.Xml.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新たに作成<xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>オブジェクト。"
  remarks: "CreateControlCollection メソッドは、主の機能を拡張するコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.Xml>コントロール</xref:System.Web.UI.WebControls.Xml>。"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "常に返します、 <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.Xml.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Document
  id: Document
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、 <xref href=&quot;System.Xml.XmlDocument&quot;> </xref>に表示する、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  remarks: "ドキュメント プロパティは、今後使用しません。 表示される XML を指定する、<xref:System.Web.UI.WebControls.Xml>コントロールを使用して、<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>プロパティまたは<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>プロパティ</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A></xref:System.Web.UI.WebControls.Xml.DocumentContent%2A></xref:System.Web.UI.WebControls.Xml>。 これらの方法の詳細については、のクラスの概要を参照してください、<xref:System.Web.UI.WebControls.Xml>コントロール</xref:System.Web.UI.WebControls.Xml>。       XML ドキュメントに表示する、<xref:System.Web.UI.WebControls.Xml>コントロールが&3; つの方法のいずれかで指定します</xref:System.Web.UI.WebControls.Xml>。 指定することができます、<xref:System.Xml.XmlDocument?displayProperty=fullName>オブジェクト、XML 文字列、または適切なプロパティを設定して XML ファイル</xref:System.Xml.XmlDocument?displayProperty=fullName>。 指定する、ドキュメントのプロパティが使用される、 <xref:System.Xml.XmlDocument?displayProperty=fullName>(XML ドキュメントを表す)、コントロールに表示する</xref:System.Xml.XmlDocument?displayProperty=fullName>。"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_173_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_173_1.aspx)]"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "<xref href=&quot;System.Xml.XmlDocument&quot;> </xref>に表示する、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.Xml.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  id: DocumentContent
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示する XML ドキュメントを含む文字列を設定、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  remarks: "XML ドキュメントに表示する、<xref:System.Web.UI.WebControls.Xml>コントロールが&3; つの方法のいずれかで指定します</xref:System.Web.UI.WebControls.Xml>。 指定することができます、<xref:System.Xml.XmlDocument?displayProperty=fullName>オブジェクト、XML 文字列、または適切なプロパティを設定して XML ファイル</xref:System.Xml.XmlDocument?displayProperty=fullName>。 DocumentContent プロパティを使用するにをコントロールに表示する (XML ドキュメントを表す) XML 文字列を指定します。 プロパティは、通常プログラムで設定されていない、DocumentContent またはコントロールの属性として設定します。 代わりに、XML 文字列は、通常設定宣言によって開始タグと終了の間のテキストを配置することによって`<asp:Xml>`コントロールのタグ。      > [!NOTE] > DocumentContent プロパティには、両方が含まれている`get`と`set`アクセサーでのみ、`set`アクセサーが便利です。 使用する場合、`get`アクセサー、<xref:System.String.Empty?displayProperty=fullName>が返されます</xref:System.String.Empty?displayProperty=fullName>。"
  syntax:
    content: public string DocumentContent { get; set; }
    return:
      type: System.String
      description: "表示するドキュメントの XML を格納する文字列、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.Xml.DocumentContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  id: DocumentSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定パスに表示する XML ドキュメント、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  remarks: "XML ドキュメントに表示する、<xref:System.Web.UI.WebControls.Xml>コントロールが&3; つの方法のいずれかで指定します</xref:System.Web.UI.WebControls.Xml>。 指定することができます、<xref:System.Xml.XmlDocument?displayProperty=fullName>オブジェクト、XML 文字列、または適切なプロパティを設定して XML ファイル</xref:System.Xml.XmlDocument?displayProperty=fullName>。 DocumentSource プロパティは、コントロールに表示する (XML ドキュメントを表す) を XML ファイルのパスを指定するために使用します。 相対パスまたは絶対パスを使用することができます。 相対パスは、サーバー上、完全なパスを指定せず、Web フォーム ページやユーザー コントロールの場所にファイルの場所を関連付けます。 Web ページの場所への相対パスでは。 これにより、コード内のファイルにパスを更新することがなく別のディレクトリに、サーバー上のサイト全体を移動しやすくします。 サイトを別のディレクトリに移動する場合は、コードを更新する必要がありますので、絶対パスは、完全なパスを提供します。"
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_902_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_902_1.aspx)]"
  syntax:
    content: public string DocumentSource { get; set; }
    return:
      type: System.String
      description: "表示する XML ドキュメントへのパス、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.Xml.DocumentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "上書き、 &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt;プロパティです。 このプロパティでサポートされていない、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>クラスです。"
  remarks: "EnableTheming プロパティ、<xref:System.Web.UI.Control>クラスしますが、<xref:System.Web.UI.WebControls.Xml>クラス</xref:System.Web.UI.WebControls.Xml>に適用されない</xref:System.Web.UI.Control>から継承します。 このプロパティの値を設定しようとすると、スロー、<xref:System.NotSupportedException>例外です</xref:System.NotSupportedException>。"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 このプロパティがサポートされていません。"
  overload: System.Web.UI.WebControls.Xml.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このプロパティの値を設定しようとしました。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定されたサーバー コントロールのページの名前付けコンテナーを検索します。"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "検索するコントロールの識別子。"
    return:
      type: System.Web.UI.Control
      description: "指定されたコントロールそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>指定されたコントロールが存在しない場合。"
  overload: System.Web.UI.WebControls.Xml.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Focus
  id: Focus
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "上書き、 &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt;メソッドです。 このメソッドでサポートされていない、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>クラスです。"
  remarks: "フォーカス メソッドは<xref:System.Web.UI.Control>、クラスが<xref:System.Web.UI.WebControls.Xml>クラス</xref:System.Web.UI.WebControls.Xml>に適用されない</xref:System.Web.UI.Control>から継承します。 メソッドを呼び出すしようとするとスロー、<xref:System.NotSupportedException>例外です</xref:System.NotSupportedException>。"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このメソッドを呼び出すしようとしました。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールのデザイン時のデータを取得します。"
  remarks: "GetDesignModeState メソッドが現在デザイン時状態を取得するために使用するヘルパー メソッド、<xref:System.Web.UI.WebControls.Xml>コントロール</xref:System.Web.UI.WebControls.Xml>。"
  syntax:
    content: protected override System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>のデザイン時データを含む、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール</xref:System.Collections.IDictionary>。"
  overload: System.Web.UI.WebControls.Xml.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.HasControls
  id: HasControls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "サーバー コントロールに子コントロールが含まれるかどうかを判断します。"
  syntax:
    content: public override bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールには、その他のコントロールが含まれている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.Xml.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "出力ストリームに結果を表示します。"
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.Xml> control is always displayed with an image.  \n  \n [!code-vb[CustomXmlRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[CustomXmlRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_1.aspx)]  \n  \n [!code-cs[CustomXmlRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_2.cs)]\n [!code-vb[CustomXmlRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_2.vb)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter output);
    parameters:
    - id: output
      type: System.Web.UI.HtmlTextWriter
      description: "出力ストリームの結果。"
  overload: System.Web.UI.WebControls.Xml.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "上書き、 &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt;プロパティです。 このプロパティでサポートされていない、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>クラスです。"
  remarks: "SkinID プロパティ、<xref:System.Web.UI.Control>クラスしますが、<xref:System.Web.UI.WebControls.Xml>クラス</xref:System.Web.UI.WebControls.Xml>に適用されない</xref:System.Web.UI.Control>から継承します。 このプロパティの値を設定しようとすると、スロー、<xref:System.NotSupportedException>例外です</xref:System.NotSupportedException>。"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "常に空の文字列を返します (&quot;&quot;) です。 このプロパティがサポートされていません。"
  overload: System.Web.UI.WebControls.Xml.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "このプロパティの値を設定しようとしました。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Transform
  id: Transform
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、 <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref>出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定するオブジェクト。"
  remarks: "使用する場合、 <xref:System.Web.UI.WebControls.Xml>XML ドキュメントを表示するコントロールを必要に応じて、2 つの方法のいずれかで出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定する拡張可能なスタイル シート言語変換 (XSLT) スタイル シートを指定することができます</xref:System.Web.UI.WebControls.Xml>。 いずれかで XML ドキュメントの書式を設定することができます、<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>オブジェクトまたは XSL 変換スタイル シート ファイル</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>。 XSL 変換のドキュメントが指定されていない場合、既定の形式を使用して、XML ドキュメントが表示されます。 指定する Transform プロパティが使用される、 <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>(ドキュメントを表すオブジェクト、XSL 変換) 出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定するために使用します</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>。      > [!NOTE] > を使用して、<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>オブジェクトが必要で`Full Trust`権限</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>。"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_569_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_569_1.aspx)]"
  syntax:
    content: public System.Xml.Xsl.XslTransform Transform { get; set; }
    return:
      type: System.Xml.Xsl.XslTransform
      description: "<xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref>出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定します。"
  overload: System.Web.UI.WebControls.Xml.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、 <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>スタイル シートに渡され、中に、XSLT Extensible Stylesheet Language Transformation () を使用する省略可能な引数のリストを格納します。"
  remarks: "省略可能な引数に XSL 変換のスタイル シートを提供するのにには、TransformArgumentList プロパティを使用します。 引数には、XSLT パラメーターまたは拡張オブジェクトのいずれかを指定できます。       使用しての詳細については、<xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName>クラスを参照してください[スタイル シート パラメーターと拡張オブジェクト用の XsltArgumentList](~/add/includes/ajax-current-ext-md.md)</xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName> 。"
  syntax:
    content: public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "A <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref>スタイル シートに渡され、XSL 変換中に使用される省略可能な引数のリストを格納します。"
  overload: System.Web.UI.WebControls.Xml.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformSource
  id: TransformSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定する拡張可能なスタイル シート言語変換 (XSLT) スタイル シートのパスを設定します。"
  remarks: "使用する場合、 <xref:System.Web.UI.WebControls.Xml>XML ドキュメントを表示するコントロールを必要に応じて、2 つの方法のいずれかで出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定する XSL 変換スタイル シートを指定することができます</xref:System.Web.UI.WebControls.Xml>。 XML ドキュメントの書式を設定することができますか、<xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>オブジェクトまたは XSL 変換のスタイル シート ファイル</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>。 XSL 変換のスタイル シートが指定されていない場合、既定の形式を使用して XML ドキュメントが表示されます。 TransformSource プロパティを使用してを出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定するために使用 (XSL 変換スタイル シートを表す) XSL 変換スタイル シート ファイルへのパスを指定します。 相対パスまたは絶対パスを使用することができます。 相対パスは、サーバー上、完全なパスを指定せず、Web フォーム ページやユーザー コントロールの場所にファイルの場所を関連付けます。 Web ページの場所への相対パスでは。 これにより、コード内のファイルにパスを更新することがなく別のディレクトリに、サーバー上のサイト全体を移動しやすくします。 サイトを別のディレクトリに移動する場合は、コードを更新する必要がありますので、絶対パスは、完全なパスを提供します。"
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_330_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_330_1.aspx)]"
  syntax:
    content: public string TransformSource { get; set; }
    return:
      type: System.String
      description: "出力ストリームに書き込まれる前に、XML ドキュメントの書式を設定する XSL 変換スタイル シートへのパス。"
  overload: System.Web.UI.WebControls.Xml.TransformSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  id: XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の移動およびに関連付けられている XML データを編集するためのカーソル モデル、 <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref>コントロール。"
  remarks: "関連付けるにはこのプロパティを使用することができます、<xref:System.Xml.XPath.XPathNavigator>オブジェクトを<xref:System.Web.UI.WebControls.Xml>コントロール</xref:System.Web.UI.WebControls.Xml></xref:System.Xml.XPath.XPathNavigator>。       <xref:System.Xml.XPath.XPathNavigator>を実装するクラスからオブジェクトを作成、<xref:System.Xml.XPath.IXPathNavigable>インターフェイスなど、<xref:System.Xml.XPath.XPathDocument>と<xref:System.Xml.XmlDocument>クラス</xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XPath.IXPathNavigable></xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>によって作成されたオブジェクト<xref:System.Xml.XPath.XPathDocument>オブジェクトは読み取り専用と<xref:System.Xml.XPath.XPathNavigator>によって作成されたオブジェクト<xref:System.Xml.XmlDocument>オブジェクトを編集することができます</xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathDocument>。</xref:System.Xml.XPath.XPathNavigator> の<xref:System.Xml.XPath.XPathNavigator>オブジェクトの読み取り専用か、または編集可能な状態は<xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>、<xref:System.Xml.XPath.XPathNavigator>クラス</xref:System.Xml.XPath.XPathNavigator>のプロパティ</xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>を使用して決定されます。</xref:System.Xml.XPath.XPathNavigator>"
  syntax:
    content: public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト。"
  overload: System.Web.UI.WebControls.Xml.XPathNavigator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.Xml.#ctor
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Xml.ClientID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Xml.Controls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
- uid: System.Web.UI.WebControls.Xml.Document
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
- uid: System.Web.UI.WebControls.Xml.Focus
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.Xml.HasControls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Xml.SkinID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
- uid: System.Xml.Xsl.XslTransform
  parent: System.Xml.Xsl
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Web.UI.WebControls.Xml.#ctor*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml
  nameWithType: Xml.Xml
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Xml.AddParsedSubObject
- uid: System.Web.UI.WebControls.Xml.ClientID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
- uid: System.Web.UI.WebControls.Xml.Controls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection
  nameWithType: Xml.CreateControlCollection
- uid: System.Web.UI.WebControls.Xml.Document*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
- uid: System.Web.UI.WebControls.Xml.DocumentContent*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
- uid: System.Web.UI.WebControls.Xml.FindControl*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl
  nameWithType: Xml.FindControl
- uid: System.Web.UI.WebControls.Xml.Focus*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus
  nameWithType: Xml.Focus
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState
  nameWithType: Xml.GetDesignModeState
- uid: System.Web.UI.WebControls.Xml.HasControls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls
  nameWithType: Xml.HasControls
- uid: System.Web.UI.WebControls.Xml.Render*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render
  nameWithType: Xml.Render
- uid: System.Web.UI.WebControls.Xml.SkinID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
