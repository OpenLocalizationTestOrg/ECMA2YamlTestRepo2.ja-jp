### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase
  id: EditorZoneBase
  children:
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.Close
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.Display
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState
  - System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit
  langs:
  - csharp
  name: EditorZoneBase
  nameWithType: EditorZoneBase
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase
  type: Class
  summary: "コンテナーとして機能するゾーン コントロールすべての基底クラスとして機能<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>コントロール。"
  remarks: "EditorZoneBase クラスは継承された特殊なゾーン クラス、<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラスし、を含む派生のゾーンの動作の基本セットを提供<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.ToolZone>。 <xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス</xref:System.Web.UI.WebControls.WebParts.ToolZone>の詳細については、<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス</xref:System.Web.UI.WebControls.WebParts.ToolZone>の概要のトピックを参照してください。 その他のいくつかの種類があります。 その他のツールのゾーンのような EditorZoneBase ゾーン時に表示されないページは、通常のブラウズ モードであります。ページが編集表示モードが場合にのみ表示されます。 ゾーンと同様、その他のツール、EditorZoneBase ゾーンのみ含まれる特殊なコントロールが含まれているように設計されていますが (この場合、<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール).</xref:System.Web.UI.WebControls.WebParts.EditorPart>       EditorZoneBase ゾーンは、編集コントロールを含んでいるの特別な UI を提供します。 これらの UI 要素の多くは、Web パーツ コントロール セット内のすべてのゾーンに共通です。 Web パーツ ゾーン内の共通の UI 要素の詳細については、<xref:System.Web.UI.WebControls.WebParts.WebZone>クラス</xref:System.Web.UI.WebControls.WebParts.WebZone>のクラスの概要に関するトピックを参照してください。       EditorZoneBase クラスは抽象であるためは、Web ページ上で直接使用することはできません。 代わりに、EditorZoneBase クラスから継承し、その動作を実装するコントロールを使用する必要があります。 Web パーツ コントロール セットで提供されている派生ゾーンを使用することができますか、<xref:System.Web.UI.WebControls.WebParts.EditorZone>コントロール、またはカスタム EditorZoneBase コントロールを派生させることができます</xref:System.Web.UI.WebControls.WebParts.EditorZone>。       EditorZoneBase クラスには、一般的なユーザー インターフェイス (UI) プロパティ、レイアウト、外観、編集を終了できるようにする特殊なコントロールを格納してその他の属性が用意されています<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart>。 UI に適用されるいくつかのプロパティを参照してください、動詞をなど、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>、および<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>。 動詞は、ページ上のユーザーによって実行される一般的な操作し、は、UI のボタン、リンク、メニュー項目、またはその他の要素によって表されます。 たとえば、ユーザーがコントロールのプロパティを編集する場合、変更を保存する適用の動詞をクリックしています。       その他のいくつかのプロパティでは、編集用の UI のさまざまな時点で表示されるテキストに影響します。 ように、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A>、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A>、および<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>。       2 つの重要なプロパティは、関連するコントロールへの参照を提供します。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>プロパティは、のコレクション、<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーンに含まれるコントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A>プロパティに含まれるコントロールへのオブジェクト参照、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone>--される可能性があります、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールまたはその他の ASP.NET サーバー コントロール、ユーザー コントロール、またはカスタム コントロールが現在編集中します</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.WebPartZone></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit%2A>。       最後に、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A>プロパティのインスタンスを参照する、<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>オブジェクト、ゾーンに関連付けられていると、周辺機器などの UI 要素 (chrome と呼ばれます) のタイトルと枠線のスタイルのスタイル特性を格納している<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPartChrome></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome%2A>。       EditorZoneBase クラスのメソッドの数には、他のコントロールの編集を処理する特殊化します。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>メソッドは、標準参照ビューに戻る編集表示モードからページを変更します</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Close%2A>。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>メソッドは、それぞれを囲む chrome (周辺 UI 要素に罫線、動詞、アイコン、および、タイトルなど) を作成するため<xref:System.Web.UI.WebControls.WebParts.EditorPart>、ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>メソッドは、抽象メソッドです派生クラスでオーバーライドのすべてのインスタンスを作成するために、<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーンに含まれるコントロール。</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A> 。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>場合、派生クラスでメソッドを呼び出すことが、コレクションの<xref:System.Web.UI.WebControls.WebParts.EditorPart>、何らかのプログラムによる理由、Web パーツ コントロール セットを再作成しのコレクションを更新するフラグを設定するゾーンの変更でのコントロール<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A>。 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>のコレクションを設定するメソッドが使用される<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールを`null`ブラウズ モードを編集モードから表示モードの変更をバックアップする場合</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged%2A>。 最後に、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>メソッドがイベントを処理するために使用されるときに、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが入力または編集モードを終了します</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged%2A>。 たとえば、このメソッドは、便利な場所のプロパティ値を同期するために、 <xref:System.Web.UI.WebControls.WebParts.WebPart>、関連する編集可能な値を持つコントロール<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.WebPart>。"
  example:
  - "The following code example demonstrates several declarative and programmatic uses of the EditorZoneBase class. Because the class is abstract, the code examples use the derived <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that ships with the Web Parts control set, demonstrating the properties and methods that it inherits from the EditorZoneBase class.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on the Web page.  \n  \n-   A Web page that contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that demonstrates some of the EditorZoneBase class members.  \n  \n-   A description of how the example works in a browser.  \n  \n The source code for the user control comes from another topic. For this code example to work, you need to obtain the .ascx file for the user control from the [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md) topic, and place the file in the same folder as the .aspx page in this code example.  \n  \n The second part of the code example is a Web page that contains a declarative reference to an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. Near the top of the page is a `Register` directive for the user control. The user control tag is declared in the page with a `<uc1:DisplayModeMenu>` element. Notice that below the `<asp:WebPartZone>` element is an `<asp:EditorZone>` element that contains <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, and has a variety of tags and properties set to determine its appearance and behavior. Most of the code in the page demonstrates the various programmatic uses of the EditorZoneBase properties and methods.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_377_1.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_377_1.aspx)]  \n  \n The third part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.EditorZone> class that shows how to work with a number of the EditorZoneBase class members. The custom class derives from <xref:System.Web.UI.WebControls.WebParts.EditorZone> so that it can be used with a zone template in the declarative markup of the Web page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; thus, you will notice that the `Register` directive near the top of the Web page does not reference an assembly file. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_EditorZoneBase_Common#12](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_377_2.vb)]\n [!code-cs[WebParts_EditorZoneBase_Common#12](~/add/codesnippet/csharp/t-system.web.ui.webcontr_377_2.cs)]  \n  \n When you load the page in a browser, you can select **Edit Mode** from the drop-down list to switch to edit mode. You can click the verbs menu (the downward arrow) in the title bar of one of the two controls, and click **Edit** to edit the control. When the editing UI is visible, you can see the effects of the various declarative and programmatic uses of the EditorZoneBase class members."
  syntax:
    content: 'public abstract class EditorZoneBase : System.Web.UI.WebControls.WebParts.ToolZone'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.CompositeControl
  - System.Web.UI.WebControls.WebParts.WebZone
  - System.Web.UI.WebControls.WebParts.ToolZone
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.CompositeControl.Controls
  - System.Web.UI.WebControls.CompositeControl.DataBind
  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls
  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  - System.Web.UI.WebControls.WebParts.ToolZone.AssociatedDisplayModes
  - System.Web.UI.WebControls.WebParts.ToolZone.EditUIStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb
  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderVerbStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.InstructionTextStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.LabelStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.ToolZone.RenderFooter(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)
  - System.Web.UI.WebControls.WebParts.ToolZone.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.WebParts.ToolZone.Visible
  - System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl
  - System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneTextStyle
  - System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle
  - System.Web.UI.WebControls.WebParts.WebZone.FooterStyle
  - System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)
  - System.Web.UI.WebControls.WebParts.WebZone.HasFooter
  - System.Web.UI.WebControls.WebParts.WebZone.HasHeader
  - System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle
  - System.Web.UI.WebControls.WebParts.WebZone.Padding
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromePadding
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeType
  - System.Web.UI.WebControls.WebParts.WebZone.PartStyle
  - System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle
  - System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebZone.RenderClientScript
  - System.Web.UI.WebControls.WebParts.WebZone.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebZone.TagKey
  - System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType
  - System.Web.UI.WebControls.WebParts.WebZone.VerbStyle
  - System.Web.UI.WebControls.WebParts.WebZone.WebPartManager
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: EditorZoneBase()
  nameWithType: EditorZoneBase.EditorZoneBase()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorZoneBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。"
  remarks: "このコンス トラクターで、継承クラスによって呼び出されたときに渡す、<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>オブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>編集のユーザー インターフェイス (UI) を表示するページを使用するコントロールを.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>"
  syntax:
    content: protected EditorZoneBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb
  id: ApplyVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: ApplyVerb
  nameWithType: EditorZoneBase.ApplyVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>編集を適用するエンドユーザーを有効にするオブジェクトが編集モードでのコントロールに変更します。"
  remarks: "Apply 動詞が<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>から派生したコントロールに ApplyVerb プロパティによって参照されます。 Apply 動詞は、編集、編集するユーザー インターフェイス (UI) に、エンドユーザーが行った変更を保存現在編集されているサーバー コントロールにします。 既定では、適用動詞として UI に表示されます、<xref:System.Web.UI.WebControls.Button>コントロール。</xref:System.Web.UI.WebControls.Button> 。 イメージ、リンク、または実際のボタンです。 ボタンの種類を指定できます。できますで設定するすべての動詞ボタンの (個々 のボタン) は、ゾーン、継承された設定によって<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>ゾーン レベルのプロパティ</xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>。       Apply 動詞がいくつかありますが、つまり、ゾーン レベルの制御<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール、それぞれ&1; つまたは複数のプロパティが編集モードでサーバー コントロールを編集して適用動詞動作ユニバーサルすべてからのすべての変更を適用する、<xref:System.Web.UI.WebControls.WebParts.EditorPart>サーバー コントロールに、ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。"
  example:
  - "The following code example demonstrates how to access the ApplyVerb property both declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The first part of the code example shows how to access the ApplyVerb property declaratively in a Web page. This example customizes the text for the verb.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_13_1.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_13_1.aspx)]  \n  \n The second part of the example shows how to access the ApplyVerb property programmatically, by using a toggle button to enable or disable it.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_13_2.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_13_2.aspx)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing UI are visible, you can see the button that represents the apply verb, and click the **Toggle ApplyVerb Enabled** button to enable or disable it."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerb ApplyVerb { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerb
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>をエンドユーザーがコントロールに変更を適用します。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb
  id: CancelVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: CancelVerb
  nameWithType: EditorZoneBase.CancelVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>編集をキャンセルするエンドユーザーを有効にするオブジェクトが編集モードでのコントロールに変更します。"
  remarks: "Cancel 動詞が<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>から派生したコントロールに CancelVerb プロパティによって参照されます。 Cancel 動詞では、エンド ユーザーが編集のユーザー インターフェイス (UI) 内のサーバー コントロールに対して行った変更を取り消します。 既定では、[キャンセル] 動詞として UI に表示されます、<xref:System.Web.UI.WebControls.Button>コントロール。</xref:System.Web.UI.WebControls.Button> 。 イメージ、リンク、または実際のボタンです。 ボタンの種類を指定できます。できますで設定するすべての動詞ボタンの (個々 のボタン) は、ゾーン、継承された設定によって<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>ゾーン レベルのプロパティ</xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>。       ユーザーが none での変更の編集をキャンセルするときに、<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールが編集されているサーバー コントロールに適用されます</xref:System.Web.UI.WebControls.WebParts.EditorPart>。 さらに、ページ編集表示はモードのまま、ですが、<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールが非表示と<xref:System.Web.UI.WebControls.WebParts.WebPart>編集されているコントロールが選択されていない</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。 これにより、別の選択をエンドユーザー<xref:System.Web.UI.WebControls.WebParts.WebPart>もう一度表示モードを変更することがなくを編集するコントロール</xref:System.Web.UI.WebControls.WebParts.WebPart>。       Cancel 動詞は、ゾーン レベルのコントロールすることがありますがいくつか<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール、1 つまたは複数のプロパティが編集モードでサーバー コントロールを編集して各 cancel 動詞動作ユニバーサルすべてからのすべての変更を取り消します、<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。"
  example:
  - "The following code example demonstrates how to access the CancelVerb property both declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The first part of the code example shows how to access the CancelVerb property declaratively in a Web page. This example customizes the text for the verb.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_655_1.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_655_1.aspx)]  \n  \n The second part of the example shows how to access the CancelVerb property programmatically, by using a toggle button to enable or disable it.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_655_2.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_655_2.aspx)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing UI are visible, you can see the button that represents the cancel verb, and click the **Toggle CancelVerb Enabled** button to enable or disable it."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CancelVerb { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerb
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>をエンドユーザーがコントロールに編集をキャンセルします。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close
  id: Close
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: Close()
  nameWithType: EditorZoneBase.Close()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ユーザーには、ゾーンのヘッダーに閉じる動詞がクリックしたときに呼び出されると、このメソッドは編集のプロセスを終了<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>コントロール、および Web パーツ ページの表示モードをブラウズ モードを返します。"
  remarks: "Close メソッドが<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス</xref:System.Web.UI.WebControls.WebParts.ToolZone>で宣言された基本メソッドの実装を提供します。 実装を呼び出すだけ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>メソッドで、編集のプロセスを終了するための手順を実行します</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>。       Close メソッドを呼び出してモードを参照するページを返し、いずれかに加えられた編集の変更を取り消します<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart>。"
  syntax:
    content: protected override void Close ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: EditorZoneBase.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "関連付けられたコントロールの子のセットを作成、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>ゾーンです。"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome
  id: CreateEditorPartChrome
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: CreateEditorPartChrome()
  nameWithType: EditorZoneBase.CreateEditorPartChrome()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "新しいへの参照を取得<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartChrome&quot;></xref>周辺機器のユーザー インターフェイス (UI) 要素の周囲を表示するために使用されるオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>ゾーンです。"
  remarks: "CreateEditorPartChrome メソッドは、新しいを返します<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>オブジェクト</xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>。 Chrome には、個別の周囲にある次の周辺機器 UI 要素が含まれています<xref:System.Web.UI.WebControls.WebParts.EditorPart>、ゾーン内のコントロール: 罫線; タイトル バー、タイトル バー、省略可能なアイコン、タイトルのテキストと動詞メニュー; コントロールのフッター領域に表示されるアイテムなど内に表示される項目。</xref:System.Web.UI.WebControls.WebParts.EditorPart> 。       CreateEditorPartChrome メソッドを使用して、返された<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>各の周囲の chrome を作成するオブジェクト<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.EditorPartChrome CreateEditorPartChrome ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartChrome
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartChrome&quot;> </xref>ゾーンの周辺の UI 要素を表示します。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: EditorZoneBase.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "作成の詳細を処理するゾーンを派生する基本メソッド宣言をオーバーライドできますを提供、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref>ゾーンに含まれるコントロール。"
  remarks: "CreateEditorParts メソッドは実装を提供します。 派生クラスで実装するものでは、コレクションのインスタンスを作成するために使用する必要があります<xref:System.Web.UI.WebControls.WebParts.EditorPart>ホストする Web ページに入力したときに、ゾーンに含まれているコントロールの編集モード</xref:System.Web.UI.WebControls.WebParts.EditorPart>。 <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=fullName>メソッドは、CreateEditorParts メソッドの実装の&1; つの例を提供します</xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A?displayProperty=fullName>。"
  syntax:
    content: protected abstract System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref>のコレクションを含む<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>ゾーンに関連付けられているコントロール。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display
  id: Display
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: Display
  nameWithType: EditorZoneBase.Display
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref>コントロールが現在表示されています。"
  syntax:
    content: protected override bool Display { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref>が現在表示されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome
  id: EditorPartChrome
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: EditorPartChrome
  nameWithType: EditorZoneBase.EditorPartChrome
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "インスタンスへの参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartChrome&quot;> </xref>クラスに関連付けられている、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>ゾーンです。"
  remarks: "EditorPartChrome プロパティへの参照を提供する、<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>ゾーンに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>。 ときに、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>メソッドが呼び出されると、インスタンスの作成、<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome>クラス、およびこのインスタンスがすべての周辺機器のユーザー インターフェイス (UI) 要素 (クロムとも呼ばれます) を表示するために使用される<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPartChrome></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome%2A>。       個々 の chrome 要素<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールの動詞、アイコン、およびタイトルのテキストなど、ヘッダー領域だけでなく、フッター領域や、含まれる要素の境界線およびその他の項目を含める</xref:System.Web.UI.WebControls.WebParts.EditorPart>。"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPartChrome EditorPartChrome { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartChrome
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartChrome&quot;> </xref>の chrome 要素のスタイル特性を格納している<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>ゾーン内のコントロールです。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts
  id: EditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: EditorParts
  nameWithType: EditorZoneBase.EditorParts
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "すべてのコレクションを取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref>に含まれるコントロール、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>ゾーンです。"
  remarks: "EditorParts プロパティは、すべてのコレクションへの参照を提供、<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart>。 両方を参照して、 <xref:System.Web.UI.WebControls.WebParts.EditorPart>Web パーツ コントロール セット、および任意のカスタム コントロール<xref:System.Web.UI.WebControls.WebParts.EditorPart>をゾーンに追加されるコントロールです</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。 作成する開発者向けコレクションが読み取り専用のため<xref:System.Web.UI.WebControls.WebParts.EditorPart>一般的な編集を目的し、コレクションに追加のコントロールは、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>メソッド</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A></xref:System.Web.UI.WebControls.WebParts.EditorPart>。       カスタム デザインする場合は<xref:System.Web.UI.WebControls.WebParts.EditorPart>特定を編集するコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールのメンバーをオーバーライドする必要があります、<xref:System.Web.UI.WebControls.WebParts.IWebEditable>インターフェイス--、<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>メソッドおよび<xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>プロパティで、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A></xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A></xref:System.Web.UI.WebControls.WebParts.IWebEditable></xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。 有効にするのにはこれらのメンバーをオーバーライドするため、<xref:System.Web.UI.WebControls.WebParts.WebPart>カスタムを作成するコントロールを<xref:System.Web.UI.WebControls.WebParts.EditorPart>を制御し、追加、コントロールが編集されている場合に、し、EditorParts コレクションへのオブジェクト参照での編集コントロールを提供したり、<xref:System.Web.UI.WebControls.WebParts.WebPart>編集するコントロール</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.WebPart>。 カスタムを追加する場合は、<xref:System.Web.UI.WebControls.WebParts.EditorPart>から継承しないサーバー コントロールを編集するコントロール、<xref:System.Web.UI.WebControls.WebParts.WebPart>クラスが実装する必要があります、<xref:System.Web.UI.WebControls.WebParts.IWebEditable>のと同じように、クラスのインターフェイス、<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.IWebEditable></xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。      > [!NOTE] > ことに注意してください<xref:System.Web.UI.WebControls.WebParts.EditorPart>のコレクションに追加されている<xref:System.Web.UI.WebControls.WebParts.EditorPart>の実装内のコントロール、<xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>メソッドは、ID プロパティに割り当てられている値を持つ必要があります、し、EditorParts プロパティに割り当てられると、コレクション、例外がスローするそれ以外の場合</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A></xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。"
  example:
  - "The following code example demonstrates how to access the EditorParts property programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The first part of the code example demonstrates that the EditorParts property contains references to all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls that are referenced declaratively in the Web page.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_392_1.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_392_1.aspx)]  \n  \n The second part of the code example programmatically accesses the EditorParts property and lists the ID of each control in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_392_2.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_392_2.aspx)]  \n  \n When you load the page in a browser, you can click the **Display EditorParts Collection** button to list the IDs of all the <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls referenced in the EditorParts property."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPartCollection EditorParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref>を含むすべての個人<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>ゾーン内のコントロールです。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref>コレクションに追加されても、ID プロパティに割り当てられた値はありません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText
  id: EmptyZoneText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: EmptyZoneText
  nameWithType: EditorZoneBase.EmptyZoneText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはゾーンにコントロールが含まれないときに表示されるメッセージを設定します。"
  syntax:
    content: public override string EmptyZoneText { get; set; }
    return:
      type: System.String
      description: "空の領域に表示されるメッセージを含む文字列。 既定のカルチャに固有の文字列は、.NET Framework で提供されます。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText
  id: ErrorText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: ErrorText
  nameWithType: EditorZoneBase.ErrorText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得または編集のユーザー インターフェイス (UI) の上部に表示するゾーン レベルのエラー メッセージのテキストを設定します。"
  remarks: "エラー テキストのプロパティには、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>から派生したコントロールのレンダリング中にエラーが発生した場合、UI に表示できるエラー メッセージのテキストが含まれています。 個々 のいずれかでエラーが発生した場合、ゾーンの上部にあるエラー メッセージが表示されます<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーンに含まれるコントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart>。 さらに、各<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールは、エラーを受け取るコントロール付近の独自のエラー メッセージを表示できます</xref:System.Web.UI.WebControls.WebParts.EditorPart>。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  syntax:
    content: public virtual string ErrorText { get; set; }
    return:
      type: System.String
      description: "エラー メッセージが含まれるローカライズされた文字列。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: HeaderText
  nameWithType: EditorZoneBase.HeaderText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはゾーンのヘッダー領域のテキストを設定します。"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "ゾーンのヘッダー テキストを含む文字列です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText
  id: InstructionText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: InstructionText
  nameWithType: EditorZoneBase.InstructionText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得または設定、テキスト、 <xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;> </xref>エンドユーザーの指示を提供するコントロール。"
  syntax:
    content: public override string InstructionText { get; set; }
    return:
      type: System.String
      description: "エンドユーザーの指示を含む文字列です。 特定のツールのゾーンに適切な既定値は、によって提供される派生<xref href=&quot;System.Web.UI.WebControls.WebParts.ToolZone&quot;></xref>クラスです。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts
  id: InvalidateEditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: InvalidateEditorParts()
  nameWithType: EditorZoneBase.InvalidateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コレクションを設定<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>コントロールに関連付けられている、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>にゾーン<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、その結果、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts*>コレクションを再作成に呼び出されるメソッド</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts*>。"
  remarks: "メソッドを呼び出せるによって派生 InvalidateEditorParts クラスの一覧<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロールに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>いくつかの理由から、ゾーンが変更され、派生クラスは、更新の一覧を取得する必要があります<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase></xref:System.Web.UI.WebControls.WebParts.EditorPart>。 派生クラスに、現在のコレクションを設定する InvalidateEditorParts を呼び出す必要があります`null`です。 次回、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>コレクションへのアクセスは、Web パーツ コントロールが自動的にセットを呼び出す、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A>更新されたコレクションを作成する方法</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>。"
  syntax:
    content: protected void InvalidateEditorParts ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: EditorZoneBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "以前に保存されたゾーンの状態情報を読み込みます。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドでは、OK 動詞、キャンセル動詞または適用の動詞がクリックされたゾーンであるため、ページが読み込まれるかどうかをチェックする基本メソッドをオーバーライドします。 場合は、それぞれ各シナリオに関連付けられた状態を処理します。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "以前に保存された状態です。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ、 <code> savedState </code>オブジェクトが現在のビュー状態オブジェクトのサイズと等しくないです。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb
  id: OKVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: OKVerb
  nameWithType: EditorZoneBase.OKVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>編集が適用されるオブジェクトが編集モードでのコントロールに変更し、編集のユーザー インターフェイス (UI) を非表示にします。"
  remarks: "[Ok] の動詞が<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>から派生したコントロールに OKVerb プロパティによって参照されます。 ユーザーをクリックすると、それが、サーバー コントロールにユーザーが行った編集が適用される点で適用動詞に似ています。 さらに、編集コントロールは表示されず、<xref:System.Web.UI.WebControls.WebParts.WebPart>編集されているコントロールが選択されていない (これを別のコントロールを編集するユーザーの許可)、およびページが編集モードのままです</xref:System.Web.UI.WebControls.WebParts.WebPart>。       既定では、[ok] の動詞として UI に表示されます、<xref:System.Web.UI.WebControls.Button>コントロール。</xref:System.Web.UI.WebControls.Button> 。 イメージ、リンク、または実際のボタンです。 ボタンの種類を指定できます。できますで設定するすべての動詞ボタンの (個々 のボタン) は、ゾーン、継承された設定によって<xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>ゾーン レベルのプロパティ</xref:System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType%2A>。       [Ok] の動詞は、ゾーン レベルのコントロールすることがありますがいくつか<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール、1 つまたは複数のプロパティが編集モードでサーバー コントロールを編集して各 OK 動詞動作ユニバーサルすべてからのすべての変更を適用する、<xref:System.Web.UI.WebControls.WebParts.EditorPart>ゾーンでは、非表示にしたり、ゾーンを除くすべてのコントロールを制御します</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorPart>。"
  example:
  - "The following code example demonstrates how to access the OKVerb property both declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The first part of the code example shows how to access the OKVerb property declaratively in a Web page. This example customizes the text for the verb.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_399_1.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_399_1.aspx)]  \n  \n The second part of the example shows how to access the OKVerb programmatically, by using a toggle button to enable or disable it.  \n  \n [!code-cs[WebParts_EditorZoneBase_Common#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_399_2.aspx)]\n [!code-vb[WebParts_EditorZoneBase_Common#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_399_2.aspx)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing UI are visible, you can see the button that represents the OK verb, and click the **Toggle OKVerb Enabled** button to enable or disable it."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerb OKVerb { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerb
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>をコントロールに編集を適用し、編集用の UI を非表示にします。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
  nameWithType: EditorZoneBase.OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref>イベントすべてを破棄して<xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;></xref>を入力するか、編集を終了するには、Web ページの前に、ゾーン内の子コントロールがモードを表示します。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス</xref:System.Web.UI.WebControls.WebParts.ToolZone>の基本メソッドの実装を提供する OnDisplayModeChanged メソッド       OnDisplayModeChanged メソッドの主な目的は、入力または編集表示モードを終了する Web ページを準備するのにです。 メソッドは、ゾーンに含まれるすべてのコントロールを破棄しを生成する基本のメソッドを呼び出して、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>内のイベント、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>。"
  example:
  - "The following code example demonstrates how to override the OnDisplayModeChanged method in a derived class. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The custom editor zone derives from the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class so that it can be used with a zone template in the declarative markup of the Web page. The custom class overrides the OnDisplayModeChanged method, setting the background color of the zone to a specified color, and then calls the base method, which destroys all child and <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls in preparation for entering or exiting edit display mode.  \n  \n [!code-vb[WebParts_EditorZoneBase_Common#13](~/add/codesnippet/visualbasic/e54d0e41-2a62-4994-8f59-_1.vb)]\n [!code-cs[WebParts_EditorZoneBase_Common#13](~/add/codesnippet/csharp/e54d0e41-2a62-4994-8f59-_1.cs)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing user interface (UI) are visible, you can see that the zone has the background color specified in the code."
  syntax:
    content: protected override void OnDisplayModeChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "<xref:System.Object>を発生させる、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref>イベント</xref:System.Object>。"
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: EditorZoneBase.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベント、および呼び出し、<xref:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender*>の chrome 要素のメソッド、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPartChrome.PerformPreRender*>。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "A &lt;xref:System.EventArgs?displayProperty=fullName&gt;イベント データを格納します。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: OnSelectedWebPartChanged(Object,WebPartEventArgs)
  nameWithType: EditorZoneBase.OnSelectedWebPartChanged(Object,WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(Object,WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref>イベントとセット、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts*>コレクション<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>に備えてゾーンで、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>を入力するか終了するコントロールが編集モード</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts*>。"
  remarks: "OnSelectedWebPartChanged メソッドでは、個々 のときに発生するイベントのカスタム処理を提供することができます<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールが入力または編集モードを終了します</xref:System.Web.UI.WebControls.WebParts.WebPart>。"
  example:
  - "The following code example demonstrates how to override the OnSelectedWebPartChanged method in a derived class. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The custom editor zone derives from the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class so that it can be used with a zone template in the declarative markup of the Web page. The custom class overrides the OnSelectedWebPartChanged method, setting the background color of the specific control that is being edited, and then calls the base method.  \n  \n [!code-vb[WebParts_EditorZoneBase_Common#14](~/add/codesnippet/visualbasic/f8ed5b48-7a40-4597-a46c-_1.vb)]\n [!code-cs[WebParts_EditorZoneBase_Common#14](~/add/codesnippet/csharp/f8ed5b48-7a40-4597-a46c-_1.cs)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> and editing user interface (UI) are visible, you can see that the selected control has the background color specified in the code."
  syntax:
    content: protected override void OnSelectedWebPartChanged (object sender, System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "<xref:System.Object>を発生させる、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref>イベント</xref:System.Object>。"
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: EditorZoneBase.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ゾーン動詞のいずれかに関連付けられたアクションを実行するか、サーバーへのポストバック イベントが発生します。"
  remarks: "RaisePostBackEvent メソッドは、これらの動詞のいずれかのユーザー インターフェイス (UI) 内でクリックしてされた場合、[ok] の動詞、cancel 動詞または適用動詞に関連付けられているそれぞれのアクションを実行します。 それ以外の場合、サーバーへのポストバック イベントを発生させます。"
  syntax:
    content: protected override void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "A <xref:System.String>、イベントの引数を格納している</xref:System.String>。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: EditorZoneBase.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "指定されたゾーンをレンダリング<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>オブジェクト。"
  remarks: "Render メソッドから基本メソッドをオーバーライドする、<xref:System.Web.UI.WebControls.WebControl>クラスを呼び出して、<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>メソッドで、実行時に、ゾーン コントロールの HTML フォームが表示されることを確認します</xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A></xref:System.Web.UI.WebControls.WebControl>。 検証した後に、メソッドは、ゾーンの完全な内容を表示するために、基本メソッドを呼び出します。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  id: RenderBody(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: RenderBody(HtmlTextWriter)
  nameWithType: EditorZoneBase.RenderBody(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "派生したゾーンの本体領域を表示するために基本メソッドをオーバーライドして、 <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorZoneBase&quot;> </xref>クラスです。"
  remarks: "RenderBody メソッドの本体領域の表示、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>ゾーンでは、ヘッダーとページ フッターの領域間でのメイン コンテンツ領域は、含む<xref:System.Web.UI.WebControls.WebParts.EditorPart>コントロール</xref:System.Web.UI.WebControls.WebParts.EditorPart></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>。       RenderBody メソッドで基本メソッドのオーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebZone>レイアウトとスタイルに対応する特殊な表示属性を提供するクラスがのみに適用<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase></xref:System.Web.UI.WebControls.WebParts.WebZone>。 メソッドは、本文の内容全体を含むテーブルを出力し、そのテーブル内で、ページの現在の表示モードを含む、さまざまな条件に応じて別の属性値を設定します。 値を表示、含まれているコントロールがない場合、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>。"
  example:
  - "The following code example demonstrates how to override the RenderBody method in a derived class. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The custom editor zone derives from the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class so that it can be used with a zone template in the declarative markup of the Web page. The custom class overrides the RenderBody method, adding an HTML `<hr />` element to create a line between the header and body of the zone. It then calls the base method to render the rest of the zone's body contents.  \n  \n [!code-vb[WebParts_EditorZoneBase_Common#15](~/add/codesnippet/visualbasic/6b94a57c-2292-4dc5-a2fe-_1.vb)]\n [!code-cs[WebParts_EditorZoneBase_Common#15](~/add/codesnippet/csharp/6b94a57c-2292-4dc5-a2fe-_1.cs)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing user interface (UI) are visible, you can see the line created between the header and body of the editor zone."
  syntax:
    content: protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの本文の内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  id: RenderVerbs(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: RenderVerbs(HtmlTextWriter)
  nameWithType: EditorZoneBase.RenderVerbs(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ゾーンのレベルで適用された動詞を表示します。"
  remarks: 'RenderVerbs メソッドは、ゾーン全体に適用するアクションの動詞を表示します。 [ok] の動詞、cancel 動詞および適用動詞です。 これらの動詞がで参照されている、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>、 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A>、および<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb%2A></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb%2A>。'
  example:
  - "The following code example demonstrates how to override the RenderVerbs method in a derived class. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> class overview topic.  \n  \n The custom editor zone derives from the <xref:System.Web.UI.WebControls.WebParts.EditorZone> class so that it can be used with a zone template in the declarative markup of the Web page. The custom class overrides the RenderVerbs method, adding some text to the existing value of the <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Text%2A> property for each of the zone-level verbs. It then calls the base method to render all the verbs.  \n  \n [!code-vb[WebParts_EditorZoneBase_Common#16](~/add/codesnippet/visualbasic/7f15513e-ba64-4bf1-aa78-_1.vb)]\n [!code-cs[WebParts_EditorZoneBase_Common#16](~/add/codesnippet/csharp/7f15513e-ba64-4bf1-aa78-_1.cs)]  \n  \n When you load the page in a browser, you can select **Edit Mode** in the drop-down list control to switch to edit mode. You can click the verbs menu (the down arrow) in the title bar of one of the controls, and click **Edit** to edit the selected control. When the <xref:System.Web.UI.WebControls.WebParts.EditorZone> control and editing user interface (UI) are visible, you can see the text has been changed on the buttons for the zone-level verbs at the bottom of the zone."
  syntax:
    content: protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの本文の内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: EditorZoneBase.SaveViewState()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ページがサーバーにポストされた後に発生した任意のビュー状態の変更を保存します。"
  remarks: "SaveViewState メソッドは、ビュー状態を保存する基本メソッドを呼び出してされ、適用、[キャンセル]、[ok] の動詞と関連付けられた任意のビュー ステートも保存されます。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "ゾーン コントロールの現在のビュー ステートを返します。 ビュー ステートがいないかどうか、ゾーンに関連付け、このメソッドが戻る<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: EditorZoneBase.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ゾーン コントロールのビュー ステートの変更を追跡します。"
  remarks: "TrackViewState メソッドが最初に関連付けられているビュー ステートを追跡するために基本メソッドを呼び出して、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>ゾーン、し、適用、cancel、[ok] の動詞のビュー状態の追跡を開始します</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit
  id: WebPartToEdit
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  langs:
  - csharp
  name: WebPartToEdit
  nameWithType: EditorZoneBase.WebPartToEdit
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>現在編集されているコントロール。"
  remarks: "1 つだけ<xref:System.Web.UI.WebControls.WebParts.WebPart>、時にコントロールを編集することができ、WebPartToEdit プロパティがそのコントロールへの参照を提供するコントロールが編集モード、.</xref:System.Web.UI.WebControls.WebParts.WebPart> 参照されているコントロールがコントロールによって参照されていると同じ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>。 そのため、現在編集されているコントロールは常に現在選択されています。"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPart WebPartToEdit { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>ですが、現在編集モードでします。"
  overload: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.ToolZone
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.ToolZone
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorZoneBase()
  nameWithType: EditorZoneBase.EditorZoneBase()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorZoneBase()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: ApplyVerb
  nameWithType: EditorZoneBase.ApplyVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb
- uid: System.Web.UI.WebControls.WebParts.WebPartVerb
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartVerb
  nameWithType: WebPartVerb
  fullName: System.Web.UI.WebControls.WebParts.WebPartVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CancelVerb
  nameWithType: EditorZoneBase.CancelVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Close()
  nameWithType: EditorZoneBase.Close()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateChildControls()
  nameWithType: EditorZoneBase.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateEditorPartChrome()
  nameWithType: EditorZoneBase.CreateEditorPartChrome()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome()
- uid: System.Web.UI.WebControls.WebParts.EditorPartChrome
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartChrome
  nameWithType: EditorPartChrome
  fullName: System.Web.UI.WebControls.WebParts.EditorPartChrome
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateEditorParts()
  nameWithType: EditorZoneBase.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Display
  nameWithType: EditorZoneBase.Display
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorPartChrome
  nameWithType: EditorZoneBase.EditorPartChrome
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorParts
  nameWithType: EditorZoneBase.EditorParts
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EmptyZoneText
  nameWithType: EditorZoneBase.EmptyZoneText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: ErrorText
  nameWithType: EditorZoneBase.ErrorText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: HeaderText
  nameWithType: EditorZoneBase.HeaderText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: InstructionText
  nameWithType: EditorZoneBase.InstructionText
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: InvalidateEditorParts()
  nameWithType: EditorZoneBase.InvalidateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: EditorZoneBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OKVerb
  nameWithType: EditorZoneBase.OKVerb
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
  nameWithType: EditorZoneBase.OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged(Object,WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: EditorZoneBase.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnSelectedWebPartChanged(Object,WebPartEventArgs)
  nameWithType: EditorZoneBase.OnSelectedWebPartChanged(Object,WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged(Object,WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: EditorZoneBase.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: EditorZoneBase.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RenderBody(HtmlTextWriter)
  nameWithType: EditorZoneBase.RenderBody(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RenderVerbs(HtmlTextWriter)
  nameWithType: EditorZoneBase.RenderVerbs(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: SaveViewState()
  nameWithType: EditorZoneBase.SaveViewState()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: TrackViewState()
  nameWithType: EditorZoneBase.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: WebPartToEdit
  nameWithType: EditorZoneBase.WebPartToEdit
  fullName: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.#ctor*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorZoneBase
  nameWithType: EditorZoneBase.EditorZoneBase
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: ApplyVerb
  nameWithType: EditorZoneBase.ApplyVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CancelVerb*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CancelVerb
  nameWithType: EditorZoneBase.CancelVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Close*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Close
  nameWithType: EditorZoneBase.Close
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateChildControls*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateChildControls
  nameWithType: EditorZoneBase.CreateChildControls
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorPartChrome*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateEditorPartChrome
  nameWithType: EditorZoneBase.CreateEditorPartChrome
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: CreateEditorParts
  nameWithType: EditorZoneBase.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Display*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Display
  nameWithType: EditorZoneBase.Display
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorPartChrome*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorPartChrome
  nameWithType: EditorZoneBase.EditorPartChrome
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EditorParts
  nameWithType: EditorZoneBase.EditorParts
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: EmptyZoneText
  nameWithType: EditorZoneBase.EmptyZoneText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.ErrorText*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: ErrorText
  nameWithType: EditorZoneBase.ErrorText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.HeaderText*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: HeaderText
  nameWithType: EditorZoneBase.HeaderText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InstructionText*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: InstructionText
  nameWithType: EditorZoneBase.InstructionText
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: InvalidateEditorParts
  nameWithType: EditorZoneBase.InvalidateEditorParts
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.LoadViewState*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: LoadViewState
  nameWithType: EditorZoneBase.LoadViewState
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OKVerb*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OKVerb
  nameWithType: EditorZoneBase.OKVerb
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: EditorZoneBase.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnPreRender
  nameWithType: EditorZoneBase.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: EditorZoneBase.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: EditorZoneBase.RaisePostBackEvent
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.Render*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: Render
  nameWithType: EditorZoneBase.Render
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RenderBody
  nameWithType: EditorZoneBase.RenderBody
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderVerbs*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: RenderVerbs
  nameWithType: EditorZoneBase.RenderVerbs
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.SaveViewState*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: SaveViewState
  nameWithType: EditorZoneBase.SaveViewState
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: TrackViewState
  nameWithType: EditorZoneBase.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.EditorZoneBase.WebPartToEdit*
  parent: System.Web.UI.WebControls.WebParts.EditorZoneBase
  isExternal: false
  name: WebPartToEdit
  nameWithType: EditorZoneBase.WebPartToEdit
