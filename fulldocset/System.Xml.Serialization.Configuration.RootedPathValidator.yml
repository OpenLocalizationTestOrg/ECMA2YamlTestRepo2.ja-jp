### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.Configuration.RootedPathValidator
  id: RootedPathValidator
  children:
  - System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  - System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  - System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  langs:
  - csharp
  name: RootedPathValidator
  nameWithType: RootedPathValidator
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator
  type: Class
  summary: "使用を制御するルールの検証、`tempFilesLocation`構成スイッチ。"
  remarks: "追加するときに、 `WebReference` Web サービスにオブジェクト、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]ファイルは、Web サービスの検出プロセスによって作成されます。       Web サービス クライアントを追加することで、Web サービス記述言語 (WSDL) ドキュメントを検索する場所の説明、`WebReference`オブジェクト。 Web サービス クライアント、検出されたドキュメントをディスクに保存を使用して、`WriteAll`メソッドです。 たとえば、検出されたドキュメントには、スキーマの .xsd ファイルまたはサービスの説明があります。 プロセスの最後に、クライアントは、ファイルを削除します。 使用して、一時フォルダー内のファイルの既定の場所を変更することができます、`tempFilesLocation`に切り替え、 `<xmlSerializer>` Machine.config 構成ファイルの次の例のようにで指定された要素。      ```   <configuration>     <system.web>     <system.xml.serialization>       <xmlSerializer tempFilesLocation=&quot;..&quot;/>     </system.xml.serialization>   </configuration>   ```値`tempFilesLocation`絶対パスである必要があります。 指定されたパスが絶対、ない場合、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]が生成されます、<xref:System.Configuration.ConfigurationErrorsException>構成セクションを参照する場合は例外です</xref:System.Configuration.ConfigurationErrorsException>。       先頭および末尾の空白を削除するプロパティの値が切り捨てられます。       場合の値、`tempFilesLocation`プロパティが空白文字で構成される、既定 %TMP% 場所が、コンパイルに使用されます。 ない場合、同じ既定の動作が発生した`tempFilesLocation`スイッチを指定します。       <xref:System.Xml.Serialization.XmlSerializer>パスが存在するかどうかはチェックされません</xref:System.Xml.Serialization.XmlSerializer>。 いない場合、<xref:System.IO.DirectoryNotFoundException>が生成されます</xref:System.IO.DirectoryNotFoundException>。 これは既定の動作と同じ、 `XmlSerializer` TMP パスが存在しない場合。"
  syntax:
    content: 'public class RootedPathValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.Serialization.Configuration.RootedPathValidator&quot;> </xref>クラスです。"
  syntax:
    content: public RootedPathValidator ();
    parameters: []
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "オブジェクトの型を検証できるかどうかを判断します。"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "オブジェクトの型。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> type </code>パラメーターに有効な一致<xref uid=&quot;langword_csharp_XMLSerializer&quot; name=&quot;XMLSerializer&quot; href=&quot;&quot;></xref>オブジェクト。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization.Configuration
  summary: "オブジェクトの値が有効かどうかを判断します。"
  remarks: "`XmlSerializer`を検証するオブジェクトのパラメーターとして渡されます、`Validate`メソッドです。"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "オブジェクトの値。"
  overload: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator()
  nameWithType: RootedPathValidator.RootedPathValidator()
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.RootedPathValidator()
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(System.Type)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: RootedPathValidator.CanValidate(Type)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(System.Object)
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: RootedPathValidator.Validate(Object)
  fullName: System.Xml.Serialization.Configuration.RootedPathValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.#ctor*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: RootedPathValidator
  nameWithType: RootedPathValidator.RootedPathValidator
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.CanValidate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: CanValidate
  nameWithType: RootedPathValidator.CanValidate
- uid: System.Xml.Serialization.Configuration.RootedPathValidator.Validate*
  parent: System.Xml.Serialization.Configuration.RootedPathValidator
  isExternal: false
  name: Validate
  nameWithType: RootedPathValidator.Validate
