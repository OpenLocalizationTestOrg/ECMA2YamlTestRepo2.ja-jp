### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.Manipulation
  id: Manipulation
  children:
  - System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  - System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  - System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  - System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  - System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  - System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  - System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  - System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  langs:
  - csharp
  name: Manipulation
  nameWithType: Manipulation
  fullName: System.Windows.Input.Manipulation
  type: Class
  summary: "操作に関する情報を取得および更新メソッドが含まれています。"
  remarks: "操作は、タッチがオブジェクトに適用される物理操作として解釈されるときに発生します。 [!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]、操作イベントの入力を変換、拡張、または回転操作として解釈します。 通常操作<xref:System.Windows.UIElement>。</xref:System.Windows.UIElement>で定義されている操作イベントと対話します。 ただし、操作のクラスは、操作との対話に使用できる静的メソッドを定義します。       操作の詳細については、次を参照してください。[入力概要](~/add/includes/ajax-current-ext-md.md)です。 操作に応答するアプリケーションの例は、次を参照してください。[チュートリアル: 初めて、タッチ アプリケーションの作成](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public static class Manipulation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  id: AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: AddManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.AddManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.AddManipulator(UIElement,IManipulator)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "関連付けます、 <xref href=&quot;System.Windows.Input.IManipulator&quot;> </xref>指定した要素を持つオブジェクト。"
  remarks: "場合`element`に関連付けられている操作は既に`manipulator`が既存の操作に追加します。 それ以外の場合、新しい操作が作成されます。"
  syntax:
    content: public static void AddManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "マニピュレーターとを関連付ける要素。"
    - id: manipulator
      type: System.Windows.Input.IManipulator
      description: "作成または操作に追加されている入力の位置を提供するオブジェクト。"
  overload: System.Windows.Input.Manipulation.AddManipulator*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>element</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manipulator</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Windows.UIElement.IsManipulationEnabled*>要素のプロパティには、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.UIElement.IsManipulationEnabled*> 。"
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  id: CompleteManipulation(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: CompleteManipulation(UIElement)
  nameWithType: Manipulation.CompleteManipulation(UIElement)
  fullName: System.Windows.Input.Manipulation.CompleteManipulation(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素のアクティブな操作を完了します。 呼び出されると、操作の入力を不要になった追跡し、指定した要素に慣性を停止します。"
  remarks: "CompleteManipulation メソッドが呼び出されたときに、<xref:System.Windows.UIElement.ManipulationCompleted>イベントが発生します</xref:System.Windows.UIElement.ManipulationCompleted>。"
  syntax:
    content: public static void CompleteManipulation (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "操作を完了するための要素。"
  overload: System.Windows.Input.Manipulation.CompleteManipulation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  id: GetManipulationContainer(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationContainer(UIElement)
  nameWithType: Manipulation.GetManipulationContainer(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationContainer(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "操作の座標を定義するコンテナーを取得します。"
  syntax:
    content: public static System.Windows.IInputElement GetManipulationContainer (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "存在する要素は、アクティブな操作です。"
    return:
      type: System.Windows.IInputElement
      description: "座標空間を定義するコンテナー。"
  overload: System.Windows.Input.Manipulation.GetManipulationContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  id: GetManipulationMode(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationMode(UIElement)
  nameWithType: Manipulation.GetManipulationMode(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationMode(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得、 <xref href=&quot;System.Windows.Input.ManipulationModes&quot;> </xref>指定の要素に対応します。"
  syntax:
    content: public static System.Windows.Input.ManipulationModes GetManipulationMode (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "操作モードを取得する対象の要素。"
    return:
      type: System.Windows.Input.ManipulationModes
      description: "列挙値の&1; つ。"
  overload: System.Windows.Input.Manipulation.GetManipulationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  id: GetManipulationPivot(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: GetManipulationPivot(UIElement)
  nameWithType: Manipulation.GetManipulationPivot(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationPivot(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "ユーザー入力の&1; つのポイントと回転を実行する方法を説明するオブジェクトを返します。"
  syntax:
    content: public static System.Windows.Input.ManipulationPivot GetManipulationPivot (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "要素が存在する操作。"
    return:
      type: System.Windows.Input.ManipulationPivot
      description: "ユーザー入力の&1; つのポイントと回転を実行する方法を記述するオブジェクト。"
  overload: System.Windows.Input.Manipulation.GetManipulationPivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  id: IsManipulationActive(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: IsManipulationActive(UIElement)
  nameWithType: Manipulation.IsManipulationActive(UIElement)
  fullName: System.Windows.Input.Manipulation.IsManipulationActive(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "操作は、指定した要素に関連付けられているかどうかを示す値を取得します。"
  syntax:
    content: public static bool IsManipulationActive (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "確認対象の要素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>操作が指定された要素に関連付けられている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.Manipulation.IsManipulationActive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  id: RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: RemoveManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.RemoveManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.RemoveManipulator(UIElement,IManipulator)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定された間の関連付けを削除<xref href=&quot;System.Windows.Input.IManipulator&quot;></xref>オブジェクトと要素。"
  syntax:
    content: public static void RemoveManipulator (System.Windows.UIElement element, System.Windows.Input.IManipulator manipulator);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "関連するマニピュレーターを削除する要素。"
    - id: manipulator
      type: System.Windows.Input.IManipulator
      description: "入力の位置を提供するオブジェクト。"
  overload: System.Windows.Input.Manipulation.RemoveManipulator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  id: SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationContainer(UIElement,IInputElement)
  nameWithType: Manipulation.SetManipulationContainer(UIElement,IInputElement)
  fullName: System.Windows.Input.Manipulation.SetManipulationContainer(UIElement,IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素の操作の座標を定義する要素を設定します。"
  syntax:
    content: public static void SetManipulationContainer (System.Windows.UIElement element, System.Windows.IInputElement container);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "操作が関連付けられている要素です。"
    - id: container
      type: System.Windows.IInputElement
      description: "座標空間を定義するコンテナー。"
  overload: System.Windows.Input.Manipulation.SetManipulationContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  id: SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationMode(UIElement,ManipulationModes)
  nameWithType: Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  fullName: System.Windows.Input.Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素の操作モードを設定します。"
  syntax:
    content: public static void SetManipulationMode (System.Windows.UIElement element, System.Windows.Input.ManipulationModes mode);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "操作モードを設定する要素。"
    - id: mode
      type: System.Windows.Input.ManipulationModes
      description: "新しい操作モード。"
  overload: System.Windows.Input.Manipulation.SetManipulationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  id: SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationParameter(UIElement,ManipulationParameters2D)
  nameWithType: Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素の操作にパラメーターを追加します。"
  syntax:
    content: public static void SetManipulationParameter (System.Windows.UIElement element, System.Windows.Input.Manipulations.ManipulationParameters2D parameter);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "パラメーターが追加されている操作を持つ要素。"
    - id: parameter
      type: System.Windows.Input.Manipulations.ManipulationParameters2D
      description: "追加するパラメーター。"
  overload: System.Windows.Input.Manipulation.SetManipulationParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  id: SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: SetManipulationPivot(UIElement,ManipulationPivot)
  nameWithType: Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  fullName: System.Windows.Input.Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素の単一ポイント操作のピボットを設定します。"
  syntax:
    content: public static void SetManipulationPivot (System.Windows.UIElement element, System.Windows.Input.ManipulationPivot pivot);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "アクティブな操作を持つ要素。"
    - id: pivot
      type: System.Windows.Input.ManipulationPivot
      description: "ピボットを記述するオブジェクト。"
  overload: System.Windows.Input.Manipulation.SetManipulationPivot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  id: StartInertia(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  langs:
  - csharp
  name: StartInertia(UIElement)
  nameWithType: Manipulation.StartInertia(UIElement)
  fullName: System.Windows.Input.Manipulation.StartInertia(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "操作を停止して、慣性の指定した要素を開始します。"
  syntax:
    content: public static void StartInertia (System.Windows.UIElement element);
    parameters:
    - id: element
      type: System.Windows.UIElement
      description: "慣性を開始する要素。"
  overload: System.Windows.Input.Manipulation.StartInertia*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Input.Manipulation.AddManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: AddManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.AddManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.AddManipulator(UIElement,IManipulator)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.Input.IManipulator
  parent: System.Windows.Input
  isExternal: false
  name: IManipulator
  nameWithType: IManipulator
  fullName: System.Windows.Input.IManipulator
- uid: System.Windows.Input.Manipulation.CompleteManipulation(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: CompleteManipulation(UIElement)
  nameWithType: Manipulation.CompleteManipulation(UIElement)
  fullName: System.Windows.Input.Manipulation.CompleteManipulation(UIElement)
- uid: System.Windows.Input.Manipulation.GetManipulationContainer(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationContainer(UIElement)
  nameWithType: Manipulation.GetManipulationContainer(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationContainer(UIElement)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.Manipulation.GetManipulationMode(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationMode(UIElement)
  nameWithType: Manipulation.GetManipulationMode(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationMode(UIElement)
- uid: System.Windows.Input.ManipulationModes
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationModes
  nameWithType: ManipulationModes
  fullName: System.Windows.Input.ManipulationModes
- uid: System.Windows.Input.Manipulation.GetManipulationPivot(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationPivot(UIElement)
  nameWithType: Manipulation.GetManipulationPivot(UIElement)
  fullName: System.Windows.Input.Manipulation.GetManipulationPivot(UIElement)
- uid: System.Windows.Input.ManipulationPivot
  parent: System.Windows.Input
  isExternal: false
  name: ManipulationPivot
  nameWithType: ManipulationPivot
  fullName: System.Windows.Input.ManipulationPivot
- uid: System.Windows.Input.Manipulation.IsManipulationActive(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: IsManipulationActive(UIElement)
  nameWithType: Manipulation.IsManipulationActive(UIElement)
  fullName: System.Windows.Input.Manipulation.IsManipulationActive(UIElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.Manipulation.RemoveManipulator(System.Windows.UIElement,System.Windows.Input.IManipulator)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: RemoveManipulator(UIElement,IManipulator)
  nameWithType: Manipulation.RemoveManipulator(UIElement,IManipulator)
  fullName: System.Windows.Input.Manipulation.RemoveManipulator(UIElement,IManipulator)
- uid: System.Windows.Input.Manipulation.SetManipulationContainer(System.Windows.UIElement,System.Windows.IInputElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationContainer(UIElement,IInputElement)
  nameWithType: Manipulation.SetManipulationContainer(UIElement,IInputElement)
  fullName: System.Windows.Input.Manipulation.SetManipulationContainer(UIElement,IInputElement)
- uid: System.Windows.Input.Manipulation.SetManipulationMode(System.Windows.UIElement,System.Windows.Input.ManipulationModes)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationMode(UIElement,ManipulationModes)
  nameWithType: Manipulation.SetManipulationMode(UIElement,ManipulationModes)
  fullName: System.Windows.Input.Manipulation.SetManipulationMode(UIElement,ManipulationModes)
- uid: System.Windows.Input.Manipulation.SetManipulationParameter(System.Windows.UIElement,System.Windows.Input.Manipulations.ManipulationParameters2D)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationParameter(UIElement,ManipulationParameters2D)
  nameWithType: Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
  fullName: System.Windows.Input.Manipulation.SetManipulationParameter(UIElement,ManipulationParameters2D)
- uid: System.Windows.Input.Manipulations.ManipulationParameters2D
  parent: System.Windows.Input.Manipulations
  isExternal: false
  name: ManipulationParameters2D
  nameWithType: ManipulationParameters2D
  fullName: System.Windows.Input.Manipulations.ManipulationParameters2D
- uid: System.Windows.Input.Manipulation.SetManipulationPivot(System.Windows.UIElement,System.Windows.Input.ManipulationPivot)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationPivot(UIElement,ManipulationPivot)
  nameWithType: Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
  fullName: System.Windows.Input.Manipulation.SetManipulationPivot(UIElement,ManipulationPivot)
- uid: System.Windows.Input.Manipulation.StartInertia(System.Windows.UIElement)
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: StartInertia(UIElement)
  nameWithType: Manipulation.StartInertia(UIElement)
  fullName: System.Windows.Input.Manipulation.StartInertia(UIElement)
- uid: System.Windows.Input.Manipulation.AddManipulator*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: AddManipulator
  nameWithType: Manipulation.AddManipulator
- uid: System.Windows.Input.Manipulation.CompleteManipulation*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: CompleteManipulation
  nameWithType: Manipulation.CompleteManipulation
- uid: System.Windows.Input.Manipulation.GetManipulationContainer*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationContainer
  nameWithType: Manipulation.GetManipulationContainer
- uid: System.Windows.Input.Manipulation.GetManipulationMode*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationMode
  nameWithType: Manipulation.GetManipulationMode
- uid: System.Windows.Input.Manipulation.GetManipulationPivot*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: GetManipulationPivot
  nameWithType: Manipulation.GetManipulationPivot
- uid: System.Windows.Input.Manipulation.IsManipulationActive*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: IsManipulationActive
  nameWithType: Manipulation.IsManipulationActive
- uid: System.Windows.Input.Manipulation.RemoveManipulator*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: RemoveManipulator
  nameWithType: Manipulation.RemoveManipulator
- uid: System.Windows.Input.Manipulation.SetManipulationContainer*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationContainer
  nameWithType: Manipulation.SetManipulationContainer
- uid: System.Windows.Input.Manipulation.SetManipulationMode*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationMode
  nameWithType: Manipulation.SetManipulationMode
- uid: System.Windows.Input.Manipulation.SetManipulationParameter*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationParameter
  nameWithType: Manipulation.SetManipulationParameter
- uid: System.Windows.Input.Manipulation.SetManipulationPivot*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: SetManipulationPivot
  nameWithType: Manipulation.SetManipulationPivot
- uid: System.Windows.Input.Manipulation.StartInertia*
  parent: System.Windows.Input.Manipulation
  isExternal: false
  name: StartInertia
  nameWithType: Manipulation.StartInertia
