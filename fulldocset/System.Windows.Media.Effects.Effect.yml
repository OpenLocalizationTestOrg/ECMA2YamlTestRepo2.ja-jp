### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Effects.Effect
  id: Effect
  children:
  - System.Windows.Media.Effects.Effect.#ctor
  - System.Windows.Media.Effects.Effect.Clone
  - System.Windows.Media.Effects.Effect.CloneCurrentValue
  - System.Windows.Media.Effects.Effect.EffectMapping
  - System.Windows.Media.Effects.Effect.ImplicitInput
  langs:
  - csharp
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
  type: Class
  summary: "カスタムのビットマップ効果を提供します。"
  remarks: "カスタムのビットマップ効果を実装する効果クラスから派生します。 ほとんどの場合は、 <xref:System.Windows.Media.Effects.ShaderEffect>。</xref:System.Windows.Media.Effects.ShaderEffect>から派生されます。"
  syntax:
    content: 'public abstract class Effect : System.Windows.Media.Animation.Animatable'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;> </xref>クラスです。"
  syntax:
    content: protected Effect ();
    parameters: []
  overload: System.Windows.Media.Effects.Effect.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.Clone
  id: Clone
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>オブジェクト、このオブジェクトの値の詳細コピーを作成します。 このオブジェクトの依存関係プロパティをコピーするときに、このメソッドは、アニメーションやその現在の値ではありませんが、リソース参照とデータ バインディングを解決できなくなる可能性があります) をコピーします。"
  remarks: "Clone メソッドの変更可能なコピーを生成するために使用できます固定<xref:System.Windows.Freezable>オブジェクト</xref:System.Windows.Freezable>。 便宜上、このメソッドは、継承されたシャドウ<xref:System.Windows.Freezable.Clone%2A>厳密に型指定された実装を提供するメソッド</xref:System.Windows.Freezable.Clone%2A>。"
  syntax:
    content: public System.Windows.Media.Effects.Effect Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: "このインスタンスの変更可能な複製。 返される複製は、現在のオブジェクトのディープ コピーでは効果的です。 複製の<xref:System.Windows.Freezable.IsFrozen*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Freezable.IsFrozen*> 。"
  overload: System.Windows.Media.Effects.Effect.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>オブジェクト、このオブジェクトの現在の値の詳細コピーを作成します。 リソース参照、データ バインディング、およびアニメーションはコピーされませんが、その現在の値がコピーされます。"
  remarks: "変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。       詳細については、 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: public System.Windows.Media.Effects.Effect CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Effects.Effect
      description: "現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの<> *> プロパティ<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合でも、ソースの<> *> プロパティが<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Effects.Effect.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  id: EffectMapping
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "派生クラスでオーバーライドされると、マウス入力および効果によって、座標系に変換します。"
  remarks: "既定の id の変換とは異なる変換を割り当てる EffectMapping プロパティをオーバーライドします。       入力は、この変換の反転によって変換されます。 <xref:System.Windows.Media.Visual.TransformToAncestor%2A>と<xref:System.Windows.Media.Visual.TransformToDescendant%2A>メソッドでは、適用される EffectMapping 変換もがある</xref:System.Windows.Media.Visual.TransformToDescendant%2A></xref:System.Windows.Media.Visual.TransformToAncestor%2A>。       入力する点がある必要があります [0 -&1;] の範囲、および発信のポイントが [0-1] にマップする必要があります範囲です。 <xref:System.Windows.Media.GeneralTransform.Inverse%2A>プロパティを返す必要があります、<xref:System.Windows.Media.GeneralTransform>逆のマッピングを計算する</xref:System.Windows.Media.GeneralTransform></xref:System.Windows.Media.GeneralTransform.Inverse%2A>。       送信、ポイントに効果が適用された後、逆の変換では、マップされたポイントを効果の適用前に、です。 非逆関数では、効果の適用前に、からポイントは効果が適用された後に適用するマップを変換します。       変換に使用されている物理的なピクセルのサイズに関する情報が含まれていないことに注意してくださいおよび単位の範囲内でのみ動作します。"
  syntax:
    content: protected virtual System.Windows.Media.GeneralTransform EffectMapping { get; }
    return:
      type: System.Windows.Media.GeneralTransform
      description: "適用する変換です。 既定では、識別情報の変換です。"
  overload: System.Windows.Media.Effects.Effect.EffectMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  id: ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  langs:
  - csharp
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Effects
  summary: "取得、 <xref href=&quot;System.Windows.Media.Brush&quot;> </xref> 、用の入力として使用する場合、 <xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>のビットマップをにより、 <xref href=&quot;System.Windows.UIElement&quot;> </xref>を<xref href=&quot;System.Windows.Media.Effects.Effect&quot;></xref>その入力に適用します。"
  remarks: "ImplicitInput プロパティを<xref:System.Windows.Media.Effects.ShaderEffect>。</xref:System.Windows.Media.Effects.ShaderEffect>ブラシ値の入力値として使用します。       ImplicitInput プロパティの表示から取得したシェーダーの入力が表す、<xref:System.Windows.UIElement>を<xref:System.Windows.Media.Effects.Effect>に適用されます</xref:System.Windows.Media.Effects.Effect></xref:System.Windows.UIElement>。      > [!NOTE] > ImplicitInput を他の WPF クラスで、ブラシとして使用すると、動作は定義されません。"
  syntax:
    content: public static System.Windows.Media.Brush ImplicitInput { get; }
    return:
      type: System.Windows.Media.Brush
      description: "<xref href=&quot;System.Windows.Media.Brush&quot;> </xref>入力として機能します。"
  overload: System.Windows.Media.Effects.Effect.ImplicitInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.Windows.Media.Effects.Effect.#ctor
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Effect()
  nameWithType: Effect.Effect()
  fullName: System.Windows.Media.Effects.Effect.Effect()
- uid: System.Windows.Media.Effects.Effect.Clone
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Clone()
  nameWithType: Effect.Clone()
  fullName: System.Windows.Media.Effects.Effect.Clone()
- uid: System.Windows.Media.Effects.Effect
  parent: System.Windows.Media.Effects
  isExternal: false
  name: Effect
  nameWithType: Effect
  fullName: System.Windows.Media.Effects.Effect
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Effect.CloneCurrentValue()
  fullName: System.Windows.Media.Effects.Effect.CloneCurrentValue()
- uid: System.Windows.Media.Effects.Effect.EffectMapping
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: EffectMapping
  nameWithType: Effect.EffectMapping
  fullName: System.Windows.Media.Effects.Effect.EffectMapping
- uid: System.Windows.Media.GeneralTransform
  parent: System.Windows.Media
  isExternal: false
  name: GeneralTransform
  nameWithType: GeneralTransform
  fullName: System.Windows.Media.GeneralTransform
- uid: System.Windows.Media.Effects.Effect.ImplicitInput
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
  fullName: System.Windows.Media.Effects.Effect.ImplicitInput
- uid: System.Windows.Media.Brush
  parent: System.Windows.Media
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Windows.Media.Brush
- uid: System.Windows.Media.Effects.Effect.#ctor*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Effect
  nameWithType: Effect.Effect
- uid: System.Windows.Media.Effects.Effect.Clone*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: Clone
  nameWithType: Effect.Clone
- uid: System.Windows.Media.Effects.Effect.CloneCurrentValue*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: CloneCurrentValue
  nameWithType: Effect.CloneCurrentValue
- uid: System.Windows.Media.Effects.Effect.EffectMapping*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: EffectMapping
  nameWithType: Effect.EffectMapping
- uid: System.Windows.Media.Effects.Effect.ImplicitInput*
  parent: System.Windows.Media.Effects.Effect
  isExternal: false
  name: ImplicitInput
  nameWithType: Effect.ImplicitInput
