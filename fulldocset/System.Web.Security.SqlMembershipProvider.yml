### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlMembershipProvider
  id: SqlMembershipProvider
  children:
  - System.Web.Security.SqlMembershipProvider.#ctor
  - System.Web.Security.SqlMembershipProvider.ApplicationName
  - System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  - System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GeneratePassword
  - System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  - System.Web.Security.SqlMembershipProvider.PasswordFormat
  - System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  - System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  - System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  langs:
  - csharp
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider
  fullName: System.Web.Security.SqlMembershipProvider
  type: Class
  summary: "SQL Server データベースでの ASP.NET アプリケーションのメンバーシップ情報の記憶域を管理します。"
  remarks: "This class is used by the <xref:System.Web.Security.Membership> and <xref:System.Web.Security.MembershipUser> classes to provide membership services for an ASP.NET application using a SQL Server database. You cannot use a SqlMembershipProvider without SQL Server. When your computer has SQL Server Express installed with the default instance name and user-instancing enabled, the SqlMembershipProvider object will create a database called `aspnetdb` in the application's `App_Data` directory the first time the application is run.  \n  \n To manually create the database, run the `Aspnet_regsql.exe` executable found in the `%systemroot%\\Microsoft.NET\\Framework\\ versionNumber` folder and specify the `-A m` option (for example `aspnet_regsql.exe -A m`). The database created is called Aspnetdb. Alternatively, run `Aspnet_regsql.exe` to pull up the GUI configuration mode and choose to configure all ASP.NET Features.  \n  \n If the membership provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file defines a default SqlMembershipProvider instance named `AspNetSqlMembershipProvider` that connects to the default SQL Server Express instance on the local machine. You can use this instance of the provider if you installed SQL Server Express with the default instance name, or you can define your own instance in the Web.config file for your ASP.NET application.  \n  \n If you set the `passwordCompatMode` attribute to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, the application can use the hashing and encryption membership options that were added in ASP.NET 4. However, if the `passwordCompatMode` attribute is set to <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>, only the hashing and encryption membership options from the ASP.NET 2.0, ASP.NET 3.5, and ASP.NET 3.5 SP1 can be used. The default value is <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>. For more information, see <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application configured to use a SqlMembershipProvider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\"  \n        name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\"  \n      userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          applicationName=\"MyApplication\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          requiresUniqueEmail=\"false\"  \n          passwordFormat=\"Hashed\"  \n          maxInvalidPasswordAttempts=\"5\"  \n          passwordAttemptWindow=\"10\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlMembershipProvider : System.Web.Security.MembershipProvider'
  inheritance:
  - System.Web.Security.MembershipProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref>クラスです。"
  remarks: "インスタンスを作成する ASP.NET によって SqlMembershipProvider コンス トラクターが呼び出されます、<xref:System.Web.Security.SqlMembershipProvider>アプリケーションの構成で指定したクラスです</xref:System.Web.Security.SqlMembershipProvider>。 このコンス トラクターは、コードから使用するものではありません。"
  syntax:
    content: public SqlMembershipProvider ();
    parameters: []
  overload: System.Web.Security.SqlMembershipProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "取得または設定を保存し、メンバーシップ情報を取得するアプリケーションの名前。"
  remarks: "ApplicationName を使って、<xref:System.Web.Security.SqlMembershipProvider>グループ ユーザー情報にします</xref:System.Web.Security.SqlMembershipProvider>。 ユーザー情報をアプリケーション名を修飾することにより重複したユーザー名の間の競合を実行しなくても、1 つのデータベースで複数のアプリケーションの情報を格納できます。 また、複数の ASP.NET アプリケーションでは、ApplicationName プロパティに同じ値を指定することによって、同じユーザー データベースを使用できます。 ApplicationName プロパティは、プログラムによって設定できますか、Web アプリケーションの構成ファイルで宣言して設定されることができます、`applicationName`属性。       値が指定されていない場合、 `applicationName` Web アプリケーションの構成ファイル内の属性、<xref:System.Web.HttpRequest.ApplicationPath%2A>アプリケーションに行われた最初の要求のプロパティの値を使用します</xref:System.Web.HttpRequest.ApplicationPath%2A>。      > [!CAUTION] > すべてで処理された要求の&1; つの既定のメンバーシップ プロバイダーのインスタンスが使用されるため、<xref:System.Web.HttpApplication>オブジェクトを同時に実行して、ApplicationName プロパティ値を設定しようとしています複数の要求を持つことができます。</xref:System.Web.HttpApplication> 。 ApplicationName プロパティは複数の書き込みでは、安全なスレッドではありませんし、アプリケーションの複数のユーザーの予期しない動作結果 ApplicationName プロパティの値を変更することができます。 必要な場合を除き、ApplicationName プロパティを設定できるようにするコードを記述しないことをお勧めします。 ApplicationName プロパティを設定することがある必須アプリケーションの例は、複数のアプリケーションのメンバーシップ データを管理する管理アプリケーションです。 このようなアプリケーションは、シングル ユーザー アプリケーションと Web アプリケーションではなくにする必要があります。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "メンバーシップ情報を格納および取得するアプリケーションの名前です。 既定値は、 <> </> *> プロパティの値を現在の<> *> です。"
  overload: System.Web.Security.SqlMembershipProvider.ApplicationName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "空の文字列に、ApplicationName プロパティを設定しようとしましたが、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "256 文字より長い文字列に、ApplicationName プロパティを設定しようとしました。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーのパスワードを変更します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのパスワードを更新するクラス</xref:System.Web.Security.Membership>。       パスワードの最大長は、128 文字です。       ChangePassword メソッドに正しくないパスワードを指定する場合は、いずれかで無効なパスワードの試行回数を追跡する内部カウンターがインクリメントされます。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッド</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ。</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 。       最初に<xref:System.Web.Security.SqlMembershipProvider><xref:System.Web.Security.Membership.Provider%2A>、<xref:System.Web.Security.Membership>クラス</xref:System.Web.Security.Membership>のプロパティ</xref:System.Web.Security.Membership.Provider%2A>を使用してインスタンス</xref:System.Web.Security.SqlMembershipProvider>への参照を取得することで直接、ChangePassword メソッドを呼び出すことができます。 <xref:System.Web.Security.Membership.Provider%2A>プロパティが公開、`defaultProvider`アプリケーションの Web.config ファイルで指定します</xref:System.Web.Security.Membership.Provider%2A>。 構成済みのプロバイダーを使用して参照の既定のプロバイダーではない、<xref:System.Web.Security.Membership.Providers%2A>プロパティ</xref:System.Web.Security.Membership.Providers%2A>。       使用して、ユーザーのパスワードを変更することも、<xref:System.Web.Security.MembershipUser.ChangePassword%2A>メソッド</xref:System.Web.Security.MembershipUser.ChangePassword%2A>。       すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example modifies the password for the specified user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/csharp/baafd90e-fc24-4306-ac18-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#3](~/add/codesnippet/visualbasic/baafd90e-fc24-4306-ac18-_1.aspx)]"
  syntax:
    content: public override bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: "パスワードを更新するユーザー。"
    - id: oldPassword
      type: System.String
      description: "指定したユーザーの現在のパスワード。"
    - id: newPassword
      type: System.String
      description: "指定したユーザーの新しいパスワード。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、パスワードが正常に更新されました。 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>指定された古いパスワードが有効でない場合、ユーザーがロックアウトまたはユーザーがデータベースに存在しません。"
  overload: System.Web.Security.SqlMembershipProvider.ChangePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPassword</code> is an empty string or longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPassword</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The change-password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event, and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of <code>newPassword</code> is less than the minimum length specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*> property.  \n  \n \\- or -  \n  \n The number of non-alphabetic characters in <code>newPassword</code> is less than the required number of non-alphabetic characters specified in the <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*> property.  \n  \n \\- or -  \n  \n <code>newPassword</code> does not pass the regular expression defined in the <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*> property."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>oldPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPassword</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>username</code>データベースで検出されませんでした。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "データベースに新しいパスワード値を設定中にエラーが発生しました。"
  - type: System.Exception
    commentId: T:System.Exception
    description: "未処理の例外が発生しました。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "パスワードの質問とメンバーシップの SQL Server データベース内のユーザーの回答を更新します。"
  remarks: "このメソッドは、<xref:System.Web.Security.MembershipUser>クラスをパスワードの質問を更新および ASP.NET アプリケーションの構成ファイル (Web.config) で指定されている SQL Server データベース内のユーザーの回答します</xref:System.Web.Security.MembershipUser>。 指定されている形式を使用してパスワードの回答が暗号化されて、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。       パスワードの質問と回答を必要とする、追加の取得、またはユーザーのパスワードをリセットする際のセキュリティの層を提供します。 ユーザー名を作成するときに、ユーザーの質問と答えを取得または忘れたパスワードのリセット後で使用できるに指定できます。 ChangePasswordQuestionAndAnswer メソッドは、パスワードの質問とメンバーシップ ユーザーの回答を更新します。       ChangePasswordQuestionAndAnswer メソッドに正しくないパスワードを指定する場合は、いずれかで無効なパスワードの試行回数を追跡する内部カウンターがインクリメントされます。 これにより、ユーザーに、呼び出すことにより、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッド</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ。</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 。       パスワードの質問の最大長は、256 文字です。 パスワードの回答の最大長は、128 文字です。       詳細については、次を参照してください<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>、 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>、 <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> </xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> 。       すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example updates the password question and answer for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/csharp/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#10](~/add/codesnippet/visualbasic/2e3c3851-f4bc-4cbf-b9de-_1.aspx)]"
  syntax:
    content: public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "パスワードの質問を変更して、回答をするユーザー。"
    - id: password
      type: System.String
      description: "指定したユーザーのパスワードです。"
    - id: newPasswordQuestion
      type: System.String
      description: "指定したユーザーの新しいパスワードの質問。"
    - id: newPasswordAnswer
      type: System.String
      description: "指定したユーザーの新しいパスワードの回答。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>更新プログラムが成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 値<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合も返されます、 <code> password </code>が正しくないユーザーをロックアウトまたはユーザーがデータベースに存在しません。"
  overload: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>password</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is an empty string or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is an empty string or is longer than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>newPasswordAnswer</code> is longer than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>password</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordQuestion</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>newPasswordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "パスワードの質問と、データベースで回答を変更するときにエラーが発生しました。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベースに新しいユーザーを追加します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースに新しいユーザーを作成するクラス</xref:System.Web.Security.Membership>。       新しいユーザーが構成されている<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>で識別されます。       場合、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>プロパティに設定されている`true`、および`null`または空の文字列 (&quot;&quot;) が指定されて、`email`パラメーター、ユーザーの作成は失敗します</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>。 場合、ユーザーの作成は失敗も、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>プロパティに設定されている`true`と指定された値、`email`パラメーターが構成されている<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>用のデータベースに既存のユーザーの電子メール アドレスの重複する</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>       ユーザー名の最大長は、256 文字です。 電子メール アドレスの最大長は、256 文字です。 クリア テキストで、またはハッシュまたは暗号化された後にパスワードの最大長は、128 文字です。       ユーザーの作成に失敗すると、その他の条件: -`password`パラメーターは`null`、またはトリミング後に空の文字列。      -の長さ、`password`パラメーターがで指定された値より小さい、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>。      -英数字以外の文字数、`password`パラメーターがで指定された値より小さい、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>。      -`password`パラメーターは内の正規表現を渡しません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>。      -カスタム パスワード検証コードがユーザーの作成中に取り消された、<xref:System.Web.Security.MembershipProvider.ValidatingPassword>イベント</xref:System.Web.Security.MembershipProvider.ValidatingPassword>。      -<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは`true`と`passwordAnswer`パラメーターは、いずれかの`null`またはトリミング後に空の文字列</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>。      -`passwordAnswer`パラメーターが空の文字列。      -`passwordAnswer`パラメーターは 128 文字より長くします。      -<xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>プロパティは`true`パスワードの質問があるか、および`null`またはトリミング後に空の文字列</xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>。      -`passwordQuestion`パラメーターが空の文字列。      -`passwordQuestion`パラメーターが 256 文字より長い。      - `providerUserKey` <xref:System.Guid?displayProperty=fullName>.</xref:System.Guid?displayProperty=fullName>以外の型のオブジェクトにパラメーターを設定      -`providerUserKey`パラメーターは、既存のユーザー キーの重複します。      -`username`パラメーターは、既存のユーザー名と重複しています。       すべての文字列パラメーターの値からは、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the sign-in page for the application.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/a42f3c7c-ac38-4fa9-93d4-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "新しいユーザーのユーザー名。"
    - id: password
      type: System.String
      description: "新しいユーザーのパスワードです。"
    - id: email
      type: System.String
      description: "新しいユーザーの電子メール アドレス。"
    - id: passwordQuestion
      type: System.String
      description: "新しいユーザーのパスワードの質問。"
    - id: passwordAnswer
      type: System.String
      description: "新しいユーザーのパスワードの回答。"
    - id: isApproved
      type: System.Boolean
      description: "かどうか、新しいユーザーを承認します。"
    - id: providerUserKey
      type: System.Object
      description: "A <xref:System.Guid>SQL Server データベース内のメンバーシップ ユーザーを一意に識別する</xref:System.Guid>。"
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "1 つ、 <xref:System.Web.Security.MembershipCreateStatus>、ユーザーが正常に作成されたかどうかを示す値</xref:System.Web.Security.MembershipCreateStatus>。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>新しく作成したユーザーのオブジェクト</xref:System.Web.Security.MembershipUser>。 このメソッドが戻るかどうかはユーザーが作成されなかった、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベースからユーザーのメンバーシップ情報を削除します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイルで指定された SQL Server データベースからユーザーを削除するクラス</xref:System.Web.Security.Membership>。       削除済みのユーザーが構成されている<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>からのみ削除します。       場合`deleteAllRelatedData`に設定されている`true`、し、すべてのユーザー データをデータベースに格納されている、 <xref:System.Web.Security.Roles>、 <xref:System.Web.HttpContext.Profile%2A>、<xref:System.Web.UI.WebControls.WebParts.WebPart>パーソナル化機能が構成されている<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>も削除</xref:System.Web.UI.WebControls.WebParts.WebPart>または</xref:System.Web.HttpContext.Profile%2A></xref:System.Web.Security.Roles>。       メンバーシップ ユーザーが、データベースに存在しない場合と`deleteAllRelatedData`は`true`、し、関連するデータと格納されているのユーザー情報、 <xref:System.Web.Security.Roles>、 <xref:System.Web.HttpContext.Profile%2A>、または<xref:System.Web.UI.WebControls.WebParts.WebPart>で指定されたアプリケーションの機能の個人用設定は削除されますが、<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A></xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.HttpContext.Profile%2A></xref:System.Web.Security.Roles>。 その結果、場合でも、ユーザーに関連する情報をすばやく削除するためにメソッドを使用できます DeleteUser、<xref:System.Web.Security.SqlMembershipProvider>認証されたユーザー情報を格納するオブジェクトは使用されません</xref:System.Web.Security.SqlMembershipProvider>。       先頭および末尾のスペースがトリミング、`username`パラメーターの値。"
  example:
  - "The following code example deletes the currently logged-on user.  \n  \n> [!NOTE]\n>  This example uses <xref:System.Web.Security.SqlMembershipProvider> to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/808bac53-4bf1-477e-8865-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/808bac53-4bf1-477e-8865-_1.aspx)]"
  syntax:
    content: public override bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "削除するユーザーの名前。"
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーに関連するデータベースからデータを削除するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>データベース内のユーザーに関連するデータのままにします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーが削除された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 値<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ユーザーがデータベースに存在しないかどうかも返されます。"
  overload: System.Web.Security.SqlMembershipProvider.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>空の文字列 (&quot;&quot;)、コンマが含まれる、またはが 256 文字より長い。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーがパスワードをリセットできるようにする SQL Server のメンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。"
  remarks: "パスワード リセットには、現在のパスワードを新しいユーザー名をランダムに生成されたパスワードを交換するメンバーシップ プロバイダーことができます。 これが特に役立つ場合に、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat>、ユーザーがパスワードのハッシュ値を取得できません</xref:System.Web.Security.MembershipPasswordFormat></xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーシップ プロバイダーがパスワードのリセットをサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーがパスワードを取得できるようにする SQL Server のメンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。"
  remarks: "場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat>、ユーザーは、データベースから既存のパスワードを取得できません</xref:System.Web.Security.MembershipPasswordFormat></xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。 <xref:System.Web.Security.MembershipPasswordFormat>パスワードの形式は、パスワードの値の一方向のエンコーディングを提供します</xref:System.Web.Security.MembershipPasswordFormat>。 パスワードがランダムに生成された salt 値を持つハッシュされ、認証用のデータベースに格納されている値と比較します。 ハッシュされた値を元のパスワード値を取得するエンコード前にすることはできません。       場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat>、EnablePasswordRetrieval に設定されていると`true`、<xref:System.Configuration.Provider.ProviderException>プロバイダーが初期化される場合にスローされます</xref:System.Configuration.Provider.ProviderException></xref:System.Web.Security.MembershipPasswordFormat></xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーシップ プロバイダーがパスワードの取得をサポートしている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "電子メール アドレス フィールドが指定した電子メール アドレスを格納するメンバーシップ ユーザーのコレクションを返します。"
  remarks: "FindUsersByEmail が、電子メール アドレスに指定されたとの一致が含まれているメンバーシップ ユーザーの一覧を返します`emailToMatch`構成<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。       <xref:System.Web.Security.SqlMembershipProvider>ユーザー名と一致するものを検索、 `emailToMatch` LIKE 句を使用して、パラメーター値</xref:System.Web.Security.SqlMembershipProvider>。 パラメーターの値には、SQL Server のワイルドカード文字を含めることができます。 たとえば場合、`emailToMatch`にパラメーターが設定されている&quot;address@example.com&quot;、電子メール アドレスを持つユーザーの情報を&quot;address@example.com&quot;が存在する場合は、返されます。 場合、`emailToMatch`にパラメーターが設定されている&quot;%@example.com&quot;、電子メール アドレスを持つユーザーの情報を&quot;address@example.com「,」address2@example.com「,」admin@example.com&quot;などが返されます。       によって FindUsersByEmail によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーター<xref:System.Web.Security.MembershipUser><xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUserCollection>で返されるオブジェクト</xref:System.Web.Security.MembershipUser>の最大数を特定する。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 10 番目のユーザーが含まれます</xref:System.Web.Security.MembershipUserCollection>。 `totalRecords`パラメーターは 13 に設定するとします。       先頭および末尾のスペースがトリミング、`emailToMatch`パラメーターの値。"
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/2e443224-e510-47e7-9af2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/2e443224-e510-47e7-9af2-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "検索対象の電子メール アドレス。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "一致したユーザーの合計数。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>のページを含む<code> pageSize </code> <xref:System.Web.Security.MembershipUser>オブジェクトで指定されたページから始まる<code> pageIndex </code></xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection> 。"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emailToMatch</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザー名が指定された内容と一致するメンバーシップ ユーザーのコレクションを取得します。"
  remarks: "FindUsersByName がユーザー名が指定されたとの一致が含まれますメンバーシップ ユーザーの一覧を返します`usernameToMatch`構成<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。       <xref:System.Web.Security.SqlMembershipProvider>ユーザー名と一致するものを検索、 `usernameToMatch` LIKE 句を使用して、パラメーター値</xref:System.Web.Security.SqlMembershipProvider>。 SQL Server のワイルドカード文字は、パラメーターの値に付属することはできます。 たとえば場合、`usernameToMatch`パラメーターが&quot;user1&quot;に設定し、存在する場合、&quot;user1&quot;のユーザー名を持つユーザーのユーザー情報が返されます。 場合、`usernameToMatch`パラメーターは「user %」、&quot;user1&quot;、&quot;user2&quot;、&quot;user_admin&quot;のユーザー名を持つユーザーのユーザー情報に設定されなどが返されます。       によって FindUsersByName によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーター<xref:System.Web.Security.MembershipUser><xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUserCollection>で返されるオブジェクト</xref:System.Web.Security.MembershipUser>の最大数を特定する。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 返される 10 番目のユーザーが含まれます</xref:System.Web.Security.MembershipUserCollection>。 `totalRecords`パラメーターは 13 に設定するとします。       先頭および末尾のスペースがトリミング、`usernameToMatch`パラメーターの値。"
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information and displays the results in pages of data.  \n  \n> [!NOTE]\n>  This example uses System.Web.Security.SqlMembershipProvider to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/492b000d-1abf-495e-82ba-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/492b000d-1abf-495e-82ba-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "検索するユーザー名。"
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "このメソッドが戻るとき、一致したユーザーの合計数を格納します。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "A<xref:System.Web.Security.MembershipUserCollection>のページを含む<code> pageSize </code> <xref:System.Web.Security.MembershipUser>オブジェクトで指定されたページから始まる<code> pageIndex </code></xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection> 。"
  overload: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code> is an empty string (\"\") or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than 1.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  id: GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "少なくとも 14 文字のランダムなパスワードを生成します。"
  remarks: "<xref:System.Web.Security.Membership>クラスを提供する<xref:System.Web.Security.Membership.GeneratePassword%2A>には、少なくとも指定された数の英数字以外の文字ので、メソッドで、指定したパスワードが生成されますがサイズします</xref:System.Web.Security.Membership.GeneratePassword%2A></xref:System.Web.Security.Membership>。 <xref:System.Web.Security.SqlMembershipProvider><xref:System.Web.Security.Membership.GeneratePassword%2A><xref:System.Web.Security.Membership>には、少なくとも 14 文字の長さは、ランダムなパスワードを取得するクラス</xref:System.Web.Security.Membership>のメソッド</xref:System.Web.Security.Membership.GeneratePassword%2A>を呼び出して</xref:System.Web.Security.SqlMembershipProvider>の GeneratePassword メソッド 場合、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティが 14 より大きい場合、返されるパスワードの指定された長さになります、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A></xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>。       具体的には、<xref:System.Web.Security.SqlMembershipProvider>クラス<xref:System.Web.Security.Membership.Provider%2A>、<xref:System.Web.Security.Membership>クラス</xref:System.Web.Security.Membership>のプロパティ</xref:System.Web.Security.Membership.Provider%2A>から直接</xref:System.Web.Security.SqlMembershipProvider>参照することで、GeneratePassword メソッドを呼び出すことができます。       文字の英数字と次の区切り記号のみ生成されたパスワードを含む:`!@#$%^&*()_-+=[{]};:<>|./?`です。 生成されたパスワードで非表示または印刷不可能な制御文字が含まれていません。      > [!NOTE] > GeneratePassword メソッドによって作成されたランダムなパスワードが内の正規表現を通過する保証はありません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>。 ただし、ランダムなパスワードがによって確立された条件を満たして、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>と<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A></xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>。"
  example:
  - "The following code example generates a random 10-character password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/csharp/m-system.web.security.sq_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/add/codesnippet/visualbasic/m-system.web.security.sq_2_1.aspx)]"
  syntax:
    content: public virtual string GeneratePassword ();
    parameters: []
    return:
      type: System.String
      description: "少なくとも 14 文字のランダムなパスワード。"
  overload: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベース内のすべてのユーザーのコレクションを取得します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザー情報を取得するクラス</xref:System.Web.Security.Membership>。       によって GetAllUsers によって返される結果が制約を`pageIndex`と`pageSize`パラメーター。 `pageSize`パラメーター<xref:System.Web.Security.MembershipUser><xref:System.Web.Security.MembershipUserCollection></xref:System.Web.Security.MembershipUserCollection>で返されるオブジェクト</xref:System.Web.Security.MembershipUser>の最大数を特定する。 `pageIndex`パラメーターを返すには、0 が最初のページを識別する結果のページを識別します。 `totalRecords`パラメーターは、`out`構成済みのメンバーシップ ユーザーの合計数に設定されているパラメーター`applicationName`です。 例では、構成済みの 13 人のユーザーがある場合の`applicationName`、および`pageIndex`値が 1 と、 `pageSize` 5 の<xref:System.Web.Security.MembershipUserCollection>返されるは 6 ~ 返される 10 番目のユーザーが含まれます</xref:System.Web.Security.MembershipUserCollection>。 `totalRecords`パラメーターは 13 に設定するとします。"
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/f02da845-c892-4dcc-aa15-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/f02da845-c892-4dcc-aa15-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "返される結果ページのインデックス。 `pageIndex`0 です。"
    - id: pageSize
      type: System.Int32
      description: "返される結果ページのサイズ。"
    - id: totalRecords
      type: System.Int32
      description: "ユーザーの合計数。"
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "<xref:System.Web.Security.MembershipUserCollection><xref:System.Web.Security.MembershipUser>オブジェクト</xref:System.Web.Security.MembershipUser>が構成されている<xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>。</xref:System.Web.Security.SqlMembershipProvider.ApplicationName*>のデータベース内のすべてのユーザーを表す</xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code> is less than zero.  \n  \n \\- or -  \n  \n <code>pageSize</code> is less than one.  \n  \n \\- or -  \n  \n <code>pageIndex</code> multiplied by <code>pageSize</code> plus <code>pageSize</code> minus one exceeds &lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "現在、アプリケーションにアクセスするユーザーの数を返します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからオンライン状態であるユーザーの数を取得するクラス</xref:System.Web.Security.Membership>。       GetNumberOfUsersOnline を持つ最後のアクティビティの日付と時刻が現在の日付と時刻の値以下より大きい、現在のアプリケーションのユーザーの数を返します、<xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>分単位でのプロパティ</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>。       構成に関連付けられているユーザーのみ<xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>カウントに含まれています</xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>。"
  example:
  - "The following code example returns a list of users with a count of the users currently online.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.sq_3_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.sq_3_1.aspx)]"
  syntax:
    content: public override int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "現在、アプリケーションにアクセスするユーザーの数。"
  overload: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベースから指定されたユーザー名のパスワードを返します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.MembershipUser>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザーのパスワードを取得するクラス</xref:System.Web.Security.MembershipUser>。       GetPassword メソッドに、正しくないパスワードの回答を指定する場合は、いずれかで無効なパスワードの解答の試行を追跡する内部カウンターがインクリメントされます。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッド</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>。 正しいパスワードの回答を指定し、ユーザーが現在ロックされていない、無効なパスワードの解答の試行を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ。</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 。       最初に<xref:System.Web.Security.SqlMembershipProvider><xref:System.Web.Security.Membership.Provider%2A>、<xref:System.Web.Security.Membership>クラス</xref:System.Web.Security.Membership>のプロパティ</xref:System.Web.Security.Membership.Provider%2A>を使用してインスタンス</xref:System.Web.Security.SqlMembershipProvider>への参照を取得することによって直接 GetPassword メソッドを呼び出すことができます。       場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat>、GetPassword メソッドは、パスワードを取得できません</xref:System.Web.Security.MembershipPasswordFormat></xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。 ハッシュされたパスワードは、一方向は暗号化され、復号化することはできません。 場合、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている<xref:System.Web.Security.MembershipPasswordFormat>、および<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>に設定されている`true`、<xref:System.Configuration.Provider.ProviderException>プロバイダーが初期化される場合にスローされます</xref:System.Configuration.Provider.ProviderException></xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A></xref:System.Web.Security.MembershipPasswordFormat></xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。       すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the user in an e-mail message.  \n  \n> [!NOTE]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n  \n> [!NOTE]\n>  This sample calls the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file by using the <xref:System.Web.Security.Membership> class. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/66916cd5-cd17-4858-8835-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/66916cd5-cd17-4858-8835-_1.aspx)]"
  syntax:
    content: public override string GetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "パスワードを取得するユーザー。"
    - id: passwordAnswer
      type: System.String
      description: "ユーザーのパスワードの回答。"
    return:
      type: System.String
      description: "指定されたユーザー名のパスワード。"
  overload: System.Web.Security.SqlMembershipProvider.GetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The membership user identified by <code>username</code> is locked out."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "One of the parameter values exceeds the maximum allowed length.  \n  \n \\- or -  \n  \n <code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is greater than 128 characters.  \n  \n \\- or -  \n  \n The encoded version of <code>passwordAnswer</code> is greater than 128 characters."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定の一意の識別子に関連付けられているメンバーシップ ユーザーのデータ ソースから情報を取得し、指定した場合に、ユーザーの最終アクティビティの日付/時刻スタンプを更新します。"
  remarks: "<xref:System.Web.Security.Membership.GetUser%2A>データ ソースからユーザー情報を取得し、作成、<xref:System.Web.Security.MembershipUser>オブジェクトが返されるデータが読み込まれます</xref:System.Web.Security.MembershipUser>。</xref:System.Web.Security.Membership.GetUser%2A> 指定された一意の識別子を使用してユーザーを識別、`providerUserKey`パラメーター。"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "ユーザーの一意の識別子です。"
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最後の活動を更新する指定したユーザーの日付/時刻スタンプそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>指定の一意の識別子に関連付けられているユーザーを表すオブジェクト</xref:System.Web.Security.MembershipUser>。 ユーザーが見つからないかどうか、指定されたデータベースで<code> providerUserKey </code>値、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>が返されます。"
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerUserKey</code>型はありません<xref:System.Guid>です。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーの SQL Server メンバーシップ データベースから情報を取得し、ユーザーの最終アクティビティの日付/時刻スタンプを更新するオプションを提供します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースからユーザー情報を取得するクラス</xref:System.Web.Security.Membership>。       場合`userIsOnline`は`true`、現在の日付と時刻に、ユーザーの最終アクティビティの日付/時刻スタンプを更新します。 これに反映されて、<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>と<xref:System.Web.Security.MembershipUser.IsOnline%2A>プロパティおよび<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>によって返される値で</xref:System.Web.Security.MembershipUser.IsOnline%2A></xref:System.Web.Security.MembershipUser.LastActivityDate%2A>       先頭および末尾のスペースがトリミング、`username`パラメーターの値。"
  example:
  - "The following code example uses the GetUser method to determine whether a user exists before retrieving the password for the user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/08039896-5b29-4285-9a5a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/08039896-5b29-4285-9a5a-_1.aspx)]"
  syntax:
    content: public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "情報を取得するユーザーの名前です。"
    - id: userIsOnline
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ユーザーの最終アクティビティの日付/時刻スタンプを更新するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>をユーザーの最終アクティビティの日付/時刻スタンプを更新することがなくユーザー情報を返します。"
    return:
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>指定したユーザーを表すオブジェクト</xref:System.Web.Security.MembershipUser>。 ユーザーが見つからないかどうか、指定されたデータベースで<code> username </code>値、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>が返されます。"
  overload: System.Web.Security.SqlMembershipProvider.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> exceeds 256 characters.  \n  \n \\- or -  \n  \n <code>username</code> contains a comma."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "指定した電子メール アドレスに関連付けられているユーザー名を取得します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>、それを使用して ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベースから関連付けられたユーザー名を取得する電子メール アドレスを持つクラス</xref:System.Web.Security.Membership>。       メンバーシップ データベース内の&1; つ以上のユーザーは、同じ電子メール アドレスを持っている場合は、最初のユーザー名が返されます。 設定することができます、`requiresUniqueEmail`属性を`true`データベース内の各電子メール アドレスが一意であることを確認するアプリケーション構成ファイルにします。       先頭および末尾のスペースがトリミング、`email`パラメーターの値。"
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.sq_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.sq_7_1.aspx)]"
  syntax:
    content: public override string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: "検索対象の電子メール アドレス。"
    return:
      type: System.String
      description: "指定した電子メール アドレスに関連付けられているユーザー名。 一致が見つからないかどうか、このメソッドが戻る<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>email</code>256 文字を超えています。"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "同じ電子メール アドレスを持つ&2; つ以上のユーザーがデータベースに存在し、<xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*>は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> 。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ASP.NET アプリケーションの構成ファイルで指定されたプロパティ値を持つ SQL Server のメンバーシップ プロバイダーを初期化します。 このメソッドは、コードから直接使用するものではありません。"
  remarks: "このメソッドは、初期化、<xref:System.Web.Security.SqlMembershipProvider>プロパティを使用して値が ASP.NET アプリケーション構成ファイル (Web.config) で指定し、コードから直接使用するものではありません</xref:System.Web.Security.SqlMembershipProvider>。"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Web.Security.SqlMembershipProvider&quot;> </xref>インスタンスを初期化します。"
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "A <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref>名前と、メンバーシップ プロバイダーの構成オプションの値を格納しています。"
  overload: System.Web.Security.SqlMembershipProvider.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref>, <xref uid=\"langword_csharp_enablePasswordReset\" name=\"enablePasswordReset\" href=\"\"></xref>, <xref uid=\"langword_csharp_requiresQuestionAndAnswer\" name=\"requiresQuestionAndAnswer\" href=\"\"></xref>, or <xref uid=\"langword_csharp_requiresUniqueEmail\" name=\"requiresUniqueEmail\" href=\"\"></xref> attribute is set to a value other than a <xref uid=\"langword_csharp_Boolean\" name=\"Boolean\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_maxInvalidPasswordAttempts\" name=\"maxInvalidPasswordAttempts\" href=\"\"></xref> or the <xref uid=\"langword_csharp_passwordAttemptWindow\" name=\"passwordAttemptWindow\" href=\"\"></xref> attribute is set to a value other than a positive integer.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredPasswordLength\" name=\"minRequiredPasswordLength\" href=\"\"></xref> attribute is set to a value other than a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_minRequiredNonalphanumericCharacters\" name=\"minRequiredNonalphanumericCharacters\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_passwordStrengthRegularExpression\" name=\"passwordStrengthRegularExpression\" href=\"\"></xref> attribute is not a valid regular expression.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_applicationName\" name=\"applicationName\" href=\"\"></xref> attribute is set to a value that is greater than 256 characters.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute specified in the application configuration file is an invalid <xref:System.Web.Security.MembershipPasswordFormat> enumeration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref:System.Web.Security.MembershipPasswordFormat> and the <xref uid=\"langword_csharp_enablePasswordRetrieval\" name=\"enablePasswordRetrieval\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref> in the application configuration.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_passwordFormat\" name=\"passwordFormat\" href=\"\"></xref> attribute is set to <xref uid=\"langword_csharp_Encrypted\" name=\"Encrypted\" href=\"\"></xref> and the  configuration element specifies <xref uid=\"langword_csharp_AutoGenerate\" name=\"AutoGenerate\" href=\"\"></xref> for the <xref uid=\"langword_csharp_decryptionKey\" name=\"decryptionKey\" href=\"\"></xref> attribute.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute is empty or does not exist in the application configuration.  \n  \n \\- or -  \n  \n The value of the connection string for the <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> attribute value is empty, or the specified <xref uid=\"langword_csharp_connectionStringName\" name=\"connectionStringName\" href=\"\"></xref> does not exist in the application configuration file.  \n  \n \\- or -  \n  \n The value for the <xref uid=\"langword_csharp_commandTimeout\" name=\"commandTimeout\" href=\"\"></xref> attribute is set to a value other than zero or a positive integer.  \n  \n \\- or -  \n  \n The application configuration file for this <xref href=\"System.Web.Security.SqlMembershipProvider\"></xref> instance contains an unrecognized attribute."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "現在の信頼レベルより小さい<xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Initialize メソッドを現在の呼び出しの前に、プロバイダーは既に初期化されました。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "メンバーシップ ユーザーがロックアウトされるまでの無効なパスワードまたはパスワード解答の数を取得します。"
  remarks: "<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>と連携して、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>パスワードまたは繰り返しを試行するメンバーシップ ユーザーのパスワードの回答を推測する必要のないソースを防ぐ</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A></xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>。 無効なパスワードまたはパスワードの指定されたメンバーシップ ユーザーの質問の数がより大きいかの値に等しい場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティの値によって識別される分単位の時間内で、<xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティ、そのメンバーシップ ユーザーがロックアウトを設定して、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`true`とユーザーのロックが解除されるまで、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッド</xref:System.Web.Security.MembershipUser.UnlockUser%2A></xref:System.Web.Security.MembershipUser.IsLockedOut%2A></xref:System.Web.Security.Membership.PasswordAttemptWindow%2A></xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>。 前に、有効なパスワードを指定する場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>値に達すると、無効なパスワードとパスワードの解答の試行回数を追跡するカウンターがゼロにリセットされます</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>。 前に、有効なパスワードの回答を指定する場合、<xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>値に達すると、無効なパスワードの解答の試行回数を追跡するカウンターのみがゼロにリセットします</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>。       <xref:System.Web.Security.SqlMembershipProvider>個別に無効なパスワードの試行回数と無効なパスワードの解答の試行の数を保持します</xref:System.Web.Security.SqlMembershipProvider>。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 無効なパスワードの回答は、パスワードの回答カウンターのみがカウントの結果を試行します。       <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>プロパティ値がアプリケーションの構成を使用して、設定、`maxInvalidPasswordAttempts`構成セクションの属性です</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>。       場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されている`false`、無効なパスワードの解答の試行は追跡されません</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "メンバーシップ ユーザーがロックアウトされるまでの無効なパスワードまたはパスワード解答の数。"
  overload: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "有効なパスワードに存在する必要がある特殊文字の最小数を取得します。"
  remarks: "MinRequiredNonAlphanumericCharacters プロパティの有効なパスワードを作成する入力する必要がある、特別なアルファベット以外の文字の最小数を返します、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト</xref:System.Web.Security.SqlMembershipProvider>。       MinRequiredNonAlphanumericCharacters プロパティの設定は、アプリケーションの構成を使用して、`minRequiredNonalphanumericCharacters`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。       英数字以外の文字が対象の文字、<xref:System.Char.IsLetterOrDigit%2A>メソッドを返します`false`。</xref:System.Char.IsLetterOrDigit%2A> 。"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to one character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonalphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "有効なパスワードに存在する必要がある特殊文字の最小数。"
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "パスワードに必要な最小の長さを取得します。"
  remarks: "MinRequiredPasswordLength プロパティの有効なパスワードを作成する入力する必要がありますの文字の最小数を取得する、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト</xref:System.Web.Security.SqlMembershipProvider>。       <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>プロパティ値がアプリケーションの構成を使用して、設定、`minRequiredPasswordLength`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>。"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n    <providers>  \n      <add  \n        name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        minRequiredPasswordLength=\"7\"  \n        />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "パスワードに必要な最小長。"
  overload: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "有効なパスワードまたはパスワードの回答を提供する失敗して、連続して間の時間枠を取得しますが追跡されます。"
  remarks: "PasswordAttemptWindow プロパティと連携する、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>パスワードまたは繰り返しを試行するメンバーシップ ユーザーのパスワードの回答を推測する必要のないソースから保護するためのプロパティ</xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>。 ユーザーへのログイン、パスワードの変更またはパスワードをリセットしようとしていますと、の連続した試行の特定の数だけが、指定された時間内で許可されます。 時間枠の長さは、無効な試行間の許容時間を分単位を識別する PasswordAttemptWindow プロパティによって指定されます。 ユーザーに連続した試行の失敗の数は、彼をリセットするか、または自分のパスワードに格納されている値に等しい場合、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>試行が最後に無効なが PasswordAttemptWindow プロパティに指定された分数より小さく設定してメンバーシップ ユーザーをロックアウトする後プロパティ、および時間の経過時間、<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>プロパティを`true`</xref:System.Web.Security.MembershipUser.IsLockedOut%2A></xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>。 呼び出すことによって、ユーザーのロックを解除することができます、<xref:System.Web.Security.MembershipUser.UnlockUser%2A>メソッド</xref:System.Web.Security.MembershipUser.UnlockUser%2A>。 現在の失敗した試行と失敗した前回の間隔が PasswordAttemptWindow プロパティの設定よりも大きい場合は、現在無効な試行回数は、最初としてカウントされます。 無効な試行の最大数に達する前に、有効なパスワードの回答を指定する場合、無効なパスワードの解答の試行回数は&0; に設定します。 最大数が無効な許可される前に、有効なパスワードが指定される場合は、試行回数に達すると、無効なパスワードの試行回数と無効なパスワードの解答の試行の回数が&0; に設定します。       <xref:System.Web.Security.SqlMembershipProvider>個別に無効なパスワードの試行回数と無効なパスワードの解答の試行の数を保持します</xref:System.Web.Security.SqlMembershipProvider>。 無効なパスワードは、パスワードの試行カウンターのみがカウントの結果を試行します。 無効なパスワードの回答は、パスワードの回答カウンターのみがカウントの結果を試行します。       <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>プロパティ値がアプリケーションの構成を使用して、設定、`passwordAttemptWindow`構成セクションの属性です</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>。       場合、<xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>プロパティに設定されている`false`、無効なパスワードの解答の試行は追跡されません</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n    <providers>  \n      <add name=\"SqlProvider\"  \n        type=\"System.Web.Security.SqlMembershipProvider\"  \n        connectionStringName=\"SqlServices\"  \n        requiresQuestionAndAnswer=\"true\"  \n        maxInvalidPasswordAttempts=\"5\"  \n        passwordAttemptWindow=\"30\"  \n        applicationName=\"MyApplication\" />  \n    </providers>  \n</membership>  \n```"
  syntax:
    content: public override int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "時間枠中に、連続して分単位でしようとする有効なパスワードを指定すると失敗したか、パスワードの解答が追跡されます。 既定値は 10 分です。 現在の失敗した試行と失敗した前回の間隔が PasswordAttemptWindow プロパティの設定よりも大きい場合は、最初の試行が失敗した場合と同じが失敗するたびが扱われます。"
  overload: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベースにパスワードを格納する形式を示す値を取得します。"
  remarks: "使用して`Hashed`のみ、`Clear`と`Encrypted`安全ではありません。 `Hashed`パスワードでは、一方向のハッシュ アルゴリズムと、データベースに格納されているときにランダムに生成された salt 値を使用してハッシュされます。 パスワードが検証されると、検証用のデータベースの salt 値を使用してハッシュはします。 ハッシュされたパスワードを取得できません。 `Encrypted`パスワードは、データベースの内容を表示する、セキュリティ侵害公開することも、暗号化キーと、安全で考慮されません。 つまり、暗号化されたパスワードを復号化、公開されている可能性があります。       PasswordFormat 値は、ASP.NET アプリケーションの Web.config ファイルのセクションで指定されます。       `Encrypted`および`Hashed`パスワードが暗号化または、既定では、構成内の要素に指定された情報に基づくハッシュします。 値を指定する場合は、`3DES`の`validation`属性を使用してハッシュされたパスワードがハッシュされる値が指定されていない場合、または、<xref:System.Security.Cryptography.SHA1>アルゴリズム</xref:System.Security.Cryptography.SHA1>。       使用して、カスタムのハッシュ アルゴリズムを定義することができます、`hashAlgorithmType`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素。 暗号化を選択した場合、既定のパスワードの暗号化は AES を使用します。 設定して、暗号化アルゴリズムを変更することができます、`decryption`構成要素の属性です。 パスワードを暗号化している場合は、明示的な値を指定する必要があります、`decryptionKey`要素の属性です。 既定値の`AutoGenerate`の`decryptionKey`ASP.NET メンバーシップとパスワードを使用して暗号化されている場合、属性がサポートされていません。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and sets its password format to `Hashed`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: "1 つ、<xref:System.Web.Security.MembershipPasswordFormat>パスワードは、SQL Server データベースに格納形式を示す値</xref:System.Web.Security.MembershipPasswordFormat>。"
  overload: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "パスワードの評価に使用される正規表現を取得します。"
  remarks: "PasswordStrengthRegularExpression プロパティのパスワードの複雑さの評価に使用される正規表現を取得する、<xref:System.Web.Security.SqlMembershipProvider>オブジェクト</xref:System.Web.Security.SqlMembershipProvider>。       <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>アプリケーションの構成を使用して、プロパティが設定されて、`passwordStrengthRegularExpression`の属性、 [membership 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049)構成要素</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>。"
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is at least seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20\">  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "パスワードの評価に使用される正規表現。"
  overload: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザー パスワードのリセットと取得のパスワードの質問と回答を要求するように SQL Server のメンバーシップ プロバイダーが構成されているかどうかを示す値を取得します。"
  remarks: "パスワードの質問と回答を必要とする、追加の取得、またはユーザーのパスワードをリセットする際のセキュリティの層を提供します。 ユーザー名を作成するときに、ユーザーの質問と答えを取得または忘れたパスワードのリセット後で使用できるに指定できます。 場合、<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>プロパティおよび<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A>プロパティが両方とも`false`、RequiresQuestionAndAnswer プロパティの値は使用されません</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A></xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A>。       詳細については、「 <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>。</xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A></xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A>の使用」を参照していますください。"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a password answer for password reset or retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>パスワードのリセットと取得に必要な場合は、パスワードの回答それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server のメンバーシップ プロバイダーが各ユーザー名に対して一意の電子メール アドレスを要求するように構成されているかどうかを示す値を取得します。"
  remarks: ''
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the <xref:System.Web.Security.SqlMembershipProvider> instance and configures it to require a unique e-mail address for each user name.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      requiresUniqueEmail=\"true\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public override bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーシップ プロバイダーが、一意の電子メール アドレスが必要な場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "ユーザーのパスワードを自動的に生成された、新しいパスワードにリセットします。"
  remarks: "このメソッドは、<xref:System.Web.Security.Membership>を新しい ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのパスワードをリセットするクラスが値をランダムに生成します</xref:System.Web.Security.Membership>。 新しいパスワードが返されます。      > [!NOTE] > ResetPassword メソッドによって作成されたランダムなパスワードが内の正規表現を通過する保証はありません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>。 ただし、ランダムなパスワードがによって確立された条件を満たして、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>と<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A></xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>。       ResetPassword メソッドはほとんどよく使用するときに、<xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>プロパティに設定されている`Hashed`</xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A>。 ユーザーがハッシュされるパスワードを忘れた場合、パスワードを取得できません。 ただし場合は、ユーザーが正しいパスワードの回答を提供に、プロバイダーは、パスワードを自動的に生成された、新しいパスワードにリセットできます。       ResetPassword メソッドに、正しくないパスワードの回答を指定する場合は、いずれかで無効なパスワードの試行回数を追跡する内部カウンターがインクリメントされます。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッド</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>。 正しいパスワードの回答を指定し、ユーザーが現在ロックされていない、無効なパスワードの解答の試行を追跡する内部カウンターはゼロにリセットし、します。 詳細については、次を参照してください、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ。</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 。       最初に<xref:System.Web.Security.SqlMembershipProvider><xref:System.Web.Security.Membership.Provider%2A>、<xref:System.Web.Security.Membership>クラス</xref:System.Web.Security.Membership>のプロパティ</xref:System.Web.Security.Membership.Provider%2A>からインスタンス</xref:System.Web.Security.SqlMembershipProvider>への参照を取得することによって直接 ResetPassword メソッドを呼び出すことができます。 生成されたパスワードが 14 文字以上、またはで指定された長さ、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>プロパティで指定された文字の英数字以外の文字数を格納し、<xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A>プロパティ</xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A></xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A>。 格納されている正規表現を渡すには、パスワードは保証されません、<xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>が指定されている場合は、プロパティ</xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A>。       すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example resets a user's password and returns the new, automatically generated password.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/16c2d8e3-05dc-453f-b1c3-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/16c2d8e3-05dc-453f-b1c3-_1.aspx)]"
  syntax:
    content: public override string ResetPassword (string username, string passwordAnswer);
    parameters:
    - id: username
      type: System.String
      description: "パスワードをリセットするユーザー。"
    - id: passwordAnswer
      type: System.String
      description: "指定したユーザーのパスワードの回答。"
    return:
      type: System.String
      description: "指定したユーザーの新しいパスワード。"
  overload: System.Web.Security.SqlMembershipProvider.ResetPassword*
  exceptions:
  - type: System.Web.Security.MembershipPasswordException
    commentId: T:System.Web.Security.MembershipPasswordException
    description: "<code>passwordAnswer</code> is invalid.  \n  \n \\- or -  \n  \n The user account is currently locked."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>is set to <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset*>"
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>username</code> is not found in the membership database.  \n  \n \\- or -  \n  \n The change password action was canceled by a subscriber to the <xref href=\"System.Web.Security.Membership.ValidatingPassword\"></xref> event and the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation*> property was <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n An error occurred while retrieving the password from the database."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is an empty string, or is longer than 128 characters, and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is longer than 128 characters after encoding."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>passwordAnswer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "未処理の例外が発生しました。"
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "メンバーシップ ユーザーを検証できるように、ユーザーのロックアウト状態をクリアします。"
  remarks: "ユーザーが最もよくロックアウトし、して検証することはできません、<xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>メソッドと<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A><xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A></xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>を超えました</xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A></xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A>。       先頭および末尾のスペースがトリミング、`username`パラメーターの値。"
  syntax:
    content: public override bool UnlockUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "ロックを解除するメンバーシップ ユーザーの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーシップ ユーザーの正常にロックがない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 値<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ユーザーがデータベースに存在しないかどうかも返されます。"
  overload: System.Web.Security.SqlMembershipProvider.UnlockUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>空の文字列は 256 文字以内、またはコンマが含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベース内のユーザーに関する情報を更新します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのユーザー情報を更新するクラス</xref:System.Web.Security.Membership>。 <xref:System.Web.Security.MembershipUser.Email%2A>、 <xref:System.Web.Security.MembershipUser.Comment%2A>、 <xref:System.Web.Security.MembershipUser.IsApproved%2A>、 <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>、および<xref:System.Web.Security.MembershipUser.LastActivityDate%2A>プロパティの値が指定されたメンバーシップ ユーザー用に更新されます</xref:System.Web.Security.MembershipUser.LastActivityDate%2A></xref:System.Web.Security.MembershipUser.LastLoginDate%2A></xref:System.Web.Security.MembershipUser.IsApproved%2A></xref:System.Web.Security.MembershipUser.Comment%2A></xref:System.Web.Security.MembershipUser.Email%2A>。       最大長、<xref:System.Web.Security.MembershipUser.UserName%2A>プロパティは、256 文字です</xref:System.Web.Security.MembershipUser.UserName%2A>。 最大長、<xref:System.Web.Security.MembershipUser.Email%2A>プロパティは、256 文字です</xref:System.Web.Security.MembershipUser.Email%2A>。       UpdateUser メソッドを使用して、メンバーシップ ユーザーのパスワードを更新できません。 メンバーシップ ユーザーのパスワードを更新するには、<xref:System.Web.Security.MembershipUser.ChangePassword%2A><xref:System.Web.Security.MembershipUser>クラス</xref:System.Web.Security.MembershipUser>のメソッド</xref:System.Web.Security.MembershipUser.ChangePassword%2A>を使用します。"
  example:
  - "The following code example updates the e-mail address for a user.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/81f685ac-1799-4589-b9a2-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/81f685ac-1799-4589-b9a2-_1.aspx)]"
  syntax:
    content: public override void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "A<xref:System.Web.Security.MembershipUser>をユーザーの更新された情報で更新するユーザーを表すオブジェクト</xref:System.Web.Security.MembershipUser>。"
  overload: System.Web.Security.SqlMembershipProvider.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> is an empty string (\"\"), contains a comma, or is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is longer than 256 characters.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> is an empty string and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "The <xref:System.Web.Security.MembershipUser.UserName*> property of <code>user</code> was not found in the database.  \n  \n \\- or -  \n  \n The <xref:System.Web.Security.MembershipUser.Email*> property of <code>user</code> was equal to an existing e-mail address in the database and <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*> is set to true.  \n  \n \\- or -  \n  \n The user update failed."
  platform:
  - net462
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "SQL Server メンバーシップ データベース内に指定されたユーザー名とパスワードが存在することを確認します。"
  remarks: "このメソッドは、 <xref:System.Web.Security.Membership>ASP.NET アプリケーションの構成ファイル (Web.config) で指定された SQL Server データベース内のユーザーのユーザー情報を検証するクラス</xref:System.Web.Security.Membership>。       ユーザーが正常に検証されると、最後のアクティビティの日付と最後のサインインに日付値が現在の日付と時間、データベース内に更新されます。       ValidateUser メソッドに正しくないパスワードを指定する場合は、いずれかで無効なパスワードの試行回数を追跡する内部カウンターがインクリメントされます。 これにより、ユーザーへの呼び出しで、ロックの状態がクリアされるまで、ログオンできませんにロックされていることができます、<xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>メソッド</xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A>。 正しいパスワードを指定し、ユーザーがいない現在ロックアウトされて、内部カウンターを追跡の無効なパスワードとパスワードの解答の試行は、ゼロにリセットされます。 詳細については、次を参照してください、<xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A>と<xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>プロパティ。</xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> </xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> 。       すべてのパラメーター値は、先頭と末尾のスペースが切り捨てられます。"
  example:
  - "The following code example shows the sign-in page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.SqlMembershipProvider>. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  This example uses the <xref:System.Web.Security.Membership> class to call the <xref:System.Web.Security.SqlMembershipProvider> specified as the `defaultProvider` in the Web.config file. If you need to access the default provider as the type <xref:System.Web.Security.SqlMembershipProvider>, you can cast the <xref:System.Web.Security.Membership.Provider%2A> property of the <xref:System.Web.Security.Membership> class. To access other configured providers as a specific provider type, you can access them by their configured name with the <xref:System.Web.Security.Membership.Providers%2A> property of the <xref:System.Web.Security.Membership> class and cast them as the specific provider type.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/12603449-9667-4437-88bc-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/12603449-9667-4437-88bc-_1.aspx)]"
  syntax:
    content: public override bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "検証するユーザーの名前。"
    - id: password
      type: System.String
      description: "指定したユーザーのパスワードです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、指定されたユーザー名とパスワードが無効です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 値<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ユーザーがデータベースに存在しないかどうかも返されます。"
  overload: System.Web.Security.SqlMembershipProvider.ValidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Security.MembershipProvider
  isExternal: false
  name: System.Web.Security.MembershipProvider
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.MembershipPasswordException
  isExternal: true
  name: System.Web.Security.MembershipPasswordException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Security.SqlMembershipProvider.#ctor
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider()
  nameWithType: SqlMembershipProvider.SqlMembershipProvider()
  fullName: System.Web.Security.SqlMembershipProvider.SqlMembershipProvider()
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
  fullName: System.Web.Security.SqlMembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword(String,String,String)
  nameWithType: SqlMembershipProvider.ChangePassword(String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePassword(String,String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String,String,String,String)
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(String,String,String,String)
- uid: System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.SqlMembershipProvider.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: SqlMembershipProvider.DeleteUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.DeleteUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
  fullName: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword()
  nameWithType: SqlMembershipProvider.GeneratePassword()
  fullName: System.Web.Security.SqlMembershipProvider.GeneratePassword()
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.SqlMembershipProvider.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline()
  fullName: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword(String,String)
  nameWithType: SqlMembershipProvider.GetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.GetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(Object,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(Object,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: SqlMembershipProvider.GetUser(String,Boolean)
  fullName: System.Web.Security.SqlMembershipProvider.GetUser(String,Boolean)
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: SqlMembershipProvider.GetUserNameByEmail(String)
  fullName: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlMembershipProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlMembershipProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
  fullName: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
  fullName: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
  fullName: System.Web.Security.SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: true
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
  fullName: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
  fullName: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
  fullName: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword(String,String)
  nameWithType: SqlMembershipProvider.ResetPassword(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ResetPassword(String,String)
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: SqlMembershipProvider.UnlockUser(String)
  fullName: System.Web.Security.SqlMembershipProvider.UnlockUser(String)
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: SqlMembershipProvider.UpdateUser(MembershipUser)
  fullName: System.Web.Security.SqlMembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: SqlMembershipProvider.ValidateUser(String,String)
  fullName: System.Web.Security.SqlMembershipProvider.ValidateUser(String,String)
- uid: System.Web.Security.SqlMembershipProvider.#ctor*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: SqlMembershipProvider
  nameWithType: SqlMembershipProvider.SqlMembershipProvider
- uid: System.Web.Security.SqlMembershipProvider.ApplicationName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlMembershipProvider.ApplicationName
- uid: System.Web.Security.SqlMembershipProvider.ChangePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: SqlMembershipProvider.ChangePassword
- uid: System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: SqlMembershipProvider.ChangePasswordQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.CreateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: SqlMembershipProvider.CreateUser
- uid: System.Web.Security.SqlMembershipProvider.DeleteUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: SqlMembershipProvider.DeleteUser
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: SqlMembershipProvider.EnablePasswordReset
- uid: System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: SqlMembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: SqlMembershipProvider.FindUsersByEmail
- uid: System.Web.Security.SqlMembershipProvider.FindUsersByName*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: SqlMembershipProvider.FindUsersByName
- uid: System.Web.Security.SqlMembershipProvider.GeneratePassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GeneratePassword
  nameWithType: SqlMembershipProvider.GeneratePassword
- uid: System.Web.Security.SqlMembershipProvider.GetAllUsers*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: SqlMembershipProvider.GetAllUsers
- uid: System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: SqlMembershipProvider.GetNumberOfUsersOnline
- uid: System.Web.Security.SqlMembershipProvider.GetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: SqlMembershipProvider.GetPassword
- uid: System.Web.Security.SqlMembershipProvider.GetUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: SqlMembershipProvider.GetUser
- uid: System.Web.Security.SqlMembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: SqlMembershipProvider.GetUserNameByEmail
- uid: System.Web.Security.SqlMembershipProvider.Initialize*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlMembershipProvider.Initialize
- uid: System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: SqlMembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: SqlMembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: SqlMembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: SqlMembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.SqlMembershipProvider.PasswordFormat*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: SqlMembershipProvider.PasswordFormat
- uid: System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: SqlMembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: SqlMembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: SqlMembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.SqlMembershipProvider.ResetPassword*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: SqlMembershipProvider.ResetPassword
- uid: System.Web.Security.SqlMembershipProvider.UnlockUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: SqlMembershipProvider.UnlockUser
- uid: System.Web.Security.SqlMembershipProvider.UpdateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: SqlMembershipProvider.UpdateUser
- uid: System.Web.Security.SqlMembershipProvider.ValidateUser*
  parent: System.Web.Security.SqlMembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: SqlMembershipProvider.ValidateUser
