### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.DataList
  id: DataList
  children:
  - System.Web.UI.WebControls.DataList.#ctor
  - System.Web.UI.WebControls.DataList.AlternatingItemStyle
  - System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  - System.Web.UI.WebControls.DataList.CancelCommand
  - System.Web.UI.WebControls.DataList.CancelCommandName
  - System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  - System.Web.UI.WebControls.DataList.CreateControlStyle
  - System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  - System.Web.UI.WebControls.DataList.DeleteCommand
  - System.Web.UI.WebControls.DataList.DeleteCommandName
  - System.Web.UI.WebControls.DataList.EditCommand
  - System.Web.UI.WebControls.DataList.EditCommandName
  - System.Web.UI.WebControls.DataList.EditItemIndex
  - System.Web.UI.WebControls.DataList.EditItemStyle
  - System.Web.UI.WebControls.DataList.EditItemTemplate
  - System.Web.UI.WebControls.DataList.ExtractTemplateRows
  - System.Web.UI.WebControls.DataList.FooterStyle
  - System.Web.UI.WebControls.DataList.FooterTemplate
  - System.Web.UI.WebControls.DataList.GridLines
  - System.Web.UI.WebControls.DataList.HeaderStyle
  - System.Web.UI.WebControls.DataList.HeaderTemplate
  - System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  - System.Web.UI.WebControls.DataList.ItemCommand
  - System.Web.UI.WebControls.DataList.ItemCreated
  - System.Web.UI.WebControls.DataList.ItemDataBound
  - System.Web.UI.WebControls.DataList.Items
  - System.Web.UI.WebControls.DataList.ItemStyle
  - System.Web.UI.WebControls.DataList.ItemTemplate
  - System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  - System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  - System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  - System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.RepeatColumns
  - System.Web.UI.WebControls.DataList.RepeatDirection
  - System.Web.UI.WebControls.DataList.RepeatLayout
  - System.Web.UI.WebControls.DataList.SaveViewState
  - System.Web.UI.WebControls.DataList.SelectCommandName
  - System.Web.UI.WebControls.DataList.SelectedIndex
  - System.Web.UI.WebControls.DataList.SelectedItem
  - System.Web.UI.WebControls.DataList.SelectedItemStyle
  - System.Web.UI.WebControls.DataList.SelectedItemTemplate
  - System.Web.UI.WebControls.DataList.SelectedValue
  - System.Web.UI.WebControls.DataList.SeparatorStyle
  - System.Web.UI.WebControls.DataList.SeparatorTemplate
  - System.Web.UI.WebControls.DataList.ShowFooter
  - System.Web.UI.WebControls.DataList.ShowHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  - System.Web.UI.WebControls.DataList.TagKey
  - System.Web.UI.WebControls.DataList.TrackViewState
  - System.Web.UI.WebControls.DataList.UpdateCommand
  - System.Web.UI.WebControls.DataList.UpdateCommandName
  langs:
  - csharp
  name: DataList
  nameWithType: DataList
  fullName: System.Web.UI.WebControls.DataList
  type: Class
  summary: "データは、テンプレートを使用して項目を表示するリスト コントロールをバインドします。"
  remarks: "このトピックの「:-[概要](#introduction)      -   [テンプレート](#templates)      -   [DataList コントロールの外観のカスタマイズ](#customizing_the_appearance_of_the_datalist_control)      -   [表示方向とレイアウト](#display_direction_and_layout)      -   [セキュリティ](#security)      -   [宣言構文](#declarative_syntax)<a name=&quot;introduction&quot;> </a> ## の概要では、DataList コントロールを使用して、テンプレート定義のデータ バインド リストを表示します。       DataList コントロールを選択して、編集をサポートします。      <a name=&quot;templates&quot;></a>## テンプレート DataList コントロールの内容は、テンプレートを使用して操作できます。 次の表は、サポートされているテンプレートを一覧表示します。      |テンプレート名 |説明 |  |-------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|定義されている場合の代替項目 DataList に、コンテンツとレイアウトを提供します</xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>。 定義されていない場合`ItemTemplate`を使用します |。  |<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|定義されている場合、DataList で現在編集中の項目の内容とレイアウトを提供します</xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>。 定義されていない場合`ItemTemplate`を使用します |。  |<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|定義されている場合、DataList のフッター セクションに、内容とレイアウトを提供します</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>。 定義されていない場合にフッター セクションは表示されません |。  |<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|定義されている場合は、内容とレイアウト、DataList のヘッダー セクション</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>。 定義されていない場合に見出しセクションが表示されません |。  |<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|DataList 内の項目の内容とレイアウトを提供するテンプレートが必要です |。  |<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|定義されている場合、DataList で現在選択されている項目の内容とレイアウトを提供します</xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A></xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>。 定義されていない場合は<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>が使用されます |。  |<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|定義されている場合は、内容とレイアウト DataList 内の項目間の区切り記号</xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A></xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>。 定義されていない場合、区切り記号は表示されません |。      少なくとも、 <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>DataList コントロールの項目を表示するために定義する必要があります</xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>。 DataList コントロールをカスタムの外観を提供するその他のテンプレートを使用できます。      <a name=&quot;customizing_the_appearance_of_the_datalist_control&quot;></a>## コントロールのさまざまな部分のスタイル プロパティを設定して、DataList コントロールの外観をカスタマイズすることがあります、DataList コントロールの外観のカスタマイズ。 次の表は、異なるスタイル プロパティを一覧表示します。      |スタイル プロパティ |説明 |  |--------------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|代替項目 DataList コントロールにスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|DataList コントロールの編集中の項目のスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|DataList コントロールでは、ページ フッターのスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|DataList コントロールでは、ヘッダーのスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|DataList コントロールでは、アイテムのスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|DataList コントロールで選択した項目のスタイルを指定します |。  |<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|DataList コントロール内の項目間の区切り記号のスタイルを指定します |。      表示したり、コントロールのさまざまな部分を非表示にしたりできます</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A></xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A></xref:System.Web.UI.WebControls.DataList.FooterStyle%2A></xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。 次の表は、どの部分を表示または非表示を制御するプロパティを一覧表示します。      |プロパティ |説明 |  |--------------|-----------------|  |<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|DataList コントロールのフッター セクションの表示と非表示を切り替えます |。  |<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|DataList コントロールのヘッダー セクションの表示と非表示を切り替えます |。     <a name=&quot;display_direction_and_layout&quot;> </a> ## 表示方向とレイアウト、DataList コントロールの表示方向は、垂直または水平方向にすることができます</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A></xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>。 設定、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>プロパティの表示方向を指定します</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>。       DataList コントロールのレイアウトがで制御されます、<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>。 このプロパティを設定`RepeatLayout.Table`DataList が表形式で表示されます、 `RepeatLayout.Flow` DataList せず、テーブル構造が表示されます。      <a name=&quot;security&quot;></a>## セキュリティ、`DataList`コントロールは、ユーザー情報を入力できるようにするコントロールを含めることができます。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。       セキュリティの詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;declarative_syntax&quot;></a>## 宣言構文```   <asp:DataList       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyField=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       EditItemIndex=&quot;integer&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ExtractTemplateRows=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnCancelCommand=&quot;CancelCommand event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleteCommand=&quot;DeleteCommand event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnEditCommand=&quot;EditCommand event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDataBound=&quot;ItemDataBound event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelectedIndexChanged=&quot;SelectedIndexChanged event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdateCommand=&quot;UpdateCommand event handler&quot;       RepeatColumns=&quot;integer&quot;       RepeatDirection=&quot;Horizontal|Vertical&quot;       RepeatLayout=&quot;Table|Flow&quot;       runat=&quot;server&quot;       SelectedIndex=&quot;integer&quot;       ShowFooter=&quot;True|False&quot;       ShowHeader=&quot;True|False&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       UseAccessibleHeader=&quot;True|False&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <AlternatingItemStyle />           <AlternatingItemTemplate>               <!-- child controls -->           </AlternatingItemTemplate>           <EditItemStyle />           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <ItemStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <SelectedItemStyle />           <SelectedItemTemplate>               <!-- child controls -->           </SelectedItemTemplate>           <SeparatorStyle />           <SeparatorTemplate>               <!-- child controls -->           </SeparatorTemplate>   </asp:DataList>   ```"
  example:
  - "The following code example demonstrates how to use a DataList control to display a list of items from a data source.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataList#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_141_1.aspx)]\n [!code-vb[DataList#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_141_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataList
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.IRepeatInfoUser
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataList.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.BaseDataList.Caption
  - System.Web.UI.WebControls.BaseDataList.CaptionAlign
  - System.Web.UI.WebControls.BaseDataList.CellPadding
  - System.Web.UI.WebControls.BaseDataList.CellSpacing
  - System.Web.UI.WebControls.BaseDataList.Controls
  - System.Web.UI.WebControls.BaseDataList.CreateChildControls
  - System.Web.UI.WebControls.BaseDataList.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.BaseDataList.DataBind
  - System.Web.UI.WebControls.BaseDataList.DataKeyField
  - System.Web.UI.WebControls.BaseDataList.DataKeys
  - System.Web.UI.WebControls.BaseDataList.DataKeysArray
  - System.Web.UI.WebControls.BaseDataList.DataMember
  - System.Web.UI.WebControls.BaseDataList.DataSource
  - System.Web.UI.WebControls.BaseDataList.DataSourceID
  - System.Web.UI.WebControls.BaseDataList.EnsureDataBound
  - System.Web.UI.WebControls.BaseDataList.GetData
  - System.Web.UI.WebControls.BaseDataList.HorizontalAlign
  - System.Web.UI.WebControls.BaseDataList.Initialized
  - System.Web.UI.WebControls.BaseDataList.IsBindableType(System.Type)
  - System.Web.UI.WebControls.BaseDataList.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataList.OnDataBinding(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnDataPropertyChanged
  - System.Web.UI.WebControls.BaseDataList.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.OnSelectedIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataList.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.BaseDataList.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataList.SelectArguments
  - System.Web.UI.WebControls.BaseDataList.SelectedIndexChanged
  - System.Web.UI.WebControls.BaseDataList.SupportsDisabledAttribute
  - System.Web.UI.WebControls.BaseDataList.UseAccessibleHeader
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを使用して作成し、<xref:System.Web.UI.WebControls.DataList>クラス</xref:System.Web.UI.WebControls.DataList>の新しいインスタンスを初期化します。"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.DataList> class.  \n  \n [!code-cs[Classic DataList.DataList Example#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_27_1.cs)]\n [!code-vb[Classic DataList.DataList Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_27_1.vb)]"
  syntax:
    content: public DataList ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  id: AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "代替のアイテムのスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "内の項目に交互のカスタム スタイルを指定した後のプロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       アイテムのスタイル プロパティで、<xref:System.Web.UI.WebControls.DataList>コントロールは、階層構造を使用する&1; つの項目のスタイル プロパティから継承されます</xref:System.Web.UI.WebControls.DataList>。 アイテムのスタイル プロパティが、階層内を低く設定は、階層内の上位の項目のスタイル プロパティによって継承されます。 赤いフォントを指定する場合など、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ、その他の項目のスタイルのすべてのプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロールには、赤いフォントがあります</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>。 これにより、1 つのアイテムのスタイル プロパティを設定してコントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 後のプロパティの青のフォントを指定するには、赤いフォントをオーバーライドする指定するで、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>。 次の表は、最上位から最下位に階層の順序を一覧表示します。      |優先順位 |スタイル プロパティ |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |後 |  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      交互の項目にカスタム スタイルを指定するには、配置、`<AlternatingItemStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A></xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>。 スタイル属性の一覧を表示することができますし、`<AlternatingItemStyle>`タグ。"
  example:
  - "The following code example demonstrates how to use the AlternatingItemStyle property to specify a different background color for alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_512_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_512_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>交互のスタイル プロパティを表すオブジェクトの項目を<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の代替項目に、テンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>です。"
  remarks: "AlternatingItemTemplate プロパティ内の項目の代替のコンテンツの制御を使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 代替アイテムの外観はによって制御されます、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。       交互の項目のテンプレートを指定するには、配置、`<AlternatingItemTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<AlternatingItemTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to control the contents of alternating items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1361_1.aspx)]\n [!code-cs[DataListAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1361_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>交互のテンプレートが含まれるオブジェクトの項目を<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  id: CancelCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref>のアイテムのボタンがクリックされた、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "CancelCommand イベントが発生したときに、`Cancel`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       一般的なハンドラー CancelCommand イベント セットを<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) するデータを再バインドと、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>。      > [!CAUTION] > テキストは HTML エンコードで表示されるまで、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 ユーザー入力から、コントロールの値には、必ずをセキュリティの脆弱性を減らすために値を検証します。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the CancelCommand event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_29_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_29_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  id: CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表す、 <xref uid=&quot;langword_csharp_Cancel&quot; name=&quot;Cancel&quot; href=&quot;&quot;> </xref>コマンド名です。 このフィールドは、読み取り専用です。"
  remarks: "表す CancelCommandName フィールドを使用して、`Cancel`コマンド名です。"
  syntax:
    content: public const string CancelCommandName;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  id: CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したデータ ソースの有無データ一覧コントロールを表示するために使用されるコントロールの階層構造を作成します。"
  remarks: "カスタム実装を派生している場合、CreateControlHierarchy メソッドが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       CreateControlHierarchy メソッドを使用して、<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>と<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>を作成するメソッド<xref:System.Web.UI.WebControls.DataListItem>ヘッダー、フッター、区切り記号、およびデータの一覧に含まれるデータ バインド項目を表すコントロール</xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList.InitializeItem%2A></xref:System.Web.UI.WebControls.DataList.CreateItem%2A>。 一覧については、データをデータ バインド項目にアクセスすることができます、<xref:System.Web.UI.WebControls.DataList.Items%2A>コレクションです</xref:System.Web.UI.WebControls.DataList.Items%2A>。 を通じてヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスすることができます、<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>コレクションです</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>。       カスタマイズする CreateControlHierarchy メソッドをオーバーライドする方法<xref:System.Web.UI.WebControls.DataListItem>コントロールの作成またはに追加される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataListItem>。 上書き、<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>のテンプレートをカスタマイズする方法、<xref:System.Web.UI.WebControls.DataListItem>コントロール</xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>。"
  syntax:
    content: protected override void CreateControlHierarchy (bool useDataSource);
    parameters:
    - id: useDataSource
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コントロールのデータ ソースを使用するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>を示し、コントロールがビュー状態から再作成されるデータ バインドをすることはできません。"
  overload: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって内部的に使用される既定のスタイル オブジェクトを作成、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>すべてのスタイルを実装するコントロールに関連するプロパティです。"
  remarks: "コントロールの開発者からのカスタム実装を派生することで、主にによって CreateControlStyle メソッドが使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。"
  example:
  - "The following code example demonstrates how to override the CreateControlStyle method in a custom server control so that it always displays horizontal grid lines with no cell spacing in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n [!code-vb[CustomDataListCreateControlStyle#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_1.aspx)]\n [!code-cs[CustomDataListCreateControlStyle#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_1.aspx)]  \n[!code-vb[CustomDataListCreateControlStyle#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_243_2.vb)]\n[!code-cs[CustomDataListCreateControlStyle#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_243_2.cs)]"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableStyle&quot;> </xref>コントロールの既定のスタイル プロパティを格納します。"
  overload: System.Web.UI.WebControls.DataList.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  id: CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "作成、 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref>オブジェクト。"
  remarks: "カスタム実装を作成するコントロールの開発者によって、主に CreateItem メソッドが使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 CreateItem メソッドは<xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A><xref:System.Web.UI.WebControls.DataListItem>。</xref:System.Web.UI.WebControls.DataListItem>のコンス トラクター</xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A>を呼び出すことと同等の機能 <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A><xref:System.Web.UI.WebControls.DataListItem.ItemType%2A>初期化されるプロパティ<xref:System.Web.UI.WebControls.DataListItem>を使用する指定された値が、項目が挿入されていない<xref:System.Web.UI.WebControls.DataList>。</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataListItem>新しい</xref:System.Web.UI.WebControls.DataListItem.ItemType%2A></xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A>       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>メソッドは、CreateItem を使用し、<xref:System.Web.UI.WebControls.DataList.InitializeItem%2A>を作成するメソッド<xref:System.Web.UI.WebControls.DataListItem>ヘッダー、フッター、区切り記号、およびデータの一覧に含まれているデータ バインド項目を表すコントロール</xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList.InitializeItem%2A></xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>。 一覧については、データをデータ バインド項目にアクセスすることができます、<xref:System.Web.UI.WebControls.DataList.Items%2A>コレクションです</xref:System.Web.UI.WebControls.DataList.Items%2A>。 を通じてヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスすることができます、<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>コレクションです</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "内で指定した場所、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>作成されたアイテムを配置します。"
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "A <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref>を作成する項目の指定された型を表すです。"
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "新しい<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>と指定されたリスト項目の種類を作成します。"
  overload: System.Web.UI.WebControls.DataList.CreateItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref>のアイテムのボタンがクリックされた、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "DeleteCommand イベントが発生したときに、`Delete`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       一般的なイベントのハンドラーは、DeleteCommand がデータ ソースから選択した項目を削除および再バインドするデータを<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the DeleteCommand event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_109_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_109_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  id: DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表す、 <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref>コマンド名です。 このフィールドは、読み取り専用です。"
  remarks: "表す DeleteCommandName フィールドを使用して、`Delete`コマンド名です。"
  syntax:
    content: public const string DeleteCommandName;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommand
  id: EditCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref>のアイテムのボタンがクリックされた、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "EditCommand イベントが発生したときに、`Edit`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       一般的なハンドラー EditCommand イベント セットを<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを選択した行にデータを再バインドと、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>。      > [!CAUTION] > テキストは HTML エンコードで表示されるまで、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 これにより、テキストに HTML タグ内のスクリプトを埋め込むことが可能です。 ユーザー入力から、コントロールの値には、必ずをセキュリティの脆弱性を減らすために値を検証します。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the EditCommand event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_64_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_64_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  id: EditCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表す、 <xref uid=&quot;langword_csharp_Edit&quot; name=&quot;Edit&quot; href=&quot;&quot;> </xref>コマンド名です。 このフィールドは、読み取り専用です。"
  remarks: "表す EditCommandName フィールドを使用して、`Edit`コマンド名です。"
  syntax:
    content: public const string EditCommandName;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  id: EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で選択した項目のインデックス番号、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>を編集するコントロール。"
  remarks: "EditItemIndex プロパティを使用して、プログラムで編集する項目を指定します。 このプロパティを使用して、編集するために選択した項目のインデックスを確認することができますも。      > [!NOTE] >、EditItemIndex プロパティは、0 から始まります。       項目の選択を解除する EditItemIndex プロパティを設定`-1`です。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       EditItemIndex プロパティは、コントロールの状態に格納されます。"
  example:
  - "The following code example demonstrates how to use the EditItemIndex property to specify the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_620_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_620_1.aspx)]"
  syntax:
    content: public virtual int EditItemIndex { get; set; }
    return:
      type: System.Int32
      description: "選択した項目のインデックス番号、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>を編集するコントロール。"
  overload: System.Web.UI.WebControls.DataList.EditItemIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値より小さい<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  id: EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "編集するために選択した項目のスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "後のプロパティを使用で編集するために選択した項目のカスタム スタイルを指定して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       アイテムのスタイル プロパティで、<xref:System.Web.UI.WebControls.DataList>コントロールは、階層構造を使用する&1; つの項目のスタイル プロパティから継承されます</xref:System.Web.UI.WebControls.DataList>。 アイテムのスタイル プロパティが、階層内を低く設定は、階層内の上位の項目のスタイル プロパティによって継承されます。 赤いフォントを指定する場合など、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ、その他の項目のスタイルのすべてのプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロールには、赤いフォントがあります</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>。 これにより、1 つのアイテムのスタイル プロパティを設定してコントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 たとえば、青のフォントを指定することができます、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>赤いフォントで指定されたをオーバーライドするプロパティ、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。 次の表は、最上位から最下位に階層の順序を一覧表示します。      |優先順位 |スタイル プロパティ |  |----------------|--------------------|  |&1; |後 |  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      編集用に選択した項目のカスタム スタイルを指定するには、配置、`<EditItemStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A></xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>。 スタイル属性の一覧を表示することができますし、`<EditItemStyle>`タグ。"
  example:
  - "The following code example demonstrates how to use the EditItemStyle property to specify a different appearance for the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_214_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_214_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>で編集するために選択した項目のスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.EditItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で編集するために選択した項目テンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "編集するために選択した項目の内容を制御する、EditItemTemplate プロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 によって制御される編集用に選択した項目の外観、<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>。       編集するために選択した項目テンプレートを指定するには、配置、`<EditItemTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<EditItemTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to control the contents of the item selected by the user for editing.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_316_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_316_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>で編集するために選択した項目テンプレートを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  id: ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうかの行、 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref>の各テンプレートで定義されているコントロール、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>制御が抽出され、表示されます。"
  remarks: "内容、<xref:System.Web.UI.WebControls.DataList>テンプレートを使用してコントロールを指定します</xref:System.Web.UI.WebControls.DataList>。 通常、テンプレートに表示するコントロールが一覧表示します。 配置することも、<xref:System.Web.UI.WebControls.Table>テンプレートで制御し、テーブルの行を表示します</xref:System.Web.UI.WebControls.Table>。       ExtractTemplateRows プロパティを使用して、指定するかどうかの行、<xref:System.Web.UI.WebControls.Table>の各テンプレートで定義されているコントロール、<xref:System.Web.UI.WebControls.DataList>コントロールが抽出され、表示されます</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.Table>。 テンプレートから抽出されたすべての行、<xref:System.Web.UI.WebControls.DataList>コントロールが&1; つのテーブルに表示されます</xref:System.Web.UI.WebControls.DataList>。 これにより、他のより小さなテーブルから&1; つのテーブルを作成しの機能を保持する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。      > [!NOTE] > にこのプロパティを設定すると`true`、整形式を入力する必要があります<xref:System.Web.UI.WebControls.Table>コントロールに追加するテンプレートごとに、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.Table>。 テーブルの行のみが表示されます。 テンプレート内の他のすべてのコンテンツは無視されます。 使用する必要があります、<xref:System.Web.UI.WebControls.Table>適切に機能するには、この機能の制御</xref:System.Web.UI.WebControls.Table>。 <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>コントロールは、このプロパティと互換性がありません</xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=fullName>。       セルを作成する場合、<xref:System.Web.UI.WebControls.Table>コントロールでは、テンプレートを使用できます、<xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A>のプロパティ、<xref:System.Web.UI.WebControls.TableCell>セルがまたがる列の数を制御するオブジェクト</xref:System.Web.UI.WebControls.TableCell></xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A></xref:System.Web.UI.WebControls.Table>。 使用することも、<xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>セルがまたがる行の数を制御するプロパティ</xref:System.Web.UI.WebControls.TableCell.RowSpan%2A>。      > [!NOTE] >、 <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>、 <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>、および<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>プロパティの外観には影響しません、<xref:System.Web.UI.WebControls.DataList>にこのプロパティを設定すると制御`true`</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A></xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A></xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>。"
  example:
  - "The following code example demonstrate how to use the ExtractTemplateRows property to extract and display the rows of <xref:System.Web.UI.WebControls.Table> controls defined in the templates of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1162_1.aspx)]\n [!code-cs[Classic DataList.ExtractTemplateRows Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1162_1.aspx)]"
  syntax:
    content: public virtual bool ExtractTemplateRows { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合の行、 <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref>の各テンプレートで定義されているコントロール、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロールを抽出し、表示されている以外の場合は、それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "フッター セクションのスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "このプロパティのフッター セクションにカスタム スタイルを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       後のプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロールのスタイル設定を継承する、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList>。 赤いフォントを指定する場合など、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティ、後のプロパティには、赤いフォントがあります</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>。 これにより、1 つのスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 継承されたスタイルの設定をオーバーライドするには、後のプロパティを設定します。 後のプロパティの青のフォントを指定するには、赤いフォントをオーバーライドする指定するで、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>。       フッター セクションのカスタム スタイルを指定するには、配置、`<FooterStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 スタイル属性の一覧を表示することができますし、`<FooterStyle>`タグ。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>プロパティに設定する必要があります`true`を表示するには、このプロパティの</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>。"
  example:
  - "The following code example demonstrates how to use the FooterStyle property to specify a custom background color for the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_335_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_335_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のフッター セクションのスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のフッター セクションのテンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "FooterTemplate プロパティを使用すると、フッター セクションの内容を制御できます。 フッター セクションは外観によって、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>プロパティに設定する必要があります`true`を表示するには、このプロパティの</xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>。       <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>のプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロールのスタイル設定を継承する、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>。 赤いフォントを指定する場合など、 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>、プロパティ、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>プロパティには、赤いフォントがあります</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A></xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>。 これにより、1 つのスタイル プロパティを設定して、コントロールの共通の外観を提供することができます。 設定して、継承したスタイルの設定をオーバーライドすることができます、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>。 たとえば、青のフォントを指定することができます、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>赤いフォントで指定されたをオーバーライドするプロパティ、<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>。       フッター セクションのテンプレートを指定するには、配置、`<FooterTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<FooterTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to control the contents of the footer section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1036_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1036_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>のフッター セクションのテンプレートを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のグリッド線のスタイル、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>タイミングを制御、<xref:System.Web.UI.WebControls.DataList.RepeatLayout*>プロパティに設定されている<xref uid=&quot;langword_csharp_RepeatLayout.Table&quot; name=&quot;RepeatLayout.Table&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.DataList.RepeatLayout*> 。"
  remarks: "グリッド線のプロパティを使用して、グリッド線のスタイルを<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 次の表は、有効なスタイルを示します。      |スタイル |説明 |  |-----------|-----------------|  |<xref:System.Web.UI.WebControls.GridLines>|グリッド線なし |。  |<xref:System.Web.UI.WebControls.GridLines>|水平グリッド線が表示されます |。  |<xref:System.Web.UI.WebControls.GridLines>|垂直方向のグリッド線が表示されます |。  |<xref:System.Web.UI.WebControls.GridLines>|両方の水平方向および垂直のグリッド線が表示されます |。     > [!NOTE] > このプロパティは、場合にのみ適用されます、<xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A>プロパティに設定されている`RepeatLayout.Table`</xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A></xref:System.Web.UI.WebControls.GridLines></xref:System.Web.UI.WebControls.GridLines></xref:System.Web.UI.WebControls.GridLines></xref:System.Web.UI.WebControls.GridLines>。"
  example:
  - "The following code example demonstrates how to use the GridLines property to display the vertical and horizontal grid lines of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1324_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1324_1.aspx)]"
  syntax:
    content: public override System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref>列挙値。 既定値は<xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ヘッダー セクションのスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "このプロパティの見出しのカスタム スタイルを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       ヘッダー セクションのカスタム スタイルを指定するには、配置、`<HeaderStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 スタイル属性の一覧を表示することができますし、`<HeaderStyle>`タグ。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>プロパティに設定する必要があります`true`を表示するには、このプロパティの</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>。"
  example:
  - "The following code example demonstrates how to use the HeaderStyle property to specify a custom background color for the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListHeaderStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1175_1.aspx)]\n [!code-vb[DataListHeaderStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1175_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>のヘッダー セクションのスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定のヘッダー セクションのテンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "HeaderTemplate プロパティを使用すると、ヘッダー セクションの内容を制御できます。 ヘッダー セクションの表示によって制御されます、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>。      > [!NOTE] >、<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>プロパティに設定する必要があります`true`を表示するには、このプロパティの</xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>。       ヘッダー セクションのテンプレートを指定するには、配置、`<HeaderTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<HeaderTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to control the contents of the heading section of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_905_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_905_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>のヘッダー セクションのテンプレートを含む、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  id: InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "初期化します、 <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref>オブジェクトが指定されたテンプレートとスタイルのリスト項目の種類に基づいています。"
  remarks: "拡張する InitializeItem メソッドが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>メソッドを使用、<xref:System.Web.UI.WebControls.DataList.CreateItem%2A>と InitializeItem メソッドを作成する<xref:System.Web.UI.WebControls.DataListItem>ヘッダー、フッター、区切り記号、およびデータの一覧に含まれるデータ バインド項目を表すコントロール</xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList.CreateItem%2A></xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>。 一覧については、データをデータ バインド項目にアクセスすることができます、<xref:System.Web.UI.WebControls.DataList.Items%2A>コレクションです</xref:System.Web.UI.WebControls.DataList.Items%2A>。 を通じてヘッダー、フッター、および区切り記号の項目を含む、すべての項目の種類にアクセスすることができます、<xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>コレクションです</xref:System.Web.UI.WebControls.BaseDataList.Controls%2A>。       オーバーライド、<xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>メソッドをカスタマイズする方法<xref:System.Web.UI.WebControls.DataListItem>コントロールの作成またはに追加される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A>。 テンプレートをカスタマイズする InitializeItem メソッドをオーバーライドして、<xref:System.Web.UI.WebControls.DataListItem>コントロール</xref:System.Web.UI.WebControls.DataListItem>。"
  syntax:
    content: protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);
    parameters:
    - id: item
      type: System.Web.UI.WebControls.DataListItem
      description: "<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref>を初期化します。"
  overload: System.Web.UI.WebControls.DataList.InitializeItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "いずれかのボタンがクリックされたときに発生、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "ItemCommand イベントを発生するのいずれかのボタンがクリックされたときに、<xref:System.Web.UI.WebControls.DataList>を制御し、通常、カスタム ボタン コントロールがある場合に使用`CommandName`値</xref:System.Web.UI.WebControls.DataList>。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCommand event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_0_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_0_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "サーバー内の項目で発生した、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロールを作成します。"
  remarks: "内のアイテムと ItemCreated イベントが発生した、<xref:System.Web.UI.WebControls.DataList>コントロールが作成されると、ラウンド トリップ時と時にデータがコントロールにバインドする</xref:System.Web.UI.WebControls.DataList>。       ItemCreated イベントは通常の行の外観と内容を制御する使用、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemCreated event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_106_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  id: ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "項目がデータにバインドされているときに発生、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "項目がデータにバインドした後で ItemDataBound イベントが発生、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 このイベントは、クライアントに表示される前に、データ項目にアクセスする最後の機会を提供します。 このイベントが発生した後、データ項目は使用できなくします。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the ItemDataBound event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_143_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_143_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;
    return:
      type: System.Web.UI.WebControls.DataListItemEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.Items
  id: Items
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コレクションを取得<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>コントロール内の個々 のアイテムを表すオブジェクト。"
  remarks: "アイテム コレクション内の項目をプログラムから制御を使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 項目のコレクションは、項目をコレクションに追加または削除するメソッドを提供しません。 ただしのハンドラーを提供することで、項目の内容を制御することができます、<xref:System.Web.UI.WebControls.DataList.ItemCreated>イベント</xref:System.Web.UI.WebControls.DataList.ItemCreated>。      > [!NOTE] > Items コレクションに、データ ソースにバインドされている項目のみが含まれています。 コレクション内では、ヘッダー、フッター、および区切り記号が含まれていません。"
  example:
  - "The following code example demonstrates how to use the Items collection to display the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic DataList.Items Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_231_1.aspx)]\n [!code-cs[Classic DataList.Items Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_231_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }
    return:
      type: System.Web.UI.WebControls.DataListItemCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemCollection&quot;> </xref>のコレクションを含む<xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;></xref>内で個々 のアイテムを表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DataList.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  id: ItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内の項目のスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "このプロパティのアイテムのカスタム スタイルを指定を使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       アイテムのスタイル プロパティで、<xref:System.Web.UI.WebControls.DataList>コントロールは、階層構造を使用する&1; つの項目のスタイル プロパティから継承されます</xref:System.Web.UI.WebControls.DataList>。 アイテムのスタイル プロパティが、階層内を低く設定は、階層内の上位の項目のスタイル プロパティによって継承されます。 たとえば場合は、後のプロパティの赤いフォントを指定すると、その他のすべての項目スタイル プロパティので、<xref:System.Web.UI.WebControls.DataList>コントロールには、赤いフォントがあります</xref:System.Web.UI.WebControls.DataList>。 これにより、1 つのアイテムのスタイル プロパティを設定してコントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 たとえば、青のフォントを指定することができます、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>後プロパティで指定された赤いフォントをオーバーライドするプロパティ</xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。 次の表は、最上位から最下位に階層の順序を一覧表示します。      |優先順位 |スタイル プロパティ |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |後 |  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      項目にカスタム スタイルを指定する、<xref:System.Web.UI.WebControls.DataList>コントロールを配置、`<ItemStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A></xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A></xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>。 スタイル属性の一覧を表示することができますし、`<ItemStyle>`タグ。       使用することも、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>の項目を交互に別の外観を指定するプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。"
  example:
  - "The following code example demonstrates how to use the ItemStyle property to specify a different background color for the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_649_1.aspx)]\n [!code-cs[DataListItemStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_649_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内の項目のスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.ItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定の項目に対して、テンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "内の項目の内容を制御する、ItemTemplate プロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 内の項目の外観、<xref:System.Web.UI.WebControls.DataList>によってコントロールが制御されます、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList>。       項目テンプレートを指定する、<xref:System.Web.UI.WebControls.DataList>コントロールを配置、`<ItemTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<ItemTemplate>`タグ。       必要に応じて使用することができます、<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>の項目を交互に別の外観を指定するプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to control the contents of the items in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_848_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_848_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>テンプレート内の項目を格納している、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "以前に保存したビューステートを読み込みます、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。  ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドのビュー ステート情報の復元、<xref:System.Web.UI.WebControls.DataList>によって保存された前回のページ要求からのコントロール、<xref:System.Web.UI.WebControls.DataList.SaveViewState%2A>メソッド</xref:System.Web.UI.WebControls.DataList.SaveViewState%2A></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "状態を表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "サーバー コントロールのイベントをページの UI サーバー コントロールの階層構造に渡すかどうかを判断します。"
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "イベントのソース。"
    - id: e
      type: System.EventArgs
      description: "イベントのデータ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>イベントが取り消された場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.CancelCommand&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnCancelCommand メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.CancelCommand>イベント</xref:System.Web.UI.WebControls.DataList.CancelCommand>。       <xref:System.Web.UI.WebControls.DataList.CancelCommand>イベントが発生したときに、`Cancel`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.CancelCommand>。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataList.CancelCommand>イベントのセット、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) するデータを再バインドと、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A></xref:System.Web.UI.WebControls.DataList.CancelCommand>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnCancelCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.CancelCommand> event. It cancels any edits made to an item in the <xref:System.Web.UI.WebControls.DataList> control when the `Cancel` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/f712037e-c950-4136-8daf-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/f712037e-c950-4136-8daf-_2.aspx)]"
  syntax:
    content: protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnCancelCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.DeleteCommand&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnDeleteCommand メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.DeleteCommand>イベント</xref:System.Web.UI.WebControls.DataList.DeleteCommand>。       <xref:System.Web.UI.WebControls.DataList.DeleteCommand>イベントが発生したときに、`Delete`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.DeleteCommand>。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataList.DeleteCommand>イベントのデータ ソースから選択した項目を削除および再バインドするデータを<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.DeleteCommand>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnDeleteCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.DeleteCommand> event. It deletes the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Delete` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/b69fcef1-7d66-4606-9238-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/b69fcef1-7d66-4606-9238-_2.aspx)]"
  syntax:
    content: protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.EditCommand&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnEditCommand メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.EditCommand>イベント</xref:System.Web.UI.WebControls.DataList.EditCommand>。       <xref:System.Web.UI.WebControls.DataList.EditCommand>イベントが発生したときに、`Edit`のアイテムのボタンがクリックされた、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditCommand>。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataList.EditCommand>イベントのセット、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを選択した行からのデータを再バインド数と、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A></xref:System.Web.UI.WebControls.DataList.EditCommand>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnEditCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.EditCommand> event. It allows you to edit the selected item in the <xref:System.Web.UI.WebControls.DataList> control when the `Edit` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/99a47a87-5972-4aac-87aa-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/99a47a87-5972-4aac-87aa-_2.aspx)]"
  syntax:
    content: protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnEditCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref>イベントを<xref href=&quot;System.Web.UI.WebControls.DataList&quot;></xref>コントロール。"
  remarks: "OnInit メソッドは、通知、<xref:System.Web.UI.WebControls.DataList>インスタンスを作成および設定するために必要な初期化の手順を実行するコントロール</xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.DataList.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemCommand&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnItemCommand メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.ItemCommand>イベント</xref:System.Web.UI.WebControls.DataList.ItemCommand>。       <xref:System.Web.UI.WebControls.DataList.ItemCommand>でいずれかのボタンがクリックされたときにイベントが発生した、<xref:System.Web.UI.WebControls.DataList>を制御し、通常、カスタム ボタン コントロールがある場合に使用`CommandName`などの値`Add`で、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemCommand>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnItemCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCommand> event to select an item from the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_1.aspx)]  \n  \n [!code-vb[DataListItemCommand2#1](~/add/codesnippet/visualbasic/346e0b5a-81b1-46ba-abc9-_2.aspx)]\n [!code-cs[DataListItemCommand2#1](~/add/codesnippet/csharp/346e0b5a-81b1-46ba-abc9-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemCreated&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnItemCreated メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.ItemCreated>イベント</xref:System.Web.UI.WebControls.DataList.ItemCreated>。       <xref:System.Web.UI.WebControls.DataList.ItemCreated>イベントは内の項目、<xref:System.Web.UI.WebControls.DataList>コントロールが作成されると、ラウンド トリップ時と時にデータがコントロールにバインドします</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemCreated>。       <xref:System.Web.UI.WebControls.DataList.ItemCreated>内の行の外観と内容を制御するイベントは通常使用、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemCreated>。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnItemCreated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemCreated> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are created.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCreated#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_1.aspx)]\n [!code-cs[DataListItemCreated#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_1.aspx)]  \n  \n [!code-cs[DataListItemCreated2#1](~/add/codesnippet/csharp/daa572be-0a5b-4a9b-a0e3-_2.aspx)]\n [!code-vb[DataListItemCreated2#1](~/add/codesnippet/visualbasic/daa572be-0a5b-4a9b-a0e3-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  id: OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.ItemDataBound&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnItemDataBound メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.ItemDataBound>イベント</xref:System.Web.UI.WebControls.DataList.ItemDataBound>。       <xref:System.Web.UI.WebControls.DataList.ItemDataBound>イベントは、項目がデータにバインドした後、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemDataBound>。 このイベントは、クライアントに表示される前に、データ項目にアクセスする最後の機会を提供します。 このイベントが発生した後、データ項目は使用できなくします。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnItemDataBound メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.ItemDataBound> event to display the order in which items in the <xref:System.Web.UI.WebControls.DataList> control are bound to the control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListItemDataBound#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_1.aspx)]\n [!code-vb[DataListItemDataBound#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_1.aspx)]  \n  \n [!code-vb[DataListItemDataBound2#1](~/add/codesnippet/visualbasic/d0f378ec-24e7-443f-8ae5-_2.aspx)]\n [!code-cs[DataListItemDataBound2#1](~/add/codesnippet/csharp/d0f378ec-24e7-443f-8ae5-_2.aspx)]"
  syntax:
    content: protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListItemEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnItemDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  id: OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.DataList.UpdateCommand&quot;> </xref>イベント。 これにより、イベントのカスタム ハンドラーを提供することができます。"
  remarks: "OnUpdateCommand メソッドを使用してカスタム ハンドラーを作成して、<xref:System.Web.UI.WebControls.DataList.UpdateCommand>イベント</xref:System.Web.UI.WebControls.DataList.UpdateCommand>。       <xref:System.Web.UI.WebControls.DataList.UpdateCommand>イベントが発生したときに、`Update`アイテムがクリックされたボタンをクリックします</xref:System.Web.UI.WebControls.DataList.UpdateCommand>。       一般的なハンドラーを<xref:System.Web.UI.WebControls.DataList.UpdateCommand>イベント データ、設定を更新する、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) する、データを再バインドと、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A></xref:System.Web.UI.WebControls.DataList.UpdateCommand>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。       OnUpdateCommand メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the <xref:System.Web.UI.WebControls.DataList.UpdateCommand> event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/0d1a8fde-7046-4f78-b346-_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/0d1a8fde-7046-4f78-b346-_2.aspx)]"
  syntax:
    content: protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.DataListCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItemEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "コントロールの階層構造で表示するために準備、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "カスタム コントロールから派生している場合、主にコントロールの開発者によって PrepareControlHierarchy メソッドが使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       PrepareControlHierarchy 準備コントロール スタイルの階層とセットに含まれるの<xref:System.Web.UI.WebControls.DataListItem>子コントロールが表示される前に制御します</xref:System.Web.UI.WebControls.DataListItem>。"
  syntax:
    content: protected override void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "リスト項目を表示、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "カスタム コントロールから派生している場合、主にコントロールの開発者によって RenderContents メソッドが使用される、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       RenderContents メソッドはコンテンツの内部を表示、<xref:System.Web.UI.WebControls.DataList>格納されているを含むコントロール<xref:System.Web.UI.WebControls.DataListItem>コントロール</xref:System.Web.UI.WebControls.DataListItem></xref:System.Web.UI.WebControls.DataList>。"
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that some text precedes the <xref:System.Web.UI.WebControls.DataList> object.  \n  \n [!code-cs[CustomDataListRenderContents#1](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_1.aspx)]\n [!code-vb[CustomDataListRenderContents#1](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_1.aspx)]  \n[!code-cs[CustomDataListRenderContents#2](~/add/codesnippet/csharp/723e0bf7-1579-4578-bf9d-_2.cs)]\n[!code-vb[CustomDataListRenderContents#2](~/add/codesnippet/visualbasic/723e0bf7-1579-4578-bf9d-_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "A <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> HTML クライアントでコンテンツを表示する出力ストリームを表すです。"
  overload: System.Web.UI.WebControls.DataList.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  id: RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に表示する列の数、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "内の項目を表示する列の数を指定するこのプロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 たとえば、このプロパティを設定する`5`、<xref:System.Web.UI.WebControls.DataList>コントロールでは、5 つの列でそのアイテムが表示されます</xref:System.Web.UI.WebControls.DataList>。      > [!NOTE] > このプロパティが設定されている場合`0`、<xref:System.Web.UI.WebControls.DataList>コントロールでは、1 行または&1; の値に基づく列でそのアイテムが表示されます、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A></xref:System.Web.UI.WebControls.DataList>。 場合、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>プロパティに設定されている`RepeatDirection.Horizontal`アイテムが&1; つの行に表示されます</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>。 場合、<xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>プロパティに設定されている`RepeatDirection.Vertical`アイテムが&1; つの列に表示されます</xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>。"
  example:
  - "The following code example demonstrates how to use the RepeatColumns property to specify the number of columns to display in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_722_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_722_1.aspx)]"
  syntax:
    content: public virtual int RepeatColumns { get; set; }
    return:
      type: System.Int32
      description: "表示する列の数、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>、ことを示します内の項目、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロールは、1 行または&1; の値に基づいて、列に表示される、<xref:System.Web.UI.WebControls.DataList.RepeatDirection*>プロパティ</xref:System.Web.UI.WebControls.DataList.RepeatDirection*>。"
  overload: System.Web.UI.WebControls.DataList.RepeatColumns*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された列数は、負の値です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  id: RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するかどうか、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>垂直または水平方向にコントロールが表示されます。"
  remarks: "表示方向を指定する、RepeatDirection プロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。      > [!NOTE] > によって表示される列の数が決まります常に、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>。       このプロパティ設定されている場合`RepeatDirection.Vertical`リスト内の項目は上から下に読み込まれた列に表示し、すべてのアイテムがレンダリングされるまでは、左から右、します。 たとえば場合、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>プロパティに設定されている`3`、内の項目、<xref:System.Web.UI.WebControls.DataList>コントロールが次の表のように、3 つの列に表示されます</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>。      ||||  |-|-|-|  |&1; |&4; |&7; |  |&2; |&5; |&8; |  |&3; |&6; |&9; |      このプロパティ設定されている場合`RepeatDirection.Horizontal`上から下、すべてのアイテムがレンダリングされるまで、リスト内のアイテムが左から右に読み込まれた行に表示されます。 たとえば場合、<xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>プロパティに設定されている`3`、の項目、<xref:System.Web.UI.WebControls.DataList>コントロールは、次の表に、3 つの項目が、それぞれの行に表示されます</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>。      ||||   |-|-|-|   |1|2|3|   |4|5|6|   |7|8|9|"
  example:
  - "The following code example demonstrates how to use the RepeatDirection property to specify the direction in which the <xref:System.Web.UI.WebControls.DataList> control is displayed.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_42_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_42_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatDirection
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Vertical&quot; name=&quot;Vertical&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.RepeatDirection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定した値が、 <xref href=&quot;System.Web.UI.WebControls.RepeatDirection&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  id: RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または、テーブルまたはフロー レイアウトで、コントロールが表示されるかどうかを設定します。"
  remarks: "RepeatLayout プロパティを使用して、指定するかどうか内の項目、<xref:System.Web.UI.WebControls.DataList>コントロールがテーブルに表示されます</xref:System.Web.UI.WebControls.DataList>。 <xref:System.Web.UI.WebControls.RepeatLayout><xref:System.Web.UI.WebControls.DataList>コントロールは、<xref:System.Web.UI.WebControls.RepeatLayout>および<xref:System.Web.UI.WebControls.RepeatLayout>。</xref:System.Web.UI.WebControls.RepeatLayout></xref:System.Web.UI.WebControls.RepeatLayout></xref:System.Web.UI.WebControls.DataList>でサポートされている値</xref:System.Web.UI.WebControls.RepeatLayout>のみ       このプロパティ設定されている場合`RepeatLayout.Table`リスト内のアイテムがテーブルに表示されます。 このプロパティ設定されている場合`RepeatLayout.Flow`テーブルの構造なし、リスト内の項目が表示されます。       ときに、<xref:System.Web.UI.WebControls.DataList>コントロールは、テーブルで表示される、使用することができます、<xref:System.Web.UI.WebControls.DataList.GridLines%2A>グリッド線のスタイルを指定するプロパティ</xref:System.Web.UI.WebControls.DataList.GridLines%2A></xref:System.Web.UI.WebControls.DataList>。"
  example:
  - "The following code example demonstrates how to use the RepeatLayout property to specify the layout style of the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListLayout#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_586_1.aspx)]\n [!code-cs[DataListLayout#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_586_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }
    return:
      type: System.Web.UI.WebControls.RepeatLayout
      description: "フロー レイアウトまたはテーブルに、コントロールが表示されるかどうかを指定する値。"
  overload: System.Web.UI.WebControls.DataList.RepeatLayout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定した値がサポートされているのいずれかの<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;></xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "保存コントロールへの変更は、ページがサーバーにポストされた時間以降の状態を表示します。"
  remarks: "SaveViewState メソッドは、主にコントロールの開発者によって使用されます。       ビュー ステートが、サーバー コントロールのプロパティの値の累積します。 これらの値は、サーバー コントロールの<xref:System.Web.UI.StateBag><xref:System.Web.UI.Control.ViewState%2A>プロパティ、</xref:System.Web.UI.Control.ViewState%2A></xref:System.Web.UI.StateBag>に自動的に配置します。 <xref:System.Web.UI.Control.ViewState%2A>プロパティの値が文字列オブジェクトに、サーバー コントロールのライフ サイクルの保存状態の段階の後に、永続化します</xref:System.Web.UI.Control.ViewState%2A>。 詳細については、次を参照してください。 [ASP.NET ページ ライフ サイクルの概要](~/add/includes/ajax-current-ext-md.md)です。       ビューステートを保存すると、この文字列オブジェクトが非表示の HTML input 要素に格納されている変数としてクライアントに返されます。 SaveViewState メソッドをオーバーライドし、効率を向上できますとカスタム サーバー コントロールを作成するときに、<xref:System.Web.UI.Control.ViewState%2A>サーバー コントロールのプロパティ</xref:System.Web.UI.Control.ViewState%2A>。 詳細については、次を参照してください。[カスタム ASP.NET サーバー コントロールの開発](~/add/includes/ajax-current-ext-md.md)と[ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "変更を格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>状態を表示します。"
  overload: System.Web.UI.WebControls.DataList.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  id: SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表す、 <xref uid=&quot;langword_csharp_Select&quot; name=&quot;Select&quot; href=&quot;&quot;> </xref>コマンド名です。 このフィールドは、読み取り専用です。"
  remarks: "表す SelectCommandName フィールドを使用して、`Select`コマンド名です。"
  syntax:
    content: public const string SelectCommandName;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  id: SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で選択した項目のインデックス、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "SelectedIndex プロパティで選択した項目をプログラムで指定を使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 このプロパティを使用して、選択した項目のインデックスを確認することができますも。      > [!NOTE] >、SelectedIndex プロパティは、0 から始まります。       項目の選択を解除するに SelectedIndex プロパティを設定`-1`です。       SelectedIndex プロパティは、コントロールの状態に格納されます。"
  example:
  - "The following code example demonstrates how to use the SelectedIndex property to specify the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1039_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1039_1.aspx)]"
  syntax:
    content: public virtual int SelectedIndex { get; set; }
    return:
      type: System.Int32
      description: "選択した項目のインデックス、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DataList.SelectedIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定された値より小さい<xref uid=&quot;langword_csharp_-1&quot; name=&quot;-1&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  id: SelectedItem
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選択した項目を取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "SelectedItem プロパティを使用して、<xref:System.Web.UI.WebControls.DataListItem>で選択した項目を表すオブジェクト、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataListItem>。 このオブジェクトは、選択した項目のプロパティにアクセスし、使用できます。"
  example:
  - "The following code example demonstrates how to use the SelectedItem property to display the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic DataList.SelectedItem Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_681_1.aspx)]\n [!code-vb[Classic DataList.SelectedItem Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_681_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }
    return:
      type: System.Web.UI.WebControls.DataListItem
      description: "A <xref href=&quot;System.Web.UI.WebControls.DataListItem&quot;> </xref>で選択した項目を表す、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  overload: System.Web.UI.WebControls.DataList.SelectedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  id: SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選択した項目のスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "このプロパティで選択した項目のカスタム スタイルを指定を使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       アイテムのスタイル プロパティで、<xref:System.Web.UI.WebControls.DataList>コントロールは、階層構造を使用する&1; つの項目のスタイル プロパティから継承されます</xref:System.Web.UI.WebControls.DataList>。 アイテムのスタイル プロパティが、階層内を低く設定は、階層内の上位の項目のスタイル プロパティによって継承されます。 赤いフォントを指定する場合など、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ、その他の項目のスタイルのすべてのプロパティ、<xref:System.Web.UI.WebControls.DataList>コントロールには、赤いフォントがあります</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>。 これにより、1 つのアイテムのスタイル プロパティを設定してコントロールの共通の外観を提供することができます。 スタイル プロパティを設定して、階層の上位にあるアイテムのスタイル プロパティの継承されたスタイルの設定をオーバーライドすることができます。 たとえば、青のフォントを指定することができます、<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>赤いフォントで指定されたをオーバーライドするプロパティ、<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>。 次の表は、最上位から最下位に階層の順序を一覧表示します。      |優先順位 |スタイル プロパティ |  |----------------|--------------------|  |&1; |<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  |&2; |後 |  |&3; |<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  |&4; |<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  |&5; |<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|      選択したアイテムのカスタム スタイルを指定するには、配置、`<SelectedItemStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A></xref:System.Web.UI.WebControls.DataList.ItemStyle%2A></xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A></xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>。 スタイル属性の一覧を表示することができますし、`<SelectedItemStyle>`タグ。"
  example:
  - "The following code example demonstrates how to use the SelectedItemStyle property to specify a custom background color for the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_571_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_571_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>で選択した項目のスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  id: SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定で選択した項目のテンプレート、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "SelectedItemTemplate プロパティを使用すると、選択した項目の内容を制御できます。 によって、選択したアイテムの外観を制御、<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>。       選択した項目のテンプレートを指定する、`<SelectedItemTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<SelectedItemTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the SelectedItemTemplate property to control the contents of the selected item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[DataListItemCommand#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_845_1.aspx)]\n [!code-cs[DataListItemCommand#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_845_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>で選択した項目のテンプレートを含む、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "選択したデータ リスト項目のキー フィールドの値を取得します。"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "選択したデータ リスト項目のキー フィールドの値。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>データの一覧の項目が現在選択されていないことを示します。"
  overload: System.Web.UI.WebControls.DataList.SelectedValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>プロパティが設定されていません</xref:System.Web.UI.WebControls.BaseDataList.DataKeyField*>。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  id: SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内の各項目間の区切り記号のスタイル プロパティを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "内の各項目間の区切り記号のカスタム スタイルを指定した後のプロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 区切り記号では、内の各項目の間でのカスタム コンテンツを持つ要素を配置することができます、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 前景の色、背景色、フォント、およびセル内のコンテンツの配置を調整できる共通のスタイル属性が含まれます。 外観を向上とは異なるスタイルを提供する、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       区切り記号のカスタム スタイルを指定するには、配置、`<SeparatorStyle>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 スタイル属性の一覧を表示することができますし、`<SeparatorStyle>`タグ。"
  example:
  - "The following code example demonstrates how to use the SeparatorStyle property to specify a custom background color for the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1134_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1134_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "A <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref>内の各項目間の区切り記号のスタイル プロパティを格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は、空<xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;></xref>オブジェクト。"
  overload: System.Web.UI.WebControls.DataList.SeparatorStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  id: SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定テンプレートのアイテム間の区切り記号、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "項目間の区切り記号の内容を制御した後のプロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 区切り記号では、内の各項目の間でのカスタム コンテンツを持つ要素を配置することができます、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 項目間の区切り記号の外観、<xref:System.Web.UI.WebControls.DataList>によってコントロールが制御されます、<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A></xref:System.Web.UI.WebControls.DataList>。       区切り記号のテンプレートを指定するには、配置、`<SeparatorTemplate>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。 開始タグと終了の間でテンプレートの内容の一覧を表示することができますし、`<SeparatorTemplate>`タグ。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use the SeparatorTemplate property to control the contents of the separator between each item in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListSeparatorStyle#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1118_1.aspx)]\n [!code-vb[DataListSeparatorStyle#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1118_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "A <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>内の項目間の区切り記号のテンプレートを含む、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  id: ShowFooter
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定にフッター セクションが表示されるかどうかを示す値、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "フッター セクションが表示されるかどうかを指定する、ShowFooter プロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       設定して、フッター セクションの外観を制御することができます、<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>。 フッター セクションの内容によって、<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>。"
  example:
  - "The following code example demonstrates how to use the ShowFooter property to display the footer section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_885_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_885_1.aspx)]"
  syntax:
    content: public virtual bool ShowFooter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、フッター セクションが表示されます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>が、このプロパティは、調べるときに、<xref:System.Web.UI.WebControls.DataList.FooterTemplate*>プロパティは使用されません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.DataList.FooterTemplate*> 。"
  overload: System.Web.UI.WebControls.DataList.ShowFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  id: ShowHeader
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはのヘッダー セクションが表示されるかどうかを示す値を設定、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "ヘッダー セクションが表示されるかどうかを指定する、ShowHeader プロパティを使用して、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList>。       設定して、ヘッダー セクションの外観を制御することができます、<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>。 ヘッダー セクションの内容によって、<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>プロパティ</xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>。"
  example:
  - "The following code example demonstrates how to use the ShowHeader property to display the header section in the <xref:System.Web.UI.WebControls.DataList> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListShowHeader#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_933_1.aspx)]\n [!code-vb[DataListShowHeader#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_933_1.aspx)]"
  syntax:
    content: public virtual bool ShowHeader { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ヘッダーを表示する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>が、このプロパティは、調べるときに、<xref:System.Web.UI.WebControls.DataList.HeaderTemplate*>プロパティは使用されません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.DataList.HeaderTemplate*> 。"
  overload: System.Web.UI.WebControls.DataList.ShowHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  id: System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.ListItemType&quot;> </xref>列挙値。"
    - id: repeatIndex
      type: System.Int32
      description: "リスト コントロール内の項目のインデックス。"
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>リスト コントロール内の指定したインデックス位置の指定した項目の種類のスタイルを表すです。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>インスタンスのキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  id: System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  id: System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: itemType
      type: System.Web.UI.WebControls.ListItemType
      description: "項目の種類。"
    - id: repeatIndex
      type: System.Int32
      description: "項目のインデックス。"
    - id: repeatInfo
      type: System.Web.UI.WebControls.RepeatInfo
      description: "アイテムを表示するために使用される情報です。"
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>アイテムを表示するために使用するオブジェクト。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  id: System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  isEii: true
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.DataList>にインスタンスをキャスト、<xref:System.Web.UI.WebControls.IRepeatInfoUser>インターフェイス</xref:System.Web.UI.WebControls.IRepeatInfoUser></xref:System.Web.UI.WebControls.DataList>。"
  syntax:
    content: int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }
    return:
      type: System.Int32
      description: "追加します。"
  overload: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表示するために使用される HTML タグを取得、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "TagKey プロパティを使用して、<xref:System.Web.UI.HtmlTextWriterTag>値に関連付けられている、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.HtmlTextWriterTag>。 TagKey プロパティは、主にコントロールの開発者によって使用されます。"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "返します、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>タグ、<xref:System.Web.UI.WebControls.DataList.RepeatLayout*>に設定されている<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;> </xref>、それ以外を返します、 <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>タグ</xref:System.Web.UI.WebControls.DataList.RepeatLayout*>。 既定値は<xref href=&quot;System.Web.UI.WebControls.RepeatLayout&quot;></xref>です。"
  overload: System.Web.UI.WebControls.DataList.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビュー ステートの変更を追跡、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref> 、コントロールの保存できるように<xref:System.Web.UI.Control.ViewState*>プロパティ</xref:System.Web.UI.Control.ViewState*>。"
  remarks: "TrackViewState メソッドをオーバーライドするコントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始点をマークします。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.DataList.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生したときに、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>のアイテムのボタンがクリックされた、 <xref href=&quot;System.Web.UI.WebControls.DataList&quot;> </xref>コントロール。"
  remarks: "UpdateCommand イベントが発生したときに、`Update`アイテムがクリックされたボタンをクリックします。       一般的なハンドラー UpdateCommand イベントには、データが更新プログラムの設定、<xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>プロパティを`-1`(項目の選択を解除) する、データを再バインドと、<xref:System.Web.UI.WebControls.DataList>コントロール</xref:System.Web.UI.WebControls.DataList></xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A>。      > [!CAUTION] > 悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するこのコントロールを使用することができます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 検証コントロールを使用すると、コントロールに入力されたテキストを表示する前にユーザー入力を検証します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 詳細については、次を参照してください。[標準コントロールのセキュリティで保護する](~/add/includes/ajax-current-ext-md.md)、[する方法: 保護に対してスクリプトによる攻略の文字列を HTML エンコードを適用することによって、Web アプリケーションで](~/add/includes/ajax-current-ext-md.md)、および[ASP.NET Web Pages でのユーザー入力の検証](~/add/includes/ajax-current-ext-md.md)です。       イベント処理の詳細については、次を参照してください。[する方法: Web フォーム アプリケーションでのイベントの消費](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to specify and code a handler for the UpdateCommand event. It allows you to update the selected item in the <xref:System.Web.UI.WebControls.DataList> control with the new values entered by the user when the `Update` button is clicked.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[DataListEdit#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_1.aspx)]\n [!code-vb[DataListEdit#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_1.aspx)]  \n  \n [!code-vb[DataListEdit2#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_128_2.aspx)]\n [!code-cs[DataListEdit2#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_128_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;
    return:
      type: System.Web.UI.WebControls.DataListCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  id: UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  langs:
  - csharp
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "表す、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>コマンド名です。 このフィールドは、読み取り専用です。"
  remarks: "表す UpdateCommandName フィールドを使用して、`Update`コマンド名です。"
  syntax:
    content: public const string UpdateCommandName;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.BaseDataList
  isExternal: false
  name: System.Web.UI.WebControls.BaseDataList
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.DataList.#ctor
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList()
  nameWithType: DataList.DataList()
  fullName: System.Web.UI.WebControls.DataList.DataList()
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.DataList.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.DataList.CancelCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommand
  nameWithType: DataList.CancelCommand
  fullName: System.Web.UI.WebControls.DataList.CancelCommand
- uid: System.Web.UI.WebControls.DataListCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventHandler
  nameWithType: DataListCommandEventHandler
  fullName: System.Web.UI.WebControls.DataListCommandEventHandler
- uid: System.Web.UI.WebControls.DataList.CancelCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CancelCommandName
  nameWithType: DataList.CancelCommandName
  fullName: System.Web.UI.WebControls.DataList.CancelCommandName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy(Boolean)
  nameWithType: DataList.CreateControlHierarchy(Boolean)
  fullName: System.Web.UI.WebControls.DataList.CreateControlHierarchy(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle()
  nameWithType: DataList.CreateControlStyle()
  fullName: System.Web.UI.WebControls.DataList.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem(Int32,ListItemType)
  nameWithType: DataList.CreateItem(Int32,ListItemType)
  fullName: System.Web.UI.WebControls.DataList.CreateItem(Int32,ListItemType)
- uid: System.Web.UI.WebControls.DataListItem
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItem
  nameWithType: DataListItem
  fullName: System.Web.UI.WebControls.DataListItem
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.ListItemType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ListItemType
  nameWithType: ListItemType
  fullName: System.Web.UI.WebControls.ListItemType
- uid: System.Web.UI.WebControls.DataList.DeleteCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommand
  nameWithType: DataList.DeleteCommand
  fullName: System.Web.UI.WebControls.DataList.DeleteCommand
- uid: System.Web.UI.WebControls.DataList.DeleteCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DeleteCommandName
  nameWithType: DataList.DeleteCommandName
  fullName: System.Web.UI.WebControls.DataList.DeleteCommandName
- uid: System.Web.UI.WebControls.DataList.EditCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommand
  nameWithType: DataList.EditCommand
  fullName: System.Web.UI.WebControls.DataList.EditCommand
- uid: System.Web.UI.WebControls.DataList.EditCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditCommandName
  nameWithType: DataList.EditCommandName
  fullName: System.Web.UI.WebControls.DataList.EditCommandName
- uid: System.Web.UI.WebControls.DataList.EditItemIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
  fullName: System.Web.UI.WebControls.DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
  fullName: System.Web.UI.WebControls.DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
  fullName: System.Web.UI.WebControls.DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
  fullName: System.Web.UI.WebControls.DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
  fullName: System.Web.UI.WebControls.DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
  fullName: System.Web.UI.WebControls.DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
  fullName: System.Web.UI.WebControls.DataList.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
  fullName: System.Web.UI.WebControls.DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
  fullName: System.Web.UI.WebControls.DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem(DataListItem)
  nameWithType: DataList.InitializeItem(DataListItem)
  fullName: System.Web.UI.WebControls.DataList.InitializeItem(DataListItem)
- uid: System.Web.UI.WebControls.DataList.ItemCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCommand
  nameWithType: DataList.ItemCommand
  fullName: System.Web.UI.WebControls.DataList.ItemCommand
- uid: System.Web.UI.WebControls.DataList.ItemCreated
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemCreated
  nameWithType: DataList.ItemCreated
  fullName: System.Web.UI.WebControls.DataList.ItemCreated
- uid: System.Web.UI.WebControls.DataListItemEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventHandler
  nameWithType: DataListItemEventHandler
  fullName: System.Web.UI.WebControls.DataListItemEventHandler
- uid: System.Web.UI.WebControls.DataList.ItemDataBound
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemDataBound
  nameWithType: DataList.ItemDataBound
  fullName: System.Web.UI.WebControls.DataList.ItemDataBound
- uid: System.Web.UI.WebControls.DataList.Items
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
  fullName: System.Web.UI.WebControls.DataList.Items
- uid: System.Web.UI.WebControls.DataListItemCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemCollection
  nameWithType: DataListItemCollection
  fullName: System.Web.UI.WebControls.DataListItemCollection
- uid: System.Web.UI.WebControls.DataList.ItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
  fullName: System.Web.UI.WebControls.DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
  fullName: System.Web.UI.WebControls.DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: DataList.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.DataList.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: DataList.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnCancelCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnCancelCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataListCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListCommandEventArgs
  nameWithType: DataListCommandEventArgs
  fullName: System.Web.UI.WebControls.DataListCommandEventArgs
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnDeleteCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnDeleteCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnEditCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnEditCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DataList.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnItemCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated(DataListItemEventArgs)
  nameWithType: DataList.OnItemCreated(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemCreated(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataListItemEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataListItemEventArgs
  nameWithType: DataListItemEventArgs
  fullName: System.Web.UI.WebControls.DataListItemEventArgs
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound(DataListItemEventArgs)
  nameWithType: DataList.OnItemDataBound(DataListItemEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnItemDataBound(DataListItemEventArgs)
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand(DataListCommandEventArgs)
  nameWithType: DataList.OnUpdateCommand(DataListCommandEventArgs)
  fullName: System.Web.UI.WebControls.DataList.OnUpdateCommand(DataListCommandEventArgs)
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: DataList.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.DataList.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: DataList.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.DataList.RepeatColumns
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
  fullName: System.Web.UI.WebControls.DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
  fullName: System.Web.UI.WebControls.DataList.RepeatDirection
- uid: System.Web.UI.WebControls.RepeatDirection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatDirection
  nameWithType: RepeatDirection
  fullName: System.Web.UI.WebControls.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
  fullName: System.Web.UI.WebControls.DataList.RepeatLayout
- uid: System.Web.UI.WebControls.RepeatLayout
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatLayout
  nameWithType: RepeatLayout
  fullName: System.Web.UI.WebControls.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState()
  nameWithType: DataList.SaveViewState()
  fullName: System.Web.UI.WebControls.DataList.SaveViewState()
- uid: System.Web.UI.WebControls.DataList.SelectCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectCommandName
  nameWithType: DataList.SelectCommandName
  fullName: System.Web.UI.WebControls.DataList.SelectCommandName
- uid: System.Web.UI.WebControls.DataList.SelectedIndex
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
  fullName: System.Web.UI.WebControls.DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
  fullName: System.Web.UI.WebControls.DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
  fullName: System.Web.UI.WebControls.DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
  fullName: System.Web.UI.WebControls.DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
  fullName: System.Web.UI.WebControls.DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
  fullName: System.Web.UI.WebControls.DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
  fullName: System.Web.UI.WebControls.DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
  fullName: System.Web.UI.WebControls.DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
  fullName: System.Web.UI.WebControls.DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(ListItemType,Int32)
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(ListItemType,Int32,RepeatInfo,HtmlTextWriter)
- uid: System.Web.UI.WebControls.RepeatInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: RepeatInfo
  nameWithType: RepeatInfo
  fullName: System.Web.UI.WebControls.RepeatInfo
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  fullName: System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
  fullName: System.Web.UI.WebControls.DataList.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.DataList.TrackViewState
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState()
  nameWithType: DataList.TrackViewState()
  fullName: System.Web.UI.WebControls.DataList.TrackViewState()
- uid: System.Web.UI.WebControls.DataList.UpdateCommand
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommand
  nameWithType: DataList.UpdateCommand
  fullName: System.Web.UI.WebControls.DataList.UpdateCommand
- uid: System.Web.UI.WebControls.DataList.UpdateCommandName
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: UpdateCommandName
  nameWithType: DataList.UpdateCommandName
  fullName: System.Web.UI.WebControls.DataList.UpdateCommandName
- uid: System.Web.UI.WebControls.DataList.#ctor*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: DataList
  nameWithType: DataList.DataList
- uid: System.Web.UI.WebControls.DataList.AlternatingItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemStyle
  nameWithType: DataList.AlternatingItemStyle
- uid: System.Web.UI.WebControls.DataList.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: DataList.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.DataList.CreateControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlHierarchy
  nameWithType: DataList.CreateControlHierarchy
- uid: System.Web.UI.WebControls.DataList.CreateControlStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateControlStyle
  nameWithType: DataList.CreateControlStyle
- uid: System.Web.UI.WebControls.DataList.CreateItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: CreateItem
  nameWithType: DataList.CreateItem
- uid: System.Web.UI.WebControls.DataList.EditItemIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemIndex
  nameWithType: DataList.EditItemIndex
- uid: System.Web.UI.WebControls.DataList.EditItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemStyle
  nameWithType: DataList.EditItemStyle
- uid: System.Web.UI.WebControls.DataList.EditItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: EditItemTemplate
  nameWithType: DataList.EditItemTemplate
- uid: System.Web.UI.WebControls.DataList.ExtractTemplateRows*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ExtractTemplateRows
  nameWithType: DataList.ExtractTemplateRows
- uid: System.Web.UI.WebControls.DataList.FooterStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterStyle
  nameWithType: DataList.FooterStyle
- uid: System.Web.UI.WebControls.DataList.FooterTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: FooterTemplate
  nameWithType: DataList.FooterTemplate
- uid: System.Web.UI.WebControls.DataList.GridLines*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: GridLines
  nameWithType: DataList.GridLines
- uid: System.Web.UI.WebControls.DataList.HeaderStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderStyle
  nameWithType: DataList.HeaderStyle
- uid: System.Web.UI.WebControls.DataList.HeaderTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: HeaderTemplate
  nameWithType: DataList.HeaderTemplate
- uid: System.Web.UI.WebControls.DataList.InitializeItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: InitializeItem
  nameWithType: DataList.InitializeItem
- uid: System.Web.UI.WebControls.DataList.Items*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: Items
  nameWithType: DataList.Items
- uid: System.Web.UI.WebControls.DataList.ItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemStyle
  nameWithType: DataList.ItemStyle
- uid: System.Web.UI.WebControls.DataList.ItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ItemTemplate
  nameWithType: DataList.ItemTemplate
- uid: System.Web.UI.WebControls.DataList.LoadViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: LoadViewState
  nameWithType: DataList.LoadViewState
- uid: System.Web.UI.WebControls.DataList.OnBubbleEvent*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnBubbleEvent
  nameWithType: DataList.OnBubbleEvent
- uid: System.Web.UI.WebControls.DataList.OnCancelCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnCancelCommand
  nameWithType: DataList.OnCancelCommand
- uid: System.Web.UI.WebControls.DataList.OnDeleteCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnDeleteCommand
  nameWithType: DataList.OnDeleteCommand
- uid: System.Web.UI.WebControls.DataList.OnEditCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnEditCommand
  nameWithType: DataList.OnEditCommand
- uid: System.Web.UI.WebControls.DataList.OnInit*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnInit
  nameWithType: DataList.OnInit
- uid: System.Web.UI.WebControls.DataList.OnItemCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCommand
  nameWithType: DataList.OnItemCommand
- uid: System.Web.UI.WebControls.DataList.OnItemCreated*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemCreated
  nameWithType: DataList.OnItemCreated
- uid: System.Web.UI.WebControls.DataList.OnItemDataBound*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnItemDataBound
  nameWithType: DataList.OnItemDataBound
- uid: System.Web.UI.WebControls.DataList.OnUpdateCommand*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: OnUpdateCommand
  nameWithType: DataList.OnUpdateCommand
- uid: System.Web.UI.WebControls.DataList.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: DataList.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.DataList.RenderContents*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RenderContents
  nameWithType: DataList.RenderContents
- uid: System.Web.UI.WebControls.DataList.RepeatColumns*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatColumns
  nameWithType: DataList.RepeatColumns
- uid: System.Web.UI.WebControls.DataList.RepeatDirection*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatDirection
  nameWithType: DataList.RepeatDirection
- uid: System.Web.UI.WebControls.DataList.RepeatLayout*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: RepeatLayout
  nameWithType: DataList.RepeatLayout
- uid: System.Web.UI.WebControls.DataList.SaveViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SaveViewState
  nameWithType: DataList.SaveViewState
- uid: System.Web.UI.WebControls.DataList.SelectedIndex*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedIndex
  nameWithType: DataList.SelectedIndex
- uid: System.Web.UI.WebControls.DataList.SelectedItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItem
  nameWithType: DataList.SelectedItem
- uid: System.Web.UI.WebControls.DataList.SelectedItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemStyle
  nameWithType: DataList.SelectedItemStyle
- uid: System.Web.UI.WebControls.DataList.SelectedItemTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedItemTemplate
  nameWithType: DataList.SelectedItemTemplate
- uid: System.Web.UI.WebControls.DataList.SelectedValue*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SelectedValue
  nameWithType: DataList.SelectedValue
- uid: System.Web.UI.WebControls.DataList.SeparatorStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorStyle
  nameWithType: DataList.SeparatorStyle
- uid: System.Web.UI.WebControls.DataList.SeparatorTemplate*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: SeparatorTemplate
  nameWithType: DataList.SeparatorTemplate
- uid: System.Web.UI.WebControls.DataList.ShowFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowFooter
  nameWithType: DataList.ShowFooter
- uid: System.Web.UI.WebControls.DataList.ShowHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: ShowHeader
  nameWithType: DataList.ShowHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RenderItem
- uid: System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
  nameWithType: DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount
- uid: System.Web.UI.WebControls.DataList.TagKey*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TagKey
  nameWithType: DataList.TagKey
- uid: System.Web.UI.WebControls.DataList.TrackViewState*
  parent: System.Web.UI.WebControls.DataList
  isExternal: false
  name: TrackViewState
  nameWithType: DataList.TrackViewState
