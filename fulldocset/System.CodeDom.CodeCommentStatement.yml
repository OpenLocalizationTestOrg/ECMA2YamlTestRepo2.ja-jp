### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeCommentStatement
  id: CodeCommentStatement
  children:
  - System.CodeDom.CodeCommentStatement.#ctor
  - System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)
  - System.CodeDom.CodeCommentStatement.#ctor(System.String)
  - System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)
  - System.CodeDom.CodeCommentStatement.Comment
  langs:
  - csharp
  name: CodeCommentStatement
  nameWithType: CodeCommentStatement
  fullName: System.CodeDom.CodeCommentStatement
  type: Class
  summary: "1 つのコメントから成るステートメントを表します。"
  remarks: "CodeCommentStatement は、単一行のコメント ステートメントを使用できます。 CodeCommentStatement はステートメントのため、ステートメントのコレクションに挿入できる、独自の行に表示されます。 CodeCommentStatement が<xref:System.CodeDom.CodeNamespace>または<xref:System.CodeDom.CodeTypeMember>。</xref:System.CodeDom.CodeTypeMember>から派生した任意のオブジェクト</xref:System.CodeDom.CodeNamespace>のコメントのコレクションに追加することもできます。"
  example:
  - "This example demonstrates using a CodeCommentStatement to represent a comment in source code.  \n  \n [!code-cs[CodeCommentExample#2](~/add/codesnippet/csharp/t-system.codedom.codecom_2_1.cs)]\n [!code-cpp[CodeCommentExample#2](~/add/codesnippet/cpp/t-system.codedom.codecom_2_1.cpp)]\n [!code-vb[CodeCommentExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecom_2_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeCommentStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeCommentStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeCommentStatement
  langs:
  - csharp
  name: CodeCommentStatement()
  nameWithType: CodeCommentStatement.CodeCommentStatement()
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeCommentStatement&quot;> </xref>クラスです。"
  syntax:
    content: public CodeCommentStatement ();
    parameters: []
  overload: System.CodeDom.CodeCommentStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)
  id: '#ctor(System.CodeDom.CodeComment)'
  parent: System.CodeDom.CodeCommentStatement
  langs:
  - csharp
  name: CodeCommentStatement(CodeComment)
  nameWithType: CodeCommentStatement.CodeCommentStatement(CodeComment)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(CodeComment)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeCommentStatement&quot;> </xref>クラス、指定されたコメントを使用します。"
  syntax:
    content: public CodeCommentStatement (System.CodeDom.CodeComment comment);
    parameters:
    - id: comment
      type: System.CodeDom.CodeComment
      description: "A <xref href=&quot;System.CodeDom.CodeComment&quot;> </xref>コメントを示すです。"
  overload: System.CodeDom.CodeCommentStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.CodeDom.CodeCommentStatement
  langs:
  - csharp
  name: CodeCommentStatement(String)
  nameWithType: CodeCommentStatement.CodeCommentStatement(String)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeCommentStatement&quot;> </xref>クラス内容として、指定したテキストを使用します。"
  syntax:
    content: public CodeCommentStatement (string text);
    parameters:
    - id: text
      type: System.String
      description: "コメントの内容です。"
  overload: System.CodeDom.CodeCommentStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.CodeDom.CodeCommentStatement
  langs:
  - csharp
  name: CodeCommentStatement(String,Boolean)
  nameWithType: CodeCommentStatement.CodeCommentStatement(String,Boolean)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.CodeDom.CodeCommentStatement&quot;> </xref>クラスの指定されたテキストおよびドキュメントのコメントのフラグを使用します。"
  remarks: "場合、`docComment`パラメーターは`true`、<xref:System.CodeDom.CodeCommentStatement>ドキュメント コメントは、3 つの区切り記号の文字を使用して、コメントが構造化します</xref:System.CodeDom.CodeCommentStatement>。 たとえば、C# の場合、コメントは&quot;`///`&quot;、Visual Basic では&quot;`&quot;&quot;&quot;`&quot;です。 ドキュメント コメントを使用して、型またはメンバーの集計で識別されるなどの XML コメント フィールドを識別、`<summary>`要素。"
  example:
  - "The following code example demonstrates the use of the CodeCommentStatement constructor to create a comment statement to be used as an XML comment field. This example is part of a larger example that follows.  \n  \n [!code-cs[CodeDomHelloWorldSample#3](~/add/codesnippet/csharp/m-system.codedom.codecom_1.cs)]\n [!code-vb[CodeDomHelloWorldSample#3](~/add/codesnippet/visualbasic/m-system.codedom.codecom_1.vb)]  \n  \n The following code example demonstrates the creation of a simple \"Hello World\" console application and the generation of an XML documentation file for the compiled application.  \n  \n [!code-cs[CodeDomHelloWorldSample#1](~/add/codesnippet/csharp/m-system.codedom.codecom_2.cs)]\n [!code-vb[CodeDomHelloWorldSample#1](~/add/codesnippet/visualbasic/m-system.codedom.codecom_2.vb)]"
  syntax:
    content: public CodeCommentStatement (string text, bool docComment);
    parameters:
    - id: text
      type: System.String
      description: "コメントの内容です。"
    - id: docComment
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、コメント、ドキュメントのコメントです。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.CodeDom.CodeCommentStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeCommentStatement.Comment
  id: Comment
  parent: System.CodeDom.CodeCommentStatement
  langs:
  - csharp
  name: Comment
  nameWithType: CodeCommentStatement.Comment
  fullName: System.CodeDom.CodeCommentStatement.Comment
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "取得またはコメントの内容を設定します。"
  syntax:
    content: public System.CodeDom.CodeComment Comment { get; set; }
    return:
      type: System.CodeDom.CodeComment
      description: "A <xref href=&quot;System.CodeDom.CodeComment&quot;> </xref>コメントを示すです。"
  overload: System.CodeDom.CodeCommentStatement.Comment*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeCommentStatement.#ctor
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: CodeCommentStatement()
  nameWithType: CodeCommentStatement.CodeCommentStatement()
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement()
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.CodeDom.CodeComment)
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: CodeCommentStatement(CodeComment)
  nameWithType: CodeCommentStatement.CodeCommentStatement(CodeComment)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(CodeComment)
- uid: System.CodeDom.CodeComment
  parent: System.CodeDom
  isExternal: false
  name: CodeComment
  nameWithType: CodeComment
  fullName: System.CodeDom.CodeComment
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String)
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: CodeCommentStatement(String)
  nameWithType: CodeCommentStatement.CodeCommentStatement(String)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeCommentStatement.#ctor(System.String,System.Boolean)
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: CodeCommentStatement(String,Boolean)
  nameWithType: CodeCommentStatement.CodeCommentStatement(String,Boolean)
  fullName: System.CodeDom.CodeCommentStatement.CodeCommentStatement(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.CodeCommentStatement.Comment
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: Comment
  nameWithType: CodeCommentStatement.Comment
  fullName: System.CodeDom.CodeCommentStatement.Comment
- uid: System.CodeDom.CodeCommentStatement.#ctor*
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: CodeCommentStatement
  nameWithType: CodeCommentStatement.CodeCommentStatement
- uid: System.CodeDom.CodeCommentStatement.Comment*
  parent: System.CodeDom.CodeCommentStatement
  isExternal: false
  name: Comment
  nameWithType: CodeCommentStatement.Comment
