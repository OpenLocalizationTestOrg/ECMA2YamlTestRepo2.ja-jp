### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  id: SessionSecurityTokenCacheKey
  children:
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  - System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  type: Class
  summary: "内のエントリのキーを表す、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCache&quot;></xref>です。"
  remarks: "キャッシュする場合、<xref:System.IdentityModel.Tokens.SessionSecurityToken>ために必要な&2; つのインデックスが存在します</xref:System.IdentityModel.Tokens.SessionSecurityToken>。 によって表されるコンテキスト ID を&1; つは、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName>プロパティはすべてのセッション トークン全体で一意です</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName>。 によって表されるキーの生成、もう&1; つは、<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName>プロパティで、セッションのトークン内で一意です</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName>。 セッション トークンが発行されるときは、のみのコンテキスト ID を持つ セッション トークンを更新すると、キーの生成が追加されます。 更新後、更新されたセッション トークンはコンテキスト ID とキーの生成を使用して一意に識別します。       SessionSecurityTokenCacheKey の種類のオブジェクトは、セッション トークンのキャッシュへのインデックスとして使用されます。 インデックスが有効なが常に<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A>、指定されたプロパティが、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティがあります`null`トークンが更新されているかどうかに応じて、</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId%2A> 。 省略可能な<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>トークンのスコープをエンドポイントを提供します</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId%2A>。"
  syntax:
    content: public class SessionSecurityTokenCacheKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  id: '#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)'
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>クラスです。"
  syntax:
    content: public SessionSecurityTokenCacheKey (string endpointId, System.Xml.UniqueId contextId, System.Xml.UniqueId keyGeneration);
    parameters:
    - id: endpointId
      type: System.String
      description: "キャッシュ エントリのスコープをエンドポイント ID。 これは、値にする必要があります、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A?displayProperty=fullName&gt;キャッシュされたトークンのプロパティです。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "キャッシュ エントリのコンテキスト ID です。 これは、値にする必要があります、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A?displayProperty=fullName&gt;キャッシュされたトークンのプロパティです。"
    - id: keyGeneration
      type: System.Xml.UniqueId
      description: "キャッシュ エントリのキーの生成。 これは、値にする必要があります、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A?displayProperty=fullName&gt;キャッシュされたトークンのプロパティです。 この値は、トークンの更新時に使用します。 なります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>新しいトークンをキャッシュする場合。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キャッシュ キーのコンテキスト ID を取得します。"
  remarks: "これに対応して、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>キャッシュされたトークンのプロパティ</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>。"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "キャッシュ キーのコンテキスト ID です。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このキャッシュ エントリのスコープをエンドポイント ID を取得します。"
  remarks: "これに対応して、<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>キャッシュされたトークンのプロパティ</xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>。"
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "このキャッシュ エントリのスコープをエンドポイント ID。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "指定したオブジェクトが現在のキャッシュ キーと同じかどうかを判断します。"
  remarks: "場合、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>は`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは、比較では使用されません</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "現在のキャッシュ キーと比較するオブジェクト。 割り当て可能にする必要があります<xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定したオブジェクトが、現在のキャッシュ キーと同じ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  id: GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "現在のキャッシュ キーのハッシュ コードを返します。"
  remarks: "場合、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>は`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは、ハッシュ コードを生成するのには使用されません</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のキャッシュ キーのハッシュ コード。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  id: IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得またはインデックスの比較を行うときに、キーの生成を無視することができるかどうか示す値を設定します。"
  remarks: 'このプロパティに影響する方法、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは、次のメソッドと演算子によって処理: <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A>、 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A>、 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A>、 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A>、 <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A> 。'
  syntax:
    content: public bool IgnoreKeyGeneration { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーの生成を無視するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "キャッシュ キーのキーの生成を取得します。"
  remarks: "これに対応して、<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>キャッシュされたトークンのプロパティ</xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>。"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "キャッシュ キーのキーの生成"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "等値演算子を実装、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>クラスです。"
  remarks: "場合、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>は`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは、比較では使用されません</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>。"
  syntax:
    content: public static bool op_Equality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "比較する最初のキャッシュ キー。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "比較する&2; 番目のキャッシュ キー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャッシュ キーが等しい場合はそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  id: op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  type: Operator
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "等値演算子を実装、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityTokenCacheKey&quot;> </xref>クラスです。"
  remarks: "場合、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>は`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは、比較では使用されません</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>。"
  syntax:
    content: public static bool op_Inequality (System.IdentityModel.Tokens.SessionSecurityTokenCacheKey first, System.IdentityModel.Tokens.SessionSecurityTokenCacheKey second);
    parameters:
    - id: first
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "比較する最初のキャッシュ キー。"
    - id: second
      type: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
      description: "比較する&2; 番目のキャッシュ キー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キャッシュ キーが等しくない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  langs:
  - csharp
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "オーバーライド<xref:System.Object.ToString*>一意識別子を提供します</xref:System.Object.ToString*>。"
  remarks: "場合、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>は`true`、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A>プロパティは使用されません</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "文字列形式のキーです。"
  overload: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor(System.String,System.Xml.UniqueId,System.Xml.UniqueId)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey(String,UniqueId,UniqueId)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(System.Object)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals(Object)
  nameWithType: SessionSecurityTokenCacheKey.Equals(Object)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode()
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(System.IdentityModel.Tokens.SessionSecurityTokenCacheKey,System.IdentityModel.Tokens.SessionSecurityTokenCacheKey)
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality(SessionSecurityTokenCacheKey,SessionSecurityTokenCacheKey)
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString()
  nameWithType: SessionSecurityTokenCacheKey.ToString()
  fullName: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString()
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: SessionSecurityTokenCacheKey
  nameWithType: SessionSecurityTokenCacheKey.SessionSecurityTokenCacheKey
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityTokenCacheKey.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityTokenCacheKey.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.Equals*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: Equals
  nameWithType: SessionSecurityTokenCacheKey.Equals
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.GetHashCode*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: GetHashCode
  nameWithType: SessionSecurityTokenCacheKey.GetHashCode
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.IgnoreKeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: IgnoreKeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.IgnoreKeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityTokenCacheKey.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Equality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Equality
  nameWithType: SessionSecurityTokenCacheKey.op_Equality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.op_Inequality*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: op_Inequality
  nameWithType: SessionSecurityTokenCacheKey.op_Inequality
- uid: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey.ToString*
  parent: System.IdentityModel.Tokens.SessionSecurityTokenCacheKey
  isExternal: false
  name: ToString
  nameWithType: SessionSecurityTokenCacheKey.ToString
