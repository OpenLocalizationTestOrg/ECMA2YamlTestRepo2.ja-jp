### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  id: SoapDocumentServiceAttribute
  children:
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse)
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle
  - System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use
  langs:
  - csharp
  name: SoapDocumentServiceAttribute
  nameWithType: SoapDocumentServiceAttribute
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  type: Class
  summary: "XML Web サービスへの省略可能な SoapDocumentServiceAttribute の適用 XML Web サービス内で XML Web サービス メソッドからには、SOAP 要求と応答の送受信の既定の書式を設定します。"
  remarks: "The SoapDocumentServiceAttribute allows you to set the default formatting styles for XML Web service methods within an XML Web service. If an individual XML Web service method must change these defaults, apply a <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> to that XML Web service method.  \n  \n Web Services Description Language (WSDL) defines two styles for how an XML Web service method, which it calls an operation, can be formatted in a SOAP request or a SOAP response: `RPC` and `Document`. Exactly how the individual message parts is determined by the <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use%2A> and <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle%2A> properties. The <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use%2A> property determines whether parameters are formatted `Encoded` or `Literal`. The <xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle%2A> determines whether the parameters are encapsulated within a single message part beneath the `Body` element, or whether each parameter is an individual message part.  \n  \n To set the default method level formatting to `RPC`, apply a <xref:System.Web.Services.Protocols.SoapRpcServiceAttribute> to the class implementing the XML Web service.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952).  \n  \n This attribute can be applied to a class implementing an XML Web service."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class SoapDocumentServiceAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: SoapDocumentServiceAttribute()
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.SoapDocumentServiceAttribute&quot;> </xref>クラスが既定値にすべてのプロパティを設定します。"
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public SoapDocumentServiceAttribute ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse)
  id: '#ctor(System.Web.Services.Description.SoapBindingUse)'
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: SoapDocumentServiceAttribute(SoapBindingUse)
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse)
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.SoapDocumentServiceAttribute&quot;> </xref>クラスのパラメーターの書式を設定します。"
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public SoapDocumentServiceAttribute (System.Web.Services.Description.SoapBindingUse use);
    parameters:
    - id: use
      type: System.Web.Services.Description.SoapBindingUse
      description: "パラメーターの書式設定、XML Web サービスです。 セット、<xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*>プロパティ</xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*>。"
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)
  id: '#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)'
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Services.Protocols.SoapDocumentServiceAttribute&quot;> </xref>パラメーターの書式を設定し、単一の XML 要素内のパラメーターをカプセル化するかどうかを設定するクラス、 <xref uid=&quot;langword_csharp_Body&quot; name=&quot;Body&quot; href=&quot;&quot;> </xref> SOAP メッセージ内の要素。"
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public SoapDocumentServiceAttribute (System.Web.Services.Description.SoapBindingUse use, System.Web.Services.Protocols.SoapParameterStyle paramStyle);
    parameters:
    - id: use
      type: System.Web.Services.Description.SoapBindingUse
      description: "パラメーターの書式スタイル。 セット、<xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*>プロパティ</xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*>。"
    - id: paramStyle
      type: System.Web.Services.Protocols.SoapParameterStyle
      description: "単一の XML 要素内のパラメーターをカプセル化するかどうかを設定、 <xref uid=&quot;langword_csharp_Body&quot; name=&quot;Body&quot; href=&quot;&quot;> </xref> XML Web サービス内で XML Web サービス メソッドとの間に送信される SOAP メッセージ内の要素。 セット、<xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle*>プロパティ</xref:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle*>。"
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle
  id: ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: ParameterStyle
  nameWithType: SoapDocumentServiceAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または設定では、1 つの要素の次のパラメーターをカプセル化かどうかを制御する既定の設定、 <xref uid=&quot;langword_csharp_&lt;Body&gt;&quot; name=&quot;&lt;Body&gt;&quot; href=&quot;&quot;> </xref> XML Web サービスの XML Web サービス メソッドの SOAP メッセージの XML 部分の要素。"
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public System.Web.Services.Protocols.SoapParameterStyle ParameterStyle { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapParameterStyle
      description: "既定値<xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;> </xref> SOAP 要求と SOAP 応答を XML Web サービス内で XML Web サービス メソッドからです。 設定されていない、既定値は<xref href=&quot;System.Web.Services.Protocols.SoapParameterStyle&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle
  id: RoutingStyle
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: RoutingStyle
  nameWithType: SoapDocumentServiceAttribute.RoutingStyle
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または XML Web サービスに SOAP メッセージをルーティングする方法を設定します。"
  remarks: ''
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public System.Web.Services.Protocols.SoapServiceRoutingStyle RoutingStyle { get; set; }
    return:
      type: System.Web.Services.Protocols.SoapServiceRoutingStyle
      description: "A <xref href=&quot;System.Web.Services.Protocols.SoapServiceRoutingStyle&quot;> </xref>を表す XML Web サービスに SOAP メッセージがルーティングされる方法です。 既定値は<xref href=&quot;System.Web.Services.Protocols.SoapServiceRoutingStyle&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use
  id: Use
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  langs:
  - csharp
  name: Use
  nameWithType: SoapDocumentServiceAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "取得または既定のパラメーターが XML Web サービスの書式を設定します。"
  remarks: "The Web Services Description Language (WSDL) defines two formatting styles for parameters sent to and from XML Web services: <xref:System.Web.Services.Description.SoapBindingUse> and <xref:System.Web.Services.Description.SoapBindingUse>. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting the parameters using the SOAP encoding outlined in the SOAP specification in section 5. <xref:System.Web.Services.Description.SoapBindingUse> refers to formatting the parameters using a predefined XSD schema for each parameter.  \n  \n For more details, see [&#91;\\<topic://cpconCustomizingSOAPInASPNETWebServicesWebServiceClients>&#93;](http://msdn.microsoft.com/en-us/1d777288-c0d9-4e6a-b638-f010da031952)."
  example:
  - '[!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]'
  syntax:
    content: public System.Web.Services.Description.SoapBindingUse Use { get; set; }
    return:
      type: System.Web.Services.Description.SoapBindingUse
      description: "既定値<xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;> </xref> XML Web サービスです。 設定されていない、既定値は<xref href=&quot;System.Web.Services.Description.SoapBindingUse&quot;></xref>です。"
  overload: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: SoapDocumentServiceAttribute()
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute()
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute()
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse)
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: SoapDocumentServiceAttribute(SoapBindingUse)
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse)
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse)
- uid: System.Web.Services.Description.SoapBindingUse
  parent: System.Web.Services.Description
  isExternal: false
  name: SoapBindingUse
  nameWithType: SoapBindingUse
  fullName: System.Web.Services.Description.SoapBindingUse
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.SoapDocumentServiceAttribute(SoapBindingUse,SoapParameterStyle)
- uid: System.Web.Services.Protocols.SoapParameterStyle
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapParameterStyle
  nameWithType: SoapParameterStyle
  fullName: System.Web.Services.Protocols.SoapParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentServiceAttribute.ParameterStyle
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: RoutingStyle
  nameWithType: SoapDocumentServiceAttribute.RoutingStyle
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle
- uid: System.Web.Services.Protocols.SoapServiceRoutingStyle
  parent: System.Web.Services.Protocols
  isExternal: false
  name: SoapServiceRoutingStyle
  nameWithType: SoapServiceRoutingStyle
  fullName: System.Web.Services.Protocols.SoapServiceRoutingStyle
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentServiceAttribute.Use
  fullName: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor*
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: SoapDocumentServiceAttribute
  nameWithType: SoapDocumentServiceAttribute.SoapDocumentServiceAttribute
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle*
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: ParameterStyle
  nameWithType: SoapDocumentServiceAttribute.ParameterStyle
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle*
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: RoutingStyle
  nameWithType: SoapDocumentServiceAttribute.RoutingStyle
- uid: System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use*
  parent: System.Web.Services.Protocols.SoapDocumentServiceAttribute
  isExternal: false
  name: Use
  nameWithType: SoapDocumentServiceAttribute.Use
