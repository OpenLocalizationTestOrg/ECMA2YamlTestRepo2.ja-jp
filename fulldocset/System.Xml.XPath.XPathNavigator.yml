### YamlMime:ManagedReference
items:
- uid: System.Xml.XPath.XPathNavigator
  id: XPathNavigator
  children:
  - System.Xml.XPath.XPathNavigator.#ctor
  - System.Xml.XPath.XPathNavigator.AppendChild
  - System.Xml.XPath.XPathNavigator.AppendChild(System.String)
  - System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)
  - System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)
  - System.Xml.XPath.XPathNavigator.BaseURI
  - System.Xml.XPath.XPathNavigator.CanEdit
  - System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)
  - System.Xml.XPath.XPathNavigator.Clone
  - System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.Compile(System.String)
  - System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)
  - System.Xml.XPath.XPathNavigator.CreateAttributes
  - System.Xml.XPath.XPathNavigator.CreateNavigator
  - System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.DeleteSelf
  - System.Xml.XPath.XPathNavigator.Evaluate(System.String)
  - System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)
  - System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)
  - System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.GetNamespace(System.String)
  - System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  - System.Xml.XPath.XPathNavigator.HasAttributes
  - System.Xml.XPath.XPathNavigator.HasChildren
  - System.Xml.XPath.XPathNavigator.InnerXml
  - System.Xml.XPath.XPathNavigator.InsertAfter
  - System.Xml.XPath.XPathNavigator.InsertAfter(System.String)
  - System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)
  - System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.InsertBefore
  - System.Xml.XPath.XPathNavigator.InsertBefore(System.String)
  - System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)
  - System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)
  - System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)
  - System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.IsEmptyElement
  - System.Xml.XPath.XPathNavigator.IsNode
  - System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.LocalName
  - System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)
  - System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)
  - System.Xml.XPath.XPathNavigator.Matches(System.String)
  - System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)
  - System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)
  - System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.MoveToFirst
  - System.Xml.XPath.XPathNavigator.MoveToFirstAttribute
  - System.Xml.XPath.XPathNavigator.MoveToFirstChild
  - System.Xml.XPath.XPathNavigator.MoveToFirstNamespace
  - System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)
  - System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)
  - System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.MoveToId(System.String)
  - System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)
  - System.Xml.XPath.XPathNavigator.MoveToNext
  - System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)
  - System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.MoveToNextAttribute
  - System.Xml.XPath.XPathNavigator.MoveToNextNamespace
  - System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)
  - System.Xml.XPath.XPathNavigator.MoveToParent
  - System.Xml.XPath.XPathNavigator.MoveToPrevious
  - System.Xml.XPath.XPathNavigator.MoveToRoot
  - System.Xml.XPath.XPathNavigator.Name
  - System.Xml.XPath.XPathNavigator.NamespaceURI
  - System.Xml.XPath.XPathNavigator.NameTable
  - System.Xml.XPath.XPathNavigator.NavigatorComparer
  - System.Xml.XPath.XPathNavigator.NodeType
  - System.Xml.XPath.XPathNavigator.OuterXml
  - System.Xml.XPath.XPathNavigator.Prefix
  - System.Xml.XPath.XPathNavigator.PrependChild
  - System.Xml.XPath.XPathNavigator.PrependChild(System.String)
  - System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)
  - System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)
  - System.Xml.XPath.XPathNavigator.ReadSubtree
  - System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)
  - System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)
  - System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)
  - System.Xml.XPath.XPathNavigator.SchemaInfo
  - System.Xml.XPath.XPathNavigator.Select(System.String)
  - System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)
  - System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)
  - System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)
  - System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)
  - System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)
  - System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)
  - System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)
  - System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)
  - System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)
  - System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)
  - System.Xml.XPath.XPathNavigator.SetValue(System.String)
  - System.Xml.XPath.XPathNavigator.System#ICloneable#Clone
  - System.Xml.XPath.XPathNavigator.ToString
  - System.Xml.XPath.XPathNavigator.TypedValue
  - System.Xml.XPath.XPathNavigator.UnderlyingObject
  - System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.XPath.XPathNavigator.ValueAsBoolean
  - System.Xml.XPath.XPathNavigator.ValueAsDateTime
  - System.Xml.XPath.XPathNavigator.ValueAsDouble
  - System.Xml.XPath.XPathNavigator.ValueAsInt
  - System.Xml.XPath.XPathNavigator.ValueAsLong
  - System.Xml.XPath.XPathNavigator.ValueType
  - System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)
  - System.Xml.XPath.XPathNavigator.XmlLang
  - System.Xml.XPath.XPathNavigator.XmlType
  langs:
  - csharp
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
  type: Class
  summary: "移動して、XML データの編集のカーソル モデルを提供します。"
  remarks: "XPathNavigator クラス、<xref:System.Xml.XPath?displayProperty=fullName>名前空間は、ナビゲーションし、XQuery 1.0 と XPath 2.0 データ モデルのインスタンスとして XML の情報項目を編集するためのカーソル モデルを定義する抽象クラス</xref:System.Xml.XPath?displayProperty=fullName>。       XPathNavigator オブジェクトが実装するクラスから作成された、<xref:System.Xml.XPath.IXPathNavigable>インターフェイスなど、<xref:System.Xml.XPath.XPathDocument>と<xref:System.Xml.XmlDocument>クラス</xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XPath.IXPathNavigable>。 XPathNavigator オブジェクトによって作成された<xref:System.Xml.XPath.XPathDocument>オブジェクトは読み取り専用で作成される XPathNavigator オブジェクトの中に<xref:System.Xml.XmlDocument>オブジェクトを編集することができます</xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathDocument>。 <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>XPathNavigator クラスのプロパティ</xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>を使用して、XPathNavigator オブジェクトの読み取り専用か、または編集可能な状態が決定されます。       XPath データ モデルを使用して XML データの処理の詳細については、次を参照してください。、 [XPath データ モデルを使用して XML データの処理](~/add/includes/ajax-current-ext-md.md)トピックです。      > [!IMPORTANT] > など XPathNavigator クラスを使用した結果として発生した例外、<xref:System.Xml.XPath.XPathException>クラス、信頼されていないシナリオで公開するべきではない機密情報を含めることがあります</xref:System.Xml.XPath.XPathException>。 例外は、信頼されていないシナリオでは、この機密情報は公開されていないように正しく処理する必要があります。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{debuggerDisplayProxy}")]

      public abstract class XPathNavigator : System.Xml.XPath.XPathItem, ICloneable, System.Xml.IXmlNamespaceResolver, System.Xml.XPath.IXPathNavigable
  inheritance:
  - System.Object
  - System.Xml.XPath.XPathItem
  implements:
  - System.ICloneable
  - System.Xml.IXmlNamespaceResolver
  - System.Xml.XPath.IXPathNavigable
  inheritedMembers:
  - System.Xml.XPath.XPathItem.Value
  - System.Xml.XPath.XPathItem.ValueAs(System.Type)
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.#ctor
  id: '#ctor'
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: XPathNavigator()
  nameWithType: XPathNavigator.XPathNavigator()
  fullName: System.Xml.XPath.XPathNavigator.XPathNavigator()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、この型の状態を初期化するために、派生クラスのコンス トラクターによって呼び出されます。"
  syntax:
    content: protected XPathNavigator ();
    parameters: []
  overload: System.Xml.XPath.XPathNavigator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.AppendChild
  id: AppendChild
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: AppendChild()
  nameWithType: XPathNavigator.AppendChild()
  fullName: System.Xml.XPath.XPathNavigator.AppendChild()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、<xref:System.Xml.XmlWriter>オブジェクトの現在のノードのノードの子のリストの末尾に&1; つまたは複数の新しい子ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  remarks: "現在のノードの子ノードのリストの末尾に新しいノードを追加する子ノードを追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初に追加されたノードは&4; 番目の子ノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       AppendChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      のまで新しい子ノードが挿入されていない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。      -AppendChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>ルート ノードでも要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -AppendChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません       複数のノードは、ライターに記述できます。 すべてのノードは、現在のノードの子ノードのリストの末尾に付加されます。"
  example:
  - "In the following example, a new `pages` child element is appended to the list of child elements of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlWriter> object returned from the AppendChild method.  \n  \n [!code-cs[XPathNavigatorMethods#1](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_11_1.cs)]\n [!code-vb[XPathNavigatorMethods#1](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_11_1.vb)]\n [!code-cpp[XPathNavigatorMethods#1](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_11_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter AppendChild ();
    parameters: []
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトの現在のノードのノードの子のリストの末尾に新しい子ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.AppendChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているが、ルート ノードでも要素ノードです。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.String)
  id: AppendChild(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: AppendChild(String)
  nameWithType: XPathNavigator.AppendChild(String)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "子の一覧の最後に指定された XML データ文字列を使用して現在のノードのノードに対応する、新しい子ノードを作成します。"
  remarks: "現在のノードの子ノードのリストの末尾に新しいノードを追加する子ノードを追加します。 たとえば、要素の次の&3; つの子ノードが存在する場合は、4 番目の子ノードが追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       新しい要素ノードを作成するには、XML 文字列パラメーターのすべての XML 構文が含まれます。 新しい文字列`book`ノードが`AppendChild(&quot;<book/>&quot;)`です。 テキスト&quot;book&quot;ノードを追加する現在のノードのテキストの文字列が`AppendChild(&quot;book&quot;)`です。 XML 文字列に複数のノードが含まれている場合は、すべてのノードが追加されます。       AppendChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -AppendChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>ルート ノードでも要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -AppendChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is appended to the list of child elements of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#2](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_29_1.cs)]\n [!code-vb[XPathNavigatorMethods#2](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_29_1.vb)]\n [!code-cpp[XPathNavigatorMethods#2](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_29_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void AppendChild (string newChild);
    parameters:
    - id: newChild
      type: System.String
      description: "新しい子ノードの XML データ文字列。"
  overload: System.Xml.XPath.XPathNavigator.AppendChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML データ文字列パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているが、ルート ノードでも要素ノードです。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML データの文字列パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)
  id: AppendChild(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: AppendChild(XmlReader)
  nameWithType: XPathNavigator.AppendChild(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "XML コンテンツを使用して現在のノードのノードの子リストの末尾に新しい子ノードを作成、<xref:System.Xml.XmlReader>指定されたオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "現在のノードの子ノードのリストの末尾に新しいノードを追加する子ノードを追加します。 たとえば、要素の次の&3; つの子ノードが存在する場合は、4 番目の子ノードが追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       AppendChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XmlReader>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XmlReader>。      -AppendChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>ルート ノードでも要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -AppendChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is appended to the list of child elements of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlReader> object specified. The `http://www.contoso.com/books` namespace is specified so that the new child element is appended using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#3](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_25_1.cs)]\n [!code-vb[XPathNavigatorMethods#3](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_25_1.vb)]\n [!code-cpp[XPathNavigatorMethods#3](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_25_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void AppendChild (System.Xml.XmlReader newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>新しい子ノード用の XML データに配置されているオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.AppendChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.XmlReader>オブジェクトがエラー状態または閉じています</xref:System.Xml.XmlReader>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.XmlReader> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているが、ルート ノードでも要素ノードです。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、<xref:System.Xml.XmlReader>オブジェクト パラメーターは整形式ではありません</xref:System.Xml.XmlReader>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)
  id: AppendChild(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: AppendChild(XPathNavigator)
  nameWithType: XPathNavigator.AppendChild(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "ノード内のノードを使用して現在のノードの子のリストの末尾に新しい子ノードを作成、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定します。"
  remarks: "現在のノードの子ノードのリストの末尾に新しいノードを追加する子ノードを追加します。 たとえば、要素の次の&3; つの子ノードが存在する場合は、4 番目の子ノードが追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       AppendChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XPath.XPathNavigator>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XPath.XPathNavigator>。      -AppendChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>ルート ノードでも要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -AppendChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is appended to the list of child elements of the first `book` element in the `contosoBooks.xml` file using the node contained in the <xref:System.Xml.XPath.XPathNavigator> specified. The `http://www.contoso.com/books` namespace is specified so that the new child element is appended using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#4](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_13_1.cs)]\n [!code-vb[XPathNavigatorMethods#4](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_13_1.vb)]\n [!code-cpp[XPathNavigatorMethods#4](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_13_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void AppendChild (System.Xml.XPath.XPathNavigator newChild);
    parameters:
    - id: newChild
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい子ノードとして追加するノードに配置されているオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.AppendChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているが、ルート ノードでも要素ノードです。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)
  id: AppendChildElement(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: AppendChildElement(String,String,String,String)
  nameWithType: XPathNavigator.AppendChildElement(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.AppendChildElement(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "名前空間プレフィックス、ローカル名および名前空間に指定された値で指定された URI を使用して現在のノードのノードの子リストの末尾に新しい子要素ノードを作成します。"
  remarks: "現在のノードの子ノードのリストの末尾に新しいノードを追加する子ノードを追加します。 たとえば、要素ノードの&3; つの子ノードが存在する場合は、4 番目の子ノードが追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       Namespace プレフィックスと URI の値を使用して取得できます、<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>メソッドまたは<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A></xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>。 次の構文がスコープ内の名前空間を使用して、子要素を追加するなど、 `xmlns:bk=http://www.contoso.com/books`:```   navigator.AppendChildElement(navigator.Prefix, &quot;pages&quot;, LookupNamespaceURI(navigator.Prefix), String.Empty)   ```こうと、新しい子`<bk:pages/>`要素。       AppendChildElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、指定された名前空間プレフィックスは`null`または<xref:System.String.Empty?displayProperty=fullName>、現在の名前空間のスコープ内から新しい要素の URI 名前空間のプレフィックスを取得し、</xref:System.String.Empty?displayProperty=fullName> 。 URI が現在のスコープで指定された名前空間に割り当てられている名前空間プレフィックスがない、し、名前空間プレフィックスが自動的に生成されます。      -AppendChildElement メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>ルート ノードでも要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -AppendChildElement メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is appended to the list of child elements of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#5](~/add/codesnippet/csharp/4b2e9d51-d3ec-4315-b1b0-_1.cs)]\n [!code-vb[XPathNavigatorMethods#5](~/add/codesnippet/visualbasic/4b2e9d51-d3ec-4315-b1b0-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#5](~/add/codesnippet/cpp/4b2e9d51-d3ec-4315-b1b0-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void AppendChildElement (string prefix, string localName, string namespaceURI, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "新しい子要素ノード (存在する場合) の名前空間プレフィックス。"
    - id: localName
      type: System.String
      description: "(存在する場合)、新しい子要素ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI (存在する場合)、新しい子要素ノードです。 <xref:System.String>および<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>は同等です。</xref:System.String>"
    - id: value
      type: System.String
      description: "新しい子要素ノードの値。 場合<xref:System.String>または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を渡すと、空の要素を作成します</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.AppendChildElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているが、ルート ノードでも要素ノードです。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.BaseURI
  id: BaseURI
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: BaseURI
  nameWithType: XPathNavigator.BaseURI
  fullName: System.Xml.XPath.XPathNavigator.BaseURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、現在のノードのベース URI を取得します。"
  remarks: "ネットワークに接続された XML ドキュメントでは、さまざまな W3C の標準的な信頼メカニズムを使用して集計データのチャンクで構成され、したがって各所に由来するノードが含まれます。 DTD エンティティは、この集計されたデータの例が Dtd に制限はありません。 BaseURI プロパティは、これらのノードが由来を示します。       たとえば、http://server/mydata.xml、XML データを読み込む場合は BaseURI プロパティは http://server/mydata.xml を返します。      > [!NOTE] > を使用して作成されたノード、<xref:System.Xml.XPath.XPathNavigator>クラスがある XML ドキュメントとして同じ BaseURI、<xref:System.Xml.XPath.XPathNavigator>から作成されました</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。"
  syntax:
    content: public abstract string BaseURI { get; }
    return:
      type: System.String
      description: "ノードの読み込み元の場所または&lt;xref:System.String?displayProperty=fullName&gt;値が存在しない場合。"
  overload: System.Xml.XPath.XPathNavigator.BaseURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.CanEdit
  id: CanEdit
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: CanEdit
  nameWithType: XPathNavigator.CanEdit
  fullName: System.Xml.XPath.XPathNavigator.CanEdit
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>基になる XML データを編集できます。"
  remarks: "CanEdit プロパティが別の値の&3; つの異なる実装に基づいた、 <xref:System.Xml.XPath.IXPathNavigable>.NET Framework のインターフェイス</xref:System.Xml.XPath.IXPathNavigable>。 値が、CanEdit<xref:System.Xml.XPath.XPathNavigator>個々 の実装によって作成されたオブジェクトは、次の表に表示されます</xref:System.Xml.XPath.XPathNavigator>。      |<xref:System.Xml.XPath.IXPathNavigable>実装 |CanEdit 値 |  |--------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------|  |<xref:System.Xml.XPath.XPathDocument>|`false`|  |<xref:System.Xml.XmlDocument>|`true`|</xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XPath.IXPathNavigable>"
  example:
  - "The following example uses the CanEdit property to display the CanEdit values of the <xref:System.Xml.XPath.XPathDocument> and <xref:System.Xml.XmlDocument> classes.  \n  \n [!code-vb[XPathNavigatorProperties#1](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_8_1.vb)]\n [!code-cpp[XPathNavigatorProperties#1](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_8_1.cpp)]\n [!code-cs[XPathNavigatorProperties#1](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_8_1.cs)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool CanEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>基になる XML データを編集できます。 それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.CanEdit*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)
  id: CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: CheckValidity(XmlSchemaSet,ValidationEventHandler)
  nameWithType: XPathNavigator.CheckValidity(XmlSchemaSet,ValidationEventHandler)
  fullName: System.Xml.XPath.XPathNavigator.CheckValidity(XmlSchemaSet,ValidationEventHandler)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "検証が行われます内の XML データ、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>提供される XML スキーマ定義言語 (XSD) スキーマに準拠しています。"
  remarks: "-CheckValidity メソッドでは、XML データが<xref:System.Xml.XPath.XPathNavigator>グローバル型または<xref:System.Xml.Schema.XmlSchemaSet>。</xref:System.Xml.Schema.XmlSchemaSet>で提供されるスキーマ内の宣言に準拠している</xref:System.Xml.XPath.XPathNavigator>に含まれていることを確認します。      -CheckValidity メソッドでは、情報セットの拡大は実行されません。 つまり、スキーマの既定値は適用されません、テキスト値は、アトミック値に変換されません情報項目に関連付けられている新しいタイプの情報はありません。      スキーマ`xsi:schemaLocation`または`xsi:noNamespaceSchemaLocation`の XML データのヒントが無視されます。      場合、<xref:System.Xml.XPath.XPathNavigator>が配置されているドキュメント ノードで、検証プロセスでは、一意性と参照の制約のチェック (`xs:ID`、 `xs:IDREF`、 `xs:key`、 `xs:keyref`、および`xs:unique`).</xref:System.Xml.XPath.XPathNavigator> それ以外の場合、これらのチェックを省略しています。      場合、<xref:System.Xml.Schema.XmlSchemaSet>パラメーターとして渡された`null`と<xref:System.Xml.XPath.XPathNavigator>要素ノードで、によって公開されている種類の情報が配置されている、<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>プロパティの<xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>プロパティを使用して、ノードの有効性を確認します</xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A></xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A></xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.Schema.XmlSchemaSet>。 場合、<xref:System.Xml.Schema.XmlSchemaSet>パラメーターとして渡された`null`と<xref:System.Xml.XPath.XPathNavigator>ルート ノードに配置されて、<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>ドキュメントの要素 (ルート ノードの子要素) のプロパティを使用します</xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A></xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.Schema.XmlSchemaSet>。 どちらの場合も場合、 <xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>、要素のプロパティの<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>プロパティは`null`と<xref:System.Xml.Schema.XmlSchemaSet>パラメーターとして渡された`null`、<xref:System.InvalidOperationException>を使用して検証を実行する型情報がないためにスローされます</xref:System.InvalidOperationException></xref:System.Xml.Schema.XmlSchemaSet></xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A></xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>。"
  syntax:
    content: public virtual bool CheckValidity (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.ValidationEventHandler validationEventHandler);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に含まれる XML データの検証に使用されるスキーマを含む、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
    - id: validationEventHandler
      type: System.Xml.Schema.ValidationEventHandler
      description: "<xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref>スキーマ検証の警告とエラーに関する情報を受け取る。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スキーマ検証エラーが発生しなかった場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.CheckValidity*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "スキーマ検証エラーが発生しました、および no <xref href=&quot;System.Xml.Schema.ValidationEventHandler&quot;> </xref>検証エラーの処理が指定されました。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>がノードに配置されている要素、属性、またはルート ノードまたは検証を実行する型情報がありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "CheckValidity メソッドで呼び出されました、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>パラメーターと、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>された XML データのルート ノードに配置されていません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Clone
  id: Clone
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Clone()
  nameWithType: XPathNavigator.Clone()
  fullName: System.Xml.XPath.XPathNavigator.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、新たに作成<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>これと同じノードに配置されている<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "Clone メソッドに<xref:System.Xml.XPath.XPathNodeIterator>。</xref:System.Xml.XPath.XPathNodeIterator>と組み合わせて便利です。 <xref:System.Xml.XPath.XPathNodeIterator>選択したノード セットを反復処理に使用され<xref:System.Xml.XPath.XPathNodeIterator.Current%2A><xref:System.Xml.XPath.XPathNavigator><xref:System.Xml.XPath.XPathNodeIterator>。</xref:System.Xml.XPath.XPathNodeIterator>のコンテキスト ノードに配置されて</xref:System.Xml.XPath.XPathNavigator>を返すプロパティ</xref:System.Xml.XPath.XPathNodeIterator.Current%2A>が含まれています</xref:System.Xml.XPath.XPathNodeIterator> ただし、<xref:System.Xml.XPath.XPathNavigator>によって返される、<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>ノード セットからを移動するプロパティは使用できません</xref:System.Xml.XPath.XPathNodeIterator.Current%2A></xref:System.Xml.XPath.XPathNavigator>。 返されたを複製する代わりに、<xref:System.Xml.XPath.XPathNavigator>を複製ナビゲーターを使用して、その他の移動を行う</xref:System.Xml.XPath.XPathNavigator>。       複製<xref:System.Xml.XPath.XPathNavigator>元<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>以降の変更の影響を受けない</xref:System.Xml.XPath.XPathNavigator>"
  example:
  - "The following example gets all book titles authored by Herman Melville.  \n  \n [!code-cs[XPathNavigatorMethods#6](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_27_1.cs)]\n [!code-vb[XPathNavigatorMethods#6](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_27_1.vb)]\n [!code-cpp[XPathNavigatorMethods#6](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_27_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract System.Xml.XPath.XPathNavigator Clone ();
    parameters: []
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "新しい<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>これと同じノードに配置されている<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)
  id: ComparePosition(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ComparePosition(XPathNavigator)
  nameWithType: XPathNavigator.ComparePosition(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ComparePosition(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在の位置を比較し<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定します。"
  remarks: "次の表、<xref:System.Xml.XmlNodeOrder>列挙体です</xref:System.Xml.XmlNodeOrder>。      |XmlNodeOrder |説明 |  |------------------|-----------------|  |<xref:System.Xml.XmlNodeOrder>|指定された<xref:System.Xml.XPath.XPathNavigator>の現在のノードの前に、この<xref:System.Xml.XPath.XPathNavigator>の現在のノードです |。  |<xref:System.Xml.XmlNodeOrder>|指定された<xref:System.Xml.XPath.XPathNavigator>の現在のノードの後に、この<xref:System.Xml.XPath.XPathNavigator>の現在のノードです |。  |<xref:System.Xml.XmlNodeOrder>|2 つの<xref:System.Xml.XPath.XPathNavigator>オブジェクトが同じノードに配置されている |。  |<xref:System.Xml.XmlNodeOrder>|ノードの位置がわかりません互いを基準として、ドキュメント順でまたは`null`として指定されて、<xref:System.Xml.XPath.XPathNavigator>パラメーター</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlNodeOrder> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlNodeOrder>  </xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlNodeOrder>  </xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XmlNodeOrder> 。 これは、別のツリーで&2; つのノードが存在する場合に発生する可能性があります |。      ComparePosition メソッドの動作は異なります、 <xref:System.Xml.XPath.XPathNodeType>、<xref:System.Xml.XPath.XPathNavigator>の現在位置にします</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNodeType>。 XML ドキュメント内のノードを比較すると、次の規則が適用されます-<xref:System.Xml.XPath.XPathNodeType>ノード: ソース ドキュメントのドキュメントの順序でこれらのノードが返されます。</xref:System.Xml.XPath.XPathNodeType> 。      -<xref:System.Xml.XPath.XPathNodeType>ノード: これらのノードを選択し、ドキュメントの順序で返される可能性が常にする前に、<xref:System.Xml.XPath.XPathNodeType>親要素のノード</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。      -<xref:System.Xml.XPath.XPathNodeType>ノード: これらのノードがドキュメントの順序で返される可能性があります</xref:System.Xml.XPath.XPathNodeType>。 後に必ず、<xref:System.Xml.XPath.XPathNodeType>ノードと、親ノードの子ノードの前にします</xref:System.Xml.XPath.XPathNodeType>。      > [!NOTE] > の詳細については、XPath データ モデルと各ノードの種類の詳細については、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5 を参照してください。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態      > [!NOTE] > を使用して、<xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A>可能であれば、ComparePosition メソッドではなく、メソッド</xref:System.Xml.XPath.XPathNavigator.IsSamePosition%2A>。"
  syntax:
    content: public virtual System.Xml.XmlNodeOrder ComparePosition (System.Xml.XPath.XPathNavigator nav);
    parameters:
    - id: nav
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>と比較します。"
    return:
      type: System.Xml.XmlNodeOrder
      description: "<xref href=&quot;System.Xml.XmlNodeOrder&quot;> </xref> 、2 つの比較の位置を表す値<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>オブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.ComparePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Compile(System.String)
  id: Compile(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Compile(String)
  nameWithType: XPathNavigator.Compile(String)
  fullName: System.Xml.XPath.XPathNavigator.Compile(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "XPath 式を表す文字列をコンパイルし、返します、 <xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>オブジェクト。"
  remarks: "XPath 式は、次の戻り値の型のいずれかの結果に評価される:-ノード セット: 重複のブール値を持たないノードのコレクションは順序付け:`true`または`false`番号 -: 浮動小数点数の文字列: UCS 文字のシーケンスをノード セットを返す式で使用できます、<xref:System.Xml.XPath.XPathNavigator.Select%2A>と<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.Evaluate%2A></xref:System.Xml.XPath.XPathNavigator.Select%2A>。 ブール値、数値、または文字列を返す式では使用できる、<xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.Evaluate%2A>。 有効な式の規則、<xref:System.Xml.XPath.XPathNavigator.Matches%2A>メソッドは、そのメソッドに固有です</xref:System.Xml.XPath.XPathNavigator.Matches%2A>。"
  syntax:
    content: public virtual System.Xml.XPath.XPathExpression Compile (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "XPath 式を表す文字列。"
    return:
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref> XPath 式を表すオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.Compile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> xpath </code>パラメーターが無効な XPath 式が含まれています。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)
  id: CreateAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: CreateAttribute(String,String,String,String)
  nameWithType: XPathNavigator.CreateAttribute(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.CreateAttribute(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "名前空間プレフィックス、ローカル名および名前空間に指定された値で指定された URI を使用して現在の要素ノードに属性ノードを作成します。"
  remarks: "使用して、Namespace プレフィックスと URI の値を取得できます、<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>または<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A></xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>。 次の構文がスコープ内の名前空間を使用して属性を作成するなど、 `xmlns:bk=&quot;http://www.contoso.com/books&quot;`:```   editor.CreateAttribute(navigator.Prefix, &quot;attributeName&quot;, LookupNamespace(navigator.Prefix), &quot;text&quot;)   ```これが新しい属性を作成`<bk:element attributeName=&quot;text&quot;/>`現在の要素にします。       CreateAttribute メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、指定された名前空間プレフィックスは<xref:System.String.Empty?displayProperty=fullName>または`null`、現在の名前空間のスコープ内から新しい属性の URI 名前空間のプレフィックスを取得します</xref:System.String.Empty?displayProperty=fullName>。 指定した名前空間の現在のスコープで URI に割り当てられている名前空間プレフィックスがない、名前空間プレフィックスが自動的に生成します。 既定の名前空間内の要素に新しい属性を作成する場合など、`contosoBooks.xml`ファイル (`xmlns=&quot;http://www.contoso.com/books&quot;`) を指定する`null`または<xref:System.String.Empty?displayProperty=fullName>名前空間プレフィックスと名前空間 URI のパラメーターです</xref:System.String.Empty?displayProperty=fullName>。 指定する`http://www.contoso.com/books`を自動 CreateAttribute メソッドと、名前空間 URI パラメーターとしては、新しい属性の名前空間プレフィックスを生成します。      -作成される新しい属性が要素の名前空間の宣言と競合する選択した名前空間プレフィックスは、同じスコープで、別の名前空間宣言によって使用されるため、またはプレフィックスが選択されたの要素のと同じですが、別の名前空間 URI にバインドされているため、例外はスロー名前空間ノードの場合。      -CreateAttribute メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `discount` attribute is created on the `price` child element of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#7](~/add/codesnippet/csharp/59adcad2-a883-49a8-bace-_1.cs)]\n [!code-vb[XPathNavigatorMethods#7](~/add/codesnippet/visualbasic/59adcad2-a883-49a8-bace-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#7](~/add/codesnippet/cpp/59adcad2-a883-49a8-bace-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void CreateAttribute (string prefix, string localName, string namespaceURI, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "(存在する場合) は、新しい属性ノードの名前空間プレフィックス。"
    - id: localName
      type: System.String
      description: "新しい属性ノードのローカル名&lt;xref:System.String?displayProperty=fullName&gt;または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI (存在する場合) は、新しい属性ノード。"
    - id: value
      type: System.String
      description: "新しい属性ノードの値。 場合&lt;xref:System.String?displayProperty=fullName&gt;または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を渡すと、空の属性ノードが作成します。"
  overload: System.Xml.XPath.XPathNavigator.CreateAttribute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.CreateAttributes
  id: CreateAttributes
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: CreateAttributes()
  nameWithType: XPathNavigator.CreateAttributes()
  fullName: System.Xml.XPath.XPathNavigator.CreateAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、<xref:System.Xml.XmlWriter>オブジェクトの現在の要素に新しい属性を作成するために使用します</xref:System.Xml.XmlWriter>。"
  remarks: "CreateAttributes メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、<xref:System.Xml.XPath.XPathNavigator>要素によって作成された、新しい属性に配置されて、<xref:System.Xml.XPath.XPathNavigator>メソッドは、現在の要素の属性リストの末尾に配置します</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。      のまで新しい属性が挿入されない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。      場合、指定された名前空間プレフィックスは<xref:System.String.Empty?displayProperty=fullName>または`null`、現在の名前空間のスコープ内から新しい属性の URI 名前空間のプレフィックスを取得します</xref:System.String.Empty?displayProperty=fullName>。 指定した名前空間の現在のスコープで URI に割り当てられている名前空間プレフィックスがない、名前空間プレフィックスが自動的に生成します。 既定の名前空間内の要素に新しい属性を作成する場合など、`contosoBooks.xml`ファイル (`xmlns=&quot;http://www.contoso.com/books&quot;`) を指定する`null`または<xref:System.String.Empty?displayProperty=fullName>名前空間プレフィックスと名前空間 URI のパラメーターです</xref:System.String.Empty?displayProperty=fullName>。 指定する`http://www.contoso.com/books`パラメーターと、名前空間 URI として、<xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>を自動メソッドは、新しい属性の名前空間プレフィックスを生成します</xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A>。      -作成される新しい属性が要素の名前空間の宣言と競合する選択した名前空間プレフィックスは、同じスコープで、別の名前空間宣言によって使用されるため、またはプレフィックスが選択されたの要素のと同じですが、別の名前空間 URI にバインドされているため、例外はスロー名前空間ノードの場合。      -<xref:System.Xml.XmlWriter>返されるオブジェクトは、属性の作成にのみ使用可能性があります</xref:System.Xml.XmlWriter>。 その他の呼び出し<xref:System.Xml.XmlWriter>属性を作成しないオブジェクトのメソッドが例外をスローします</xref:System.Xml.XmlWriter>。      -CreateAttributes メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, new `discount` and `currency` attributes are created on the `price` child element of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlWriter> object returned from the CreateAttributes method.  \n  \n [!code-cs[XPathNavigatorMethods#8](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_1_1.cs)]\n [!code-vb[XPathNavigatorMethods#8](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_1_1.vb)]\n [!code-cpp[XPathNavigatorMethods#8](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_1_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter CreateAttributes ();
    parameters: []
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトの現在の要素に新しい属性を作成するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.CreateAttributes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.CreateNavigator
  id: CreateNavigator
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: CreateNavigator()
  nameWithType: XPathNavigator.CreateNavigator()
  fullName: System.Xml.XPath.XPathNavigator.CreateNavigator()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "コピーを返します、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "このメソッドは、<xref:System.Xml.XPath.XPathNavigator.Clone%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.Clone%2A>。"
  syntax:
    content: public virtual System.Xml.XPath.XPathNavigator CreateNavigator ();
    parameters: []
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "An <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref> copy of this <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>."
  overload: System.Xml.XPath.XPathNavigator.CreateNavigator*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)
  id: DeleteRange(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: DeleteRange(XPathNavigator)
  nameWithType: XPathNavigator.DeleteRange(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.DeleteRange(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードから指定されたノードの兄弟ノードの範囲を削除します。"
  remarks: "DeleteRange メソッドは、現在のノードからの兄弟ノードの範囲を削除、<xref:System.Xml.XPath.XPathNavigator>によって指定されたノード (包括) に配置されて、 <xref:System.Xml.XPath.XPathNavigator>(包括) のパラメーターです</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>の親ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "In the following example, the first and second `book` elements of the `contosoBooks.xml` file are deleted using the DeleteRange method.  \n  \n [!code-cs[XPathNavigatorMethods#52](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_9_1.cs)]\n [!code-vb[XPathNavigatorMethods#52](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_9_1.vb)]\n [!code-cpp[XPathNavigatorMethods#52](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_9_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void DeleteRange (System.Xml.XPath.XPathNavigator lastSiblingToDelete);
    parameters:
    - id: lastSiblingToDelete
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>を削除する範囲の最後の兄弟ノードに配置します。"
  overload: System.Xml.XPath.XPathNavigator.DeleteRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "削除する最後のノードは指定された現在のノードの有効な兄弟ノードいないは。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.DeleteSelf
  id: DeleteSelf
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: DeleteSelf()
  nameWithType: XPathNavigator.DeleteSelf()
  fullName: System.Xml.XPath.XPathNavigator.DeleteSelf()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードとその子ノードを削除します。"
  remarks: "-<xref:System.Xml.XPath.XPathNavigator>が正常に削除で、削除したノードの親ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      場合、単純な型指定された要素の内容であるテキスト ノードを削除したノードには、要素には、その型の情報が失われます。 つまり、この要素に配置されているときに、 <xref:System.Xml.XPath.XPathNavigator.XmlType%2A>、<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>と<xref:System.Xml.XPath.XPathNavigator.TypedValue%2A>プロパティの値である`null`、<xref:System.String>と<xref:System.String.Empty>それぞれ</xref:System.String.Empty></xref:System.String></xref:System.Xml.XPath.XPathNavigator.TypedValue%2A></xref:System.Xml.XPath.XPathNavigator.ValueType%2A></xref:System.Xml.XPath.XPathNavigator.XmlType%2A>。      -削除されたノードがアクセスできるまだ<xref:System.Xml.XPath.XPathNavigator>削除の前に、上に配置されているオブジェクト</xref:System.Xml.XPath.XPathNavigator>。 ただし、削除されたサブツリーから離れた場所に移動しようとするメソッドが失敗します。 たとえば、<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>と<xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>メソッドが常に失敗する場合に、<xref:System.Xml.XPath.XPathNavigator>最上位の最も削除されたノード上に置かれた</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>。 削除したノードが XML ドキュメントに接続していないためにです。 同様に、<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>常に失敗した場合、<xref:System.Xml.XPath.XPathNavigator>最下位の削除されたノードに配置されています</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>。"
  example:
  - "In the following example the `price` element of the first `book` element of the `contosoBooks.xml` file is deleted using the DeleteSelf method. The position of the <xref:System.Xml.XPath.XPathNavigator> object after the `price` element is deleted is on the parent `book` element.  \n  \n [!code-cs[XPathNavigatorMethods#9](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_31_1.cs)]\n [!code-vb[XPathNavigatorMethods#9](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_31_1.vb)]\n [!code-cpp[XPathNavigatorMethods#9](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_31_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void DeleteSelf ();
    parameters: []
  overload: System.Xml.XPath.XPathNavigator.DeleteSelf*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>をルート ノード、または名前空間ノードなど、削除できないノード上に配置します。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.String)
  id: Evaluate(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Evaluate(String)
  nameWithType: XPathNavigator.Evaluate(String)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XPath 式を評価し、型指定された結果を返します。"
  remarks: "次の c# コードは、変換、`Price/text()`ノードの数を 10 を乗算して、結果の値を返します。      ```   nav.Evaluate(&quot;Price/text()*10&quot;);   ```      > [!NOTE]> ロケーション ステップで述語として使用しない限り、、XPath position() と last() 関数評価のために設定するノードへの参照が必要です。 この例を受け取るオーバー ロードを使用する必要があります、 <xref:System.Xml.XPath.XPathNodeIterator>、引数としてそれ以外の場合、position() と last() 0 を返します</xref:System.Xml.XPath.XPathNodeIterator>。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example evaluates an XPath expression and returns a <xref:System.Double>.  \n  \n [!code-cs[XPathNavigatorMethods#10](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_34_1.cs)]\n [!code-vb[XPathNavigatorMethods#10](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_34_1.vb)]\n [!code-cpp[XPathNavigatorMethods#10](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_34_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual object Evaluate (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "評価可能な XPath 式を表す文字列。"
    return:
      type: System.Object
      description: "(ブール値、数値、文字列、またはノード セット) の式の結果。 これはマップ<xref:System.Boolean>、 <xref:System.Double>、 <xref:System.String>、または<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;></xref>それぞれオブジェクトします</xref:System.String></xref:System.Double></xref:System.Boolean>。"
  overload: System.Xml.XPath.XPathNavigator.Evaluate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式の戻り値の型は、ノード セットです。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)
  id: Evaluate(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Evaluate(XPathExpression)
  nameWithType: XPathNavigator.Evaluate(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(XPathExpression)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "評価、 <xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>に型指定された結果を返します。"
  remarks: "次の c# コードの変換後の数値を返します、`Price/text()`番号と、値 10 を乗算するノードです。      ```   XPathExpression expr = nav.Compile(&quot;Price/text()*10&quot;);   nav.Evaluate(expr);   ```      > [!NOTE]> ロケーション ステップで述語として使用しない限り、、XPath position() と last() 関数評価のために設定するノードへの参照が必要です。 この例を受け取るオーバー ロードを使用する必要があります、 <xref:System.Xml.XPath.XPathNodeIterator>、引数としてそれ以外の場合、position() と last() 0 を返します</xref:System.Xml.XPath.XPathNodeIterator>。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example evaluates an <xref:System.Xml.XPath.XPathExpression> and returns a <xref:System.Double>.  \n  \n [!code-cs[XPathNavigatorMethods#11](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_37_1.cs)]\n [!code-vb[XPathNavigatorMethods#11](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_37_1.vb)]\n [!code-cpp[XPathNavigatorMethods#11](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_37_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual object Evaluate (System.Xml.XPath.XPathExpression expr);
    parameters:
    - id: expr
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>を評価することができます。"
    return:
      type: System.Object
      description: "(ブール値、数値、文字列、またはノード セット) の式の結果。 これはマップ<xref:System.Boolean>、 <xref:System.Double>、 <xref:System.String>、または<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;></xref>それぞれオブジェクトします</xref:System.String></xref:System.Double></xref:System.Boolean>。"
  overload: System.Xml.XPath.XPathNavigator.Evaluate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式の戻り値の型は、ノード セットです。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)
  id: Evaluate(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Evaluate(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.Evaluate(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XPath 式を評価し、型指定されたを返しますを使用した結果、 <xref:System.Xml.IXmlNamespaceResolver>XPath 式の名前空間プレフィックスを解決するのには指定されたオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
  remarks: "次の c# コードの変換後の数値を返します、`Price/text()`番号と、値 10 を乗算するノードです。      ```   XPathExpression expr = nav.Compile(&quot;Price/text()*10&quot;);   nav.Evaluate(expr);   ```      > [!NOTE]> ロケーション ステップで述語として使用しない限り、、XPath position() と last() 関数評価のために設定するノードへの参照が必要です。 この例を受け取るオーバー ロードを使用する必要があります、 <xref:System.Xml.XPath.XPathNodeIterator>、引数としてそれ以外の場合、position() と last() 0 を返します</xref:System.Xml.XPath.XPathNodeIterator>。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example evaluates an XPath expression and returns a <xref:System.Double> using the <xref:System.Xml.XmlNamespaceManager> object specified to resolve namespace prefixes in the XPath expression.  \n  \n [!code-cs[XPathNavigatorMethods#12](~/add/codesnippet/csharp/bb1f44fa-0086-4843-b4f9-_1.cs)]\n [!code-vb[XPathNavigatorMethods#12](~/add/codesnippet/visualbasic/bb1f44fa-0086-4843-b4f9-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#12](~/add/codesnippet/cpp/bb1f44fa-0086-4843-b4f9-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual object Evaluate (string xpath, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: xpath
      type: System.String
      description: "評価可能な XPath 式を表す文字列。"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>XPath 式の名前空間プレフィックスの解決に使用されるオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
    return:
      type: System.Object
      description: "(ブール値、数値、文字列、またはノード セット) の式の結果。 これはマップ<xref:System.Boolean>、 <xref:System.Double>、 <xref:System.String>、または<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;></xref>それぞれオブジェクトします</xref:System.String></xref:System.Double></xref:System.Boolean>。"
  overload: System.Xml.XPath.XPathNavigator.Evaluate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式の戻り値の型は、ノード セットです。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)
  id: Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Evaluate(XPathExpression,XPathNodeIterator)
  nameWithType: XPathNavigator.Evaluate(XPathExpression,XPathNodeIterator)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(XPathExpression,XPathNodeIterator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "評価に提供されたコンテキストを使用して、 <xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>、型指定された結果を返します。"
  remarks: "使用して、式を評価、<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>のノード、<xref:System.Xml.XPath.XPathNodeIterator>コンテキスト ノードとして</xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNodeIterator.Current%2A>。 場合`context`は`null`、ノードで、<xref:System.Xml.XPath.XPathNavigator>が現在配置されているコンテキスト ノードとして使用されます</xref:System.Xml.XPath.XPathNavigator>。       Position() と last() 関数では、ロケーション ステップで述語として使用しない限り、常に 0 を返します、次の条件: -`context`引数は`null`します。      -<xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A><xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNodeIterator>呼び出されていません</xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>。       Position() と last() 関数は、現在のノードに関する作業、ので使用しないでください、<xref:System.Xml.XPath.XPathNodeIterator.Current%2A>選択されたノード セットからを移動するプロパティ</xref:System.Xml.XPath.XPathNodeIterator.Current%2A>。 これは、でした<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態が無効になります。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example evaluates an <xref:System.Xml.XPath.XPathExpression> and returns a <xref:System.Double> using the <xref:System.Xml.XPath.XPathNodeIterator.Current%2A> node of the <xref:System.Xml.XPath.XPathNodeIterator> as the context node.  \n  \n [!code-cs[XPathNavigatorMethods#13](~/add/codesnippet/csharp/5558037b-c92b-456f-bb8e-_1.cs)]\n [!code-vb[XPathNavigatorMethods#13](~/add/codesnippet/visualbasic/5558037b-c92b-456f-bb8e-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#13](~/add/codesnippet/cpp/5558037b-c92b-456f-bb8e-_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual object Evaluate (System.Xml.XPath.XPathExpression expr, System.Xml.XPath.XPathNodeIterator context);
    parameters:
    - id: expr
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>を評価することができます。"
    - id: context
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>上で実行されるが、選択したノードへのポインター セットを評価します。"
    return:
      type: System.Object
      description: "(ブール値、数値、文字列、またはノード セット) の式の結果。 これはマップ<xref:System.Boolean>、 <xref:System.Double>、 <xref:System.String>、または<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;></xref>それぞれオブジェクトします</xref:System.String></xref:System.Double></xref:System.Boolean>。"
  overload: System.Xml.XPath.XPathNavigator.Evaluate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式の戻り値の型は、ノード セットです。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: GetAttribute(String,String)
  nameWithType: XPathNavigator.GetAttribute(String,String)
  fullName: System.Xml.XPath.XPathNavigator.GetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定されたローカル名と名前空間 URI を持つ属性の値を取得します。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>GetAttribute メソッドを呼び出す前に、要素ノードに配置する必要があります</xref:System.Xml.XPath.XPathNavigator>。       このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  syntax:
    content: public virtual string GetAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "属性のローカル名。 `localName`大文字小文字を区別します。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は、属性の URI であります。"
    return:
      type: System.String
      description: "<xref:System.String>、指定した属性の値を格納しています。&lt;xref:System.String?displayProperty=fullName&gt;一致する属性が見つからない場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.GetNamespace(System.String)
  id: GetNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: GetNamespace(String)
  nameWithType: XPathNavigator.GetNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.GetNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定されたローカル名に対応する名前空間ノードの値を返します。"
  remarks: "名前空間`xml`と`xmlns`常に値を返します。 場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`name`パラメーター、GetNamespace メソッドは、既定値を返します`xmlns`名前空間</xref:System.String.Empty?displayProperty=fullName>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。       このメソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態には影響しません"
  syntax:
    content: public virtual string GetNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前空間ノードのローカル名。"
    return:
      type: System.String
      description: "<xref:System.String>名前空間ノードの値を格納しています。&lt;xref:System.String?displayProperty=fullName&gt;一致する名前空間ノードが見つからない場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.GetNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  id: GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XPathNavigator.GetNamespacesInScope(XmlNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.GetNamespacesInScope(XmlNamespaceScope)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードのスコープ内の名前空間を返します。"
  remarks: "返される名前空間、<xref:System.Xml.XmlNamespaceScope>指定された値</xref:System.Xml.XmlNamespaceScope>。      |XmlNamespaceScope 値 |返される名前空間 |  |-----------------------------|-------------------------|  |<xref:System.Xml.XmlNamespaceScope>|現在のノードのスコープで定義されているすべての名前空間</xref:System.Xml.XmlNamespaceScope>。 これが含まれています、`xmlns:xml`名前空間は、常に暗黙的に宣言します。 定義されていない名前空間の順序が返されます |。  |<xref:System.Xml.XmlNamespaceScope>|現在のノードのスコープで定義されているすべての名前空間を除く、`xmlns:xml`名前空間は、常に暗黙的に宣言します</xref:System.Xml.XmlNamespaceScope>。 定義されていない名前空間の順序が返されます |。  |<xref:System.Xml.XmlNamespaceScope>|現在のノードでローカルに定義されているすべての名前空間です |</xref:System.Xml.XmlNamespaceScope> 。"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,string> GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);
    parameters:
    - id: scope
      type: System.Xml.XmlNamespaceScope
      description: "<xref:System.Xml.XmlNamespaceScope>を返す名前空間を指定する値</xref:System.Xml.XmlNamespaceScope>。"
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt;プレフィックスによってキー指定された名前空間名のコレクション。"
  overload: System.Xml.XPath.XPathNavigator.GetNamespacesInScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.HasAttributes
  id: HasAttributes
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: HasAttributes
  nameWithType: XPathNavigator.HasAttributes
  fullName: System.Xml.XPath.XPathNavigator.HasAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードが属性を持っているかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、現在のノードに属性を返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> 、現在のノードがあるない場合、属性または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません。"
  overload: System.Xml.XPath.XPathNavigator.HasAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.HasChildren
  id: HasChildren
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: HasChildren
  nameWithType: XPathNavigator.HasChildren
  fullName: System.Xml.XPath.XPathNavigator.HasChildren
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードが子ノードを持っているかどうかを示す値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>返します HasChildren プロパティは常に、子ノードを持つことができないノードに配置されて`false`</xref:System.Xml.XPath.XPathNavigator>。       次の表に、子ノード<xref:System.Xml.XPath.XPathNodeType>ごとに許可されているノード<xref:System.Xml.XPath.XPathNodeType>ノード</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。      |XPathNodeType ノード |子 XPathNodeType ノード |  |------------------------|-------------------------------|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType> nodes.</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType> **注:** <xref:System.Xml.XmlNodeType> <xref:System.Xml.XPath.XPathNodeType>、<xref:System.Xml.XmlDocument>を使用する場合のクラスと同等であり、同じ子要素として持つことができます |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType> or <xref:System.Xml.XPath.XPathNodeType> nodes.|  |その他のすべての<xref:System.Xml.XPath.XPathNodeType>ノード |子ノードを持つことはできません |</xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XmlNodeType> 。  "
  syntax:
    content: public virtual bool HasChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のノードに子ノードがある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.HasChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InnerXml
  id: InnerXml
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InnerXml
  nameWithType: XPathNavigator.InnerXml
  fullName: System.Xml.XPath.XPathNavigator.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "取得または現在のノードの子ノードを表すマークアップを設定します。"
  remarks: >-
    > [!NOTE]

    >  The InnerXml and <xref:System.Xml.XPath.XPathNavigator.OuterXml%2A> properties are not very efficient. If performance is a priority, it is more efficient to use the node navigation methods of the <xref:System.Xml.XPath.XPathNavigator> to get values of child nodes.
  example:
  - "The following example uses the InnerXml property to display the contents of the first `book` element in the `contosoBooks.xml` file and its child nodes in the <xref:System.Xml.XPath.XPathNavigator>.  \n  \n [!code-vb[XPathNavigatorProperties#2](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_0_1.vb)]\n [!code-cpp[XPathNavigatorProperties#2](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_0_1.cpp)]\n [!code-cs[XPathNavigatorProperties#2](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_0_1.cs)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual string InnerXml { get; set; }
    return:
      type: System.String
      description: "A <xref:System.String>、現在のノードの子ノードのマークアップを格納している</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.InnerXml*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "InnerXml プロパティを設定することはできません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertAfter
  id: InsertAfter
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertAfter()
  nameWithType: XPathNavigator.InsertAfter()
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、<xref:System.Xml.XmlWriter>オブジェクトが現在選択されているノードの後に新しい兄弟ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  remarks: "InsertAfter メソッドの使用時に考慮すべき重要な注意事項を次に示します。      にまで新しい兄弟ノードが挿入されていない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。      -InsertAfter メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertAfter メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted after the `price` child element of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlWriter> object returned by the InsertAfter method.  \n  \n [!code-cs[XPathNavigatorMethods#14](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_36_1.cs)]\n [!code-vb[XPathNavigatorMethods#14](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_36_1.vb)]\n [!code-cpp[XPathNavigatorMethods#14](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_36_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter InsertAfter ();
    parameters: []
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトが現在選択されているノードの後に新しい兄弟ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.InsertAfter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの後に挿入される新しい兄弟ノードはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.String)
  id: InsertAfter(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertAfter(String)
  nameWithType: XPathNavigator.InsertAfter(String)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XML 文字列を使用して、現在選択されているノードの後に新しい兄弟ノードを作成します。"
  remarks: "新しい要素ノードを作成するには、XML 文字列パラメーターのすべての XML 構文が含まれます。 新しい文字列`book`ノードが`InsertAfter(&quot;<book/>&quot;)`です。 現在のノードのテキスト ノードがテキスト&quot;book&quot;を挿入する文字列`InsertAfter(&quot;book&quot;)`です。 XML 文字列に複数のノードが含まれている場合は、すべてのノードが追加されます。       InsertAfter メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -InsertAfter メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertAfter メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted after the `price` child element of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#15](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_7_1.cs)]\n [!code-vb[XPathNavigatorMethods#15](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_7_1.vb)]\n [!code-cpp[XPathNavigatorMethods#15](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_7_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertAfter (string newSibling);
    parameters:
    - id: newSibling
      type: System.String
      description: "新しい兄弟ノード用の XML データ文字列。"
  overload: System.Xml.XPath.XPathNavigator.InsertAfter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML 文字列パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの後に挿入される新しい兄弟ノードはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 文字列パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)
  id: InsertAfter(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertAfter(XmlReader)
  nameWithType: XPathNavigator.InsertAfter(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "XML コンテンツを使用して、現在選択されているノードの後に新しい兄弟ノードを作成、<xref:System.Xml.XmlReader>指定されたオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "InsertAfter メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XmlReader>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XmlReader>。      -InsertAfter メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertAfter メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted after the `price` child element of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlReader> object specified. The `http://www.contoso.com/books` namespace is specified so that the new sibling element is inserted using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#16](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_42_1.cs)]\n [!code-vb[XPathNavigatorMethods#16](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_42_1.vb)]\n [!code-cpp[XPathNavigatorMethods#16](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_42_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertAfter (System.Xml.XmlReader newSibling);
    parameters:
    - id: newSibling
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>新しい兄弟ノード用の XML データに配置されているオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.InsertAfter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.XmlReader>オブジェクトがエラー状態または閉じています</xref:System.Xml.XmlReader>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.XmlReader> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの後に挿入される新しい兄弟ノードはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、<xref:System.Xml.XmlReader>オブジェクト パラメーターは整形式ではありません</xref:System.Xml.XmlReader>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)
  id: InsertAfter(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertAfter(XPathNavigator)
  nameWithType: XPathNavigator.InsertAfter(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "内のノードを使用して、現在選択されているノードの後に新しい兄弟ノードを作成、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されたオブジェクト。"
  remarks: "InsertAfter メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XmlReader>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XmlReader>。      -InsertAfter メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertAfter メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted after the `price` child element of the first `book` element in the `contosoBooks.xml` file using the node contained in the <xref:System.Xml.XPath.XPathNavigator> object specified. The `http://www.contoso.com/books` namespace is specified so that the new sibling element is inserted using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#17](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_4_1.cs)]\n [!code-vb[XPathNavigatorMethods#17](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_4_1.vb)]\n [!code-cpp[XPathNavigatorMethods#17](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_4_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertAfter (System.Xml.XPath.XPathNavigator newSibling);
    parameters:
    - id: newSibling
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノードとして追加するノードに配置されているオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.InsertAfter*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの後に挿入される新しい兄弟ノードはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertBefore
  id: InsertBefore
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertBefore()
  nameWithType: XPathNavigator.InsertBefore()
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、<xref:System.Xml.XmlWriter>オブジェクトが現在選択されているノードの前に新しい兄弟ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  remarks: "InsertBefore メソッドの使用時に考慮すべき重要な注意事項を次に示します。      にまで新しい兄弟ノードが挿入されていない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。      -InsertBefore メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertBefore メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted before the `price` child element of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlWriter> object returned by the InsertBefore method.  \n  \n [!code-cs[XPathNavigatorMethods#18](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_38_1.cs)]\n [!code-vb[XPathNavigatorMethods#18](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_38_1.vb)]\n [!code-cpp[XPathNavigatorMethods#18](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_38_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter InsertBefore ();
    parameters: []
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトが現在選択されているノードの前に新しい兄弟ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.InsertBefore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノード、現在のノードの前に挿入することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.String)
  id: InsertBefore(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertBefore(String)
  nameWithType: XPathNavigator.InsertBefore(String)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XML 文字列を使用して、現在選択されているノードの前に新しい兄弟ノードを作成します。"
  remarks: "新しい要素ノードを作成するには、XML 文字列パラメーターのすべての XML 構文が含まれます。 新しい文字列`book`ノードが`InsertBefore(&quot;<book/>&quot;)`です。 現在のノードのテキスト ノードが前に、&quot;book&quot;というテキストを挿入するため、文字列`InsertBefore(&quot;book&quot;)`です。 XML 文字列に複数のノードが含まれている場合は、すべてのノードが追加されます。       InsertBefore メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -InsertBefore メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertBefore メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted before the `price` child element of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#19](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_8_1.cs)]\n [!code-vb[XPathNavigatorMethods#19](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_8_1.vb)]\n [!code-cpp[XPathNavigatorMethods#19](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_8_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertBefore (string newSibling);
    parameters:
    - id: newSibling
      type: System.String
      description: "新しい兄弟ノード用の XML データ文字列。"
  overload: System.Xml.XPath.XPathNavigator.InsertBefore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML 文字列パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノード、現在のノードの前に挿入することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 文字列パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)
  id: InsertBefore(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertBefore(XmlReader)
  nameWithType: XPathNavigator.InsertBefore(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "XML コンテンツを使用して、現在選択されているノードの前に新しい兄弟ノードを作成、<xref:System.Xml.XmlReader>指定されたオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "InsertBefore メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XmlReader>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XmlReader>。      -InsertBefore メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertBefore メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted before the `price` child element of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlReader> object specified. The `http://www.contoso.com/books` namespace is specified so that the new sibling element is inserted using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#20](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_2_1.cs)]\n [!code-vb[XPathNavigatorMethods#20](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_2_1.vb)]\n [!code-cpp[XPathNavigatorMethods#20](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_2_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertBefore (System.Xml.XmlReader newSibling);
    parameters:
    - id: newSibling
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>新しい兄弟ノード用の XML データに配置されているオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.InsertBefore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.XmlReader>オブジェクトがエラー状態または閉じています</xref:System.Xml.XmlReader>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.XmlReader> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノード、現在のノードの前に挿入することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、<xref:System.Xml.XmlReader>オブジェクト パラメーターは整形式ではありません</xref:System.Xml.XmlReader>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)
  id: InsertBefore(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertBefore(XPathNavigator)
  nameWithType: XPathNavigator.InsertBefore(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "内のノードを使用して、現在選択されているノードの前に新しい兄弟ノードを作成、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定します。"
  remarks: "InsertBefore メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XPath.XPathNavigator>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XPath.XPathNavigator>。      -InsertBefore メソッドは、有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertBefore メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted before the `price` child element of the first `book` element in the `contosoBooks.xml` file using the node contained in the <xref:System.Xml.XPath.XPathNavigator> object specified. The `http://www.contoso.com/books` namespace is specified so that the new sibling element is inserted using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#21](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_5_1.cs)]\n [!code-vb[XPathNavigatorMethods#21](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_5_1.vb)]\n [!code-cpp[XPathNavigatorMethods#21](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_5_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertBefore (System.Xml.XPath.XPathNavigator newSibling);
    parameters:
    - id: newSibling
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノードとして追加するノードに配置されているオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.InsertBefore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノード、現在のノードの前に挿入することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)
  id: InsertElementAfter(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertElementAfter(String,String,String,String)
  nameWithType: XPathNavigator.InsertElementAfter(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.InsertElementAfter(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "名前空間プレフィックス、ローカル名および名前空間に指定された値と共に指定した URI を使用して現在のノードの後に新しい兄弟要素を作成します。"
  remarks: "使用して、Namespace プレフィックスと URI の値を取得できます、<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>または<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A></xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>。 次の構文がスコープ内の名前空間を使用して、兄弟要素を挿入するなど、 `xmlns:bk=&quot;http://www.contoso.com/books&quot;`:```   navigator.InsertElementAfter(navigator.Prefix, &quot;pages&quot;, LookupNamespaceURI(navigator.Prefix), String.Empty)   ```こうと、新しい兄弟`<bk:pages/>`要素。       InsertElementAfter メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、指定された名前空間プレフィックスは`null`または<xref:System.String.Empty?displayProperty=fullName>、現在の名前空間のスコープ内から新しい要素の URI 名前空間のプレフィックスを取得し、</xref:System.String.Empty?displayProperty=fullName> 。 URI が現在のスコープで指定された名前空間に割り当てられている名前空間プレフィックスがない、し、名前空間プレフィックスが自動的に生成されます。      -InsertElementAfter メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertElementAfter メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted after the `price` child element of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#22](~/add/codesnippet/csharp/a264880b-8998-4101-acb3-_1.cs)]\n [!code-vb[XPathNavigatorMethods#22](~/add/codesnippet/visualbasic/a264880b-8998-4101-acb3-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#22](~/add/codesnippet/cpp/a264880b-8998-4101-acb3-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertElementAfter (string prefix, string localName, string namespaceURI, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "新しい子要素 (存在する場合) の名前空間プレフィックス。"
    - id: localName
      type: System.String
      description: "新しい子要素 (存在する場合) のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI (存在する場合) は、新しい子要素です。 <xref:System.String>および<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>は同等です。</xref:System.String>"
    - id: value
      type: System.String
      description: "新しい子要素の値。 場合<xref:System.String>または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を渡すと、空の要素を作成します</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.InsertElementAfter*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの後に挿入される新しい兄弟ノードはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)
  id: InsertElementBefore(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: InsertElementBefore(String,String,String,String)
  nameWithType: XPathNavigator.InsertElementBefore(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.InsertElementBefore(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "名前空間プレフィックス、ローカル名、および名前空間に指定された値と共に指定した URI を使用して現在のノードの前に新しい兄弟要素を作成します。"
  remarks: "使用して、Namespace プレフィックスと URI の値を取得できます、<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>または<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A></xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>。 次の構文がスコープ内の名前空間を使用して、兄弟要素を挿入するなど、 `xmlns:bk=&quot;http://www.contoso.com/books&quot;`:```   navigator.InsertElementBefore(navigator.Prefix, &quot;pages&quot;, LookupNamespaceURI(navigator.Prefix), String.Empty)   ```こうと、新しい兄弟`<bk:pages/>`要素。       InsertElementBefore メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、指定された名前空間プレフィックスは`null`または<xref:System.String.Empty?displayProperty=fullName>、現在の名前空間のスコープ内から新しい要素の URI 名前空間のプレフィックスを取得し、</xref:System.String.Empty?displayProperty=fullName> 。 URI が現在のスコープで指定された名前空間に割り当てられている名前空間プレフィックスがない、し、名前空間プレフィックスが自動的に生成されます。      -InsertElementBefore メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -InsertElementBefore メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example a new `pages` element is inserted before the `price` child element of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#23](~/add/codesnippet/csharp/8d231bd2-ec77-4095-aaef-_1.cs)]\n [!code-vb[XPathNavigatorMethods#23](~/add/codesnippet/visualbasic/8d231bd2-ec77-4095-aaef-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#23](~/add/codesnippet/cpp/8d231bd2-ec77-4095-aaef-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void InsertElementBefore (string prefix, string localName, string namespaceURI, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "新しい子要素 (存在する場合) の名前空間プレフィックス。"
    - id: localName
      type: System.String
      description: "新しい子要素 (存在する場合) のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI (存在する場合) は、新しい子要素です。 <xref:System.String>および<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>は同等です。</xref:System.String>"
    - id: value
      type: System.String
      description: "新しい子要素の値。 場合<xref:System.String>または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を渡すと、空の要素を作成します</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.InsertElementBefore*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい兄弟ノード、現在のノードの前に挿入することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)
  id: IsDescendant(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: IsDescendant(XPathNavigator)
  nameWithType: XPathNavigator.IsDescendant(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.IsDescendant(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "決定するかどうか、指定した<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、現在の子孫である<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator><xref:System.Xml.XPath.XPathNavigator>現在<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の子孫のノードに配置されているかどうかは</xref:System.Xml.XPath.XPathNavigator>現在の子孫であります。</xref:System.Xml.XPath.XPathNavigator> Take、たとえば、次の XML 文字列:`<item><name>widget</name></item>`場合、現在<xref:System.Xml.XPath.XPathNavigator>に配置されて、`item`ノード、および<xref:System.Xml.XPath.XPathNavigator>指定に配置されて、`name`ノード、IsDescendant を返します`true`</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。       このメソッドは常に返します`false`次の条件: -<xref:System.Xml.XPath.XPathNavigator>指定された共有がナビゲーターの現在よりも実装が別のドキュメントでポイントは、同じインスタンスです</xref:System.Xml.XPath.XPathNavigator>。      -<xref:System.Xml.XPath.XPathNavigator>指定された現在のナビゲーターは異なる実装が</xref:System.Xml.XPath.XPathNavigator>。"
  syntax:
    content: public virtual bool IsDescendant (System.Xml.XPath.XPathNavigator nav);
    parameters:
    - id: nav
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>これと比較する<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、現在の子孫である<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.IsDescendant*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.IsEmptyElement
  id: IsEmptyElement
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: IsEmptyElement
  nameWithType: XPathNavigator.IsEmptyElement
  fullName: System.Xml.XPath.XPathNavigator.IsEmptyElement
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、現在のノードが終了要素タグのない空要素かどうかを示す値を取得します。"
  remarks: "このプロパティでは、次のさまざまな要素の違いを確認することができます。      |要素 |でも値 |  |-------------|--------------------------|  |`<item num=&quot;123&quot;/>`|`true`|  |`<item num=&quot;123&quot;>test</item>`|`false`|  |`<item num=&quot;123&quot;></item>`|`false`|"
  syntax:
    content: public abstract bool IsEmptyElement { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のノードが、空の要素の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.IsEmptyElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.IsNode
  id: IsNode
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: IsNode
  nameWithType: XPathNavigator.IsNode
  fullName: System.Xml.XPath.XPathNavigator.IsNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードが XPath ノードを表すかどうかを示す値を取得します。"
  syntax:
    content: public override sealed bool IsNode { get; }
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.IsNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)
  id: IsSamePosition(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: IsSamePosition(XPathNavigator)
  nameWithType: XPathNavigator.IsSamePosition(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.IsSamePosition(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、かどうか、現在<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>が、指定したのと同じ位置に<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "IsSamePosition メソッドを想定する、<xref:System.Xml.XPath.XPathNavigator>指定した同じ実装を共有し、現在<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>と同じドキュメント インスタンスのポイントは、</xref:System.Xml.XPath.XPathNavigator>       このメソッドは常に返します`false`次の条件:-<xref:System.Xml.XPath.XPathNavigator>同じの実装は、現在<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>とは別のドキュメント インスタンスのポイントの共有を指定</xref:System.Xml.XPath.XPathNavigator>する      -<xref:System.Xml.XPath.XPathNavigator>現在<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>は異なる実装を持つ</xref:System.Xml.XPath.XPathNavigator>"
  syntax:
    content: public abstract bool IsSamePosition (System.Xml.XPath.XPathNavigator other);
    parameters:
    - id: other
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>これと比較する<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、2 つ<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>オブジェクトが同じ位置にある、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.IsSamePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.LocalName
  id: LocalName
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: LocalName
  nameWithType: XPathNavigator.LocalName
  fullName: System.Xml.XPath.XPathNavigator.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、取得、 <xref:System.Xml.XPath.XPathNavigator.Name*>、現在のノードの名前空間プレフィックスを持たない</xref:System.Xml.XPath.XPathNavigator.Name*>。"
  remarks: "返されるローカルの名前は、<xref:System.Xml.XPath.XPathNodeType>現在のノード</xref:System.Xml.XPath.XPathNodeType>。 たとえば、ローカル名、`<bk:book>`要素は`book`します。       次の表に基づいて、LocalName プロパティによって返される値の一覧、<xref:System.Xml.XPath.XPathNodeType>現在のノード</xref:System.Xml.XPath.XPathNodeType>。      |XPathNodeType |プロパティの値 |  |-------------------|--------------------|  |<xref:System.Xml.XPath.XPathNodeType>|要素のローカル名 |。  |<xref:System.Xml.XPath.XPathNodeType>|属性のローカル名 |。  |<xref:System.Xml.XPath.XPathNodeType>|名前空間 URI に関連付けられているプレフィックスです |。  |<xref:System.Xml.XPath.XPathNodeType>|処理命令の対象です |。  |他のすべての<xref:System.Xml.XPath.XPathNodeType>ノード |<xref:System.String.Empty?displayProperty=fullName>. |</xref:System.String.Empty?displayProperty=fullName> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType>"
  example:
  - "The following example iterates over the node tree recursively, and displays information about <xref:System.Xml.XPath.XPathNodeType> and <xref:System.Xml.XPath.XPathNodeType> nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_6_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_6_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_6_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract string LocalName { get; }
    return:
      type: System.String
      description: "A <xref:System.String>、現在のノードのローカル名を格納しているか、 &lt;xref:System.String?displayProperty=fullName&gt;かどうか、現在のノードが名前 (たとえば、テキスト ノードまたはコメント ノード).</xref:System.String>"
  overload: System.Xml.XPath.XPathNavigator.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: LookupNamespace(String)
  nameWithType: XPathNavigator.LookupNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定したプレフィックスの名前空間 URI を取得します。"
  remarks: "場合<xref:System.String?displayProperty=fullName>として指定されて、`prefix`パラメーターでは、現在割り当てられている既定の名前空間 URI が返されます</xref:System.String?displayProperty=fullName>。 既定の名前空間 URI が明示的に割り当てられている場合、および<xref:System.String.Empty?displayProperty=fullName>として指定されて、`prefix`パラメーターを空白のプレフィックスは任意の名前空間に含まれていない要素に関連付けられたと<xref:System.String?displayProperty=fullName>が返されます</xref:System.String?displayProperty=fullName></xref:System.String.Empty?displayProperty=fullName>。      > [!NOTE] >、マッピングのプレフィックスを名前空間 URI は、XML ドキュメント内にノードを変更できます。 その結果、LookupNamespace メソッドの値は、次に&1; つのノードから一貫性のあるできない可能性があります。"
  example:
  - For an example of the LookupNamespace method, see the <xref:System.Xml.XPath.XPathNavigator.InsertElementAfter%2A> or <xref:System.Xml.XPath.XPathNavigator.InsertElementBefore%2A> methods.
  syntax:
    content: public virtual string LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: "解決する対象の名前空間 URI を持つプレフィックス。 既定の名前空間を一致するには、渡す&lt;xref:System.String?displayProperty=fullName&gt;です。"
    return:
      type: System.String
      description: "名前空間に URI が割り当てられている名前空間を含む、 <xref:System.String>; 指定されたプレフィックス<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> URI が指定されたプレフィックスに割り当てられている名前空間がない場合</xref:System.String>。 <xref:System.String>返される最小単位に分割されます</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.LookupNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)
  id: LookupPrefix(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: LookupPrefix(String)
  nameWithType: XPathNavigator.LookupPrefix(String)
  fullName: System.Xml.XPath.XPathNavigator.LookupPrefix(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定した名前空間 URI に対して宣言されたプリフィックスを取得します。"
  remarks: "LookupPrefix メソッドでは、名前空間の指定された URI に一致する最初のプレフィックスを返します。 複数のプレフィックスが同じ名前空間を参照する URI は順序付けされません特定の方法で特定のプレフィックスを返されないことが&1; つ以上が割り当てられるときたびに、します。      > [!NOTE] > Namespace URI とプレフィックスのマッピングは、XML ドキュメント内にノードを変更できます。 その結果、LookupPrefix メソッドの値は、次に&1; つのノードから一貫性のあるできない可能性があります。"
  syntax:
    content: public virtual string LookupPrefix (string namespaceURI);
    parameters:
    - id: namespaceURI
      type: System.String
      description: "名前空間は、プレフィックスを解決するのには URI であります。"
    return:
      type: System.String
      description: "A <xref:System.String>; 指定された URI の名前空間に割り当てられている名前空間プレフィックスを格納している場合は、 &lt;xref:System.String?displayProperty=fullName&gt;名前空間の指定された URI にプレフィックスが割り当てられていない場合</xref:System.String>。 <xref:System.String>返される最小単位に分割されます</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.LookupPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Matches(System.String)
  id: Matches(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Matches(String)
  nameWithType: XPathNavigator.Matches(String)
  fullName: System.Xml.XPath.XPathNavigator.Matches(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードが指定された XPath 式と一致するかどうかを判断します。"
  remarks: "このメソッドに<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態に影響はありません。"
  example:
  - For an example of the <xref:System.Xml.XPath.XPathNavigator.Matches%2A> method, see the <xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=fullName> method.
  syntax:
    content: public virtual bool Matches (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "XPath 式。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のノードが指定された XPath 式と一致する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.Matches*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式を評価することはできません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)
  id: Matches(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Matches(XPathExpression)
  nameWithType: XPathNavigator.Matches(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Matches(XPathExpression)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードが、指定された一致するかどうかを判断<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>です。"
  remarks: "このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態 このメソッドは、<xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=fullName>メソッドの点を除いて、 <xref:System.Xml.XPath.XPathExpression> <xref:System.String>.</xref:System.String> XPath 式ではなく、コンパイル済みの XPath 式を含むオブジェクトが指定された</xref:System.Xml.XPath.XPathExpression></xref:System.Xml.XPath.XPathNavigator.Matches%2A?displayProperty=fullName>"
  example:
  - "The following example displays the titles of all novels.  \n  \n [!code-cs[XPathNavigatorMethods#24](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_20_1.cs)]\n [!code-vb[XPathNavigatorMethods#24](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_20_1.vb)]\n [!code-cpp[XPathNavigatorMethods#24](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_20_1.cpp)]  \n  \n The example uses the file, `books.xml`, as input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool Matches (System.Xml.XPath.XPathExpression expr);
    parameters:
    - id: expr
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>コンパイル済みの XPath 式を含むオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在のノードに一致する場合、 <xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.Matches*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式を評価することはできません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)
  id: MoveTo(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveTo(XPathNavigator)
  nameWithType: XPathNavigator.MoveTo(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveTo(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、指定したのと同じ位置に<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>です。"
  remarks: "このメソッドは常に返します`true`場合<xref:System.Xml.XPath.XPathNavigator>は、<xref:System.Xml.XPath.XPathNavigator>同じの実装と、ドキュメントと同じインスタンス<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>を現在のポイントを共有</xref:System.Xml.XPath.XPathNavigator>を指定</xref:System.Xml.XPath.XPathNavigator>       このメソッドは常に返します`false`場合<xref:System.Xml.XPath.XPathNavigator>は<xref:System.Xml.XPath.XPathNavigator>、現在<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>は異なる実装を持つ</xref:System.Xml.XPath.XPathNavigator>指定された</xref:System.Xml.XPath.XPathNavigator>"
  syntax:
    content: public abstract bool MoveTo (System.Xml.XPath.XPathNavigator other);
    parameters:
    - id: other
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>に移動するノードに配置します。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に指定したのと同じ位置に移動<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)
  id: MoveToAttribute(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToAttribute(String,String)
  nameWithType: XPathNavigator.MoveToAttribute(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>名前空間 URI と一致するローカルの名前を持つ属性にします。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない、要素に、このメソッドが戻る`false`</xref:System.Xml.XPath.XPathNavigator>。       MoveToAttribute、呼び出しは成功した後、 <xref:System.Xml.XPath.XPathNavigator.LocalName%2A>、<xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A>と<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>プロパティ、属性の値が反映されます</xref:System.Xml.XPath.XPathNavigator.Prefix%2A></xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A></xref:System.Xml.XPath.XPathNavigator.LocalName%2A>。 ときに、<xref:System.Xml.XPath.XPathNavigator>属性、メソッドに配置されて<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`ナビゲーターの位置は変更されません。 呼び出す代わりに、<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>を次の属性ノードに移動します</xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>。       呼び出すことができますが属性に配置すると、一度<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>、所有者要素に移動します</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>。"
  syntax:
    content: public virtual bool MoveToAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "属性のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI の属性です。<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>の空の名前空間。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の属性に正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)
  id: MoveToChild(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToChild(XPathNodeType)
  nameWithType: XPathNavigator.MoveToChild(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToChild(XPathNodeType)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>の子ノードに、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>指定します。"
  remarks: "MoveToChild メソッドの戻り値によって異なります、<xref:System.Xml.XPath.XPathNodeType>現在のノードの<xref:System.Xml.XPath.XPathNodeType>子ノードに移動するのです</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。       次の表は、さまざまな<xref:System.Xml.XPath.XPathNodeType>ノード、および子ノードに移動したことができます</xref:System.Xml.XPath.XPathNodeType>。      |現在のノードの XPathNodeType |子ノードの XPathNodeType |  |----------------------------------|--------------------------------|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |その他のすべての<xref:System.Xml.XPath.XPathNodeType>値 |None.|</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>"
  syntax:
    content: public virtual bool MoveToChild (System.Xml.XPath.XPathNodeType type);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>の子ノードに移動します。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の子ノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToChild*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)
  id: MoveToChild(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToChild(String,String)
  nameWithType: XPathNavigator.MoveToChild(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToChild(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>子ノードでローカルの名前と名前空間 URI を指定します。"
  remarks: ''
  example:
  - For an example of the MoveToChild method, see the <xref:System.Xml.XPath.XPathNavigator.AppendChild%2A> method.
  syntax:
    content: public virtual bool MoveToChild (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "移動する子ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間に移動する子ノードの URI。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の子ノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToChild*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFirst
  id: MoveToFirst
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFirst()
  nameWithType: XPathNavigator.MoveToFirst()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirst()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの最初の兄弟ノードにします。"
  syntax:
    content: public virtual bool MoveToFirst ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に現在のノードの最初の兄弟ノードに移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>最初の兄弟がない場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>属性ノード上の現在位置します。 場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は最初の兄弟に既に配置されている<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>戻ります<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>がその位置に移動しないとします。       MoveToFirst を返す場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>最初の兄弟がないため、または場合<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>の現在位置属性の位置に、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFirst*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute
  id: MoveToFirstAttribute
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFirstAttribute()
  nameWithType: XPathNavigator.MoveToFirstAttribute()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの最初の属性にします。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない、要素に、このメソッドが戻る`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変わりません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。       MoveToFirstAttribute、呼び出しは成功した後、 <xref:System.Xml.XPath.XPathNavigator.LocalName%2A>、<xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A>と<xref:System.Xml.XPath.XPathNavigator.Prefix%2A>プロパティ、属性の値が反映されます</xref:System.Xml.XPath.XPathNavigator.Prefix%2A></xref:System.Xml.XPath.XPathNavigator.NamespaceURI%2A></xref:System.Xml.XPath.XPathNavigator.LocalName%2A>。 ときに、<xref:System.Xml.XPath.XPathNavigator>属性、メソッドに配置されて<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。 呼び出す代わりに、<xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>を次の属性ノードに移動します</xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A>。       後に、<xref:System.Xml.XPath.XPathNavigator>が配置されている属性に呼び出すことができます<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>、所有者要素に移動します</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "The following example uses the MoveToFirstAttribute and <xref:System.Xml.XPath.XPathNavigator.MoveToNextAttribute%2A> methods to display all the attributes for each book in the `books.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#49](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_18_1.cs)]\n [!code-vb[XPathNavigatorMethods#49](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_18_1.vb)]\n [!code-cpp[XPathNavigatorMethods#49](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_18_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract bool MoveToFirstAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に移動する、現在のノードの最初の属性をそれ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstChild
  id: MoveToFirstChild
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFirstChild()
  nameWithType: XPathNavigator.MoveToFirstChild()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstChild()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの最初の子ノードにします。"
  remarks: "<xref:System.Xml.XPath.XPathNodeType>および<xref:System.Xml.XPath.XPathNodeType>は&2; つだけ<xref:System.Xml.XPath.XPathNodeType>子を持つことができる値です</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。</xref:System.Xml.XPath.XPathNodeType> このプロパティは常に返します`false`他のすべての<xref:System.Xml.XPath.XPathNodeType>ノードの種類</xref:System.Xml.XPath.XPathNodeType>。"
  example:
  - For an example of the MoveToFirstChild method, see the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method.
  syntax:
    content: public abstract bool MoveToFirstChild ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は、現在のノードの最初の子ノードに正常に移動、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFirstChild*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace
  id: MoveToFirstNamespace
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFirstNamespace()
  nameWithType: XPathNavigator.MoveToFirstNamespace()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>を現在のノードの最初の名前空間ノードにします。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>クラスは、ドキュメントの逆順で名前空間ノードを返します</xref:System.Xml.XPath.XPathNavigator>。 そのため、MoveToFirstNamespace 原則的に移動最後の名前空間ノード、現在のスコープでします。       後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードに移動しました、<xref:System.Xml.XPath.XPathNavigator.Name%2A>プロパティには、名前空間の名前が反映されます</xref:System.Xml.XPath.XPathNavigator.Name%2A></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>が、メソッド、名前空間ノードに配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。 呼び出す代わりに、<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>を次の名前空間ノードに移動します</xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>。       後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードで、呼び出しが配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>要素ノードに移動する</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。"
  syntax:
    content: public bool MoveToFirstNamespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の最初の名前空間ノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)
  id: MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFirstNamespace(XPathNamespaceScope)
  nameWithType: XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>と一致する最初の名前空間ノードに、 <xref href=&quot;System.Xml.XPath.XPathNamespaceScope&quot;> </xref>指定します。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>クラスは、ドキュメントの逆順で名前空間ノードを返します</xref:System.Xml.XPath.XPathNavigator>。 そのため、MoveToFirstNamespace 原則的に移動最後の名前空間ノード、現在のスコープでします。       例として、次の XML フラグメントを使用する場合、<xref:System.Xml.XPath.XPathNavigator>に配置されて、`data`ノード、MoveToFirstNamespace が次のように動作します</xref:System.Xml.XPath.XPathNavigator>。      - `MoveToFirstNamespace(XPathNamespaceScope.All)` 、次の名前空間ノードのいずれかに移動: `xmlns:c=&quot;C&quot;`、 `xmlns:a=&quot;A2&quot;`、 `xmlns=&quot;&quot;`、 `xmlns:b=&quot;B&quot;`、または`xmlns:xml=&quot;http://www.w3.org/XML/1998/namespace&quot;`です。      - `MoveToFirstNamespace(XPathNamespaceScope.ExcludeXml)` 、次の名前空間ノードのいずれかに移動: `xmlns:c=&quot;C&quot;`、 `xmlns:a=&quot;A2&quot;`、 `xmlns=&quot;&quot;`、または`xmlns:b=&quot;B&quot;`です。      -`MoveToFirstNamespace(XPathNamespaceScope.Local)`に移動、`xmlns:c=&quot;C&quot;`ノード。      ```   <root xmlns=&quot;urn:default&quot; xmlns:a=&quot;A1&quot; xmlns:b=&quot;B&quot;>       <item xmlns=&quot;&quot; xmlns:a=&quot;A2&quot;>           <data xmlns:c=&quot;C&quot; />       </item>   </root>   ```場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない、要素に、このメソッドが戻る`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変わりません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。 後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードに移動しました、<xref:System.Xml.XPath.XPathNavigator.Name%2A>プロパティには、名前空間の名前が反映されます</xref:System.Xml.XPath.XPathNavigator.Name%2A></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>が、メソッド、名前空間ノードに配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。 呼び出す代わりに、<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>を次の名前空間ノードに移動します</xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>。       後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードで、呼び出しが配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>要素ノードに移動する</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。"
  syntax:
    content: public abstract bool MoveToFirstNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);
    parameters:
    - id: namespaceScope
      type: System.Xml.XPath.XPathNamespaceScope
      description: "<xref href=&quot;System.Xml.XPath.XPathNamespaceScope&quot;> </xref>名前空間のスコープを記述する値。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の最初の名前空間ノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)
  id: MoveToFollowing(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFollowing(XPathNodeType)
  nameWithType: XPathNavigator.MoveToFollowing(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(XPathNodeType)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>の次の要素に、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>ドキュメントの順序で指定します。"
  remarks: "-MoveToFollowing メソッドは、属性または名前空間のノードには移動されません。 場合、<xref:System.Xml.XPath.XPathNodeType>パラメーター値が<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>、MoveToFollowing メソッドを返します`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。      場合、<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>メソッドを返します`false`、の位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません。</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> 。"
  example:
  - "In the following example, the <xref:System.Xml.XPath.XPathNavigator> is moved from the root of the `contosoBooks.xml` file to the following `bookstore` element.  \n  \n [!code-cs[XPathNavigatorMethods#25](~/add/codesnippet/csharp/f98a9cba-50b6-4275-968f-_1.cs)]\n [!code-vb[XPathNavigatorMethods#25](~/add/codesnippet/visualbasic/f98a9cba-50b6-4275-968f-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#25](~/add/codesnippet/cpp/f98a9cba-50b6-4275-968f-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>要素のです。 The <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref> cannot be <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref> or <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>正常です。 それ以外の場合の移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFollowing*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)
  id: MoveToFollowing(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFollowing(String,String)
  nameWithType: XPathNavigator.MoveToFollowing(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>ローカル名と名前空間ドキュメントの順序で指定された URI を持つ要素にします。"
  remarks: "MoveToFollowing メソッドを返す場合`false`の位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません</xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "In the following example, the <xref:System.Xml.XPath.XPathNavigator> is moved from the root of the `contosoBooks.xml` file to the first `price` element.  \n  \n [!code-cs[XPathNavigatorMethods#26](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_40_1.cs)]\n [!code-vb[XPathNavigatorMethods#26](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_40_1.vb)]\n [!code-cpp[XPathNavigatorMethods#26](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_40_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool MoveToFollowing (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "要素のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は要素の URI であります。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>正常です。 それ以外の場合の移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFollowing*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)
  id: MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFollowing(XPathNodeType,XPathNavigator)
  nameWithType: XPathNavigator.MoveToFollowing(XPathNodeType,XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(XPathNodeType,XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>の次の要素に、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>ドキュメントの順序で指定された境界を指定します。"
  remarks: "-MoveToFollowing メソッドは、属性または名前空間のノードには移動されません。 場合、<xref:System.Xml.XPath.XPathNodeType>パラメーター値が<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>、MoveToFollowing メソッドを返します`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。      場合、<xref:System.Xml.XPath.XPathNavigator>境界をパラメーターとして渡されますが、現在の位置の後に配置されていない<xref:System.Xml.XPath.XPathNavigator>は無視されます</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。      If<xref:System.Xml.XPath.XPathNavigator>をパラメーターとして渡されたインスタンスの境界は`null`[次へ] の次のノードに、指定した<xref:System.Xml.XPath.XPathNodeType>ドキュメントの順序である</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNavigator>。      -<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>属性または名前空間のノードに移動するメソッドを使用することはできません</xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>。 場合、<xref:System.Xml.XPath.XPathNavigator>と同じになります、属性または名前空間のノードが位置パラメーターとして渡される境界を<xref:System.Xml.XPath.XPathNavigator>境界パラメーターが、親要素の最初の子ノードに配置されていること</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。 これにより、属性または名前空間ノードの親要素を<xref:System.Xml.XPath.XPathNavigator>境界パラメーターが配置されているで、このメソッドで一致することができます</xref:System.Xml.XPath.XPathNavigator>。      場合、<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>メソッドを返します`false`、の位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません。</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> 。"
  example:
  - "In the following example, the <xref:System.Xml.XPath.XPathNavigator> is moved from the root of the `contosoBooks.xml` file to the following `price` element. A clone of the <xref:System.Xml.XPath.XPathNavigator> object is made using the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method. The cloned <xref:System.Xml.XPath.XPathNavigator>, positioned on the `price` element, will be used as a boundary. Changes in the position of the cloned <xref:System.Xml.XPath.XPathNavigator> do not affect the original <xref:System.Xml.XPath.XPathNavigator>. The original <xref:System.Xml.XPath.XPathNavigator> is moved back to the root of the `contosoBooks.xml` file using the <xref:System.Xml.XPath.XPathNavigator.MoveToRoot%2A> method. The title and first and last name of the author are retrieved using the MoveToFollowing method and an <xref:System.Xml.XPath.XPathNodeType> of <xref:System.Xml.XPath.XPathNodeType>. The MoveToFollowing method will return true until the `price` element boundary is reached.  \n  \n [!code-cs[XPathNavigatorMethods#27](~/add/codesnippet/csharp/d7939994-0d32-4505-9753-_1.cs)]\n [!code-vb[XPathNavigatorMethods#27](~/add/codesnippet/visualbasic/d7939994-0d32-4505-9753-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#27](~/add/codesnippet/cpp/d7939994-0d32-4505-9753-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool MoveToFollowing (System.Xml.XPath.XPathNodeType type, System.Xml.XPath.XPathNavigator end);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>要素のです。 The <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref> cannot be <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref> or <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref>."
    - id: end
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、要素の境界に配置されているオブジェクトが現在<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>が後ろに移動しない次の要素を検索中にします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>正常です。 それ以外の場合の移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFollowing*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)
  id: MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToFollowing(String,String,XPathNavigator)
  nameWithType: XPathNavigator.MoveToFollowing(String,String,XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(String,String,XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>されたローカル名と名前空間 URI を指定すると、ドキュメントの順序で指定された境界を持つ要素にします。"
  remarks: "-場合、<xref:System.Xml.XPath.XPathNavigator>境界をパラメーターとして渡されますが、現在の位置の後に配置されていない<xref:System.Xml.XPath.XPathNavigator>は無視されます</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。      場合、<xref:System.Xml.XPath.XPathNavigator>境界パラメーターが`null`、ローカルの名前と名前空間に指定された URI は、次の要素はドキュメントの順序で配置します</xref:System.Xml.XPath.XPathNavigator>。      -<xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>属性または名前空間のノードに移動するメソッドを使用することはできません</xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A>。 場合、<xref:System.Xml.XPath.XPathNavigator>と同じになります、属性または名前空間のノードが位置パラメーターとして渡される境界を<xref:System.Xml.XPath.XPathNavigator>境界パラメーターが、親要素の最初の子ノードに配置されていること</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。 これにより、属性または名前空間ノードの親要素を<xref:System.Xml.XPath.XPathNavigator>境界パラメーターが配置されているで、このメソッドで一致することができます</xref:System.Xml.XPath.XPathNavigator>。      -MoveToFollowing メソッドを返す場合`false`の位置、<xref:System.Xml.XPath.XPathNavigator>は変更されません</xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "In the following example, the <xref:System.Xml.XPath.XPathNavigator> is moved from the root of the `contosoBooks.xml` file to the following `book` element. A clone of the <xref:System.Xml.XPath.XPathNavigator> object is made using the <xref:System.Xml.XPath.XPathNavigator.Clone%2A> method and is moved from the `book` element to the following `first-name` element. The cloned <xref:System.Xml.XPath.XPathNavigator>, positioned on the `first-name` element, will be used as a boundary. Changes in the position of the cloned <xref:System.Xml.XPath.XPathNavigator> do not affect the original <xref:System.Xml.XPath.XPathNavigator>. The original <xref:System.Xml.XPath.XPathNavigator> then attempts to move to the following `price` element using the MoveToFollowing method with the boundary passed as a parameter. This move fails because the following `price` element is beyond the boundary. The original <xref:System.Xml.XPath.XPathNavigator> then attempts to move to the following `title` element which is before the boundary using the same method and succeeds.  \n  \n [!code-cs[XPathNavigatorMethods#28](~/add/codesnippet/csharp/4f1b54c7-aeb2-4ebd-b9cd-_1.cs)]\n [!code-vb[XPathNavigatorMethods#28](~/add/codesnippet/visualbasic/4f1b54c7-aeb2-4ebd-b9cd-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#28](~/add/codesnippet/cpp/4f1b54c7-aeb2-4ebd-b9cd-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual bool MoveToFollowing (string localName, string namespaceURI, System.Xml.XPath.XPathNavigator end);
    parameters:
    - id: localName
      type: System.String
      description: "要素のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は要素の URI であります。"
    - id: end
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、要素の境界に配置されているオブジェクトが現在<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>が後ろに移動しない次の要素を検索中にします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>正常です。 それ以外の場合の移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.MoveToFollowing*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToId(System.String)
  id: MoveToId(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToId(String)
  nameWithType: XPathNavigator.MoveToId(String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToId(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、ノードに移動する型の属性を持つ`ID`、値に一致する指定された<xref:System.String>.</xref:System.String>"
  remarks: "一意でノードを識別するこのメソッドを使用できます`ID`ソース ドキュメントでは、型の属性を明示的に宣言指定`ID`DTD を使用しています。       たとえば、次の XML データ`<data><x a=&quot;a1&quot;/></data>`、次が含まれている DTD を使用して読み込んだ:`<!ATTLIST x a ID #REQUIRED>`です。       場合、<xref:System.Xml.XPath.XPathNavigator>呼び出し、XML データの場所に配置された`MoveToId(&quot;a1&quot;)`位置、<xref:System.Xml.XPath.XPathNavigator>要素ノードに`x`</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。"
  syntax:
    content: public abstract bool MoveToId (string id);
    parameters:
    - id: id
      type: System.String
      description: "A<xref:System.String>を表す、`ID`移動するノードの値</xref:System.String>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が成功した移動、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>ナビゲーターの位置は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)
  id: MoveToNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNamespace(String)
  nameWithType: XPathNavigator.MoveToNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNamespace(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定された名前空間プレフィックスを持つ名前空間ノードにします。"
  remarks: "後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードに移動しました、<xref:System.Xml.XPath.XPathNavigator.Name%2A>プロパティには、名前空間の名前が反映されます</xref:System.Xml.XPath.XPathNavigator.Name%2A></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>が、メソッド、名前空間ノードに配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。 呼び出す代わりに、<xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>を次の名前空間ノードに移動します</xref:System.Xml.XPath.XPathNavigator.MoveToNextNamespace%2A>。       後に、<xref:System.Xml.XPath.XPathNavigator>が配置されている、名前空間ノードに呼び出すことができます<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>要素ノードに移動する</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。"
  syntax:
    content: public virtual bool MoveToNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前空間ノードの名前空間プレフィックス。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に指定された名前空間に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>一致する名前空間ノードが見つからなかった場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードに配置されていません。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNext
  id: MoveToNext
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNext()
  nameWithType: XPathNavigator.MoveToNext()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの次の兄弟ノードにします。"
  remarks: ''
  example:
  - "The following example iterates over the node tree recursively, and displays information about element and text nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_17_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_17_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_17_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract bool MoveToNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は、次の兄弟ノードに正常に移動、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>兄弟がある場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>属性ノード上の現在位置します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNext*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)
  id: MoveToNext(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNext(XPathNodeType)
  nameWithType: XPathNavigator.MoveToNext(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext(XPathNodeType)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>と一致する現在のノードの次の兄弟ノードに、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>指定します。"
  remarks: "MoveToNext メソッドの戻り値によって異なります、<xref:System.Xml.XPath.XPathNodeType>現在のノードと<xref:System.Xml.XPath.XPathNodeType>次の兄弟ノードに移動するのです</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。       次の表は、さまざまな<xref:System.Xml.XPath.XPathNodeType>ノードおよび兄弟ノードに移動したことができます</xref:System.Xml.XPath.XPathNodeType>。      |現在のノードの XPathNodeType |兄弟ノードの XPathNodeType |  |----------------------------------|----------------------------------|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, <xref:System.Xml.XPath.XPathNodeType>, or <xref:System.Xml.XPath.XPathNodeType>.|  |その他のすべての<xref:System.Xml.XPath.XPathNodeType>値 |None.|</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>"
  syntax:
    content: public virtual bool MoveToNext (System.Xml.XPath.XPathNodeType type);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>の兄弟ノードに移動するのです。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は、次の兄弟ノードに正常に移動、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>兄弟がある場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>属性ノード上の現在位置します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNext*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)
  id: MoveToNext(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNext(String,String)
  nameWithType: XPathNavigator.MoveToNext(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>したローカル名および名前空間に指定された URI は、次の兄弟ノードをします。"
  syntax:
    content: public virtual bool MoveToNext (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "移動する次の兄弟ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は次の兄弟ノードに移動する URI であります。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に次の兄弟ノードに移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>が次の兄弟がある場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>属性ノード上の現在位置します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNext*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNextAttribute
  id: MoveToNextAttribute
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNextAttribute()
  nameWithType: XPathNavigator.MoveToNextAttribute()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextAttribute()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>次の属性にします。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない属性は、このメソッドが戻る`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変わりません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>属性、メソッドに配置されて<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>メソッドは適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。       後に、<xref:System.Xml.XPath.XPathNavigator>が配置されている属性に呼び出すことができます<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>、所有者要素に移動します</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "The following example uses the <xref:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute%2A> and MoveToNextAttribute methods to display all the attributes for each book in the `books.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#49](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_23_1.cs)]\n [!code-vb[XPathNavigatorMethods#49](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_23_1.vb)]\n [!code-cpp[XPathNavigatorMethods#49](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_23_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract bool MoveToNextAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に次の属性に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>以上属性がある場合。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNextAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNextNamespace
  id: MoveToNextNamespace
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNextNamespace()
  nameWithType: XPathNavigator.MoveToNextNamespace()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextNamespace()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>次の名前空間ノードにします。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>クラスは、ドキュメントの逆順で名前空間ノードを返します</xref:System.Xml.XPath.XPathNavigator>。 そのため、MoveToNextNamespace は、現在のスコープ内の&1; つ上の名前空間ノードを本質的に移動します。       場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない名前空間ノードで、このメソッドが戻る`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変わりません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>が、メソッド、名前空間ノードに配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。       後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードで、呼び出しが配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>要素ノードに移動する</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。"
  syntax:
    content: public bool MoveToNextNamespace ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の名前空間の次のノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNextNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)
  id: MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToNextNamespace(XPathNamespaceScope)
  nameWithType: XPathNavigator.MoveToNextNamespace(XPathNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextNamespace(XPathNamespaceScope)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>一致する名前空間ノードの [次へ] を<xref href=&quot;System.Xml.XPath.XPathNamespaceScope&quot;></xref>指定します。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>クラスは、ドキュメントの逆順で名前空間ノードを返します</xref:System.Xml.XPath.XPathNavigator>。       場合、<xref:System.Xml.XPath.XPathNavigator>が現在配置されていない名前空間ノードで、このメソッドが戻る`false`およびの位置、<xref:System.Xml.XPath.XPathNavigator>は変わりません</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。       ときに、<xref:System.Xml.XPath.XPathNavigator>が、メソッド、名前空間ノードに配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A>、 <xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A>、および<xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A>は適用されません</xref:System.Xml.XPath.XPathNavigator.MoveToFirst%2A></xref:System.Xml.XPath.XPathNavigator.MoveToPrevious%2A></xref:System.Xml.XPath.XPathNavigator.MoveToNext%2A></xref:System.Xml.XPath.XPathNavigator>。 これらのメソッドは常に返す`false`し<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置を変更しません。       後に、<xref:System.Xml.XPath.XPathNavigator>名前空間ノードで、呼び出しが配置されている<xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A>要素ノードに移動する</xref:System.Xml.XPath.XPathNavigator.MoveToParent%2A></xref:System.Xml.XPath.XPathNavigator>。       名前空間ノードの定義では、http://www.w3.org/TR/xpath#data-model にある W3C XML Path Language (XPath) 』 勧告のセクション 5.4 を参照してください。"
  syntax:
    content: public abstract bool MoveToNextNamespace (System.Xml.XPath.XPathNamespaceScope namespaceScope);
    parameters:
    - id: namespaceScope
      type: System.Xml.XPath.XPathNamespaceScope
      description: "<xref href=&quot;System.Xml.XPath.XPathNamespaceScope&quot;> </xref>名前空間のスコープを記述する値。"
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の名前空間の次のノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToNextNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToParent
  id: MoveToParent
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToParent()
  nameWithType: XPathNavigator.MoveToParent()
  fullName: System.Xml.XPath.XPathNavigator.MoveToParent()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>を現在のノードの親ノードにします。"
  remarks: "MoveToParent メソッドの戻り値によって異なります、<xref:System.Xml.XPath.XPathNodeType>の現在のノードと<xref:System.Xml.XPath.XPathNodeType>、親ノードに移動するのです</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。       次の表は、さまざまな<xref:System.Xml.XPath.XPathNodeType>ノード、および親ノードに移動したことができます</xref:System.Xml.XPath.XPathNodeType>。      |XPathNodeType |ノードの親 |  |-------------------|-----------------|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>ノードは親がありません |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>または<xref:System.Xml.XPath.XPathNodeType>ノードです |。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType> or <xref:System.Xml.XPath.XPathNodeType> node.|</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>"
  example:
  - For an example of the MoveToParent method, see the <xref:System.Xml.XPath.XPathNavigator.CreateAttribute%2A> method.
  syntax:
    content: public abstract bool MoveToParent ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 、それ以外の現在のノードの親ノードに正常に移動<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToParent*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToPrevious
  id: MoveToPrevious
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToPrevious()
  nameWithType: XPathNavigator.MoveToPrevious()
  fullName: System.Xml.XPath.XPathNavigator.MoveToPrevious()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>現在のノードの前の兄弟ノードにします。"
  syntax:
    content: public abstract bool MoveToPrevious ();
    parameters: []
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が正常に移動する直前の兄弟ノードをそれ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>前の兄弟ノードが存在しない場合、または場合、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>属性ノード上の現在位置します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>の位置、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>は変更されません。"
  overload: System.Xml.XPath.XPathNavigator.MoveToPrevious*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.MoveToRoot
  id: MoveToRoot
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: MoveToRoot()
  nameWithType: XPathNavigator.MoveToRoot()
  fullName: System.Xml.XPath.XPathNavigator.MoveToRoot()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "移動、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が現在のノードが属しているルート ノードにします。"
  remarks: "すべてのノードは、1 つだけのドキュメントに属しています。 そのため、このメソッドは正常に実行では常にします。"
  example:
  - For an example of the MoveToRoot method, see the <xref:System.Xml.XPath.XPathNavigator.MoveToFollowing%2A> method.
  syntax:
    content: public virtual void MoveToRoot ();
    parameters: []
  overload: System.Xml.XPath.XPathNavigator.MoveToRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Name
  id: Name
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Name
  nameWithType: XPathNavigator.Name
  fullName: System.Xml.XPath.XPathNavigator.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、現在のノードの修飾名を取得します。"
  remarks: "返される名前は、<xref:System.Xml.XPath.XPathNodeType>現在のノード</xref:System.Xml.XPath.XPathNodeType>。 名前など、`<bk:book>`要素は`bk:book`します。       次の表に基づいて、Name プロパティによって返される値の一覧、<xref:System.Xml.XPath.XPathNodeType>現在のノード</xref:System.Xml.XPath.XPathNodeType>。      |XPathNodeType |プロパティの値 |  |-------------------|--------------------|  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>.</xref:System.Xml.XPath.XPathNodeType>の修飾名</xref:System.Xml.XPath.XPathNodeType> 次の例では、 `<bk:book>`、要素ノードの名前は`bk:book`|。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType>.</xref:System.Xml.XPath.XPathNodeType>の修飾名</xref:System.Xml.XPath.XPathNodeType> 次の例では、 `<book bk:genre=&quot;novel&quot;>`、<xref:System.Xml.XPath.XPathNodeType>ノードの名前は`bk:genre`|。  |<xref:System.Xml.XPath.XPathNodeType>|名前空間 URI に関連付けられているプレフィックス</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。 次の名前空間宣言で`xmlns:bk=&quot;urn:samples&quot;`、名前のプロパティから返される`bk`|。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>ターゲット</xref:System.Xml.XPath.XPathNodeType>。 次の例では、 `<?xml-stylesheet type=&quot;text/xsl&quot; href= &quot;books.xsl&quot;?>`、名前のプロパティから返される`xml-stylesheet`|。  |他のすべての<xref:System.Xml.XPath.XPathNodeType>ノード |<xref:System.String.Empty?displayProperty=fullName>. |</xref:System.String.Empty?displayProperty=fullName> </xref:System.Xml.XPath.XPathNodeType>"
  example:
  - "The following example iterates over the node tree recursively, and displays information about <xref:System.Xml.XPath.XPathNodeType> and <xref:System.Xml.XPath.XPathNodeType> nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_12_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_12_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_12_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "A <xref:System.String>、現在のノードの修飾名を格納しているか、 &lt;xref:System.String?displayProperty=fullName&gt;かどうか、現在のノードが名前 (たとえば、テキスト ノードまたはコメント ノード).</xref:System.String>"
  overload: System.Xml.XPath.XPathNavigator.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XPathNavigator.NamespaceURI
  fullName: System.Xml.XPath.XPathNavigator.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、名前空間の現在のノードの URI を取得します。"
  remarks: "URI が返される名前空間によって異なります、<xref:System.Xml.XPath.XPathNodeType>現在のノード</xref:System.Xml.XPath.XPathNodeType>。       名前空間 Uri のプロパティから返される`urn:samples`ノードの`<bk:book xmlns:bk=&quot;urn:samples&quot;>`します。       のみ<xref:System.Xml.XPath.XPathNodeType>と<xref:System.Xml.XPath.XPathNodeType><xref:System.Xml.XPath.XPathNodeType>ノードが名前空間 URI を持つことができます</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>。"
  example:
  - "The following example iterates over the node tree recursively, and displays information about <xref:System.Xml.XPath.XPathNodeType> and <xref:System.Xml.XPath.XPathNodeType> nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_5_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_5_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_5_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract string NamespaceURI { get; }
    return:
      type: System.String
      description: "A<xref:System.String>名前空間の現在のノードの URI を格納しているまたは&lt;xref:System.String?displayProperty=fullName&gt;場合は、現在のノードに名前空間 URI があるありません</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.NameTable
  id: NameTable
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: NameTable
  nameWithType: XPathNavigator.NameTable
  fullName: System.Xml.XPath.XPathNavigator.NameTable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、取得、<xref:System.Xml.XmlNameTable>の<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref></xref:System.Xml.XmlNameTable> 。"
  remarks: "<xref:System.Xml.XmlNameTable>ストアが任意のローカル名、名前空間 URI、および<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>によって使用されるプレフィックス文字列をアトミック化</xref:System.Xml.XmlNameTable> つまり、同じ<xref:System.Xml.XPath.XPathNavigator.Name%2A>が複数回のような&quot;book&quot;)、返される<xref:System.String>オブジェクトがその<xref:System.Xml.XPath.XPathNavigator.Name%2A></xref:System.Xml.XPath.XPathNavigator.Name%2A>返される</xref:System.String>同じ</xref:System.Xml.XPath.XPathNavigator.Name%2A>。 これにより、オブジェクト負荷の高い文字列比較ではなく、これらの文字列で比較する効率的なコードを記述することができます。"
  syntax:
    content: public abstract System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>、アトミック化されたバージョンの取得を有効にするオブジェクト、 <xref:System.String>XML ドキュメント内で</xref:System.String></xref:System.Xml.XmlNameTable>。"
  overload: System.Xml.XPath.XPathNavigator.NameTable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.NavigatorComparer
  id: NavigatorComparer
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: NavigatorComparer
  nameWithType: XPathNavigator.NavigatorComparer
  fullName: System.Xml.XPath.XPathNavigator.NavigatorComparer
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "取得、<xref:System.Collections.IEqualityComparer>の等値比較に使用される<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>オブジェクト</xref:System.Collections.IEqualityComparer>。"
  remarks: "NavigatorComparer プロパティでは、<xref:System.Xml.XPath.XPathNavigator>オブジェクトへの参照ではなく位置に基づいて比較するオブジェクト</xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A>と<xref:System.Object.Equals%2A>の位置に基づいてこのクラスによって実装されるメソッド、<xref:System.Xml.XPath.XPathNavigator>オブジェクトがパラメーターとして渡されます</xref:System.Xml.XPath.XPathNavigator></xref:System.Object.Equals%2A></xref:System.Xml.XPath.XPathNavigator.ComparePosition%2A>。 <xref:System.Object.GetHashCode%2A>このクラスで実装されたメソッドでは、そのローカル名と名前空間 URI などのノードのプロパティを使用して、ノードのハッシュ コードを作成します</xref:System.Object.GetHashCode%2A>。"
  example:
  - "The following example illustrates the use of the NavigatorComparer property.  \n  \n [!code-vb[XPathNavigatorProperties#3](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_11_1.vb)]\n [!code-cpp[XPathNavigatorProperties#3](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_11_1.cpp)]\n [!code-cs[XPathNavigatorProperties#3](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_11_1.cs)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public static System.Collections.IEqualityComparer NavigatorComparer { get; }
    return:
      type: System.Collections.IEqualityComparer
      description: "<xref:System.Collections.IEqualityComparer>の等値比較に使用される<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref>オブジェクト</xref:System.Collections.IEqualityComparer>。"
  overload: System.Xml.XPath.XPathNavigator.NavigatorComparer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.NodeType
  id: NodeType
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: NodeType
  nameWithType: XPathNavigator.NodeType
  fullName: System.Xml.XPath.XPathNavigator.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、取得、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>現在のノードです。"
  remarks: ''
  example:
  - "The following example iterates over the node tree recursively, and displays information about <xref:System.Xml.XPath.XPathNodeType> and <xref:System.Xml.XPath.XPathNodeType> nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_4_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_4_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_4_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract System.Xml.XPath.XPathNodeType NodeType { get; }
    return:
      type: System.Xml.XPath.XPathNodeType
      description: "1 つ、 <xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>現在のノードを表す値です。"
  overload: System.Xml.XPath.XPathNavigator.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.OuterXml
  id: OuterXml
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: OuterXml
  nameWithType: XPathNavigator.OuterXml
  fullName: System.Xml.XPath.XPathNavigator.OuterXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "取得または開始タグと終了タグの現在のノードとその子ノードを表すマークアップを設定します。"
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Xml.XPath.XPathNavigator.InnerXml%2A> and OuterXml properties are not very efficient. If performance is a priority, it is more efficient to use the node navigation methods of the <xref:System.Xml.XPath.XPathNavigator> to get values of child nodes.
  example:
  - "The following example uses the OuterXml property to display the contents of the first `book` element in the `contosoBooks.xml` file, its child nodes, and its opening and closing tags in the <xref:System.Xml.XPath.XPathNavigator>.  \n  \n [!code-vb[XPathNavigatorProperties#4](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_2_1.vb)]\n [!code-cpp[XPathNavigatorProperties#4](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_2_1.cpp)]\n [!code-cs[XPathNavigatorProperties#4](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_2_1.cs)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual string OuterXml { get; set; }
    return:
      type: System.String
      description: "A<xref:System.String>開始タグと終了タグの現在のノードとその子ノードを表すマークアップを格納している</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.OuterXml*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Prefix
  id: Prefix
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Prefix
  nameWithType: XPathNavigator.Prefix
  fullName: System.Xml.XPath.XPathNavigator.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "派生クラスでオーバーライドされると、現在のノードに関連付けられている名前空間プレフィックスを取得します。"
  remarks: "Prefix プロパティは、現在のノードに関連付けられている名前空間プレフィックスを取得します。 たとえば、プレフィックスを返します`bk`の`<bk:book>`要素。 プレフィックスが存在しない場合<xref:System.Xml.XPath.XPathNodeType>、現在のノードのされていない<xref:System.Xml.XPath.XPathNodeType><xref:System.Xml.XPath.XPathNodeType>プレフィックスを返します<xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> 、</xref:System.Xml.XPath.XPathNodeType>または</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType>、または"
  example:
  - "The following example iterates over the node tree recursively, and displays information about <xref:System.Xml.XPath.XPathNodeType> and <xref:System.Xml.XPath.XPathNodeType> nodes.  \n  \n [!code-cs[XPathNavigatorMethods#29](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_9_1.cs)]\n [!code-vb[XPathNavigatorMethods#29](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_9_1.vb)]\n [!code-cpp[XPathNavigatorMethods#29](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_9_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public abstract string Prefix { get; }
    return:
      type: System.String
      description: "A <xref:System.String>、現在のノードに関連付けられている名前空間プレフィックスを格納している</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.Prefix*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.PrependChild
  id: PrependChild
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: PrependChild()
  nameWithType: XPathNavigator.PrependChild()
  fullName: System.Xml.XPath.XPathNavigator.PrependChild()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、<xref:System.Xml.XmlWriter>オブジェクトの現在のノードのノードの子のリストの先頭に新しい子ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  remarks: "子ノードを付加することと、新しいノードが、現在のノードの子ノードのリストの先頭に追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初の子ノードが先頭に追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       PrependChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      のまで新しい子ノードが挿入されていない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。      -PrependChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -PrependChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is prepended to the beginning of the list of child elements of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlWriter> object returned from the PrependChild method.  \n  \n [!code-cs[XPathNavigatorMethods#30](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_6_1.cs)]\n [!code-vb[XPathNavigatorMethods#30](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_6_1.vb)]\n [!code-cpp[XPathNavigatorMethods#30](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_6_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter PrependChild ();
    parameters: []
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトの現在のノードのノードの子のリストの先頭に新しい子ノードを作成するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.PrependChild*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているはことはできません新しい子ノードを付加できません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.String)
  id: PrependChild(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: PrependChild(String)
  nameWithType: XPathNavigator.PrependChild(String)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "子の一覧の先頭に指定された XML 文字列を使用して現在のノードのノードに対応する、新しい子ノードを作成します。"
  remarks: "子ノードを付加することと、新しいノードが、現在のノードの子ノードのリストの先頭に追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初の子ノードが先頭に追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       新しい要素ノードを作成するには、XML 文字列パラメーターのすべての XML 構文が含まれます。 新しい文字列`book`ノードが`PrependChild(&quot;<book/>&quot;)`です。 テキスト&quot;book&quot;ノードを追加する現在のノードのテキストの文字列が`PrependChild(&quot;book&quot;)`です。 XML 文字列に複数のノードが含まれている場合は、すべてのノードが追加されます。       PrependChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      -PrependChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -PrependChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is prepended to the beginning of the list of child elements of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#31](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_32_1.cs)]\n [!code-vb[XPathNavigatorMethods#31](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_32_1.vb)]\n [!code-cpp[XPathNavigatorMethods#31](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_32_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void PrependChild (string newChild);
    parameters:
    - id: newChild
      type: System.String
      description: "新しい子ノードの XML データ文字列。"
  overload: System.Xml.XPath.XPathNavigator.PrependChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML 文字列パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているはことはできません新しい子ノードを付加できません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 文字列パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)
  id: PrependChild(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: PrependChild(XmlReader)
  nameWithType: XPathNavigator.PrependChild(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "XML コンテンツを使用して現在のノードのノードの子の一覧の先頭に新しい子ノードを作成、<xref:System.Xml.XmlReader>指定されたオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "子ノードを付加することと、新しいノードが、現在のノードの子ノードのリストの先頭に追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初の子ノードが先頭に追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       PrependChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XmlReader>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XmlReader>。      -PrependChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -PrependChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is prepended to the beginning of the list of child elements of the first `book` element in the `contosoBooks.xml` file using the <xref:System.Xml.XmlReader> object specified. The `http://www.contoso.com/books` namespace is specified so that the new child element is prepended using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#32](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_19_1.cs)]\n [!code-vb[XPathNavigatorMethods#32](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_19_1.vb)]\n [!code-cpp[XPathNavigatorMethods#32](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_19_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void PrependChild (System.Xml.XmlReader newChild);
    parameters:
    - id: newChild
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>新しい子ノード用の XML データに配置されているオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.PrependChild*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.XmlReader>オブジェクトがエラー状態または閉じています</xref:System.Xml.XmlReader>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.XmlReader> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているはことはできません新しい子ノードを付加できません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、<xref:System.Xml.XmlReader>オブジェクト パラメーターは整形式ではありません</xref:System.Xml.XmlReader>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)
  id: PrependChild(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: PrependChild(XPathNavigator)
  nameWithType: XPathNavigator.PrependChild(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "ノード内のノードを使用して現在のノードの子の一覧の先頭に新しい子ノードを作成、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されたオブジェクト。"
  remarks: "子ノードを付加することと、新しいノードが、現在のノードの子ノードのリストの先頭に追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初の子ノードが先頭に追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       PrependChild メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、 <xref:System.Xml.XPath.XPathNavigator>XML ノードのシーケンス オブジェクトを配置すると、シーケンス内のすべてのノードが追加されます</xref:System.Xml.XPath.XPathNavigator>。      -PrependChild メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -PrependChild メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is prepended to the beginning of the list of child elements of the first `book` element in the `contosoBooks.xml` file using the node contained in the <xref:System.Xml.XPath.XPathNavigator> object specified. The `http://www.contoso.com/books` namespace is specified so that the new child element is prepended using the same namespace as the XML document.  \n  \n [!code-cs[XPathNavigatorMethods#33](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_10_1.cs)]\n [!code-vb[XPathNavigatorMethods#33](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_10_1.vb)]\n [!code-cpp[XPathNavigatorMethods#33](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_10_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void PrependChild (System.Xml.XPath.XPathNavigator newChild);
    parameters:
    - id: newChild
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しい子ノードとして追加するノードに配置されているオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.PrependChild*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているはことはできません新しい子ノードを付加できません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)
  id: PrependChildElement(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: PrependChildElement(String,String,String,String)
  nameWithType: XPathNavigator.PrependChildElement(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.PrependChildElement(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "名前空間プレフィックス、ローカル名、および名前空間に指定された値で指定された URI を使用して現在のノードのノードの子の一覧の先頭に新しい子要素を作成します。"
  remarks: "子ノードを付加することと、新しいノードが、現在のノードの子ノードのリストの先頭に追加します。 たとえば、要素は、次の&3; つの子ノードが存在する場合は、最初の子ノードが先頭に追加されたノードになります。 子ノードが存在しない場合は、新しい子ノードが作成されます。       Namespace プレフィックスと URI の値を使用して取得できます、<xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>または<xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.LookupNamespace%2A></xref:System.Xml.XPath.XPathNavigator.LookupPrefix%2A>。 次の構文先頭のスコープに名前空間を使用して、子要素が追加など、 `xmlns:bk=&quot;http://www.contoso.com/books&quot;`:```   navigator.PrependChildElement(navigator.Prefix, &quot;pages&quot;, LookupNamespaceURI(navigator.Prefix), String.Empty)   ```こうと、新しい子`<bk:pages/>`要素。       PrependChildElement メソッドの使用時に考慮すべき重要な注意事項を次に示します。      場合、指定された名前空間プレフィックスは`null`または<xref:System.String.Empty?displayProperty=fullName>、現在の名前空間のスコープ内から新しい要素の URI 名前空間のプレフィックスを取得し、</xref:System.String.Empty?displayProperty=fullName> 。 URI が現在のスコープで指定された名前空間に割り当てられている名前空間プレフィックスがない、し、名前空間プレフィックスが自動的に生成されます。      -PrependChildElement メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -PrependChildElement メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "In the following example, a new `pages` child element is prepended to the beginning of the list of child elements of the first `book` element in the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#34](~/add/codesnippet/csharp/4c6c6f27-ac50-41dd-9f8b-_1.cs)]\n [!code-vb[XPathNavigatorMethods#34](~/add/codesnippet/visualbasic/4c6c6f27-ac50-41dd-9f8b-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#34](~/add/codesnippet/cpp/4c6c6f27-ac50-41dd-9f8b-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void PrependChildElement (string prefix, string localName, string namespaceURI, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "新しい子要素 (存在する場合) の名前空間プレフィックス。"
    - id: localName
      type: System.String
      description: "新しい子要素 (存在する場合) のローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間 URI (存在する場合) は、新しい子要素です。 <xref:System.String>および<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>は同等です。</xref:System.String>"
    - id: value
      type: System.String
      description: "新しい子要素の値。 場合<xref:System.String>または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>を渡すと、空の要素を作成します</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.PrependChildElement*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "現在のノード、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>が配置されているはことはできません新しい子ノードを付加できません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ReadSubtree
  id: ReadSubtree
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ReadSubtree()
  nameWithType: XPathNavigator.ReadSubtree()
  fullName: System.Xml.XPath.XPathNavigator.ReadSubtree()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "返します、 <xref:System.Xml.XmlReader>、現在のノードとその子ノードを含むオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "ときに<xref:System.Xml.XmlReader>、現在のノードとその子ノード、 <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReader.ReadState%2A> <xref:System.Xml.ReadState>.</xref:System.Xml.ReadState>にプロパティが設定されている</xref:System.Xml.XmlReader.ReadState%2A>オブジェクトの</xref:System.Xml.XmlReader>オブジェクトを作成</xref:System.Xml.XmlReader>する ときに<xref:System.Xml.XmlReader>オブジェクトの<xref:System.Xml.XmlReader.Read%2A>メソッドは、最初に、 <xref:System.Xml.XmlReader> <xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の現在のノードに移動</xref:System.Xml.XmlReader></xref:System.Xml.XmlReader.Read%2A></xref:System.Xml.XmlReader>する 新しい<xref:System.Xml.XmlReader>オブジェクトが XML ツリーの末尾に到達するまで読み取りを続行します</xref:System.Xml.XmlReader>。 この時点で、<xref:System.Xml.XmlReader.Read%2A>メソッドを返します`false`し、<xref:System.Xml.XmlReader>オブジェクトの<xref:System.Xml.XmlReader.ReadState%2A>プロパティが<xref:System.Xml.ReadState>。</xref:System.Xml.ReadState> </xref:System.Xml.XmlReader.ReadState%2A> </xref:System.Xml.XmlReader> </xref:System.Xml.XmlReader.Read%2A> 。      > [!NOTE] ><xref:System.Xml.XmlReader>オブジェクトでは<xref:System.Xml.XPath.XPathNavigator>.</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません</xref:System.Xml.XmlReader>の位置を変更します。       現在のノードのスコープ内の名前空間の Namespace 宣言に指定された XML ストリームに挿入されません、<xref:System.Xml.XmlReader>オブジェクト</xref:System.Xml.XmlReader>。      > [!NOTE] > この動作は、<xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.WriteSubtree%2A>。       このメソッドを作成、<xref:System.Xml.XmlReader>特定リーダーの設定と、このメソッドを使用してモジュール オブジェクトを持たないこれらの設定を制御します</xref:System.Xml.XmlReader>。 たとえば、このメソッドから返されたリーダーは、データ型定義 (Dtd) の処理を禁止します。 <xref:System.Xml.XmlException>。</xref:System.Xml.XmlException> 、エラーをスローする場合は、リーダーは、DTD を使用するファイルの読み取りを試みると、 例外のメッセージがされる`Unexpected DTD declaration`です。       この動作を変更する<xref:System.Xml.XmlResolver><xref:System.Xml.XmlReader>目的の<xref:System.Xml.XmlReaderSettings>。</xref:System.Xml.XmlReaderSettings></xref:System.Xml.XmlReader>を返す</xref:System.Xml.XmlResolver>のカスタム実装することで"
  example:
  - "The following example illustrates using the ReadSubtree method on the first `book` element of the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#35](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_33_1.cs)]\n [!code-vb[XPathNavigatorMethods#35](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_33_1.vb)]\n [!code-cpp[XPathNavigatorMethods#35](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_33_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlReader ReadSubtree ();
    parameters: []
    return:
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>、現在のノードとその子ノードを含むオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.ReadSubtree*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素ノードまたはルート ノードに配置されていません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)
  id: ReplaceRange(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ReplaceRange(XPathNavigator)
  nameWithType: XPathNavigator.ReplaceRange(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceRange(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードから指定されたノードの兄弟ノードの範囲を置き換えます。"
  remarks: "ReplaceRange メソッドは、現在のノードからノードを兄弟の範囲に置き換えて、<xref:System.Xml.XPath.XPathNavigator>によって指定されたノード (包括) に配置されて、 <xref:System.Xml.XPath.XPathNavigator>(包括) のパラメーターです</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator>。      > [!NOTE] > まで置換範囲が挿入されていない、<xref:System.Xml.XmlWriter.Close%2A>のメソッド、<xref:System.Xml.XmlWriter>オブジェクトが呼び出されます</xref:System.Xml.XmlWriter></xref:System.Xml.XmlWriter.Close%2A>。"
  example:
  - "In the following example, the first and second `book` elements of the `contosoBooks.xml` file are replaced with a new empty `book` element using the ReplaceRange method.  \n  \n [!code-cs[XPathNavigatorMethods#53](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_22_1.cs)]\n [!code-vb[XPathNavigatorMethods#53](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_22_1.vb)]\n [!code-cpp[XPathNavigatorMethods#53](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_22_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XmlWriter ReplaceRange (System.Xml.XPath.XPathNavigator lastSiblingToReplace);
    parameters:
    - id: lastSiblingToReplace
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>置換対象の範囲内の最後の兄弟ノードに配置します。"
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクト置換の範囲を指定するために使用します</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.ReplaceRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;></xref> specified is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "置換する最後のノードは指定された現在のノードの有効な兄弟ノードいないは。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)
  id: ReplaceSelf(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ReplaceSelf(String)
  nameWithType: XPathNavigator.ReplaceSelf(String)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードを指定した文字列の内容に置き換えます。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>ReplaceSelf メソッドの完了時に新しいノードに配置し、返します`true`</xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>に配置されていません、新しいノード、ReplaceSelf メソッドの完了後に XML の入力が<xref:System.String.Empty>いる場合、<xref:System.Xml.XPath.XPathNavigator>がいずれかの配置されている次の兄弟ノードまたは親ノードの場合は、置き換えられたノードに次の兄弟ノードがないと、ReplaceSelf を返します`false`</xref:System.Xml.XPath.XPathNavigator></xref:System.String.Empty></xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      場合、XML データ文字列形式が正しくありません例外がスローされ、このメソッドの結果は呼び出すことと同じよりも<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>現在のノードにします</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。      すべてのノードを追加する場合は、XML 文字列には、複数のノードが含まれています、および<xref:System.Xml.XPath.XPathNavigator>、一連のノードの最初のノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドはありません、<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。"
  example:
  - "In the following example the `price` element in the `contosoBooks.xml` file is replaced by a new `pages` element.  \n  \n [!code-cs[XPathNavigatorMethods#36](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_21_1.cs)]\n [!code-vb[XPathNavigatorMethods#36](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_21_1.vb)]\n [!code-cpp[XPathNavigatorMethods#36](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_21_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void ReplaceSelf (string newNode);
    parameters:
    - id: newNode
      type: System.String
      description: "新しいノードの XML データ文字列。"
  overload: System.Xml.XPath.XPathNavigator.ReplaceSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "XML 文字列パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素、テキスト、処理命令、またはコメント ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML 文字列パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)
  id: ReplaceSelf(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ReplaceSelf(XmlReader)
  nameWithType: XPathNavigator.ReplaceSelf(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(XmlReader)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードの内容に置き換えます、<xref:System.Xml.XmlReader>指定されたオブジェクト</xref:System.Xml.XmlReader>。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>ReplaceSelf メソッドの完了時に新しいノードに配置し、返します`true`</xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>に配置されていません、新しいノード、ReplaceSelf メソッドの完了後に XML の入力が<xref:System.String.Empty>いる場合、<xref:System.Xml.XPath.XPathNavigator>がいずれかの配置されている次の兄弟ノードまたは親ノードの場合は、置き換えられたノードに次の兄弟ノードがないと、ReplaceSelf を返します`false`</xref:System.Xml.XPath.XPathNavigator></xref:System.String.Empty></xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      場合、XML データ文字列形式が正しくありません例外がスローされ、このメソッドの結果は呼び出すことと同じよりも<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>現在のノードにします</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。      すべてのノードを追加する場合は、XML 文字列には、複数のノードが含まれています、および<xref:System.Xml.XPath.XPathNavigator>、一連のノードの最初のノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドはありません、<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。"
  example:
  - "In the following example the `price` element in the `contosoBooks.xml` file is replaced by a new `pages` element.  \n  \n [!code-cs[XPathNavigatorMethods#37](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_16_1.cs)]\n [!code-vb[XPathNavigatorMethods#37](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_16_1.vb)]\n [!code-cpp[XPathNavigatorMethods#37](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_16_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void ReplaceSelf (System.Xml.XmlReader newNode);
    parameters:
    - id: newNode
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>新しいノード用の XML データに配置されているオブジェクト</xref:System.Xml.XmlReader>。"
  overload: System.Xml.XPath.XPathNavigator.ReplaceSelf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Xml.XmlReader>オブジェクトがエラー状態または閉じています</xref:System.Xml.XmlReader>。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Xml.XmlReader>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Xml.XmlReader> 。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素、テキスト、処理命令、またはコメント ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、<xref:System.Xml.XmlReader>オブジェクト パラメーターは整形式ではありません</xref:System.Xml.XmlReader>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)
  id: ReplaceSelf(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ReplaceSelf(XPathNavigator)
  nameWithType: XPathNavigator.ReplaceSelf(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(XPathNavigator)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードの内容に置き換えます、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されたオブジェクト。"
  remarks: "<xref:System.Xml.XPath.XPathNavigator>ReplaceSelf メソッドの完了時に新しいノードに配置し、返します`true`</xref:System.Xml.XPath.XPathNavigator>。 <xref:System.Xml.XPath.XPathNavigator>に配置されていません、新しいノード、ReplaceSelf メソッドの完了後に XML の入力が<xref:System.String.Empty>いる場合、<xref:System.Xml.XPath.XPathNavigator>がいずれかの配置されている次の兄弟ノードまたは親ノードの場合は、置き換えられたノードに次の兄弟ノードがないと、ReplaceSelf を返します`false`</xref:System.Xml.XPath.XPathNavigator></xref:System.String.Empty></xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドが有効な場合にのみ、<xref:System.Xml.XPath.XPathNavigator>要素、テキスト、処理命令、またはコメント ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      場合、XML データ文字列形式が正しくありません例外がスローされ、このメソッドの結果は呼び出すことと同じよりも<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>現在のノードにします</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。      すべてのノードを追加する場合は、XML 文字列には、複数のノードが含まれています、および<xref:System.Xml.XPath.XPathNavigator>、一連のノードの最初のノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      -ReplaceSelf メソッドはありません、<xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.DeleteSelf%2A>。"
  example:
  - "In the following example the `price` element in the `contosoBooks.xml` file is replaced by a new `pages` element.  \n  \n [!code-cs[XPathNavigatorMethods#38](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_15_1.cs)]\n [!code-vb[XPathNavigatorMethods#38](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_15_1.vb)]\n [!code-cpp[XPathNavigatorMethods#38](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_15_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void ReplaceSelf (System.Xml.XPath.XPathNavigator newNode);
    parameters:
    - id: newNode
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>新しいノードに配置されているオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.ReplaceSelf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素、テキスト、処理命令、またはコメント ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "XML の内容、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト パラメーターは整形式ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XPathNavigator.SchemaInfo
  fullName: System.Xml.XPath.XPathNavigator.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "スキーマ検証の結果は、現在のノードに割り当てられているスキーマ情報を取得します。"
  remarks: "スキーマ情報を設定することができます<xref:System.Xml.XPath.XPathNodeType>、 <xref:System.Xml.XPath.XPathNodeType>、または<xref:System.Xml.XPath.XPathNodeType>以外のノード`null`<xref:System.Xml.XPath.XPathNavigator.ValueType%2A>.</xref:System.Xml.XPath.XPathNavigator.ValueType%2A> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> 現在のノードが、上記の種類のノードの&1; つでない場合、または場合、<xref:System.Xml.XPath.XPathNavigator>インスタンスは、スキーマ情報を報告しない SchemaInfo プロパティを返します`null`</xref:System.Xml.XPath.XPathNavigator>。"
  syntax:
    content: public virtual System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "<xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref>を現在のノードのスキーマ情報を含むオブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Select(System.String)
  id: Select(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Select(String)
  nameWithType: XPathNavigator.Select(String)
  fullName: System.Xml.XPath.XPathNavigator.Select(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XPath 式を使用し、ノード セットを選択します。"
  remarks: "選択範囲のコンテキストの位置は、<xref:System.Xml.XPath.XPathNavigator>このメソッドが呼び出されます</xref:System.Xml.XPath.XPathNavigator>。 このメソッドを呼び出した後、<xref:System.Xml.XPath.XPathNodeIterator>返される選択したノードのセットを表します</xref:System.Xml.XPath.XPathNodeIterator>。 使用して<xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>のメソッド、<xref:System.Xml.XPath.XPathNodeIterator>選択されたノード セットを反復処理する</xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>。       次の c# コードは、選択したノード セットを反復処理します。      ```   XPathNodeIterator iterator = nav.Select(&quot;/bookstore/book&quot;);   while (iterator.MoveNext())   {       Console.WriteLine(Iterator.Current.Name);   }   ```Select メソッドを使用する際に考慮する重要な注意事項を次に示します。      に<xref:System.Xml.XPath.XPathNavigator><xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>内を移動するオブジェクトのナビゲーション方法</xref:System.Xml.XPath.XPathNavigator>のいずれかを使用することもできます。 <xref:System.Xml.XPath.XPathNavigator>ナビゲーション メソッドは<xref:System.Xml.XPath.XPathNodeIterator>。</xref:System.Xml.XPath.XPathNodeIterator>で選択したノードに依存しません。</xref:System.Xml.XPath.XPathNavigator>      の Select メソッドへ今後の呼び出しを返す新しい<xref:System.Xml.XPath.XPathNodeIterator>セットを指す、選択したノードの新しい選択呼び出しに一致するオブジェクト</xref:System.Xml.XPath.XPathNodeIterator>。 2 つ<xref:System.Xml.XPath.XPathNodeIterator>オブジェクトが完全に互いに独立しています</xref:System.Xml.XPath.XPathNodeIterator>。      XPath 式は、名前空間の解決を必要とする場合を使用して、<xref:System.Xml.XPath.XPathNavigator.Select%2A>過負荷、受け取り、 <xref:System.Xml.XPath.XPathExpression>、引数として</xref:System.Xml.XPath.XPathExpression></xref:System.Xml.XPath.XPathNavigator.Select%2A>。      -このメソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example uses the Select method to select a node set.  \n  \n [!code-cs[XPathNavigatorMethods#39](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_0_1.cs)]\n [!code-vb[XPathNavigatorMethods#39](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_0_1.vb)]\n [!code-cpp[XPathNavigatorMethods#39](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_0_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "A <xref:System.String>XPath 式を表すします</xref:System.String>。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択されたノード セットをポイントします。"
  overload: System.Xml.XPath.XPathNavigator.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式には、エラーが含まれているか、戻り値の型がノード セットではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)
  id: Select(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Select(XPathExpression)
  nameWithType: XPathNavigator.Select(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Select(XPathExpression)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定されたを使用して設定ノードを選択する<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>です。"
  remarks: "選択範囲のコンテキストの位置は、<xref:System.Xml.XPath.XPathNavigator>このメソッドが呼び出されたとき</xref:System.Xml.XPath.XPathNavigator>。 このメソッドを呼び出した後、<xref:System.Xml.XPath.XPathNodeIterator>返される選択したノードのセットを表します</xref:System.Xml.XPath.XPathNodeIterator>。 使用して<xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>上、<xref:System.Xml.XPath.XPathNodeIterator>選択されたノード セットを反復処理する</xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A>。       次の c# コードは、選択したノード セットを反復処理します。      ```   XPathNodeIterator ni = nav.Select(expr);   while (ni.MoveNext())   {       Console.WriteLine(ni.Current.Name);   }   ```重要な注意事項を使用する場合は、次のとおり、<xref:System.Xml.XPath.XPathNavigator.Select%2A>メソッド</xref:System.Xml.XPath.XPathNavigator.Select%2A>。      に<xref:System.Xml.XPath.XPathNavigator><xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>内を移動するオブジェクトのナビゲーション方法</xref:System.Xml.XPath.XPathNavigator>のいずれかを使用することもできます。 <xref:System.Xml.XPath.XPathNavigator>ナビゲーション メソッドは<xref:System.Xml.XPath.XPathNodeIterator>。</xref:System.Xml.XPath.XPathNodeIterator>で選択したノードに依存しません。</xref:System.Xml.XPath.XPathNavigator>      将来の呼び出し、<xref:System.Xml.XPath.XPathNavigator.Select%2A>メソッドを返す新しい<xref:System.Xml.XPath.XPathNodeIterator>新しいに一致するノードの選択したセットを指すオブジェクトを<xref:System.Xml.XPath.XPathNavigator.Select%2A>呼び出します</xref:System.Xml.XPath.XPathNavigator.Select%2A></xref:System.Xml.XPath.XPathNodeIterator></xref:System.Xml.XPath.XPathNavigator.Select%2A>。 2 つ<xref:System.Xml.XPath.XPathNodeIterator>オブジェクトが完全に互いに独立しています</xref:System.Xml.XPath.XPathNodeIterator>。      場合、<xref:System.Xml.XPath.XPathExpression>に名前空間の解決、プレフィックスと名前空間 URI のペアを追加する必要がありますが必要です、 <xref:System.Xml.XmlNamespaceManager>、および<xref:System.Xml.XPath.XPathExpression.SetContext%2A>を指定するメソッドを呼び出す必要があります、<xref:System.Xml.XmlNamespaceManager>名前空間の解決に使用する</xref:System.Xml.XmlNamespaceManager></xref:System.Xml.XPath.XPathExpression.SetContext%2A></xref:System.Xml.XmlNamespaceManager></xref:System.Xml.XPath.XPathExpression>。       たとえば、ドキュメントには、次の XML ノードが含まれています。      ```   <bookstore xmlns:bk=&quot;urn:samples&quot;>       <book bk:ISBN=&quot;1-325-0980&quot;>           <title>Pride And Prejudice</title>       </book>   </bookstore>   ```この場合は、次の c# コードを選択、`bk:ISBN`ノード。      ```   XPathExpression expr = nav.Compile(&quot;book/@bk:ISBN&quot;);   XmlNamespaceManager mngr = new XmlNamespaceManager(new NameTable());   mngr.AddNamespace(&quot;bk&quot;,&quot;urn:samples&quot;);   expr.SetContext(mngr);   XPathNodeIterator ni = nav.Select(expr);   ```      > [!NOTE]> 場合、 <xref:System.Xml.XPath.XPathExpression>、プレフィックスを含まない名前空間 URI が空の名前空間であると見なされます</xref:System.Xml.XPath.XPathExpression>。 XML には、既定の名前空間が含まれている必要がありますを使用する、<xref:System.Xml.XPath.XPathExpression.SetContext%2A>メソッドを提供し、<xref:System.Xml.XmlNamespaceManager>プレフィックスと既定の名前空間を処理する名前空間 URI を格納している</xref:System.Xml.XmlNamespaceManager></xref:System.Xml.XPath.XPathExpression.SetContext%2A>。       たとえば、次の XML があるとします。      ```   <bookstore xmlns=&quot;http://www.lucernepublishing.com&quot;>       <book>           <title>Pride And Prejudice</title>       </book>   </bookstore>   ```ここでは、次の c# コードがすべての book ノードを選択します```   XmlNamespaceManager nsmgr = new XmlNamespaceManager(nav.NameTable);   nsmgr.AddNamespace(&quot;ab&quot;, &quot;http://www.lucernepublishing.com&quot;);   XPathExpression expr;   expr = nav.Compile(&quot;//ab:book&quot;);   expr.SetContext(nsmgr);   XPathNodeIterator ni = nav.Select(expr);   ```このメソッドは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態に影響を与えません。"
  example:
  - "The following example uses the Select method to select a node set.  \n  \n [!code-cs[XPathNavigatorMethods#40](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_12_1.cs)]\n [!code-vb[XPathNavigatorMethods#40](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_12_1.vb)]\n [!code-cpp[XPathNavigatorMethods#40](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_12_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator Select (System.Xml.XPath.XPathExpression expr);
    parameters:
    - id: expr
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>コンパイル済み XPath クエリを含むオブジェクト。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択されたノード セットを指し示します。"
  overload: System.Xml.XPath.XPathNavigator.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式には、エラーが含まれているか、戻り値の型がノード セットではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)
  id: Select(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: Select(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.Select(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.Select(String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定された XPath 式を使用して設定ノードを選択する、<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスを解決するのには指定されたオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
  remarks: ''
  example:
  - "The following example illustrates selecting a node set using the Select method with the <xref:System.Xml.XmlNamespaceManager> object specified to resolve namespace prefixes in the XPath expression.  \n  \n [!code-cs[XPathNavigatorMethods#41](~/add/codesnippet/csharp/8f97f71d-30c6-43d1-888b-_1.cs)]\n [!code-vb[XPathNavigatorMethods#41](~/add/codesnippet/visualbasic/8f97f71d-30c6-43d1-888b-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#41](~/add/codesnippet/cpp/8f97f71d-30c6-43d1-888b-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator Select (string xpath, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: xpath
      type: System.String
      description: "A <xref:System.String>XPath 式を表すします</xref:System.String>。"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスの解決に使用されるオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択されたノード セットを指し示します。"
  overload: System.Xml.XPath.XPathNavigator.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath 式には、エラーが含まれているか、戻り値の型がノード セットではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath 式が正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)
  id: SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectAncestors(XPathNodeType,Boolean)
  nameWithType: XPathNavigator.SelectAncestors(XPathNodeType,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectAncestors(XPathNodeType,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "一致する現在のノードのすべての先祖ノードを選択<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref>です。"
  remarks: "SelectAncestors メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - For an example of selecting ancestor nodes, see <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A?displayProperty=fullName>.
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (System.Xml.XPath.XPathNodeType type, bool matchSelf);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>先祖ノードのです。"
    - id: matchSelf
      type: System.Boolean
      description: "コンテキスト ノードの選択範囲に含める、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。 返されたノードは、ドキュメントの逆順になっています。"
  overload: System.Xml.XPath.XPathNavigator.SelectAncestors*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)
  id: SelectAncestors(System.String,System.String,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectAncestors(String,String,Boolean)
  nameWithType: XPathNavigator.SelectAncestors(String,String,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectAncestors(String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "指定されたローカル名と名前空間 URI が現在のノードのすべての先祖ノードを選択します。"
  remarks: "場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`name`パラメーターでは、URI が選択されている指定された名前空間に属しているすべての先祖ノード</xref:System.String.Empty?displayProperty=fullName>。 場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`namespaceURI`パラメーターでは、指定されたローカル名と名前空間なしに属するノードが選択されているすべての先祖</xref:System.String.Empty?displayProperty=fullName>。 場合<xref:System.String.Empty?displayProperty=fullName>が指定されているは、ローカル名と名前空間 URI、名前空間なしに属しているすべての先祖ノードの両方がオンにします</xref:System.String.Empty?displayProperty=fullName>。       SelectAncestors メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - "The following example illustrates selecting ancestor, child, and descendant nodes.  \n  \n [!code-cs[XPathNavigatorMethods#42](~/add/codesnippet/csharp/8b0fe185-94cf-4e37-9595-_1.cs)]\n [!code-vb[XPathNavigatorMethods#42](~/add/codesnippet/visualbasic/8b0fe185-94cf-4e37-9595-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#42](~/add/codesnippet/cpp/8b0fe185-94cf-4e37-9595-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectAncestors (string name, string namespaceURI, bool matchSelf);
    parameters:
    - id: name
      type: System.String
      description: "先祖ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間の先祖ノードの URI。"
    - id: matchSelf
      type: System.Boolean
      description: "コンテキスト ノードの選択範囲に含める、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。 返されたノードは、ドキュメントの逆順になっています。"
  overload: System.Xml.XPath.XPathNavigator.SelectAncestors*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>パラメーターとして渡すことはできません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)
  id: SelectChildren(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectChildren(XPathNodeType)
  nameWithType: XPathNavigator.SelectChildren(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.SelectChildren(XPathNodeType)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "一致する現在のノードのすべての子ノードを選択<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref>です。"
  remarks: "SelectChildren メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - For an example of selecting ancestor, child and descendant nodes, see <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (System.Xml.XPath.XPathNodeType type);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>子ノードのです。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。"
  overload: System.Xml.XPath.XPathNavigator.SelectChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)
  id: SelectChildren(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectChildren(String,String)
  nameWithType: XPathNavigator.SelectChildren(String,String)
  fullName: System.Xml.XPath.XPathNavigator.SelectChildren(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "ローカル名と名前空間 URI が指定されている現在のノードのすべての子ノードを選択します。"
  remarks: "場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`name`パラメーターでは、URI が選択されている指定された名前空間に属しているすべての子ノード</xref:System.String.Empty?displayProperty=fullName>。 場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`namespaceURI`パラメーターでは、指定されたローカル名と名前空間なしに属するノードが選択されているすべての子</xref:System.String.Empty?displayProperty=fullName>。 両方のローカル名と名前空間 URI パラメーターがある場合<xref:System.String.Empty?displayProperty=fullName>、名前空間なしに属しているすべての子ノードを選択します</xref:System.String.Empty?displayProperty=fullName>。       SelectChildren メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - For an example of selecting ancestor, child and descendant nodes, see <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectChildren (string name, string namespaceURI);
    parameters:
    - id: name
      type: System.String
      description: "子ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間は、子ノードの URI であります。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。"
  overload: System.Xml.XPath.XPathNavigator.SelectChildren*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>パラメーターとして渡すことはできません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)
  id: SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectDescendants(XPathNodeType,Boolean)
  nameWithType: XPathNavigator.SelectDescendants(XPathNodeType,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectDescendants(XPathNodeType,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "一致する現在のノードのすべての子孫ノードを選択<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;></xref>です。"
  remarks: "SelectDescendants メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - For an example of selecting ancestor, child and descendant nodes, see <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (System.Xml.XPath.XPathNodeType type, bool matchSelf);
    parameters:
    - id: type
      type: System.Xml.XPath.XPathNodeType
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeType&quot;> </xref>子孫ノードのです。"
    - id: matchSelf
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンテキスト ノードの選択範囲に含めます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。"
  overload: System.Xml.XPath.XPathNavigator.SelectDescendants*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)
  id: SelectDescendants(System.String,System.String,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectDescendants(String,String,Boolean)
  nameWithType: XPathNavigator.SelectDescendants(String,String,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectDescendants(String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "ローカル名および名前空間に指定された URI の現在のノードのすべての子孫ノードを選択します。"
  remarks: "場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`name`パラメーターでは、URI が選択されている指定された名前空間に属しているすべての子孫ノード</xref:System.String.Empty?displayProperty=fullName>。 場合<xref:System.String.Empty?displayProperty=fullName>として指定されて、`namespaceURI`パラメーターで指定されたローカル名と名前空間なしに属しているすべての子孫ノードを選択します</xref:System.String.Empty?displayProperty=fullName>。 両方のローカル名と名前空間 URI パラメーターがある場合<xref:System.String.Empty?displayProperty=fullName>、名前空間なしに属しているすべての子孫ノードを選択します</xref:System.String.Empty?displayProperty=fullName>。       子は、子、または子の子とです。したがって、選択したノードには、属性または名前空間ノードは含まれません。       SelectDescendants メソッドには影響しません<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の状態"
  example:
  - For an example of selecting ancestor, child, and descendant nodes, see <xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A>.
  syntax:
    content: public virtual System.Xml.XPath.XPathNodeIterator SelectDescendants (string name, string namespaceURI, bool matchSelf);
    parameters:
    - id: name
      type: System.String
      description: "子孫ノードのローカル名。"
    - id: namespaceURI
      type: System.String
      description: "名前空間の子孫ノードの URI。"
    - id: matchSelf
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンテキスト ノードの選択範囲に含めます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Xml.XPath.XPathNodeIterator
      description: "<xref href=&quot;System.Xml.XPath.XPathNodeIterator&quot;> </xref>選択したノードを格納しています。"
  overload: System.Xml.XPath.XPathNavigator.SelectDescendants*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>パラメーターとして渡すことはできません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)
  id: SelectSingleNode(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectSingleNode(String)
  nameWithType: XPathNavigator.SelectSingleNode(String)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "内の&1; つのノードを選択、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>の指定された XPath クエリを使用します。"
  remarks: "SelectSingleNode メソッド内の XPath クエリに一致する最初のノードを選択する、<xref:System.Xml.XPath.XPathNavigator>オブジェクト</xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "The following example selects a single node from the <xref:System.Xml.XPath.XPathNavigator> based on the XPath query specified.  \n  \n [!code-cs[XPathNavigatorMethods#43](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_30_1.cs)]\n [!code-vb[XPathNavigatorMethods#43](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_30_1.vb)]\n [!code-cpp[XPathNavigatorMethods#43](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_30_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath);
    parameters:
    - id: xpath
      type: System.String
      description: "A <xref:System.String>XPath 式を表すします</xref:System.String>。"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> XPath の最初の一致するノードを格納しているオブジェクト クエリの指定、それ以外の<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>クエリ結果がない場合。"
  overload: System.Xml.XPath.XPathNavigator.SelectSingleNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath クエリでエラーが発生しました、または XPath 式の戻り値の型がノードではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath クエリが正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)
  id: SelectSingleNode(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectSingleNode(XPathExpression)
  nameWithType: XPathNavigator.SelectSingleNode(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(XPathExpression)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "内の&1; つのノードを選択、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定して<xref href=&quot;System.Xml.XPath.XPathExpression&quot;></xref>オブジェクト。"
  remarks: "SelectSingleNode メソッド<xref:System.Xml.XPath.XPathExpression><xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>内のオブジェクト</xref:System.Xml.XPath.XPathExpression>に含まれているコンパイル済み XPath クエリに一致する最初のノードを選択します。"
  example:
  - "The following example selects a single node from the <xref:System.Xml.XPath.XPathNavigator> based on the XPath query contained in the <xref:System.Xml.XPath.XPathExpression>.  \n  \n [!code-cs[XPathNavigatorMethods#44](~/add/codesnippet/csharp/f80aab2d-d66b-4a6d-b36e-_1.cs)]\n [!code-vb[XPathNavigatorMethods#44](~/add/codesnippet/visualbasic/f80aab2d-d66b-4a6d-b36e-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#44](~/add/codesnippet/cpp/f80aab2d-d66b-4a6d-b36e-_1.cpp)]  \n  \n The example takes the `books.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>   \n<bookstore>  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (System.Xml.XPath.XPathExpression expression);
    parameters:
    - id: expression
      type: System.Xml.XPath.XPathExpression
      description: "<xref href=&quot;System.Xml.XPath.XPathExpression&quot;> </xref>コンパイル済み XPath クエリを含むオブジェクト。"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されている場合、XPath の最初の一致するノードを格納しているオブジェクトがクエリ<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>クエリ結果がない場合。"
  overload: System.Xml.XPath.XPathNavigator.SelectSingleNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath クエリでエラーが発生しました、または XPath 式の戻り値の型がノードではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath クエリが正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)
  id: SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SelectSingleNode(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.SelectSingleNode(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(String,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "内の&1; つのノードを選択、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクトで指定された XPath クエリを使用して、<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスを解決するのには指定されたオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
  remarks: "SelectSingleNode メソッドでは、指定された XPath クエリに一致する最初のノードを選択します。 SelectSingleNode メソッドを使用して、<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスを解決するオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。      > [!NOTE] > で XPath クエリで、すべての名前空間を付ける必要があります。 名前空間プレフィックスを追加する必要がありますも XML ドキュメントでは、既定の名前空間を使用する場合、<xref:System.Xml.IXmlNamespaceResolver>オブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
  example:
  - "The following example selects a single node from the <xref:System.Xml.XPath.XPathNavigator> object based on the XPath query specified and uses the <xref:System.Xml.XmlNamespaceManager> object specified to resolve namespace prefixes in the XPath query.  \n  \n [!code-cs[XPathNavigatorMethods#45](~/add/codesnippet/csharp/b42e187a-8c51-41fe-acd8-_1.cs)]\n [!code-vb[XPathNavigatorMethods#45](~/add/codesnippet/visualbasic/b42e187a-8c51-41fe-acd8-_1.vb)]\n [!code-cpp[XPathNavigatorMethods#45](~/add/codesnippet/cpp/b42e187a-8c51-41fe-acd8-_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual System.Xml.XPath.XPathNavigator SelectSingleNode (string xpath, System.Xml.IXmlNamespaceResolver resolver);
    parameters:
    - id: xpath
      type: System.String
      description: "A <xref:System.String>XPath 式を表すします</xref:System.String>。"
    - id: resolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>XPath クエリでは名前空間プレフィックスの解決に使用されるオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されている場合、XPath の最初の一致するノードを格納しているオブジェクトがクエリ<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>クエリ結果がない場合。"
  overload: System.Xml.XPath.XPathNavigator.SelectSingleNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "XPath クエリでエラーが発生しました、または XPath 式の戻り値の型がノードではありません。"
  - type: System.Xml.XPath.XPathException
    commentId: T:System.Xml.XPath.XPathException
    description: "XPath クエリが正しくありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)
  id: SetTypedValue(System.Object)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SetTypedValue(Object)
  nameWithType: XPathNavigator.SetTypedValue(Object)
  fullName: System.Xml.XPath.XPathNavigator.SetTypedValue(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードの型指定された値を設定します。"
  remarks: "ときに、<xref:System.Xml.XmlDocument>オブジェクトがスキーマ検証の結果として作成された<xref:System.Xml.XmlReader>オブジェクト、SetTypedValue メソッドに指定された値は、XML ドキュメントの XML スキーマ定義言語 (XSD) スキーマに対して検証します</xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument>。 指定された値が XML ドキュメントのスキーマに従った有効な場合、<xref:System.Xml.Schema.XmlSchemaException>がスローされます</xref:System.Xml.Schema.XmlSchemaException>。       SetTypedValue メソッドは、有効な場合にのみ、 <xref:System.Xml.XPath.XPathNavigator>、要素または属性ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。"
  example:
  - "In the following example, the SetTypedValue method is used to update all `price` elements in the `contosoBooks.xml` file using the <xref:System.Xml.XmlNamespaceManager> object to resolve namespace prefixes in the XPath expression.  \n  \n [!code-cs[XPathNavigatorMethods#46](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_28_1.cs)]\n [!code-vb[XPathNavigatorMethods#46](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_28_1.vb)]\n [!code-cpp[XPathNavigatorMethods#46](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_28_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void SetTypedValue (object typedValue);
    parameters:
    - id: typedValue
      type: System.Object
      description: "新しいノードの値を入力します。"
  overload: System.Xml.XPath.XPathNavigator.SetTypedValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>指定されたオブジェクトの種類をサポートしていません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "指定された値にすることはできません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>要素または属性ノードに配置されていません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.SetValue(System.String)
  id: SetValue(System.String)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: SetValue(String)
  nameWithType: XPathNavigator.SetValue(String)
  fullName: System.Xml.XPath.XPathNavigator.SetValue(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードの値を設定します。"
  remarks: "-   場合、<xref:System.Xml.XPath.XPathNavigator>新しい文字列値を含むテキスト ノードで SetValue メソッドは、子要素を呼び出して複雑なコンテンツ (子要素) を持つ要素ノードに配置されています</xref:System.Xml.XPath.XPathNavigator>。      SetValue メソッドには、ルート ノードまたは名前空間ノードを更新できません。"
  example:
  - "In the following example, the SetValue method is used to update all `price` elements in the `contosoBooks.xml` file using the <xref:System.Xml.XmlNamespaceManager> object to resolve namespace prefixes in the XPath expression.  \n  \n [!code-cs[XPathNavigatorMethods#47](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_35_1.cs)]\n [!code-vb[XPathNavigatorMethods#47](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_35_1.vb)]\n [!code-cpp[XPathNavigatorMethods#47](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_35_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void SetValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "ノードの新しい値。"
  overload: System.Xml.XPath.XPathNavigator.SetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Value パラメーターが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>ルート ノード、名前空間ノード、または指定したが配置されている値が無効です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>編集をサポートしません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: XPathNavigator.System.ICloneable.Clone()
  fullName: System.Xml.XPath.XPathNavigator.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "新しいコピーを作成、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Xml.XPath.XPathNavigator>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Xml.XPath.XPathNavigator>。       このメンバーの説明、 <xref:System.Xml.XPath.XPathNavigator.Clone%2A?displayProperty=fullName>。</xref:System.Xml.XPath.XPathNavigator.Clone%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しいコピー、 <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref>オブジェクト。"
  overload: System.Xml.XPath.XPathNavigator.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ToString
  id: ToString
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ToString()
  nameWithType: XPathNavigator.ToString()
  fullName: System.Xml.XPath.XPathNavigator.ToString()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードのテキスト値を取得します。"
  remarks: "ToString メソッドによって返される内容によって異なります、<xref:System.Xml.XPath.XPathNodeType>ノードの</xref:System.Xml.XPath.XPathNodeType>。      |XPathNodeType |プロパティの値 |  |-------------------|--------------------|  |<xref:System.Xml.XPath.XPathNodeType>|ルート ノードの<xref:System.Xml.XmlNode.InnerText%2A>|。  |<xref:System.Xml.XPath.XPathNodeType>|要素の<xref:System.Xml.XmlNode.InnerText%2A>|。  |<xref:System.Xml.XPath.XPathNodeType>|属性の値です |。  |<xref:System.Xml.XPath.XPathNodeType>|テキスト ノードのコンテンツ |。  |<xref:System.Xml.XPath.XPathNodeType>|ターゲットを含まない全体の内容 |。  |<xref:System.Xml.XPath.XPathNodeType>|コメントの内容 |。  |<xref:System.Xml.XPath.XPathNodeType>|マーク アップ間の空白 |。  |<xref:System.Xml.XPath.XPathNodeType>|混合コンテンツ モデル内の空白のマークアップ間に空白文字、`xml:space=&quot;preserve&quot;`スコープ |</xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XmlNode.InnerText%2A> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XmlNode.InnerText%2A> </xref:System.Xml.XPath.XPathNodeType> 。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>現在のノードのテキスト値を格納しています。"
  overload: System.Xml.XPath.XPathNavigator.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.TypedValue
  id: TypedValue
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: TypedValue
  nameWithType: XPathNavigator.TypedValue
  fullName: System.Xml.XPath.XPathNavigator.TypedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "最も適切な .NET Framework 型のボックス化されたオブジェクトとして現在のノードを取得します。"
  remarks: "属性と分割不可能な単純型または単純なテキスト コンテンツの要素が、TypedValue プロパティは、ボックス化された<xref:System.Object>最も適切な .NET Framework <xref:System.Type>。</xref:System.Type></xref:System.Object>を返します。 TypedValue プロパティが最も適切な .NET Framework <xref:System.Type>。</xref:System.Type>のオブジェクトの配列を返します要素または属性のコンテンツがリスト型の場合       次の表に、各<xref:System.Xml.XPath.XPathNodeType>。</xref:System.Xml.XPath.XPathNodeType>によって返される TypedValue      |XPathNodeType |返される TypedValue |  |-------------------|-------------------------|  |<xref:System.Xml.XPath.XPathNodeType>|返します、<xref:System.String>すべてを含むオブジェクト<xref:System.Xml.XPath.XPathNodeType>連結され、空白で区切られた、ドキュメントのノードの子孫です</xref:System.Xml.XPath.XPathNodeType></xref:System.String></xref:System.Xml.XPath.XPathNodeType>。 ドキュメントがあるないと、<xref:System.Xml.XPath.XPathNodeType>ノードの子、<xref:System.String.Empty?displayProperty=fullName>が返されます |。  |<xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.String.Empty?displayProperty=fullName></xref:System.Xml.XPath.XPathNodeType><br /><br /> (または型指定された単純なコンテンツ) |の<xref:System.Object><xref:System.Xml.XPath.XPathNodeType>。</xref:System.Xml.XPath.XPathNodeType>の型指定された値を表す</xref:System.Object>を返します<br /><br /> 場合、<xref:System.Xml.XPath.XPathNodeType>が、ノードの値は、オブジェクトの配列として公開し、XML スキーマの一覧のデータ型として定義されています</xref:System.Xml.XPath.XPathNodeType>。 各<xref:System.Object>配列内の要素の子の型指定された値が含まれています |。  |<xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.Object><br /><br /> (型指定されていない、混合、または複雑なコンテンツ) |返します、<xref:System.String>すべてを含むオブジェクト<xref:System.Xml.XPath.XPathNodeType>の子孫のノード、<xref:System.Xml.XPath.XPathNodeType>連結 (型指定された値の文字列表現を含む)、および空白で区切られた</xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.String>。 <xref:System.Xml.XPath.XPathNodeType>はすべて<xref:System.Xml.XPath.XPathNodeType>ノードの子を持たない場合<xref:System.String.Empty?displayProperty=fullName>が返されます |。  |<xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType></xref:System.String.Empty?displayProperty=fullName></xref:System.Xml.XPath.XPathNodeType></xref:System.Xml.XPath.XPathNodeType><br /><br /> (または型指定された単純なコンテンツ) |の<xref:System.Object><xref:System.Xml.XPath.XPathNodeType>。</xref:System.Xml.XPath.XPathNodeType>の型指定された値を表す</xref:System.Object>を返します <xref:System.Object>が .NET Framework とボックス化される<xref:System.Type>値</xref:System.Type></xref:System.Object>。<br /><br /> 場合、<xref:System.Xml.XPath.XPathNodeType>が定義されている XML スキーマの一覧のデータ型としてノードの値はオブジェクトの配列として公開します</xref:System.Xml.XPath.XPathNodeType>。 配列内の各<xref:System.Object>には、<xref:System.Xml.XPath.XPathNodeType>の子の型指定された値が含まれています |。  |<xref:System.Xml.XPath.XPathNodeType>|テキストを含む<xref:System.String>オブジェクトです |。  |<xref:System.Xml.XPath.XPathNodeType>|周囲を除く、コメントの内容を含む<xref:System.String>オブジェクト`<!--`と`-->`|。  |<xref:System.Xml.XPath.XPathNodeType>|<xref:System.String>オブジェクト処理命令のコンテンツを含む、ターゲットを除く、囲む`<?`と`?>`|。  |<xref:System.Xml.XPath.XPathNodeType>|名前空間の名前を含む<xref:System.String>オブジェクトです |。  |<xref:System.Xml.XPath.XPathNodeType>|ノードのテキストを含む<xref:System.String>オブジェクトです |。  |<xref:System.Xml.XPath.XPathNodeType>|A<xref:System.String>ノードのテキストを含むオブジェクトです |</xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.String> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Xml.XPath.XPathNodeType> </xref:System.Object> 。"
  syntax:
    content: public override object TypedValue { get; }
    return:
      type: System.Object
      description: "最も適切な .NET Framework 型のボックス化されたオブジェクトとして現在のノード。"
  overload: System.Xml.XPath.XPathNavigator.TypedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.UnderlyingObject
  id: UnderlyingObject
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: UnderlyingObject
  nameWithType: XPathNavigator.UnderlyingObject
  fullName: System.Xml.XPath.XPathNavigator.UnderlyingObject
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "によって使用される<xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> 「仮想」の XML を提供する実装を基になるオブジェクトへのアクセスを提供する、ストアを表示します。"
  remarks: "ガーベジ プロパティで使用できる<xref:System.Xml.XPath.XPathNavigator>「仮想」の XML を提供する実装を基になるオブジェクトへのアクセスを提供する、ストアを表示します</xref:System.Xml.XPath.XPathNavigator>。 たとえば場合、<xref:System.Xml.XPath.XPathNavigator>オブジェクトを使用して、共通言語ランタイム (CLR) オブジェクト グラフ上の仮想の XML ビューを提供しを使用して XPath クエリを実行することができます、<xref:System.Xml.XPath.XPathNavigator.Select%2A>メソッドし、選択したノードを基になる CLR オブジェクトにアクセスします</xref:System.Xml.XPath.XPathNavigator.Select%2A></xref:System.Xml.XPath.XPathNavigator>。 ガーベジ プロパティは、オブジェクトの基になるこれらが公開。       多くの場合、この値はある`null`、ガーベジ プロパティによって返されるオブジェクトには、特定の実装が必ずとします。       ガーベジ プロパティは、オブジェクト id を保持する必要があり、オーバーレイされるアイテムのそれぞれに一対一に対応しているオブジェクトを返すにのみ使用する必要があります。 ユーザーが同じを使用して、同じノードに連続するアクセスしたときに、同じオブジェクトを常に取得する必要があります<xref:System.Xml.XPath.XPathNavigator>オブジェクトまたは複製の&1; つ</xref:System.Xml.XPath.XPathNavigator>。      > [!NOTE] ><xref:System.Xml.XPath.XPathNavigator>の<xref:System.Xml.XmlDocument>対応する<xref:System.Xml.XmlNode>.</xref:System.Xml.XmlNode>から返されるオブジェクト</xref:System.Xml.XmlDocument>によって作成されたオブジェクト</xref:System.Xml.XPath.XPathNavigator>のガーベジ プロパティ"
  syntax:
    content: public virtual object UnderlyingObject { get; }
    return:
      type: System.Object
      description: "既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.UnderlyingObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  id: ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.ValueAs(Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "現在のノードの値を取得、<xref:System.Type>を使用して、指定、<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスを解決するのには指定されたオブジェクト</xref:System.Xml.IXmlNamespaceResolver></xref:System.Type>。"
  remarks: "<xref:System.Xml.XPath.XPathItem.ValueAs%2A>メソッドは、現在のノードの値を現在のノードの型キャストの XPath 2.0 の規則に従って指定された、.NET Framework 型に変換しようとしています</xref:System.Xml.XPath.XPathItem.ValueAs%2A>。       <xref:System.Xml.IXmlNamespaceResolver>型の変換に関連する名前空間プレフィックスを解決するのにはオブジェクトを使用します</xref:System.Xml.IXmlNamespaceResolver>。 たとえば、変換するときに、`xs:QName`を`xs:string`です。"
  syntax:
    content: public override object ValueAs (Type returnType, System.Xml.IXmlNamespaceResolver nsResolver);
    parameters:
    - id: returnType
      type: System.Type
      description: "<xref:System.Type>返す現在のノードの値の名前を付けて</xref:System.Type>"
    - id: nsResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>名前空間プレフィックスの解決に使用されるオブジェクト</xref:System.Xml.IXmlNamespaceResolver>。"
    return:
      type: System.Object
      description: "現在のノードとしての値、<xref:System.Type>要求</xref:System.Type>。"
  overload: System.Xml.XPath.XPathNavigator.ValueAs*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "現在のノードの値は、指定した型の正しい形式ではありません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行されたキャストは有効ではありません。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAsBoolean
  id: ValueAsBoolean
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAsBoolean
  nameWithType: XPathNavigator.ValueAsBoolean
  fullName: System.Xml.XPath.XPathNavigator.ValueAsBoolean
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "<xref:System.Boolean>。</xref:System.Boolean>として現在のノードの値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>スキーマまたは型情報が含まれて (などから、<xref:System.Xml.XmlDocument>オブジェクトを検証する XML スキーマを使用して初期化<xref:System.Xml.XmlReader>)、現在のノードが XML スキーマとして定義されている場合と`xs:boolean`型、ValueAsBoolean プロパティには、ボックス化解除された現在のノードの値が返されます<xref:System.Boolean>オブジェクト</xref:System.Boolean></xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator>。       ただし場合、<xref:System.Xml.XPath.XPathNavigator>情報がありませんすべてのスキーマまたは型、プロパティが、現在のノードの文字列値を変換しようとしています。 ValueAsBoolean、<xref:System.Boolean>の XPath 2.0 のキャスト規則に従って、値`xs:boolean`。</xref:System.Boolean> </xref:System.Xml.XPath.XPathNavigator> 。"
  example:
  - "In the following example, the value of each element in the `valueas.xml` file is returned using the ValueAsBoolean, <xref:System.Xml.XPath.XPathNavigator.ValueAsDateTime%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueAsDouble%2A>, <xref:System.Xml.XPath.XPathNavigator.ValueAsInt%2A>, and <xref:System.Xml.XPath.XPathNavigator.ValueAsLong%2A> properties.  \n  \n [!code-vb[XPathNavigatorProperties#5](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_10_1.vb)]\n [!code-cpp[XPathNavigatorProperties#5](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_10_1.cpp)]\n [!code-cs[XPathNavigatorProperties#5](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_10_1.cs)]  \n  \n The example takes the `valueas.xml` file as an input.  \n  \n```  \n<root>  \n    <booleanElement>true</booleanElement>  \n    <dateTimeElement>2004-04-20T12:00:00</dateTimeElement>  \n    <decimalElement>10.00</decimalElement>  \n    <numberElement>100000000</numberElement>  \n</root>  \n```"
  syntax:
    content: public override bool ValueAsBoolean { get; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>。</xref:System.Boolean>として現在のノードの値"
  overload: System.Xml.XPath.XPathNavigator.ValueAsBoolean*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.Boolean>。</xref:System.Boolean>を現在のノードの文字列値を変換できません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Boolean>が正しくありません</xref:System.Boolean>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAsDateTime
  id: ValueAsDateTime
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAsDateTime
  nameWithType: XPathNavigator.ValueAsDateTime
  fullName: System.Xml.XPath.XPathNavigator.ValueAsDateTime
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "<xref:System.DateTime>。</xref:System.DateTime>として現在のノードの値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>スキーマまたは型情報が含まれて (などから、<xref:System.Xml.XmlDocument>オブジェクトを検証する XML スキーマを使用して初期化<xref:System.Xml.XmlReader>)、現在のノードが XML スキーマとして定義されている場合と`xs:datetime`型、ValueAsDateTime プロパティには、ボックス化解除された現在のノードの値が返されます<xref:System.DateTime>オブジェクト</xref:System.DateTime></xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator>。       ただし場合、<xref:System.Xml.XPath.XPathNavigator>情報がありませんすべてのスキーマまたは型、プロパティが、現在のノードの文字列値を変換しようとしています。 ValueAsDateTime、<xref:System.DateTime>の XPath 2.0 のキャスト規則に従って、値`xs:datetime`。</xref:System.DateTime> </xref:System.Xml.XPath.XPathNavigator> 。"
  example:
  - For an example of the ValueAsDateTime property, see the <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> property.
  syntax:
    content: public override DateTime ValueAsDateTime { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>。</xref:System.DateTime>として現在のノードの値"
  overload: System.Xml.XPath.XPathNavigator.ValueAsDateTime*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.DateTime>。</xref:System.DateTime>に現在のノードの文字列値を変換できません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.DateTime>が正しくありません</xref:System.DateTime>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAsDouble
  id: ValueAsDouble
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAsDouble
  nameWithType: XPathNavigator.ValueAsDouble
  fullName: System.Xml.XPath.XPathNavigator.ValueAsDouble
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "<xref:System.Double>。</xref:System.Double>として現在のノードの値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>スキーマまたは型情報が含まれて (などから、<xref:System.Xml.XmlDocument>オブジェクトを検証する XML スキーマを使用して初期化<xref:System.Xml.XmlReader>)、現在のノードが XML スキーマとして定義されている場合と`xs:double`型、ValueAsDouble プロパティには、ボックス化解除された現在のノードの値が返されます<xref:System.Double>オブジェクト</xref:System.Double></xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator>。       ただし場合、<xref:System.Xml.XPath.XPathNavigator>情報がありませんすべてのスキーマまたは型、プロパティが、現在のノードの文字列値を変換しようとしています。 ValueAsDouble、<xref:System.Double>の XPath 2.0 のキャスト規則に従って、値`xsd:double`。</xref:System.Double> </xref:System.Xml.XPath.XPathNavigator> 。"
  example:
  - For an example of the ValueAsDouble property, see the <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> property.
  syntax:
    content: public override double ValueAsDouble { get; }
    return:
      type: System.Double
      description: "<xref:System.Double>。</xref:System.Double>として現在のノードの値"
  overload: System.Xml.XPath.XPathNavigator.ValueAsDouble*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.Double>。</xref:System.Double>を現在のノードの文字列値を変換できません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Double>が正しくありません</xref:System.Double>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAsInt
  id: ValueAsInt
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAsInt
  nameWithType: XPathNavigator.ValueAsInt
  fullName: System.Xml.XPath.XPathNavigator.ValueAsInt
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "<xref:System.Int32>。</xref:System.Int32>として現在のノードの値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>スキーマまたは型情報が含まれて (などから、<xref:System.Xml.XmlDocument>オブジェクトを検証する XML スキーマを使用して初期化<xref:System.Xml.XmlReader>)、現在のノードが XML スキーマとして定義されている場合と`xs:integer`型、ValueAsInt プロパティには、ボックス化解除された現在のノードの値が返されます<xref:System.Int32>オブジェクト</xref:System.Int32></xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator>。       ただし場合、<xref:System.Xml.XPath.XPathNavigator>情報がありませんすべてのスキーマまたは型、プロパティが、現在のノードの文字列値を変換しようとしています。 ValueAsInt、<xref:System.Int32>の XPath 2.0 のキャスト規則に従って、値`xs:integer`。</xref:System.Int32> </xref:System.Xml.XPath.XPathNavigator> 。"
  example:
  - For an example of the ValueAsInt property, see the <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> property.
  syntax:
    content: public override int ValueAsInt { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>として現在のノードの値"
  overload: System.Xml.XPath.XPathNavigator.ValueAsInt*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.Int32>。</xref:System.Int32>に現在のノードの文字列値を変換できません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Int32>が正しくありません</xref:System.Int32>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueAsLong
  id: ValueAsLong
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueAsLong
  nameWithType: XPathNavigator.ValueAsLong
  fullName: System.Xml.XPath.XPathNavigator.ValueAsLong
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "<xref:System.Int64>。</xref:System.Int64>として現在のノードの値を取得します。"
  remarks: "場合、<xref:System.Xml.XPath.XPathNavigator>スキーマまたは型情報が含まれて (などから、<xref:System.Xml.XmlDocument>オブジェクトを検証する XML スキーマを使用して初期化<xref:System.Xml.XmlReader>)、現在のノードが XML スキーマとして定義されている場合と`xs:integer`型、ValueAsLong プロパティには、ボックス化解除された現在のノードの値が返されます<xref:System.Int64>オブジェクト</xref:System.Int64></xref:System.Xml.XmlReader></xref:System.Xml.XmlDocument></xref:System.Xml.XPath.XPathNavigator>。       ただし場合、<xref:System.Xml.XPath.XPathNavigator>情報がありませんすべてのスキーマまたは型、プロパティが、現在のノードの文字列値を変換しようとしています。 ValueAsLong、<xref:System.Int64>の XPath 2.0 のキャスト規則に従って、値`xs:integer`。</xref:System.Int64> </xref:System.Xml.XPath.XPathNavigator> 。"
  example:
  - For an example of the ValueAsLong property, see the <xref:System.Xml.XPath.XPathNavigator.ValueAsBoolean%2A> property.
  syntax:
    content: public override long ValueAsLong { get; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>。</xref:System.Int64>として現在のノードの値"
  overload: System.Xml.XPath.XPathNavigator.ValueAsLong*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<xref:System.Int64>。</xref:System.Int64>を現在のノードの文字列値を変換できません。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "試行<xref:System.Int64>が正しくありません</xref:System.Int64>。"
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.ValueType
  id: ValueType
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: ValueType
  nameWithType: XPathNavigator.ValueType
  fullName: System.Xml.XPath.XPathNavigator.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: ".NET Framework の取得<xref:System.Type>現在のノード</xref:System.Type>。"
  remarks: "<xref:System.Xml.XPath.XPathItem.ValueType%2A>プロパティは、.NET Framework、取得<xref:System.Type>の現在のノードの型指定された値</xref:System.Type></xref:System.Xml.XPath.XPathItem.ValueType%2A>。       型の要素など、`xs:int`必要があります、<xref:System.Xml.XPath.XPathItem.ValueType%2A>の<xref:System.Int32>既定</xref:System.Int32></xref:System.Xml.XPath.XPathItem.ValueType%2A>。 ただし、<xref:System.Xml.XPath.XPathItem.ValueType%2A>にマップできる有効な型のいずれかの可能性があります`xs:int`など<xref:System.Int16><xref:System.Double>.</xref:System.Double> </xref:System.Int16> </xref:System.Xml.XPath.XPathItem.ValueType%2A>       これに相当するノードの型の注釈の種類のノードがない場合は、`xdt:untypedAtomic`です。 この場合、ValueType プロパティは、ノードの文字列を返します。 詳細については、次を参照してください。 [System.Xml クラスで型のサポート](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "In the following example, the `contosoBooks.xml` XML file and `contosoBooks.xsd` XML Schema definition language (XSD) schema are used to create an <xref:System.Xml.XPath.XPathNavigator> object. The typed value of the `price` element is displayed using the ValueType property and then returned as a string using the <xref:System.Xml.XPath.XPathNavigator.ValueAs%2A> method.  \n  \n [!code-vb[XPathNavigatorProperties#6](~/add/codesnippet/visualbasic/p-system.xml.xpath.xpath_1_1.vb)]\n [!code-cpp[XPathNavigatorProperties#6](~/add/codesnippet/cpp/p-system.xml.xpath.xpath_1_1.cpp)]\n [!code-cs[XPathNavigatorProperties#6](~/add/codesnippet/csharp/p-system.xml.xpath.xpath_1_1.cs)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```  \n  \n The example also takes the `contosoBooks.xsd` as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<xs:schema attributeFormDefault=\"unqualified\" elementFormDefault=\"qualified\" targetNamespace=\"http://www.contoso.com/books\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">  \n    <xs:element name=\"bookstore\">  \n        <xs:complexType>  \n            <xs:sequence>  \n                <xs:element maxOccurs=\"unbounded\" name=\"book\">  \n                    <xs:complexType>  \n                        <xs:sequence>  \n                            <xs:element name=\"title\" type=\"xs:string\" />  \n                            <xs:element name=\"author\">  \n                                <xs:complexType>  \n                                    <xs:sequence>  \n                                        <xs:element minOccurs=\"0\" name=\"name\" type=\"xs:string\" />  \n                                        <xs:element minOccurs=\"0\" name=\"first-name\" type=\"xs:string\" />  \n                                        <xs:element minOccurs=\"0\" name=\"last-name\" type=\"xs:string\" />  \n                                    </xs:sequence>  \n                                </xs:complexType>  \n                            </xs:element>  \n                            <xs:element name=\"price\" type=\"xs:decimal\" />  \n                        </xs:sequence>  \n                        <xs:attribute name=\"genre\" type=\"xs:string\" use=\"required\" />  \n                        <xs:attribute name=\"publicationdate\" type=\"xs:date\" use=\"required\" />  \n                        <xs:attribute name=\"ISBN\" type=\"xs:string\" use=\"required\" />  \n                    </xs:complexType>  \n                </xs:element>  \n            </xs:sequence>  \n        </xs:complexType>  \n    </xs:element>  \n</xs:schema>  \n  \n```"
  syntax:
    content: public override Type ValueType { get; }
    return:
      type: System.Type
      description: ".NET Framework<xref:System.Type>現在のノード</xref:System.Type>。 既定値は<xref:System.String>。</xref:System.String>"
  overload: System.Xml.XPath.XPathNavigator.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)
  id: WriteSubtree(System.Xml.XmlWriter)
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: WriteSubtree(XmlWriter)
  nameWithType: XPathNavigator.WriteSubtree(XmlWriter)
  fullName: System.Xml.XPath.XPathNavigator.WriteSubtree(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "ストリームの現在のノードとその子ノードを<xref:System.Xml.XmlWriter>指定されたオブジェクト</xref:System.Xml.XmlWriter>。"
  remarks: "現在のノードのスコープ内の名前空間の Namespace 宣言にストリーム送信される XML に挿入されます、<xref:System.Xml.XmlWriter>指定されたオブジェクト</xref:System.Xml.XmlWriter>。       WriteSubtree メソッドが呼び出された場合の例の最初の`book`の要素、`books.xml`ファイル、`http://www.contoso.com/books`にストリーム送信される XML に XML ドキュメントの先頭で行われる名前空間宣言が表示されます、<xref:System.Xml.XmlWriter>次の例で示すように指定されたオブジェクト</xref:System.Xml.XmlWriter>。      ```   <?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?>   <book genre=&quot;autobiography&quot; publicationdate=&quot;1981&quot; ISBN=&quot;1-861003-11-0&quot; xmlns=&quot;http://www.contoso.com/books&quot;>       <title>The Autobiography of Benjamin Franklin</title>       <author>           <first-name>Benjamin</first-name>           <last-name>Franklin</last-name>       </author>       <price>8.99</price>   </book>   ```      > [!NOTE]> WriteSubtree メソッドでは<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>の位置には影響しません"
  example:
  - "The following example illustrates using the WriteSubtree method on the first `book` element of the `contosoBooks.xml` file.  \n  \n [!code-cs[XPathNavigatorMethods#48](~/add/codesnippet/csharp/m-system.xml.xpath.xpath_14_1.cs)]\n [!code-vb[XPathNavigatorMethods#48](~/add/codesnippet/visualbasic/m-system.xml.xpath.xpath_14_1.vb)]\n [!code-cpp[XPathNavigatorMethods#48](~/add/codesnippet/cpp/m-system.xml.xpath.xpath_14_1.cpp)]  \n  \n The example takes the `contosoBooks.xml` file as an input.  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<bookstore xmlns=\"http://www.contoso.com/books\">  \n    <book genre=\"autobiography\" publicationdate=\"1981-03-22\" ISBN=\"1-861003-11-0\">  \n        <title>The Autobiography of Benjamin Franklin</title>  \n        <author>  \n            <first-name>Benjamin</first-name>  \n            <last-name>Franklin</last-name>  \n        </author>  \n        <price>8.99</price>  \n    </book>  \n    <book genre=\"novel\" publicationdate=\"1967-11-17\" ISBN=\"0-201-63361-2\">  \n        <title>The Confidence Man</title>  \n        <author>  \n            <first-name>Herman</first-name>  \n            <last-name>Melville</last-name>  \n        </author>  \n        <price>11.99</price>  \n    </book>  \n    <book genre=\"philosophy\" publicationdate=\"1991-02-15\" ISBN=\"1-861001-57-6\">  \n        <title>The Gorgias</title>  \n        <author>  \n            <name>Plato</name>  \n        </author>  \n        <price>9.99</price>  \n    </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public virtual void WriteSubtree (System.Xml.XmlWriter writer);
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>オブジェクトをストリームにします</xref:System.Xml.XmlWriter>。"
  overload: System.Xml.XPath.XPathNavigator.WriteSubtree*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.XmlLang
  id: XmlLang
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: XmlLang
  nameWithType: XPathNavigator.XmlLang
  fullName: System.Xml.XPath.XPathNavigator.XmlLang
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "取得、`xml:lang`現在のノードのスコープです。"
  remarks: "以下、XML の例と、<xref:System.Xml.XPath.XPathNavigator>に配置されて、`name`要素、XmlLang プロパティを返しますのスコープ`en-us`のスコープ内のノードであることを示す、`xml:lang=&quot;en-us&quot;`属性</xref:System.Xml.XPath.XPathNavigator>。      ```   <root xml:lang=&quot;en-us&quot;>       <name>Name</name>   </root>   ```"
  syntax:
    content: public virtual string XmlLang { get; }
    return:
      type: System.String
      description: "A<xref:System.String>の値を格納している、`xml:lang`スコープ、または&lt;xref:System.String?displayProperty=fullName&gt;場合は、現在のノードを持たない`xml:lang`返される値の範囲します</xref:System.String>。"
  overload: System.Xml.XPath.XPathNavigator.XmlLang*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XPath.XPathNavigator.XmlType
  id: XmlType
  parent: System.Xml.XPath.XPathNavigator
  langs:
  - csharp
  name: XmlType
  nameWithType: XPathNavigator.XmlType
  fullName: System.Xml.XPath.XPathNavigator.XmlType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.XPath
  summary: "取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>現在のノードについて説明します。"
  remarks: "Xml 型のプロパティを使用する際に考慮する重要な注意事項を次に示します。      -Xml 型のプロパティが`null`がない限り、 <xref:System.Xml.Schema.IXmlSchemaInfo.Validity%2A> <xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A> <xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.Schema.XmlSchemaValidity?displayProperty=fullName>.</xref:System.Xml.Schema.XmlSchemaValidity?displayProperty=fullName>に設定されている</xref:System.Xml.XPath.XPathNavigator>プロパティ</xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>のプロパティ</xref:System.Xml.Schema.IXmlSchemaInfo.Validity%2A>      場合、このノードが有効では、xml 型のプロパティは、<xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>のプロパティ、<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>のプロパティ、<xref:System.Xml.XPath.XPathNavigator>共用体のメンバーであるこのノードがない限り、します</xref:System.Xml.XPath.XPathNavigator></xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A></xref:System.Xml.Schema.IXmlSchemaInfo.SchemaType%2A>。      -Xml 型のプロパティは<xref:System.Xml.Schema.IXmlSchemaInfo.MemberType%2A>、<xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>この<xref:System.Xml.XPath.XPathNavigator>。</xref:System.Xml.XPath.XPathNavigator>のプロパティ</xref:System.Xml.XPath.XPathNavigator.SchemaInfo%2A>のプロパティ</xref:System.Xml.Schema.IXmlSchemaInfo.MemberType%2A>と同じこのノードが共用体のメンバーである場合、"
  syntax:
    content: public override System.Xml.Schema.XmlSchemaType XmlType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref>オブジェクトです。 既定は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Xml.XPath.XPathNavigator.XmlType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XPath.XPathItem
  isExternal: false
  name: System.Xml.XPath.XPathItem
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.XPath.XPathException
  parent: System.Xml.XPath
  isExternal: false
  name: XPathException
  nameWithType: XPathException
  fullName: System.Xml.XPath.XPathException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Xml.XPath.XPathNavigator.#ctor
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XPathNavigator()
  nameWithType: XPathNavigator.XPathNavigator()
  fullName: System.Xml.XPath.XPathNavigator.XPathNavigator()
- uid: System.Xml.XPath.XPathNavigator.AppendChild
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChild()
  nameWithType: XPathNavigator.AppendChild()
  fullName: System.Xml.XPath.XPathNavigator.AppendChild()
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChild(String)
  nameWithType: XPathNavigator.AppendChild(String)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChild(XmlReader)
  nameWithType: XPathNavigator.AppendChild(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChild(XPathNavigator)
  nameWithType: XPathNavigator.AppendChild(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.AppendChild(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChildElement(String,String,String,String)
  nameWithType: XPathNavigator.AppendChildElement(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.AppendChildElement(String,String,String,String)
- uid: System.Xml.XPath.XPathNavigator.BaseURI
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: BaseURI
  nameWithType: XPathNavigator.BaseURI
  fullName: System.Xml.XPath.XPathNavigator.BaseURI
- uid: System.Xml.XPath.XPathNavigator.CanEdit
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CanEdit
  nameWithType: XPathNavigator.CanEdit
  fullName: System.Xml.XPath.XPathNavigator.CanEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CheckValidity(XmlSchemaSet,ValidationEventHandler)
  nameWithType: XPathNavigator.CheckValidity(XmlSchemaSet,ValidationEventHandler)
  fullName: System.Xml.XPath.XPathNavigator.CheckValidity(XmlSchemaSet,ValidationEventHandler)
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Xml.Schema.ValidationEventHandler
  parent: System.Xml.Schema
  isExternal: false
  name: ValidationEventHandler
  nameWithType: ValidationEventHandler
  fullName: System.Xml.Schema.ValidationEventHandler
- uid: System.Xml.XPath.XPathNavigator.Clone
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Clone()
  nameWithType: XPathNavigator.Clone()
  fullName: System.Xml.XPath.XPathNavigator.Clone()
- uid: System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ComparePosition(XPathNavigator)
  nameWithType: XPathNavigator.ComparePosition(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ComparePosition(XPathNavigator)
- uid: System.Xml.XmlNodeOrder
  parent: System.Xml
  isExternal: false
  name: XmlNodeOrder
  nameWithType: XmlNodeOrder
  fullName: System.Xml.XmlNodeOrder
- uid: System.Xml.XPath.XPathNavigator.Compile(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Compile(String)
  nameWithType: XPathNavigator.Compile(String)
  fullName: System.Xml.XPath.XPathNavigator.Compile(String)
- uid: System.Xml.XPath.XPathExpression
  parent: System.Xml.XPath
  isExternal: false
  name: XPathExpression
  nameWithType: XPathExpression
  fullName: System.Xml.XPath.XPathExpression
- uid: System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateAttribute(String,String,String,String)
  nameWithType: XPathNavigator.CreateAttribute(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.CreateAttribute(String,String,String,String)
- uid: System.Xml.XPath.XPathNavigator.CreateAttributes
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateAttributes()
  nameWithType: XPathNavigator.CreateAttributes()
  fullName: System.Xml.XPath.XPathNavigator.CreateAttributes()
- uid: System.Xml.XPath.XPathNavigator.CreateNavigator
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateNavigator()
  nameWithType: XPathNavigator.CreateNavigator()
  fullName: System.Xml.XPath.XPathNavigator.CreateNavigator()
- uid: System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: DeleteRange(XPathNavigator)
  nameWithType: XPathNavigator.DeleteRange(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.DeleteRange(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.DeleteSelf
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: DeleteSelf()
  nameWithType: XPathNavigator.DeleteSelf()
  fullName: System.Xml.XPath.XPathNavigator.DeleteSelf()
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Evaluate(String)
  nameWithType: XPathNavigator.Evaluate(String)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Evaluate(XPathExpression)
  nameWithType: XPathNavigator.Evaluate(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(XPathExpression)
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Evaluate(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.Evaluate(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(String,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Evaluate(XPathExpression,XPathNodeIterator)
  nameWithType: XPathNavigator.Evaluate(XPathExpression,XPathNodeIterator)
  fullName: System.Xml.XPath.XPathNavigator.Evaluate(XPathExpression,XPathNodeIterator)
- uid: System.Xml.XPath.XPathNodeIterator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNodeIterator
  nameWithType: XPathNodeIterator
  fullName: System.Xml.XPath.XPathNodeIterator
- uid: System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetAttribute(String,String)
  nameWithType: XPathNavigator.GetAttribute(String,String)
  fullName: System.Xml.XPath.XPathNavigator.GetAttribute(String,String)
- uid: System.Xml.XPath.XPathNavigator.GetNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetNamespace(String)
  nameWithType: XPathNavigator.GetNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.GetNamespace(String)
- uid: System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XPathNavigator.GetNamespacesInScope(XmlNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.GetNamespacesInScope(XmlNamespaceScope)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlNamespaceScope
  parent: System.Xml
  isExternal: true
  name: XmlNamespaceScope
  nameWithType: XmlNamespaceScope
  fullName: System.Xml.XmlNamespaceScope
- uid: System.Xml.XPath.XPathNavigator.HasAttributes
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: HasAttributes
  nameWithType: XPathNavigator.HasAttributes
  fullName: System.Xml.XPath.XPathNavigator.HasAttributes
- uid: System.Xml.XPath.XPathNavigator.HasChildren
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: HasChildren
  nameWithType: XPathNavigator.HasChildren
  fullName: System.Xml.XPath.XPathNavigator.HasChildren
- uid: System.Xml.XPath.XPathNavigator.InnerXml
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InnerXml
  nameWithType: XPathNavigator.InnerXml
  fullName: System.Xml.XPath.XPathNavigator.InnerXml
- uid: System.Xml.XPath.XPathNavigator.InsertAfter
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertAfter()
  nameWithType: XPathNavigator.InsertAfter()
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter()
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertAfter(String)
  nameWithType: XPathNavigator.InsertAfter(String)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(String)
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertAfter(XmlReader)
  nameWithType: XPathNavigator.InsertAfter(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(XmlReader)
- uid: System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertAfter(XPathNavigator)
  nameWithType: XPathNavigator.InsertAfter(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.InsertAfter(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.InsertBefore
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertBefore()
  nameWithType: XPathNavigator.InsertBefore()
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore()
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertBefore(String)
  nameWithType: XPathNavigator.InsertBefore(String)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(String)
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertBefore(XmlReader)
  nameWithType: XPathNavigator.InsertBefore(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(XmlReader)
- uid: System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertBefore(XPathNavigator)
  nameWithType: XPathNavigator.InsertBefore(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.InsertBefore(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertElementAfter(String,String,String,String)
  nameWithType: XPathNavigator.InsertElementAfter(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.InsertElementAfter(String,String,String,String)
- uid: System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertElementBefore(String,String,String,String)
  nameWithType: XPathNavigator.InsertElementBefore(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.InsertElementBefore(String,String,String,String)
- uid: System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsDescendant(XPathNavigator)
  nameWithType: XPathNavigator.IsDescendant(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.IsDescendant(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.IsEmptyElement
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsEmptyElement
  nameWithType: XPathNavigator.IsEmptyElement
  fullName: System.Xml.XPath.XPathNavigator.IsEmptyElement
- uid: System.Xml.XPath.XPathNavigator.IsNode
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsNode
  nameWithType: XPathNavigator.IsNode
  fullName: System.Xml.XPath.XPathNavigator.IsNode
- uid: System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsSamePosition(XPathNavigator)
  nameWithType: XPathNavigator.IsSamePosition(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.IsSamePosition(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.LocalName
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LocalName
  nameWithType: XPathNavigator.LocalName
  fullName: System.Xml.XPath.XPathNavigator.LocalName
- uid: System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LookupNamespace(String)
  nameWithType: XPathNavigator.LookupNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.LookupNamespace(String)
- uid: System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LookupPrefix(String)
  nameWithType: XPathNavigator.LookupPrefix(String)
  fullName: System.Xml.XPath.XPathNavigator.LookupPrefix(String)
- uid: System.Xml.XPath.XPathNavigator.Matches(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Matches(String)
  nameWithType: XPathNavigator.Matches(String)
  fullName: System.Xml.XPath.XPathNavigator.Matches(String)
- uid: System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Matches(XPathExpression)
  nameWithType: XPathNavigator.Matches(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Matches(XPathExpression)
- uid: System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveTo(XPathNavigator)
  nameWithType: XPathNavigator.MoveTo(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveTo(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToAttribute(String,String)
  nameWithType: XPathNavigator.MoveToAttribute(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToAttribute(String,String)
- uid: System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToChild(XPathNodeType)
  nameWithType: XPathNavigator.MoveToChild(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToChild(XPathNodeType)
- uid: System.Xml.XPath.XPathNodeType
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNodeType
  nameWithType: XPathNodeType
  fullName: System.Xml.XPath.XPathNodeType
- uid: System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToChild(String,String)
  nameWithType: XPathNavigator.MoveToChild(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToChild(String,String)
- uid: System.Xml.XPath.XPathNavigator.MoveToFirst
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirst()
  nameWithType: XPathNavigator.MoveToFirst()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirst()
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstAttribute()
  nameWithType: XPathNavigator.MoveToFirstAttribute()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute()
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstChild
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstChild()
  nameWithType: XPathNavigator.MoveToFirstChild()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstChild()
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstNamespace()
  nameWithType: XPathNavigator.MoveToFirstNamespace()
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace()
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstNamespace(XPathNamespaceScope)
  nameWithType: XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(XPathNamespaceScope)
- uid: System.Xml.XPath.XPathNamespaceScope
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNamespaceScope
  nameWithType: XPathNamespaceScope
  fullName: System.Xml.XPath.XPathNamespaceScope
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFollowing(XPathNodeType)
  nameWithType: XPathNavigator.MoveToFollowing(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(XPathNodeType)
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFollowing(String,String)
  nameWithType: XPathNavigator.MoveToFollowing(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(String,String)
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFollowing(XPathNodeType,XPathNavigator)
  nameWithType: XPathNavigator.MoveToFollowing(XPathNodeType,XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(XPathNodeType,XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFollowing(String,String,XPathNavigator)
  nameWithType: XPathNavigator.MoveToFollowing(String,String,XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.MoveToFollowing(String,String,XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.MoveToId(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToId(String)
  nameWithType: XPathNavigator.MoveToId(String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToId(String)
- uid: System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNamespace(String)
  nameWithType: XPathNavigator.MoveToNamespace(String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNamespace(String)
- uid: System.Xml.XPath.XPathNavigator.MoveToNext
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNext()
  nameWithType: XPathNavigator.MoveToNext()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext()
- uid: System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNext(XPathNodeType)
  nameWithType: XPathNavigator.MoveToNext(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext(XPathNodeType)
- uid: System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNext(String,String)
  nameWithType: XPathNavigator.MoveToNext(String,String)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNext(String,String)
- uid: System.Xml.XPath.XPathNavigator.MoveToNextAttribute
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNextAttribute()
  nameWithType: XPathNavigator.MoveToNextAttribute()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextAttribute()
- uid: System.Xml.XPath.XPathNavigator.MoveToNextNamespace
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNextNamespace()
  nameWithType: XPathNavigator.MoveToNextNamespace()
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextNamespace()
- uid: System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNextNamespace(XPathNamespaceScope)
  nameWithType: XPathNavigator.MoveToNextNamespace(XPathNamespaceScope)
  fullName: System.Xml.XPath.XPathNavigator.MoveToNextNamespace(XPathNamespaceScope)
- uid: System.Xml.XPath.XPathNavigator.MoveToParent
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToParent()
  nameWithType: XPathNavigator.MoveToParent()
  fullName: System.Xml.XPath.XPathNavigator.MoveToParent()
- uid: System.Xml.XPath.XPathNavigator.MoveToPrevious
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToPrevious()
  nameWithType: XPathNavigator.MoveToPrevious()
  fullName: System.Xml.XPath.XPathNavigator.MoveToPrevious()
- uid: System.Xml.XPath.XPathNavigator.MoveToRoot
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToRoot()
  nameWithType: XPathNavigator.MoveToRoot()
  fullName: System.Xml.XPath.XPathNavigator.MoveToRoot()
- uid: System.Xml.XPath.XPathNavigator.Name
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Name
  nameWithType: XPathNavigator.Name
  fullName: System.Xml.XPath.XPathNavigator.Name
- uid: System.Xml.XPath.XPathNavigator.NamespaceURI
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NamespaceURI
  nameWithType: XPathNavigator.NamespaceURI
  fullName: System.Xml.XPath.XPathNavigator.NamespaceURI
- uid: System.Xml.XPath.XPathNavigator.NameTable
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NameTable
  nameWithType: XPathNavigator.NameTable
  fullName: System.Xml.XPath.XPathNavigator.NameTable
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XPath.XPathNavigator.NavigatorComparer
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NavigatorComparer
  nameWithType: XPathNavigator.NavigatorComparer
  fullName: System.Xml.XPath.XPathNavigator.NavigatorComparer
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  nameWithType: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Xml.XPath.XPathNavigator.NodeType
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NodeType
  nameWithType: XPathNavigator.NodeType
  fullName: System.Xml.XPath.XPathNavigator.NodeType
- uid: System.Xml.XPath.XPathNavigator.OuterXml
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: OuterXml
  nameWithType: XPathNavigator.OuterXml
  fullName: System.Xml.XPath.XPathNavigator.OuterXml
- uid: System.Xml.XPath.XPathNavigator.Prefix
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Prefix
  nameWithType: XPathNavigator.Prefix
  fullName: System.Xml.XPath.XPathNavigator.Prefix
- uid: System.Xml.XPath.XPathNavigator.PrependChild
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChild()
  nameWithType: XPathNavigator.PrependChild()
  fullName: System.Xml.XPath.XPathNavigator.PrependChild()
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChild(String)
  nameWithType: XPathNavigator.PrependChild(String)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(String)
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChild(XmlReader)
  nameWithType: XPathNavigator.PrependChild(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(XmlReader)
- uid: System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChild(XPathNavigator)
  nameWithType: XPathNavigator.PrependChild(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.PrependChild(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChildElement(String,String,String,String)
  nameWithType: XPathNavigator.PrependChildElement(String,String,String,String)
  fullName: System.Xml.XPath.XPathNavigator.PrependChildElement(String,String,String,String)
- uid: System.Xml.XPath.XPathNavigator.ReadSubtree
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReadSubtree()
  nameWithType: XPathNavigator.ReadSubtree()
  fullName: System.Xml.XPath.XPathNavigator.ReadSubtree()
- uid: System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceRange(XPathNavigator)
  nameWithType: XPathNavigator.ReplaceRange(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceRange(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceSelf(String)
  nameWithType: XPathNavigator.ReplaceSelf(String)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(String)
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceSelf(XmlReader)
  nameWithType: XPathNavigator.ReplaceSelf(XmlReader)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(XmlReader)
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceSelf(XPathNavigator)
  nameWithType: XPathNavigator.ReplaceSelf(XPathNavigator)
  fullName: System.Xml.XPath.XPathNavigator.ReplaceSelf(XPathNavigator)
- uid: System.Xml.XPath.XPathNavigator.SchemaInfo
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SchemaInfo
  nameWithType: XPathNavigator.SchemaInfo
  fullName: System.Xml.XPath.XPathNavigator.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XPath.XPathNavigator.Select(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Select(String)
  nameWithType: XPathNavigator.Select(String)
  fullName: System.Xml.XPath.XPathNavigator.Select(String)
- uid: System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Select(XPathExpression)
  nameWithType: XPathNavigator.Select(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.Select(XPathExpression)
- uid: System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Select(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.Select(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.Select(String,IXmlNamespaceResolver)
- uid: System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectAncestors(XPathNodeType,Boolean)
  nameWithType: XPathNavigator.SelectAncestors(XPathNodeType,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectAncestors(XPathNodeType,Boolean)
- uid: System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectAncestors(String,String,Boolean)
  nameWithType: XPathNavigator.SelectAncestors(String,String,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectAncestors(String,String,Boolean)
- uid: System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectChildren(XPathNodeType)
  nameWithType: XPathNavigator.SelectChildren(XPathNodeType)
  fullName: System.Xml.XPath.XPathNavigator.SelectChildren(XPathNodeType)
- uid: System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectChildren(String,String)
  nameWithType: XPathNavigator.SelectChildren(String,String)
  fullName: System.Xml.XPath.XPathNavigator.SelectChildren(String,String)
- uid: System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectDescendants(XPathNodeType,Boolean)
  nameWithType: XPathNavigator.SelectDescendants(XPathNodeType,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectDescendants(XPathNodeType,Boolean)
- uid: System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectDescendants(String,String,Boolean)
  nameWithType: XPathNavigator.SelectDescendants(String,String,Boolean)
  fullName: System.Xml.XPath.XPathNavigator.SelectDescendants(String,String,Boolean)
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectSingleNode(String)
  nameWithType: XPathNavigator.SelectSingleNode(String)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(String)
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectSingleNode(XPathExpression)
  nameWithType: XPathNavigator.SelectSingleNode(XPathExpression)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(XPathExpression)
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectSingleNode(String,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.SelectSingleNode(String,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.SelectSingleNode(String,IXmlNamespaceResolver)
- uid: System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SetTypedValue(Object)
  nameWithType: XPathNavigator.SetTypedValue(Object)
  fullName: System.Xml.XPath.XPathNavigator.SetTypedValue(Object)
- uid: System.Xml.XPath.XPathNavigator.SetValue(System.String)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SetValue(String)
  nameWithType: XPathNavigator.SetValue(String)
  fullName: System.Xml.XPath.XPathNavigator.SetValue(String)
- uid: System.Xml.XPath.XPathNavigator.System#ICloneable#Clone
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: XPathNavigator.System.ICloneable.Clone()
  fullName: System.Xml.XPath.XPathNavigator.System.ICloneable.Clone()
- uid: System.Xml.XPath.XPathNavigator.ToString
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ToString()
  nameWithType: XPathNavigator.ToString()
  fullName: System.Xml.XPath.XPathNavigator.ToString()
- uid: System.Xml.XPath.XPathNavigator.TypedValue
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: TypedValue
  nameWithType: XPathNavigator.TypedValue
  fullName: System.Xml.XPath.XPathNavigator.TypedValue
- uid: System.Xml.XPath.XPathNavigator.UnderlyingObject
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: UnderlyingObject
  nameWithType: XPathNavigator.UnderlyingObject
  fullName: System.Xml.XPath.XPathNavigator.UnderlyingObject
- uid: System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAs(Type,IXmlNamespaceResolver)
  nameWithType: XPathNavigator.ValueAs(Type,IXmlNamespaceResolver)
  fullName: System.Xml.XPath.XPathNavigator.ValueAs(Type,IXmlNamespaceResolver)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XPath.XPathNavigator.ValueAsBoolean
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XPathNavigator.ValueAsBoolean
  fullName: System.Xml.XPath.XPathNavigator.ValueAsBoolean
- uid: System.Xml.XPath.XPathNavigator.ValueAsDateTime
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XPathNavigator.ValueAsDateTime
  fullName: System.Xml.XPath.XPathNavigator.ValueAsDateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.XPath.XPathNavigator.ValueAsDouble
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsDouble
  nameWithType: XPathNavigator.ValueAsDouble
  fullName: System.Xml.XPath.XPathNavigator.ValueAsDouble
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Xml.XPath.XPathNavigator.ValueAsInt
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsInt
  nameWithType: XPathNavigator.ValueAsInt
  fullName: System.Xml.XPath.XPathNavigator.ValueAsInt
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XPath.XPathNavigator.ValueAsLong
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsLong
  nameWithType: XPathNavigator.ValueAsLong
  fullName: System.Xml.XPath.XPathNavigator.ValueAsLong
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Xml.XPath.XPathNavigator.ValueType
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueType
  nameWithType: XPathNavigator.ValueType
  fullName: System.Xml.XPath.XPathNavigator.ValueType
- uid: System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: WriteSubtree(XmlWriter)
  nameWithType: XPathNavigator.WriteSubtree(XmlWriter)
  fullName: System.Xml.XPath.XPathNavigator.WriteSubtree(XmlWriter)
- uid: System.Xml.XPath.XPathNavigator.XmlLang
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XmlLang
  nameWithType: XPathNavigator.XmlLang
  fullName: System.Xml.XPath.XPathNavigator.XmlLang
- uid: System.Xml.XPath.XPathNavigator.XmlType
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XmlType
  nameWithType: XPathNavigator.XmlType
  fullName: System.Xml.XPath.XPathNavigator.XmlType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.XPath.XPathNavigator.#ctor*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator.AppendChild*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChild
  nameWithType: XPathNavigator.AppendChild
- uid: System.Xml.XPath.XPathNavigator.AppendChildElement*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: AppendChildElement
  nameWithType: XPathNavigator.AppendChildElement
- uid: System.Xml.XPath.XPathNavigator.BaseURI*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: BaseURI
  nameWithType: XPathNavigator.BaseURI
- uid: System.Xml.XPath.XPathNavigator.CanEdit*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CanEdit
  nameWithType: XPathNavigator.CanEdit
- uid: System.Xml.XPath.XPathNavigator.CheckValidity*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CheckValidity
  nameWithType: XPathNavigator.CheckValidity
- uid: System.Xml.XPath.XPathNavigator.Clone*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Clone
  nameWithType: XPathNavigator.Clone
- uid: System.Xml.XPath.XPathNavigator.ComparePosition*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ComparePosition
  nameWithType: XPathNavigator.ComparePosition
- uid: System.Xml.XPath.XPathNavigator.Compile*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Compile
  nameWithType: XPathNavigator.Compile
- uid: System.Xml.XPath.XPathNavigator.CreateAttribute*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateAttribute
  nameWithType: XPathNavigator.CreateAttribute
- uid: System.Xml.XPath.XPathNavigator.CreateAttributes*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateAttributes
  nameWithType: XPathNavigator.CreateAttributes
- uid: System.Xml.XPath.XPathNavigator.CreateNavigator*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: CreateNavigator
  nameWithType: XPathNavigator.CreateNavigator
- uid: System.Xml.XPath.XPathNavigator.DeleteRange*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: DeleteRange
  nameWithType: XPathNavigator.DeleteRange
- uid: System.Xml.XPath.XPathNavigator.DeleteSelf*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: DeleteSelf
  nameWithType: XPathNavigator.DeleteSelf
- uid: System.Xml.XPath.XPathNavigator.Evaluate*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Evaluate
  nameWithType: XPathNavigator.Evaluate
- uid: System.Xml.XPath.XPathNavigator.GetAttribute*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetAttribute
  nameWithType: XPathNavigator.GetAttribute
- uid: System.Xml.XPath.XPathNavigator.GetNamespace*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetNamespace
  nameWithType: XPathNavigator.GetNamespace
- uid: System.Xml.XPath.XPathNavigator.GetNamespacesInScope*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: GetNamespacesInScope
  nameWithType: XPathNavigator.GetNamespacesInScope
- uid: System.Xml.XPath.XPathNavigator.HasAttributes*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: HasAttributes
  nameWithType: XPathNavigator.HasAttributes
- uid: System.Xml.XPath.XPathNavigator.HasChildren*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: HasChildren
  nameWithType: XPathNavigator.HasChildren
- uid: System.Xml.XPath.XPathNavigator.InnerXml*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InnerXml
  nameWithType: XPathNavigator.InnerXml
- uid: System.Xml.XPath.XPathNavigator.InsertAfter*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertAfter
  nameWithType: XPathNavigator.InsertAfter
- uid: System.Xml.XPath.XPathNavigator.InsertBefore*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertBefore
  nameWithType: XPathNavigator.InsertBefore
- uid: System.Xml.XPath.XPathNavigator.InsertElementAfter*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertElementAfter
  nameWithType: XPathNavigator.InsertElementAfter
- uid: System.Xml.XPath.XPathNavigator.InsertElementBefore*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: InsertElementBefore
  nameWithType: XPathNavigator.InsertElementBefore
- uid: System.Xml.XPath.XPathNavigator.IsDescendant*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsDescendant
  nameWithType: XPathNavigator.IsDescendant
- uid: System.Xml.XPath.XPathNavigator.IsEmptyElement*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsEmptyElement
  nameWithType: XPathNavigator.IsEmptyElement
- uid: System.Xml.XPath.XPathNavigator.IsNode*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsNode
  nameWithType: XPathNavigator.IsNode
- uid: System.Xml.XPath.XPathNavigator.IsSamePosition*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: IsSamePosition
  nameWithType: XPathNavigator.IsSamePosition
- uid: System.Xml.XPath.XPathNavigator.LocalName*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LocalName
  nameWithType: XPathNavigator.LocalName
- uid: System.Xml.XPath.XPathNavigator.LookupNamespace*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LookupNamespace
  nameWithType: XPathNavigator.LookupNamespace
- uid: System.Xml.XPath.XPathNavigator.LookupPrefix*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: LookupPrefix
  nameWithType: XPathNavigator.LookupPrefix
- uid: System.Xml.XPath.XPathNavigator.Matches*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Matches
  nameWithType: XPathNavigator.Matches
- uid: System.Xml.XPath.XPathNavigator.MoveTo*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveTo
  nameWithType: XPathNavigator.MoveTo
- uid: System.Xml.XPath.XPathNavigator.MoveToAttribute*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToAttribute
  nameWithType: XPathNavigator.MoveToAttribute
- uid: System.Xml.XPath.XPathNavigator.MoveToChild*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToChild
  nameWithType: XPathNavigator.MoveToChild
- uid: System.Xml.XPath.XPathNavigator.MoveToFirst*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirst
  nameWithType: XPathNavigator.MoveToFirst
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstAttribute*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstAttribute
  nameWithType: XPathNavigator.MoveToFirstAttribute
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstChild*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstChild
  nameWithType: XPathNavigator.MoveToFirstChild
- uid: System.Xml.XPath.XPathNavigator.MoveToFirstNamespace*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFirstNamespace
  nameWithType: XPathNavigator.MoveToFirstNamespace
- uid: System.Xml.XPath.XPathNavigator.MoveToFollowing*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToFollowing
  nameWithType: XPathNavigator.MoveToFollowing
- uid: System.Xml.XPath.XPathNavigator.MoveToId*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToId
  nameWithType: XPathNavigator.MoveToId
- uid: System.Xml.XPath.XPathNavigator.MoveToNamespace*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNamespace
  nameWithType: XPathNavigator.MoveToNamespace
- uid: System.Xml.XPath.XPathNavigator.MoveToNext*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNext
  nameWithType: XPathNavigator.MoveToNext
- uid: System.Xml.XPath.XPathNavigator.MoveToNextAttribute*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNextAttribute
  nameWithType: XPathNavigator.MoveToNextAttribute
- uid: System.Xml.XPath.XPathNavigator.MoveToNextNamespace*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToNextNamespace
  nameWithType: XPathNavigator.MoveToNextNamespace
- uid: System.Xml.XPath.XPathNavigator.MoveToParent*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToParent
  nameWithType: XPathNavigator.MoveToParent
- uid: System.Xml.XPath.XPathNavigator.MoveToPrevious*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToPrevious
  nameWithType: XPathNavigator.MoveToPrevious
- uid: System.Xml.XPath.XPathNavigator.MoveToRoot*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: MoveToRoot
  nameWithType: XPathNavigator.MoveToRoot
- uid: System.Xml.XPath.XPathNavigator.Name*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Name
  nameWithType: XPathNavigator.Name
- uid: System.Xml.XPath.XPathNavigator.NamespaceURI*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NamespaceURI
  nameWithType: XPathNavigator.NamespaceURI
- uid: System.Xml.XPath.XPathNavigator.NameTable*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NameTable
  nameWithType: XPathNavigator.NameTable
- uid: System.Xml.XPath.XPathNavigator.NavigatorComparer*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NavigatorComparer
  nameWithType: XPathNavigator.NavigatorComparer
- uid: System.Xml.XPath.XPathNavigator.NodeType*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: NodeType
  nameWithType: XPathNavigator.NodeType
- uid: System.Xml.XPath.XPathNavigator.OuterXml*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: OuterXml
  nameWithType: XPathNavigator.OuterXml
- uid: System.Xml.XPath.XPathNavigator.Prefix*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Prefix
  nameWithType: XPathNavigator.Prefix
- uid: System.Xml.XPath.XPathNavigator.PrependChild*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChild
  nameWithType: XPathNavigator.PrependChild
- uid: System.Xml.XPath.XPathNavigator.PrependChildElement*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: PrependChildElement
  nameWithType: XPathNavigator.PrependChildElement
- uid: System.Xml.XPath.XPathNavigator.ReadSubtree*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReadSubtree
  nameWithType: XPathNavigator.ReadSubtree
- uid: System.Xml.XPath.XPathNavigator.ReplaceRange*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceRange
  nameWithType: XPathNavigator.ReplaceRange
- uid: System.Xml.XPath.XPathNavigator.ReplaceSelf*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ReplaceSelf
  nameWithType: XPathNavigator.ReplaceSelf
- uid: System.Xml.XPath.XPathNavigator.SchemaInfo*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SchemaInfo
  nameWithType: XPathNavigator.SchemaInfo
- uid: System.Xml.XPath.XPathNavigator.Select*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: Select
  nameWithType: XPathNavigator.Select
- uid: System.Xml.XPath.XPathNavigator.SelectAncestors*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectAncestors
  nameWithType: XPathNavigator.SelectAncestors
- uid: System.Xml.XPath.XPathNavigator.SelectChildren*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectChildren
  nameWithType: XPathNavigator.SelectChildren
- uid: System.Xml.XPath.XPathNavigator.SelectDescendants*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectDescendants
  nameWithType: XPathNavigator.SelectDescendants
- uid: System.Xml.XPath.XPathNavigator.SelectSingleNode*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SelectSingleNode
  nameWithType: XPathNavigator.SelectSingleNode
- uid: System.Xml.XPath.XPathNavigator.SetTypedValue*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SetTypedValue
  nameWithType: XPathNavigator.SetTypedValue
- uid: System.Xml.XPath.XPathNavigator.SetValue*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: SetValue
  nameWithType: XPathNavigator.SetValue
- uid: System.Xml.XPath.XPathNavigator.System#ICloneable#Clone*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: XPathNavigator.System.ICloneable.Clone
- uid: System.Xml.XPath.XPathNavigator.ToString*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ToString
  nameWithType: XPathNavigator.ToString
- uid: System.Xml.XPath.XPathNavigator.TypedValue*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: TypedValue
  nameWithType: XPathNavigator.TypedValue
- uid: System.Xml.XPath.XPathNavigator.UnderlyingObject*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: UnderlyingObject
  nameWithType: XPathNavigator.UnderlyingObject
- uid: System.Xml.XPath.XPathNavigator.ValueAs*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAs
  nameWithType: XPathNavigator.ValueAs
- uid: System.Xml.XPath.XPathNavigator.ValueAsBoolean*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsBoolean
  nameWithType: XPathNavigator.ValueAsBoolean
- uid: System.Xml.XPath.XPathNavigator.ValueAsDateTime*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsDateTime
  nameWithType: XPathNavigator.ValueAsDateTime
- uid: System.Xml.XPath.XPathNavigator.ValueAsDouble*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsDouble
  nameWithType: XPathNavigator.ValueAsDouble
- uid: System.Xml.XPath.XPathNavigator.ValueAsInt*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsInt
  nameWithType: XPathNavigator.ValueAsInt
- uid: System.Xml.XPath.XPathNavigator.ValueAsLong*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueAsLong
  nameWithType: XPathNavigator.ValueAsLong
- uid: System.Xml.XPath.XPathNavigator.ValueType*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: ValueType
  nameWithType: XPathNavigator.ValueType
- uid: System.Xml.XPath.XPathNavigator.WriteSubtree*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: WriteSubtree
  nameWithType: XPathNavigator.WriteSubtree
- uid: System.Xml.XPath.XPathNavigator.XmlLang*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XmlLang
  nameWithType: XPathNavigator.XmlLang
- uid: System.Xml.XPath.XPathNavigator.XmlType*
  parent: System.Xml.XPath.XPathNavigator
  isExternal: false
  name: XmlType
  nameWithType: XPathNavigator.XmlType
