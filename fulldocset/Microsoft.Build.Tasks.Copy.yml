### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Tasks.Copy
  id: Copy
  children:
  - Microsoft.Build.Tasks.Copy.#ctor
  - Microsoft.Build.Tasks.Copy.Cancel
  - Microsoft.Build.Tasks.Copy.CopiedFiles
  - Microsoft.Build.Tasks.Copy.DestinationFiles
  - Microsoft.Build.Tasks.Copy.DestinationFolder
  - Microsoft.Build.Tasks.Copy.Execute
  - Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  - Microsoft.Build.Tasks.Copy.Retries
  - Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  - Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  - Microsoft.Build.Tasks.Copy.SourceFiles
  - Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  langs:
  - csharp
  name: Copy
  nameWithType: Copy
  fullName: Microsoft.Build.Tasks.Copy
  type: Class
  summary: "実装して、`Copy`タスク。 使用して、`Copy`作成してこのタスクを実行するのには、プロジェクト ファイル内の要素。 使用法とパラメーターについては、次を参照してください。[コピー タスク](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public class Copy : Microsoft.Build.Tasks.TaskExtension, Microsoft.Build.Framework.ICancelableTask'
  inheritance:
  - System.Object
  - Microsoft.Build.Utilities.Task
  - Microsoft.Build.Tasks.TaskExtension
  implements:
  - Microsoft.Build.Framework.ICancelableTask
  inheritedMembers:
  - Microsoft.Build.Tasks.TaskExtension.Log
  - Microsoft.Build.Utilities.Task.BuildEngine
  - Microsoft.Build.Utilities.Task.BuildEngine2
  - Microsoft.Build.Utilities.Task.BuildEngine3
  - Microsoft.Build.Utilities.Task.BuildEngine4
  - Microsoft.Build.Utilities.Task.HelpKeywordPrefix
  - Microsoft.Build.Utilities.Task.HostObject
  - Microsoft.Build.Utilities.Task.TaskResources
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.#ctor
  id: '#ctor'
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
  type: Constructor
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.Build.Tasks.Copy&quot;> </xref>クラスです。"
  syntax:
    content: public Copy ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Cancel
  id: Cancel
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "停止し、できるだけ早く (未定義の状態) で返します。"
  syntax:
    content: public void Cancel ();
    parameters: []
  overload: Microsoft.Build.Tasks.Copy.Cancel*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  id: CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "正常にコピーされた項目を取得します。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] CopiedFiles { get; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "正常にコピーされた項目。"
  overload: Microsoft.Build.Tasks.Copy.CopiedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  id: DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "取得または設定するソース ファイルをコピーするファイルの一覧。"
  remarks: "転送先ファイルの一覧は、一対一のマッピングで指定されたリストがあると想定、<xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>プロパティ</xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>。 指定された最初のファイルは、 <xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>DestinationFiles、やなどの指定された最初の場所にコピーされます</xref:Microsoft.Build.Tasks.Copy.SourceFiles%2A>。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] DestinationFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "ソース ファイルのコピー先ファイルの一覧。"
  overload: Microsoft.Build.Tasks.Copy.DestinationFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  id: DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "取得またはファイルをコピーするディレクトリを設定します。"
  remarks: "コピー先のフォルダー ファイルではなく、ディレクトリがあります。 ディレクトリが存在しない場合は、自動的に作成されます。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem DestinationFolder { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem
      description: "ファイルをコピーするディレクトリ。"
  overload: Microsoft.Build.Tasks.Copy.DestinationFolder*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Execute
  id: Execute
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
  type: Method
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "実行、`Copy`タスク。"
  syntax:
    content: public override bool Execute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>タスクの実行が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Build.Tasks.Copy.Execute*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  id: OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "取得またはファイルが読み取り専用としてマークされている場合でも、ファイルを上書きするかどうかを示すブール値を設定します。"
  syntax:
    content: public bool OverwriteReadOnlyFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、`Copy`タスクはファイルを上書きする必要がありますが、それ以外のファイルが読み取り専用としてマークされている場合でも<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.Retries
  id: Retries
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: '何回前のすべての試行が失敗した場合、コピーしようとします。 既定値は&0; です。 警告: 再試行を使用してを行うと、ビルド プロセスで同期の問題が生じる可能性があります。'
  syntax:
    content: public int Retries { get; set; }
    return:
      type: System.Int32
      description: "追加します。"
  overload: Microsoft.Build.Tasks.Copy.Retries*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  id: RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "再試行の間隔が遅くなります。 既定値は<xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault></xref:Microsoft.Build.Tasks.Copy.RetryDelayMillisecondsDefault>"
  syntax:
    content: public int RetryDelayMilliseconds { get; set; }
    return:
      type: System.Int32
      description: "追加します。"
  overload: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  id: SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "取得または設定を示すブール値かどうか、`Copy`タスクが、ソースと移行先の間で変更されていないファイルのコピーをスキップする必要があります。"
  remarks: "`Copy`ファイルが場合、同じサイズと同じ、最終更新時刻を変更しないことが検討されます。"
  syntax:
    content: public bool SkipUnchangedFiles { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、`Copy`タスクが、それ以外のソースと宛先間変更されないファイルのコピーをスキップする必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  id: SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "取得またはコピーするファイルを設定します。"
  syntax:
    content: public Microsoft.Build.Framework.ITaskItem[] SourceFiles { get; set; }
    return:
      type: Microsoft.Build.Framework.ITaskItem[]
      description: "コピーするファイル。"
  overload: Microsoft.Build.Tasks.Copy.SourceFiles*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  id: UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  langs:
  - csharp
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  type: Property
  assemblies:
  - Microsoft.Build.Tasks.v4.0
  namespace: Microsoft.Build.Tasks
  summary: "ハード リンクを使用するかどうかを示します。"
  syntax:
    content: public bool UseHardlinksIfPossible { get; set; }
    return:
      type: System.Boolean
      description: "追加します。"
  overload: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Tasks.TaskExtension
  isExternal: false
  name: Microsoft.Build.Tasks.TaskExtension
- uid: Microsoft.Build.Tasks.Copy.#ctor
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy()
  nameWithType: Copy.Copy()
  fullName: Microsoft.Build.Tasks.Copy.Copy()
- uid: Microsoft.Build.Tasks.Copy.Cancel
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel()
  nameWithType: Copy.Cancel()
  fullName: Microsoft.Build.Tasks.Copy.Cancel()
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
  fullName: Microsoft.Build.Tasks.Copy.CopiedFiles
- uid: Microsoft.Build.Framework.ITaskItem[]
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem[]
  spec.csharp:
  - uid: Microsoft.Build.Framework.ITaskItem
    name: ITaskItem
    nameWithType: ITaskItem
    fullName: ITaskItem[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
  fullName: Microsoft.Build.Tasks.Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
  fullName: Microsoft.Build.Tasks.Copy.DestinationFolder
- uid: Microsoft.Build.Framework.ITaskItem
  parent: Microsoft.Build.Framework
  isExternal: false
  name: ITaskItem
  nameWithType: ITaskItem
  fullName: Microsoft.Build.Framework.ITaskItem
- uid: Microsoft.Build.Tasks.Copy.Execute
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute()
  nameWithType: Copy.Execute()
  fullName: Microsoft.Build.Tasks.Copy.Execute()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
  fullName: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
  fullName: Microsoft.Build.Tasks.Copy.Retries
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
  fullName: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
  fullName: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
  fullName: Microsoft.Build.Tasks.Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
  fullName: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible
- uid: Microsoft.Build.Tasks.Copy.#ctor*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Copy
  nameWithType: Copy.Copy
- uid: Microsoft.Build.Tasks.Copy.Cancel*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Cancel
  nameWithType: Copy.Cancel
- uid: Microsoft.Build.Tasks.Copy.CopiedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: CopiedFiles
  nameWithType: Copy.CopiedFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFiles
  nameWithType: Copy.DestinationFiles
- uid: Microsoft.Build.Tasks.Copy.DestinationFolder*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: DestinationFolder
  nameWithType: Copy.DestinationFolder
- uid: Microsoft.Build.Tasks.Copy.Execute*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Execute
  nameWithType: Copy.Execute
- uid: Microsoft.Build.Tasks.Copy.OverwriteReadOnlyFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: OverwriteReadOnlyFiles
  nameWithType: Copy.OverwriteReadOnlyFiles
- uid: Microsoft.Build.Tasks.Copy.Retries*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: Retries
  nameWithType: Copy.Retries
- uid: Microsoft.Build.Tasks.Copy.RetryDelayMilliseconds*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: RetryDelayMilliseconds
  nameWithType: Copy.RetryDelayMilliseconds
- uid: Microsoft.Build.Tasks.Copy.SkipUnchangedFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SkipUnchangedFiles
  nameWithType: Copy.SkipUnchangedFiles
- uid: Microsoft.Build.Tasks.Copy.SourceFiles*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: SourceFiles
  nameWithType: Copy.SourceFiles
- uid: Microsoft.Build.Tasks.Copy.UseHardlinksIfPossible*
  parent: Microsoft.Build.Tasks.Copy
  isExternal: false
  name: UseHardlinksIfPossible
  nameWithType: Copy.UseHardlinksIfPossible
