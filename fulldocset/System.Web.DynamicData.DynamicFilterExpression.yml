### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicFilterExpression
  id: DynamicFilterExpression
  children:
  - System.Web.DynamicData.DynamicFilterExpression.#ctor
  - System.Web.DynamicData.DynamicFilterExpression.ControlID
  - System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  langs:
  - csharp
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression
  fullName: System.Web.DynamicData.DynamicFilterExpression
  type: Class
  summary: "指定されたフィルター コントロールからの値を使用して、データベース クエリを変更します。"
  remarks: "DynamicFilterExpression クラスで割り当てられている値を使用して、データベース クエリを変更することができます、<xref:System.Web.DynamicData.DynamicFilter>コントロール</xref:System.Web.DynamicData.DynamicFilter>。 このコントロールのビルドのタスクのデリゲート、<xref:System.Linq.IQueryable>などの特殊なコントロールにクエリ<xref:System.Web.DynamicData.QueryableFilterRepeater>コントロールまたは<xref:System.Web.DynamicData.DynamicFilter>コントロール</xref:System.Web.DynamicData.DynamicFilter></xref:System.Web.DynamicData.QueryableFilterRepeater></xref:System.Linq.IQueryable>。       フィルター コントロールは、参照するフィルター テンプレートへのクエリの構築を委任します。 によって参照されているデータ ソース コントロールによって、クエリを実行し、<xref:System.Web.UI.WebControls.QueryExtender>コントロール</xref:System.Web.UI.WebControls.QueryExtender>。       クラスを使用する、DynamicFilterExpression ページで、次の手順:-追加、<xref:System.Web.UI.WebControls.QueryExtender>コントロールをページ</xref:System.Web.UI.WebControls.QueryExtender>。      -設定、`TargetControlID`のプロパティ、<xref:System.Web.UI.WebControls.QueryExtender>コントロールをデータ ソース コントロールを参照します</xref:System.Web.UI.WebControls.QueryExtender>。      追加 DynamicFilterExpression オブジェクトの子として、<xref:System.Web.UI.WebControls.QueryExtender>コントロール</xref:System.Web.UI.WebControls.QueryExtender>。      -設定、`ControlID`フィルター コントロールを参照する DynamicFilterExpression オブジェクトのプロパティです。       前の手順で、関連するフィルター コントロール、データ バインド コントロールとデータ ソース コントロールがページで定義されていると見なされます。"
  example:
  - "The following example shows how to use the DynamicFilterExpression control to select a filter template in a page. The filter template is selected by the <xref:System.Web.DynamicData.DynamicFilter> control that is identified by DynamicFilterExpression control through its `ControID` property.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: 'public class DynamicFilterExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref>クラスです。"
  syntax:
    content: public DynamicFilterExpression ();
    parameters: []
  overload: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  id: ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "取得またはフィルター コントロール id を設定します。"
  remarks: "このコントロールの識別子を使って、<xref:System.Web.DynamicData.DynamicFilterExpression>フィルター選択するクラスがそこにさらに、データ ソース コントロールによって実行されるクエリの作成のタスクを委任を制御します</xref:System.Web.DynamicData.DynamicFilterExpression>。       フィルター コントロールは、構築、クエリ フィルター テンプレートへの参照のタスクを委任します。 によって参照されているデータ ソース コントロールによって、クエリを実行し、<xref:System.Web.UI.WebControls.QueryExtender>コントロール</xref:System.Web.UI.WebControls.QueryExtender>。"
  example:
  - "The following example shows how to use the <xref:System.Web.DynamicData.DynamicFilterExpression> class to select a filter control in a page.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\"   \n    TargetControlID=\"GridDataSource\" runat=\"server\">  \n    <asp:DynamicFilterExpression ControlID=\"CategoryFilterID\" />  \n</asp:QueryExtender>  \n```"
  syntax:
    content: public string ControlID { get; set; }
    return:
      type: System.String
      description: "フィルター コントロールの識別子です。"
  overload: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "現在のフィルター値を使用して、変更したクエリを取得します。"
  remarks: "GetQueryable メソッドによって指定されるフィルター コントロールによって参照されているフィルター テンプレートへのクエリの構築のタスクのデリゲート、<xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>プロパティ</xref:System.Web.DynamicData.DynamicFilterExpression.ControlID%2A>。"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "変更するデータ ソース クエリ。"
    return:
      type: System.Linq.IQueryable
      description: "データ ソース クエリに含まれている現在の値を使用して変更される、 <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref>インスタンス。"
  overload: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  id: SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  langs:
  - csharp
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "データ ソースの情報を持つ式を初期化します。"
  syntax:
    content: public override void SetContext (System.Web.UI.Control owner, System.Web.HttpContext context, System.Web.UI.WebControls.IQueryableDataSource dataSource);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "含むコントロール、 <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref>インスタンスなど、 <xref href=&quot;System.Web.UI.WebControls.QueryExtender&quot;> </xref>コントロール。"
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;></xref>オブジェクト。"
    - id: dataSource
      type: System.Web.UI.WebControls.IQueryableDataSource
      description: "ターゲット データ ソース、 <xref href=&quot;System.Web.DynamicData.DynamicFilterExpression&quot;> </xref>インスタンス。"
  overload: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.DataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.DataSourceExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression()
  nameWithType: DynamicFilterExpression.DynamicFilterExpression()
  fullName: System.Web.DynamicData.DynamicFilterExpression.DynamicFilterExpression()
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
  fullName: System.Web.DynamicData.DynamicFilterExpression.ControlID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: DynamicFilterExpression.GetQueryable(IQueryable)
  fullName: System.Web.DynamicData.DynamicFilterExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext(Control,HttpContext,IQueryableDataSource)
  nameWithType: DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
  fullName: System.Web.DynamicData.DynamicFilterExpression.SetContext(Control,HttpContext,IQueryableDataSource)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.IQueryableDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IQueryableDataSource
  nameWithType: IQueryableDataSource
  fullName: System.Web.UI.WebControls.IQueryableDataSource
- uid: System.Web.DynamicData.DynamicFilterExpression.#ctor*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: DynamicFilterExpression
  nameWithType: DynamicFilterExpression.DynamicFilterExpression
- uid: System.Web.DynamicData.DynamicFilterExpression.ControlID*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: ControlID
  nameWithType: DynamicFilterExpression.ControlID
- uid: System.Web.DynamicData.DynamicFilterExpression.GetQueryable*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: GetQueryable
  nameWithType: DynamicFilterExpression.GetQueryable
- uid: System.Web.DynamicData.DynamicFilterExpression.SetContext*
  parent: System.Web.DynamicData.DynamicFilterExpression
  isExternal: false
  name: SetContext
  nameWithType: DynamicFilterExpression.SetContext
