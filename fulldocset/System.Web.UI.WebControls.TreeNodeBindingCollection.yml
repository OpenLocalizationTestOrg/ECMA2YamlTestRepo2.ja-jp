### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  id: TreeNodeBindingCollection
  children:
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>内のオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref>コントロール。 このクラスは継承できません。"
  remarks: "TreeNodeBindingCollection クラスは、格納し、管理のコレクションに使用<xref:System.Web.UI.WebControls.TreeNodeBinding>内のオブジェクト、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.TreeNodeBinding>。 <xref:System.Web.UI.WebControls.TreeView>コントロール クラスを使用して、TreeNodeBindingCollection の<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>プロパティ</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A></xref:System.Web.UI.WebControls.TreeView>。       <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>プロパティが含まれます<xref:System.Web.UI.WebControls.TreeNodeBinding>データ項目とそのバインド先のノード間のリレーションシップを定義するオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。 によって返される値を表示、ノードの各データ項目が (XML 要素などいくつかの属性を持つ)、複数のプロパティを含むデータ ソースにバインドするとき、`ToString`既定では、データ項目のメソッドです。 XML 要素の場合、ノードには、ツリーの基になる構造を示していますが、それ以外が非常に便利ですが、要素名が表示されます。 ツリー ノードのバインディングを指定することによって、ノードを特定のデータ項目のプロパティにバインドできます。 ただし、<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションがプログラムによって設定されると、宣言によって設定は通常</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>。       ツリー ノードのバインディングを設定する宣言によって: 1。  入れ子に開始タグと終了`<DataBindings>`タグ、開始タグと終了タグの間、<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView>。      2.  場所`<asp:TreeNodeBinding>`開始タグと終了の間に要素`<DataBindings>`各ツリー ノードのバインディングを指定するためのタグ。       追加と削除によって、TreeNodeBindingCollection をプログラムで管理できる<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。 追加する、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトを使用して、コレクション、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>または<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>メソッド</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A></xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A></xref:System.Web.UI.WebControls.TreeNodeBinding>。 コレクションからノードを削除するには、使用、 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>、 <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>、または<xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName>メソッド</xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName></xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A></xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>。       TreeNodeBindingCollection クラスには、コレクション内の項目にアクセスするいくつかの方法がサポートしている:-を使用して、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>を取得するためのインデクサー、<xref:System.Web.UI.WebControls.TreeNode>オブジェクトを直接特定の&0; から始まるインデックス</xref:System.Web.UI.WebControls.TreeNode></xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>。      -を使用して、<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>メソッドをコレクションを反復処理に使用できる列挙子を作成します</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. The second code example demonstrates how to populate a TreeNodeBindingCollection object programmatically.  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_1.aspx)]  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_2.aspx)]  \n  \n The following is the XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n       <Section Heading=\"Section 1\">  \n       </Section>  \n       <Section Heading=\"Section 2\">  \n       </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: 'public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  id: Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した追加<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>の末尾にオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>オブジェクト。"
  remarks: "Add メソッドを使用して、指定した追加を<xref:System.Web.UI.WebControls.TreeNodeBinding>の末尾にオブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクト</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。       代わりに、挿入することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding>内のオブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>を使用して、特定のインデックスにある、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>メソッド</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A></xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  example:
  - "The following code example demonstrates how to use the Add method to add a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically to a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/1c7f636a-948c-4466-bc6b-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/1c7f636a-948c-4466-bc6b-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を追加します。"
    return:
      type: System.Int32
      description: "追加される位置の&0; から始まるインデックス<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>で、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  id: Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "決定するかどうか、指定した<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトがコレクション内にします。"
  remarks: "Contains メソッドを使用しているかどうか、<xref:System.Web.UI.WebControls.TreeNodeBinding>にオブジェクトが含まれている、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクト</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。 このメソッドは通常の存在をテストする使用、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトを追加または削除などのタスクを実行する前に、<xref:System.Web.UI.WebControls.TreeNodeBinding>コレクションから</xref:System.Web.UI.WebControls.TreeNodeBinding></xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を検索します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>コレクションには、それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "すべての項目をコピー、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>オブジェクトの場合は、互換性のある&1; 次元配列を<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクト、ターゲット配列の指定したインデックスから始まります。"
  remarks: "内容をコピーする CopyTo メソッドを使用して、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクトに`bindingArray`</xref:System.Web.UI.WebControls.TreeNodeBindingCollection>。 項目は、開始位置としてコピー`index`です。 配列は、コレクション内にある項目にアクセスし、使用できます。       代わりに、使用することができます、<xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>メソッドをコレクション内の項目へのアクセスに使用できる列挙子を作成します</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>。"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection to an array.  \n  \n [!code-cs[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/csharp/57693c79-624a-4a4d-979f-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/57693c79-624a-4a4d-979f-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);
    parameters:
    - id: bindingArray
      type: System.Web.UI.WebControls.TreeNodeBinding[]
      description: "0 から始まる配列<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトからコピーされた項目を受信する、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>です。"
    - id: index
      type: System.Int32
      description: "内の位置`bindingArray`コピーされた内容の受信を開始する位置を示すです。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "追加します。"
    return:
      type: System.Object
      description: "追加します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "追加します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  id: IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定したインデックスを決定<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>コレクション内のオブジェクト。"
  remarks: "IndexOf メソッドを使用して、指定した&0; から始まるインデックスを決定する<xref:System.Web.UI.WebControls.TreeNodeBinding>内のオブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクト</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。 コレクション内のノードは、このメソッドは-1 を返します。      > [!NOTE] > 場合、指定した<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトでは、コレクション内で複数回表示され、最初に見つかった位置のインデックスが返されます</xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を検索します。"
    return:
      type: System.Int32
      description: "最初に見つかった位置の&0; から始まるインデックス<code> binding </code>内で、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>、それ以外の場合は、-1。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定した挿入<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトに、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>指定したインデックス位置にあるオブジェクト。"
  remarks: "挿入メソッドを使用して、指定された挿入する<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトに、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクト`index`</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。       代わりに、追加することができます、<xref:System.Web.UI.WebControls.TreeNodeBinding>の末尾にオブジェクト、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>を使用して、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>メソッド</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A></xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  example:
  - "The following code example demonstrates how to use the Insert method to insert a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically into a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/b258c1b7-cd55-4993-aa16-_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/b258c1b7-cd55-4993-aa16-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "挿入する位置を示す&0; から始まるインデックス位置、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>です。"
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を挿入します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>で指定したインデックス位置にオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>オブジェクト。"
  remarks: "項目のインデクサーへのアクセスを使用して、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトから、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクトにある`i`配列表記を使用します</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。 項目のインデクサーを使用すると、変更または置換、<xref:System.Web.UI.WebControls.TreeNodeBinding>直接コレクション内のオブジェクト</xref:System.Web.UI.WebControls.TreeNodeBinding>。"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the items that are in a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. The <xref:System.Web.UI.WebControls.TreeNodeBinding> object for the third-level nodes is updated programmatically with new values. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1093_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1093_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を取得します。"
    return:
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>で指定したインデックス位置、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;></xref>です。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "追加します。"
    - id: value
      type: System.Object
      description: "追加します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "追加します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  id: Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "指定された削除<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;></xref>オブジェクトから、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>オブジェクト。"
  remarks: "Remove メソッドを使用して、指定された削除を<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトをコレクションから</xref:System.Web.UI.WebControls.TreeNodeBinding>。 そのノードに続くすべての項目は、空いた位置を埋める移動されます。 移動した項目のインデックスも更新します。       代わりを使用して、特定のインデックス位置にあるノードを削除することができます、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>メソッド</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>。 使用してコレクション内のすべてのノードを削除することも、<xref:System.Web.UI.StateManagedCollection.Clear%2A>メソッド</xref:System.Web.UI.StateManagedCollection.Clear%2A>。"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/d829ba87-3d4f-4bb0-a238-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/d829ba87-3d4f-4bb0-a238-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を削除します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>オブジェクトから指定したインデックス位置にある、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>オブジェクト。"
  remarks: "RemoveAt メソッドを使用して、削除、<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトにある`index`から、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection>オブジェクト</xref:System.Web.UI.WebControls.TreeNodeBindingCollection></xref:System.Web.UI.WebControls.TreeNodeBinding>。 そのノードに続くすべての項目は、空いた位置を埋める移動されます。 移動した項目のインデックスも更新します。       代わりに、特定を削除することができます<xref:System.Web.UI.WebControls.TreeNodeBinding>オブジェクトを使用して、<xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>メソッド</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A></xref:System.Web.UI.WebControls.TreeNodeBinding>。 使用して、コレクション内のすべてのノードを削除することも、<xref:System.Web.UI.StateManagedCollection.Clear%2A>メソッド</xref:System.Web.UI.StateManagedCollection.Clear%2A>。"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_131_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_131_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス位置、 <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>を削除します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "追加します。"
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
- uid: System.Web.UI.WebControls.TreeNodeBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNodeBinding
    name: TreeNodeBinding
    nameWithType: TreeNodeBinding
    fullName: TreeNodeBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeBindingCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeBindingCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: TreeNodeBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: TreeNodeBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeBindingCollection.Insert
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeBindingCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: TreeNodeBindingCollection.OnClear
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: TreeNodeBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeBindingCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: TreeNodeBindingCollection.SetDirtyObject
