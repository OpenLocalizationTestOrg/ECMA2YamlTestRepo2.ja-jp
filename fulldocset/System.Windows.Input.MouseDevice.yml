### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseDevice
  id: MouseDevice
  children:
  - System.Windows.Input.MouseDevice.ActiveSource
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  - System.Windows.Input.MouseDevice.Captured
  - System.Windows.Input.MouseDevice.DirectlyOver
  - System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  - System.Windows.Input.MouseDevice.GetClientPosition
  - System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  - System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.GetScreenPosition
  - System.Windows.Input.MouseDevice.LeftButton
  - System.Windows.Input.MouseDevice.MiddleButton
  - System.Windows.Input.MouseDevice.OverrideCursor
  - System.Windows.Input.MouseDevice.RightButton
  - System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  - System.Windows.Input.MouseDevice.Synchronize
  - System.Windows.Input.MouseDevice.Target
  - System.Windows.Input.MouseDevice.UpdateCursor
  - System.Windows.Input.MouseDevice.XButton1
  - System.Windows.Input.MouseDevice.XButton2
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
  type: Class
  summary: "マウス デバイスを表します。"
  remarks: "MouseDevice をサポートしている、[!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)]インフラストラクチャ コードから直接使用するものではありません。       マウス関連の入力、<xref:System.Windows.Input.Mouse>クラス</xref:System.Windows.Input.Mouse>を使用します。  <xref:System.Windows.Input.Mouse>クラスがアプリケーションに、マウスを表し、メソッド、プロパティ、およびマウスの状態を反映するイベントを提供します</xref:System.Windows.Input.Mouse>。"
  syntax:
    content: 'public abstract class MouseDevice : System.Windows.Input.InputDevice'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.Input.InputDevice
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.ActiveSource
  id: ActiveSource
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: System.Windows.Input.MouseDevice.ActiveSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得、 <xref href=&quot;System.Windows.PresentationSource&quot;> </xref>このデバイスの入力を報告します。"
  syntax:
    content: public override System.Windows.PresentationSource ActiveSource { get; }
    return:
      type: System.Windows.PresentationSource
      description: "このデバイスの入力のソース。"
  overload: System.Windows.Input.MouseDevice.ActiveSource*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  id: Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定された要素にマウス イベントをキャプチャします。"
  remarks: "境界内にカーソルがあるかどうかのマウス入力を受け取る要素は、マウスをキャプチャ場合、<xref:System.Windows.Input.CaptureMode>が指定されていない、既定値<xref:System.Windows.Input.CaptureMode>は<xref:System.Windows.Input.CaptureMode>.</xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode> </xref:System.Windows.Input.CaptureMode>       マウスのキャプチャを解放する呼び出しを渡すキャプチャ`null`をキャプチャする要素として。       マウスがキャプチャされる場合と、<xref:System.Windows.Input.Mouse.MouseDown>または<xref:System.Windows.Input.Mouse.MouseUp>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>と<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>最初に発生します</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement></xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement></xref:System.Windows.Input.Mouse.MouseUp></xref:System.Windows.Input.Mouse.MouseDown>。  これにより、キャプチャした要素の前にキャプチャを解放する機会、<xref:System.Windows.Input.Mouse.MouseDown>と<xref:System.Windows.Input.Mouse.MouseUp>イベント ルーティングされます</xref:System.Windows.Input.Mouse.MouseUp></xref:System.Windows.Input.Mouse.MouseDown>。"
  syntax:
    content: public bool Capture (System.Windows.IInputElement element);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "マウスをキャプチャする要素。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素がマウスをキャプチャできた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>element</code>is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement,CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement,CaptureMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウス入力を指定して、指定した要素にキャプチャ<xref href=&quot;System.Windows.Input.CaptureMode&quot;></xref>です。"
  remarks: "要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。       マウスのキャプチャを解放する呼び出し<xref:System.Windows.Input.MouseDevice.Capture%2A>渡す`null`をキャプチャする要素として</xref:System.Windows.Input.MouseDevice.Capture%2A>。       マウスがキャプチャされる場合と、<xref:System.Windows.Input.Mouse.MouseDown>または<xref:System.Windows.Input.Mouse.MouseUp>イベントが発生し、マウスのボタンの下にある要素を入力することはしません<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement>と<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement>最初に発生します</xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement></xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement></xref:System.Windows.Input.Mouse.MouseUp></xref:System.Windows.Input.Mouse.MouseDown>。  これにより、キャプチャした要素の前にキャプチャを解放する機会、<xref:System.Windows.Input.Mouse.MouseDown>と<xref:System.Windows.Input.Mouse.MouseUp>イベント ルーティングされます</xref:System.Windows.Input.Mouse.MouseUp></xref:System.Windows.Input.Mouse.MouseDown>。"
  syntax:
    content: public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: "要素がマウスをキャプチャするには."
    - id: captureMode
      type: System.Windows.Input.CaptureMode
      description: "使用するキャプチャ ポリシー。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素がマウスをキャプチャできた場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>element</code>is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>captureMode</code>有効ではありません<xref href=&quot;System.Windows.Input.CaptureMode&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Captured
  id: Captured
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: System.Windows.Input.MouseDevice.Captured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得、 <xref href=&quot;System.Windows.IInputElement&quot;> </xref>マウスでキャプチャされました。"
  remarks: "要素は、マウスをキャプチャ、ときに、カーソルが境界内にあるかどうかを示す、マウス入力を受け取ります。"
  syntax:
    content: public System.Windows.IInputElement Captured { get; }
    return:
      type: System.Windows.IInputElement
      description: "マウスでキャプチャされる要素。"
  overload: System.Windows.Input.MouseDevice.Captured*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  id: DirectlyOver
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: System.Windows.Input.MouseDevice.DirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "直接上にマウス ポインターが要素を取得します。"
  remarks: "その要素にマウスをキャプチャしたが場合、マウスが要素上で直接と見なされます。       コントロールは、複数の要素で構成されます。 DirectlyOver は、上にマウス ポインターが複合コントロールおよびコントロール自体ではなく特定の要素を報告します。  たとえばの<xref:System.Windows.Controls.Button>上にポインターが、DirectlyOver プロパティでしたが<xref:System.Windows.Controls.TextBox>、<xref:System.Windows.Controls.ContentControl.Content%2A>プロパティまたは<xref:Microsoft.Windows.Themes.ButtonChrome>。</xref:Microsoft.Windows.Themes.ButtonChrome></xref:System.Windows.Controls.ContentControl.Content%2A>の</xref:System.Windows.Controls.TextBox>レポートのレポート</xref:System.Windows.Controls.Button>パーツによって異なります       使用して、<xref:System.Windows.IInputElement.IsMouseOver%2A>プロパティ<xref:System.Windows.UIElement>と<xref:System.Windows.ContentElement>にマウスが要素、そのビジュアル子要素が含まれているかどうかを決定したり複合要素を制御したりします</xref:System.Windows.ContentElement></xref:System.Windows.UIElement></xref:System.Windows.IInputElement.IsMouseOver%2A>。"
  syntax:
    content: public System.Windows.IInputElement DirectlyOver { get; }
    return:
      type: System.Windows.IInputElement
      description: "マウス ポインターの下の要素は over です。"
  overload: System.Windows.Input.MouseDevice.DirectlyOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  id: GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: System.Windows.Input.MouseDevice.GetButtonState(MouseButton)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定されたマウス ボタンの状態を取得します。"
  syntax:
    content: protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);
    parameters:
    - id: mouseButton
      type: System.Windows.Input.MouseButton
      description: "クエリが実行されているボタンです。"
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.GetButtonState*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  id: GetClientPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: System.Windows.Input.MouseDevice.GetClientPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "クライアント座標でマウス ポインターの位置を計算します。"
  syntax:
    content: protected System.Windows.Point GetClientPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "クライアント座標でマウス ポインターの位置。"
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  id: GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: System.Windows.Input.MouseDevice.GetClientPosition(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウス ポインターの位置を指定した、クライアント座標で計算<xref href=&quot;System.Windows.PresentationSource&quot;></xref>です。"
  syntax:
    content: protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);
    parameters:
    - id: presentationSource
      type: System.Windows.PresentationSource
      description: "マウスの位置を取得する対象のソース。"
    return:
      type: System.Windows.Point
      description: "マウス ポインターの位置を指定したのクライアント座標で<xref href=&quot;System.Windows.PresentationSource&quot;></xref>です。"
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseDevice.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定した要素に相対的なマウスの位置を取得します。"
  remarks: "マウス ポインターの位置を指定された相対計算<xref:System.Windows.IInputElement>0, 0、元の要素の左上隅にします</xref:System.Windows.IInputElement>。"
  syntax:
    content: public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: "マウスの位置を計算するフレームの参照。"
    return:
      type: System.Windows.Point
      description: "パラメーターに相対的なマウスの位置<code> relativeTo</code>です。"
  overload: System.Windows.Input.MouseDevice.GetPosition*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>relativeTo</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or is not a <xref href=&quot;System.Windows.UIElement&quot;></xref> or <xref href=&quot;System.Windows.ContentElement&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  id: GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: System.Windows.Input.MouseDevice.GetScreenPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウス ポインターの画面上の位置を計算します。"
  syntax:
    content: protected System.Windows.Point GetScreenPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: "マウス ポインターの位置。"
  overload: System.Windows.Input.MouseDevice.GetScreenPosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: System.Windows.Input.MouseDevice.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このマウス デバイスのマウスの左ボタンの状態を取得します。"
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.LeftButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: System.Windows.Input.MouseDevice.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このマウス デバイスの中央ボタンの状態。"
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.MiddleButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  id: OverrideCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: System.Windows.Input.MouseDevice.OverrideCursor
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得またはアプリケーション全体のカーソルを設定します。"
  remarks: "<xref:System.Windows.Input.Cursor>OverrideCursor に設定されているアプリケーション全体に適用されます</xref:System.Windows.Input.Cursor>。       オーバーライドをオフに<xref:System.Windows.Input.Cursor>、OverrideCursor &quot;éý&quot; `null`</xref:System.Windows.Input.Cursor> 。       設定 OverrideCursor<xref:System.Windows.Input.Cursors.None%2A>が強制的に表示されますが、マウス カーソルが、マウス イベントは処理されます</xref:System.Windows.Input.Cursors.None%2A>。"
  syntax:
    content: public System.Windows.Input.Cursor OverrideCursor { get; set; }
    return:
      type: System.Windows.Input.Cursor
      description: "オーバーライドされたカーソルまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> OverrideCursor が設定されていない場合。"
  overload: System.Windows.Input.MouseDevice.OverrideCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: System.Windows.Input.MouseDevice.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このマウス デバイスの右ボタンの状態を取得します。"
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.RightButton*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  id: SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: System.Windows.Input.MouseDevice.SetCursor(Cursor)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指定したマウス ポインターを設定します。<xref href=&quot;System.Windows.Input.Cursor&quot;></xref>"
  remarks: "このカーソルは常に特定適用されないことに注意してください<xref:System.Windows.UIElement>がではなくアプリケーション全体に適用されます</xref:System.Windows.UIElement>。"
  syntax:
    content: public bool SetCursor (System.Windows.Input.Cursor cursor);
    parameters:
    - id: cursor
      type: System.Windows.Input.Cursor
      description: "マウス ポインターを設定するカーソル。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マウス カーソルが設定されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Input.MouseDevice.SetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Synchronize
  id: Synchronize
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: System.Windows.Input.MouseDevice.Synchronize()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "マウスを強制的に再同期を実行します。"
  remarks: "<xref:System.Windows.Input.MouseDevice>モニターのレイアウトの変更し、同期を呼び出します</xref:System.Windows.Input.MouseDevice>。  あります。 マウス入力システムが変更に応答するため、更新を強制する必要があります。  たとえば、タイマー上にマウス ポインターを再同期する必要があります。"
  syntax:
    content: public void Synchronize ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.Synchronize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.Target
  id: Target
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Target
  nameWithType: MouseDevice.Target
  fullName: System.Windows.Input.MouseDevice.Target
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "取得、 <xref href=&quot;System.Windows.IInputElement&quot;> </xref>にこのマウス デバイスからの入力を送信します。"
  remarks: "ターゲットを<xref:System.Windows.Input.MouseDevice>が上にマウスがオブジェクトとマウスのキャプチャを持つオブジェクト</xref:System.Windows.Input.MouseDevice>。"
  syntax:
    content: public override System.Windows.IInputElement Target { get; }
    return:
      type: System.Windows.IInputElement
      description: "入力を受け取る要素です。"
  overload: System.Windows.Input.MouseDevice.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  id: UpdateCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: System.Windows.Input.MouseDevice.UpdateCursor()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "更新する、マウス カーソルを強制します。"
  syntax:
    content: public void UpdateCursor ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.UpdateCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: System.Windows.Input.MouseDevice.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このマウス デバイスの第&1; 拡張ボタンの状態を取得します。"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.XButton1*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.MouseDevice.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: System.Windows.Input.MouseDevice.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "このマウス デバイスの第&2; 拡張ボタンの状態を取得します。"
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: "ボタンの状態。"
  overload: System.Windows.Input.MouseDevice.XButton2*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Input.InputDevice
  isExternal: false
  name: System.Windows.Input.InputDevice
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.MouseDevice.ActiveSource
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: System.Windows.Input.MouseDevice.ActiveSource
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement,CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement,CaptureMode)
  fullName: System.Windows.Input.MouseDevice.Capture(IInputElement,CaptureMode)
- uid: System.Windows.Input.CaptureMode
  parent: System.Windows.Input
  isExternal: false
  name: CaptureMode
  nameWithType: CaptureMode
  fullName: System.Windows.Input.CaptureMode
- uid: System.Windows.Input.MouseDevice.Captured
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: System.Windows.Input.MouseDevice.Captured
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: System.Windows.Input.MouseDevice.DirectlyOver
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: System.Windows.Input.MouseDevice.GetButtonState(MouseButton)
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseButton
  parent: System.Windows.Input
  isExternal: false
  name: MouseButton
  nameWithType: MouseButton
  fullName: System.Windows.Input.MouseButton
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: System.Windows.Input.MouseDevice.GetClientPosition()
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: System.Windows.Input.MouseDevice.GetClientPosition(PresentationSource)
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: System.Windows.Input.MouseDevice.GetPosition(IInputElement)
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: System.Windows.Input.MouseDevice.GetScreenPosition()
- uid: System.Windows.Input.MouseDevice.LeftButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: System.Windows.Input.MouseDevice.LeftButton
- uid: System.Windows.Input.MouseDevice.MiddleButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: System.Windows.Input.MouseDevice.MiddleButton
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: System.Windows.Input.MouseDevice.OverrideCursor
- uid: System.Windows.Input.Cursor
  parent: System.Windows.Input
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Input.Cursor
- uid: System.Windows.Input.MouseDevice.RightButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: System.Windows.Input.MouseDevice.RightButton
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: System.Windows.Input.MouseDevice.SetCursor(Cursor)
- uid: System.Windows.Input.MouseDevice.Synchronize
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: System.Windows.Input.MouseDevice.Synchronize()
- uid: System.Windows.Input.MouseDevice.Target
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
  fullName: System.Windows.Input.MouseDevice.Target
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: System.Windows.Input.MouseDevice.UpdateCursor()
- uid: System.Windows.Input.MouseDevice.XButton1
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: System.Windows.Input.MouseDevice.XButton1
- uid: System.Windows.Input.MouseDevice.XButton2
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: System.Windows.Input.MouseDevice.XButton2
- uid: System.Windows.Input.MouseDevice.ActiveSource*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
- uid: System.Windows.Input.MouseDevice.Capture*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture
  nameWithType: MouseDevice.Capture
- uid: System.Windows.Input.MouseDevice.Captured*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
- uid: System.Windows.Input.MouseDevice.DirectlyOver*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
- uid: System.Windows.Input.MouseDevice.GetButtonState*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState
  nameWithType: MouseDevice.GetButtonState
- uid: System.Windows.Input.MouseDevice.GetClientPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition
  nameWithType: MouseDevice.GetClientPosition
- uid: System.Windows.Input.MouseDevice.GetPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition
  nameWithType: MouseDevice.GetPosition
- uid: System.Windows.Input.MouseDevice.GetScreenPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition
  nameWithType: MouseDevice.GetScreenPosition
- uid: System.Windows.Input.MouseDevice.LeftButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
- uid: System.Windows.Input.MouseDevice.MiddleButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
- uid: System.Windows.Input.MouseDevice.OverrideCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
- uid: System.Windows.Input.MouseDevice.RightButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
- uid: System.Windows.Input.MouseDevice.SetCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor
  nameWithType: MouseDevice.SetCursor
- uid: System.Windows.Input.MouseDevice.Synchronize*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize
  nameWithType: MouseDevice.Synchronize
- uid: System.Windows.Input.MouseDevice.Target*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
- uid: System.Windows.Input.MouseDevice.UpdateCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor
  nameWithType: MouseDevice.UpdateCursor
- uid: System.Windows.Input.MouseDevice.XButton1*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
- uid: System.Windows.Input.MouseDevice.XButton2*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
