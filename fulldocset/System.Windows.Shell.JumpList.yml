### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpList
  id: JumpList
  children:
  - System.Windows.Shell.JumpList.#ctor
  - System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  - System.Windows.Shell.JumpList.Apply
  - System.Windows.Shell.JumpList.BeginInit
  - System.Windows.Shell.JumpList.EndInit
  - System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  - System.Windows.Shell.JumpList.JumpItems
  - System.Windows.Shell.JumpList.JumpItemsRejected
  - System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  - System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  - System.Windows.Shell.JumpList.ShowFrequentCategory
  - System.Windows.Shell.JumpList.ShowRecentCategory
  langs:
  - csharp
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
  type: Class
  summary: "アイテムとのメニューとして表示されるタスクの一覧を表す、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バー ボタンをクリックします。"
  remarks: "[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーがジャンプ リストを使用して、タスク バー ボタンから直接プログラムを起動するための拡張機能を提供します。 ジャンプ リスト、でも使用されて、[!INCLUDE[win7](~/add/includes/win7-md.md)]スタート メニューです。 ジャンプ リストは、タスク バーのボタンを右クリックするか、[スタート] メニューでプログラムの横にある矢印をクリックしてアクセスします。 ジャンプ リストの詳細については、次を参照してください。、[タスクバー](http://go.microsoft.com/fwlink/?LinkId=178478) 、Windows ユーザー エクスペリエンス ガイドラインのセクションです。       JumpList クラスのジャンプ リスト機能のためのマネージ ラッパーを提供する、[!INCLUDE[win7](~/add/includes/win7-md.md)]タスク バーに渡されるデータを管理し、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェルです。 JumpList クラスによって公開される機能では使用できませんのバージョンの[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]よりも前[!INCLUDE[win7](~/add/includes/win7-md.md)]です。 JumpList クラスを使用するアプリケーションの他のバージョンで実行されます[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]がジャンプ リストは利用できません。 Windows シェルおよびネイティブのジャンプ リスト Api の詳細については、次を参照してください。[タスク バーの拡張機能](http://go.microsoft.com/fwlink/?LinkId=178479)します。       次の図は、ジャンプ リストを Windows Media Player で項目を含む、**タスク**と**利用頻度**カテゴリ。       ![Windows メディア プレーヤーのジャンプ リスト](~/add/media/wpfshell-jumplist.png &quot;Windows メディア プレーヤーのジャンプ リスト&quot;)Windows メディア プレーヤーのジャンプ リスト ##、ジャンプ リスト ジャンプ リストを構成する&2; つ、項目の種類<xref:System.Windows.Shell.JumpTask>および<xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath></xref:System.Windows.Shell.JumpTask>を含めることができます A<xref:System.Windows.Shell.JumpTask>プログラムへのリンクは、および<xref:System.Windows.Shell.JumpPath>ファイルへのリンクします</xref:System.Windows.Shell.JumpPath></xref:System.Windows.Shell.JumpTask>。 作成することで視覚的にジャンプ リスト内の項目を区切ることができます、<xref:System.Windows.Shell.JumpTask>を持たない、<xref:System.Windows.Shell.JumpTask.Title%2A>と<xref:System.Windows.Shell.JumpItem.CustomCategory%2A>指定します</xref:System.Windows.Shell.JumpItem.CustomCategory%2A></xref:System.Windows.Shell.JumpTask.Title%2A></xref:System.Windows.Shell.JumpTask>。 この空<xref:System.Windows.Shell.JumpTask>ジャンプ リストに水平の線として表示されます</xref:System.Windows.Shell.JumpTask>。      > [!NOTE] > で、ファイルの種類が指定されている場合、<xref:System.Windows.Shell.JumpPath>ジャンプ リストには、ファイルは表示されません、アプリケーションに登録されていません</xref:System.Windows.Shell.JumpPath>。 たとえば、追加する場合、 <xref:System.Windows.Shell.JumpPath>.txt ファイルを指す、.txt ファイルを処理するアプリケーションを登録する必要があります</xref:System.Windows.Shell.JumpPath>。 詳細については、次を参照してください。[ファイルの関連付けの概要](http://go.microsoft.com/fwlink/?LinkId=178480)です。       ジャンプ先の項目は、したり、JumpList のカテゴリに配置されます。 既定では、<xref:System.Windows.Shell.JumpItem>に表示される、**タスク**カテゴリ</xref:System.Windows.Shell.JumpItem>。 また、 <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> <xref:System.Windows.Shell.JumpItem>。</xref:System.Windows.Shell.JumpItem>の</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>情報を指定することができます。       指定することができるかどうか、標準**最近使ったもの**と**利用頻度**設定では JumpList にカテゴリが表示される、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>と<xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>プロパティ</xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A></xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>。 これらのカテゴリの内容で管理されて、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェルです。 これらのカテゴリには、同じデータの多くが含まれている可能性があります、ため通常表示する&1; つまたはもう一方の両方ではなく、JumpList の。 [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]コモン ファイル ダイアログ ボックスから開いたまたはファイルの種類の関連付けを使用してアプリケーションを開くために使用された場合、最近使った項目を自動的に管理します。 ジャンプ リストから項目がアクセスされる場合は、通知、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェルでは、項目の追加、**最近使ったもの**を呼び出してカテゴリ、<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>メソッド</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>。      ## ジャンプ リストを Windows シェルに適用すると、シェルのジャンプ リストに直接アクセスか、JumpList クラスにその内容を読み取ることはできません。 代わりに、JumpList クラスは、使用して適用、したジャンプ リストの表現を提供、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェルです。 通常、JumpList を作成して、アプリケーションが最初に実行すると&1; つの時間を設定します。 ただし、変更したり、実行時にしたり、JumpList を置き換えます。       JumpList プロパティを設定すると、ときに、タスク バーのジャンプ リストでその内容が表示される前に、Windows シェルにしたり、JumpList を適用する必要があります。 したり、JumpList が最初の呼び出しでまたは XAML でのアプリケーションにアタッチされているときに自動的にこれは、<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッド</xref:System.Windows.Shell.JumpList.SetJumpList%2A>。 実行時にしたり、JumpList の内容を変更する必要がありますを呼び出した場合、 <xref:System.Windows.Shell.JumpList.Apply%2A>Windows シェルに、現在の内容を適用する方法</xref:System.Windows.Shell.JumpList.Apply%2A>。      ## XAML A JumpList のジャンプ リストを設定する自動的にアタッチされていない、<xref:System.Windows.Application>オブジェクト</xref:System.Windows.Application>。 JumpList をアタッチする、<xref:System.Windows.Application>添付プロパティの構文を使用して XAML でのオブジェクト</xref:System.Windows.Application>。 JumpList クラスを実装して、 <xref:System.ComponentModel.ISupportInitialize>、JumpList の XAML 宣言をサポートするインターフェイス</xref:System.ComponentModel.ISupportInitialize>。 したり、JumpList が XAML で宣言され、現在接続されているかどうかは<xref:System.Windows.Application>に自動的に適用されている、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]したり、JumpList が初期化されたときにシェルします</xref:System.Windows.Application>。      ## アタッチする JumpList の設定およびコードのジャンプ リストを変更する、 <xref:System.Windows.Application>、静的なを呼び出すことによってコード内のオブジェクト<xref:System.Windows.Shell.JumpList.SetJumpList%2A>メソッド</xref:System.Windows.Shell.JumpList.SetJumpList%2A></xref:System.Windows.Application>。 これには JumpList にも適用されます、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェルです。       実行時に、JumpList を変更するには、 <xref:System.Windows.Shell.JumpList.GetJumpList%2A> <xref:System.Windows.Application>。</xref:System.Windows.Application>に現在接続されている JumpList を取得するメソッド</xref:System.Windows.Shell.JumpList.GetJumpList%2A>を呼び出す したり、JumpList のプロパティを変更した後に呼び出す必要があります、 <xref:System.Windows.Shell.JumpList.Apply%2A>Windows シェルに変更を適用する方法</xref:System.Windows.Shell.JumpList.Apply%2A>。      > [!NOTE] > 通常にアタッチされている&1; つの JumpList を作成する、<xref:System.Windows.Application>に適用されると、[!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]シェル</xref:System.Windows.Application>。 ただし、JumpList の複数のオブジェクトを作成することができます。 一度に&1; つだけ JumpList を適用できる、 [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] 、一度に&1; つ JumpList をシェル、およびのみが<xref:System.Windows.Application>.</xref:System.Windows.Application>を関連付けることができます .NET Framework では、同じ JumpList をするこれらは必要ありません。      > [!NOTE] > このクラスには、クラス レベルのすべてのメンバーに適用されるリンク確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元に完全信頼アクセス許可があるない場合にスローされます</xref:System.Security.SecurityException>。 セキュリティ要求の詳細については、次を参照してください。[リンク確認要求](~/add/includes/ajax-current-ext-md.md)と[継承確認要求](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。"
  example:
  - "The following example shows an application with a Jump List. The application has three buttons that enable you to add a task to the current Jump List, clear the contents of the Jump List, and apply a new Jump List to the application.  \n  \n The following example shows how to declare a JumpList in markup. The JumpList contains two <xref:System.Windows.Shell.JumpTask> links and one <xref:System.Windows.Shell.JumpPath>. Applying the <xref:System.Windows.Shell.JumpPath> to the shell will fail if the application is not registered to handle the .txt file name extension.  \n  \n [!code-xml[Shell_JumpListSample#000](~/add/codesnippet/xaml/jumplistsample/app.xaml#000)]  \n  \n The following example shows the code-behind page for `App.xaml`. This code handles the <xref:System.Windows.Shell.JumpList.JumpItemsRejected> and <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> events.  \n  \n [!code-cs[Shell_JumpListSample#100](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#100)]  \n  \n The following example shows the markup used to create the application user interface.  \n  \n [!code-xml[Shell_JumpListSample#300](~/add/codesnippet/xaml/jumplistsample/mainwindow.xaml#300)]  \n  \n The following example shows the code-behind page for `MainWindow.xaml`. This code demonstrates how to modify, clear, and create a JumpList in procedural code. For the new Jump List, the static <xref:System.Windows.Shell.JumpList.SetJumpList%2A> method is called to associate the JumpList with the current application and apply the JumpList to the Windows shell.  \n  \n [!code-cs[Shell_JumpListSample#200](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#200)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Windows.Markup.ContentProperty("JumpItems")]

      public sealed class JumpList : System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>クラスです。"
  syntax:
    content: public JumpList ();
    parameters: []
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>指定されたパラメーターを持つクラス。"
  remarks: "**最近使ったもの**と**利用頻度**カテゴリ多くの場合、含まれる多くの同じジャンプ項目。 その結果、アプリケーション通常表示するか、**最近使ったもの**または**利用頻度**ジャンプ リストが、両方のカテゴリ。"
  syntax:
    content: public JumpList (System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem> items, bool showFrequent, bool showRecent);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
      description: "コレクション<xref href=&quot;System.Windows.Shell.JumpItem&quot;></xref>ジャンプ リストに表示されるオブジェクトです。"
    - id: showFrequent
      type: System.Boolean
      description: "ジャンプ リストに頻繁に使用するアイテムを表示するかどうかを示す値。"
    - id: showRecent
      type: System.Boolean
      description: "最近使用された項目がジャンプ リストに表示されるかどうかを示す値。"
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  id: AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "指定した項目のパスを追加、**最近使ったもの**ジャンプ リストのカテゴリ。"
  remarks: "内容、**最近使ったもの**カテゴリは、Windows シェルで管理されています。 ジャンプ リストで最近使用された項目を表示するには、設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>。       Windows シェルにアイテム パスを追加することを要求する AddToRecentCategory メソッドを呼び出すことができます、**最近使ったもの**項目の一覧です。 項目のファイルの種類の処理には、アプリケーションは登録されていないもには表示されません、**最近使ったもの**リストおよび AddToRecentCategory への呼び出しはサイレント モードで失敗します。"
  syntax:
    content: public static void AddToRecentCategory (string itemPath);
    parameters:
    - id: itemPath
      type: System.String
      description: "ジャンプ リストに追加するパス。"
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  id: AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "ジャンプ先の指定されたパスを追加、**最近使ったもの**ジャンプ リストのカテゴリ。"
  remarks: "内容、**最近使ったもの**カテゴリは、Windows シェルで管理されています。 ジャンプ リストで最近使用された項目を表示するには、設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>。       Windows シェルが指定のジャンプ先のパスを追加することを要求する AddToRecentCategory メソッドを呼び出すことができます、**最近使ったもの**項目の一覧です。 項目のファイルの種類の処理には、アプリケーションは登録されていないもには表示されません、**最近使ったもの**リストおよび AddToRecentCategory への呼び出しはサイレント モードで失敗します。"
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);
    parameters:
    - id: jumpPath
      type: System.Windows.Shell.JumpPath
      description: "<xref href=&quot;System.Windows.Shell.JumpPath&quot;> </xref>ジャンプ リストに追加します。"
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  id: AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "ジャンプを指定したタスクを追加、**最近使ったもの**ジャンプ リストのカテゴリ。"
  remarks: "内容、**最近使ったもの**カテゴリは、Windows シェルで管理されています。 ジャンプ リストで最近使用された項目を表示するには、設定、<xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>プロパティを`true`</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>。       Windows シェルがへのジャンプを指定したタスクを追加することを要求する AddToRecentCategory メソッドを呼び出すことができます、**最近使ったもの**項目の一覧です。"
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);
    parameters:
    - id: jumpTask
      type: System.Windows.Shell.JumpTask
      description: "<xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref>ジャンプ リストに追加します。"
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.Apply
  id: Apply
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "送信、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> Windows シェルの現在の状態にします。"
  remarks: "Apply メソッドのコンテンツを送信する、 <xref:System.Windows.Shell.JumpList>Windows シェルの現在の状態にします</xref:System.Windows.Shell.JumpList>。 この呼び出しが完了した後、 <xref:System.Windows.Shell.JumpList.JumpItems%2A>Windows シェルは、タスク バーのジャンプ リストに正常に追加したアイテムのみを格納するプロパティを変更します</xref:System.Windows.Shell.JumpList.JumpItems%2A>。 イベント ハンドラーから削除された項目の一覧にアクセスできます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser></xref:System.Windows.Shell.JumpList.JumpItemsRejected>。"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection. The Apply method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public void Apply ();
    parameters: []
  overload: System.Windows.Shell.JumpList.Apply*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>が完全に初期化されていません。"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.BeginInit
  id: BeginInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "開始を通知、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>初期化します。"
  remarks: "<xref:System.Windows.Shell.JumpList>クラスは、 <xref:System.ComponentModel.ISupportInitialize> <xref:System.Windows.Shell.JumpList>。</xref:System.Windows.Shell.JumpList>の XAML 宣言をサポートするためにインターフェイス</xref:System.ComponentModel.ISupportInitialize>を実装</xref:System.Windows.Shell.JumpList>する BeginInit メソッドの呼び出し時にのみ、<xref:System.Windows.Shell.JumpList>は XAML で宣言されに接続されている、<xref:System.Windows.Application>添付プロパティの構文を使用しています</xref:System.Windows.Application></xref:System.Windows.Shell.JumpList>。 コードからこのメソッドを呼び出すことはできません。"
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "この BeginInit 呼び出し入れ子にされている BeginInit を前回呼び出したとき。"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.EndInit
  id: EndInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "終端を表す、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>初期化します。"
  remarks: "<xref:System.Windows.Shell.JumpList>クラスは、 <xref:System.ComponentModel.ISupportInitialize> <xref:System.Windows.Shell.JumpList>。</xref:System.Windows.Shell.JumpList>の XAML 宣言をサポートするためにインターフェイス</xref:System.ComponentModel.ISupportInitialize>を実装</xref:System.Windows.Shell.JumpList>する EndInit メソッドの呼び出し時にのみ、<xref:System.Windows.Shell.JumpList>は XAML で宣言されに接続されている、<xref:System.Windows.Application>添付プロパティの構文を使用しています</xref:System.Windows.Application></xref:System.Windows.Shell.JumpList>。 コードからこのメソッドを呼び出すことはできません。       EndInit メソッドと同じ結果には、<xref:System.Windows.Shell.JumpList.Apply%2A>メソッド</xref:System.Windows.Shell.JumpList.Apply%2A>。 EndInit のコンテンツを送信する、 <xref:System.Windows.Shell.JumpList>Windows シェルの現在の状態にします</xref:System.Windows.Shell.JumpList>。 この呼び出しが完了した後、<xref:System.Windows.Shell.JumpList.JumpItems%2A>ジャンプ リストに、Windows シェルが正常に追加された項目のみを格納するプロパティを変更します</xref:System.Windows.Shell.JumpList.JumpItems%2A>。 イベント ハンドラーから削除された項目の一覧にアクセスできます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser></xref:System.Windows.Shell.JumpList.JumpItemsRejected>。"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.EndInit*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "EndInit への呼び出しが<xref:System.Windows.Shell.JumpList.BeginInit*>。</xref:System.Windows.Shell.JumpList.BeginInit*>への呼び出しと組み合わせて使用できません。"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  id: GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "返します、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>アプリケーションに関連付けられているオブジェクト。"
  remarks: "<xref:System.Windows.Shell.JumpList> <xref:System.Windows.Application>。</xref:System.Windows.Application>に関連付けられている</xref:System.Windows.Shell.JumpList>を取得する GetJumpList メソッドを呼び出すことができます。 .NET Framework はこれであること、 <xref:System.Windows.Shell.JumpList>Windows シェルに現在適用されている</xref:System.Windows.Shell.JumpList>。"
  example:
  - "The following example shows how to get the <xref:System.Windows.Shell.JumpList> associated with the current application. A <xref:System.Windows.Shell.JumpTask> is added to the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection and added to the **Recent** category. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is called to apply the updated <xref:System.Windows.Shell.JumpList> to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#240](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#240)]"
  syntax:
    content: public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "関連付けられているアプリケーション、 <xref href=&quot;System.Windows.Shell.JumpList&quot;></xref>です。"
    return:
      type: System.Windows.Shell.JumpList
      description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>指定されたアプリケーションに関連付けられているオブジェクト。"
  overload: System.Windows.Shell.JumpList.GetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItems
  id: JumpItems
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "コレクションを取得<xref href=&quot;System.Windows.Shell.JumpItem&quot;></xref>ジャンプ リストに表示されるオブジェクトです。"
  remarks: "ジャンプ リストが&2; つ、項目の種類<xref:System.Windows.Shell.JumpTask>および<xref:System.Windows.Shell.JumpPath>。</xref:System.Windows.Shell.JumpPath></xref:System.Windows.Shell.JumpTask>を含めることができます。 A<xref:System.Windows.Shell.JumpTask>プログラムへのリンクは、および<xref:System.Windows.Shell.JumpPath>ファイルへのリンクします</xref:System.Windows.Shell.JumpPath></xref:System.Windows.Shell.JumpTask>。       ときに、<xref:System.Windows.Shell.JumpList>が作成される、JumpItems コレクションが空です</xref:System.Windows.Shell.JumpList>。 追加することができます<xref:System.Windows.Shell.JumpTask>または<xref:System.Windows.Shell.JumpPath>をコレクションにオブジェクト</xref:System.Windows.Shell.JumpPath></xref:System.Windows.Shell.JumpTask>。 コレクションには、プログラムによって追加されている項目のみが含むされます。 後に、<xref:System.Windows.Shell.JumpList>呼び出しは成功するかによって、Windows シェルに渡された、<xref:System.Windows.Shell.JumpList.EndInit%2A>または<xref:System.Windows.Shell.JumpList.Apply%2A>メソッド、JumpItems コレクションには、タスク バーのジャンプ リストに正常に追加された項目のみです</xref:System.Windows.Shell.JumpList.Apply%2A></xref:System.Windows.Shell.JumpList.EndInit%2A></xref:System.Windows.Shell.JumpList>。 JumpItems コレクションから正常に追加されていない項目が削除されます。 イベント ハンドラーから削除された項目の一覧にアクセスできます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser></xref:System.Windows.Shell.JumpList.JumpItemsRejected>。"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the JumpItems collection. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public System.Collections.Generic.List<System.Windows.Shell.JumpItem> JumpItems { get; }
    return:
      type: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
      description: "コレクション<xref href=&quot;System.Windows.Shell.JumpItem&quot;></xref>ジャンプ リストに表示されるオブジェクト。 既定では、空のコレクションです。"
  overload: System.Windows.Shell.JumpList.JumpItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  id: JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "ジャンプ先の項目が正常にでは追加されませんジャンプ リストに、Windows シェルと発生します。"
  remarks: "内容の後、 <xref:System.Windows.Shell.JumpList>Windows シェルに適用される、<xref:System.Windows.Shell.JumpList.JumpItems%2A>をジャンプ リストに、Windows シェルが正常に追加したアイテムのみを格納するプロパティを変更します</xref:System.Windows.Shell.JumpList.JumpItems%2A></xref:System.Windows.Shell.JumpList>。 イベント ハンドラーを使用、削除された項目の一覧をアクセスするには、JumpItemsRejected 用と<xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>イベント</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>。"
  example:
  - "The following example shows how to handle the JumpItemsRejected event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#110](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#110)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs> JumpItemsRejected;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  id: JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "ジャンプ リストで以前のジャンプ先アイテムが、ユーザーが一覧から削除されたときに発生します。"
  remarks: "内容の後、 <xref:System.Windows.Shell.JumpList>Windows シェルに適用される、<xref:System.Windows.Shell.JumpList.JumpItems%2A>をジャンプ リストに、Windows シェルが正常に追加したアイテムのみを格納するプロパティを変更します</xref:System.Windows.Shell.JumpList.JumpItems%2A></xref:System.Windows.Shell.JumpList>。 イベント ハンドラーから削除された項目の一覧にアクセスできます、<xref:System.Windows.Shell.JumpList.JumpItemsRejected>および JumpItemsRemovedByUser イベント</xref:System.Windows.Shell.JumpList.JumpItemsRejected>。"
  example:
  - "The following example shows how to handle the JumpItemsRemovedByUser event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#120](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#120)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs> JumpItemsRemovedByUser;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  id: SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "セット、 <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>アプリケーションに関連付けられているオブジェクト。"
  remarks: "複数作成できます<xref:System.Windows.Shell.JumpList>オブジェクト</xref:System.Windows.Shell.JumpList>。 ただし、1 つだけを<xref:System.Windows.Shell.JumpList>一度に関連付けることができる<xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> メソッドを呼び出して SetJumpList を<xref:System.Windows.Shell.JumpList><xref:System.Windows.Application>。</xref:System.Windows.Application>に関連付けられている</xref:System.Windows.Shell.JumpList>設定"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.JumpList> in code. The static SetJumpList method is called to associate the <xref:System.Windows.Shell.JumpList> with the current application. The <xref:System.Windows.Shell.JumpList> is automatically applied to the Windows shell when it is set. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#210](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#210)]"
  syntax:
    content: public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "関連付けられているアプリケーション、 <xref href=&quot;System.Windows.Shell.JumpList&quot;></xref>です。"
    - id: value
      type: System.Windows.Shell.JumpList
      description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>アプリケーションに関連付けます。"
  overload: System.Windows.Shell.JumpList.SetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  id: ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得または使用頻度の高い項目がジャンプ リストに表示されるかどうかを示す値を設定します。"
  remarks: "内容、**利用頻度**カテゴリは、Windows シェルで管理されています。 ジャンプ リストに頻繁に使用するアイテムを表示する ShowFrequentCategory プロパティを設定`true`です。       **最近使ったもの**と**利用頻度**カテゴリ多くの場合、含まれる多くの同じジャンプ項目。 その結果、アプリケーション通常表示するか、**最近使ったもの**または**利用頻度**ジャンプ リストが、両方のカテゴリ。"
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Frequent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowFrequentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ジャンプ一覧にある頻繁に使用するアイテムが表示されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Shell.JumpList.ShowFrequentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  id: ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "取得またはジャンプ リストに、最近使用された項目が表示されるかどうかを示す値を設定します。"
  remarks: "内容、**最近使ったもの**カテゴリは、Windows シェルで管理されています。 ジャンプ リストに頻繁に使用するアイテムを表示する ShowRecentCategory プロパティを設定`true`です。       **最近使ったもの**と**利用頻度**カテゴリ多くの場合、含まれる多くの同じジャンプ項目。 その結果、アプリケーション通常表示するか、**最近使ったもの**または**利用頻度**ジャンプ リストが、両方のカテゴリ。       呼び出すことができます、 <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>Windows シェルが項目を追加することを要求するメソッド、**最近使ったもの**項目の一覧</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>。 項目のファイル名の種類の処理には、アプリケーションは登録されていないもには表示されません、**最近使ったもの**一覧と、呼び出しと<xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>サイレント モードでは失敗します</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>。"
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Recent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowRecentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最近使用された項目がジャンプ リストに表示される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Shell.JumpList.ShowRecentCategory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Shell.JumpList.#ctor
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JumpItem>
  nameWithType: IEnumerable<JumpItem>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
- uid: System.Windows.Shell.JumpPath
  parent: System.Windows.Shell
  isExternal: false
  name: JumpPath
  nameWithType: JumpPath
  fullName: System.Windows.Shell.JumpPath
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
- uid: System.Windows.Shell.JumpTask
  parent: System.Windows.Shell
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
- uid: System.Windows.Shell.JumpList.Apply
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
- uid: System.Windows.Shell.JumpList.BeginInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
- uid: System.Windows.Shell.JumpList.EndInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
- uid: System.Windows.Shell.JumpList
  parent: System.Windows.Shell
  isExternal: false
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
- uid: System.Windows.Application
  parent: System.Windows
  isExternal: false
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Shell.JumpList.JumpItems
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
- uid: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: List<JumpItem>
  nameWithType: List<JumpItem>
  fullName: System.Collections.Generic.List<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRejectedEventArgs>
  nameWithType: EventHandler<JumpItemsRejectedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRejectedEventArgs
    name: JumpItemsRejectedEventArgs
    nameWithType: JumpItemsRejectedEventArgs
    fullName: JumpItemsRejectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRemovedEventArgs>
  nameWithType: EventHandler<JumpItemsRemovedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRemovedEventArgs
    name: JumpItemsRemovedEventArgs
    nameWithType: JumpItemsRemovedEventArgs
    fullName: JumpItemsRemovedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
- uid: System.Windows.Shell.JumpList.#ctor*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList
  nameWithType: JumpList.JumpList
- uid: System.Windows.Shell.JumpList.AddToRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory
  nameWithType: JumpList.AddToRecentCategory
- uid: System.Windows.Shell.JumpList.Apply*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply
  nameWithType: JumpList.Apply
- uid: System.Windows.Shell.JumpList.BeginInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit
  nameWithType: JumpList.BeginInit
- uid: System.Windows.Shell.JumpList.EndInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit
  nameWithType: JumpList.EndInit
- uid: System.Windows.Shell.JumpList.GetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList
  nameWithType: JumpList.GetJumpList
- uid: System.Windows.Shell.JumpList.JumpItems*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
- uid: System.Windows.Shell.JumpList.SetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList
  nameWithType: JumpList.SetJumpList
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
