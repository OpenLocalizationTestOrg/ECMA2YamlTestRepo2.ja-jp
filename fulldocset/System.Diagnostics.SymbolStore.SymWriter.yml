### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.SymbolStore.SymWriter
  id: SymWriter
  children:
  - System.Diagnostics.SymbolStore.SymWriter.#ctor
  - System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Close
  - System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  - System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  - System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  - System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - System.Diagnostics.SymbolStore.SymWriter.Dispose
  - System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.Finalize
  - System.Diagnostics.SymbolStore.SymWriter.GetWriter
  - System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  - System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  - System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  - System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  - System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  - System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  - System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  langs:
  - csharp
  name: SymWriter
  nameWithType: SymWriter
  fullName: System.Diagnostics.SymbolStore.SymWriter
  type: Class
  summary: "マネージ コードのシンボル ライターを表します。"
  remarks: "SymWriter クラスは、ドキュメント、シーケンス ポイント、構文のスコープ、および変数を定義するメソッドを提供します。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class SymWriter : System.Diagnostics.SymbolStore.SymWriterBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolWriter
  inheritance:
  - System.Object
  - System.Diagnostics.SymbolStore.SymWriterBase
  implements:
  - System.Diagnostics.SymbolStore.ISymbolWriter
  - System.IDisposable
  inheritedMembers:
  - System.Diagnostics.SymbolStore.SymWriterBase.{dtor}
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  id: '#ctor'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>クラスです。"
  syntax:
    content: public SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
  type: Constructor
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>を基になるシンボル ライターを作成するかどうかを指定します。"
  syntax:
    content: public SymWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>シンボルのライターが<xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>メソッドを呼び出すことによって提供される、基になる場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>シンボル ライターを基になる、既定値を代わりに作成する場合</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>。"
  overload: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  id: Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "閉じる、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>シンボルをシンボル ストアにコミットします。"
  remarks: "この呼び出しの後、<xref:System.Diagnostics.SymbolStore.SymWriter>以降の更新を無効になります</xref:System.Diagnostics.SymbolStore.SymWriter>。"
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  id: CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在のメソッドを閉じます。"
  remarks: "メソッドが終了した後は、メソッド内からシンボルを定義できません。"
  syntax:
    content: public virtual void CloseMethod ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  id: CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "最新の名前空間を閉じます。"
  syntax:
    content: public virtual void CloseNamespace ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  id: CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在の構文のスコープを閉じます。"
  remarks: "スコープが終了した後は、メソッド内から変数を定義できません。"
  syntax:
    content: public virtual void CloseScope (int endOffset);
    parameters:
    - id: endOffset
      type: System.Int32
      description: "スコープ内の最後の命令の直後のオフセット IL。"
  overload: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "ソース ドキュメントを定義します。"
  syntax:
    content: public virtual System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);
    parameters:
    - id: url
      type: System.String
      description: "ドキュメントを識別する URL です。"
    - id: language
      type: System.Guid
      description: "ドキュメントの言語。 このパラメーターは<xref:System.Guid>。</xref:System.Guid>を指定できます。"
    - id: languageVendor
      type: System.Guid
      description: "ドキュメントの言語のベンダーの id。 このパラメーターは<xref:System.Guid>。</xref:System.Guid>を指定できます。"
    - id: documentType
      type: System.Guid
      description: "ドキュメントの種類。 このパラメーターは<xref:System.Guid>。</xref:System.Guid>を指定できます。"
    return:
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "<xref href=&quot;System.Diagnostics.SymbolStore.ISymbolDocumentWriter&quot;> </xref>ドキュメントを表すオブジェクト。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "スロー、<xref:System.NotSupportedException>常にします</xref:System.NotSupportedException>。"
  syntax:
    content: public virtual void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "このパラメーターは使用されません。"
    - id: name
      type: System.String
      description: "このパラメーターは使用されません。"
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "このパラメーターは使用されません。"
    - id: signature
      type: System.Byte[]
      description: "このパラメーターは使用されません。"
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "このパラメーターは使用されません。"
    - id: addr1
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr2
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr3
      type: System.Int32
      description: "このパラメーターは使用されません。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "すべての場合。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "スロー、<xref:System.NotSupportedException>常にします</xref:System.NotSupportedException>。"
  syntax:
    content: public virtual void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "このパラメーターは使用されません。"
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "このパラメーターは使用されません。"
    - id: signature
      type: System.Byte[]
      description: "このパラメーターは使用されません。"
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "このパラメーターは使用されません。"
    - id: addr1
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr2
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr3
      type: System.Int32
      description: "このパラメーターは使用されません。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "すべての場合。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在の構文のスコープ内には、1 つの変数を定義します。"
  remarks: "`startOffset`と`endOffset`パラメーターは省略可能です。 値が&0; の場合は無視され、変数がスコープ全体で定義されています。 値が&0; 以外の場合は、現在のスコープのオフセット内に入る。       スコープ全体でさまざまなオフセットの範囲で複数回に発生するのと同じ名前の変数は、DefineLocalVariable を複数回呼び出すことができます。 (この場合、開始と終了オフセットは重複できません)。"
  syntax:
    content: public virtual void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);
    parameters:
    - id: name
      type: System.String
      description: "ローカル変数の名前。"
    - id: attributes
      type: System.Reflection.FieldAttributes
      description: "使用して指定されたローカル変数の属性、<xref:System.Reflection.FieldAttributes>列挙子</xref:System.Reflection.FieldAttributes>。"
    - id: signature
      type: System.Byte[]
      description: "ローカル変数シグネチャ。"
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "アドレス型`addr1`、 `addr2`、および`addr3`を使用して<xref href=&quot;System.Diagnostics.SymbolStore.SymAddressKind&quot;></xref>です。"
    - id: addr1
      type: System.Int32
      description: "ローカル変数指定の最初のアドレス。"
    - id: addr2
      type: System.Int32
      description: "ローカル変数指定の&2; 番目のアドレス。"
    - id: addr3
      type: System.Int32
      description: "ローカル変数指定の&3; 番目のアドレス。"
    - id: startOffset
      type: System.Int32
      description: "変数の開始オフセット。 0 の場合、このパラメーターは無視され、スコープ全体で変数を定義します。 ゼロ以外の場合は、現在のスコープのオフセット内にあります。"
    - id: endOffset
      type: System.Int32
      description: "変数の終了オフセット。 0 の場合、このパラメーターは無視され、スコープ全体で変数を定義します。 ゼロ以外の場合は、現在のスコープのオフセット内にあります。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "スロー、<xref:System.NotSupportedException>常にします</xref:System.NotSupportedException>。"
  syntax:
    content: public virtual void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);
    parameters:
    - id: name
      type: System.String
      description: "このパラメーターは使用されません。"
    - id: attributes
      type: System.Reflection.ParameterAttributes
      description: "このパラメーターは使用されません。"
    - id: sequence
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addrKind
      type: System.Diagnostics.SymbolStore.SymAddressKind
      description: "このパラメーターは使用されません。"
    - id: addr1
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr2
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: addr3
      type: System.Int32
      description: "このパラメーターは使用されません。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "すべての場合。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在のメソッド内のシーケンス ポイントのグループを定義します。"
  remarks: "シーケンス ポイントは、ソース ファイルの場所、および IL オフセットの間でマップに使用されます。  各シーケンス ポイントは、IL オフセットとソース ファイル領域、に対して相対的な開始と終了行/列の番号で指定された、<xref:System.Diagnostics.SymbolStore.ISymbolDocument>オブジェクト</xref:System.Diagnostics.SymbolStore.ISymbolDocument>。  すべての配列の特定のインデックス位置には、各要素は、特定のシーケンス ポイントに対応します。 各の行および列ごとには、メソッド内のステートメントの開始を定義します。 配列は、オフセットの昇順で並べ替える必要があります。 オフセットは、常に、(バイト単位)、メソッドの先頭からのオフセットです。"
  syntax:
    content: public virtual void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);
    parameters:
    - id: document
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "シーケンス ポイントが定義されているドキュメント オブジェクト。"
    - id: offsets
      type: System.Int32[]
      description: "シーケンス ポイントの IL オフセットは、メソッドの先頭から測定されます。"
    - id: lines
      type: System.Int32[]
      description: "シーケンス ポイントの開始行番号。"
    - id: columns
      type: System.Int32[]
      description: "シーケンス ポイントの開始列番号。"
    - id: endLines
      type: System.Int32[]
      description: "シーケンス ポイントの終了行番号。"
    - id: endColumns
      type: System.Int32[]
      description: "シーケンス ポイントの終了列番号。"
  overload: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  id: Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在のインスタンスによって使用されるリソースを解放、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>クラスです。"
  syntax:
    content: public override sealed void Dispose ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "によって呼び出される、 <> </> *> と<> *> の現在のインスタンスによって使用されるマネージ コードとアンマネージ リソースを解放するメソッド、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>クラスです。"
  remarks: "このメソッドは、パブリックによってのみ呼び出さ<xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A>と<xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A>メソッドですこのメソッドを直接呼び出さないでください。</xref:System.Diagnostics.SymbolStore.SymWriter.Finalize%2A> </xref:System.Diagnostics.SymbolStore.SymWriter.Dispose%2A> 。"
  syntax:
    content: protected virtual void Dispose (bool A_0);
    parameters:
    - id: A_0
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  id: Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "アンマネージ リソースを解放し、前に他のクリーンアップ操作を実行、 <xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;> </xref>がガベージ コレクションによって回収されます。"
  remarks: "このメソッドは<xref:System.Object.Finalize%2A>。</xref:System.Object.Finalize%2A> アプリケーション コードではこのメソッドを呼び出す必要がありますいません。オブジェクトの`Finalize`への呼び出しによって、ガベージ コレクターによって終了処理が無効になっていない限り、ガベージ コレクション中にメソッドが自動的に起動、<xref:System.GC.SuppressFinalize%2A>メソッド</xref:System.GC.SuppressFinalize%2A>。"
  syntax:
    content: ~SymWriter ();
    parameters: []
  overload: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  id: GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  syntax:
    content: public System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter* GetWriter ();
    parameters: []
    return:
      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedWriter*
      description: "追加します。"
  overload: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  id: Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "このライターに関連付けるメタデータ エミッタ インターフェイスを設定します。"
  remarks: "<xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A>また、デバッグ シンボルが書き込まれるを出力ファイル名に設定します。</xref:System.Diagnostics.SymbolStore.ISymbolWriter.Initialize%2A> このメソッドは、1 回だけ呼び出すことができ、他のライター メソッドが呼び出される前に呼び出す必要があります。"
  syntax:
    content: public virtual void Initialize (IntPtr emitter, string filename, bool fFullBuild);
    parameters:
    - id: emitter
      type: System.IntPtr
      description: "メタデータ エミッタ インターフェイス。"
    - id: filename
      type: System.String
      description: "デバッグ シンボルが書き込まれるファイル名。 ライターによってはそうでないときに、ファイル名が必要です。 ファイル名を使用しないライターに対してファイル名を指定すると、このパラメーターは無視されます。"
    - id: fFullBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>完全な再構築であることを示します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>インクリメンタル コンパイルを示します。"
  overload: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  id: InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "シンボル ライターを初期化します。 このメソッドを直接呼び出すことはできません。コンス トラクターによって呼び出されます。"
  syntax:
    content: public void InitWriter (bool noUnderlyingWriter);
    parameters:
    - id: noUnderlyingWriter
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>シンボルのライターが<xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>メソッドを呼び出すことによって提供される、基になる場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>シンボル ライターを基になる、既定値を代わりに作成する場合</xref:System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*>。"
  overload: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "シンボル情報を配置するためのメソッドを開きます。"
  remarks: "指定されたメソッドでは、シーケンス ポイント、パラメーター、および構文のスコープを定義する呼び出しの現在のメソッドになります。 メソッド全体を囲む暗黙的な構文のスコープがあります。 閉じられているメソッドを再び開くには、メソッドに、以前に定義されたシンボルが消去されます。"
  syntax:
    content: public virtual void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);
    parameters:
    - id: method
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "開かれるメソッドのメタデータ トークン。"
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  id: OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "新しい名前空間を開きます。"
  remarks: "メソッドまたは名前空間内に存在する変数を定義する前に、このメソッドを呼び出します。 名前空間は、入れ子にすることができます。"
  syntax:
    content: public virtual void OpenNamespace (string name);
    parameters:
    - id: name
      type: System.String
      description: "新しい名前空間の名前。"
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  id: OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在のメソッドでは、新しい構文のスコープを開きます。"
  remarks: "このスコープは、新しい現在のスコープをなり、スコープのスタックにプッシュされます。 スコープは、階層を形成する必要があります。 兄弟は、重複は許可されません。       スコープ識別子では、現在のメソッドで有効なのみです。"
  syntax:
    content: public virtual int OpenScope (int startOffset);
    parameters:
    - id: startOffset
      type: System.Int32
      description: "構文のスコープ内の最初の命令をメソッドの先頭からのバイト単位での IL オフセット。"
    return:
      type: System.Int32
      description: "使用できる非透過スコープ識別子<> *> を後で、スコープの開始と終了オフセットを定義します。この場合、OpenScope に渡したオフセットおよび<> *> は無視されます。 スコープ識別子は、現在のメソッドでのみ有効です。"
  overload: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "スロー、<xref:System.NotSupportedException>常にします</xref:System.NotSupportedException>。"
  syntax:
    content: public virtual void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);
    parameters:
    - id: startDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "このパラメーターは使用されません。"
    - id: startLine
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: startColumn
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: endDoc
      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
      description: "このパラメーターは使用されません。"
    - id: endLine
      type: System.Int32
      description: "このパラメーターは使用されません。"
    - id: endColumn
      type: System.Int32
      description: "このパラメーターは使用されません。"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "すべての場合。"
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  id: SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "指定した構文のスコープのオフセット範囲を定義します。"
  syntax:
    content: public virtual void SetScopeRange (int scopeID, int startOffset, int endOffset);
    parameters:
    - id: scopeID
      type: System.Int32
      description: "によって返される構文のスコープの識別子、<xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>メソッド</xref:System.Diagnostics.SymbolStore.SymWriter.OpenScope*>。"
    - id: startOffset
      type: System.Int32
      description: "構文のスコープの先頭の IL オフセット。"
    - id: endOffset
      type: System.Int32
      description: "構文のスコープの末尾の IL オフセット。"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "属性名および属性値を指定するときに、属性を定義します。"
  remarks: "SetSymAttribute メソッドはのみシンボリック情報に関連付けられているし、メタデータのカスタム属性ではありません。"
  syntax:
    content: public virtual void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);
    parameters:
    - id: parent
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "属性が定義されているメタデータ トークンです。"
    - id: name
      type: System.String
      description: "属性の名前。"
    - id: data
      type: System.Byte[]
      description: "属性の値。"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  id: SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "基に[ISymUnmanagedWriter インターフェイス](~/add/includes/ajax-current-ext-md.md)(アンマネージ API に相当) をマネージ<xref href=&quot;System.Diagnostics.SymbolStore.SymWriter&quot;></xref>を使用してシンボルを生成します。"
  remarks: "基になる[ISymUnmanagedWriter インターフェイス](../Topic/ISymUnmanagedWriter%20Interface.md)(アンマネージ API に相当) インターフェイスがマネージ コードのシンボル ライターを表します。 インターフェイスは、ドキュメント、シーケンス ポイント、構文のスコープ、および変数を定義するメソッドを提供します。"
  syntax:
    content: public virtual void SetUnderlyingWriter (IntPtr underlyingWriter);
    parameters:
    - id: underlyingWriter
      type: System.IntPtr
      description: "<xref:System.IntPtr>基になるライターは、コードへのポインター型です</xref:System.IntPtr>。"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "現在のモジュールのエントリ ポイントとしてユーザー定義メソッドを識別します。"
  remarks: "これは、通常、主要な方法です。"
  syntax:
    content: public virtual void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);
    parameters:
    - id: entryMethod
      type: System.Diagnostics.SymbolStore.SymbolToken
      description: "ユーザーのエントリであるメソッドのメタデータ トークンをポイントします。"
  overload: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  id: UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  langs:
  - csharp
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
  type: Method
  assemblies:
  - ISymWrapper
  namespace: System.Diagnostics.SymbolStore
  summary: "指定された、完全修飾名前空間の名前が開かれている構文スコープ内で使用されることを指定します。"
  remarks: "現在のスコープを閉じると、このスコープは、名前空間を使用できなくなります。 名前空間は、現在開かれているスコープから継承するすべてのスコープで使用するには残ります。"
  syntax:
    content: public virtual void UsingNamespace (string fullName);
    parameters:
    - id: fullName
      type: System.String
      description: "名前空間の完全修飾名。"
  overload: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.SymbolStore.SymWriterBase
  isExternal: false
  name: System.Diagnostics.SymbolStore.SymWriterBase
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter()
  nameWithType: SymWriter.SymWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter(Boolean)
  nameWithType: SymWriter.SymWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SymWriter(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.SymbolStore.SymWriter.Close
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close()
  nameWithType: SymWriter.Close()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Close()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod()
  nameWithType: SymWriter.CloseMethod()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseMethod()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace()
  nameWithType: SymWriter.CloseNamespace()
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace()
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope(Int32)
  nameWithType: SymWriter.CloseScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.CloseScope(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument(String,Guid,Guid,Guid)
  nameWithType: SymWriter.DefineDocument(String,Guid,Guid,Guid)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineDocument(String,Guid,Guid,Guid)
- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: ISymbolDocumentWriter
  nameWithType: ISymbolDocumentWriter
  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymbolToken
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymbolToken
  nameWithType: SymbolToken
  fullName: System.Diagnostics.SymbolStore.SymbolToken
- uid: System.Reflection.FieldAttributes
  parent: System.Reflection
  isExternal: true
  name: FieldAttributes
  nameWithType: FieldAttributes
  fullName: System.Reflection.FieldAttributes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymAddressKind
  parent: System.Diagnostics.SymbolStore
  isExternal: false
  name: SymAddressKind
  nameWithType: SymAddressKind
  fullName: System.Diagnostics.SymbolStore.SymAddressKind
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  nameWithType: SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)
- uid: System.Reflection.ParameterAttributes
  parent: System.Reflection
  isExternal: true
  name: ParameterAttributes
  nameWithType: ParameterAttributes
  fullName: System.Reflection.ParameterAttributes
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  nameWithType: SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose()
  nameWithType: SymWriter.Dispose()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose()
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SymWriter.Dispose(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Dispose(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize()
  nameWithType: SymWriter.Finalize()
  fullName: System.Diagnostics.SymbolStore.SymWriter.Finalize()
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter()
  nameWithType: SymWriter.GetWriter()
  fullName: System.Diagnostics.SymbolStore.SymWriter.GetWriter()
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize(System.IntPtr,System.String,System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize(IntPtr,String,Boolean)
  nameWithType: SymWriter.Initialize(IntPtr,String,Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.Initialize(IntPtr,String,Boolean)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter(System.Boolean)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter(Boolean)
  nameWithType: SymWriter.InitWriter(Boolean)
  fullName: System.Diagnostics.SymbolStore.SymWriter.InitWriter(Boolean)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod(SymbolToken)
  nameWithType: SymWriter.OpenMethod(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenMethod(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace(String)
  nameWithType: SymWriter.OpenNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope(System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope(Int32)
  nameWithType: SymWriter.OpenScope(Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.OpenScope(Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  nameWithType: SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange(Int32,Int32,Int32)
  nameWithType: SymWriter.SetScopeRange(Int32,Int32,Int32)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange(Int32,Int32,Int32)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute(SymbolToken,String,Byte[])
  nameWithType: SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute(SymbolToken,String,Byte[])
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(System.IntPtr)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter(IntPtr)
  nameWithType: SymWriter.SetUnderlyingWriter(IntPtr)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter(IntPtr)
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint(SymbolToken)
  nameWithType: SymWriter.SetUserEntryPoint(SymbolToken)
  fullName: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint(SymbolToken)
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(System.String)
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace(String)
  nameWithType: SymWriter.UsingNamespace(String)
  fullName: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace(String)
- uid: System.Diagnostics.SymbolStore.SymWriter.#ctor*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SymWriter
  nameWithType: SymWriter.SymWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Close*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Close
  nameWithType: SymWriter.Close
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseMethod
  nameWithType: SymWriter.CloseMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseNamespace
  nameWithType: SymWriter.CloseNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.CloseScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: CloseScope
  nameWithType: SymWriter.CloseScope
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineDocument*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineDocument
  nameWithType: SymWriter.DefineDocument
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineField*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineField
  nameWithType: SymWriter.DefineField
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineGlobalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineGlobalVariable
  nameWithType: SymWriter.DefineGlobalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineLocalVariable*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineLocalVariable
  nameWithType: SymWriter.DefineLocalVariable
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineParameter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineParameter
  nameWithType: SymWriter.DefineParameter
- uid: System.Diagnostics.SymbolStore.SymWriter.DefineSequencePoints*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: DefineSequencePoints
  nameWithType: SymWriter.DefineSequencePoints
- uid: System.Diagnostics.SymbolStore.SymWriter.Dispose*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Dispose
  nameWithType: SymWriter.Dispose
- uid: System.Diagnostics.SymbolStore.SymWriter.Finalize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Finalize
  nameWithType: SymWriter.Finalize
- uid: System.Diagnostics.SymbolStore.SymWriter.GetWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: GetWriter
  nameWithType: SymWriter.GetWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.Initialize*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: Initialize
  nameWithType: SymWriter.Initialize
- uid: System.Diagnostics.SymbolStore.SymWriter.InitWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: InitWriter
  nameWithType: SymWriter.InitWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenMethod*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenMethod
  nameWithType: SymWriter.OpenMethod
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenNamespace
  nameWithType: SymWriter.OpenNamespace
- uid: System.Diagnostics.SymbolStore.SymWriter.OpenScope*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: OpenScope
  nameWithType: SymWriter.OpenScope
- uid: System.Diagnostics.SymbolStore.SymWriter.SetMethodSourceRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetMethodSourceRange
  nameWithType: SymWriter.SetMethodSourceRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetScopeRange*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetScopeRange
  nameWithType: SymWriter.SetScopeRange
- uid: System.Diagnostics.SymbolStore.SymWriter.SetSymAttribute*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetSymAttribute
  nameWithType: SymWriter.SetSymAttribute
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUnderlyingWriter*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUnderlyingWriter
  nameWithType: SymWriter.SetUnderlyingWriter
- uid: System.Diagnostics.SymbolStore.SymWriter.SetUserEntryPoint*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: SetUserEntryPoint
  nameWithType: SymWriter.SetUserEntryPoint
- uid: System.Diagnostics.SymbolStore.SymWriter.UsingNamespace*
  parent: System.Diagnostics.SymbolStore.SymWriter
  isExternal: false
  name: UsingNamespace
  nameWithType: SymWriter.UsingNamespace
