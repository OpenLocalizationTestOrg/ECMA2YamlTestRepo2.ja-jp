### YamlMime:ManagedReference
items:
- uid: System.IO.DriveInfo
  id: DriveInfo
  children:
  - System.IO.DriveInfo.#ctor(System.String)
  - System.IO.DriveInfo.AvailableFreeSpace
  - System.IO.DriveInfo.DriveFormat
  - System.IO.DriveInfo.DriveType
  - System.IO.DriveInfo.GetDrives
  - System.IO.DriveInfo.IsReady
  - System.IO.DriveInfo.Name
  - System.IO.DriveInfo.RootDirectory
  - System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IO.DriveInfo.ToString
  - System.IO.DriveInfo.TotalFreeSpace
  - System.IO.DriveInfo.TotalSize
  - System.IO.DriveInfo.VolumeLabel
  langs:
  - csharp
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
  type: Class
  summary: "ドライブ上の情報へのアクセスを提供します。"
  remarks: "このクラスは、ドライブをモデル化し、ドライブ情報を照会するメソッドとプロパティを提供します。 DriveInfo を使用すると、ドライブの種類が使用可能なとドライブの種類を判断できます。 容量と、ドライブの空き領域を判断するクエリすることもできます。"
  example:
  - "The following code example demonstrates the use of the DriveInfo class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/t-system.io.driveinfo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/t-system.io.driveinfo_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class DriveInfo : System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.DriveInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "指定したドライブに関する情報へのアクセスを提供します。"
  remarks: "このクラスを使用すると、ドライブ上の情報を取得できます。 ドライブの名前は、&quot;a&quot; から &quot;z&quot; の大文字または小文字のいずれかの文字をする必要があります。 このメソッドを使用すると、ドライブ名で情報を取得できません`null`か UNC を使用して (\\\\\\server\\share) のパス。"
  syntax:
    content: public DriveInfo (string driveName);
    parameters:
    - id: driveName
      type: System.String
      description: "有効なドライブ パスまたはドライブ文字です。 これは、大文字または小文字、&quot;a&quot; ~ &quot;z&quot;。 Null 値が正しくありません。"
  overload: System.IO.DriveInfo.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "ドライブ文字にすることはできません<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "最初の文字<code> driveName </code>はありません、大文字または小文字の文字 &quot;a&quot; ~ &quot;z&quot; です。       - または - <code> driveName </code>は有効なドライブを参照していません。"
  platform:
  - net462
- uid: System.IO.DriveInfo.AvailableFreeSpace
  id: AvailableFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "(バイト単位)、ドライブ上の使用可能な空き領域の量を示します。"
  remarks: "このプロパティは、ドライブの空き領域の量を示します。 この数が異なる場合があることに注意してください、<xref:System.IO.DriveInfo.TotalFreeSpace%2A>ディスク クォータのアカウントにはこのプロパティを受け取るためにの番号します</xref:System.IO.DriveInfo.TotalFreeSpace%2A>。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.av_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.av_1.vb)]"
  syntax:
    content: public long AvailableFreeSpace { get; }
    return:
      type: System.Int64
      description: "(バイト単位)、ドライブの空き領域の量。"
  overload: System.IO.DriveInfo.AvailableFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ドライブの情報へのアクセスが拒否されました。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveFormat
  id: DriveFormat
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "NTFS または FAT32 など、ファイル システムの名前を取得します。"
  remarks: "DriveFormat を使用して、使用するドライブをフォーマット新機能を決定します。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_0_1.vb)]"
  syntax:
    content: public string DriveFormat { get; }
    return:
      type: System.String
      description: "指定したドライブ上のファイル システムの名前。"
  overload: System.IO.DriveInfo.DriveFormat*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ドライブの情報へのアクセスが拒否されました。"
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "ドライブが存在しないか、マップされていません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.DriveInfo.DriveType
  id: DriveType
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "固定または CD-ROM、取り外し可能で、ネットワークなど、ドライブの種類を取得します。"
  remarks: 'DriveType プロパティがあるかどうかは、ドライブが、次のいずれかを示します: `CDRom`、 `Fixed`、 `Network`、 `NoRootDirectory`、 `Ram`、 `Removable`、または`Unknown`です。 これらの値に記載されて、<xref:System.IO.DriveType>列挙体です</xref:System.IO.DriveType>。'
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.dr_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.dr_1_1.vb)]"
  syntax:
    content: public System.IO.DriveType DriveType { get; }
    return:
      type: System.IO.DriveType
      description: "ドライブの種類を指定する列挙値の&1; つ。"
  overload: System.IO.DriveInfo.DriveType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.GetDrives
  id: GetDrives
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "コンピューター上のすべての論理ドライブのドライブ名を取得します。"
  remarks: "このメソッドは、コンピューター上のすべての論理ドライブ名を取得します。 この情報を使用するには、配列を反復処理しを使用して他のドライブ上の情報を入手<xref:System.IO.DriveInfo>メソッドとプロパティ</xref:System.IO.DriveInfo>。 使用<xref:System.IO.DriveInfo.IsReady%2A>する準備ができていないドライブには、このメソッドを使用しているために準備は、ドライブがあるかどうかをテストするプロパティ<xref:System.IO.IOException>。</xref:System.IO.IOException>がスローされます</xref:System.IO.DriveInfo.IsReady%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/m-system.io.driveinfo.ge_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/m-system.io.driveinfo.ge_1.vb)]"
  syntax:
    content: public static System.IO.DriveInfo[] GetDrives ();
    parameters: []
    return:
      type: System.IO.DriveInfo[]
      description: "型の配列<xref href=&quot;System.IO.DriveInfo&quot;></xref>コンピューター上の論理ドライブを表すです。"
  overload: System.IO.DriveInfo.GetDrives*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "呼び出し元には、必要なアクセス許可はありません。"
  platform:
  - net462
- uid: System.IO.DriveInfo.IsReady
  id: IsReady
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ドライブ準備ができているかどうかを示す値を取得します。"
  remarks: "IsReady では、ドライブ準備ができているかどうかを示します。 たとえば、CD を CD ドライブまたはリムーバブル記憶装置が読み取り/書き込み操作の準備ができているかどうかがかどうかを示します。 ドライブを用意し、準備ができていませんかどうかをテストしない場合は、 <xref:System.IO.DriveInfo> <xref:System.IO.IOException>.</xref:System.IO.IOException>を発生させる</xref:System.IO.DriveInfo>を使用してドライブを照会します。       など、他のメンバーからの例外のキャッチを回避する IsReady に依存しない<xref:System.IO.DriveInfo.TotalSize%2A>、 <xref:System.IO.DriveInfo.TotalFreeSpace%2A>、 <xref:System.IO.DriveInfo.DriveFormat%2A></xref:System.IO.DriveInfo.DriveFormat%2A> </xref:System.IO.DriveInfo.TotalFreeSpace%2A> </xref:System.IO.DriveInfo.TotalSize%2A> 。 までの間にコードが IsReady を確認し、(確認後すぐにアクセスが行われる場合でも)、その他のプロパティのいずれかにアクセスし、ドライブが切断されているまたはディスクが削除された可能性があります。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.is_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.is_1.vb)]"
  syntax:
    content: public bool IsReady { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、ドライブ準備ができてです。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>ドライブが準備されていない場合。"
  overload: System.IO.DriveInfo.IsReady*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.Name
  id: Name
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "C: など、ドライブの名前を取得\\\\です。"
  remarks: "このプロパティは、C:\\ など e: ドライブに割り当てられた名前\\\\です。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.name_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.name_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "ドライブの名前。"
  overload: System.IO.DriveInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.RootDirectory
  id: RootDirectory
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ドライブのルート ディレクトリを取得します。"
  syntax:
    content: public System.IO.DirectoryInfo RootDirectory { get; }
    return:
      type: System.IO.DirectoryInfo
      description: "ドライブのルート ディレクトリを格納するオブジェクト。"
  overload: System.IO.DriveInfo.RootDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化に必要なデータを持つオブジェクト。"
  remarks: "含まれる任意のオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトが自動的に追跡され、フォーマッタでシリアル化します</xref:System.Runtime.Serialization.SerializationInfo>。       このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.IO.DriveInfo>にインスタンスをキャスト、<xref:System.Runtime.Serialization.ISerializable>インターフェイス</xref:System.Runtime.Serialization.ISerializable></xref:System.IO.DriveInfo>。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "データを設定するオブジェクト。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "宛先 (を参照してください<xref:System.Runtime.Serialization.StreamingContext>) このシリアル化します</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.ToString
  id: ToString
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "ドライブ名を文字列として返します。"
  remarks: "このメソッドが戻る、<xref:System.IO.DriveInfo.Name%2A>プロパティ</xref:System.IO.DriveInfo.Name%2A>。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "ドライブの名前。"
  overload: System.IO.DriveInfo.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalFreeSpace
  id: TotalFreeSpace
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "(バイト単位)、ドライブ上の使用可能な空き領域の総量を取得します。"
  remarks: "このプロパティが現在のユーザーに利用可能な新機能だけでなく、ドライブの空き領域の総量を示します。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_0_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_0_1.vb)]"
  syntax:
    content: public long TotalFreeSpace { get; }
    return:
      type: System.Int64
      description: "空き領域の合計 (バイト単位) のドライブで使用できます。"
  overload: System.IO.DriveInfo.TotalFreeSpace*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ドライブの情報へのアクセスが拒否されました。"
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "ドライブは、マップされていないか、存在しません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.DriveInfo.TotalSize
  id: TotalSize
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "バイト単位で、ドライブ上の記憶域スペースの合計サイズを取得します。"
  remarks: "このプロパティは、現在のユーザーに利用可能なものだけでなく、(バイト単位) ドライブの合計サイズを示します。"
  example:
  - "The following code example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all of the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.to_1_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.to_1_1.vb)]"
  syntax:
    content: public long TotalSize { get; }
    return:
      type: System.Int64
      description: "(バイト単位)、ドライブの合計サイズ。"
  overload: System.IO.DriveInfo.TotalSize*
  exceptions:
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "ドライブの情報へのアクセスが拒否されました。"
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "ドライブは、マップされていないか、存在しません。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  platform:
  - net462
- uid: System.IO.DriveInfo.VolumeLabel
  id: VolumeLabel
  parent: System.IO.DriveInfo
  langs:
  - csharp
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO
  summary: "取得またはドライブのボリューム ラベルを設定します。"
  remarks: "ラベルの長さは、オペレーティング システムによって決まります。 たとえば、NTFS では、32 文字以内にボリューム ラベルが使用できます。 なお`null`は有効な VolumeLabel します。"
  example:
  - "The following example demonstrates the use of the <xref:System.IO.DriveInfo> class to display information about all the drives on the current system.  \n  \n [!code-cs[System.IO.DriveInfo#00](~/add/codesnippet/csharp/p-system.io.driveinfo.vo_1.cs)]\n [!code-vb[System.IO.DriveInfo#00](~/add/codesnippet/visualbasic/p-system.io.driveinfo.vo_1.vb)]"
  syntax:
    content: public string VolumeLabel { get; set; }
    return:
      type: System.String
      description: "ボリューム ラベル。"
  overload: System.IO.DriveInfo.VolumeLabel*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "(例、ディスク エラー、またはドライブができていません) については、I/O エラーが発生しました。"
  - type: System.IO.DriveNotFoundException
    commentId: T:System.IO.DriveNotFoundException
    description: "ドライブは、マップされていないか、存在しません。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元には、必要なアクセス許可はありません。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "CD-ROM ドライブ、ネットワーク上のボリューム ラベルを設定されています。       または、ドライブ情報へのアクセスを拒否します。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.IO.DriveNotFoundException
  parent: System.IO
  isExternal: false
  name: DriveNotFoundException
  nameWithType: DriveNotFoundException
  fullName: System.IO.DriveNotFoundException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DriveInfo.#ctor(System.String)
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo(String)
  nameWithType: DriveInfo.DriveInfo(String)
  fullName: System.IO.DriveInfo.DriveInfo(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.DriveInfo.AvailableFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
  fullName: System.IO.DriveInfo.AvailableFreeSpace
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.DriveInfo.DriveFormat
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
  fullName: System.IO.DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
  fullName: System.IO.DriveInfo.DriveType
- uid: System.IO.DriveType
  parent: System.IO
  isExternal: false
  name: DriveType
  nameWithType: DriveType
  fullName: System.IO.DriveType
- uid: System.IO.DriveInfo.GetDrives
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives()
  nameWithType: DriveInfo.GetDrives()
  fullName: System.IO.DriveInfo.GetDrives()
- uid: System.IO.DriveInfo[]
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo[]
  spec.csharp:
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.DriveInfo.IsReady
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
  fullName: System.IO.DriveInfo.IsReady
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.DriveInfo.Name
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
  fullName: System.IO.DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
  fullName: System.IO.DriveInfo.RootDirectory
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IO.DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IO.DriveInfo.ToString
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString()
  nameWithType: DriveInfo.ToString()
  fullName: System.IO.DriveInfo.ToString()
- uid: System.IO.DriveInfo.TotalFreeSpace
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
  fullName: System.IO.DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
  fullName: System.IO.DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
  fullName: System.IO.DriveInfo.VolumeLabel
- uid: System.IO.DriveInfo.#ctor*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo.DriveInfo
- uid: System.IO.DriveInfo.AvailableFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: AvailableFreeSpace
  nameWithType: DriveInfo.AvailableFreeSpace
- uid: System.IO.DriveInfo.DriveFormat*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveFormat
  nameWithType: DriveInfo.DriveFormat
- uid: System.IO.DriveInfo.DriveType*
  parent: System.IO.DriveInfo
  isExternal: false
  name: DriveType
  nameWithType: DriveInfo.DriveType
- uid: System.IO.DriveInfo.GetDrives*
  parent: System.IO.DriveInfo
  isExternal: false
  name: GetDrives
  nameWithType: DriveInfo.GetDrives
- uid: System.IO.DriveInfo.IsReady*
  parent: System.IO.DriveInfo
  isExternal: false
  name: IsReady
  nameWithType: DriveInfo.IsReady
- uid: System.IO.DriveInfo.Name*
  parent: System.IO.DriveInfo
  isExternal: false
  name: Name
  nameWithType: DriveInfo.Name
- uid: System.IO.DriveInfo.RootDirectory*
  parent: System.IO.DriveInfo
  isExternal: false
  name: RootDirectory
  nameWithType: DriveInfo.RootDirectory
- uid: System.IO.DriveInfo.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.IO.DriveInfo
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: DriveInfo.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.IO.DriveInfo.ToString*
  parent: System.IO.DriveInfo
  isExternal: false
  name: ToString
  nameWithType: DriveInfo.ToString
- uid: System.IO.DriveInfo.TotalFreeSpace*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalFreeSpace
  nameWithType: DriveInfo.TotalFreeSpace
- uid: System.IO.DriveInfo.TotalSize*
  parent: System.IO.DriveInfo
  isExternal: false
  name: TotalSize
  nameWithType: DriveInfo.TotalSize
- uid: System.IO.DriveInfo.VolumeLabel*
  parent: System.IO.DriveInfo
  isExternal: false
  name: VolumeLabel
  nameWithType: DriveInfo.VolumeLabel
