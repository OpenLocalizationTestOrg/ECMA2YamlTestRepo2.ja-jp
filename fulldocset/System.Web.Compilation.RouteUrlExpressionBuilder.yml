### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.RouteUrlExpressionBuilder
  id: RouteUrlExpressionBuilder
  children:
  - System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  - System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  - System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  - System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  langs:
  - csharp
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder
  type: Class
  summary: "指定した URL パラメーター値に対応する URL を作成します。"
  remarks: "RouteUrlExpressionBuilder クラスでは、URL パラメーター値の一覧を提供することによって、ルートの URL をサーバー コントロールのプロパティを設定することもできます。"
  example:
  - "The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```  \n  \n The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.  \n  \n If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name. For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles,  \n               routename=BasicSearchRoute %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Routes")]

      public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.RouteUrlExpressionBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public RouteUrlExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "URL パラメーター値を指定して、ルート URL の形式を対応する URL を作成します。"
  remarks: "ASP.NET がマークアップで、次の形式の式が検出されたときに、このメソッドを呼び出します:`<%$ RouteUrl: urlparameter=value %>`このメソッドは、現在の指定されたルート キーの値の適切な URL を生成<xref:System.Web.Routing.Route>オブジェクト</xref:System.Web.Routing.Route>。 このメソッドは、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッド</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>。 取得された、`entry`から取得された式がバインドされているコントロールへの参照をパラメーター、`context`パラメーターに評価される式とそれを呼び出す、 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>URL を生成する方法</xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>。"
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "この実装では使用されません。"
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "このプロパティは、式のバインド先です。"
    - id: parsedData
      type: System.Object
      description: "この実装では使用されません。"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.Object
      description: "選択したルートに指定された URL パラメーター値に対応する URL です。 指定されたパラメーターのリストをルートの URL パターンに一致するルートが選択されます。 複数のルートには、指定されたパラメーターの一覧が一致すると、場合を選択するルートを示すこともこのルート名を指定できます。"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "生成されたページ クラスのプロパティの割り当てを実行するために使用されるコード式を返します。"
  remarks: "このメソッドは、CodeDOM のページまたはコントロールの作成時に呼び出されます。 <xref:System.CodeDom.CodeExpression>返されるオブジェクトが生成されるページ クラスのプロパティの割り当てを追加するコード式を表します</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "このプロパティは、式のバインド先です。"
    - id: parsedData
      type: System.Object
      description: "表すオブジェクトを解析済みデータが<xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>。</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>によって返される"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "コントロールまたはページのプロパティです。"
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref>プロパティの割り当てで使用されているインスタンス。"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  id: GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ルート URL の形式の指定されたルート キーに対応する URL を作成します。"
  remarks: "このメソッドは、URL の適切な値を呼び出すことによって生成、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>のメソッド、<xref:System.Web.Routing.RouteCollection>オブジェクト</xref:System.Web.Routing.RouteCollection></xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>。 取得、<xref:System.Web.Routing.RequestContext>オブジェクトから、`control`パラメーター、およびそのからルート名およびルートのパラメーターを解析して、`expression`パラメーター</xref:System.Web.Routing.RequestContext> 。"
  syntax:
    content: public static string GetRouteUrl (System.Web.UI.Control control, string expression);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "式がバインドされているコントロール。"
    - id: expression
      type: System.String
      description: "マークアップで指定された式です。"
    return:
      type: System.String
      description: "現在のルート URL の形式に対応する URL<xref:System.Web.Routing.Route>オブジェクト</xref:System.Web.Routing.Route>。"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>control</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "メソッドは、マークアップで指定された式を解析できませんでした。 詳細については、 <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>。</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>を参照してください。"
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイルされていない ページで、式を評価できるかどうかを示す値を取得します。"
  remarks: "SupportsEvaluate プロパティを示すかどうか、<xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>メソッドがクラスに実装されていて、コンパイルされていない ページで、式の値を返すことができます</xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>。 <xref:System.Web.Compilation.RouteUrlExpressionBuilder>クラスがコンパイルされていないページで、式を評価することができます</xref:System.Web.Compilation.RouteUrlExpressionBuilder>。 したがって、SupportsEvaluate 常に返します`true`です。"
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  id: TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ルート キーと値のコレクションと必要に応じて、ルート名に式を解析します。"
  remarks: "TryParseRouteExpression メソッドは、先頭と末尾のスペース、式を削除し、区切り記号としてコンマを使用して、キー/値ペアに分割します。 ルート キーの名前を付けて場合`RouteName`が見つかるに戻り値が渡されること、`routeName`パラメーターではなく`routeValues`です。 それ以外の場合、`null`に対して返される`routeName`です。 先頭および末尾のスペースは個々 のキーと値からも削除されます。       TryParseRouteExpression メソッドを返します`false`式がない形式では、少なくとも&1; つのキー/値ペアので構成される場合*キー*`=`*値*、複数のペアを区切るコンマを使用するとします。"
  syntax:
    content: public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);
    parameters:
    - id: expression
      type: System.String
      description: "マークアップで指定された式です。"
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "ルート キーと関連付けられた値のコレクションです。"
    - id: routeName
      type: System.String
      description: "このメソッドが戻るときに場合、ルートの名前を表す文字列を含む`expression`という名前のルート キーを含む`RouteName`です。 このパラメーターは初期化されていない状態で渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>解析が成功した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression
