### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.CipherReference
  id: CipherReference
  children:
  - System.Security.Cryptography.Xml.CipherReference.#ctor
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  - System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  - System.Security.Cryptography.Xml.CipherReference.GetXml
  - System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: CipherReference
  nameWithType: CipherReference
  fullName: System.Security.Cryptography.Xml.CipherReference
  type: Class
  summary: "表す、 <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。 このクラスは継承できません。"
  remarks: "このクラスを表します、 `<CipherReference>` XML 暗号化要素です。 ソースを識別するには、処理されると、暗号化されたデータが得られます。       実際の暗号化されたデータによって参照される、`<CipherReference>`次のプロセスを取得します。 `<CipherReference> URI`プロパティには、Uniform Resource Identifier () が逆参照するが含まれています。 場合、`<CipherReference>`要素には、変換チェーンも含まれています、URI の逆参照されるデータを変換として、暗号化されたデータを生成するために指定します。 たとえば、暗号化されたデータが base64 でエンコードされた XML ドキュメント内の場合、変換は、base64 をデコードして暗号化されたデータを抽出するための後に、XPath 式を指定します。       URI および変換の構文は、XML デジタル署名のことに似ています。  ただしで XML デジタル署名の生成と検証処理の両方、同じソース データで開始し、同じ順序で変換を実行します。 XML 暗号化、復号化するアプリケーションは、暗号化されたデータのみと指定された変換にあります。 これらの変換は、暗号化されたデータを取得するために必要な順序で列挙されます。       **注**既定では、逆参照できません、Web サイトからのファイルなどの不明なソースを持つドキュメントからの暗号参照のため、<xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A>プロパティは**null**</xref:System.Security.Cryptography.Xml.EncryptedXml.DocumentEvidence%2A> 。 たとえば、しようとするを格納するファイルを復号化、 `<CipherReference>` 、Web 上のファイルを参照する要素、<xref:System.Security.SecurityException>スローされると、完全に信頼されたアセンブリによって、要求が行われた場合でも</xref:System.Security.SecurityException>。       暗号化を解除するドキュメントを信頼できる場合は、次のコードを使用して完全に信頼されたアプリケーションの動作を変更できます。```   Evidence ev = new Evidence();   ev.AddHost (new Zone(SecurityZone.MyComputer));   EncryptedXml exml = new EncryptedXml(doc, ev);   ```"
  example:
  - "The following code example creates a new instance of CipherReference.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/t-system.security.crypto_127_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/t-system.security.crypto_127_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/t-system.security.crypto_127_1.cpp)]"
  syntax:
    content: 'public sealed class CipherReference : System.Security.Cryptography.Xml.EncryptedReference'
  inheritance:
  - System.Object
  - System.Security.Cryptography.Xml.EncryptedReference
  implements: []
  inheritedMembers:
  - System.Security.Cryptography.Xml.EncryptedReference.AddTransform(System.Security.Cryptography.Xml.Transform)
  - System.Security.Cryptography.Xml.EncryptedReference.CacheValid
  - System.Security.Cryptography.Xml.EncryptedReference.ReferenceType
  - System.Security.Cryptography.Xml.EncryptedReference.TransformChain
  - System.Security.Cryptography.Xml.EncryptedReference.Uri
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherReference>に関するリファレンス情報を提供するオブジェクト、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData></xref:System.Security.Cryptography.Xml.CipherReference>。"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_105_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_105_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_105_1.cpp)]"
  syntax:
    content: public CipherReference ();
    parameters: []
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>クラス、指定された Uniform Resource Identifier () を使用します。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherReference>オブジェクト、Uniform Resource Identifier ()、暗号化されたデータを指すを使用しています</xref:System.Security.Cryptography.Xml.CipherReference>。 に関するリファレンス情報を提供する、オブジェクトを使用して、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData>。       暗号化されたデータを含む XML ファイルを指定するのに URI を使用できます。 例:`String uri = &quot;http://www.woodgrovebank.com/document.xml&quot;;`を XML ドキュメントの一部のみが暗号化することを指定する部分的な URI を使用することもできます。 たとえば、2 つ document.xml を名前付き XML ドキュメントが含まれている`MyForm`要素の次の XML コード例に示すように: `<MyForm Id=&quot;Form1&quot;>` `<! -- Form data here -->` `</MyForm>` `<MyForm Id=&quot;Form2&quot;>` `<! -- Form data here -->` `</MyForm>`の内容だけを暗号化することができます`Form2`次などの URI を使用します。                                   `String uri = &quot;http://www.woodgrovebank.com/document.xml#Form2&quot;;`"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/m-system.security.crypto_103_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/m-system.security.crypto_103_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/m-system.security.crypto_103_1.cpp)]"
  syntax:
    content: public CipherReference (string uri);
    parameters:
    - id: uri
      type: System.String
      description: "UNIFORM Resource Identifier ()、暗号化されたデータをポイントします。"
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  id: '#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)'
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>クラスの指定 (Uniform Resource Identifier) と変換チェーンの情報を使用します。"
  remarks: "このコンス トラクターを作成、<xref:System.Security.Cryptography.Xml.CipherReference>オブジェクトを暗号化されたデータを示します (Uniform Resource Identifier) と変換のチェーンを使用します</xref:System.Security.Cryptography.Xml.CipherReference>。 に関するリファレンス情報を提供する、オブジェクトを使用して、<xref:System.Security.Cryptography.Xml.CipherData>オブジェクト</xref:System.Security.Cryptography.Xml.CipherData>。"
  example:
  - "The following code example creates a new instance of <xref:System.Security.Cryptography.Xml.CipherReference>.  \n  \n [!code-vb[cryptography.Xml.CipherReference#1](~/add/codesnippet/visualbasic/b72a27e7-300b-421f-bbd3-_1.vb)]\n [!code-cs[cryptography.Xml.CipherReference#1](~/add/codesnippet/csharp/b72a27e7-300b-421f-bbd3-_1.cs)]\n [!code-cpp[cryptography.Xml.CipherReference#1](~/add/codesnippet/cpp/b72a27e7-300b-421f-bbd3-_1.cpp)]"
  syntax:
    content: public CipherReference (string uri, System.Security.Cryptography.Xml.TransformChain transformChain);
    parameters:
    - id: uri
      type: System.String
      description: "UNIFORM Resource Identifier ()、暗号化されたデータをポイントします。"
    - id: transformChain
      type: System.Security.Cryptography.Xml.TransformChain
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.TransformChain&quot;> </xref>変換を行うには、暗号化されたデータを記述するオブジェクト。"
  overload: System.Security.Cryptography.Xml.CipherReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 表現を返します、 <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;> </xref>オブジェクト。"
  remarks: "このメソッドを使用して、出力、 `<CipherReference>` XML 内の要素。"
  example:
  - "The following code example shows one way to use the GetXml method.  \n  \n [!code-vb[CipherReference2#1](~/add/codesnippet/visualbasic/m-system.security.crypto_115_1.vb)]\n [!code-cpp[CipherReference2#1](~/add/codesnippet/cpp/m-system.security.crypto_115_1.cpp)]\n [!code-cs[CipherReference2#1](~/add/codesnippet/csharp/m-system.security.crypto_115_1.cs)]"
  syntax:
    content: public override System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>を表す、 <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  overload: System.Security.Cryptography.Xml.CipherReference.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <xref href=&quot;System.Security.Cryptography.Xml.CipherReference&quot;></xref> value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML の情報を読み込み、 <xref uid=&quot;langword_csharp_&lt;CipherReference&gt;&quot; name=&quot;&lt;CipherReference&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  remarks: "このメソッドを使用してに既存の XML 要素を読み込み、<xref:System.Security.Cryptography.Xml.CipherReference>オブジェクト</xref:System.Security.Cryptography.Xml.CipherReference>。"
  syntax:
    content: public override void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>参照として使用する XML 要素を表すオブジェクト。"
  overload: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.Cryptography.Xml.EncryptedReference
  isExternal: false
  name: System.Security.Cryptography.Xml.EncryptedReference
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference()
  nameWithType: CipherReference.CipherReference()
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference()
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String)
  nameWithType: CipherReference.CipherReference(String)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor(System.String,System.Security.Cryptography.Xml.TransformChain)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference(String,TransformChain)
  nameWithType: CipherReference.CipherReference(String,TransformChain)
  fullName: System.Security.Cryptography.Xml.CipherReference.CipherReference(String,TransformChain)
- uid: System.Security.Cryptography.Xml.TransformChain
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: TransformChain
  nameWithType: TransformChain
  fullName: System.Security.Cryptography.Xml.TransformChain
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml()
  nameWithType: CipherReference.GetXml()
  fullName: System.Security.Cryptography.Xml.CipherReference.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: CipherReference.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.CipherReference.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.CipherReference.#ctor*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: CipherReference
  nameWithType: CipherReference.CipherReference
- uid: System.Security.Cryptography.Xml.CipherReference.GetXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: GetXml
  nameWithType: CipherReference.GetXml
- uid: System.Security.Cryptography.Xml.CipherReference.LoadXml*
  parent: System.Security.Cryptography.Xml.CipherReference
  isExternal: false
  name: LoadXml
  nameWithType: CipherReference.LoadXml
