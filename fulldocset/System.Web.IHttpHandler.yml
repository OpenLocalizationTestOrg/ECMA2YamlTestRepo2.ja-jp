### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpHandler
  id: IHttpHandler
  children:
  - System.Web.IHttpHandler.IsReusable
  - System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
  type: Interface
  summary: "ASP.NET がカスタム HTTP ハンドラーを使用した HTTP Web 要求を同期的に処理するために実装するコントラクトを定義します。"
  remarks: "事前定義された、特定の種類の共通言語仕様 (CLS) 準拠の言語での HTTP 要求を処理するカスタム HTTP ハンドラーを記述することができます。 定義されている実行可能コード、`HttpHandler`これら特定の要求に応答を従来の ASP または ASP.NET Web ページではなく、クラス、します。 HTTP ハンドラーは、低レベルの要求と、IIS Web サーバーの応答サービスと対話する手段を提供し、プログラミング モデルがより単純ですが、ISAPI 拡張機能と同様に機能を提供します。       場合は、ハンドラーのセッション状態の値がアクセスする必要がありますを実装して、<xref:System.Web.SessionState.IRequiresSessionState>インターフェイス (マーカー インターフェイスにメソッドを持たない).</xref:System.Web.SessionState.IRequiresSessionState>"
  syntax:
    content: public interface IHttpHandler
  implements: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "別の要求が使用できるかどうかを示す値を取得、 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref>インスタンス。"
  remarks: "明示的に設定する IsReusable プロパティ`true`または`false`IsReusable プロパティのアクセサー (get アクセス操作子) をオーバーライドするを指定するコードによってです。"
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/p-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/p-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref>インスタンスが再利用可能なそれ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.IHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "カスタム HTTP Web 要求の処理を有効<xref uid=&quot;langword_csharp_HttpHandler&quot; name=&quot;HttpHandler&quot; href=&quot;&quot;></xref>を実装する、 <xref href=&quot;System.Web.IHttpHandler&quot;> </xref>インターフェイスです。"
  remarks: "カスタムの配置`HttpHandler`ProcessRequest 仮想メソッドでコードの次の例で示すようにします。"
  example:
  - "The following code example writes four lines of text to the HTTP output stream in response to a client request for a page named handler.aspx. All requests for handler.aspx are serviced by the `MyHttpHandler` class in the namespace `HandlerExample` contained in the assembly HandlerTest.dll.  \n  \n [!code-cs[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/csharp/m-system.web.ihttphandle_1.cs)]\n [!code-vb[Classic IHttpHandler.ProcessRequest Example#1](~/add/codesnippet/visualbasic/m-system.web.ihttphandle_1.vb)]"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref>組み込みサーバー オブジェクトへの参照を提供するオブジェクト (たとえば、 <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>、 <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>、および<xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) HTTP 要求を処理するために使用します。"
  overload: System.Web.IHttpHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpHandler.IsReusable
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
  fullName: System.Web.IHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.IHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: IHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.IHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.IHttpHandler.IsReusable*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: IHttpHandler.IsReusable
- uid: System.Web.IHttpHandler.ProcessRequest*
  parent: System.Web.IHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: IHttpHandler.ProcessRequest
