### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SessionSecurityToken
  id: SessionSecurityToken
  children:
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  - System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  - System.IdentityModel.Tokens.SessionSecurityToken.Context
  - System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  - System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  - System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.Tokens.SessionSecurityToken.Id
  - System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  - System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  - System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  - System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  - System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  langs:
  - csharp
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken
  fullName: System.IdentityModel.Tokens.SessionSecurityToken
  type: Class
  summary: "セッションに関連付けられているデータが含まれるセキュリティ トークンを定義します。"
  remarks: "セッション トークンを格納、<xref:System.Security.Claims.ClaimsPrincipal>のセッションを定義するその他のパラメーターだけでなく、セッションに関連付けられているユーザー セッションの開始イベントおよび終了時刻</xref:System.Security.Claims.ClaimsPrincipal>。       パッシブのシナリオで、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>への呼び出し、 <xref:System.IdentityModel.Services.SessionAuthenticationModule>(SAM) からのセッション トークンを作成する認証パイプラインから、<xref:System.Security.Claims.ClaimsPrincipal>認証されたユーザーを表す</xref:System.Security.Claims.ClaimsPrincipal></xref:System.IdentityModel.Services.SessionAuthenticationModule></xref:System.IdentityModel.Services.WSFederationAuthenticationModule>。 その構成を使用して、SAM<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>トークンを作成して cookie にシリアル化 (および後続の要求の cookie からのトークンを逆シリアル化する).</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> SAM は、その構成済みのインスタンスを使用して<xref:System.IdentityModel.Services.CookieHandler>クッキーを HTTP 応答に書き込むのにクラス</xref:System.IdentityModel.Services.CookieHandler>。 この cookie は、クライアントに返されます、後続の要求で、クライアントをセキュリティ トークンを再取得する id プロバイダーに戻るラウンド トリップを加えるのではなく、cookie 提示できます。 WIF のセッションのしくみの詳細については、次を参照してください。 [WIF セッション管理](~/add/includes/ajax-current-ext-md.md)です。 Web ファームのシナリオにセッションの使用方法の詳細については、次を参照してください。 [WIF および Web ファーム](~/add/includes/ajax-current-ext-md.md)です。       セッション トークンは、かどうか参照モードで動作できます。 セッション トークンが参照モードで動作していない場合は、トークン全体がクライアントに格納されているセッション cookie にシリアル化されます。 シリアル化されたセッション トークンが非常に大きくなることができ、そのため、cookie がクライアントに格納することもできます非常にサイズ変更可能です。 参照モードでセッション全体をシリアル化するのではなく cookie にトークン、トークンはセッション セキュリティ トークンのキャッシュとキャッシュからトークンを取得するために必要なキーの生成に使用する情報のみが、cookie に格納されています。 これは、cookie のサイズを大幅に減らすことができます。 セッション トークンのキャッシュは<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>、キャッシュ キーは<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>クラス</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>によって実装されて</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>から派生したクラスによって実装します。 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>と<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>プロパティがで使用される、<xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>キャッシュ キーを生成するクラス</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>。       <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>プロパティかを決定するかどうか、セッション トークンの参照モードでします</xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>。      > [!IMPORTANT] > のハンドラーを提供することをお勧め参照モードで動作する、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>global.asax.cs ファイルと設定でイベント、<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>に渡されたトークンのプロパティ、<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>プロパティ</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>。 セッション トークンが要求ごとに参照モードで動作し、単なる設定が優先これにより、<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>セッション認証モジュールのプロパティ</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>。       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>WIF で提供されるクラスが Ws-secure Conversation としてセッション トークンをシリアル化`<wsc:SecurityContextToken>`要素</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>。"
  syntax:
    content: 'public class SessionSecurityToken : System.IdentityModel.Tokens.SecurityToken, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityToken
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>指定されたプリンシパルからのクラスです。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティとします |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|生成される 128 ビットの対称キーが含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A></xref:System.String.Empty?displayProperty=fullName></xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A>加えた<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティです |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 。"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "トークンを初期化するための要求のプリンシパル。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>シリアル化されたデータを持つクラス。"
  syntax:
    content: protected SessionSecurityToken (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データ。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースに関するコンテキスト情報。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>指定されたプリンシパルとブートス トラップ トークンからのクラスです。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A><xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティとします |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|生成される 128 ビットの対称キーが含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A></xref:System.String.Empty?displayProperty=fullName></xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A>加えた<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティです |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 。"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "ブートス トラップ トークンから生成された要求のプリンシパル。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>指定されたプリンシパルからのクラスです。 有効では、新しいトークン<xref:System.DateTime.UtcNow*>期間は、指定した</xref:System.DateTime.UtcNow*>。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|生成される 128 ビットの対称キーが含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A></xref:System.String.Empty?displayProperty=fullName></xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`.|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, TimeSpan lifetime);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "トークンを初期化するための要求のプリンシパル。"
    - id: lifetime
      type: System.TimeSpan
      description: "トークンが有効である現在の時刻からの期間。 <> </> *> プロパティ設定されます<> *> と<> *> プロパティ設定されます<> *> さらにこのパラメーターによって指定された期間。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>以下には、<xref:System.TimeSpan.Zero>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>から、指定されたプリンシパルとブートス トラップ トークンです。 クラスと、指定した開始時刻と有効期限の時刻。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|<xref:System.String.Empty?displayProperty=fullName>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティの値に設定、`ValidFrom`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>プロパティの値、`ValidTo`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|生成される 128 ビットの対称キーが含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A></xref:System.String.Empty?displayProperty=fullName></xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|値、`validFrom`パラメーター、または、`validFrom`は`null` <xref:System.DateTime.UtcNow%2A>|。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|値、`validFrom`パラメーター</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 。 場合`validFrom`は`null`の値、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティ (によって決定される、`validFrom`パラメーター) と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティです |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 。"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "ブートス トラップ トークンから生成された要求のプリンシパル。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "トークンが有効になる時刻インスタント。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>指定するには<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "インスタントするまでの時間、トークンが有効ではなくなりました。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>値を追加することで、値を決定する必要がありますを指定する、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;プロパティで指定された時間を`validFrom`パラメーター。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code>と<code> validTo </code>パラメーターを検証することはできません。 たとえば、 <code> validTo </code>に発生する時間を指定よりも前<code> validFrom</code>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>から、指定されたプリンシパルとブートス トラップ トークンです。 クラスと、指定した開始時刻と有効期限の時刻。 新しいトークンのスコープが指定されたエンドポイントに設定します。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティの値に設定、`ValidFrom`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>プロパティの値、`ValidTo`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|生成される 128 ビットの対称キーが含まれています</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|値、`validFrom`パラメーター、または、`validFrom`は`null` <xref:System.DateTime.UtcNow%2A>|。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|値、`validFrom`パラメーター</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 。 場合`validFrom`は`null`の値、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティ (によって決定される、`validFrom`パラメーター) と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティです |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 。"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "ブートス トラップ トークンから生成された要求のプリンシパル。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
    - id: endpointId
      type: System.String
      description: "このトークンのバインド先となるエンドポイント。 空の文字列では、対象範囲外のトークンを作成します。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "トークンが有効になる時刻インスタント。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref><xref:System.DateTime.UtcNow*>。</xref:System.DateTime.UtcNow*>を指定するには"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "インスタントするまでの時間、トークンが有効ではなくなりました。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>値を追加することで、値を決定する必要がありますを指定する、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;プロパティで指定された時間を`validFrom`パラメーター。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> validFrom </code>と<code> validTo </code>パラメーターを検証することはできません。 たとえば、 <code> validTo </code>に発生する時間を指定よりも前<code> validFrom</code>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>クラスを指定したプリンシパル、コンテキスト ID、コンテキスト、エンドポイント、有効期間、およびキーを使用します。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|いずれか 1 つの要素が含まれています`key`または、`key`は`null`、生成される 128 ビットの対称キー</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> 。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|<xref:System.DateTime.UtcNow%2A>|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|<xref:System.DateTime.UtcNow%2A> plus `lifetime`|</xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.DateTime.UtcNow%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "このセッションに関連付けられている要求のプリンシパル。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "このトークンに関連付けられているコンテキストの識別子です。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
    - id: endpointId
      type: System.String
      description: "このトークンのバインド先となるエンドポイント。 空の文字列では、対象範囲外のトークンを作成します。"
    - id: lifetime
      type: System.TimeSpan
      description: "セッション トークンの有効期間。 <> </> *> プロパティ設定されます<> *> と<> *> プロパティ設定されます<> *> さらにこのパラメーターによって指定された期間。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "省略可能な対称セッション キーの場合。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>以下には、<xref:System.TimeSpan.Zero>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>クラスを指定したプリンシパル、コンテキスト ID、コンテキスト、エンドポイント、有効なタイムスタンプ、有効期間、およびキーを使用します。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`または、`contextId`は`null`、生成される一意の ID |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|`validFrom`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|`validFrom` plus `lifetime`.|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|いずれか 1 つの要素が含まれています`key`または、`key`は`null`、生成される 128 ビットの対称キー</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> 。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|`validFrom`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|`validFrom` plus `lifetime`.|</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A></xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A></xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, DateTime validFrom, TimeSpan lifetime, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "このセッションに関連付けられている要求のプリンシパル。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "このトークンに関連付けられているコンテキストの識別子です。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
    - id: endpointId
      type: System.String
      description: "このトークンのバインド先となるエンドポイント。 空の文字列では、対象範囲外のトークンを作成します。"
    - id: validFrom
      type: System.DateTime
      description: "トークンが有効になる時刻。"
    - id: lifetime
      type: System.TimeSpan
      description: "セッション トークンの有効期間。 <> </> *> プロパティ設定されます<> *> さらにこのパラメーターによって指定された期間。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "省略可能な対称セッション キーの場合。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>endpointId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>lifetime</code>以下には、<xref:System.TimeSpan.Zero>です。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  id: '#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)'
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IdentityModel.Tokens.SessionSecurityToken&quot;> </xref>クラスを指定したプリンシパル、コンテキスト ID、コンテキスト、エンドポイント、開始時刻、有効期限、およびキーを使用します。"
  remarks: "次の表は、<xref:System.IdentityModel.Tokens.SessionSecurityToken>クラス</xref:System.IdentityModel.Tokens.SessionSecurityToken>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A>|`claimsPrincipal`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A>|`context`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>|`contextId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A>|`endpointId`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A>|生成された一意の ID を設定 |  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A>|`false`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティの値に設定、`ValidFrom`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A>|によって決定される<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>プロパティの値、`ValidTo`パラメーターです |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A>|`null`|  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A>|いずれか 1 つの要素が含まれています`key`または、`key`は`null`、生成される 128 ビットの対称キー</xref:System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Id%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.EndpointId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal%2A> 。 **注:**既定の実装では、このプロパティは使用しません。 署名と暗号化キーが指定されたトークンを処理して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>によって適用されたクッキーの変換です |。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>|値、`validFrom`パラメーター、または、`validFrom`は`null` <xref:System.DateTime.UtcNow%2A>|。  |<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A>|値、`validFrom`パラメーター</xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A> </xref:System.DateTime.UtcNow%2A> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> </xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> 。 場合`validFrom`は`null`の値、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A>プロパティ (によって決定される、`validFrom`パラメーター) と<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName>プロパティです |</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName> </xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A> 。"
  syntax:
    content: public SessionSecurityToken (System.Security.Claims.ClaimsPrincipal claimsPrincipal, System.Xml.UniqueId contextId, string context, string endpointId, Nullable<DateTime> validFrom, Nullable<DateTime> validTo, System.IdentityModel.Tokens.SymmetricSecurityKey key);
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
      description: "このセッションに関連付けられている要求のプリンシパル。"
    - id: contextId
      type: System.Xml.UniqueId
      description: "このトークンに関連付けられているコンテキストの識別子です。"
    - id: context
      type: System.String
      description: "省略可能なアプリケーション固有のコンテキスト文字列。"
    - id: endpointId
      type: System.String
      description: "このトークンのバインド先となるエンドポイント。 空の文字列では、対象範囲外のトークンを作成します。"
    - id: validFrom
      type: System.Nullable{System.DateTime}
      description: "トークンが有効になる時刻インスタント。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>指定するには<xref:System.DateTime.UtcNow*></xref:System.DateTime.UtcNow*>"
    - id: validTo
      type: System.Nullable{System.DateTime}
      description: "インスタントするまでの時間、トークンが有効ではなくなりました。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>値を追加することで、値を決定する必要がありますを指定する、 &lt;xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A?displayProperty=fullName&gt;プロパティで指定された時間を`validFrom`パラメーター。"
    - id: key
      type: System.IdentityModel.Tokens.SymmetricSecurityKey
      description: "省略可能な対称セッション キーの場合。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claimsPrincipal</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       The <xref:System.Security.Claims.ClaimsPrincipal.Identities*> property of <code>claimsPrincipal</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>contextId</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>validFrom</code>より大きいまたは等しい<code>validTo</code>です。       - または -<code>validTo</code>が現在の時刻よりも小さいです。"
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  id: ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "セッションに関連付けられている要求のプリンシパルを取得します。"
  syntax:
    content: public System.Security.Claims.ClaimsPrincipal ClaimsPrincipal { get; }
    return:
      type: System.Security.Claims.ClaimsPrincipal
      description: "要求のプリンシパル。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  id: Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "ユーザーを取得では、コンテキスト値を指定します。"
  remarks: "このプロパティを使用して、アプリケーション固有のコンテキストを格納することができます。"
  syntax:
    content: public string Context { get; }
    return:
      type: System.String
      description: "ユーザーは、コンテキスト値を指定します。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  id: ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "セッション コンテキスト識別子を取得します。"
  remarks: "コンテキスト識別子は、すべてのセッション トークンの間で一意です。       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>クラスは、コンテキスト ID と<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>トークンのキーを生成するキーの生成の両方を使用</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>する       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クラスとしては、このプロパティをシリアル化、`<Identifier>`の子要素、`<wsc:SecurityContextToken>`要素</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>。 詳細については、ドキュメントを参照して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>メソッド</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Xml.UniqueId ContextId { get; }
    return:
      type: System.Xml.UniqueId
      description: "セッション コンテキストの識別子です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  id: EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このトークンのスコープをエンドポイントの ID を取得します。"
  remarks: >-
    > [!IMPORTANT]

    >  If the EndpointId property is `null`, the session token is treated as globally scoped by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> class. This can present a potential security risk.
  syntax:
    content: public string EndpointId { get; }
    return:
      type: System.String
      description: "エンドポイントの ID です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "セット、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>セッション セキュリティ トークンをシリアル化するために必要な情報を使用します。"
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "シリアル化されたオブジェクト データ。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "ソースまたは転送先に関する文脈情報。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このトークンの一意の識別子を取得します。"
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クラスとしては、このプロパティをシリアル化、`Id`の属性、`<wsc:SecurityContextToken>`要素</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>。 詳細については、ドキュメントを参照して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>メソッド</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>。"
  syntax:
    content: public override string Id { get; }
    return:
      type: System.String
      description: "トークン id。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  id: IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得または、このトークンによって表される cookie が永続的かどうかを示す値を設定します。"
  remarks: "IsPersistent プロパティが場合`true`cookie が永続的な cookie として書き込まれます。 期限が切れるまで、ブラウザーを閉じた後、永続的な cookie が有効なままです。"
  syntax:
    content: public bool IsPersistent { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、cookie が永続的です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  id: IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "取得またはセッションのセキュリティ トークンが参照モードで動作しているかどうかを示す値を設定します。"
  remarks: "参照モードで単純な成果物をシリアル化中に生成され、トークンの情報がトークン ハンドラーに関連付けられているトークンのキャッシュに格納されています。 トークンのキャッシュは<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>から派生したクラスのインスタンス Web ファームのシナリオで、トークンのキャッシュは、ファーム内のすべてのノードで動作する必要があります。      > [!IMPORTANT] > のハンドラーを提供することをお勧め参照モードで動作する、 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>global.asax.cs ファイルとトークンに IsReferenceMode プロパティの設定でイベントが渡された、<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName>プロパティ</xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=fullName></xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=fullName>。 セッション トークンが要求ごとに参照モードで動作し、単なる設定が優先これにより、<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>セッション認証モジュールのプロパティ</xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=fullName>。"
  syntax:
    content: public bool IsReferenceMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>トークンはセッション モードで動作している場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  id: KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "元のこのトークンのキーが有効ではインスタントの時間を取得します。"
  syntax:
    content: public DateTime KeyEffectiveTime { get; }
    return:
      type: System.DateTime
      description: "元のインスタント時間キーは有効です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  id: KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "その後このトークンのキーが無効になってインスタントの時刻を取得します。"
  syntax:
    content: public DateTime KeyExpirationTime { get; }
    return:
      type: System.DateTime
      description: "キーの有効期限が切れる時間インスタントです。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  id: KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このトークンでキーの生成の id を取得します。"
  remarks: "KeyGeneration プロパティは、セッションのトークン内で一意です。 セッション トークンが発行されるときにのみ、コンテキスト ID を使用してアクセスされる、<xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>プロパティ</xref:System.IdentityModel.Tokens.SessionSecurityToken.ContextId%2A>。 セッション トークンを更新すると、キーの生成が追加されます。       <xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>クラスは、コンテキスト ID と<xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>。</xref:System.IdentityModel.Tokens.SessionSecurityTokenCache>トークンのキーを生成するキーの生成の両方を使用</xref:System.IdentityModel.Tokens.SessionSecurityTokenCacheKey>する       <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>クラスとしては、このプロパティをシリアル化、`<Instance>`の子要素、`<wsc:SecurityContextToken>`要素</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>。 詳細については、ドキュメントを参照して、<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>メソッド</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.WriteToken%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Xml.UniqueId KeyGeneration { get; }
    return:
      type: System.Xml.UniqueId
      description: "このトークンでキーの生成の一意の識別子。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  id: SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このセッションのセキュリティをシリアル化に使用される Ws-secure Conversation のバージョンを識別する URI のトークンを取得します。"
  remarks: "<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>Ws-secure Conversation Feb2005 および Ws-secure Conversation 1.3 基底クラスをサポートしています</xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>。 これらのバージョンの Ws-secure Conversation の Uri は、それぞれ&quot;http://schemas.xmlsoap.org/ws/2005/02/sc&quot;と&quot;http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512&quot;です。"
  syntax:
    content: public Uri SecureConversationVersion { get; }
    return:
      type: System.Uri
      description: "このトークンをシリアル化に使用される Ws-secure Conversation のバージョンを識別する URI。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "このセッションに関連付けられたキーを取得します。 これは、通常、1 つのキーです。"
  remarks: >-
    > [!NOTE]

    >  The default implementation does not use this property. Signing and encryption keys are dictated by the cookie transforms applied by the <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> that processes the token.
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: "セッションに関連付けられたキー。 1 つのキーは通常です。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "元のトークンが有効ではインスタントの時間を取得します。"
  syntax:
    content: public override DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: "元となるは、トークンの有効期間。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "その後、トークンが無効になってインスタントの時刻を取得します。"
  syntax:
    content: public override DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: "その後、トークンが無効になって時刻。"
  overload: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: System.IdentityModel.Tokens.SecurityToken
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal)
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.TimeSpan)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: true
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.DateTime>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,String,String,Nullable<DateTime>,Nullable<DateTime>)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,TimeSpan,SymmetricSecurityKey)
- uid: System.Xml.UniqueId
  parent: System.Xml
  isExternal: true
  name: UniqueId
  nameWithType: UniqueId
  fullName: System.Xml.UniqueId
- uid: System.IdentityModel.Tokens.SymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SymmetricSecurityKey
  nameWithType: SymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.SymmetricSecurityKey
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.DateTime,System.TimeSpan,System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,DateTime,TimeSpan,SymmetricSecurityKey)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor(System.Security.Claims.ClaimsPrincipal,System.Xml.UniqueId,System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.IdentityModel.Tokens.SymmetricSecurityKey)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  nameWithType: SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SessionSecurityToken(ClaimsPrincipal,UniqueId,String,String,Nullable<DateTime>,Nullable<DateTime>,SymmetricSecurityKey)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
  fullName: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SessionSecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SessionSecurityToken
  nameWithType: SessionSecurityToken.SessionSecurityToken
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ClaimsPrincipal*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: SessionSecurityToken.ClaimsPrincipal
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Context*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Context
  nameWithType: SessionSecurityToken.Context
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ContextId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ContextId
  nameWithType: SessionSecurityToken.ContextId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.EndpointId*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: EndpointId
  nameWithType: SessionSecurityToken.EndpointId
- uid: System.IdentityModel.Tokens.SessionSecurityToken.GetObjectData*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: GetObjectData
  nameWithType: SessionSecurityToken.GetObjectData
- uid: System.IdentityModel.Tokens.SessionSecurityToken.Id*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: Id
  nameWithType: SessionSecurityToken.Id
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsPersistent*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsPersistent
  nameWithType: SessionSecurityToken.IsPersistent
- uid: System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: IsReferenceMode
  nameWithType: SessionSecurityToken.IsReferenceMode
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyEffectiveTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyEffectiveTime
  nameWithType: SessionSecurityToken.KeyEffectiveTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyExpirationTime*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyExpirationTime
  nameWithType: SessionSecurityToken.KeyExpirationTime
- uid: System.IdentityModel.Tokens.SessionSecurityToken.KeyGeneration*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: KeyGeneration
  nameWithType: SessionSecurityToken.KeyGeneration
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecureConversationVersion*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecureConversationVersion
  nameWithType: SessionSecurityToken.SecureConversationVersion
- uid: System.IdentityModel.Tokens.SessionSecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SessionSecurityToken.SecurityKeys
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SessionSecurityToken.ValidFrom
- uid: System.IdentityModel.Tokens.SessionSecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SessionSecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SessionSecurityToken.ValidTo
