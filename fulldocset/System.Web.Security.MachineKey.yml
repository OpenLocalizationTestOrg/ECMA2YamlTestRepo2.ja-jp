### YamlMime:ManagedReference
items:
- uid: System.Web.Security.MachineKey
  id: MachineKey
  children:
  - System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  - System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  - System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  langs:
  - csharp
  name: MachineKey
  nameWithType: MachineKey
  fullName: System.Web.Security.MachineKey
  type: Class
  summary: "ASP.NET フォーム認証とビューステートに使用されるキーの値と同じアルゴリズムを使用して暗号化する方法、またはハッシュ データ (または両方) を提供します。"
  remarks: "MachineKey クラスは、ASP.NET が提供するハッシュおよび暗号化のロジックを公開するメソッドを提供します。 ASP.NET が使用する暗号化とハッシュ アルゴリズムとそれらに使用されているキーの値については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)です。      > [!WARNING] >、MachineKey Api は、ASP.NET アプリケーションでのみ使用する必要があります。 ASP.NET アプリケーションのコンテキスト外 MachineKey Api の動作が定義されていません"
  syntax:
    content: public static class MachineKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  id: Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "デコードおよび暗号化またはハッシュ ベース メッセージ認証コード (HMAC) で提供されたデータを検証します。"
  remarks: "対象の暗号化とハッシュ アルゴリズムの ASP.NET を使用して復号化しに渡されるデータの検証については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)です。"
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static byte[] Decode (string encodedData, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: encodedData
      type: System.String
      description: "暗号化されたデータを復号化したり検証したりします。"
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "示すかどうか、`encodedData`パラメーターの暗号化し、ハッシュする必要があります。"
    return:
      type: System.Byte[]
      description: "A<xref:System.Byte>を復号化されたデータを表す配列</xref:System.Byte>。"
  overload: System.Web.Security.MachineKey.Decode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  id: Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "データの暗号化や、ハッシュ ベース メッセージ認証コード (HMAC) を追加します。"
  remarks: "対象の暗号化とハッシュ アルゴリズムの ASP.NET を使用して復号化しに渡されるデータの検証については、次を参照してください。 [machineKey 要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46)です。"
  example:
  - For a code example, see the <xref:System.Web.Security.MachineKey> class overview.
  syntax:
    content: public static string Encode (byte[] data, System.Web.Security.MachineKeyProtection protectionOption);
    parameters:
    - id: data
      type: System.Byte[]
      description: "暗号化するデータ。"
    - id: protectionOption
      type: System.Web.Security.MachineKeyProtection
      description: "示すかどうか、`data`パラメーターの暗号化し、ハッシュする必要があります。"
    return:
      type: System.String
      description: "暗号化された値、した HMAC 値、追加の入力値または追加 HMAC で入力値を暗号化するための結果。"
  overload: System.Web.Security.MachineKey.Encode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  id: Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "暗号化または署名により、指定したデータを保護します。"
  remarks: "このメソッドは、<xref:System.Web.Security.MachineKey.Encode%2A>または両方の方法を指定するかどうか、プレーン テキスト データを暗号化する、署名済み、呼び出し元が必要です</xref:System.Web.Security.MachineKey.Encode%2A>。 保護する方法は、適切な操作を実行し、安全にデータを保護できます。 によって、このメソッドによって作成された暗号化テキスト データを解読だけことができます、<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッド</xref:System.Web.Security.MachineKey.Unprotect%2A>。       `purposes`パラメーターは、特定の目的に暗号テキストをロックする理由のオプションの一覧です。 このパラメーターを使用して、アプリケーション内で複数のサブシステムによって実行される暗号化の操作を分離できます。 悪意のあるクライアントすべきを&1; つのサブシステムの保護メソッドの結果を取得し、別のサブシステムへの入力としてフィード<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッドで、アプリケーションのセキュリティを損なう可能性があります</xref:System.Web.Security.MachineKey.Unprotect%2A>。 `purposes`パラメーターにより、保護されたデータは生成された、コンポーネントによってのみ使用できます。 アプリケーションが各サブシステムを使用して、一意なことを確認してください`purposes` ボックスの一覧です。       たとえば、保護または認証トークンの保護を解除、でしたメソッドを呼び出す例を次のようなコードを使用して: ```c#   MachineKey.Protect(..., &quot;Authentication token&quot;);   MachineKey.Unprotect(..., &quot;Authentication token&quot;);   ``` ```vb   MachineKey.Protect(..., &quot;Authentication token&quot;)   MachineKey.Unprotect(..., &quot;Authentication token&quot;)   ```アプリケーションを動的に生成できます、`purposes`のパラメーターです。       固定値を持つユーザーが指定した値をその場合は、プレフィックス (のように&quot;`Username:` &quot;+ *username*) システムの他の部分で使用されるトークンと一致する入力の作成、悪質なクライアントの危険を最小限にします。 動的に生成された文字列は、固定文字列の後に続く必要があります。 たとえばを保護または特定のユーザーに関連付けられているプライベート メッセージの保護を解除は、次の例のようなコードを使用: ```c#   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username);   ``` ```vb   MachineKey.Protect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   MachineKey.Unprotect(..., &quot;Private message&quot;, &quot;Recipient: &quot; + username)   ```ときに、<xref:System.Web.Security.MachineKey.Unprotect%2A>メソッドを呼び出すために用意されている値、`purposes`パラメーターは、保護するメソッドに提供されたものと同じ値である必要があります</xref:System.Web.Security.MachineKey.Unprotect%2A>。       それ以外の場合、操作は失敗し、<xref:System.Security.Cryptography.CryptographicException>例外です</xref:System.Security.Cryptography.CryptographicException>。       必要な構成設定、<xref:System.Web.Configuration.MachineKeyCompatibilityMode?displayProperty=fullName>オプションに指定されていなくてもこのメソッドに必要な<xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName>プロパティに設定されていない、<xref:System.Web.Configuration.MachineKeyCompatibilityMode>オプション</xref:System.Web.Configuration.MachineKeyCompatibilityMode></xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName></xref:System.Web.Configuration.MachineKeyCompatibilityMode?displayProperty=fullName>。"
  syntax:
    content: public static byte[] Protect (byte[] userData, string[] purposes);
    parameters:
    - id: userData
      type: System.Byte[]
      description: "保護するデータ。 このデータは、プレーン テキストとして渡されます。"
    - id: purposes
      type: System.String[]
      description: "データの目的のリスト。 同じ一覧を渡すことがこの値が指定されている場合、<xref:System.Web.Security.MachineKey.Unprotect*>メソッドで返された暗号化テキストを復号化するためにします</xref:System.Web.Security.MachineKey.Unprotect*>。"
    return:
      type: System.Byte[]
      description: "暗号化テキスト データです。"
  overload: System.Web.Security.MachineKey.Protect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> userData </code>パラメーターが null です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目的の配列には、1 つ以上の空白のみのエントリが含まれています。"
  platform:
  - net462
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  id: Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  langs:
  - csharp
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "によって保護された、指定されたデータの保護を解除、<xref:System.Web.Security.MachineKey.Protect*>メソッド</xref:System.Web.Security.MachineKey.Protect*>。"
  remarks: "この方法については、次を参照してください、<xref:System.Web.Security.MachineKey.Protect%2A>メソッド。</xref:System.Web.Security.MachineKey.Protect%2A> 。"
  syntax:
    content: public static byte[] Unprotect (byte[] protectedData, string[] purposes);
    parameters:
    - id: protectedData
      type: System.Byte[]
      description: "保護を解除する暗号テキスト データ。"
    - id: purposes
      type: System.String[]
      description: "データが意図したものを記述する目的での一覧。 渡されたものと同じ値でなければなりません、<xref:System.Web.Security.MachineKey.Protect*>メソッドは、データが保護されていたとします</xref:System.Web.Security.MachineKey.Protect*>。"
    return:
      type: System.Byte[]
      description: "プレーン テキスト データです。"
  overload: System.Web.Security.MachineKey.Unprotect*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> protectedData </code>パラメーターが null です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "目的の配列には、1 つ以上の空白のみのエントリが含まれています。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "考えられる原因は次のとおりです:-保護されたデータが改ざんします。      -の値、 <code> purposes </code>パラメーターが同じデータが保護されている場合に指定された値。      -アプリケーションは、1 つ以上のサーバーに配置し、自動生成された暗号化キーの使用がします。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.Web.Security.MachineKey.Decode(System.String,System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode(String,MachineKeyProtection)
  nameWithType: MachineKey.Decode(String,MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Decode(String,MachineKeyProtection)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MachineKeyProtection
  parent: System.Web.Security
  isExternal: false
  name: MachineKeyProtection
  nameWithType: MachineKeyProtection
  fullName: System.Web.Security.MachineKeyProtection
- uid: System.Web.Security.MachineKey.Encode(System.Byte[],System.Web.Security.MachineKeyProtection)
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode(Byte[],MachineKeyProtection)
  nameWithType: MachineKey.Encode(Byte[],MachineKeyProtection)
  fullName: System.Web.Security.MachineKey.Encode(Byte[],MachineKeyProtection)
- uid: System.Web.Security.MachineKey.Protect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect(Byte[],String[])
  nameWithType: MachineKey.Protect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Protect(Byte[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.MachineKey.Unprotect(System.Byte[],System.String[])
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect(Byte[],String[])
  nameWithType: MachineKey.Unprotect(Byte[],String[])
  fullName: System.Web.Security.MachineKey.Unprotect(Byte[],String[])
- uid: System.Web.Security.MachineKey.Decode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Decode
  nameWithType: MachineKey.Decode
- uid: System.Web.Security.MachineKey.Encode*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Encode
  nameWithType: MachineKey.Encode
- uid: System.Web.Security.MachineKey.Protect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Protect
  nameWithType: MachineKey.Protect
- uid: System.Web.Security.MachineKey.Unprotect*
  parent: System.Web.Security.MachineKey
  isExternal: false
  name: Unprotect
  nameWithType: MachineKey.Unprotect
