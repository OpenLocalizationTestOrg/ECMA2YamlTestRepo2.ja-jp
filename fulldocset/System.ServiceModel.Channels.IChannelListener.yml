### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.IChannelListener
  id: IChannelListener
  children:
  - System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  - System.ServiceModel.Channels.IChannelListener.GetProperty``1
  - System.ServiceModel.Channels.IChannelListener.Uri
  - System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  langs:
  - csharp
  name: IChannelListener
  nameWithType: IChannelListener
  fullName: System.ServiceModel.Channels.IChannelListener
  type: Interface
  summary: "チャネルを受け入れるためのチャネル リスナーによって実装する必要があるインターフェイスを定義します。"
  remarks: "IChannelListener インターフェイスは、チャネル リスナーの基底インターフェイスを表します。       チャネル リスナーと、関連付けられたチャネルは、一般にクライアントによって開始される通信を受信するサービスによって使用されます。 実装するチャネル ファクトリ、<xref:System.ServiceModel.Channels.IChannelFactory>インターフェイス、これに対しが開始されるサービスとの通信を使用するチャネルの作成に使用されるメカニズムを提供します</xref:System.ServiceModel.Channels.IChannelFactory>。"
  syntax:
    content: 'public interface IChannelListener : System.ServiceModel.ICommunicationObject'
  implements:
  - System.ServiceModel.ICommunicationObject
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "指定した時間間隔内に完了する必要がありますチャネルの到着を待機する非同期操作を開始します。"
  syntax:
    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル操作の待機がタイムアウトするまでに完了する必要がある期間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>チャネル操作の待機の非同期完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "チャネル操作の非同期待機に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>チャネル操作の非同期待機を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  id: EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "チャネルの到着を待機する非同期操作を完了します。"
  syntax:
    content: public bool EndWaitForChannel (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>EndWaitForChannel メソッドへの呼び出しによって返される</xref:System.IAsyncResult>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メッセージが届いた場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  id: GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  syntax:
    content: 'public T GetProperty<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "追加します。"
  overload: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  id: Uri
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "ファクトリによって生成されるリスナーがリッスンする URI を取得します。"
  remarks: "この URI は、トランスポート アドレスを表す、<xref:System.ServiceModel.Channels.IChannelListener>メッセージをリッスンします</xref:System.ServiceModel.Channels.IChannelListener>。"
  syntax:
    content: public Uri Uri { get; }
    return:
      type: System.Uri
      description: "<xref:System.Uri>ファクトリによって生成されるリスナーがリッスンにします</xref:System.Uri>。"
  overload: System.ServiceModel.Channels.IChannelListener.Uri*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  id: WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  langs:
  - csharp
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "チャネルの到着を待機します。"
  syntax:
    content: public bool WaitForChannel (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>チャネル操作の待機がタイムアウトするまでに完了する必要がある期間を指定します</xref:System.TimeSpan>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>指定した時間間隔の前に、チャネルが到着したかどうか、 <code> timeout</code>それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  nameWithType: IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel(IAsyncResult)
  nameWithType: IChannelListener.EndWaitForChannel(IAsyncResult)
  fullName: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(IAsyncResult)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty``1
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty()
  nameWithType: IChannelListener.GetProperty()
  fullName: System.ServiceModel.Channels.IChannelListener.GetProperty()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.ServiceModel.Channels.IChannelListener.Uri
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
  fullName: System.ServiceModel.Channels.IChannelListener.Uri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel(System.TimeSpan)
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel(TimeSpan)
  nameWithType: IChannelListener.WaitForChannel(TimeSpan)
  fullName: System.ServiceModel.Channels.IChannelListener.WaitForChannel(TimeSpan)
- uid: System.ServiceModel.Channels.IChannelListener.BeginWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: BeginWaitForChannel
  nameWithType: IChannelListener.BeginWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.EndWaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: EndWaitForChannel
  nameWithType: IChannelListener.EndWaitForChannel
- uid: System.ServiceModel.Channels.IChannelListener.GetProperty<T>*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: GetProperty<T>
  nameWithType: IChannelListener.GetProperty<T>
- uid: System.ServiceModel.Channels.IChannelListener.Uri*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: Uri
  nameWithType: IChannelListener.Uri
- uid: System.ServiceModel.Channels.IChannelListener.WaitForChannel*
  parent: System.ServiceModel.Channels.IChannelListener
  isExternal: false
  name: WaitForChannel
  nameWithType: IChannelListener.WaitForChannel
