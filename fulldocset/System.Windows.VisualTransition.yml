### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualTransition
  id: VisualTransition
  children:
  - System.Windows.VisualTransition.#ctor
  - System.Windows.VisualTransition.From
  - System.Windows.VisualTransition.GeneratedDuration
  - System.Windows.VisualTransition.GeneratedEasingFunction
  - System.Windows.VisualTransition.Storyboard
  - System.Windows.VisualTransition.To
  langs:
  - csharp
  name: VisualTransition
  nameWithType: VisualTransition
  fullName: System.Windows.VisualTransition
  type: Class
  summary: "コントロールの&1; つの状態が遷移するときに発生する視覚的な動作を表します。"
  remarks: "含む VisualTransition オブジェクトを追加することで状態の間を遷移するときは、コントロールの視覚的な動作を指定できます。 次の&1; つ以上含む VisualTransition を作成するとき指定します - 時間を設定して発生する状態間の遷移の、<xref:System.Windows.VisualTransition.GeneratedDuration%2A>プロパティ。</xref:System.Windows.VisualTransition.GeneratedDuration%2A> 。      、コントロールの外観を設定して、移行時に発生する追加の変更、<xref:System.Windows.VisualTransition.Storyboard%2A>プロパティ</xref:System.Windows.VisualTransition.Storyboard%2A>。      の設定して、含む VisualTransition が適用されたとき<xref:System.Windows.VisualTransition.To%2A>と<xref:System.Windows.VisualTransition.From%2A>プロパティ</xref:System.Windows.VisualTransition.From%2A></xref:System.Windows.VisualTransition.To%2A>。"
  example:
  - "The following example creates a VisualTransition that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#8](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#8)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Storyboard")]

      public class VisualTransition : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.VisualTransition.#ctor
  id: '#ctor'
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: VisualTransition()
  nameWithType: VisualTransition.VisualTransition()
  fullName: System.Windows.VisualTransition.VisualTransition()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.VisualTransition&quot;> </xref>クラスです。"
  syntax:
    content: public VisualTransition ();
    parameters: []
  overload: System.Windows.VisualTransition.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualTransition.From
  id: From
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: From
  nameWithType: VisualTransition.From
  fullName: System.Windows.VisualTransition.From
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定の名前、 <xref href=&quot;System.Windows.VisualState&quot;> </xref>への移行。"
  remarks: "From プロパティはオプションです。 A<xref:System.Windows.VisualTransition>特定の状態のみに適用する制限できますまたは、適用できるコントロールの状態遷移にいつ。</xref:System.Windows.VisualTransition> 。 時間を制限する、<xref:System.Windows.VisualTransition>設定が適用される、<xref:System.Windows.VisualTransition.To%2A>プロパティとの間</xref:System.Windows.VisualTransition.To%2A></xref:System.Windows.VisualTransition>。 次の表では、最も制限の厳しいから最も制限の緩い制限のレベルについて説明します。      |制限の種類 |値 |値を |  |-------------------------|-------------------|-----------------|  |指定された状態別に指定された状態から |<xref:System.Windows.VisualState>の名前 |<xref:System.Windows.VisualState>の名前 |  |指定された状態に任意の状態から |設定されていない |<xref:System.Windows.VisualState>の名前 |  |いずれかの状態を指定した状態から |<xref:System.Windows.VisualState>の名前 |設定されていない |  |他の状態のいずれかの状態から |設定されていない |設定されていない |      複数<xref:System.Windows.VisualTransition>内のオブジェクト、<xref:System.Windows.VisualStateGroup>を参照する、同じ状態が、前の表に示す順序で使用されます</xref:System.Windows.VisualStateGroup></xref:System.Windows.VisualTransition></xref:System.Windows.VisualState></xref:System.Windows.VisualState></xref:System.Windows.VisualState></xref:System.Windows.VisualState>。       継承する新しいクラスを作成することでこの動作を変更することができます<xref:System.Windows.VisualStateManager>をオーバーライドして、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド</xref:System.Windows.VisualStateManager.GoToStateCore%2A></xref:System.Windows.VisualStateManager>。"
  example:
  - "The following example creates two <xref:System.Windows.VisualTransition> objects. When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both From and <xref:System.Windows.VisualTransition.To%2A> set is used. When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.  \n  \n [!code-xml[VSMButtonTemplate#7](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#7)]"
  syntax:
    content: public string From { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Windows.VisualState&quot;> </xref>への移行。"
  overload: System.Windows.VisualTransition.From*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualTransition.GeneratedDuration
  id: GeneratedDuration
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
  fullName: System.Windows.VisualTransition.GeneratedDuration
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または&1; つの状態からの移行にかかる時間を設定します。"
  remarks: "GeneratedDuration プロパティを設定して、移行にかかる時間を指定することができます。 GeneratedDuration プロパティを設定する場合は、発生する可能性への移行にかかる時間を指定します。"
  example:
  - "The following example specifies that the control takes one half second to go into the `MouseOver` state. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#MouseOverTransition](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#mouseovertransition)]"
  syntax:
    content: public System.Windows.Duration GeneratedDuration { get; set; }
    return:
      type: System.Windows.Duration
      description: "1 つの状態からの移行にかかる時間。"
  overload: System.Windows.VisualTransition.GeneratedDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualTransition.GeneratedEasingFunction
  id: GeneratedEasingFunction
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
  fullName: System.Windows.VisualTransition.GeneratedEasingFunction
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または状態を切り替えるのために使用されるカスタムの数式を設定します。"
  remarks: "遷移が発生する方法を指定する GeneratedEasingFunction プロパティを設定することができます。 たとえばを加速または減速遷移イージング関数を指定できます。 詳細については、次を参照してください。[イージング関数](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates a <xref:System.Windows.VisualTransition> that causes a <xref:System.Windows.Shapes.Rectangle> to move vertically when the user presses the mouse button over the <xref:System.Windows.Controls.Canvas>. The example sets the GeneratedEasingFunction property to a <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to appear to bounce when it reaches its destination. The <xref:System.Windows.VisualTransition> that is used when the user releases the button has another <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to bounce before it returns to its original position.  \n  \n [!code-xml[VSMCustomControl#VSMEasingFunction](~/add/codesnippet/xaml/vsmcustomcontrol/window1.xaml#vsmeasingfunction)]  \n  \n The following example shows the event handler for the <xref:System.Windows.UIElement3D.MouseDown> and <xref:System.Windows.UIElement.MouseUp> events. The example calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change the <xref:System.Windows.VisualState> of the canvas.  \n  \n [!code-cs[VSMCustomControl#VSMEasingFunctionLogic](~/add/codesnippet/csharp/vsmcustomcontrol/window1.xaml.cs#vsmeasingfunctionlogic)]\n [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/window1.xaml.vb#vsmeasingfunctionlogic)]"
  syntax:
    content: public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }
    return:
      type: System.Windows.Media.Animation.IEasingFunction
      description: "カスタムの数式状態間を遷移するために使用します。"
  overload: System.Windows.VisualTransition.GeneratedEasingFunction*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualTransition.Storyboard
  id: Storyboard
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
  fullName: System.Windows.VisualTransition.Storyboard
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Animation.Storyboard&quot;> </xref>遷移が発生したときに発生します。"
  remarks: "ときに、<xref:System.Windows.VisualTransition>が含まれています、 <xref:System.Windows.Media.Animation.Storyboard>、<xref:System.Windows.Media.Animation.Storyboard>を実行、<xref:System.Windows.VisualTransition>が適用されます</xref:System.Windows.VisualTransition></xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.VisualTransition>。 罫線を追加する場合など、<xref:System.Windows.Controls.Button>色を変更することからマウスを動かしたときに、作成することができます、<xref:System.Windows.VisualTransition>を持つ、<xref:System.Windows.Media.Animation.Storyboard>ボタンの背景を変更する</xref:System.Windows.Media.Animation.Storyboard></xref:System.Windows.VisualTransition></xref:System.Windows.Controls.Button>。"
  example:
  - "The following example creates a <xref:System.Windows.VisualTransition> that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[VSMButtonTemplate#8](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#8)]"
  syntax:
    content: public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }
    return:
      type: System.Windows.Media.Animation.Storyboard
      description: "<xref href=&quot;System.Windows.Media.Animation.Storyboard&quot;> </xref>遷移が発生したときに発生します。"
  overload: System.Windows.VisualTransition.Storyboard*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.VisualTransition.To
  id: To
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: To
  nameWithType: VisualTransition.To
  fullName: System.Windows.VisualTransition.To
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定の名前、 <xref href=&quot;System.Windows.VisualState&quot;> </xref>に移行します。"
  remarks: "To プロパティはオプションです。 A<xref:System.Windows.VisualTransition>特定の状態のみに適用する制限できますまたは、適用できるコントロールの状態遷移にいつ。</xref:System.Windows.VisualTransition> 。 時間を制限する、 <xref:System.Windows.VisualTransition>To を設定して適用し、<xref:System.Windows.VisualTransition.From%2A>プロパティ</xref:System.Windows.VisualTransition.From%2A></xref:System.Windows.VisualTransition>。 次の表では、最も制限の厳しいから最も制限の緩い制限のレベルについて説明します。      |制限の種類 |値 |値を |  |-------------------------|-------------------|-----------------|  |指定された状態別に指定された状態から |<xref:System.Windows.VisualState>の名前 |<xref:System.Windows.VisualState>の名前 |  |指定された状態に任意の状態から |設定されていない |<xref:System.Windows.VisualState>の名前 |  |いずれかの状態を指定した状態から |<xref:System.Windows.VisualState>の名前 |設定されていない |  |他の状態のいずれかの状態から |設定されていない |設定されていない |      複数<xref:System.Windows.VisualTransition>内のオブジェクト、<xref:System.Windows.VisualStateGroup>を参照する、同じ状態が、前の表に示す順序で使用されます</xref:System.Windows.VisualStateGroup></xref:System.Windows.VisualTransition></xref:System.Windows.VisualState></xref:System.Windows.VisualState></xref:System.Windows.VisualState></xref:System.Windows.VisualState>。       継承する新しいクラスを作成することでこの動作を変更することができます<xref:System.Windows.VisualStateManager>をオーバーライドして、<xref:System.Windows.VisualStateManager.GoToStateCore%2A>メソッド</xref:System.Windows.VisualStateManager.GoToStateCore%2A></xref:System.Windows.VisualStateManager>。"
  example:
  - "The following example creates two <xref:System.Windows.VisualTransition> objects. When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both <xref:System.Windows.VisualTransition.From%2A> and To set is used. When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.  \n  \n [!code-xml[VSMButtonTemplate#7](~/add/codesnippet/xaml/vsmbuttontemplate/skinnedbutton.xaml#7)]"
  syntax:
    content: public string To { get; set; }
    return:
      type: System.String
      description: "名前、 <xref href=&quot;System.Windows.VisualState&quot;> </xref>に移行します。"
  overload: System.Windows.VisualTransition.To*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.DependencyObject
  isExternal: false
  name: System.Windows.DependencyObject
- uid: System.Windows.VisualTransition.#ctor
  parent: System.Windows.VisualTransition
  isExternal: false
  name: VisualTransition()
  nameWithType: VisualTransition.VisualTransition()
  fullName: System.Windows.VisualTransition.VisualTransition()
- uid: System.Windows.VisualTransition.From
  parent: System.Windows.VisualTransition
  isExternal: false
  name: From
  nameWithType: VisualTransition.From
  fullName: System.Windows.VisualTransition.From
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualTransition.GeneratedDuration
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
  fullName: System.Windows.VisualTransition.GeneratedDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.VisualTransition.GeneratedEasingFunction
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
  fullName: System.Windows.VisualTransition.GeneratedEasingFunction
- uid: System.Windows.Media.Animation.IEasingFunction
  parent: System.Windows.Media.Animation
  isExternal: false
  name: IEasingFunction
  nameWithType: IEasingFunction
  fullName: System.Windows.Media.Animation.IEasingFunction
- uid: System.Windows.VisualTransition.Storyboard
  parent: System.Windows.VisualTransition
  isExternal: false
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
  fullName: System.Windows.VisualTransition.Storyboard
- uid: System.Windows.Media.Animation.Storyboard
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Storyboard
  nameWithType: Storyboard
  fullName: System.Windows.Media.Animation.Storyboard
- uid: System.Windows.VisualTransition.To
  parent: System.Windows.VisualTransition
  isExternal: false
  name: To
  nameWithType: VisualTransition.To
  fullName: System.Windows.VisualTransition.To
- uid: System.Windows.VisualTransition.#ctor*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: VisualTransition
  nameWithType: VisualTransition.VisualTransition
- uid: System.Windows.VisualTransition.From*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: From
  nameWithType: VisualTransition.From
- uid: System.Windows.VisualTransition.GeneratedDuration*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
- uid: System.Windows.VisualTransition.GeneratedEasingFunction*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
- uid: System.Windows.VisualTransition.Storyboard*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
- uid: System.Windows.VisualTransition.To*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: To
  nameWithType: VisualTransition.To
