### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Devices.Mouse
  id: Mouse
  children:
  - Microsoft.VisualBasic.Devices.Mouse.#ctor
  - Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  - Microsoft.VisualBasic.Devices.Mouse.WheelExists
  - Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  langs:
  - csharp
  name: Mouse
  nameWithType: Mouse
  fullName: Microsoft.VisualBasic.Devices.Mouse
  type: Class
  summary: "形式と、ローカル コンピューターにインストールされているマウスの構成に関する情報を取得するためには、プロパティを提供します。"
  remarks: "`My.Computer.Mouse`オブジェクトは、コンピューターのマウスに関する情報を検索する方法を提供: かどうか、マウス ボタンが入れ替わること、およびマウスのホイールに関する詳細。      ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` and `My.Computer.Mouse.WheelScrollLines` properties to determine if the mouse has a scroll wheel and how much to scroll when it rotates.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public class Mouse
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;Microsoft.VisualBasic.Devices.Mouse&quot;> </xref>クラスです。"
  remarks: 'The `My.Computer.Mouse` object provides a way to find information about the computer''s mouse: whether the mouse buttons are swapped and details about the mouse wheel.'
  syntax:
    content: public Mouse ();
    parameters: []
  overload: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  id: ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得、 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>左右のマウス ボタンの機能が入れ替わっているかどうかを示すです。"
  remarks: "`My.Computer.Mouse.ButtonsSwapped`プロパティ:-と同様の機能を提供、<xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>プロパティ</xref:System.Windows.Forms.SystemInformation.MouseButtonsSwapped%2A>。      コードを実行しているコンピューターに関する情報を提供します。      ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Computer.Mouse.ButtonsSwapped` property to determine if functionality of the left and right mouse buttons has been swapped.  \n  \n [!code-vb[VbVbalrMyComputer#35](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#35)]"
  syntax:
    content: public bool ButtonsSwapped { get; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>値を持つ<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>スワップ、それ以外の左右のマウス ボタンの機能が表示された場合に<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コンピューターにインストールされているマウスがありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  id: WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "取得、 <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;> </xref>を示すかどうかは、マウスにスクロール ホイールが付いています。"
  remarks: "`My.Computer.Mouse.WheelExists`プロパティと同様の機能を提供する、<xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>プロパティ</xref:System.Windows.Forms.SystemInformation.MouseWheelPresent%2A>。       値を確認する必要があります、`My.Computer.Mouse.WheelExists`プロパティにアクセスする前に、<xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>プロパティで、マウスにスクロール ホイールがない場合は、例外をスローします</xref:Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines%2A>。       `My.Computer.Mouse.WheelExists`プロパティは、コードを実行しているコンピューターに関する情報を提供します。      ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example uses the `My.Computer.Mouse.WheelExists` property to determine if the mouse has a scroll wheel and how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public bool WheelExists { get; }
    return:
      type: System.Boolean
      description: "ブール値を持つ<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>マウスにスクロール ホイールです。 それ以外の場合<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>です。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "コンピューターにインストールされているマウスがありません。"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  id: WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  langs:
  - csharp
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Devices
  summary: "1 つの段階を回転させた場合は、マウス ホイールをスクロールする量を示す数を取得します。"
  remarks: "このプロパティを使用すると、スクロール バーを持つ複数行のコントロールの上または下にスクロールするのに行数を判断します。       `My.Computer.Mouse.WheelScrollLines`プロパティと同様の機能を提供する、<xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>プロパティ</xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A>。       このプロパティは、マウスにスクロール ホイールがない場合に例外をスローするためを確認してください、マウスをチェックしてスクロール ホイールが付いて、`My.Computer.Mouse.WheelExists`プロパティです。       このプロパティは、コードを実行しているコンピューターに関する情報を提供します。      ## プロジェクトの種類によって可用性 | | |  |-|-|  |プロジェクトの種類 |使用可能な |  |Windows アプリケーション |**Yes**|  |クラス ライブラリ |**Yes**|  |コンソール アプリケーション |**Yes**|  |Windows コントロール ライブラリ |**Yes**|  |Web コントロール ライブラリ |いいえ |  |Windows サービス |**Yes**|  |Web サイト |いいえ |"
  example:
  - "This example determines if the mouse has a scroll wheel and uses the `My.Computer.Mouse.WheelExists` property to determine how much to scroll when the mouse wheel is rotated.  \n  \n [!code-vb[VbVbalrMyComputer#26](~/add/codesnippet/visualbasic/VbVbalrMyComputer/Class2.vb#26)]"
  syntax:
    content: public int WheelScrollLines { get; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Integer&quot; name=&quot;Integer&quot; href=&quot;&quot;> </xref>&1; ノッチを回転したときは、マウス ホイールをスクロールする量を示すです。 正の値は、負の値を&1; 画面ずつスクロールことを示し、その数の行をスクロールを示します。"
  overload: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マウスにスクロール ホイールがありません。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse()
  nameWithType: Mouse.Mouse()
  fullName: Microsoft.VisualBasic.Devices.Mouse.Mouse()
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
  fullName: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
  fullName: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.VisualBasic.Devices.Mouse.#ctor*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: Mouse
  nameWithType: Mouse.Mouse
- uid: Microsoft.VisualBasic.Devices.Mouse.ButtonsSwapped*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: ButtonsSwapped
  nameWithType: Mouse.ButtonsSwapped
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelExists*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelExists
  nameWithType: Mouse.WheelExists
- uid: Microsoft.VisualBasic.Devices.Mouse.WheelScrollLines*
  parent: Microsoft.VisualBasic.Devices.Mouse
  isExternal: false
  name: WheelScrollLines
  nameWithType: Mouse.WheelScrollLines
