### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  id: IDynamicPropertyTypeProvider
  children:
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  - System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  langs:
  - csharp
  name: IDynamicPropertyTypeProvider
  nameWithType: IDynamicPropertyTypeProvider
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  type: Interface
  summary: "バインド インフラストラクチャにプロパティの型を提供します。 変数の型、型は他のアクティビティ設定に応じて変化する場所のプロパティが含まれているアクティビティによって実装されます。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]このインターフェイスには、親アクティビティに&2; つのプロパティを関連付けたり、バインドの検証に使用される型、バインド インフラストラクチャを知らせることができます。 たとえば、次の&2; つのプロパティを持つアクティビティがある`TypeProperty`と`ValueProperty`ここで、`TypeProperty`の値の有効な型を指定`ValueProperty`です。 このような場合は、親アクティビティは IDynamicPropertyTypeProvider インターフェイスを実装します。"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public interface IDynamicPropertyTypeProvider
  implements: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  id: GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "指定したプロパティのアクセスの種類を返します。"
  remarks: "コンパイル時にプロパティが相互に正しくバインディングされている場合、検証するために使用します。 このインターフェイスがない場合は、この情報はプロパティの getter/setter から直接推測されます。"
  syntax:
    content: public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "実装するオブジェクト<xref:System.IServiceProvider>が必要な場合は、デザイン時のサービスへのアクセスを提供する</xref:System.IServiceProvider>。"
    - id: propertyName
      type: System.String
      description: "プロパティの名前です。"
    return:
      type: System.Workflow.ComponentModel.Compiler.AccessTypes
      description: "<xref href=&quot;System.Workflow.ComponentModel.Compiler.AccessTypes&quot;> </xref>プロパティのアクセス レベルを示す列挙値。"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  id: GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  langs:
  - csharp
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "返します、<xref:System.Type>指定したプロパティの</xref:System.Type>。"
  remarks: "コンパイル時にプロパティが相互に正しくバインディングされている場合、検証するために使用します。"
  syntax:
    content: public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "実装するオブジェクト<xref:System.IServiceProvider>が必要な場合は、デザイン時のサービスへのアクセスを提供する</xref:System.IServiceProvider>。"
    - id: propertyName
      type: System.String
      description: "プロパティの名前です。"
    return:
      type: System.Type
      description: "<xref:System.Type>として名前が渡されるプロパティの<code> propertyName </code>パラメーター</xref:System.Type> 。"
  overload: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(IServiceProvider,String)
- uid: System.Workflow.ComponentModel.Compiler.AccessTypes
  parent: System.Workflow.ComponentModel.Compiler
  isExternal: false
  name: AccessTypes
  nameWithType: AccessTypes
  fullName: System.Workflow.ComponentModel.Compiler.AccessTypes
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType(IServiceProvider,String)
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
  fullName: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(IServiceProvider,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetAccessType
  nameWithType: IDynamicPropertyTypeProvider.GetAccessType
- uid: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType*
  parent: System.Workflow.ComponentModel.IDynamicPropertyTypeProvider
  isExternal: false
  name: GetPropertyType
  nameWithType: IDynamicPropertyTypeProvider.GetPropertyType
