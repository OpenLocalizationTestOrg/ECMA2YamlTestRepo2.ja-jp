### YamlMime:ManagedReference
items:
- uid: System.Drawing.SizeFConverter
  id: SizeFConverter
  children:
  - System.Drawing.SizeFConverter.#ctor
  - System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: SizeFConverter
  nameWithType: SizeFConverter
  fullName: System.Drawing.SizeFConverter
  type: Class
  summary: "変換<xref href=&quot;System.Drawing.SizeF&quot;> </xref>&1; つの型から別のオブジェクト。"
  remarks: "ほとんどの場合、SizeFConverter 型コンバーターを使用して変換<xref:System.Drawing.Font>インスタンスとそれに対応するから文字列形式</xref:System.Drawing.Font>。 <xref:System.Drawing.FontConverter> <xref:System.ComponentModel.TypeDescriptor>。</xref:System.ComponentModel.TypeDescriptor>を通じてクラス</xref:System.Drawing.FontConverter>にアクセスします。"
  syntax:
    content: 'public class SizeFConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.#ctor
  id: '#ctor'
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: SizeFConverter()
  nameWithType: SizeFConverter.SizeFConverter()
  fullName: System.Drawing.SizeFConverter.SizeFConverter()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.SizeFConverter&quot;> </xref>クラスです。"
  syntax:
    content: public SizeFConverter ();
    parameters: []
  overload: System.Drawing.SizeFConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定された型コンバーターが変換できるかどうかを示す値を返します、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>入力と、指定したコンテキストを使用します。"
  remarks: "指定した型の場合、 <xref:System.String>、このメソッドは常に返します`true`</xref:System.String>。"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>を通じて追加コンテキストを指定することができます。"
    - id: sourceType
      type: System.Type
      description: "A<xref:System.Type>を表すから変換する型</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>変換を示すために実行できます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeFConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示す値を返すかどうか、 <xref href=&quot;System.Drawing.SizeFConverter&quot;> </xref>変換できます、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>指定された型にします。"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>を通じて追加コンテキストを指定することができます。"
    - id: destinationType
      type: System.Type
      description: "A<xref:System.Type>から変換する型を表す</xref:System.Type>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>それ以外の場合、このコンバーターが変換を実行できる場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeFConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したオブジェクトを指定したコンテキストとカルチャ情報を使用して、このコンバーターの型に変換します。"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>、現在のカルチャとして使用する</xref:System.Globalization.CultureInfo>。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    return:
      type: System.Object
      description: "<xref:System.Object>変換後の値を表す</xref:System.Object>。"
  overload: System.Drawing.SizeFConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した値オブジェクトを指定したコンテキストとカルチャ情報を使用して、指定した型に変換します。"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Null が渡された場合は、現在のカルチャが使用されます。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>に変換します</xref:System.Object>。"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>値パラメーターの変換先</xref:System.Type>。"
    return:
      type: System.Object
      description: "<xref:System.Object>変換後の値を表す</xref:System.Object>。"
  overload: System.Drawing.SizeFConverter.ConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  id: CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "インスタンスを作成、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>指定したコンテキストを使用して指定したプロパティの値。"
  syntax:
    content: public override object CreateInstance (System.ComponentModel.ITypeDescriptorContext context, System.Collections.IDictionary propertyValues);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>を通じて追加コンテキストを指定することができます。"
    - id: propertyValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>プロパティの名前と値を格納している</xref:System.Collections.IDictionary>。"
    return:
      type: System.Object
      description: "<xref:System.Object>を表す新しい<xref href=&quot;System.Drawing.SizeF&quot;> </xref>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、オブジェクトを作成できません</xref:System.Object>。"
  overload: System.Drawing.SizeFConverter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このオブジェクトの値を変更するへの呼び出しが必要かどうかを示す値を返します、<xref:System.Drawing.SizeFConverter.CreateInstance*>メソッドを新しい値を作成します</xref:System.Drawing.SizeFConverter.CreateInstance*>。"
  syntax:
    content: public override bool GetCreateInstanceSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>形式コンテキストを提供します。 可能性があります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeFConverter.GetCreateInstanceSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "プロパティのセットを取得、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>指定したコンテキストと属性を使用して入力します。"
  remarks: "このメソッドは常のプロパティを返します、<xref:System.Drawing.SizeF>型に関係なく、`value`パラメーター</xref:System.Drawing.SizeF> 。"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>を通じて追加コンテキストを指定することができます。"
    - id: value
      type: System.Object
      description: "<xref:System.Object>プロパティのデータ型を返す</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "配列<xref:System.Attribute>プロパティを記述するオブジェクト</xref:System.Attribute>。"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "A <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref>プロパティを含むです。"
  overload: System.Drawing.SizeFConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeFConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "返します。 かどうか、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>型プロパティをサポートします。"
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>を通じて追加コンテキストを指定することができます。"
    return:
      type: System.Boolean
      description: "常に返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeFConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.Drawing.SizeFConverter.#ctor
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: SizeFConverter()
  nameWithType: SizeFConverter.SizeFConverter()
  fullName: System.Drawing.SizeFConverter.SizeFConverter()
- uid: System.Drawing.SizeFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeFConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.SizeFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Drawing.SizeFConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Drawing.SizeFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Drawing.SizeFConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Drawing.SizeFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Drawing.SizeFConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Drawing.SizeFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CreateInstance(ITypeDescriptorContext,IDictionary)
  nameWithType: SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
  fullName: System.Drawing.SizeFConverter.CreateInstance(ITypeDescriptorContext,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeFConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
- uid: System.Drawing.SizeFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.Drawing.SizeFConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.SizeFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.Drawing.SizeFConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Drawing.SizeFConverter.#ctor*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: SizeFConverter
  nameWithType: SizeFConverter.SizeFConverter
- uid: System.Drawing.SizeFConverter.CanConvertFrom*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: SizeFConverter.CanConvertFrom
- uid: System.Drawing.SizeFConverter.CanConvertTo*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: SizeFConverter.CanConvertTo
- uid: System.Drawing.SizeFConverter.ConvertFrom*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: SizeFConverter.ConvertFrom
- uid: System.Drawing.SizeFConverter.ConvertTo*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: ConvertTo
  nameWithType: SizeFConverter.ConvertTo
- uid: System.Drawing.SizeFConverter.CreateInstance*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: CreateInstance
  nameWithType: SizeFConverter.CreateInstance
- uid: System.Drawing.SizeFConverter.GetCreateInstanceSupported*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetCreateInstanceSupported
  nameWithType: SizeFConverter.GetCreateInstanceSupported
- uid: System.Drawing.SizeFConverter.GetProperties*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetProperties
  nameWithType: SizeFConverter.GetProperties
- uid: System.Drawing.SizeFConverter.GetPropertiesSupported*
  parent: System.Drawing.SizeFConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: SizeFConverter.GetPropertiesSupported
