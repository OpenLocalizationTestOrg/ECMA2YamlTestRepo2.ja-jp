### YamlMime:ManagedReference
items:
- uid: System.Collections.DictionaryBase
  id: DictionaryBase
  children:
  - System.Collections.DictionaryBase.#ctor
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: DictionaryBase
  nameWithType: DictionaryBase
  fullName: System.Collections.DictionaryBase
  type: Class
  summary: "提供、 <xref uid=&quot;langword_csharp_abstract&quot; name=&quot;abstract&quot; href=&quot;&quot;> </xref>厳密に型指定されたキー/値ペアのコレクションの基本クラスです。"
  remarks: "C# 言語の (Visual Basic では各) foreach ステートメントは、コレクション内の要素の型のオブジェクトを返します。 DictionaryBase の各要素が、キー/値ペアであるため、要素の型は、キーの型または値の型。 代わりに、要素の型は、 <xref:System.Collections.DictionaryEntry>。</xref:System.Collections.DictionaryEntry>       `foreach`ステートメントがしか書き込まないことから、コレクションへの読み取りを許可する列挙子のラッパー。      > [!NOTE] > キーを継承する、その動作を変更、絶対の一意性を保証できませんを使用する比較であるため、<xref:System.Type.Equals%2A>メソッド</xref:System.Type.Equals%2A>。"
  example:
  - "The following code example implements the DictionaryBase class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/t-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/t-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/t-system.collections.dic_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DictionaryBase : System.Collections.IDictionary
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.#ctor
  id: '#ctor'
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、o (1) 操作です。"
  syntax:
    content: protected DictionaryBase ();
    parameters: []
  overload: System.Collections.DictionaryBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Clear
  id: Clear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "内容をクリア、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "<xref:System.Collections.DictionaryBase.Count%2A>0 に設定し、コレクションの要素から他のオブジェクトへの参照も解放します。</xref:System.Collections.DictionaryBase.Count%2A>       このメソッドは、O (`n`) 操作では、ここで`n` <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>は、"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.DictionaryBase.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "コピー、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>要素を&1; 次元<xref:System.Array>指定したインデックス位置</xref:System.Array>。"
  remarks: "<xref:System.Array>列挙<xref:System.Collections.DictionaryBase>。</xref:System.Collections.DictionaryBase>同じ順序で</xref:System.Array>要素のコピーします。       このメソッドは、O (`n`) 操作では、ここで`n` <xref:System.Collections.DictionaryBase.Count%2A>.</xref:System.Collections.DictionaryBase.Count%2A>は、"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 次元<xref:System.Array>のコピー先は、<xref:System.Collections.DictionaryEntry>からコピーされるオブジェクト、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス</xref:System.Collections.DictionaryEntry></xref:System.Array>。 <xref:System.Array>0 から始まるインデックス番号が必要です</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Collections.DictionaryBase.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - ソース内の要素の数<xref href=&quot;System.Collections.DictionaryBase&quot;></xref>から使用可能な領域より大きくなって<code>index</code>変換先の末尾に<code>array</code>です。"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "ソースの種類<xref href=&quot;System.Collections.DictionaryBase&quot;></xref>変換先の型に自動的にキャストすることはできません<code> array</code>です。"
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Count
  id: Count
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "含まれる要素の数を取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このプロパティの値を取得するは、o (1) 操作です。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "含まれる要素の数、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  overload: System.Collections.DictionaryBase.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.Dictionary
  id: Dictionary
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "含まれる要素の一覧を取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "によって返されるインスタンスではなくが、ディクショナリ プロパティによって返されるインスタンス上でのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A>。       このプロパティの値を取得するは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/p-system.collections.dic_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/p-system.collections.dic_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/p-system.collections.dic_1.vb)]"
  syntax:
    content: protected System.Collections.IDictionary Dictionary { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>を表す、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス自体</xref:System.Collections.IDictionary>。"
  overload: System.Collections.DictionaryBase.Dictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "返します、<xref:System.Collections.IDictionaryEnumerator>を反復処理する、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス</xref:System.Collections.IDictionaryEnumerator>。"
  remarks: "`foreach` C# 言語のステートメント (`for each` Visual Basic で)、列挙子の複雑さが隠されています。  したがってを使用して`foreach`列挙子を直接操作せずにお勧めします。       列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。       最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。 <xref:System.Collections.IEnumerator.Reset%2A>列挙子をこの位置に戻さ点もあります。</xref:System.Collections.IEnumerator.Reset%2A>  この位置にある<xref:System.Collections.IEnumerator.Current%2A>が定義されていません</xref:System.Collections.IEnumerator.Current%2A>。 したがって、 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.Current%2A>の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに</xref:System.Collections.IEnumerator.MoveNext%2A>呼び出す必要があります。       <xref:System.Collections.IEnumerator.Current%2A>いずれかのまで同じオブジェクトを返します<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>と呼びます</xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>設定<xref:System.Collections.IEnumerator.Current%2A>次の要素にします</xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>       場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`</xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`</xref:System.Collections.IEnumerator.MoveNext%2A>。 最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 <xref:System.Collections.IEnumerator.Current%2A>再度、コレクションの最初の要素に<xref:System.Collections.IEnumerator.Reset%2A><xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>続けて</xref:System.Collections.IEnumerator.Reset%2A>を呼び出すことができます</xref:System.Collections.IEnumerator.Current%2A>を設定するには       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能とその動作は未定義です。       列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。  列挙中にスレッドの安全性を保証するためには、列挙中にコレクションをロックできます。  読み取りと書き込みの複数のスレッドがアクセスするコレクションを許可するのには、独自に同期を実装する必要があります。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_3_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_3_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_3_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "<xref:System.Collections.IDictionaryEnumerator>の<xref href=&quot;System.Collections.DictionaryBase&quot;></xref>インスタンス</xref:System.Collections.IDictionaryEnumerator>。"
  overload: System.Collections.DictionaryBase.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.InnerHashtable
  id: InnerHashtable
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "含まれる要素の一覧を取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティ、InnerHashtable プロパティによって返されるインスタンスではなく</xref:System.Collections.DictionaryBase.Dictionary%2A>。       このプロパティの値を取得するは、o (1) 操作です。"
  syntax:
    content: protected System.Collections.Hashtable InnerHashtable { get; }
    return:
      type: System.Collections.Hashtable
      description: "A <xref href=&quot;System.Collections.Hashtable&quot;> </xref>を表す、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス自体です。"
  overload: System.Collections.DictionaryBase.InnerHashtable*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClear
  id: OnClear
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "内容を消去する前に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、コレクションが消去される前に、何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual void OnClear ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnClearComplete
  id: OnClearComplete
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "内容を消去した後に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、コレクションをクリアした後にアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual void OnClearComplete ();
    parameters: []
  overload: System.Collections.DictionaryBase.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  id: OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "指定したキーと値を持つ要素を取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装を返します`currentValue`です。 指定した要素を取得するときに、追加の操作を実行する派生クラスでオーバーライドされるようにしています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual object OnGet (object key, object currentValue);
    parameters:
    - id: key
      type: System.Object
      description: "取得する要素のキー。"
    - id: currentValue
      type: System.Object
      description: "関連付けられている要素の現在の値`key`です。"
    return:
      type: System.Object
      description: "<xref:System.Object>指定したキーと値を持つ要素を含むします</xref:System.Object>。"
  overload: System.Collections.DictionaryBase.OnGet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  id: OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "新しい要素を挿入する前に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素が挿入される前に、いくつかの操作を実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_0_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_0_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_0_1.vb)]"
  syntax:
    content: protected virtual void OnInsert (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "挿入する要素のキー。"
    - id: value
      type: System.Object
      description: "挿入する要素の値。"
  overload: System.Collections.DictionaryBase.OnInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  id: OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "新しい要素を挿入した後に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素を挿入した後に何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual void OnInsertComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "挿入する要素のキー。"
    - id: value
      type: System.Object
      description: "挿入する要素の値。"
  overload: System.Collections.DictionaryBase.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  id: OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "要素を削除する前に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素が削除される前に、いくつかの操作を実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_1_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_1_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_1_1.vb)]"
  syntax:
    content: protected virtual void OnRemove (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "削除する要素のキー。"
    - id: value
      type: System.Object
      description: "削除する要素の値。"
  overload: System.Collections.DictionaryBase.OnRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  id: OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "要素を削除した後、追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素が削除された後に何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual void OnRemoveComplete (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "削除する要素のキー。"
    - id: value
      type: System.Object
      description: "削除する要素の値。"
  overload: System.Collections.DictionaryBase.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  id: OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "値を設定する前に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素の設定前に、何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/576c3070-5898-49fc-92c2-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/576c3070-5898-49fc-92c2-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/576c3070-5898-49fc-92c2-_1.vb)]"
  syntax:
    content: protected virtual void OnSet (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "検索する要素のキー。"
    - id: oldValue
      type: System.Object
      description: "関連付けられている要素の古い値`key`です。"
    - id: newValue
      type: System.Object
      description: "関連付けられている要素の新しい値`key`です。"
  overload: System.Collections.DictionaryBase.OnSet*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  id: OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "値を設定後に追加のカスタム処理を実行、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>インスタンス。"
  remarks: "このメソッドの既定の実装は、指定した要素を設定した後に何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  syntax:
    content: protected virtual void OnSetComplete (object key, object oldValue, object newValue);
    parameters:
    - id: key
      type: System.Object
      description: "検索する要素のキー。"
    - id: oldValue
      type: System.Object
      description: "関連付けられている要素の古い値`key`です。"
    - id: newValue
      type: System.Object
      description: "関連付けられている要素の新しい値`key`です。"
  overload: System.Collections.DictionaryBase.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  id: OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "指定したキーと値を持つ要素を検証するときは、追加のカスタム処理を実行します。"
  remarks: "このメソッドの既定の実装は、指定した要素が検証されると、何らかのアクションを実行する派生クラスでオーバーライドされることを目的としています。       によって返されるインスタンスでのみでのメソッドが呼び出される、<xref:System.Collections.DictionaryBase.Dictionary%2A>プロパティによって返されるインスタンスではなく、<xref:System.Collections.DictionaryBase.InnerHashtable%2A>プロパティ</xref:System.Collections.DictionaryBase.InnerHashtable%2A></xref:System.Collections.DictionaryBase.Dictionary%2A>。       このメソッドの既定の実装は、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/m-system.collections.dic_2_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/m-system.collections.dic_2_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/m-system.collections.dic_2_1.vb)]"
  syntax:
    content: protected virtual void OnValidate (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "検証する要素のキー。"
    - id: value
      type: System.Object
      description: "検証する要素の値。"
  overload: System.Collections.DictionaryBase.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "アクセスをするかどうかを示す値を取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトが同期されている (スレッド セーフである)。"
  remarks: "A<xref:System.Collections.DictionaryBase>オブジェクトが同期されていません</xref:System.Collections.DictionaryBase>。 派生クラスでの同期されたバージョンを提供できる、<xref:System.Collections.DictionaryBase>クラスを使用して、<xref:System.Collections.ICollection.SyncRoot%2A>プロパティ</xref:System.Collections.ICollection.SyncRoot%2A></xref:System.Collections.DictionaryBase>。       コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。"
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/f850b608-c07e-40f9-af58-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/f850b608-c07e-40f9-af58-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/f850b608-c07e-40f9-af58-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合へのアクセス、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトが同期されている (スレッド セーフである)、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト。"
  remarks: "派生クラスは、独自の同期されたバージョンを指定できます、<xref:System.Collections.DictionaryBase>クラスを使用して、<xref:System.Collections.ICollection.SyncRoot%2A>プロパティ</xref:System.Collections.ICollection.SyncRoot%2A></xref:System.Collections.DictionaryBase>。 同期されたコードで操作を実行する必要があります、<xref:System.Collections.ICollection.SyncRoot%2A>のプロパティ、<xref:System.Collections.DictionaryBase>オブジェクト上で直接、<xref:System.Collections.DictionaryBase>オブジェクト</xref:System.Collections.DictionaryBase></xref:System.Collections.DictionaryBase></xref:System.Collections.ICollection.SyncRoot%2A>。 これにより、他のオブジェクトから派生したコレクションを適切に操作します。 具体的には、同時に変更する可能性がある別スレッドとの適切な同期を維持、<xref:System.Collections.DictionaryBase>オブジェクト</xref:System.Collections.DictionaryBase>。       コレクションの列挙は本質的にスレッド セーフなプロシージャ コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。"
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.  \n  \n [!code-cs[System.Collections.DictionaryBase#3](~/add/codesnippet/csharp/86708232-6546-45cc-abc0-_1.cs)]\n [!code-cpp[System.Collections.DictionaryBase#3](~/add/codesnippet/cpp/86708232-6546-45cc-abc0-_1.cpp)]\n [!code-vb[System.Collections.DictionaryBase#3](~/add/codesnippet/visualbasic/86708232-6546-45cc-abc0-_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用できるオブジェクト、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト。"
  overload: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "指定したキーと値を持つ要素を追加、 <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>です。"
  remarks: "オブジェクトの状態とそのハッシュ コード値間の相関関係を持たない必要があります通常されませんするキーとして使用します。 たとえば、<xref:System.String>オブジェクトがより<xref:System.Text.StringBuilder>キーとして使用するためのオブジェクト</xref:System.Text.StringBuilder></xref:System.String>。       使用することも、<xref:System.Collections.IDictionary.Item%2A>にキーの値を設定して新しい要素を追加するプロパティが存在しません、<xref:System.Collections.DictionaryBase>たとえば、 `myCollection[&quot;myNonexistentKey&quot;] = myValue`。</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> 。 ただしで指定したキーが既に存在する場合、 <xref:System.Collections.DictionaryBase>、設定、<xref:System.Collections.IDictionary.Item%2A>プロパティに古い値が上書きされます</xref:System.Collections.IDictionary.Item%2A></xref:System.Collections.DictionaryBase>。 これに対し、<xref:System.Collections.IDictionary.Add%2A>メソッドでは、既存の要素は変更しません</xref:System.Collections.IDictionary.Add%2A>。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c65f1d46-c6ba-40bd-bf67-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c65f1d46-c6ba-40bd-bf67-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c65f1d46-c6ba-40bd-bf67-_1.vb)]"
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "追加する要素のキー。"
    - id: value
      type: System.Object
      description: "追加する要素の値。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "同じキーを持つ要素は既に、 <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>です。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>は読み取り専用です。       - または -、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>のサイズが固定されています。"
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "指定するかどうか、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>特定のキーが含まれています。"
  remarks: "このメソッドは、o (1) 操作です。       以降、.NET Framework 2.0 では、このメソッドを使用して、コレクションのオブジェクトの<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>メソッド`key`を決定するかどうか`item`が存在します</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。 .NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、`key`コレクション内のオブジェクトのパラメーターです</xref:System.IComparable.CompareTo%2A></xref:System.Object.Equals%2A>。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/c59cd535-1a58-4e00-98b8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/c59cd535-1a58-4e00-98b8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/c59cd535-1a58-4e00-98b8-_1.vb)]"
  syntax:
    content: bool IDictionary.Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "内で検索するキー、 <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref> 、指定した要素が含まれるキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトのサイズが固定されています。"
  remarks: "固定サイズ コレクションできない追加または削除の要素のコレクションが作成された後で、既存の要素の変更はできます。       固定サイズ コレクションが追加および削除する要素を防止するラッパーで単純なコレクションそのための追加または削除、要素を含む、基になるコレクションが変更された場合、固定サイズ コレクションにはそれらの変更が反映されます。       このプロパティの値を取得するは、o (1) 操作です。"
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトが固定サイズです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトは読み取り専用です。"
  remarks: "読み取り専用であるコレクション追加、削除、または要素の変更後にできません、コレクションを作成します。       読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。       このプロパティの値を取得するは、o (1) 操作です。"
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクトは読み取り専用です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "取得または指定されたキーに関連付けられている値を設定します。"
  remarks: "このプロパティは、次の構文を使用して、コレクション内の特定の要素にアクセスする機能を提供します。`myCollection[key]`です。       使用することも、<xref:System.Collections.IDictionary.Item%2A>にキーの値を設定して新しい要素を追加するプロパティが存在しません、<xref:System.Collections.DictionaryBase>たとえば、 `myCollection[&quot;myNonexistentKey&quot;] = myValue`。</xref:System.Collections.DictionaryBase> </xref:System.Collections.IDictionary.Item%2A> 。 ただしで指定したキーが既に存在する場合、 <xref:System.Collections.DictionaryBase>、設定、<xref:System.Collections.IDictionary.Item%2A>プロパティに古い値が上書きされます</xref:System.Collections.IDictionary.Item%2A></xref:System.Collections.DictionaryBase>。 これに対し、<xref:System.Collections.IDictionary.Add%2A>メソッドでは、既存の要素は変更しません</xref:System.Collections.IDictionary.Add%2A>。       このプロパティの値を取得する場合は、o (1) 操作です。プロパティの設定は、o (1) 操作ではもです。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/24404b11-3020-40f8-8aa1-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/24404b11-3020-40f8-8aa1-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/24404b11-3020-40f8-8aa1-_1.vb)]"
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "キー値を取得または設定します。"
    return:
      type: System.Object
      description: "指定したキーに関連付けられている値。 返しますを取得しようとして、指定したキーが見つからない場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、し、指定したキーを使用して、新しい要素を作成するように設定しようとしています。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "プロパティが設定され、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>は読み取り専用です。       - または - プロパティが設定されて、 <code> key </code> 、コレクションに存在しません、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>固定サイズです。"
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "取得、<xref:System.Collections.ICollection>オブジェクト内のキーを含む、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト</xref:System.Collections.ICollection>。"
  remarks: "内のキーの順序、<xref:System.Collections.ICollection>オブジェクトは指定しませんに関連付けられている値と同じ順序、<xref:System.Collections.ICollection>オブジェクトによって返される、<xref:System.Collections.IDictionary.Values%2A>プロパティ</xref:System.Collections.IDictionary.Values%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。       返された<xref:System.Collections.ICollection>静的コピーではありません代わりに、、<xref:System.Collections.ICollection>は元のキーを逆参照<xref:System.Collections.DictionaryBase>オブジェクト。</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> 。 そのため、<xref:System.Collections.DictionaryBase>返された<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>反映されるまでに続行</xref:System.Collections.DictionaryBase>する変更します。       このプロパティの値を取得するは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/55fc7d60-7b22-451a-9b28-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/55fc7d60-7b22-451a-9b28-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/55fc7d60-7b22-451a-9b28-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>オブジェクト内のキーを含む、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト</xref:System.Collections.ICollection>。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "指定したキーを持つ要素を削除、 <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>です。"
  remarks: "場合、<xref:System.Collections.DictionaryBase>指定のキーを持つ要素が含まれていない、<xref:System.Collections.DictionaryBase>は変更されません</xref:System.Collections.DictionaryBase></xref:System.Collections.DictionaryBase>。 例外はスローされません。       このメソッドは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/ce3b6ffc-125d-4340-aa5a-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/ce3b6ffc-125d-4340-aa5a-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/ce3b6ffc-125d-4340-aa5a-_1.vb)]"
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "削除する要素のキー。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>は読み取り専用です。       - または -、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>のサイズが固定されています。"
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "取得、<xref:System.Collections.ICollection>オブジェクトの値を含む、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト</xref:System.Collections.ICollection>。"
  remarks: "内の値の順序、<xref:System.Collections.ICollection>オブジェクトは指定しませんが、内の関連するキーと同じ順序、<xref:System.Collections.ICollection>オブジェクトによって返される、<xref:System.Collections.IDictionary.Keys%2A>プロパティ</xref:System.Collections.IDictionary.Keys%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。       返された<xref:System.Collections.ICollection>静的コピーではありません代わりに、、<xref:System.Collections.ICollection>は元の値を逆参照<xref:System.Collections.DictionaryBase>オブジェクト。</xref:System.Collections.DictionaryBase> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> 。 そのため、<xref:System.Collections.DictionaryBase>返された<xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>反映されるまでに続行</xref:System.Collections.DictionaryBase>する変更します。       このプロパティの値を取得するは、o (1) 操作です。"
  example:
  - "The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.  \n  \n [!code-cpp[System.Collections.DictionaryBase#1](~/add/codesnippet/cpp/48c1eb68-69bc-40ec-afd8-_1.cpp)]\n [!code-cs[System.Collections.DictionaryBase#1](~/add/codesnippet/csharp/48c1eb68-69bc-40ec-afd8-_1.cs)]\n [!code-vb[System.Collections.DictionaryBase#1](~/add/codesnippet/visualbasic/48c1eb68-69bc-40ec-afd8-_1.vb)]"
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>オブジェクトの値を含む、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref>オブジェクト</xref:System.Collections.ICollection>。"
  overload: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.DictionaryBase
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Collections
  summary: "返します、<xref:System.Collections.IEnumerator>を反復処理する、 <xref href=&quot;System.Collections.DictionaryBase&quot;> </xref></xref:System.Collections.IEnumerator> 。"
  remarks: "`foreach` C# 言語のステートメント (`for each` Visual Basic で)、列挙子の複雑さが隠されています。 したがってを使用して`foreach`列挙子を直接操作せずにお勧めします。       列挙子を使用して、コレクション内のデータを読み取ることができますが、基になるコレクションを変更するのには使用できません。       最初に、列挙子はコレクション内の最初の要素の前に位置付けられます。 <xref:System.Collections.IEnumerator.Reset%2A>列挙子をこの位置に戻さ点もあります。</xref:System.Collections.IEnumerator.Reset%2A> この位置で、呼び出す<xref:System.Collections.IEnumerator.Current%2A>例外をスローします</xref:System.Collections.IEnumerator.Current%2A>。 したがって、 <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.Current%2A>の値を読み取る前に、コレクションの最初の要素に列挙子を進めるに</xref:System.Collections.IEnumerator.MoveNext%2A>呼び出す必要があります。       <xref:System.Collections.IEnumerator.Current%2A>いずれかのまで同じオブジェクトを返します<xref:System.Collections.IEnumerator.MoveNext%2A>または<xref:System.Collections.IEnumerator.Reset%2A>と呼びます</xref:System.Collections.IEnumerator.Reset%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>設定<xref:System.Collections.IEnumerator.Current%2A>次の要素にします</xref:System.Collections.IEnumerator.Current%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>       場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`</xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`</xref:System.Collections.IEnumerator.MoveNext%2A>。 場合は、最後の呼び出し<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、呼び出し元<xref:System.Collections.IEnumerator.Current%2A>例外をスローします</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。 <xref:System.Collections.IEnumerator.Current%2A>再度、コレクションの最初の要素に<xref:System.Collections.IEnumerator.Reset%2A><xref:System.Collections.IEnumerator.MoveNext%2A>。</xref:System.Collections.IEnumerator.MoveNext%2A>続けて</xref:System.Collections.IEnumerator.Reset%2A>を呼び出すことができます</xref:System.Collections.IEnumerator.Current%2A>を設定するには       コレクションが変更されない限り、列挙子は有効です。 コレクションの変更が加えられた場合など、追加、変更、または要素を削除すると、列挙子は回復不可能な無効なり、次を<xref:System.Collections.IEnumerator.MoveNext%2A><xref:System.Collections.IEnumerator.Reset%2A><xref:System.InvalidOperationException>。</xref:System.InvalidOperationException>をスロー</xref:System.Collections.IEnumerator.Reset%2A>または</xref:System.Collections.IEnumerator.MoveNext%2A> 間で、コレクションが変更された場合<xref:System.Collections.IEnumerator.MoveNext%2A>と<xref:System.Collections.IEnumerator.Current%2A>、<xref:System.Collections.IEnumerator.Current%2A>列挙子が既に無効になっている場合でもに設定されている要素を返します</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>。       列挙子はコレクションへの排他アクセスがありません。そのため、コレクションの列挙は、本質的には、スレッド セーフなプロシージャではします。 コレクションが同期されている場合でも、他のスレッドがコレクションを変更、これにより、列挙子は例外をスローします。 列挙処理中には、スレッド セーフを確保するには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更に起因する例外をキャッチします。       このメソッドは、o (1) 操作です。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.DictionaryBase&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Collections.DictionaryBase.#ctor
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase()
  nameWithType: DictionaryBase.DictionaryBase()
  fullName: System.Collections.DictionaryBase.DictionaryBase()
- uid: System.Collections.DictionaryBase.Clear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear()
  nameWithType: DictionaryBase.Clear()
  fullName: System.Collections.DictionaryBase.Clear()
- uid: System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DictionaryBase.CopyTo(Array,Int32)
  fullName: System.Collections.DictionaryBase.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.DictionaryBase.Count
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
  fullName: System.Collections.DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
  fullName: System.Collections.DictionaryBase.Dictionary
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.DictionaryBase.GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator()
  nameWithType: DictionaryBase.GetEnumerator()
  fullName: System.Collections.DictionaryBase.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
  fullName: System.Collections.DictionaryBase.InnerHashtable
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Collections.DictionaryBase.OnClear
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear()
  nameWithType: DictionaryBase.OnClear()
  fullName: System.Collections.DictionaryBase.OnClear()
- uid: System.Collections.DictionaryBase.OnClearComplete
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete()
  nameWithType: DictionaryBase.OnClearComplete()
  fullName: System.Collections.DictionaryBase.OnClearComplete()
- uid: System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet(Object,Object)
  nameWithType: DictionaryBase.OnGet(Object,Object)
  fullName: System.Collections.DictionaryBase.OnGet(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert(Object,Object)
  nameWithType: DictionaryBase.OnInsert(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsert(Object,Object)
- uid: System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete(Object,Object)
  nameWithType: DictionaryBase.OnInsertComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnInsertComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove(Object,Object)
  nameWithType: DictionaryBase.OnRemove(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemove(Object,Object)
- uid: System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete(Object,Object)
  nameWithType: DictionaryBase.OnRemoveComplete(Object,Object)
  fullName: System.Collections.DictionaryBase.OnRemoveComplete(Object,Object)
- uid: System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet(Object,Object,Object)
  nameWithType: DictionaryBase.OnSet(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSet(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete(Object,Object,Object)
  nameWithType: DictionaryBase.OnSetComplete(Object,Object,Object)
  fullName: System.Collections.DictionaryBase.OnSetComplete(Object,Object,Object)
- uid: System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate(Object,Object)
  nameWithType: DictionaryBase.OnValidate(Object,Object)
  fullName: System.Collections.DictionaryBase.OnValidate(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
  fullName: System.Collections.DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Contains(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Item(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Remove(Object)
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
  fullName: System.Collections.DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.DictionaryBase.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.DictionaryBase.#ctor*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: DictionaryBase
  nameWithType: DictionaryBase.DictionaryBase
- uid: System.Collections.DictionaryBase.Clear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Clear
  nameWithType: DictionaryBase.Clear
- uid: System.Collections.DictionaryBase.CopyTo*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: CopyTo
  nameWithType: DictionaryBase.CopyTo
- uid: System.Collections.DictionaryBase.Count*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Count
  nameWithType: DictionaryBase.Count
- uid: System.Collections.DictionaryBase.Dictionary*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: Dictionary
  nameWithType: DictionaryBase.Dictionary
- uid: System.Collections.DictionaryBase.GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: GetEnumerator
  nameWithType: DictionaryBase.GetEnumerator
- uid: System.Collections.DictionaryBase.InnerHashtable*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: InnerHashtable
  nameWithType: DictionaryBase.InnerHashtable
- uid: System.Collections.DictionaryBase.OnClear*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClear
  nameWithType: DictionaryBase.OnClear
- uid: System.Collections.DictionaryBase.OnClearComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnClearComplete
  nameWithType: DictionaryBase.OnClearComplete
- uid: System.Collections.DictionaryBase.OnGet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnGet
  nameWithType: DictionaryBase.OnGet
- uid: System.Collections.DictionaryBase.OnInsert*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsert
  nameWithType: DictionaryBase.OnInsert
- uid: System.Collections.DictionaryBase.OnInsertComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnInsertComplete
  nameWithType: DictionaryBase.OnInsertComplete
- uid: System.Collections.DictionaryBase.OnRemove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemove
  nameWithType: DictionaryBase.OnRemove
- uid: System.Collections.DictionaryBase.OnRemoveComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnRemoveComplete
  nameWithType: DictionaryBase.OnRemoveComplete
- uid: System.Collections.DictionaryBase.OnSet*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSet
  nameWithType: DictionaryBase.OnSet
- uid: System.Collections.DictionaryBase.OnSetComplete*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnSetComplete
  nameWithType: DictionaryBase.OnSetComplete
- uid: System.Collections.DictionaryBase.OnValidate*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: OnValidate
  nameWithType: DictionaryBase.OnValidate
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: DictionaryBase.System.Collections.ICollection.IsSynchronized
- uid: System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: DictionaryBase.System.Collections.ICollection.SyncRoot
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Add*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Add
  nameWithType: DictionaryBase.System.Collections.IDictionary.Add
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Contains*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Contains
  nameWithType: DictionaryBase.System.Collections.IDictionary.Contains
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsFixedSize
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: DictionaryBase.System.Collections.IDictionary.IsReadOnly
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Item*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Item
  nameWithType: DictionaryBase.System.Collections.IDictionary.Item
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Keys*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: DictionaryBase.System.Collections.IDictionary.Keys
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Remove*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Remove
  nameWithType: DictionaryBase.System.Collections.IDictionary.Remove
- uid: System.Collections.DictionaryBase.System#Collections#IDictionary#Values*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IDictionary.Values
  nameWithType: DictionaryBase.System.Collections.IDictionary.Values
- uid: System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: DictionaryBase.System.Collections.IEnumerable.GetEnumerator
