### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleConnection
  id: OracleConnection
  children:
  - System.Data.OracleClient.OracleConnection.#ctor
  - System.Data.OracleClient.OracleConnection.#ctor(System.String)
  - System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.BeginTransaction
  - System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  - System.Data.OracleClient.OracleConnection.ClearAllPools
  - System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  - System.Data.OracleClient.OracleConnection.Close
  - System.Data.OracleClient.OracleConnection.ConnectionString
  - System.Data.OracleClient.OracleConnection.ConnectionTimeout
  - System.Data.OracleClient.OracleConnection.CreateCommand
  - System.Data.OracleClient.OracleConnection.CreateDbCommand
  - System.Data.OracleClient.OracleConnection.Database
  - System.Data.OracleClient.OracleConnection.DataSource
  - System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  - System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  - System.Data.OracleClient.OracleConnection.GetSchema
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  - System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  - System.Data.OracleClient.OracleConnection.InfoMessage
  - System.Data.OracleClient.OracleConnection.Open
  - System.Data.OracleClient.OracleConnection.ServerVersion
  - System.Data.OracleClient.OracleConnection.State
  - System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  langs:
  - csharp
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
  type: Class
  summary: "データベースへの開いている接続を表します。 このクラスは継承できません。"
  remarks: "この型は廃止されており、.NET Framework の将来のバージョンで削除される予定です。 詳細については、次を参照してください。 [Oracle および ADO.NET](~/add/includes/ajax-current-ext-md.md)です。       OracleConnection オブジェクトは、Oracle データベースへの一意の接続を表します。 クライアント/サーバー データベース システムでは、場合は、サーバーへのネットワーク接続と同じです。       OracleConnection オブジェクトのインスタンスを作成するアプリケーションでは、すべて直接的および間接的な呼び出し元のコードに適切なアクセス許可を必要とする宣言的または強制的のセキュリティ確認要求を設定できます。 OracleConnection は、使用して、セキュリティ確認要求を作成、<xref:System.Data.OracleClient.OraclePermission>オブジェクト</xref:System.Data.OracleClient.OraclePermission>。 ユーザーがそのコードが使用して、適切なアクセス許可を持っているを確認することができます、<xref:System.Data.OracleClient.OraclePermissionAttribute>オブジェクト</xref:System.Data.OracleClient.OraclePermissionAttribute>。 ユーザーおよび管理者では、コンピューター、ユーザー、およびエンタープライズ レベルのセキュリティ ポリシーを変更するのにコード アクセス セキュリティ ポリシー ツール (Caspol.exe) を使用できますも。 詳細については、次を参照してください。[セキュリティ](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > とは異なり、**接続**オブジェクトで、その他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC)、OracleConnection はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>。 プロパティまたは接続文字列で接続タイムアウトの設定も何も起こりません、および返される値は常に&0; です。 また OracleConnection はサポートされません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection.Database%2A>。       OracleConnection オブジェクトがスコープ外になる場合は、開いたままです。 呼び出して OracleConnection オブジェクトを終了するは常にそのため、<xref:System.Data.OracleClient.OracleConnection.Close%2A>または**Dispose**、または内 OracleConnection オブジェクトを使用して、`Using`ステートメント</xref:System.Data.OracleClient.OracleConnection.Close%2A>。 それ以外の場合、ガベージ コレクションがそれらを直ちに解放しない可能性があります。 接続の最大数に達すると、接続の数が、ガベージ コレクターによって削除されるを待っている場合、このような遅延はエラーを発生させることができます。 これに対し、呼び出すことによって、接続の終了<xref:System.Data.OracleClient.OracleConnection.Close%2A>スケーラビリティを向上し、アプリケーション全体のパフォーマンスを向上させる、ネイティブ リソースをより効率的に使用します</xref:System.Data.OracleClient.OracleConnection.Close%2A>。 接続が常に切断させるには、内の接続を開く、`Using`ブロックします。      > [!NOTE] > 高パフォーマンス アプリケーションを展開するには、多くの場合、接続プールを使用する必要があります。 ただし、.NET Framework Data Provider for Oracle を使用する場合、プロバイダーは、これを自動的に管理するため、接続がプール機能を有効にする必要はありません。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleCommand> and an OracleConnection. The OracleConnection is opened and set as the <xref:System.Data.OracleClient.OracleCommand.Connection%2A?displayProperty=fullName> property. The example then calls <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>, and closes the connection. To accomplish this, the <xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \n  \n [!code-vb[Classic WebData OracleConnection#1](~/add/codesnippet/visualbasic/t-system.data.oracleclie_5_1.vb)]\n [!code-cs[Classic WebData OracleConnection#1](~/add/codesnippet/csharp/t-system.data.oracleclie_5_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("InfoMessage")]

      [System.Obsolete("OracleConnection has been deprecated. http://go.microsoft.com/fwlink/?LinkID=144260", false)]

      public sealed class OracleConnection : System.Data.Common.DbConnection, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbConnection
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbConnection.DbProviderFactory
  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)
  - System.Data.Common.DbConnection.OpenAsync
  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbConnection.StateChange
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction
  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)
  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor
  id: '#ctor'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>です。"
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_0_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_0_1.cs)]"
  syntax:
    content: public OracleConnection ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
  type: Constructor
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>指定された接続文字列を持つクラス。"
  remarks: ''
  example:
  - "The following example creates and opens an <xref:System.Data.OracleClient.OracleConnection>.  \n  \n [!code-vb[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_9_1.vb)]\n [!code-cs[Classic WebData OracleConnection.OracleConnection1#1](~/add/codesnippet/csharp/m-system.data.oracleclie_9_1.cs)]"
  syntax:
    content: public OracleConnection (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "データベースを開くために使用する接続です。"
  overload: System.Data.OracleClient.OracleConnection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  id: BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);
    parameters:
    - id: isolationLevel
      type: System.Data.IsolationLevel
      description: "追加します。"
    return:
      type: System.Data.Common.DbTransaction
      description: "追加します。"
  overload: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  id: BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "データベースでトランザクションを開始します。"
  remarks: "コミットまたはトランザクションをロールバックして、必要があります明示的に使用する、<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>または<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A></xref:System.Data.OracleClient.OracleTransaction.Commit%2A>。       .NET Framework Data Provider for Oracle トランザクションの管理モデルが正しく実行するためには、データベースによって提供されるものなど、他のトランザクション管理モデルを使用しないでください。      > [!NOTE] > 分離レベルを指定しない場合、既定の分離レベルが使用されます。 BeginTransaction メソッドを使用して分離レベルを指定するには、使用、<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>オーバー ロードします</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the BeginTransaction, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/m-system.data.oracleclie_11_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/m-system.data.oracleclie_11_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "新しいトランザクションを表すオブジェクト。"
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "並列トランザクションはサポートされていません。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "指定したデータベースでトランザクションを開始<xref href=&quot;System.Data.IsolationLevel&quot;></xref>値。"
  remarks: "コミットまたはトランザクションをロールバックして、必要があります明示的に使用する、<xref:System.Data.OracleClient.OracleTransaction.Commit%2A>または<xref:System.Data.OracleClient.OracleTransaction.Rollback%2A>メソッド</xref:System.Data.OracleClient.OracleTransaction.Rollback%2A></xref:System.Data.OracleClient.OracleTransaction.Commit%2A>。       .NET Framework Data Provider for Oracle トランザクションの管理モデルが正しく実行するためには、データベースによって提供されるものなど、他のトランザクション管理モデルを使用しないでください。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and an <xref:System.Data.OracleClient.OracleTransaction>. It also demonstrates how to use the <xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>, <xref:System.Data.OracleClient.OracleTransaction.Commit%2A>, and <xref:System.Data.OracleClient.OracleTransaction.Rollback%2A> methods.  \n  \n [!code-vb[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/visualbasic/12fabef6-623c-46b8-b1c3-_1.vb)]\n [!code-cs[Classic WebData OracleConnection.BeginTransaction#1](~/add/codesnippet/csharp/12fabef6-623c-46b8-b1c3-_1.cs)]"
  syntax:
    content: public System.Data.OracleClient.OracleTransaction BeginTransaction (System.Data.IsolationLevel il);
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: "この接続のトランザクション分離レベル。"
    return:
      type: System.Data.OracleClient.OracleTransaction
      description: "新しいトランザクションを表すオブジェクト。"
  overload: System.Data.OracleClient.OracleConnection.BeginTransaction*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "並列トランザクションはサポートされていません。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "開いているは、現在のデータベース変更<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>です。"
  remarks: "`value`パラメーターは、有効なデータベース名を含める必要があり、null 値、空の文字列を含めることはできません (&quot;&quot;)、または空白文字のみを含む文字列。      > [!NOTE] > とは異なり、**接続**、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A></xref:System.Data.OracleClient.OracleConnection>。 プロパティまたは接続文字列で接続タイムアウトの設定も何も起こりません、および返される値は常に&0; です。 <xref:System.Data.OracleClient.OracleConnection>サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは ChangeDatabase メソッド</xref:System.Data.OracleClient.OracleConnection.Database%2A>。</xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override void ChangeDatabase (string value);
    parameters:
    - id: value
      type: System.String
      description: "現在のデータベースの代わりに使用するデータベースの名前。"
  overload: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "データベース名が正しくありません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続は開いていません。"
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "データベースを変更することはできません。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  id: ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "接続プールを空にします。"
  remarks: "ClearAllPools リセット (または空に)、接続プールします。 接続が呼び出しの時点で使用されている場合に、それらが適切にマーク、破棄されたときに<xref:System.Data.OracleClient.OracleConnection.Close%2A>に呼び出されます</xref:System.Data.OracleClient.OracleConnection.Close%2A>。"
  syntax:
    content: public static void ClearAllPools ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.ClearAllPools*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  id: ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "指定した接続に関連付けられている接続プールを空にします。"
  remarks: "ClearPool メソッドに関連付けられている接続プールをクリアする`connection`です。 追加の接続に関連付けられている場合`connection`は呼び出し時に使用して、それらが適切にマーク、破棄されたときに<xref:System.Data.OracleClient.OracleConnection.Close%2A>に呼び出されます</xref:System.Data.OracleClient.OracleConnection.Close%2A>。"
  syntax:
    content: public static void ClearPool (System.Data.OracleClient.OracleConnection connection);
    parameters:
    - id: connection
      type: System.Data.OracleClient.OracleConnection
      description: "<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref>プールから削除します。"
  overload: System.Data.OracleClient.OracleConnection.ClearPool*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Close
  id: Close
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "データベースへの接続を閉じます。"
  remarks: "Close メソッドは、保留中のトランザクションをロールバックします。 接続プールへの接続を解放し、または接続プールが無効になっている場合、接続を閉じます。       アプリケーションでは、例外を生成せず、閉じるを複数回呼び出すことができます。      > [!NOTE] >、.NET Framework Data Provider for Oracle を使用する場合は接続プールを管理するため、プロバイダーに自動的に有効にする必要はありません。      > [!CAUTION] > で Close を呼び出す必要はありません、 <xref:System.Data.OracleClient.OracleConnection>、 <xref:System.Data.OracleClient.OracleDataReader>、またはその他のマネージ オブジェクトで、`Finalize`クラスのメソッド</xref:System.Data.OracleClient.OracleDataReader></xref:System.Data.OracleClient.OracleConnection> ファイナライザーで、クラスが直接所有されているアンマネージ リソースだけを解放する必要があります。 クラスがアンマネージ リソースを所有していない場合は含まれません、`Finalize`メソッド、クラス定義にします。 詳細については、次を参照してください。[ガベージ コレクション](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  id: ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "取得または Oracle データベースを開くときに使用する文字列を設定します。"
  remarks: "接続文字列は、接続が閉じられたときにのみ設定できます。       ConnectionString プロパティは、データベースへの接続を使用することができます。 次の例は、一般的な接続文字列を示しています。      ```   &quot;Data Source=Oracle8i;Integrated Security=yes&quot;   ```対応する読み取り専用プロパティを持つ文字列で指定された設定の多く (たとえば、`Data Source=MyServer`に対応する、<xref:System.Data.OracleClient.OracleConnection.DataSource%2A>プロパティ).</xref:System.Data.OracleClient.OracleConnection.DataSource%2A> 接続文字列を設定すると、これらすべてのプロパティはいない限り、更新エラーが検出された場合、プロパティのいずれも更新されます。 <xref:System.Data.OracleClient.OracleConnection>プロパティは、既定の設定または ConnectionString で指定されたこれらの設定のみを返します。</xref:System.Data.OracleClient.OracleConnection>       閉じた接続に対して接続文字列をリセットするには、すべての接続文字列の値 (および関連するプロパティ)、パスワードを含むがリセットされます。       設定されている後すぐには、接続文字列を解析します。 解析明らかになった場合、ランタイム例外の構文ではエラーなど<xref:System.ArgumentException>が生成されます</xref:System.ArgumentException>。 開くには、接続試行が行われたときにのみ、その他のエラーを確認できます。       接続文字列の基本形式は、一連のキーワード/値ペアのセミコロンで区切られたです。 等号 (=) は、それぞれのキーワードとその値を接続します。 セミコロン、単一引用符または二重引用符文字を含む値を含めるには、値を二重引用符で囲む必要があります。 値は、セミコロンと二重引用符の両方を含む、値が単一引用符で囲むことができます。 単一引用符も値が二重引用符文字で始まる場合に役立ちます。 逆に、値が単一引用符で始まる場合は、二重引用符を使用できます。 値に、一重引用符と二重引用符の両方の文字が含まれている場合、値を囲むために使用する引用符文字が値内で発生するたびを二重にする必要があります。       先頭または末尾の文字列値にスペースを含めるには、値を単一引用符または二重引用符で囲む必要があります。 引用符で囲まれている場合でも、整数、ブール値、列挙値の先頭または末尾の空白は無視されます。 ただし、文字列リテラル キーワードまたは値内にスペースが保持されます。 一重または二重引用符は、引用符文字は、値の最初と最後の文字などを除き、区切り記号を使用せず、接続文字列内で使用可能性があります`Data Source= my&quot;Server`または`Data Source= my&quot;Server`です。       含めるには等号 (=) キーワードまたは値で、もう&1; つの等号 (=) によって前しなければなりません。 などのような接続文字列で```   &quot;key==word=value&quot;   ```キーワードが&quot;キー = word&quot;の値は&quot;value&quot;です。       キーワード/値ペア内の特定のキーワードは、接続文字列に&2; 回以上発生、値のセットに最後に見つかった位置が使用されます。       キーワードは、大文字小文字を区別します。       次の表には、ConnectionString 内の値の有効な名前が一覧表示します。      |名 |既定の |説明 |  |----------|-------------|-----------------|  |データ ソース<br /><br /> または<br /><br /> サーバー | |接続先 Oracle インスタンスの名前またはネットワーク アドレスです |。  |統合セキュリティ |&quot;false&quot;|かどうか、セキュリティで保護された接続をするかへの接続です。<br /><br /> 認識できる値は`true`(推奨)、 `false`、 `yes`、および`no`|。  |パスワード | |アカウントのパスワードを Oracle のログ記録します。 高レベルのセキュリティを維持することを強くお勧め Integrated Security キーワードを使用することです |。  |Persist Security Info |&quot;false&quot;|設定すると`false`または`no`(推奨)、接続文字列の一部としては、接続が開いているか、開いている<xref:System.Data.OracleClient.OracleConnection.State%2A>.</xref:System.Data.OracleClient.OracleConnection.State%2A>になった場合、パスワードなどの機密情報は返されません 接続文字列をリセットするパスワードを含むすべての接続文字列値をリセットします。<br /><br /> 認識できる値は`true`、 `false`、 `yes`、および`no`|。  |Unicode |&quot;false&quot;|.NET Framework Data Provider for Oracle が UTF16 モード API 呼び出しを使用するかどうかを指定します。 このキーワードは、Oracle9i クライアント ソフトウェアを使用する場合を除き無視されます |。  |ユーザー ID | |Oracle ログイン アカウントです。 高レベルのセキュリティを維持することを強くお勧め Integrated Security キーワードを使用することです |。      次の表には、接続プールの接続文字列内の値の有効な名前が一覧表示します。      |名 |既定の |説明 |  |----------|-------------|-----------------|  |接続の有効期間 |&0; |接続がプールに返された、現在の時刻と、作成時刻を比較し、その時間の長さ (秒) で指定された値を超えた場合、接続が破棄されるときに`Connection Lifetime`です。 これは、実行中のサーバーとオンラインになったばかりのサーバー間の負荷分散を強制的にクラスター化された構成に便利です。<br /><br /> 値が&0; の場合、プールされた接続には、最大接続タイムアウト |。  |参加 |&quot;true の &quot; |ときに`true`または`yes`、プーラーが、作成スレッドの現在のトランザクション コンテキストに接続を自動的に登録します。<br /><br /> 認識できる値は`true`、 `false`、 `yes`、および`no`|。  |最大プール サイズ |&100; |プールで許可される接続の最大数。 設定、 `Max Pool Size` ConnectionString の値には、パフォーマンスが低下します。 作成して積極的に 100 個の接続では複数使用する必要がありますを増やす場合`Max Pool Size`アプリケーションの安定した状態の接続の使用状況を概算するための値にします |。  |Min Pool Size | 0 |プールで許可される接続の最小数です |。  |プール |&quot;true の &quot; |ときに`true`または`yes`、<xref:System.Data.OracleClient.OracleConnection>オブジェクトは、適切なプールから描画または必要に応じてが作成され、適切なプールに追加します</xref:System.Data.OracleClient.OracleConnection>。<br /><br /> 認識できる値は`true`、 `false`、 `yes`、および`no`|。      キーワードまたは接続プールをブール値を必要とする値に設定するときは、&quot;true&quot; ではなくと &quot;no&quot; に &quot;false&quot; ではなく &quot;yes&quot; を使用できます。 整数値は、文字列として表されます。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and sets some of its properties in the connection string.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_15_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_15_1.cs)]"
  syntax:
    content: public override string ConnectionString { get; set; }
    return:
      type: System.String
      description: "サーバー名などの設定を含む Oracle 接続文字列は、最初の接続を確立するために必要です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Data.OracleClient.OracleConnection.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  id: ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "試行を終了し、エラーが発生する前に、接続を確立するために待機する時間を取得します。"
  remarks: "使用してタイムアウトに接続の待機時間を設定することができます、`Connect Timeout`または`Connection Timeout`キーワード、接続文字列にします。 値が 0 の制限がないことを示しますとでは避ける必要があります、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>接続の試行が無限に待機するためです。</xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> 。      > [!NOTE] > とは異なり、 `Connection` 、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>ConnectionTimeout プロパティをサポートしていません</xref:System.Data.OracleClient.OracleConnection>。 接続タイムアウト プロパティを設定または接続文字列内のいずれかの設定も何も起こりません、および返される値は常に&0; です。 <xref:System.Data.OracleClient.OracleConnection>サポートされていません、<xref:System.Data.OracleClient.OracleConnection.Database%2A>プロパティまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A></xref:System.Data.OracleClient.OracleConnection.Database%2A>。</xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override int ConnectionTimeout { get; }
    return:
      type: System.Int32
      description: "時間 (秒) に接続を開くを待機します。 既定値は、15 秒です。"
  overload: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された値が 0 未満です。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  id: CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "作成して返します、 <xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>オブジェクトに関連付けられている、 <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>です。"
  syntax:
    content: public System.Data.OracleClient.OracleCommand CreateCommand ();
    parameters: []
    return:
      type: System.Data.OracleClient.OracleCommand
      description: "<xref href=&quot;System.Data.OracleClient.OracleCommand&quot;> </xref>オブジェクト。"
  overload: System.Data.OracleClient.OracleConnection.CreateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  id: CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override System.Data.Common.DbCommand CreateDbCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "追加します。"
  overload: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Database
  id: Database
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在のデータベースまたは接続が開かれた後に使用するデータベースの名前を取得します。"
  remarks: "データベースのプロパティを動的に更新します。 SQL ステートメントを使用して、現在のデータベースを変更するかどうか、または<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド、情報メッセージが送信され、プロパティが自動的に更新されます</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>。      > [!NOTE] > とは異なり、 `Connection` 、他の .NET Framework データ プロバイダー (SQL Server、OLE DB および ODBC) 内のオブジェクト<xref:System.Data.OracleClient.OracleConnection>はサポートしていません、<xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A>プロパティ</xref:System.Data.OracleClient.OracleConnection.ConnectionTimeout%2A></xref:System.Data.OracleClient.OracleConnection>。 接続タイムアウト プロパティを設定または接続文字列内のいずれかの設定も何も起こりません、および返される値は常に&0; です。 <xref:System.Data.OracleClient.OracleConnection>また、データベース プロパティはサポートしませんまたは<xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>メソッド</xref:System.Data.OracleClient.OracleConnection.ChangeDatabase%2A>。</xref:System.Data.OracleClient.OracleConnection>"
  syntax:
    content: public override string Database { get; }
    return:
      type: System.String
      description: "現在のデータベースまたは接続が開かれた後に使用するデータベースの名前の名前。 既定値は、空の文字列です。"
  overload: System.Data.OracleClient.OracleConnection.Database*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.DataSource
  id: DataSource
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "接続先 Oracle サーバーの名前を取得します。"
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_7_1.vb)]\n [!code-cs[Classic WebData OracleConnection.DataSource#1](~/add/codesnippet/csharp/p-system.data.oracleclie_7_1.cs)]"
  syntax:
    content: public override string DataSource { get; }
    return:
      type: System.String
      description: "接続先 Oracle サーバーの名前。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Data.OracleClient.OracleConnection.DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.OracleClient.OracleConnection.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "指定されたトランザクションは分散トランザクションに参加します。"
  remarks: "新しい ADO.NET 2.0 ではサポートを使用するため、<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>分散トランザクションに参加するメソッド</xref:System.Data.Common.DbConnection.EnlistTransaction%2A>。 これにより、接続するため、<xref:System.Transactions.Transaction>インスタンス、 **EnlistTransaction**で利用できる機能を活用、<xref:System.Transactions>を管理するための名前空間は分散トランザクションを置き換えることが**どちら**この目的のためです</xref:System.Transactions></xref:System.Transactions.Transaction>。 詳細については、次を参照してください。[分散トランザクション](~/add/includes/ajax-current-ext-md.md)です。       自動参加が無効になっている場合は、どちらのメソッドを使用して既存の分散トランザクションに参加する続行することができます。 既存の分散トランザクションに参加させることにより、により、トランザクションがコミットまたはロールバックされた場合、データ ソース コードで行った変更もコミットまたはロールバックされます。       どちらには、例外が返された場合<xref:System.Data.OracleClient.OracleConnection>は既に<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>.</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>を使用してトランザクションを開始</xref:System.Data.OracleClient.OracleConnection>する ただし、トランザクションは、データ ソースで開始されたローカル トランザクション (たとえば、明示的に実行することによって、BEGIN TRANSACTION ステートメントを使用して、<xref:System.Data.OracleClient.OracleCommand>オブジェクト)、どちらがローカル トランザクションをロールバックし、要求されるとおり、既存の分散トランザクションに参加します</xref:System.Data.OracleClient.OracleCommand>。 ローカル トランザクションがロールバックしはないローカル トランザクションの管理を担当開始こと<xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>。</xref:System.Data.OracleClient.OracleConnection.BeginTransaction%2A>を使用して、通知は表示されません。"
  syntax:
    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction distributedTransaction);
    parameters:
    - id: distributedTransaction
      type: System.EnterpriseServices.ITransaction
      description: "既存への参照を<xref href=&quot;System.EnterpriseServices.ITransaction&quot;></xref>登録先。"
  overload: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  id: EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "指定されたトランザクションは分散トランザクションに参加します。"
  remarks: "新しい ADO.NET 2.0 ではサポートを使用するため、<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>分散トランザクションに参加するメソッド</xref:System.Data.Common.DbConnection.EnlistTransaction%2A>。 これにより、接続するため、<xref:System.Transactions.Transaction>インスタンス、 **EnlistTransaction**で利用できる機能を活用、<xref:System.Transactions>を管理するための名前空間は分散トランザクションを置き換えることが**どちら**が使用される、 **System.EnterpriseServices.ITransaction**オブジェクト</xref:System.Transactions></xref:System.Transactions.Transaction>。 さらに、若干異なるセマンティクス: 接続は明示的にトランザクションに参加させる、一度参加解除されてまたはできない最初のトランザクションが終了するまで、別のトランザクションに参加しています。 分散トランザクションの詳細については、次を参照してください。[分散トランザクション](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);
    parameters:
    - id: transaction
      type: System.Transactions.Transaction
      description: "既存への参照を<xref href=&quot;System.Transactions.Transaction&quot;></xref>登録先。"
  overload: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  id: GetSchema
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "このデータ ソースのスキーマ情報を返します<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>です。"
  syntax:
    content: public override System.Data.DataTable GetSchema ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>スキーマ情報を格納します。"
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  id: GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "このデータ ソースのスキーマ情報を返します<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>スキーマ名を指定した文字列を使用します。"
  remarks: "GetSchema によるクエリは、大文字小文字を区別します。 Oracle のケースの処理を行うのため、スキーマが最初に作成されるときにつながります予期しない結果にします。       引用符は、スキーマが作成された場合`,`Oracle が大文字表記でオブジェクト名を格納します。 引用符を含むスキーマが作成されている場合、Oracle は、指定された大文字と小文字のオブジェクト名を格納します。       たとえば、次の&2; つのステートメントのいずれかを使用して、MyTable という名前のテーブルを作成する: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...`によってこのテーブルに関する情報を取得する、 **GetSchema**最初のケースのメソッドは、&quot;MYTABLE&quot;内の引数として渡しする必要があります。        2 番目のケースでは&quot;MyTable&quot;内の引数として渡しする必要があります。"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName);
    parameters:
    - id: collectionName
      type: System.String
      description: "返すスキーマの名前を指定します。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>スキーマ情報を格納します。"
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>null として指定されます。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  id: GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "このデータ ソースのスキーマ情報を返します<xref href=&quot;System.Data.OracleClient.OracleConnection&quot;></xref>スキーマ名と制限値に指定した文字列配列の指定した文字列を使用します。"
  remarks: "`restrictionValues`パラメーターは、特定のコレクションの制限のコレクションで指定されている値の n 個の深さを指定できます。 指定された制限の値を設定して、他の制限値を設定しない、null に設定し、値を指定するには、制限の適切な値を格納する、前述の制限を設定する必要があります。       この例では、&quot;Tables&quot;コレクションです。 &quot;Tables&quot;コレクションに 3 つの制限がある場合: データベース、所有者、およびテーブル名です。&quot;Carl&quot;所有者に関連付けられているテーブルのみを取得するしは、次の値 (最低) を渡す必要があります: null、&quot;Carl&quot;です。 制限値が渡されない場合、既定値は、その制限に使用されます。 これは、同じマッピングとして null を渡すこと、パラメーターの値に空の文字列に渡すこととは異なります。 その場合、空の文字列 (&quot;&quot;) は、指定されたパラメーターの値であると見なされます。       使用するクエリ<xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>大文字と小文字を区別します</xref:System.Data.OracleClient.OracleConnection.GetSchema%2A>。 Oracle のケースの処理を行うのため、スキーマが最初に作成されるときにつながります予期しない結果にします。       引用符は、スキーマが作成された場合`,`Oracle が大文字表記でオブジェクト名を格納します。 引用符を含むスキーマが作成されている場合、Oracle は、指定された大文字と小文字のオブジェクト名を格納します。       たとえば、次の&2; つのステートメントのいずれかを使用して、MyTable という名前のテーブルを作成する: `CREATE TABLE MyTable ...` `CREATE TABLE &quot;MyTable&quot; ...`によってこのテーブルに関する情報を取得する、 **GetSchema**最初のケースのメソッドは、&quot;MYTABLE&quot;内の引数として渡しする必要があります。        2 番目のケースでは&quot;MyTable&quot;内の引数として渡しする必要があります。"
  syntax:
    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);
    parameters:
    - id: collectionName
      type: System.String
      description: "返すスキーマの名前を指定します。"
    - id: restrictionValues
      type: System.String[]
      description: "要求されたスキーマの制限値のセット。"
    return:
      type: System.Data.DataTable
      description: "A <xref href=&quot;System.Data.DataTable&quot;> </xref>スキーマ情報を格納します。"
  overload: System.Data.OracleClient.OracleConnection.GetSchema*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>collectionName</code>null として指定されます。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  id: InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
  type: Event
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Oracle は、警告または情報メッセージを送信したときに発生します。"
  remarks: ".NET Framework Data Provider for Oracle は、データ プロバイダーが成功した場合に情報メッセージを受信するたびに、Oracle Call Interface (OCI) を使用しているため、InfoMessage イベントが生成されます。 例には、構文エラーを含むストアド プロシージャを作成、します。 呼び出し、<xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>メソッドは成功します</xref:System.Data.OracleClient.OracleCommand.ExecuteNonQuery%2A>。 ただし、InfoMessage イベントが生成されます、構文エラーを通知します。       警告またはサーバーによって送信される情報のメッセージを処理しているクライアントを作成する必要があります、<xref:System.Data.OracleClient.OracleInfoMessageEventHandler>このイベントを待機するデリゲート</xref:System.Data.OracleClient.OracleInfoMessageEventHandler>。"
  syntax:
    content: public event System.Data.OracleClient.OracleInfoMessageEventHandler InfoMessage;
    return:
      type: System.Data.OracleClient.OracleInfoMessageEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.Open
  id: Open
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "<xref:System.Data.OracleClient.OracleConnection.ConnectionString*>。</xref:System.Data.OracleClient.OracleConnection.ConnectionString*>で指定されたプロパティの設定で、データベースへの接続を開きます"
  remarks: "<xref:System.Data.OracleClient.OracleConnection>がある場合、接続プールから、開いている接続を描画します</xref:System.Data.OracleClient.OracleConnection>。 それ以外の場合、データベースへの新しい接続を確立します。      > [!NOTE] > 場合、<xref:System.Data.OracleClient.OracleConnection>がスコープから外れたりが表す接続が自動的に閉じられません</xref:System.Data.OracleClient.OracleConnection>。 したがって、する必要があります明示的に接続を呼び出して終了する<xref:System.Data.OracleClient.OracleConnection.Close%2A>。</xref:System.Data.OracleClient.OracleConnection.Close%2A>"
  syntax:
    content: public override void Open ();
    parameters: []
  overload: System.Data.OracleClient.OracleConnection.Open*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続は開いていません。"
  - type: System.Data.OracleClient.OracleException
    commentId: T:System.Data.OracleClient.OracleException
    description: "データベースを変更することはできません。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  id: ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "クライアントが接続されているサーバーのバージョンを含む文字列を取得します。"
  remarks: "ServerVersion プロパティは、Oracle のバージョンの形式でです。 たとえば、Oracle8 リリースの形式は、形式で文字列&quot;8.1.7.0.0 Oracle8 8.1.7.0.0 の実稼働環境を解放します&quot;。"
  example:
  - "The following example creates an <xref:System.Data.OracleClient.OracleConnection> and displays some of its read-only properties.  \n  \n [!code-vb[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_3_1.vb)]\n [!code-cs[Classic WebData OracleConnection.ServerVersion#1](~/add/codesnippet/csharp/p-system.data.oracleclie_3_1.cs)]"
  syntax:
    content: public override string ServerVersion { get; }
    return:
      type: System.String
      description: "接続先のサーバーのバージョン。"
  overload: System.Data.OracleClient.OracleConnection.ServerVersion*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続は閉じられます。"
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.State
  id: State
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "接続の現在の状態を取得します。"
  remarks: "許可される状態の変更: - から`Closed`に`Open`を使用して、`Open`のメソッド、<xref:System.Data.OracleClient.OracleConnection>オブジェクト</xref:System.Data.OracleClient.OracleConnection>。      -から`Open`に`Closed`を使用して、<xref:System.Data.OracleClient.OracleConnection.Close%2A>のメソッド、<xref:System.Data.OracleClient.OracleConnection>オブジェクト</xref:System.Data.OracleClient.OracleConnection></xref:System.Data.OracleClient.OracleConnection.Close%2A>。"
  example:
  - "The following example creates an instance of a derived class, <xref:System.Data.OracleClient.OracleConnection>, sets its <xref:System.Data.IDbConnection.ConnectionString%2A>, and displays its State.  \n  \n [!code-cs[Classic WebData OracleConnection.State#1](~/add/codesnippet/csharp/p-system.data.oracleclie_9_1.cs)]\n [!code-vb[Classic WebData OracleConnection.State#1](~/add/codesnippet/visualbasic/p-system.data.oracleclie_9_1.vb)]"
  syntax:
    content: public override System.Data.ConnectionState State { get; }
    return:
      type: System.Data.ConnectionState
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.Data.ConnectionState&quot;> </xref>値。 既定値は<xref uid=&quot;langword_csharp_Closed&quot; name=&quot;Closed&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.OracleClient.OracleConnection.State*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OracleClient.OracleConnection
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "現在のインスタンスのコピーである新しいオブジェクトを作成します。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.OracleClient.OracleConnection>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Data.OracleClient.OracleConnection>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "このインスタンスのコピーである新しいオブジェクト。"
  overload: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnection
  isExternal: false
  name: System.Data.Common.DbConnection
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.OracleClient.OracleException
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleException
  nameWithType: OracleException
  fullName: System.Data.OracleClient.OracleException
- uid: System.Data.OracleClient.OracleConnection.#ctor
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection()
  nameWithType: OracleConnection.OracleConnection()
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection()
- uid: System.Data.OracleClient.OracleConnection.#ctor(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection(String)
  nameWithType: OracleConnection.OracleConnection(String)
  fullName: System.Data.OracleClient.OracleConnection.OracleConnection(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginDbTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginDbTransaction(IsolationLevel)
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.IsolationLevel
  parent: System.Data
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction()
  nameWithType: OracleConnection.BeginTransaction()
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction()
- uid: System.Data.OracleClient.OracleTransaction
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleTransaction
  nameWithType: OracleTransaction
  fullName: System.Data.OracleClient.OracleTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction(IsolationLevel)
  nameWithType: OracleConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.OracleClient.OracleConnection.BeginTransaction(IsolationLevel)
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase(String)
  nameWithType: OracleConnection.ChangeDatabase(String)
  fullName: System.Data.OracleClient.OracleConnection.ChangeDatabase(String)
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools()
  nameWithType: OracleConnection.ClearAllPools()
  fullName: System.Data.OracleClient.OracleConnection.ClearAllPools()
- uid: System.Data.OracleClient.OracleConnection.ClearPool(System.Data.OracleClient.OracleConnection)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool(OracleConnection)
  nameWithType: OracleConnection.ClearPool(OracleConnection)
  fullName: System.Data.OracleClient.OracleConnection.ClearPool(OracleConnection)
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.Close
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close()
  nameWithType: OracleConnection.Close()
  fullName: System.Data.OracleClient.OracleConnection.Close()
- uid: System.Data.OracleClient.OracleConnection.ConnectionString
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
  fullName: System.Data.OracleClient.OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
  fullName: System.Data.OracleClient.OracleConnection.ConnectionTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OracleClient.OracleConnection.CreateCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand()
  nameWithType: OracleConnection.CreateCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateCommand()
- uid: System.Data.OracleClient.OracleCommand
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleCommand
  nameWithType: OracleCommand
  fullName: System.Data.OracleClient.OracleCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand()
  nameWithType: OracleConnection.CreateDbCommand()
  fullName: System.Data.OracleClient.OracleConnection.CreateDbCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.OracleClient.OracleConnection.Database
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
  fullName: System.Data.OracleClient.OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
  fullName: System.Data.OracleClient.OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleConnection.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleConnection.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction(ITransaction)
  nameWithType: OracleConnection.EnlistDistributedTransaction(ITransaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction(ITransaction)
- uid: System.EnterpriseServices.ITransaction
  parent: System.EnterpriseServices
  isExternal: false
  name: ITransaction
  nameWithType: ITransaction
  fullName: System.EnterpriseServices.ITransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction(System.Transactions.Transaction)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction(Transaction)
  nameWithType: OracleConnection.EnlistTransaction(Transaction)
  fullName: System.Data.OracleClient.OracleConnection.EnlistTransaction(Transaction)
- uid: System.Transactions.Transaction
  parent: System.Transactions
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: System.Transactions.Transaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema()
  nameWithType: OracleConnection.GetSchema()
  fullName: System.Data.OracleClient.OracleConnection.GetSchema()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String)
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String)
  nameWithType: OracleConnection.GetSchema(String)
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String)
- uid: System.Data.OracleClient.OracleConnection.GetSchema(System.String,System.String[])
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema(String,String[])
  nameWithType: OracleConnection.GetSchema(String,String[])
  fullName: System.Data.OracleClient.OracleConnection.GetSchema(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleConnection.InfoMessage
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: InfoMessage
  nameWithType: OracleConnection.InfoMessage
  fullName: System.Data.OracleClient.OracleConnection.InfoMessage
- uid: System.Data.OracleClient.OracleInfoMessageEventHandler
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleInfoMessageEventHandler
  nameWithType: OracleInfoMessageEventHandler
  fullName: System.Data.OracleClient.OracleInfoMessageEventHandler
- uid: System.Data.OracleClient.OracleConnection.Open
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open()
  nameWithType: OracleConnection.Open()
  fullName: System.Data.OracleClient.OracleConnection.Open()
- uid: System.Data.OracleClient.OracleConnection.ServerVersion
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
  fullName: System.Data.OracleClient.OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
  fullName: System.Data.OracleClient.OracleConnection.State
- uid: System.Data.ConnectionState
  parent: System.Data
  isExternal: false
  name: ConnectionState
  nameWithType: ConnectionState
  fullName: System.Data.ConnectionState
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OracleConnection.System.ICloneable.Clone()
  fullName: System.Data.OracleClient.OracleConnection.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleConnection.#ctor*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection.OracleConnection
- uid: System.Data.OracleClient.OracleConnection.BeginDbTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginDbTransaction
  nameWithType: OracleConnection.BeginDbTransaction
- uid: System.Data.OracleClient.OracleConnection.BeginTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: BeginTransaction
  nameWithType: OracleConnection.BeginTransaction
- uid: System.Data.OracleClient.OracleConnection.ChangeDatabase*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ChangeDatabase
  nameWithType: OracleConnection.ChangeDatabase
- uid: System.Data.OracleClient.OracleConnection.ClearAllPools*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearAllPools
  nameWithType: OracleConnection.ClearAllPools
- uid: System.Data.OracleClient.OracleConnection.ClearPool*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ClearPool
  nameWithType: OracleConnection.ClearPool
- uid: System.Data.OracleClient.OracleConnection.Close*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Close
  nameWithType: OracleConnection.Close
- uid: System.Data.OracleClient.OracleConnection.ConnectionString*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionString
  nameWithType: OracleConnection.ConnectionString
- uid: System.Data.OracleClient.OracleConnection.ConnectionTimeout*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ConnectionTimeout
  nameWithType: OracleConnection.ConnectionTimeout
- uid: System.Data.OracleClient.OracleConnection.CreateCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateCommand
  nameWithType: OracleConnection.CreateCommand
- uid: System.Data.OracleClient.OracleConnection.CreateDbCommand*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: CreateDbCommand
  nameWithType: OracleConnection.CreateDbCommand
- uid: System.Data.OracleClient.OracleConnection.Database*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Database
  nameWithType: OracleConnection.Database
- uid: System.Data.OracleClient.OracleConnection.DataSource*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: DataSource
  nameWithType: OracleConnection.DataSource
- uid: System.Data.OracleClient.OracleConnection.Dispose*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Dispose
  nameWithType: OracleConnection.Dispose
- uid: System.Data.OracleClient.OracleConnection.EnlistDistributedTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistDistributedTransaction
  nameWithType: OracleConnection.EnlistDistributedTransaction
- uid: System.Data.OracleClient.OracleConnection.EnlistTransaction*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: EnlistTransaction
  nameWithType: OracleConnection.EnlistTransaction
- uid: System.Data.OracleClient.OracleConnection.GetSchema*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: GetSchema
  nameWithType: OracleConnection.GetSchema
- uid: System.Data.OracleClient.OracleConnection.Open*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: Open
  nameWithType: OracleConnection.Open
- uid: System.Data.OracleClient.OracleConnection.ServerVersion*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: ServerVersion
  nameWithType: OracleConnection.ServerVersion
- uid: System.Data.OracleClient.OracleConnection.State*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: State
  nameWithType: OracleConnection.State
- uid: System.Data.OracleClient.OracleConnection.System#ICloneable#Clone*
  parent: System.Data.OracleClient.OracleConnection
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OracleConnection.System.ICloneable.Clone
