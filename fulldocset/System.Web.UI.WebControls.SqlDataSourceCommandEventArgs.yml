### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  id: SqlDataSourceCommandEventArgs
  children:
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  - System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  type: Class
  summary: "データを提供、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Updating&quot;> </xref>、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Deleting&quot;> </xref>と<xref href=&quot;System.Web.UI.WebControls.SqlDataSource.Inserting&quot;></xref>のイベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロール。"
  remarks: "処理するイベント ハンドラー デリゲートを追加することによって、 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、または<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベント、必要な追加処理を実行または完全 database コマンドをキャンセルできます</xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSource.Updating>。       SqlDataSourceCommandEventArgs クラスから派生しているため、<xref:System.ComponentModel.CancelEventArgs>取り消すことができます、クラス、保留中<xref:System.Web.UI.WebControls.SqlDataSource>データベース コマンドを設定して、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`</xref:System.ComponentModel.CancelEventArgs.Cancel%2A></xref:System.Web.UI.WebControls.SqlDataSource></xref:System.ComponentModel.CancelEventArgs>。 チェックおよび操作することができます、 <xref:System.Data.Common.DbCommand.CommandText%2A>、<xref:System.Data.Common.DbCommand.Parameters%2A>コレクション、およびその他のコマンド プロパティにアクセスして、コマンドを実行する前に、<xref:System.Data.Common.DbCommand>オブジェクトによって公開されている、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A></xref:System.Data.Common.DbCommand></xref:System.Data.Common.DbCommand.Parameters%2A></xref:System.Data.Common.DbCommand.CommandText%2A>。       SqlDataSourceCommandEventArgs クラスが使用されて、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>、および<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>へのアクセスを提供するメソッド、<xref:System.Web.UI.WebControls.SqlDataSource>の実行前に、データベース コマンド</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>。 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、基になるデータ オブジェクト、データの操作の実行中に操作を処理できる多くのイベントを公開します</xref:System.Web.UI.WebControls.SqlDataSource>。 次の表は、イベントの一覧し、関連付けられている<xref:System.EventArgs>とイベント ハンドラー クラスより適切な操作を使用してデータのライフ サイクルに対応するさまざまなイベントを探すには<xref:System.Web.UI.WebControls.SqlDataSource>コントロール</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.EventArgs>。      |イベント |EventArgs |EventHandler |  |-----------|---------------|------------------|  |データが取得される前に、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>が発生した |。<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>、 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>update、または削除操作が実行される挿入、前に発生します |。SqlDataSourceCommandEventArgs |<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  |<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>発生後、データの取得、insert、update、または削除操作が完了した |。<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler></xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs></xref:System.Web.UI.WebControls.SqlDataSource.Selecting>"
  example:
  - "The following code example demonstrates how to display data retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control, and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: 'public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  id: '#ctor(System.Data.Common.DbCommand)'
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref>クラス、指定されたデータベース コマンド オブジェクトを使用します。"
  syntax:
    content: public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>を表す、キャンセル可能なオブジェクト<> *>、 <> </> *>、または<xref:System.Web.UI.WebControls.SqlDataSource.Delete*>コマンド</xref:System.Web.UI.WebControls.SqlDataSource.Delete*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  id: Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  langs:
  - csharp
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "保留中のデータベース コマンドを取得します。"
  remarks: "処理することができます、 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、または<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>を調べてのプロパティを操作するイベント、<xref:System.Data.Common.DbCommand>によって実行される前に、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSource.Updating>。 基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。 そのため、呼び出すことによって、データベースの操作を取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>オブジェクトに直接</xref:System.Data.Common.DbCommand></xref:System.Data.Common.DbCommand.Cancel%2A>。 ただし、設定して、データベースの操作を取り消すことができます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The data is initially displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> that ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically-generated insert button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records, and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField>, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1040_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1040_1.aspx)]"
  syntax:
    content: public System.Data.Common.DbCommand Command { get; }
    return:
      type: System.Data.Common.DbCommand
      description: "<xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>保留中のデータベース コマンドを表すオブジェクト。"
  overload: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs(DbCommand)
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs(DbCommand)
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command*
  parent: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  isExternal: false
  name: Command
  nameWithType: SqlDataSourceCommandEventArgs.Command
