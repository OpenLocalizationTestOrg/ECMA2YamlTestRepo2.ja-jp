### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.Grammar
  id: Grammar
  children:
  - System.Speech.Recognition.Grammar.#ctor
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  - System.Speech.Recognition.Grammar.#ctor(System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  - System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  - System.Speech.Recognition.Grammar.Enabled
  - System.Speech.Recognition.Grammar.IsStg
  - System.Speech.Recognition.Grammar.Loaded
  - System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  - System.Speech.Recognition.Grammar.Name
  - System.Speech.Recognition.Grammar.Priority
  - System.Speech.Recognition.Grammar.ResourceName
  - System.Speech.Recognition.Grammar.RuleName
  - System.Speech.Recognition.Grammar.SpeechRecognized
  - System.Speech.Recognition.Grammar.StgInit(System.Object[])
  - System.Speech.Recognition.Grammar.Weight
  langs:
  - csharp
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
  type: Class
  summary: "アプリケーションは、音声認識の制約の定義に使用できる音声認識の文法を参照するランタイム オブジェクト。"
  remarks: "音声認識の文法は、一連のルールまたは意味のある入力として認識できる音声認識エンジンを定義する制約です。 作成して、音声認識の文法の使用に関する詳細については、次を参照してください。[音声認識](http://msdn.microsoft.com/en-us/6a7dc524-07fc-4862-8d48-8c10dc64b919)、[文法を使用して XML の作成](http://msdn.microsoft.com/en-us/2d799487-49c6-4cc9-b42f-f71cd3824fe1)、[文法を使用して GrammarBuilder の作成](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)、および[文法を使用して SrgsGrammar の作成](http://msdn.microsoft.com/en-us/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906)です。       文法を作成した後は、音声認識エンジンを読み込むことができると、アプリケーションは、音声認識を管理する実行時に使用できる文法オブジェクトに組み込む必要があります。 使用することができます、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>から文法インスタンスを作成するコンス トラクター、<xref:System.Speech.Recognition.GrammarBuilder>または<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>オブジェクト、またはファイルから、または<xref:System.IO.Stream>、文法でサポートされている形式の説明を格納している</xref:System.IO.Stream></xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument></xref:System.Speech.Recognition.GrammarBuilder></xref:System.Speech.Recognition.Grammar.%23ctor%2A>。 サポートされている形式は次のとおりです:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -.cfg を持つバイナリ ファイルにコンパイルされている文法ファイルを XML 形式の文法ファイルの引数は、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 文法をコンパイルを受け入れる拡張文法コンス トラクターです。 いずれかを使用して、文法を事前にコンパイルすることによって XML 形式文法から文法オブジェクトを構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>。       アプリケーションの音声認識エンジンで管理対象として、<xref:System.Speech.Recognition.SpeechRecognizer>または<xref:System.Speech.Recognition.SpeechRecognitionEngine>オブジェクト、複数の音声認識の文法を読み込むことができます</xref:System.Speech.Recognition.SpeechRecognitionEngine></xref:System.Speech.Recognition.SpeechRecognizer>。 アプリケーション別に有効または無効に個々 の文法を設定して、<xref:System.Speech.Recognition.Grammar.Enabled%2A>プロパティなどの文法のプロパティを使用して認識動作を変更し、<xref:System.Speech.Recognition.Grammar.Priority%2A>と<xref:System.Speech.Recognition.Grammar.Weight%2A>プロパティ</xref:System.Speech.Recognition.Grammar.Weight%2A></xref:System.Speech.Recognition.Grammar.Priority%2A></xref:System.Speech.Recognition.Grammar.Enabled%2A>。       文法の<xref:System.Speech.Recognition.Grammar.SpeechRecognized>イベントは、入力の文法をパスに一致する場合に発生します</xref:System.Speech.Recognition.Grammar.SpeechRecognized>。      > [!NOTE] > を任意の URI または文法オブジェクトを構築するために使用する DLL の安全性を確認することをお勧めします。   >> Windows と Speech プラットフォームは、DLL またはスクリプトをサポートする文法では、文法インスタンスを構築するアプリケーションのセキュリティを提供します。   >> Web ページからダウンロードした場合、常に文法オブジェクトのスクリプトが実行、`Internet Zone`です。 共通言語ランタイム (CLR) は、文法定義を取得する読み込まれた DLL を分離します。"
  example:
  - "The following example constructs a Grammar object from a speech recognition grammar defined in a XML file (cities.xml). The content of the cities.xml file appears in the following XML example.  \n  \n```c#  \n// Load a cities grammar from a local file and return the grammar object.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item> Seattle </item>  \n      <item> Los Angeles </item>  \n      <item> New York </item>  \n      <item> Miami </item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")]

      public class Grammar
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor
  id: '#ctor'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス"
  syntax:
    content: protected Grammar ();
    parameters: []
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> <xref:System.IO.Stream></xref:System.IO.Stream>クラス。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、説明は、引数を必要とする初期化ハンドラーを定義しないでください。       このコンス トラクターを作成できます、<xref:System.Speech.Recognition.Grammar>インスタンスを次の形式から:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -これは、.cfg ファイル拡張子を持つファイルをバイナリにコンパイルされている文法コンス トラクターは、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 形式の文法ファイルをコンパイルします</xref:System.Speech.Recognition.Grammar>。 構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.Grammar>オブジェクト、XML 形式の文法の&1; つを使用して、事前に文法をコンパイルしてから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A></xref:System.Speech.Recognition.Grammar>。       SRGS 文法では、ルート ルールを定義できます。 作成する、<xref:System.Speech.Recognition.Grammar>オブジェクト、ストリームから、ルート ルールを指定して、使用して、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>または<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。       作成する、<xref:System.Speech.Recognition.Grammar>ストリームからオブジェクトを使用して相対ルール参照の解決に使用するベース URI を指定、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example creates a speech recognition grammar from a local SRGS file (cities.xml) using a file stream. The content of the cities.xml file appears following C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream and    \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromStream()  \n{  \n  string fileName = @\"c:\\temp\\cities.xml\";  \n  Grammar citiesGrammar =  \n    new Grammar(new FileStream(fileName, FileMode.Open));  \n  citiesGrammar.Name = \"Stream Cities Grammar\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "サポートされている形式で、音声認識の文法を説明するストリーム。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>ルート ルールが含まれていない、文法をについて説明します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "ストリームは、文法の有効な説明が含まれていないか、解決できないルール参照が含まれている文法について説明します。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  id: '#ctor(System.Speech.Recognition.GrammarBuilder)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、 <xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;> </xref>オブジェクト。"
  remarks: "使用しての詳細については、<xref:System.Speech.Recognition.GrammarBuilder>文法を定義するを参照してくださいクラス[文法を使用して GrammarBuilder の作成](http://msdn.microsoft.com/en-us/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)</xref:System.Speech.Recognition.GrammarBuilder>。"
  example:
  - "The following example creates a speech recognition grammar using <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects. The Grammar constructor creates a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.GrammarBuilder> object.  \n  \n```c#  \n  \n// Create a grammar using a GrammarBuilder and return the new grammar.   \nprivate static Grammar CreateGrammarBuilderGrammar()  \n{  \n  GrammarBuilder builder = new GrammarBuilder();  \n  \n  Choices cityChoice = new Choices (new string[]   \n  {\"Seattle\", \"New York\", \"Miami\", \"Los Angeles\"});  \n  \n  builder.Append(\"I would like to fly from\");  \n  builder.Append(cityChoice);  \n  builder.Append(\"to\");  \n  builder.Append(cityChoice);  \n  \n  Grammar citiesGrammar = new Grammar(builder);  \n  citiesGrammar.Name = \"GrammarBuilder Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.GrammarBuilder builder);
    parameters:
    - id: builder
      type: System.Speech.Recognition.GrammarBuilder
      description: "インスタンス<xref href=&quot;System.Speech.Recognition.GrammarBuilder&quot;></xref>音声認識の文法の制約を格納しています。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>オブジェクト。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>引数を必要とする初期化ハンドラーを含めることはできません</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>。       A<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>ルート ルールを持つことができます</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>。 作成する、<xref:System.Speech.Recognition.Grammar>を使用して、ルート ルールを指定するオブジェクト、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>または<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。       音声認識を作成する<xref:System.Speech.Recognition.Grammar>から、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>使用相対ルール参照の解決に使用するベース URI を指定し、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance, which is then used to construct a <xref:System.Speech.Recognition.Grammar> object.  \n  \n```c#  \nprivate static Grammar CreateSrgsDocumentGrammar()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Cities rule and add it to the document.  \n  SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n  \n  SrgsOneOf cityChoice = new SrgsOneOf();  \n  cityChoice.Add(new SrgsItem(\"Seattle\"));  \n  cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n  cityChoice.Add(new SrgsItem(\"New York\"));  \n  cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n  citiesRule.Add(cityChoice);  \n  document.Rules.Add(citiesRule);  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"I would like to fly from\");  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  item.Add(new SrgsText(\"to\"));  \n  item.Add(new SrgsRuleRef(citiesRule));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the Grammar object.  \n  Grammar citiesGrammar = new Grammar(document);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar\";  \n  \n  return citiesGrammar;  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "音声認識の文法の制約。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>srgsDocument</code>ルート ルールは含まれません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>解決できないルール参照が含まれています。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>ファイルからのクラスです。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、説明は、引数を必要とする初期化ハンドラーを定義しないでください。       このコンス トラクターを作成できます、<xref:System.Speech.Recognition.Grammar>インスタンスを次の形式から:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -これは、.cfg ファイル拡張子を持つファイルをバイナリにコンパイルされている文法コンス トラクターは、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 形式の文法ファイルをコンパイルします</xref:System.Speech.Recognition.Grammar>。 構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.Grammar>オブジェクト、XML 形式の文法の&1; つを使用して、事前に文法をコンパイルしてから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A></xref:System.Speech.Recognition.Grammar>。       SRGS 文法では、ルート ルールを定義できます。 作成する、<xref:System.Speech.Recognition.Grammar>オブジェクトの文字列から、ルート ルールを指定して、使用して、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。       作成する、<xref:System.Speech.Recognition.Grammar>相対ルール参照の解決に使用するベース URI を指定するオブジェクトでは、ファイル ストリームを使用してファイルを開き、<xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=fullName> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example loads a speech recognition grammar from a local SRGS file to build a <xref:System.Speech.Recognition.Grammar> object. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n// Load a cities grammar from a local file and  \n// return the new grammar.   \nprivate static Grammar CreateGrammarFromFile()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar\";  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path);
    parameters:
    - id: path
      type: System.String
      description: "サポートされている形式で、音声認識の文法を説明するファイルのパス。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>path</code>空の文字列が含まれています (&quot;&quot;)、またはファイルがルート ルールが含まれていない、文法について説明します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "このファイルは、有効な説明が含まれていないか、解決できないルール参照が含まれている文法について説明します。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  id: '#ctor(System.IO.Stream,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、<xref:System.IO.Stream>し、ルート ルールを指定します</xref:System.IO.Stream>。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、説明は、引数を必要とする初期化ハンドラーを定義しないでください。       このコンス トラクターを作成できます、<xref:System.Speech.Recognition.Grammar>インスタンスを次の形式から:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -これは、.cfg ファイル拡張子を持つファイルをバイナリにコンパイルされている文法コンス トラクターは、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 形式の文法ファイルをコンパイルします</xref:System.Speech.Recognition.Grammar>。 構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.Grammar>オブジェクト、XML 形式の文法の&1; つを使用して、事前に文法をコンパイルしてから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A></xref:System.Speech.Recognition.Grammar>。       作成する、<xref:System.Speech.Recognition.Grammar>ストリームから使用して相対ルール参照の解決に使用するベース URI を指定し、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file stream and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from an I/O stream, use a specific  \n// rule as the root of the grammar, and return the new grammar.   \nprivate static Grammar CreateGrammarFromStream2()  \n{  \n  FileInfo file = new FileInfo(@\"c:\\temp\\cities.xml\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), \"Main\");  \n  citiesGrammar.Name = \"Stream Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "サポートされている形式で、音声認識の文法を説明するストリーム。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>解決できない場合や、パブリックではなまたは<code>ruleName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明では、ルート ルールは定義しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "ストリームは、有効な説明が含まれていないか、解決できないルール参照が含まれている文法について説明します。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>オブジェクトをルート ルールを指定します。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>引数を必要とする初期化ハンドラーを含めることはできません</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>。       作成する、<xref:System.Speech.Recognition.Grammar>オブジェクトから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>使用相対ルール参照の解決に使用するベース URI を指定し、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and specifies a rule to use as the root rule of the grammar. The example constructs a <xref:System.Speech.Recognition.Grammar> object from the <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> instance and loads it into the speech recognition engine.  \n  \n```c#  \nusing System;  \nusing System.Speech.Recognition;  \nusing System.Speech.Recognition.SrgsGrammar;  \n  \nnamespace SampleRecognition  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n  \n    // Initialize an in-process speech recognition engine.  \n    {  \n      using (SpeechRecognitionEngine recognizer =  \n         new SpeechRecognitionEngine())  \n      {  \n  \n        // Create the SrgsDocument.  \n        SrgsDocument document = new SrgsDocument();  \n  \n        // Create the Cities rule and add it to the document.  \n        SrgsRule citiesRule = new SrgsRule(\"Cities\");  \n        citiesRule.Scope = SrgsRuleScope.Public;  \n  \n        SrgsOneOf cityChoice = new SrgsOneOf();  \n        cityChoice.Add(new SrgsItem(\"Seattle\"));  \n        cityChoice.Add(new SrgsItem(\"Los Angeles\"));  \n        cityChoice.Add(new SrgsItem(\"New York\"));  \n        cityChoice.Add(new SrgsItem(\"Miami\"));  \n  \n        citiesRule.Add(cityChoice);  \n        document.Rules.Add(citiesRule);  \n  \n        // Create the Main rule and add it to the document.  \n        SrgsRule mainRule = new SrgsRule(\"Main\");  \n        mainRule.Scope = SrgsRuleScope.Public;  \n  \n        mainRule.Add(new SrgsItem(\"I would like to fly from\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n        mainRule.Add(new SrgsItem(\"to\"));  \n        mainRule.Add(new SrgsRuleRef(citiesRule));  \n  \n        document.Rules.Add(mainRule);  \n  \n        // Create the Grammar object and specify which rule to use as the root.  \n        Grammar citiesGrammar = new Grammar(document,\"Main\");  \n  \n        // Load the grammar object to the recognizer.  \n        recognizer.LoadGrammarAsync(citiesGrammar);  \n  \n        // Attach a handler for the SpeechRecognized event.  \n        recognizer.SpeechRecognized +=  \n          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  \n  \n        // Set the input to the recognizer.  \n        recognizer.SetInputToDefaultAudioDevice();  \n  \n        // Start recognition.  \n        recognizer.RecognizeAsync();  \n        Console.WriteLine(\"Starting aynchronous recognition...\");  \n  \n        // Keep the console window open.  \n        Console.ReadLine();  \n      }  \n    }  \n  \n    // Handle the SpeechRecognized event.  \n    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n    {  \n      Console.WriteLine(\"  Speech recognized: \" + e.Result.Text);  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "音声認識の文法の制約。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の既定のルート ルールを使用する、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>解決できない場合や、パブリックではなまたは<code>ruleName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と<code>srgsDocument</code>ルート ルールが含まれていません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>解決できないルール参照が含まれています。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>ファイルからクラスおよびルート ルールを指定します。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、説明は、引数を必要とする初期化ハンドラーを定義しないでください。       このコンス トラクターを作成できます、<xref:System.Speech.Recognition.Grammar>インスタンスを次の形式から:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -これは、.cfg ファイル拡張子を持つファイルをバイナリにコンパイルされている文法コンス トラクターは、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 形式の文法ファイルをコンパイルします</xref:System.Speech.Recognition.Grammar>。 構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.Grammar>オブジェクト、XML 形式の文法の&1; つを使用して、事前に文法をコンパイルしてから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A></xref:System.Speech.Recognition.Grammar>。       作成する、<xref:System.Speech.Recognition.Grammar>を使用して相対ルール参照を解決するには、ファイルのファイル ストリームを開き、および使用するベース URI を指定する、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>コンス トラクター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。"
  example:
  - "The following example loads a local SRGS file (cities.xml) from a file and specifies a rule to use as the root of the grammar. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \n// Load a cities grammar from a local file, use a specific  \n// rule as the root of the grammar, and return the new grammar.  \nprivate static Grammar CreateGrammarFromFile2()  \n{  \n  Grammar citiesGrammar = new Grammar(@\"c:\\temp\\cities.xml\", \"Main\");  \n  citiesGrammar.Name = \"SRGS File Cities Grammar 2\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (string path, string ruleName);
    parameters:
    - id: path
      type: System.String
      description: "サポートされている形式で、音声認識の文法を説明するファイルのパス。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>解決できない場合や、パブリックではな<code>path</code>空の文字列 (&quot;&quot;)、または<code>ruleName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明では、ルート ルールは定義しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "このファイルは、有効な説明が含まれていないか、解決できないルール参照が含まれている文法について説明します。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、<xref:System.IO.Stream>し、ルート ルールを指定します</xref:System.IO.Stream>。"
  remarks: "初期化ハンドラーのパラメーターも指定することがあります。"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>入力/出力 (ファイル、VisualStudio リソース Dll を含む) を格納するオブジェクトの文法の仕様に接続されている</xref:System.IO.Stream>。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: parameters
      type: System.Object[]
      description: "指定された初期化ハンドラーに渡されるパラメーターを<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>エントリ ポイントまたはルート ルールのプロパティ、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>を作成する</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>。 このパラメーターを null にすることがあります。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>stream</code>文法に接続されている:-で指定された規則が含まれていない<code>ruleName</code>      -初期化パラメーターで指定されたものとは異なる必要があります<code>parameters</code>      -既定ベースで解決できない相対ルール参照が含まれて<xref:System.Uri>文法ルール"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  id: '#ctor(System.IO.Stream,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>ストリームからのクラスがルート ルールを指定し、基本の識別子 URI (Uniform Resource) 相対ルール参照を解決するのにを定義します。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、説明は、引数を必要とする初期化ハンドラーを定義しないでください。       このコンス トラクターを作成できます、<xref:System.Speech.Recognition.Grammar>インスタンスを次の形式から:-W3C に準拠する XML フォーマット ファイル[音声認識の文法の仕様 (SRGS) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201761) -これは、.cfg ファイル拡張子を持つファイルをバイナリにコンパイルされている文法コンス トラクターは、音声認識エンジンでの読み込みおよび消費の最適化をバイナリ形式を XML 形式の文法ファイルをコンパイルします</xref:System.Speech.Recognition.Grammar>。 構築するために必要な時間の量を減らすことができます、<xref:System.Speech.Recognition.Grammar>オブジェクト、XML 形式の文法の&1; つを使用して、事前に文法をコンパイルしてから、<xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>メソッド</xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A></xref:System.Speech.Recognition.Grammar>。       このコンス トラクターでは検証されません`baseUri`です。 ただし、`LoadGrammar`のメソッド、<xref:System.Speech.Recognition.SpeechRecognitionEngine>または<xref:System.Speech.Recognition.SpeechRecognizer>オブジェクトは、すべての文法の説明に規則参照を解決できない場合に例外をスローします</xref:System.Speech.Recognition.SpeechRecognizer></xref:System.Speech.Recognition.SpeechRecognitionEngine>。 場合`baseUri`は`null`、`LoadGrammar`メソッドはそれを解決できないルール参照を解決するのには、URI を使用します。 場合`baseUri`、ファイルを表す、`LoadGrammar`相対ルール参照を解決しようとしたときに、指定したファイルとファイルのディレクトリの両方を使用します。"
  example:
  - "The following example loads a local SRGS file (shuttle.xml) from a file stream. The file contains a relative rule reference to a rule in the cities.xml file, and specifies a base URI to use to resolve the rule reference. The content of the shuttle.xml and cities.xml files appears in the XML examples that follow the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateGrammarFromStream3()  \n{  \n  FileInfo file = new FileInfo(@\".\\shuttle.xml\");  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  \n  citiesGrammar.Name = \"Stream Cities Grammar 3\";  \n  return citiesGrammar;  \n}  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- shuttle.xml:   \n    Defines an SRGS grammar for asking about a shuttle service. This grammar  \n    references a Cities rule that is defined in the cities.xml grammar. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      Can I get a shuttle in  \n      <ruleref uri=\"cities.xml#Cities\"/>  \n    </item>  \n  </rule>  \n</grammar>  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "サポートされている形式で、音声認識の文法を説明するストリーム。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: baseUri
      type: System.Uri
      description: "文法の説明に相対的なルールの参照の解決に使用するベース URI または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>解決できない場合や、パブリックではなまたは<code>ruleName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明では、ルート ルールは定義しません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "ストリームは、有効な説明が含まれていないか、解決できないルール参照が含まれている文法について説明します。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラスのインスタンスから<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>文法のエントリ ポイントへの規則の名前を指定します。"
  remarks: "初期化ハンドラーのパラメーターも指定することがあります。"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "インスタンス<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>音声認識の文法の制約を格納しています。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: parameters
      type: System.Object[]
      description: "指定された初期化ハンドラーに渡されるパラメーターを<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>エントリ ポイントまたはルート ルールのプロパティ、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>を作成する</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>。 このパラメーターを null にすることがあります。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-パラメーターが含まれている値が無効です。      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>によって指定された<code> srgsDocument </code>で指定したルールが含まれていない<code> ruleName</code>です。      配列パラメーターの内容では、ルールの初期化のハンドラーのいずれかの引数は一致しません。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>オブジェクトがルート ルールを指定し、基本の識別子 URI (Uniform Resource) 相対ルール参照を解決するのにを定義します。"
  remarks: "このコンス トラクターが初期化ハンドラーにパラメーターを指定していないと、<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>引数を必要とする初期化ハンドラーを含めることはできません</xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>。       このコンス トラクターでは検証されません`baseUri`です。 ただし、`LoadGrammar`のメソッド、<xref:System.Speech.Recognition.SpeechRecognitionEngine>または<xref:System.Speech.Recognition.SpeechRecognizer>オブジェクトは、すべての文法の説明に規則参照を解決できない場合に例外をスローします</xref:System.Speech.Recognition.SpeechRecognizer></xref:System.Speech.Recognition.SpeechRecognitionEngine>。 場合`baseUri`は`null`、`LoadGrammar`メソッドはそれを解決できないルール参照を解決するのには、URI を使用します。 場合`baseUri`、ファイルを表します、`LoadGrammar`相対ルール参照を解決しようとしたとき、指定されたファイルとファイルのディレクトリの両方をメソッドが使用されます。"
  example:
  - "The following example creates a speech recognition grammar in an <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> that contains a relative rule reference to the cities.xml file, and specifies a URI to use to resolve the rule reference. The content of the cities.xml file appears in the XML example that follows the C# example.  \n  \n```c#  \n  \nprivate static Grammar CreateSrgsDocumentGrammar3()  \n{  \n  // Create the SrgsDocument.  \n  SrgsDocument document = new SrgsDocument();  \n  \n  // Create the Main rule and add it to the document.  \n  SrgsRule mainRule = new SrgsRule(\"Main\");  \n  mainRule.Scope = SrgsRuleScope.Public;  \n  \n  SrgsItem item = new SrgsItem(\"Can I get a shuttle in\");  \n  \n  // Create a relative URI for the cities rule.  \n  Uri ruleUri = new Uri(\"cities.xml#Cities\", UriKind.Relative);  \n  \n  item.Add(new SrgsRuleRef(ruleUri));  \n  \n  mainRule.Add(item);  \n  document.Rules.Add(mainRule);  \n  \n  // Set the root rule.  \n  document.Root = mainRule;  \n  \n  // Create the grammar.  \n  Uri baseUri = new Uri(@\"file://c:\\temp\\\");  \n  Grammar citiesGrammar = new Grammar(document, null, baseUri);  \n  citiesGrammar.Name = \"SrgsDocument Cities Grammar 3\";  \n  \n  return citiesGrammar;  \n}  \n  \n```  \n  \n```xml  \n  \n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>  \n<grammar version=\"1.0\" xml:lang=\"en-US\"  \n         xmlns=\"http://www.w3.org/2001/06/grammar\"  \n         tag-format=\"semantics/1.0\" root=\"Main\">  \n  \n  <!-- cities.xml:   \n    Defines an SRGS grammar for requesting a flight. This grammar includes  \n    a Cities rule that lists the cities that can be used for departures  \n    and destinations. -->  \n  \n  <rule id=\"Main\">  \n    <item>  \n      I would like to fly from <ruleref uri=\"#Cities\"/>  \n      to <ruleref uri=\"#Cities\"/>  \n    </item>  \n  </rule>  \n  \n  <rule id=\"Cities\" scope=\"public\">  \n    <one-of>  \n      <item>Seattle</item>  \n      <item>Los Angeles</item>  \n      <item>New York</item>  \n      <item>Miami</item>  \n    </one-of>  \n  </rule>  \n</grammar>  \n```"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "音声認識の文法の制約。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>の既定のルート ルールを使用する、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>です。"
    - id: baseUri
      type: System.Uri
      description: "相対的なルール参照の解決に使用するベース URI、 <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ruleName</code>解決できない場合や、パブリックではなまたは<code>ruleName</code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>と<code>srgsDocument</code>ルート ルールが含まれていません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>srgsDocument</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>srgsDocument</code>解決できないルール参照が含まれています。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  id: '#ctor(System.String,System.String,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>文法定義が含まれており、文法のエントリ ポイントへの規則の名前を指定するファイルからクラス."
  remarks: "初期化ハンドラーのパラメーターも指定することがあります。"
  syntax:
    content: public Grammar (string path, string ruleName, object[] parameters);
    parameters:
    - id: path
      type: System.String
      description: "文法の仕様を含むファイル、Dll などへのパス。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: parameters
      type: System.Object[]
      description: "指定された初期化ハンドラーに渡されるパラメーターを<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>エントリ ポイントまたはルート ルールのプロパティ、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>を作成する</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>。 このパラメーターを null にすることがあります。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-パラメーターが含まれている値が無効です。      -指定されたファイル<code> path </code>有効な文法またはで指定された規則が含まれていない<code> ruleName</code>です。      配列パラメーターの内容では、ルールの初期化のハンドラーのいずれかの引数は一致しません。      -文法が既定のベースで解決できないことの相対的なルール参照<xref:System.Uri>文法の規則</xref:System.Uri>。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  id: '#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラス、<xref:System.IO.Stream>ルート ルールと相対参照を解決するのには、ベース URI を指定します</xref:System.IO.Stream>。"
  remarks: "初期化ハンドラーのパラメーターも指定することがあります。"
  syntax:
    content: public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "A<xref:System.IO.Stream>入力/出力 (ファイル、VisualStudio リソース Dll を含む) を格納するオブジェクトの文法の仕様に接続されている</xref:System.IO.Stream>。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: baseUri
      type: System.Uri
      description: "文法の説明に相対的なルールの参照の解決に使用するベース URI または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: parameters
      type: System.Object[]
      description: "指定された初期化ハンドラーに渡されるパラメーターを<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>エントリ ポイントまたはルート ルールのプロパティ、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>を作成する</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>。 このパラメーターを null にすることがあります。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-パラメーターが含まれている値が無効です。      - <code> stream </code>で指定したルールが含まれていない、文法に接続されている<code> ruleName</code>です。      配列パラメーターの内容では、ルールの初期化のハンドラーのいずれかの引数は一致しません。      文法には、既定のベースで解決できない相対ルール参照が含まれて<xref:System.Uri>文法またはによって提供される URI 規則<code> baseUri </code></xref:System.Uri> 。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  id: '#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])'
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>クラスのインスタンスから<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>文法と相対参照を解決するのには、ベース URI へのエントリ ポイントにするルールの名前を指定します。"
  remarks: "初期化ハンドラーのパラメーターも指定することがあります。"
  syntax:
    content: public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);
    parameters:
    - id: srgsDocument
      type: System.Speech.Recognition.SrgsGrammar.SrgsDocument
      description: "インスタンス<xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;></xref>音声認識の文法の制約を格納しています。"
    - id: ruleName
      type: System.String
      description: "音声認識の文法のエントリ ポイントとして使用するルールの識別子または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>文法の説明の既定のルート ルールを使用します。"
    - id: baseUri
      type: System.Uri
      description: "文法の説明に相対的なルールの参照の解決に使用するベース URI または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: parameters
      type: System.Object[]
      description: "エントリ ポイントまたはのルート ルール<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>プロパティで指定された初期化ハンドラーに渡されるパラメーターを<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>を作成します。このパラメーターを null にすることがあります</xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit*>。"
  overload: System.Speech.Recognition.Grammar.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "-パラメーターが含まれている値が無効です。      - <xref href=&quot;System.Speech.Recognition.SrgsGrammar.SrgsDocument&quot;> </xref>によって指定された<code> srgsDocument </code>で指定された規則が含まれていない<code> ruleName</code>です。      配列パラメーターの内容では、ルールの初期化のハンドラーのいずれかの引数は一致しません。      -文法が既定のベースで解決できないことの相対的なルール参照<xref:System.Uri>文法またはによって提供される URI 規則<code> baseUri </code></xref:System.Uri> 。"
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Enabled
  id: Enabled
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得または設定を制御する値かどうか、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>音声認識エンジンによって認識を実行するために使用されます。"
  remarks: "インスタンス<xref:System.Speech.Recognition.Grammar>有効になっているまたは音声認識エンジンによって読み込まれるとは無関係に無効になっている可能性があります</xref:System.Speech.Recognition.Grammar>。"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Enabled&quot; name=&quot;Enabled&quot; href=&quot;&quot;> </xref>プロパティから返される<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>音声認識エンジンに文法を使用する、音声認識; 認識を実行できる場合それ以外の場合、プロパティを返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.IsStg
  id: IsStg
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "文法が厳密に型指定されたかどうかを取得します。"
  remarks: "厳密に型指定された<xref:System.Speech.Recognition.Grammar>オブジェクト (`IsStg` equals `true`) クライアント アプリケーションに厳密に型指定された結果 (オブジェクトではなく生のテキスト) を返すことができます</xref:System.Speech.Recognition.Grammar>。 たとえば、厳密に型指定された文法を返す可能性があります<xref:System.DateTime>生の認識された入力ではなくオブジェクトします</xref:System.DateTime>。       文法の規則にコードをアタッチすることにより、厳密に型指定された文法を実装できます。 認識エンジンが、特定の規則を処理するときは、として取得していますが、現在の部分的な結果を入力および関連するコードが実行されるテキスト情報は、さまざまな種類のオブジェクトになります。 これにより、クライアントをより簡単に拡張セマンティック チェックを使用して、複数のカルチャ、および内部の文法ロジックのサポートです。       厳密に型指定されたインスタンス<xref:System.Speech.Recognition.Grammar>オブジェクトは、通常、としてアセンブリ内のリソースから取得、<xref:System.Type>の共通言語ランタイム (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> さまざまな言語をサポートするために使用するローカライズされた型は、このような例を示します<xref:System.Speech.Recognition.Grammar>オブジェクト</xref:System.Speech.Recognition.Grammar>。"
  syntax:
    content: protected virtual bool IsStg { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_IsStg&quot; name=&quot;IsStg&quot; href=&quot;&quot;> </xref>プロパティから返される<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、文法は厳密に型指定されます。 それ以外の場合、プロパティを返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.IsStg*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Loaded
  id: Loaded
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得するかどうか、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>で音声認識エンジンが読み込まれました。"
  remarks: "1 回、<xref:System.Speech.Recognition.Grammar>が読み込まれての値<xref:System.Speech.Recognition.Grammar.Weight%2A>、および<xref:System.Speech.Recognition.Grammar.Priority%2A>は変更できません</xref:System.Speech.Recognition.Grammar.Priority%2A></xref:System.Speech.Recognition.Grammar.Weight%2A></xref:System.Speech.Recognition.Grammar>。"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public bool Loaded { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_Loaded&quot; name=&quot;Loaded&quot; href=&quot;&quot;> </xref>プロパティから返される<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> ; 音声認識エンジンに参照されている音声認識の文法が現在読み込まれている場合は、それ以外の場合、プロパティを返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.Loaded*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  id: LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref>メソッドのローカライズされたインスタンスを返します、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> <xref:System.Type>.</xref:System.Type>から派生したオブジェクト"
  remarks: "取得された文法に合わせてローカライズ`LoadLocalizedGrammarFromType`は通常厳密に型指定された (を参照してください<xref:System.Speech.Recognition.Grammar.IsStg%2A>厳密に型指定された文法の詳細について).</xref:System.Speech.Recognition.Grammar.IsStg%2A> 場合`onInitParameters`は null 参照 (Visual Basic では Nothing) をローカライズされた文法はありません開始メソッド、または引数を受け取らないメソッドのいずれかが必要です。"
  syntax:
    content: public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, object[] onInitParameters);
    parameters:
    - id: type
      type: System.Type
      description: "アセンブリでは、<xref:System.Type>に基づいてオブジェクトの<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref></xref:System.Type> 。"
    - id: onInitParameters
      type: System.Object[]
      description: "Localizedobject の初期化メソッドに渡されるパラメーターがに基づいて<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>です。 このパラメーターを null にすることがあります。"
    return:
      type: System.Speech.Recognition.Grammar
      description: "<xref uid=&quot;langword_csharp_LoadLocalizedGrammarFromType&quot; name=&quot;LoadLocalizedGrammarFromType&quot; href=&quot;&quot;> </xref>メソッドに基づく有効なオブジェクトを返します<xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、エラーが発生しました。"
  overload: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Name
  id: Name
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得または設定の名前、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The Grammar objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref>プロパティの名前を返します、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Priority
  id: Priority
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得または設定の優先度の値、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。"
  remarks: "`Priority`文法の&1; つ以上を同一の認識の結果が生成されますが、文法を選択するプロパティを使用します。 音声認識エンジンが&1; つ以上の音声認識の文法読み込まれ、有効になっている、入力に一致する一致では、認識エンジンから最適な結果しかどうか、認識エンジンが一番多いいる文法を使用して`Priority`です。 同一の認識の結果は、文法もが同じである場合`Priority`値、認識エンジンを使用している文法が定義されていません。"
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public int Priority { get; set; }
    return:
      type: System.Int32
      description: "<xref uid=&quot;langword_csharp_Priority&quot; name=&quot;Priority&quot; href=&quot;&quot;> </xref>プロパティを特定の相対的な優先順位を表す整数値を返します<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>です。 範囲を-128 から以上 127 以下です。 既定値は 0 です。"
  overload: System.Speech.Recognition.Grammar.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.ResourceName
  id: ResourceName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "現在の読み込みに使用されたバイナリのリソースの名前と値の設定を取得または<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>です。"
  syntax:
    content: protected string ResourceName { get; set; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_ResourceName&quot; name=&quot;ResourceName&quot; href=&quot;&quot;> </xref>プロパティは、バイナリ元となる、厳密に型指定された文法、使用しているリソースの名前を返します<xref href=&quot;System.Speech.Recognition.Grammar&quot;></xref>が読み込まれました。"
  overload: System.Speech.Recognition.Grammar.ResourceName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.RuleName
  id: RuleName
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "ルート ルールまたはエントリ ポイントの名前を取得、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。"
  remarks: "構築するために、<xref:System.Speech.Recognition.Grammar>オブジェクトしそのルート ルールの名前を設定のいずれかを使用して、<xref:System.Speech.Recognition.Grammar.%23ctor%2A>を受け取るコンス トラクター、`ruleName`パラメーター</xref:System.Speech.Recognition.Grammar.%23ctor%2A> </xref:System.Speech.Recognition.Grammar> 。       場合のルート ルール、<xref:System.Speech.Recognition.Grammar>名前を持たない、プロパティを返す`null`</xref:System.Speech.Recognition.Grammar>。       ルート ルール<xref:System.Speech.Recognition.Grammar>からインスタンスが構築された<xref:System.Speech.Recognition.GrammarBuilder>オブジェクト通常ない名前を付ける RuleName を返すように`null`</xref:System.Speech.Recognition.GrammarBuilder></xref:System.Speech.Recognition.Grammar>。"
  example:
  - "The following example writes information about a <xref:System.Speech.Recognition.Grammar> object to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \n  \nprivate static void DumpGrammarStatus(Grammar item)  \n{  \n  Console.WriteLine(\"Grammar name is {0}:\", item.Name);  \n  Console.WriteLine(\"  The Grammar {0} loaded.\",  \n    item.Loaded ? \"is\" : \"is not\");  \n  Console.WriteLine(\"  The Grammar {0} enabled.\",  \n    item.Enabled ? \"is\" : \"is not\");  \n  if (item.RuleName != null)  \n  {  \n    Console.WriteLine(\"  The root rule is {0}.\", item.RuleName);  \n  }  \n  else  \n  {  \n    Console.WriteLine(\"  The Grammar does not specify a root rule.\");  \n  }  \n}  \n```"
  syntax:
    content: public string RuleName { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_RuleName&quot; name=&quot;RuleName&quot; href=&quot;&quot;> </xref>プロパティが参照されている音声認識の文法のルート ルールの識別子を取得します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Recognition.Grammar.RuleName*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  id: SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
  type: Event
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "音声認識エンジンでは、認識を使用してを実行するときに発生する、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。"
  remarks: "音声認識エンジンにも発生する`SpeechRecognized`イベントの入力を認識するとします。 <xref:System.Speech.Recognition.Grammar>オブジェクトの SpeechRecognized イベントは、音声認識エンジンの前に`SpeechRecognized`イベント</xref:System.Speech.Recognition.Grammar>。 詳細については、次を参照してください、 <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>、 <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>、および<xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>イベント。</xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> </xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName> </xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName> 。       いずれかのタスクは、特定の文法に固有のハンドラーを常に処理する、<xref:System.Speech.Recognition.Grammar>オブジェクトの SpeechRecognized イベント</xref:System.Speech.Recognition.Grammar>。"
  example:
  - "The following example shows the use of an event handler for the <xref:System.Speech.Recognition.Grammar> object's SpeechRecognized event. It outputs the recognition results to the [console](http://go.microsoft.com/fwlink/?LinkId=159613).  \n  \n```c#  \npublic partial class Form1 : Form  \n{  \n  SpeechRecognitionEngine sre;  \n  \n  public Form1()  \n  {  \n  InitializeComponent();  \n  \n  // Create an in-process speech recognizer.  \n  sre = new SpeechRecognitionEngine();  \n  \n  // Configure input to the speech recognizer.  \n  sre.SetInputToDefaultAudioDevice();  \n  \n  // Create a simple grammar and load it.  \n  Grammar testGrammar = new Grammar(new GrammarBuilder(\"testing\"));  \n  sre.LoadGrammarAsync(testGrammar);  \n  \n  // Add a handler for the grammar's speech recognized event.  \n  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  \n  \n  // Start asynchronous speech recognition.  \n  sre.RecognizeAsync();  \n  }  \n  \n  // Handle the grammar's SpeechRecognized event, output the recognized text.  \n  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  \n  {  \n    Console.WriteLine(\"Recognized text: \" + e.Result.Text);  \n  }  \n}  \n```"
  syntax:
    content: public event EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs> SpeechRecognized;
    return:
      type: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  id: StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "<xref uid=&quot;langword_csharp_StgInit&quot; name=&quot;StgInit&quot; href=&quot;&quot;> </xref>メソッドは、厳密に型指定された文法を初期化します。"
  remarks: "厳密に型指定された<xref:System.Speech.Recognition.Grammar>オブジェクト (`IsStg` equals `true`) クライアント アプリケーションに厳密に型指定された結果 (オブジェクトではなく生のテキスト) を返すことができます</xref:System.Speech.Recognition.Grammar>。 たとえば、厳密に型指定された文法を返す可能性があります<xref:System.DateTime>生の認識された入力ではなくオブジェクトします</xref:System.DateTime>。       文法の規則にコードをアタッチすることにより、厳密に型指定された文法を実装できます。 認識エンジンが、特定の規則を処理するときは、として取得していますが、現在の部分的な結果を入力および関連するコードが実行されるテキスト情報は、さまざまな種類のオブジェクトになります。 これにより、クライアントをより簡単に拡張セマンティック チェックを使用して、複数のカルチャ、および内部の文法ロジックのサポートです。       厳密に型指定されたインスタンス<xref:System.Speech.Recognition.Grammar>オブジェクトは、通常、としてアセンブリ内のリソースから取得、<xref:System.Type>の共通言語ランタイム (CLR).</xref:System.Type> </xref:System.Speech.Recognition.Grammar> さまざまな言語をサポートするために使用するローカライズされた型は、このような例を示します<xref:System.Speech.Recognition.Grammar>オブジェクト</xref:System.Speech.Recognition.Grammar>。"
  syntax:
    content: protected void StgInit (object[] parameters);
    parameters:
    - id: parameters
      type: System.Object[]
      description: "厳密に型指定された文法を初期化するために渡されるパラメーターです。このパラメーターを null にすることがあります。"
  overload: System.Speech.Recognition.Grammar.StgInit*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.Grammar.Weight
  id: Weight
  parent: System.Speech.Recognition.Grammar
  langs:
  - csharp
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "取得または設定の重みの値、 <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref>オブジェクト。"
  remarks: "認識エンジンの使用の複雑な**重み**、として直接<xref:System.Speech.Recognition.Grammar.Priority%2A>.</xref:System.Speech.Recognition.Grammar.Priority%2A>と予測可能なは、特定の文法のパフォーマンスに与える影響       音声認識は、重み付けされたシステムです。 文法の重み、代替方法については、文法内で定義されている重みや音声モデルで定義されている確率の組み合わせに基づいてすべての認識可能なパスを評価します。 音声認識エンジンでは、これらの重み付けと順位付けの潜在的な代替認定する確率の組み合わせを使用します。 高い重みを使用して、文法より下位の重みを使用して、文法より認識代替の順位に影響を与えます。       重さのプロパティの音声認識エンジンへの影響は、認識エンジンの実装に依存します。 重さのプロパティは、アプリケーションの音声認識の精度のチューニングに使用できますは、完全な情報を使用して 認識エンジンと特定の認識環境の制御された診断の調査後にのみ使用する必要があります。"
  example:
  - "The following example creates two <xref:System.Speech.Recognition.Grammar> objects, one for digits and one for fractions. The <xref:System.Speech.Recognition.Grammar> objects are assigned names and relative weights and priorities, and loaded by an in-process speech recognizer. The `CreateDigitsGrammar`, `CreateFractionsGrammar`, and `recognizer_SpeechRecognized` methods are not shown here.  \n  \n```c#  \n  \n// Create a Grammar for recognizing numeric digits.  \nGrammar digitsGrammar = CreateDigitsGrammar();  \ndigitsGrammar.Name = \"Digits Grammar\";  \ndigitsGrammar.Priority = 2;  \ndigitsGrammar.Weight = 0.6f;  \n  \n// Create a Grammar for recognizing fractions.  \nGrammar fractionsGrammar = CreateFractionsGrammar();  \nfractionsGrammar.Name = \"Fractions Grammar\";  \nfractionsGrammar.Priority = 1;  \nfractionsGrammar.Weight = 1f;  \n  \n// Create an in-process speech recognizer.  \nSpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  \n  \nrecognizer.SpeechRecognized +=  \n  new EventHandler<SpeechRecognizedEventArgs>(  \n    recognizer_SpeechRecognized);  \n  \n// Load the digits and fractions Grammar objects.  \nrecognizer.LoadGrammar(digitsGrammar);  \nrecognizer.LoadGrammar(fractionsGrammar);  \n  \n// Start recognition.  \nrecognizer.SetInputToDefaultAudioDevice();  \nrecognizer.RecognizeAsync(RecognizeMode.Multiple);  \n```"
  syntax:
    content: public float Weight { get; set; }
    return:
      type: System.Single
      description: "<xref uid=&quot;langword_csharp_Weight&quot; name=&quot;Weight&quot; href=&quot;&quot;> </xref>浮動小数点値の音声入力を処理するときに、認識エンジンのインスタンスが、文法に割り当てる必要があります相対的な重みを示すプロパティを返します。 範囲は 0.0 から 1.0 までの値です。 既定値は 1.0 です。"
  overload: System.Speech.Recognition.Grammar.Weight*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Speech.Recognition.Grammar.#ctor
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar()
  nameWithType: Grammar.Grammar()
  fullName: System.Speech.Recognition.Grammar.Grammar()
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream)
  nameWithType: Grammar.Grammar(Stream)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(GrammarBuilder)
  nameWithType: Grammar.Grammar(GrammarBuilder)
  fullName: System.Speech.Recognition.Grammar.Grammar(GrammarBuilder)
- uid: System.Speech.Recognition.GrammarBuilder
  parent: System.Speech.Recognition
  isExternal: false
  name: GrammarBuilder
  nameWithType: GrammarBuilder
  fullName: System.Speech.Recognition.GrammarBuilder
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument)
  nameWithType: Grammar.Grammar(SrgsDocument)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument)
- uid: System.Speech.Recognition.SrgsGrammar.SrgsDocument
  parent: System.Speech.Recognition.SrgsGrammar
  isExternal: false
  name: SrgsDocument
  nameWithType: SrgsDocument
  fullName: System.Speech.Recognition.SrgsGrammar.SrgsDocument
- uid: System.Speech.Recognition.Grammar.#ctor(System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String)
  nameWithType: Grammar.Grammar(String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String)
  nameWithType: Grammar.Grammar(Stream,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String)
  nameWithType: Grammar.Grammar(SrgsDocument,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String)
  nameWithType: Grammar.Grammar(String,String)
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String)
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri)
  nameWithType: Grammar.Grammar(Stream,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri)
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri)
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri)
- uid: System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(String,String,Object[])
  nameWithType: Grammar.Grammar(String,String,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(String,String,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(Stream,String,Uri,Object[])
  nameWithType: Grammar.Grammar(Stream,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(Stream,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar(SrgsDocument,String,Uri,Object[])
  nameWithType: Grammar.Grammar(SrgsDocument,String,Uri,Object[])
  fullName: System.Speech.Recognition.Grammar.Grammar(SrgsDocument,String,Uri,Object[])
- uid: System.Speech.Recognition.Grammar.Enabled
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
  fullName: System.Speech.Recognition.Grammar.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Recognition.Grammar.IsStg
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
  fullName: System.Speech.Recognition.Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
  fullName: System.Speech.Recognition.Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType(Type,Object[])
  nameWithType: Grammar.LoadLocalizedGrammarFromType(Type,Object[])
  fullName: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(Type,Object[])
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Speech.Recognition.Grammar.Name
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
  fullName: System.Speech.Recognition.Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
  fullName: System.Speech.Recognition.Grammar.Priority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.Grammar.ResourceName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
  fullName: System.Speech.Recognition.Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
  fullName: System.Speech.Recognition.Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.SpeechRecognized
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: SpeechRecognized
  nameWithType: Grammar.SpeechRecognized
  fullName: System.Speech.Recognition.Grammar.SpeechRecognized
- uid: System.EventHandler{System.Speech.Recognition.SpeechRecognizedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<SpeechRecognizedEventArgs>
  nameWithType: EventHandler<SpeechRecognizedEventArgs>
  fullName: System.EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Speech.Recognition.SpeechRecognizedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.SpeechRecognizedEventArgs
    name: SpeechRecognizedEventArgs
    nameWithType: SpeechRecognizedEventArgs
    fullName: SpeechRecognizedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.Grammar.StgInit(System.Object[])
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit(Object[])
  nameWithType: Grammar.StgInit(Object[])
  fullName: System.Speech.Recognition.Grammar.StgInit(Object[])
- uid: System.Speech.Recognition.Grammar.Weight
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
  fullName: System.Speech.Recognition.Grammar.Weight
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.Grammar.#ctor*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Grammar
  nameWithType: Grammar.Grammar
- uid: System.Speech.Recognition.Grammar.Enabled*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Enabled
  nameWithType: Grammar.Enabled
- uid: System.Speech.Recognition.Grammar.IsStg*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: IsStg
  nameWithType: Grammar.IsStg
- uid: System.Speech.Recognition.Grammar.Loaded*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Loaded
  nameWithType: Grammar.Loaded
- uid: System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: LoadLocalizedGrammarFromType
  nameWithType: Grammar.LoadLocalizedGrammarFromType
- uid: System.Speech.Recognition.Grammar.Name*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Name
  nameWithType: Grammar.Name
- uid: System.Speech.Recognition.Grammar.Priority*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Priority
  nameWithType: Grammar.Priority
- uid: System.Speech.Recognition.Grammar.ResourceName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: ResourceName
  nameWithType: Grammar.ResourceName
- uid: System.Speech.Recognition.Grammar.RuleName*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: RuleName
  nameWithType: Grammar.RuleName
- uid: System.Speech.Recognition.Grammar.StgInit*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: StgInit
  nameWithType: Grammar.StgInit
- uid: System.Speech.Recognition.Grammar.Weight*
  parent: System.Speech.Recognition.Grammar
  isExternal: false
  name: Weight
  nameWithType: Grammar.Weight
