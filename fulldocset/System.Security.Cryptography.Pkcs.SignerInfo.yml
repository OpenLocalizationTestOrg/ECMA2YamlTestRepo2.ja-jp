### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  id: SignerInfo
  children:
  - System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  - System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  - System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  - System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  - System.Security.Cryptography.Pkcs.SignerInfo.Version
  langs:
  - csharp
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
  type: Class
  summary: 'SignerInfo クラスに関連付けられている署名者を表す、 <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> CMS/PKCS #7 メッセージを表すオブジェクト。'
  remarks: "いずれかをメッセージの内容や署名経由 SignerInfo クラスによって表されるシグネチャができます。 後者の署名と呼びます、*副署名*です。       CMS/PKCS #7 のこの実装には、副署名のレベルを 1 つだけがサポートしています。  つまり、副署名を形成する、署名を署名することができますが、その副署名を再度署名することはできません。       このクラスには、パブリックなコンス トラクターがありません。そのため、そのパブリックにインスタンス化できません。 これは、読み取り専用クラスからアクセスできる、<xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>プロパティ</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=fullName>。"
  syntax:
    content: public sealed class SignerInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  id: Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "証明書のプロパティは、署名者情報に関連付けられている署名証明書を取得します。"
  remarks: "署名証明書が署名を使用して時刻に含まれていない場合、<xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>プロパティ、その証明書は返されません</xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref>署名証明書を表すオブジェクト。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'CheckHash メソッドでは、CMS/PKCS #7 メッセージの署名者情報のデータの整合性を確認します。 CheckHash はサブジェクトを使用する特定のセキュリティ インフラストラクチャのアプリケーションで使用される特殊なメソッド、 **HashOnly**のメンバー、 <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref>列挙型を設定するとき、 <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref>オブジェクト。 このメソッドでは、デジタル署名の検証は関係しませんので、CheckHash は署名者情報を認証できません。 汎用の CMS/PKCS #7 メッセージの署名者情報と副署名の信頼性、整合性の確認、使用、 &lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt;または&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt;メソッドです。'
  remarks: 'このメソッドは、CMS/PKCS #7 メッセージの署名者情報の認証を提供していません。'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature メソッドは、メッセージのデジタル署名を検証し、必要に応じて、証明書を検証します。"
  remarks: "このメソッドは、デジタル署名の検証に失敗した、または検証の要件が満たされなかった場合に例外をスローします。       複雑な検証が必要な場合、呼び出し元ように指定できます、署名のみが検証を使用して、<xref:System.Security.Cryptography.X509Certificates.X509Chain>カスタム検証を実行するオブジェクト</xref:System.Security.Cryptography.X509Certificates.X509Chain>。"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "デジタル署名のみを検証するかどうかを指定するブール値。 場合`verifySignatureOnly`は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、署名のみを検証します。 場合`verifySignatureOnly`は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、デジタル署名を検証、証明書チェーンを検証すると、および証明書の目的が検証されます。 証明書の目的では証明書のキー使用法があるない場合、またはキーの使用法には、デジタル署名と否認不可がサポートされている場合、有効と見なされます。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 参照は、有効な引数として受け付けないメソッドに渡されました。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CheckSignature メソッドは、指定された証明書のコレクションを使用して、メッセージのデジタル署名を検証し、必要に応じて、証明書を検証します。"
  remarks: "このメソッドは、デジタル署名の検証に失敗した、または検証の要件が満たされなかった場合に例外をスローします。       複雑な検証が必要な場合、呼び出し元ように指定できます、署名のみが検証を使用して、<xref:System.Security.Cryptography.X509Certificates.X509Chain>カスタム検証を実行するオブジェクト</xref:System.Security.Cryptography.X509Certificates.X509Chain>。"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref>チェーンの検証に使用できるオブジェクト。 チェーンの検証を使用するために使用する追加の証明書がないかどうかは&lt;xref:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature%28System.Boolean%29&gt; CheckSignature の代わりにします。"
    - id: verifySignatureOnly
      type: System.Boolean
      description: "デジタル署名のみを検証するかどうかを指定するブール値。 場合`verifySignatureOnly`は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、署名のみを検証します。 場合`verifySignatureOnly`は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、デジタル署名を検証、証明書チェーンを検証すると、および証明書の目的が検証されます。 証明書の目的では証明書のキー使用法があるない場合、またはキーの使用法には、デジタル署名と否認不可がサポートされている場合、有効と見なされます。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 参照は、有効な引数として受け付けないメソッドに渡されました。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "メソッドの呼び出しは、オブジェクトの現在の状態に対して無効でした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  id: ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature メソッドは、署名証明書を選択するように求める、副署名を作成し、CMS/PKCS #7 メッセージに署名を追加します。 副署名は、1 つのレベルに制限されます。'
  remarks: "CMS/PKCS #7 のこの実装には、副署名のレベルを 1 つだけがサポートしています。  つまり、副署名を形成する、署名を署名することができますが、その副署名を再度署名することはできません。       このメソッドは、このメッセージの署名者を選択するユーザー インターフェイスを表示します。 現在のプロセスが実行されている必要があります*ユーザー対話モード*つまりを<xref:System.Environment.UserInteractive%2A?displayProperty=fullName>プロパティに設定されている`true`</xref:System.Environment.UserInteractive%2A?displayProperty=fullName>。 サービスのプロセスまたは Web アプリケーション内の実行中である場合を除き、プロセスはユーザー対話モードで通常です。       署名証明書が次の条件が一覧に表示されます。-証明書が関連付けられている秘密キーです。      -証明書はその有効期間です。      -証明書は、キー使用法ありませんまたはデジタル署名と否認不可をサポートするキー使用法がします。       署名者の証明書を選択、My ストア。      ## 次のアクセス許可がユーザー インターフェイスを表示するために必要な .NET framework のセキュリティ:-<xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>署名キーにアクセスする次の権限が必要:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 参照は、有効な引数として受け付けないメソッドに渡されました。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'ComputeCounterSignature メソッドは、指定された署名を使用して、副署名を作成し、CMS/PKCS #7 メッセージに署名を追加します。 副署名は、1 つのレベルに制限されます。'
  remarks: "CMS/PKCS #7 のこの実装には、副署名のレベルを 1 つだけがサポートしています。  つまり、副署名を形成する、署名を署名することができますが、その副署名を再度署名することはできません。      ## 次のアクセス許可は、署名キーにアクセスするために必要な .NET framework のセキュリティ:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  syntax:
    content: public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref>カウンター署名者を表すオブジェクト。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 参照は、有効な引数として受け付けないメソッドに渡されました。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  id: CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "CounterSignerInfos プロパティは、署名者情報に関連付けられているカウンターの署名者のセットを取得します。"
  remarks: 'CMS/PKCS #7 のこの実装には、副署名のレベルを 1 つだけがサポートしています。 つまり、副署名を形成する、署名を署名することができますが、その副署名を再度署名することはできません。'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref>カウンター署名者の署名者情報を表すコレクション。 カウンターの署名がない場合は、プロパティ値は空のコレクションです。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  id: DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "DigestAlgorithm プロパティの取得、 <xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>署名の計算に使用するハッシュ アルゴリズムを表すオブジェクト。"
  syntax:
    content: public System.Security.Cryptography.Oid DigestAlgorithm { get; }
    return:
      type: System.Security.Cryptography.Oid
      description: "<xref href=&quot;System.Security.Cryptography.Oid&quot;> </xref>署名で使用されるハッシュ アルゴリズムを表すオブジェクト。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  id: RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature メソッドは、指定したインデックスの位置、副署名を削除、<xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>コレクションです</xref:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*>。"
  syntax:
    content: public void RemoveCounterSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "副署名を削除するの&0; から始まるインデックス。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "RemoveCounterSignature メソッドが、指定された副署名を削除<xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;></xref>オブジェクト。"
  syntax:
    content: public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);
    parameters:
    - id: counterSignerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref>を削除する、副署名を表すオブジェクト。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Null 参照は、有効な引数として受け付けないメソッドに渡されました。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "引数の値は、呼び出されたメソッドで定義されている値の許容範囲外でした。"
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "暗号操作を完了できませんでした。"
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  id: SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignedAttributes プロパティの取得、 <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>署名者情報に関連付けられている署名付きの属性のコレクション。 符号付きの属性は、メッセージのコンテンツの残りの部分と共に署名します。"
  remarks: "含まれる可能性が符号付きの属性の例、 <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>SignedAttributes プロパティによって取得されたコレクションは、<xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime>署名時刻属性</xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime></xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>。       符号付きの属性は、の残りの部分と共に署名、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容</xref:System.Security.Cryptography.Pkcs.SignedCms>。 これは、正常に署名を確認するパーティがこれらの属性の内容が本物でと、変更されていないことの信頼度を持つことができることを意味します。       A<xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>オブジェクトおよび<xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest>オブジェクトが自動的に生成され、SignedAttributes プロパティに配置されるたびに、<xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName>対応する署名者のプロパティが空ではありません</xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=fullName></xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest></xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType>。"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>符号付きの属性を表すコレクション。 符号付きの属性がない場合は、プロパティ値は空のコレクションです。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  id: SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "SignerIdentifier プロパティでは、署名者情報に関連付けられている署名者の証明書識別子を取得します。"
  syntax:
    content: public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SubjectIdentifier
      description: "A <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifier&quot;> </xref>署名者情報に関連付けられている証明書を一意に識別するオブジェクト。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  id: UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "UnsignedAttributes プロパティの取得、 <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>関連付けられている署名されていない属性のコレクション、 <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref>コンテンツ。 署名されていない属性は、署名が無効に変更できます。"
  remarks: "残りの部分と符号なしの属性が署名されていない、<xref:System.Security.Cryptography.Pkcs.SignedCms>メッセージの内容</xref:System.Security.Cryptography.Pkcs.SignedCms>。 場合でも、パーティは、正常に署名を検証、符号なしの属性は変更されている可能性があり、完全性や整合性をあるとは見なされない必要があります。       含まれる可能性が符号なしの属性の使用例、 <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>UnsignedAttributes プロパティによって取得されたコレクションは副署名します</xref:System.Security.Cryptography.CryptographicAttributeObjectCollection>。"
  syntax:
    content: public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }
    return:
      type: System.Security.Cryptography.CryptographicAttributeObjectCollection
      description: "A <xref href=&quot;System.Security.Cryptography.CryptographicAttributeObjectCollection&quot;> </xref>符号なしの属性を表すコレクション。 符号なしの属性がない場合は、プロパティ値は空のコレクションです。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  langs:
  - csharp
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Version プロパティは、署名者情報のバージョンを取得します。"
  remarks: 'バージョンは、メッセージが PKCS #7 メッセージまたは Cryptographic Message Syntax (CMS) メッセージであるかどうかを判断します。 CMS は、PKCS #7 の新しいスーパー セットです。'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: "署名者情報のバージョンを指定する整数値。"
  overload: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash()
  nameWithType: SignerInfo.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignerInfo.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature()
  nameWithType: SignerInfo.ComputeCounterSignature()
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature()
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature(CmsSigner)
  nameWithType: SignerInfo.ComputeCounterSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Oid
  parent: System.Security.Cryptography
  isExternal: false
  name: Oid
  nameWithType: Oid
  fullName: System.Security.Cryptography.Oid
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(Int32)
  nameWithType: SignerInfo.RemoveCounterSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature(SignerInfo)
  nameWithType: SignerInfo.RemoveCounterSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.CryptographicAttributeObjectCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicAttributeObjectCollection
  nameWithType: CryptographicAttributeObjectCollection
  fullName: System.Security.Cryptography.CryptographicAttributeObjectCollection
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifier
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifier
  nameWithType: SubjectIdentifier
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
  fullName: System.Security.Cryptography.Pkcs.SignerInfo.Version
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Certificate*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Certificate
  nameWithType: SignerInfo.Certificate
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckHash
  nameWithType: SignerInfo.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CheckSignature
  nameWithType: SignerInfo.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: ComputeCounterSignature
  nameWithType: SignerInfo.ComputeCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: CounterSignerInfos
  nameWithType: SignerInfo.CounterSignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: DigestAlgorithm
  nameWithType: SignerInfo.DigestAlgorithm
- uid: System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: RemoveCounterSignature
  nameWithType: SignerInfo.RemoveCounterSignature
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignedAttributes
  nameWithType: SignerInfo.SignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: SignerIdentifier
  nameWithType: SignerInfo.SignerIdentifier
- uid: System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: UnsignedAttributes
  nameWithType: SignerInfo.UnsignedAttributes
- uid: System.Security.Cryptography.Pkcs.SignerInfo.Version*
  parent: System.Security.Cryptography.Pkcs.SignerInfo
  isExternal: false
  name: Version
  nameWithType: SignerInfo.Version
