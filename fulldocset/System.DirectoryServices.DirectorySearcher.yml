### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Active Directory ドメイン サービスに対してクエリを実行します。"
  remarks: "DirectorySearcher オブジェクトを使用すると、検索して、ライトウェイト ディレクトリ アクセス プロトコル (LDAP) を使用して Active Directory ドメイン サービス階層に対してクエリを実行します。 LDAP は、のみシステム提供の Active Directory サービス インターフェイス (ADSI) プロバイダー ディレクトリの検索をサポートします。 管理者が行うことができます、変更、および、階層内にあるオブジェクトを削除します。 詳細については、次を参照してください。[を使用して System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949)です。       DirectorySearcher のインスタンスを作成するときに、ルートを取得して、取得するプロパティの省略可能なリストを指定します。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>プロパティでは、次のタスクを実行する他のプロパティを設定することができます:-ローカル コンピューターの検索結果をキャッシュします</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>。 設定、<xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>プロパティを`true`ローカル コンピューター上のディレクトリ情報を格納します</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>。 更新プログラムがこのローカル キャッシュに加えられたし、Active Directory ドメイン サービスにコミットされる場合にのみ、<xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>メソッドが呼び出されます</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>。      指定を検索する時間の長さを使用して、<xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>プロパティ</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>。      -属性名のみを取得します。 設定、<xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>プロパティを`true`値が割り当てられている属性の名前のみを取得します</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>。      -ページング検索を実行します。 設定、<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>ページング検索で返されるオブジェクトの最大数を指定するプロパティ</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>。 ページ検索を実行しない場合は、設定、<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>をゼロの既定のプロパティ</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>。      戻るには、エントリの最大数を使用して指定、<xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>プロパティ</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>。 設定した場合、<xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>プロパティを既定値の 0、サーバーにより決定された既定値は 1000 エントリ</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>。      > [!NOTE] > 返されるエントリと時間の制限の最大数を超える場合、サーバーで設定されている制限、サーバーの設定の上書きコンポーネントです。       DirectorySearcher クラスのインスタンスの初期プロパティ値の一覧は、次を参照してください、<xref:System.DirectoryServices.DirectorySearcher.%23ctor>コンス トラクター。</xref:System.DirectoryServices.DirectorySearcher.%23ctor> 。      > [!NOTE] > このクラスを使用する前に Active Directory ドメイン サービスの基本的な知識があると見なされます。 詳細については、次を参照してください、<xref:System.DirectoryServices?displayProperty=fullName>の概要。</xref:System.DirectoryServices?displayProperty=fullName> 。"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>既定値を持つクラス。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 参照 (`Nothing` Visual Basic で) |  |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot;(objectClass = *)&quot;|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空の<xref:System.Collections.Specialized.StringCollection>オブジェクト |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>クラスの指定した検索のルートを使用します。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot;(objectClass = *)&quot;|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空の<xref:System.Collections.Specialized.StringCollection>オブジェクト |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "検索を開始する Active Directory ドメイン サービス階層内のノードです。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>指定した検索フィルターを持つクラス。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 参照 (`Nothing` Visual Basic で) |  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空の<xref:System.Collections.Specialized.StringCollection>オブジェクト |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>指定された検索のルートと検索のフィルターを持つクラス。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|空の<xref:System.Collections.Specialized.StringCollection>オブジェクトです |。  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "検索を開始する Active Directory ドメイン サービス階層内のノードです。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>。"
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>指定した検索フィルターおよび取得するプロパティを持つクラス。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 参照 (`Nothing` Visual Basic で) |  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
    - id: propertiesToLoad
      type: System.String[]
      description: "検索中に取得するプロパティのセット。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>指定した検索のルート、検索フィルター、および取得するプロパティを持つクラス."
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "検索を開始する Active Directory ドメイン サービス階層内のノードです。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>。"
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
    - id: propertiesToLoad
      type: System.String[]
      description: "検索中に取得されるプロパティのセット。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>クラスで指定した検索をフィルター処理、プロパティを取得、およびスコープを検索します。"
  remarks: "次の表の初期プロパティ値を示しています、<xref:System.DirectoryServices.DirectorySearcher>オブジェクト</xref:System.DirectoryServices.DirectorySearcher>。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Null 参照 (`Nothing` Visual Basic で) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
    - id: propertiesToLoad
      type: System.String[]
      description: "検索中に取得するプロパティのセット。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>。"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "サーバーによって監視される検索のスコープです。 <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>プロパティは、この値に初期化します。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>指定した検索のルート、検索フィルターを取得、および検索スコープのプロパティを持つクラス。"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "検索を開始する Active Directory ドメイン サービス階層内のノードです。 <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>。"
    - id: filter
      type: System.String
      description: "ライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式の検索フィルター文字列。 <xref:System.DirectoryServices.DirectorySearcher.Filter*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.Filter*>。"
    - id: propertiesToLoad
      type: System.String[]
      description: "検索中に取得するプロパティのセット。 <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>プロパティは、この値に初期化します</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>。"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "サーバーによって監視される検索のスコープです。 <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>プロパティは、この値に初期化します。"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索が非同期的に実行されるかどうかを示す値を設定します。"
  remarks: "非同期の検索は、同時に追加の結果の検索中に見つかった場合は、結果を表示できます。 これは、リスト ボックスを設定するなどのタスクに役立ちます。       このプロパティは、の既定の設定`false`です。"
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、検索は非同期です。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>それ以外の場合。"
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはで検索する識別名属性の LDAP 表示名を設定します。 1 つだけの属性は、この種の検索に使用できます。"
  remarks: "このプロパティに設定されている属性のメンバーまたはにより管理などの識別名属性があります。 属性には、1 つまたは複数値のいずれかを指定できます。 詳細については、トピックを参照して、adschema&quot;[メンバー](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)「と」[マネージによって](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)&quot;MSDN ライブラリで[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。       検索は、ベース オブジェクトの属性で指定されている識別名で識別されるオブジェクトに対して実行されます。 たとえば、ベース オブジェクトが adschema グループ クラスであり、AttributeScopeQuery が「メンバー」に設定されている場合、グループのメンバーであるすべてのオブジェクトに対する、検索が実行されます。 詳細については、MSDN ライブラリで adschema&quot;Group&quot;クラスのトピックを参照してください。 [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。       AttributeScopeQuery プロパティを使用する場合、 <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> <xref:System.DirectoryServices.SearchScope>。</xref:System.DirectoryServices.SearchScope>にプロパティを設定する必要があります。</xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> 場合<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>その他の値に設定されて、設定、AttributeScopeQuery プロパティをスロー <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       詳細については、MSDN ライブラリで「を実行する、属性の範囲クエリ」トピックを参照してください。 [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))。"
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "LDAP は、に対する検索を実行する属性の名前を表示またはない属性スコープ クエリの空の文字列を設定します。"
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.DirectoryServices.DirectorySearcher.SearchScope*>プロパティが以外の値に設定<xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref></xref:System.DirectoryServices.DirectorySearcher.SearchScope*> 。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはクライアント コンピューターで結果をキャッシュするかどうかを示す値を設定します。"
  remarks: "検索がこのプロパティ設定されている場合より効率的なする場合は、検索には、大きな結果セットが返されます、`false`を結果セットをクライアント コンピューターの転送を回避します。  その場合、ただし、いないことができますを&2; 回、結果を列挙するため、<xref:System.DirectoryServices.SearchResultCollection>が呼び出されるたびに新しい列挙子オブジェクトを作成するオブジェクト</xref:System.DirectoryServices.SearchResultCollection>。"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>結果がクライアント コンピューターにキャッシュされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または結果を返すサーバーのクライアントが待機する時間の最大量を設定します。 この時間内に、サーバー、応答しない場合は、検索は中止され、結果は返されません。"
  remarks: "このプロパティの最小解像度は、1 秒間です。 秒の小数部は無視されます。       場合、<xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>を前に、クライアントがタイムアウトになるサーバーには、その結果が返されますクライアントの待機が終了に達した。</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> 。 サーバーの最大制限時間は、120 秒です。"
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>をクライアントに結果を返すサーバーの待機時間の最大量を格納する構造体</xref:System.TimeSpan>。       既定値は、-1 秒は、無期限に待機することを意味します。"
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索時に検出されたオブジェクトのエイリアスを解決する方法を示す値を設定します。"
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "A <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>エイリアスが逆参照する動作を指定する値。 このプロパティは、の既定の設定<xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または設定を使用し、検索するディレクトリ同期の制御を表すオブジェクト。"
  remarks: "ディレクトリ同期の制御、一般に呼ば DirSync コントロールは、以前の状態から変更されたオブジェクトの検索に使用される LDAP コントロールです。       詳細については、トピックを参照してください。&quot;[ポーリングして変更を使用して DirSync コントロール](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)&quot;MSDN ライブラリで[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。"
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "<xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref>検索のオブジェクト。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>ディレクトリ同期の制御を使用しない必要がある場合。"
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "によって使用されているマネージ リソースも解放、 <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref>アンマネージ リソースのオブジェクトと、必要に応じて、リリースします。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは、マネージ コードとアンマネージ リソースを解放する場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放する場合。"
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または識別名の形式を示す値を設定します。"
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref>値。"
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはライトウェイト ディレクトリ アクセス プロトコル (LDAP) 形式のフィルター文字列を示す値を設定します。"
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Ldap 検索フィルター文字列フォーマットなど&quot;(objectClass=user)&quot;です。 既定値は&quot;(objectClass=*)&quot;、すべてのオブジェクトを取得します。"
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "検索を実行し、見つかったエントリのコレクションを返します。"
  remarks: "実装の制限により、<xref:System.DirectoryServices.SearchResultCollection>クラスをリリースできませんのすべてのアンマネージ リソースのガベージ コレクションである場合</xref:System.DirectoryServices.SearchResultCollection>。 メモリ リークを防ぐためには、呼び出す必要があります、<xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>メソッドと、<xref:System.DirectoryServices.SearchResultCollection>オブジェクトが不要します</xref:System.DirectoryServices.SearchResultCollection></xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>。"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "A <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref>検索の結果を格納しているオブジェクト。"
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "指定した<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;></xref>コンテナーではありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "使用されているプロバイダーによっては、検索することはできません。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "検索を実行し、見つかった最初のエントリのみを返します。"
  remarks: "複数のエントリが見つかった場合、検索中に、最初のエントリのみが返されます。 エントリが見つからないかどうかは null 参照、検索条件に一致する (`Nothing` Visual Basic で) が返されます。"
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "A <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref>検索中に見つかった最初のエントリを含むオブジェクトです。"
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはページ検索のページ サイズを示す値を設定します。"
  remarks: "サーバーは、PageSize プロパティで指定されたオブジェクトの数が見つかりましたが後は、検索が停止され、クライアントに結果を返します。 クライアントより多くのデータを要求するときに、サーバーはところ検索を再起動します。"
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "オブジェクトの最大数、サーバーがページング検索で返すことができます。 既定値は&0;、つまりはページング検索を実行しません。"
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新しい値が&0; 未満です。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "検索中に取得するプロパティの一覧を示す値を取得します。"
  remarks: "特定のプロパティを取得するには、コレクションに追加この検索を開始する前にします。 たとえば、`searcher.PropertiesToLoad.Add(&quot;phone&quot;);`検索で取得するプロパティの一覧に電話プロパティが追加されます。       &quot;ADsPath&quot;プロパティは常に、検索中に取得します。 [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)]およびそれ以前のオペレーティング システムでは、検索を実行するアカウントは ntSecurityDescriptor プロパティを取得する Administrators グループのメンバーである必要があります。 そうでない場合は場合、ntSecurityDescriptor に関して返されるプロパティの値になります`null`です。 詳細についてを参照してください「NT-セキュリティ-記述子」、MSDN ライブラリで[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。"
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "A <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>検索中に取得するプロパティのセットを含むオブジェクト。       既定値は、空<xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>、すべてのプロパティを取得します。"
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または値が割り当てられている属性の名前のみを検索するかどうかを示す値を設定します。"
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>検索値を指定する属性の名前のみを取得する場合は、割り当てられているです。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合、検索は名前とすべての要求された属性の値を取得します。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または参照の追跡方法を示す値を設定します。"
  remarks: "ルート検索は指定しない場合、サーバーの名前付けコンテキストまたは検索結果が (たとえば、子ドメインと検索を親ドメインに存在する場合) の名前付けコンテキストを越える場合に、サーバーは、クライアントを無視するかを追跡するクライアントに参照メッセージを送信します。"
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>値。 既定値は<xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>値。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索の開始位置を Active Directory ドメイン サービス階層内のノードを示す値に設定します。"
  remarks: "SearchRoot が null 参照 (`Nothing` Visual Basic で)、検索のルートは、サーバーが現在使用しているドメインのルートに設定します。       グローバル カタログで検索するいくつかの方法があります: - グローバル カタログを列挙し、最初の子を選択します。      -サーバー名を指定します。 グローバル カタログを検索するのにには、DsGetDcName 関数を使用します。  DsGetDcName 関数の詳細については、MSDN ライブラリで「DsGetDcName」トピックを参照してください。 [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。      -グローバル カタログの RootDSE を取得し、&quot;rootNamingContext&quot;を要求します。      -検索パスを指定する場合に、LDAP を使用して、グローバル カタログを使用します。 たとえば、&quot;GC://OU =..., DC =..., DC =...&quot;です。      -次の c# コードでは、グローバル カタログを列挙し、最初の子を選択する方法を示します。          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>検索の開始位置、Active Directory ドメイン サービス階層内のオブジェクト。 既定値は null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはサーバーによって監視される検索のスコープを示す値を設定します。"
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>値。 既定値は<xref href=&quot;System.DirectoryServices.SearchScope&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>値。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索によって返される、指定された属性のセキュリティ アクセス情報を示す値を設定します。"
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref>値。"
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または結果の個々 のページで、サーバーを検索する必要がありますを時間の最大時間を示す値を設定します。 これはいない全体の検索の時間制限と同じです。"
  remarks: "このプロパティの最小解像度は、1 秒間です。 秒の小数部は無視されます。       時間の制限に達すると、サーバーは検索を停止し、検索を再開する場所に関する情報を含むクッキーと共に、その時点までに累積結果を戻します。      > [!NOTE] > このプロパティは、検索にのみ適用されます、<xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>が-1 の場合、既定ではない値に設定します</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>。"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A<xref:System.TimeSpan>結果のページのサーバーを検索する必要がありますを時間数を表す</xref:System.TimeSpan>。       既定値は-1 (秒単位) を無期限に検索することを意味します。"
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit プロパティを取得またはサーバー時間の最大時間を示す値を設定では、検索を費やします。 時間の制限に達した場合のみにある最大するエントリ ポイントが返されます。"
  remarks: "このプロパティの最小解像度は、1 秒間です。 秒の小数部は無視されます。       異なり、<xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>プロパティ、ServerTimeLimit プロパティが検索で、サーバーが費やす時間の総容量を示します</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>。 時間の制限に達すると、サーバーは検索を停止し、その時点まで蓄積されている結果を返します。       サーバーにより決定された既定値を使用する&2; 番目の-1 を ServerTimeLimit を設定します。      > [!NOTE] > ServerTimeLimit を 120 秒のサーバーにより決定された既定値よりも大きい値に設定した場合、サーバーにより決定された既定値が使用されます。 サーバーの時間制限に達すると、中断した場所からの検索を続行できません。"
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "A <xref:System.TimeSpan>、サーバーを検索する必要がありますを時間数を表す</xref:System.TimeSpan>。       既定値は-1 秒、120 秒のサーバーにより決定された既定値を使用することを意味します。"
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得またはサーバーで、検索で返されるオブジェクトの最大数を示す値を設定します。"
  remarks: "サーバーが停止しますがサイズ制限に達するし、結果を返す後検索は、その時点まで累積されます。      > [!NOTE] > SizeLimit を 1000 エントリのサーバーにより決定された既定値よりも大きい値に設定した場合、サーバーにより決定された既定値が使用されます。"
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "サーバーで、検索で返されるオブジェクトの最大数。 既定値は 0、1000 エントリの既定のサーバーが決定したサイズの制限を使用することを意味します。"
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新しい値が&0; 未満です。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または結果が並べ替えられますプロパティを示す値を設定します。"
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "A <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref>プロパティと方向に検索結果を並べ替える必要がありますを指定するオブジェクト。"
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "プロパティの値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Visual Basic の場合) の場合は Nothing です。"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索フィルターに一致するオブジェクトの削除を返す必要がありますも検索するかどうかを示す値を設定します。"
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>削除されたオブジェクトを検索に含める必要がある場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>それ以外の場合。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "取得または検索の仮想のリスト ビューのオプションを示す値を設定します。"
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref>仮想のリスト ビューの検索の情報を含むオブジェクト。 このプロパティの既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>つまりが仮想のリスト ビューの検索オプションを使用しないでください。"
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
