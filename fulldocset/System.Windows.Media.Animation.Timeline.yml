### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.Timeline
  id: Timeline
  children:
  - System.Windows.Media.Animation.Timeline.#ctor
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  - System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  - System.Windows.Media.Animation.Timeline.AccelerationRatio
  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.AllocateClock
  - System.Windows.Media.Animation.Timeline.AutoReverse
  - System.Windows.Media.Animation.Timeline.AutoReverseProperty
  - System.Windows.Media.Animation.Timeline.BeginTime
  - System.Windows.Media.Animation.Timeline.BeginTimeProperty
  - System.Windows.Media.Animation.Timeline.Clone
  - System.Windows.Media.Animation.Timeline.CloneCurrentValue
  - System.Windows.Media.Animation.Timeline.Completed
  - System.Windows.Media.Animation.Timeline.CreateClock
  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  - System.Windows.Media.Animation.Timeline.DecelerationRatio
  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  - System.Windows.Media.Animation.Timeline.Duration
  - System.Windows.Media.Animation.Timeline.DurationProperty
  - System.Windows.Media.Animation.Timeline.FillBehavior
  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  - System.Windows.Media.Animation.Timeline.Name
  - System.Windows.Media.Animation.Timeline.NameProperty
  - System.Windows.Media.Animation.Timeline.RemoveRequested
  - System.Windows.Media.Animation.Timeline.RepeatBehavior
  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  - System.Windows.Media.Animation.Timeline.SpeedRatio
  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  langs:
  - csharp
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
  type: Class
  summary: "時間のセグメントを定義します。"
  remarks: "タイムラインは、時間のセグメントを表します。  使用して、開始時間、何回か繰り返されますそのセグメントで時間の進行速度、そのセグメントの長さを指定するプロパティを提供します。       タイムライン クラスから継承するクラスは、アニメーションやメディアの再生などの追加機能を提供します。 使用可能な特殊なタイムラインのさまざまな種類のいくつかの例を次に示します。      -**アニメーション**:<xref:System.Windows.Media.Animation.AnimationTimeline>出力値を生成するタイムラインの型です</xref:System.Windows.Media.Animation.AnimationTimeline>。 アニメーションをプロパティに関連付けるときに、アニメーションは、再生、それによって「してアニメーション化」プロパティの値を更新します。 アニメーションの概要については、次を参照してください。[アニメーションの概要](~/add/includes/ajax-current-ext-md.md)です。 アニメーションを適用するさまざまな方法については、次を参照してください。、[プロパティ アニメーションの技術概要](~/add/includes/ajax-current-ext-md.md)です。      - **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>メディア ファイルの再生を制御するタイムラインの型です</xref:System.Windows.Media.MediaTimeline>。      - **Paralleltimeline**: A<xref:System.Windows.Media.Animation.ParallelTimeline>他のタイムラインをグループ化するタイムラインの型です</xref:System.Windows.Media.Animation.ParallelTimeline>。      -**ストーリー ボード**: A<xref:System.Windows.Media.Animation.Storyboard>は特殊な種類の<xref:System.Windows.Media.Animation.ParallelTimeline>オブジェクトとが含まれているタイムラインの情報を対象とするプロパティを提供します</xref:System.Windows.Media.Animation.ParallelTimeline></xref:System.Windows.Media.Animation.Storyboard>。 詳細については<xref:System.Windows.Media.Animation.Storyboard>、オブジェクトを参照してください、[ストーリー ボードの概要](~/add/includes/ajax-current-ext-md.md)</xref:System.Windows.Media.Animation.Storyboard>。       タイムラインの使用方法の詳細については、次を参照してください。、[アニメーションの概要](../Topic/Animation%20Overview.md)です。 タイムラインのタイミング機能の紹介を参照してください、[タイミング動作の概要](~/add/includes/ajax-current-ext-md.md)です。      ## データのバインドと最もタイムラインのアニメーションのタイムラインのプロパティは、データ バインドされているか、アニメーション化を指定できます。ただし、タイミング システムが動作するしくみ、により、他のデータと同様に動作しない場合はバインドされている、またはアニメーションのタイムライン データはバインドされているか、オブジェクトをアニメーション化します。 その動作を理解するのには、タイムラインのアクティブ化意味を理解するのに役立ちます。       タイムラインを適用すると、タイムラインとその子タイムラインのコピーが作成されます。 これらのコピーが固定されている (読み取り専用に変更) と<xref:System.Windows.Media.Animation.Clock>そこからオブジェクトが作成されます</xref:System.Windows.Media.Animation.Clock>。 これらのクロックを対象のプロパティをアニメーション化する実際の作業を実行することをお勧めします。 タイムラインがあった場合は、データ バインドされているか、アニメーション化されている現在の値のスナップショットが行われた、クロックの作成時にします。 元のタイムライン可能性があります、継続的に変更する場合でもそのクロックされていません。       データ バインディングまたはアニメーションの変更を反映するためにタイムラインは、その時計を再生成する必要があります。 クロックは、自動的のするは再生成されません。 タイムラインの変更を適用するいくつかの方法を次に示します: - タイムラインかに属している場合、 <xref:System.Windows.Media.Animation.Storyboard>、ストーリー ボードを使用して、再適用して変更を反映してこれを行うことができます、<xref:System.Windows.Media.Animation.BeginStoryboard>または<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>メソッド</xref:System.Windows.Media.Animation.Storyboard.Begin%2A></xref:System.Windows.Media.Animation.BeginStoryboard></xref:System.Windows.Media.Animation.Storyboard>。 これは、アニメーションが再起動の副作用です。 コードでは、使用することができます、<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>ストーリー ボードを進める方法は、前の位置にバックアップします</xref:System.Windows.Media.Animation.Storyboard.Seek%2A>。      プロパティを使用して、直接にアニメーションを適用する場合、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを呼び出し、<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>メソッドを再度が変更されたアニメーションを渡します</xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A></xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>。      -クロック レベルで直接を使用している場合は、作成し、クロックの新しいセットを適用し、使用して生成されたクロックの前のセットを置き換えます。       データの例には、アニメーションがバインドされているを参照してください、[キー スプライン アニメーション サンプル](http://go.microsoft.com/fwlink/?LinkID=160011)です。      ## イベント ハンドラーがある場合にのみタイマー A タイムラインの時計は進行状況に応じて、タイムラインを使用して、関連付けられているか (の場合、<xref:System.Windows.Media.Animation.AnimationClock>オブジェクト) プロパティに関連付けられている</xref:System.Windows.Media.Animation.AnimationClock>。 この理由により、他のユーザー) ことはお勧めしませんをタイマーとして、タイムラインを使用することです。"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      [System.Windows.Markup.RuntimeNameProperty("Name")]

      public abstract class Timeline : System.Windows.Media.Animation.Animatable
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.CreateInstanceCore
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>クラスです。"
  syntax:
    content: protected Timeline ();
    parameters: []
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  id: '#ctor(System.Nullable{System.TimeSpan})'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>指定<xref:System.Windows.Media.Animation.Timeline.BeginTime*></xref:System.Windows.Media.Animation.Timeline.BeginTime*>クラス。"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "この時刻<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作業を開始する必要があります。 参照してください、<xref:System.Windows.Media.Animation.Timeline.BeginTime*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.BeginTime*>。"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> 、指定したクラス<> *> と<> *> です。"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "この時刻<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作業を開始する必要があります。 参照してください、<xref:System.Windows.Media.Animation.Timeline.BeginTime*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.BeginTime*>。"
    - id: duration
      type: System.Windows.Duration
      description: "繰り返しをカウントせずに、このタイムラインの再生時間の長さ。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  id: '#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)'
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> 、指定したクラス<> *>、 <> </> *>、 <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*></xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*> 。"
  remarks: ''
  example:
  - "<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  \n  \n <xref:System.Windows.Media.Animation.Timeline.Duration%2A>"
  syntax:
    content: protected Timeline (Nullable<TimeSpan> beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);
    parameters:
    - id: beginTime
      type: System.Nullable{System.TimeSpan}
      description: "この時刻<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作業を開始する必要があります。 参照してください、<xref:System.Windows.Media.Animation.Timeline.BeginTime*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.BeginTime*>。"
    - id: duration
      type: System.Windows.Duration
      description: "繰り返しをカウントせずに、このタイムラインの再生時間の長さ。 参照してください、<xref:System.Windows.Media.Animation.Timeline.Duration*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
    - id: repeatBehavior
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "このタイムラインは、いずれかのイテレーションとしての繰り返し動作<> *> または繰り返し<> *> です。 参照してください、<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>詳細については、プロパティ</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>。"
  overload: System.Windows.Media.Animation.Timeline.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  id: AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "タイムラインの割合を指定する値の設定を取得または<xref:System.Windows.Media.Animation.Timeline.Duration*>費やされた時間の経過を&0; から最大速度に加速します</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  remarks: "AccelerationRatio プロパティを使用して、緩やかに変化を起動し、時間の経過と共にを高速化するアニメーションを作成します。 AccelerationRatio プロパティは、簡単操作の効果を作成するかより自然に見える移動を行うに役立ちます。 AccelerationRatio を使用し、<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>の起動が遅い、アニメーションを作成するには、一緒にプロパティが速度が上がり、および終了する前に、速度が低下し</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>。      <a name=&quot;dependencyPropertyInfo_AccelerationRatio&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>"
  syntax:
    content: public double AccelerationRatio { get; set; }
    return:
      type: System.Double
      description: "0 ~ ~ 1 の間のタイムラインの割合を指定する値<> *> 費やされた時間の経過を 0 から最大速度に加速します。場合、タイムラインの<> *> プロパティも設定、AccelerationRatio の合計と<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>1 未満にする必要があります</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>。 既定値は 0 です。"
  overload: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "AccelerationRatio とは、0 より小さいか、1 より大きいです。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "AccelerationRatio の合計と<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>1 を超えています</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>。"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  id: AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  id: AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Creates a <xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref> for this <xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>."
  remarks: "このメソッドは、<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>メソッドと、コードから直接呼び出すことはできません</xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>。"
  syntax:
    content: protected virtual System.Windows.Media.Animation.Clock AllocateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "このクロック<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.AllocateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  id: AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得または順方向の反復が完了した後に、タイムラインが逆方向に再生するかどうかを示す値を設定します。"
  remarks: "AutoReverse プロパティ設定されている場合`true`、タイムラインがで指定した時間の長さの&2; 倍の再生、<xref:System.Windows.Media.Animation.Timeline.Duration%2A>プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration%2A>。      ### AutoReverse、繰り返されるときにタイムラインの AutoReverse プロパティに設定されている`true`とその<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>プロパティにより繰り返しますが、順方向の各反復の下位のイテレーションが続きます</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>。 これにより、1 回の繰り返しです。 AutoReverse 値を持つタイムラインなど`true`イテレーションに<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>2 がプレイ転送 1 回、その逆の順序で、転送、し、再度後方</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>。      <a name=&quot;dependencyPropertyInfo_AutoReverse&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>"
  syntax:
    content: public bool AutoReverse { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>タイムラインは、各反復処理の最後に逆方向に再生する場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.AutoReverse*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  id: AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.AutoReverse*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.AutoReverse*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty AutoReverseProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  id: BeginTime
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この設定を取得または<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>作業を開始する必要があります。"
  remarks: "The BeginTime property is useful for creating timelines that play in a sequence: by increasing the BeginTime of successive timelines that share the same parent, you can stagger their play times.  \n  \n## Negative Values  \n A negative BeginTime value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past. For example, a <xref:System.Windows.Media.Animation.Timeline> with a BeginTime of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.  \n  \n## BeginTime and SpeedRatio  \n The time described by the BeginTime property is measured in the timeline's parent's time. For example, a timeline with a BeginTime of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.  \n  \n A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its BeginTime. For example, a timeline with a BeginTime of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.  \n  \n<a name=\"dependencyPropertyInfo_BeginTime\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  \n|Metadata properties set to `true`|None|  \n  \n<a name=\"xamlAttributeUsage_BeginTime\"></a>   \n## XAML Attribute Usage  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-][*days*.]*hours*:*minutes*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"[-]*days*\"/>  \n  \n \\- or -  \n  \n \\<*object* BeginTime=\"{[x:Null Markup Extension](~/add/includes/ajax-current-ext-md.md)}\"/>  \n  \n<a name=\"xamlValues_BeginTime\"></a>   \n## XAML Values  \n Items in square brackets (`[` and `]`) are optional.  \n  \n *days*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value greater than or equal to 0 that describes the number of days spanned by this begin time.  \n  \n *hours*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 23 that represents the number of hours spanned by this begin time.  \n  \n *minutes*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of minutes spanned by this begin time.  \n  \n *seconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value between 0 and 59 that represents the number of seconds spanned by this begin time.  \n  \n *fractionalSeconds*  \n <xref:System.Int32?displayProperty=fullName>  \n  \n A value consisting of 1 to 7 digits that represents fractional seconds.  \n  \n For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page."
  example:
  - "A timeline's BeginTime property determines the beginning of a timeline's active period. If the timeline has a parent timeline, the BeginTime property determines how long it takes the timeline to start after its parent starts. If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the BeginTime property determines how long the timeline takes to start playing after it is triggered.  \n  \n The following example shows several different timelines with different BeginTime settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]"
  syntax:
    content: public Nullable<TimeSpan> BeginTime { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "この時刻<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref> BeginTime の親の基準とした、開始する必要があります。 このタイムラインがルート タイムラインの場合は、時間に対する相対パスです、対話による開始時間 (タイムラインがトリガーされた時点)。 この値は正の値、負の値、または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>値決してタイムライン再生します。 既定値は&0; です。"
  overload: System.Windows.Media.Animation.Timeline.BeginTime*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  id: BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.BeginTime*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.BeginTime*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty BeginTimeProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Clone
  id: Clone
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>、このオブジェクトの値の詳細コピーを作成します。"
  remarks: "変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。       詳細については、 <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>を参照してください。       依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline Clone ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの<> *> プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合でも、ソースの<> *> プロパティは、<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.Animation.Timeline.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この変更可能な複製を作成<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>オブジェクト、このオブジェクトの現在の値の詳細コピーを作成します。"
  remarks: "変更可能なコピーを生成するためにこのメソッドが使用される固定された<xref:System.Windows.Freezable>オブジェクト (または any<xref:System.Windows.Freezable>オブジェクト).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> 便宜上は、このメソッドは、厳密に型指定された実装が継承したバージョンをシャドウします。       詳細については、 <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>を参照してください。       リソース参照、データ バインディング、およびアニメーションはコピーされませんが、現在の値。"
  syntax:
    content: public System.Windows.Media.Animation.Timeline CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Timeline
      description: "現在のオブジェクトの変更可能な複製。 複製されたオブジェクトの<> *> プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>場合でも、ソースの<> *> プロパティは<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Completed
  id: Completed
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: 'このタイムラインの再生が完全に終了するときに発生します。 アクティブな期間にできなくなります。'
  remarks: "このタイムラインがタイムライン ツリーのルート タイムラインの場合は、アクティブな期間 (を繰り返しを含む) の末尾に達するし、そのすべての子は、アクティブな期間の終わりに達しました後、再生は完了します。 このタイムラインが子タイムラインの場合を所属先に達すると、タイムライン ツリーのルート タイムライン アクティブな期間とそのすべての子タイムラインの末尾が終了したら再生すると再生が完了したと見なされます。       タイムラインを停止すると、その完了イベントがトリガーされませんが、その保留期間をスキップします。       <xref:System.Object><xref:System.EventHandler>イベント ハンドラーはタイムラインの<xref:System.Windows.Media.Animation.Clock>。</xref:System.Windows.Media.Animation.Clock></xref:System.EventHandler>のパラメーター</xref:System.Object>       このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します</xref:System.Windows.Media.Animation.Clock>。  詳細については、次を参照してください。、[タイミング イベントの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control. One storyboard shrinks the image control until it disappears. After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.  \n  \n [!code-xml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public event EventHandler Completed;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  id: CreateClock
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新たに作成、制御可能な<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。 この場合<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>に子がこのクロックのツリーが作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>ルートとして。"
  remarks: 'この<xref:System.Windows.Media.Animation.Timeline>1 つまたは複数の子になる可能性があります<xref:System.Windows.Media.Animation.TimelineGroup>オブジェクトをこの情報は無視されますこのメソッドが、現在<xref:System.Windows.Media.Animation.Timeline>ルート<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline>として</xref:System.Windows.Media.Animation.Timeline>扱われます</xref:System.Windows.Media.Animation.TimelineGroup></xref:System.Windows.Media.Animation.Timeline>。'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock ();
    parameters: []
    return:
      type: System.Windows.Media.Animation.Clock
      description: "新しい制御可能な<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから構築された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。 この場合<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>は、 <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;> </xref>子タイムラインのツリーを格納している<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>制御可能なオブジェクトが作成された<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>ルートとして。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  id: CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "新たに作成<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>し、指定するかどうか新しい<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>制御できます。 この場合<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>に子がこのクロックのツリーが作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>ルートとして。"
  remarks: 'この<xref:System.Windows.Media.Animation.Timeline>1 つまたは複数の子になる可能性があります<xref:System.Windows.Media.Animation.TimelineGroup>オブジェクトをこの情報は無視されますこのメソッドが、現在<xref:System.Windows.Media.Animation.Timeline>ルート<xref:System.Windows.Media.Animation.Timeline>.</xref:System.Windows.Media.Animation.Timeline>として</xref:System.Windows.Media.Animation.Timeline>扱われます</xref:System.Windows.Media.Animation.TimelineGroup></xref:System.Windows.Media.Animation.Timeline>。'
  syntax:
    content: public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);
    parameters:
    - id: hasControllableRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、ルート<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>返される返す必要があります、 <xref href=&quot;System.Windows.Media.Animation.ClockController&quot;> </xref>からその<xref:System.Windows.Media.Animation.Clock.Controller*>プロパティできるように、 <xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>ツリーには、対話形式で、それ以外のコントロールを指定できます<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Windows.Media.Animation.Clock.Controller*> 。"
    return:
      type: System.Windows.Media.Animation.Clock
      description: "新しい<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから構築された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。 この場合<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>は、 <xref href=&quot;System.Windows.Media.Animation.TimelineGroup&quot;> </xref>子タイムラインのツリーを格納している<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>制御可能なオブジェクトが作成された<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>これから作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>ルートとして。"
  overload: System.Windows.Media.Animation.Timeline.CreateClock*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  id: CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "タイムラインのクロックの変更時に速度が進行状況と発生します。"
  remarks: "次のような状況でタイムラインのクロックの現在のグローバル速度を変更:-時計、タイムラインのための方向を変更する<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>。      -時計加速したり減速したりするために、タイムラインの<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>または<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>プロパティの設定</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A></xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>。      -時計が一時停止または再開します。      -クロックが非アクティブになったまたは再アクティブ化します。      -<xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>の時計の親の変更の&1; つ</xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>。       CurrentGlobalSpeedInvalidated イベントはタイムラインの時計が一時停止時の追跡に役立つイベント ハンドラーで、ストーリー ボードを使用して<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>メソッドまたは時計をチェック<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>そのクロックが一時停止するかどうかを確認するに変更されているかどうかを決定するキャッシュされた値と比較します</xref:System.Windows.Media.Animation.Clock.IsPaused%2A></xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>。       <xref:System.Object><xref:System.EventHandler>イベント ハンドラーはタイムラインの<xref:System.Windows.Media.Animation.Clock>。</xref:System.Windows.Media.Animation.Clock></xref:System.EventHandler>のパラメーター</xref:System.Object>       このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します</xref:System.Windows.Media.Animation.Clock>。  詳細については、次を参照してください。、[タイミング イベントの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to register for the CurrentGlobalSpeedInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentGlobalSpeedInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  id: CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "発生したときに、<xref:System.Windows.Media.Animation.Clock.CurrentState*>のタイムラインのプロパティ<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>が更新されます</xref:System.Windows.Media.Animation.Clock.CurrentState*>。"
  remarks: "タイムラインのときに通知する場合は、CurrentStateInvalidated イベントを使用して<xref:System.Windows.Media.Animation.Clock>を開始、停止、または入力します</xref:System.Windows.Media.Animation.Clock>。       <xref:System.Windows.Media.Animation.Clock>その<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>。</xref:System.Windows.Media.Animation.Clock.CurrentState%2A>は変わらないので</xref:System.Windows.Media.Animation.Clock>、一時停止 クロックが一時停止しているときに通知するを使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>イベント</xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>。       このイベントが発生しますが、ときに、<xref:System.Windows.Media.Animation.ClockState>いって、必ずしもを無効になります、<xref:System.Windows.Media.Animation.ClockState>変更:<xref:System.Windows.Media.Animation.Clock>からに切り替えること<xref:System.Windows.Media.Animation.ClockState>に<xref:System.Windows.Media.Animation.ClockState>に戻ると<xref:System.Windows.Media.Animation.ClockState>同じティックの場合は、このイベントを起動がその<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>プロパティが実際に変更されません</xref:System.Windows.Media.Animation.Clock.CurrentState%2A></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.Clock></xref:System.Windows.Media.Animation.ClockState></xref:System.Windows.Media.Animation.ClockState>。       <xref:System.Object>のパラメーター、<xref:System.EventHandler>イベント ハンドラーは、<xref:System.Windows.Media.Animation.Clock>このタイムラインのために作成された</xref:System.Windows.Media.Animation.Clock></xref:System.EventHandler></xref:System.Object>。       このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します</xref:System.Windows.Media.Animation.Clock>。  詳細については、次を参照してください。、[タイミング イベントの概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event EventHandler CurrentStateInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  id: CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "発生したときに、<xref:System.Windows.Media.Animation.Clock.CurrentTime*>のタイムラインのプロパティ<xref href=&quot;System.Windows.Media.Animation.Clock&quot;></xref>が更新されます</xref:System.Windows.Media.Animation.Clock.CurrentTime*>。"
  remarks: "使用して、<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>にするときにイベントときの通知、<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>タイムラインの<xref:System.Windows.Media.Animation.Clock>を更新します</xref:System.Windows.Media.Animation.Clock></xref:System.Windows.Media.Animation.Clock.CurrentTime%2A></xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>。       <xref:System.Object><xref:System.EventHandler>イベント ハンドラーはタイムラインの<xref:System.Windows.Media.Animation.Clock>。</xref:System.Windows.Media.Animation.Clock></xref:System.EventHandler>のパラメーター</xref:System.Object>       このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します</xref:System.Windows.Media.Animation.Clock>。  詳細については、次を参照してください。、[タイミング イベントの概要](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example shows how to register for the CurrentTimeInvalidated event.  \n  \n [!code-cs[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/csharp/TimingBehavior_csharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]\n [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/add/codesnippet/visualbasic/timingbehavior_vb/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]"
  syntax:
    content: public event EventHandler CurrentTimeInvalidated;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  id: DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "タイムラインの割合を指定する値の設定を取得または<xref:System.Windows.Media.Animation.Timeline.Duration*>費やされた時間の経過を最大速度から&0; に減速します</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  remarks: "その低速ダウン停止する前にアニメーションを作成するのにには、DecelerationRatio プロパティを使用します。 DecelerationRatio プロパティは、簡単操作の効果を作成するかより自然に見える移動を行うに役立ちます。 使用して、<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>プロパティと DecelerationRatio プロパティの起動が遅い、アニメーションを作成するには、同時を高速化し、終了する前にもう一度速度が低下する</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>。      <a name=&quot;dependencyPropertyInfo_DecelerationRatio&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>"
  syntax:
    content: public double DecelerationRatio { get; set; }
    return:
      type: System.Double
      description: "0 ~ ~ 1 の間のタイムラインの割合を指定する値<> *> 費やされた時間の経過を最大速度から 0 に減速します。場合、タイムラインの<> *> プロパティも設定、DecelerationRatio の合計と<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>1 未満にする必要があります</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>。 既定値は 0 です。"
  overload: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "DecelerationRatio は 0 より小さいか、1 より大きいです。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "合計<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>と DecelerationRatio が 1 を超えています</xref:System.Windows.Media.Animation.Timeline.AccelerationRatio*>。"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  id: DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  id: DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>添付プロパティ</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Duration
  id: Duration
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得または繰り返しをカウントせずに、このタイムラインの再生時間の長さを設定します。"
  remarks: "A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.  \n  \n## Default Duration Behavior  \n The behavior of a Duration structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:  \n  \n|||  \n|-|-|  \n|**Timeline**|**Behavior**|  \n|<xref:System.Windows.Media.Animation.Timeline>|Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)|  \n|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|Expands to fit child timelines|  \n|\\<*Type*>Animation (Known as a \"From/To/By\" or \"basic\" animations)|1 second|  \n|\\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)|Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values|  \n  \n<a name=\"dependencyPropertyInfo_Duration\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  \n|Metadata properties set to `true`|None|"
  example:
  - "<xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects. The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines. For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.  \n  \n> [!NOTE]\n>  Note: code has been omitted from the following examples, which are provided for illustrative purposed only.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n    <DoubleAnimation Duration=\"0:0:2\" …/>  \n    <DoubleAnimation Duration=\"0:0:4\" BeginTime=\"0:0:2\" …/>  \n  </Storyboard>   \n...  \n```  \n  \n Examples of \\<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no Duration is specified for these types of animations, they will run for one second.  \n  \n [xaml]  \n  \n```  \n...  \n  <!-- With no Duration specified, this animation will run for   \n       one second -->  \n  <DoubleAnimation .../>  \n...  \n```  \n  \n Examples of \\<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no Duration is specified for these types of animations they will run until all key frames are finished.  \n  \n [xaml]  \n  \n```  \n...  \n  <Storyboard>  \n  \n    <!-- This key frame animation will end at 4.5 seconds  \n         Because that is when its last KeyFrame KeyTime ends. -->  \n    <DoubleAnimationUsingKeyFrames ...>  \n      <LinearDoubleKeyFrame ... KeyTime=\"0:0:3\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:3.5\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4\" />  \n      <DiscreteDoubleKeyFrame ... KeyTime=\"0:0:4.5\" />  \n    </DoubleAnimationUsingKeyFrames>  \n  </Storyboard>   \n...  \n```"
  syntax:
    content: public System.Windows.Duration Duration { get; set; }
    return:
      type: System.Windows.Duration
      description: 'The timeline''s simple duration: the amount of time this timeline takes to complete a single forward iteration. The default value is <xref:System.Windows.Duration.Automatic*>.'
  overload: System.Windows.Media.Animation.Timeline.Duration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  id: DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.Duration*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.Duration*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty DurationProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  id: FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得または設定を指定する値が、どのように<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>アクティブな期間の末尾に到達した後の動作です。"
  remarks: "アニメーション FillBehavior プロパティを設定<xref:System.Windows.Media.Animation.FillBehavior>アクティブな期間の最後に達すると、その値を保持するために、アニメーションする場合します</xref:System.Windows.Media.Animation.FillBehavior>。 アクティブな期間の末尾に到達されるアニメーションの FillBehavior 設定がある<xref:System.Windows.Media.Animation.FillBehavior>保留期間内にあると言います</xref:System.Windows.Media.Animation.FillBehavior>。 アクティブな期間の最後に達すると、その値を保持するためにアニメーションしない場合は、 <xref:System.Windows.Media.Animation.FillBehavior>。</xref:System.Windows.Media.Animation.FillBehavior> FillBehavior プロパティに設定します。       塗りつぶし期間でのアニメーションは、そのターゲット プロパティの値をオーバーライドし続ける、ためには、効果がないように見える可能性がありますを他の手段でターゲット プロパティの値を設定しようとしています。 アニメーション化された後に、プロパティ値を設定する方法を示す例は、次を参照してください。[する方法: 設定、プロパティ後アニメーションにストーリー ボード](~/add/includes/ajax-current-ext-md.md)です。       子タイムラインは停止の再生と保留がその親タイムラインが中止されます。子タイムラインに入力する場合は、その親タイムラインが<xref:System.Windows.Media.Animation.FillBehavior>。</xref:System.Windows.Media.Animation.FillBehavior> FillBehavior 確認します。      <a name=&quot;dependencyPropertyInfo_FillBehavior&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.FillBehavior
      description: "アクティブな期間の終了になったが、その親はアクティブ後のタイムラインの動作を指定する値または保留期間。 既定値は<xref href=&quot;System.Windows.Media.Animation.FillBehavior&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.FillBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  id: FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.FillBehavior*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.FillBehavior*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty FillBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>変更不可能になっているかどうか、変更不可能にできるか。"
  remarks: "直接 (呼び出す場合を除きますベースの実装で) このメソッドを呼び出さないでください。 このメソッドが<xref:System.Windows.Freezable.Freeze%2A>。</xref:System.Windows.Freezable.Freeze%2A>によって内部的に呼び出されます"
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このインスタンスを固定できるかどうかを確認するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>このインスタンスを固定します。"
    return:
      type: System.Boolean
      description: "場合<code> isChecking </code>が true の場合、このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>読み取り専用に、このインスタンスにできる場合、または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>読み取り専用にできない場合。       場合<code> isChecking </code>が false の場合、このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このインスタンスは読み取り専用では今すぐ場合、または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>かどうかにできない読み取り専用で、このオブジェクトの固定された状態を変更する始めたことの副作用です。"
  overload: System.Windows.Media.Animation.Timeline.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このインスタンスの指定した<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>オブジェクト。"
  remarks: "依存関係プロパティをコピーするときにこのメソッドはコピー リソース参照とデータ バインディング (ただし、解決できなくなる可能性があります)、アニメーションやその現在の値ではありません。 これらのプロパティには、データ バインディングまたはリソースの参照が含まれている場合ことに注意して<xref:System.Windows.Freezable.GetAsFrozen%2A>に失敗する、オブジェクトを圧縮しようとしていると、 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>がスローされます</xref:System.Windows.Freezable.GetAsFrozen%2A>       このメソッドは、<xref:System.Windows.Freezable.GetAsFrozen%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、</xref:System.Windows.Freezable.GetAsFrozen%2A> 。 現在のオブジェクトの固定コピーを作成するには<xref:System.Windows.Freezable.GetAsFrozen%2A>このメソッドを直接呼び出す代わりにします</xref:System.Windows.Freezable.GetAsFrozen%2A>。       詳細については、 <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>インスタンスを複製します。"
  overload: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "このインスタンスの指定された固定された複製<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。 リソース参照、データ バインディング、およびアニメーションはコピーされませんが、現在の値。"
  remarks: "このメソッドは、<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>メソッド呼び出すことはできません、コードから直接を除く中に、このメソッドをオーバーライドする基本実装を呼び出すときに、</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> 。 現在のオブジェクトの固定コピーを作成するには<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>このメソッドを直接呼び出す代わりにします</xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>。       詳細については、 <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>。</xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName>を参照してください。"
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);
    parameters:
    - id: sourceFreezable
      type: System.Windows.Freezable
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>をコピーし、固定します。"
  overload: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  id: GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "指定した目的のフレーム レートを取得<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  remarks: "このメソッドへの読み取りアクセスを提供する、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>添付プロパティ</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>。 詳細については、次を参照してください、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>ページ。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 。"
  syntax:
    content: public static Nullable<int> GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "目的のフレーム レートを取得する対象のタイムラインになります。"
    return:
      type: System.Nullable{System.Int32}
      description: "このタイムラインの目的のフレーム レートです。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  id: GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この単一のイテレーションの長さを返します<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  remarks: "このメソッドは場合にのみ呼び出す<xref:System.Windows.Media.Animation.Timeline.Duration%2A><xref:System.Windows.Duration.Automatic%2A>.</xref:System.Windows.Duration.Automatic%2A>にプロパティが設定されています。</xref:System.Windows.Media.Animation.Timeline.Duration%2A> 場合<xref:System.Windows.Media.Animation.Timeline.Duration%2A>は<xref:System.Windows.Duration.Automatic%2A>自然な期間が<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>の特定のクラスの実装によって決まりますが、</xref:System.Windows.Duration.Automatic%2A> </xref:System.Windows.Media.Animation.Timeline.Duration%2A>       <xref:System.Windows.Duration.Automatic%2A>自然な期間が不明、 <xref:System.Windows.Duration.Forever%2A>。</xref:System.Windows.Duration.Forever%2A>の自然な期間が含まれて、</xref:System.Windows.Duration.Automatic%2A> GetNaturalDuration を返す場合 ストリーミングを行う場合などがこれです。       このメソッドが作成されたもの以外、このタイムライン用の時計を渡すことは可能ですが、信頼できない結果に注意してください。"
  syntax:
    content: protected System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>ために作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
    return:
      type: System.Windows.Duration
      description: "この&1; つのイテレーションの長さ<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>、または<xref:System.Windows.Duration.Automatic*>自然な期間が不明の場合</xref:System.Windows.Duration.Automatic*>。"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  id: GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この単一のイテレーションの長さを返します<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。 このメソッドは、 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>。</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration*>の実装を提供します。"
  remarks: "このメソッドの実装を提供する<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>し、コードから直接呼び出すことはできません</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>。 使用して<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>代わりにします</xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>。"
  syntax:
    content: protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);
    parameters:
    - id: clock
      type: System.Windows.Media.Animation.Clock
      description: "<xref href=&quot;System.Windows.Media.Animation.Clock&quot;> </xref>ために作成された<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
    return:
      type: System.Windows.Duration
      description: "この&1; つのイテレーションの長さ<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>、または<xref:System.Windows.Duration.Automatic*>自然な期間が不明の場合</xref:System.Windows.Duration.Automatic*>。"
  overload: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.Name
  id: Name
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "これの名前を取得または<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "このタイムラインの名前。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.Animation.Timeline.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  id: NameProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.Name*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.Name*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty NameProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  id: RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
  type: Event
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "クロックは、このタイムラインの作成や、親タイムラインの&1; つが削除されるときに発生します。"
  remarks: "適用することでこのイベントは、<xref:System.Windows.Media.Animation.RemoveStoryboard>アクション、ストーリー ボードを使用して、ストーリー ボードを<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>メソッド (クロックを直接操作する) 場合、またはを呼び出す、<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName>メソッド</xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=fullName></xref:System.Windows.Media.Animation.Storyboard.Remove%2A></xref:System.Windows.Media.Animation.RemoveStoryboard>。       このイベント ハンドラーは、タイムラインに関連付けられるように見えますが、実際に登録すると、<xref:System.Windows.Media.Animation.Clock>このタイムラインのスペースを作成します</xref:System.Windows.Media.Animation.Clock>。  詳細については、次を参照してください。、[タイミング イベントの概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public event EventHandler RemoveRequested;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  id: RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "取得または、このタイムラインの繰り返し動作を設定します。"
  remarks: "場合は、イテレーション<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>が指定されていると、タイムラインの<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティに設定されている`true`、順方向の&1; つの反復と旧バージョンとイテレーションは&1; つの&1; つの繰り返しで構成されます</xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A></xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>。 タイムライン、<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>プロパティ イテレーションを true に設定<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>2 は再生転送、逆の順序で、転送、し、再度後方</xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A></xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>。       タイムラインの再生回数を指定するには、代わりに、タイムラインを再生する時間の合計の長さも指定できます。 タイムラインにする、繰り返すには、この<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>値は、タイムラインの<xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</xref:System.Windows.Media.Animation.Timeline.Duration%2A>より大きくなければなりません</xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName> 備えたタイムラインなど、 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>2 秒と<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>4 秒には 2 回に再生されます</xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName></xref:System.Windows.Media.Animation.Timeline.Duration%2A>。 場合、<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>がタイムラインのより小さい<xref:System.Windows.Media.Animation.Timeline.Duration%2A>、タイムラインのアクティブな期間を短縮します</xref:System.Windows.Media.Animation.Timeline.Duration%2A></xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=fullName>。       詳細については、タイムラインの繰り返し、次を参照してください。[アニメーションの概要](~/add/includes/ajax-current-ext-md.md)です。      <a name=&quot;dependencyPropertyInfo_RepeatBehavior&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>"
  syntax:
    content: public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }
    return:
      type: System.Windows.Media.Animation.RepeatBehavior
      description: "イテレーション<> *> タイムラインを再生する回数を指定する、<xref:System.TimeSpan>このタイムラインのアクティブな期間の長さの合計を指定する値または特別な値<> *>、タイムラインが無期限に繰り返す必要がありますを指定します</xref:System.TimeSpan>。 既定値は、 <xref href=&quot;System.Windows.Media.Animation.RepeatBehavior&quot;> </xref>で、<xref:System.Windows.Media.Animation.RepeatBehavior.Count*>の`1`タイムラインを&1; 回再生することを示します</xref:System.Windows.Media.Animation.RepeatBehavior.Count*>。"
  overload: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  id: RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.RepeatBehavior*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  id: SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "指定した目的のフレーム レートを設定<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  remarks: "このメソッドを設定、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>添付プロパティ</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>。 詳細については、次を参照してください、<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>ページ。</xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> 。"
  syntax:
    content: public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable<int> desiredFrameRate);
    parameters:
    - id: timeline
      type: System.Windows.Media.Animation.Timeline
      description: "<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;> </xref>する`desiredFrameRate`が割り当てられます。"
    - id: desiredFrameRate
      type: System.Nullable{System.Int32}
      description: "このタイムラインは、1 秒間を生成するフレームの最大数または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合は、システムは、フレームの数を制御する必要があります。"
  overload: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  id: SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "この時間の進行の割合をその親の設定を取得または<xref href=&quot;System.Windows.Media.Animation.Timeline&quot;></xref>です。"
  remarks: "タイムラインの SpeedRatio 設定の効果を持たないその<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>以外の場合はその時間は、タイムラインの親を基準とした場合、または、タイムラインがルート タイムラインには、タイムラインの時計が開始された時点です</xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>。       場合<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>または<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>は指定すると、この SpeedRatio では、平均の比率がタイムラインの自然な長さを超えています</xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A></xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>。      <a name=&quot;dependencyPropertyInfo_SpeedRatio&quot;></a>## 依存プロパティ情報 | | |  |-|-|  |識別子フィールド |<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  |メタデータ プロパティに設定`true`|None |</xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>"
  example:
  - "A timeline's SpeedRatio property controls its rate of progress, relative to its parent. If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed. The following example shows several timelines with different SpeedRatio settings.  \n  \n [!code-xml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/add/codesnippet/xaml/timingbehaviors_snip.project/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]"
  syntax:
    content: public double SpeedRatio { get; set; }
    return:
      type: System.Double
      description: "タイムラインの親の速度を基準とした、このタイムラインの時間の進行速度を示す 0 より大きい有限値場合、または、これがルート タイムラインには、既定のタイムライン速度。 既定値は 1 です。"
  overload: System.Windows.Media.Animation.Timeline.SpeedRatio*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "SpeedRatio 0 より小さいか、有限値ではありません。"
  platform:
  - net462
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  id: SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  langs:
  - csharp
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  type: Field
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "識別、<xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>依存関係プロパティ</xref:System.Windows.Media.Animation.Timeline.SpeedRatio*>。"
  syntax:
    content: public static readonly System.Windows.DependencyProperty SpeedRatioProperty;
    return:
      type: System.Windows.DependencyProperty
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Media.Animation.Timeline.#ctor
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline()
  nameWithType: Timeline.Timeline()
  fullName: System.Windows.Media.Animation.Timeline.Timeline()
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>)
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration)
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  nameWithType: Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
  fullName: System.Windows.Media.Animation.Timeline.Timeline(Nullable<TimeSpan>,Duration,RepeatBehavior)
- uid: System.Windows.Media.Animation.RepeatBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: RepeatBehavior
  nameWithType: RepeatBehavior
  fullName: System.Windows.Media.Animation.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatio
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatioProperty
  nameWithType: Timeline.AccelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Media.Animation.Timeline.AllocateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock()
  nameWithType: Timeline.AllocateClock()
  fullName: System.Windows.Media.Animation.Timeline.AllocateClock()
- uid: System.Windows.Media.Animation.Clock
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Clock
  nameWithType: Clock
  fullName: System.Windows.Media.Animation.Clock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
  fullName: System.Windows.Media.Animation.Timeline.AutoReverse
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverseProperty
  nameWithType: Timeline.AutoReverseProperty
  fullName: System.Windows.Media.Animation.Timeline.AutoReverseProperty
- uid: System.Windows.Media.Animation.Timeline.BeginTime
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
  fullName: System.Windows.Media.Animation.Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTimeProperty
  nameWithType: Timeline.BeginTimeProperty
  fullName: System.Windows.Media.Animation.Timeline.BeginTimeProperty
- uid: System.Windows.Media.Animation.Timeline.Clone
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone()
  nameWithType: Timeline.Clone()
  fullName: System.Windows.Media.Animation.Timeline.Clone()
- uid: System.Windows.Media.Animation.Timeline
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Timeline
  nameWithType: Timeline
  fullName: System.Windows.Media.Animation.Timeline
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: Timeline.CloneCurrentValue()
  fullName: System.Windows.Media.Animation.Timeline.CloneCurrentValue()
- uid: System.Windows.Media.Animation.Timeline.Completed
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Completed
  nameWithType: Timeline.Completed
  fullName: System.Windows.Media.Animation.Timeline.Completed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Media.Animation.Timeline.CreateClock
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock()
  nameWithType: Timeline.CreateClock()
  fullName: System.Windows.Media.Animation.Timeline.CreateClock()
- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock(Boolean)
  nameWithType: Timeline.CreateClock(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.CreateClock(Boolean)
- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentGlobalSpeedInvalidated
  nameWithType: Timeline.CurrentGlobalSpeedInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentStateInvalidated
  nameWithType: Timeline.CurrentStateInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated
- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CurrentTimeInvalidated
  nameWithType: Timeline.CurrentTimeInvalidated
  fullName: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatioProperty
  nameWithType: Timeline.DecelerationRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty
- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DesiredFrameRateProperty
  nameWithType: Timeline.DesiredFrameRateProperty
  fullName: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty
- uid: System.Windows.Media.Animation.Timeline.Duration
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
  fullName: System.Windows.Media.Animation.Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.DurationProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DurationProperty
  nameWithType: Timeline.DurationProperty
  fullName: System.Windows.Media.Animation.Timeline.DurationProperty
- uid: System.Windows.Media.Animation.Timeline.FillBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
  fullName: System.Windows.Media.Animation.Timeline.FillBehavior
- uid: System.Windows.Media.Animation.FillBehavior
  parent: System.Windows.Media.Animation
  isExternal: false
  name: FillBehavior
  nameWithType: FillBehavior
  fullName: System.Windows.Media.Animation.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehaviorProperty
  nameWithType: Timeline.FillBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.FillBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: Timeline.FreezeCore(Boolean)
  fullName: System.Windows.Media.Animation.Timeline.FreezeCore(Boolean)
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: Timeline.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate(Timeline)
  nameWithType: Timeline.GetDesiredFrameRate(Timeline)
  fullName: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(Timeline)
- uid: System.Nullable{System.Int32}
  parent: System
  isExternal: true
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Int32>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration(Clock)
  nameWithType: Timeline.GetNaturalDuration(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDuration(Clock)
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore(Clock)
  nameWithType: Timeline.GetNaturalDurationCore(Clock)
  fullName: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(Clock)
- uid: System.Windows.Media.Animation.Timeline.Name
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
  fullName: System.Windows.Media.Animation.Timeline.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Media.Animation.Timeline.NameProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: NameProperty
  nameWithType: Timeline.NameProperty
  fullName: System.Windows.Media.Animation.Timeline.NameProperty
- uid: System.Windows.Media.Animation.Timeline.RemoveRequested
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RemoveRequested
  nameWithType: Timeline.RemoveRequested
  fullName: System.Windows.Media.Animation.Timeline.RemoveRequested
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehaviorProperty
  nameWithType: Timeline.RepeatBehaviorProperty
  fullName: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate(Timeline,Nullable<Int32>)
  nameWithType: Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
  fullName: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(Timeline,Nullable<Int32>)
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatio
- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatioProperty
  nameWithType: Timeline.SpeedRatioProperty
  fullName: System.Windows.Media.Animation.Timeline.SpeedRatioProperty
- uid: System.Windows.Media.Animation.Timeline.#ctor*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Timeline
  nameWithType: Timeline.Timeline
- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AccelerationRatio
  nameWithType: Timeline.AccelerationRatio
- uid: System.Windows.Media.Animation.Timeline.AllocateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AllocateClock
  nameWithType: Timeline.AllocateClock
- uid: System.Windows.Media.Animation.Timeline.AutoReverse*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: AutoReverse
  nameWithType: Timeline.AutoReverse
- uid: System.Windows.Media.Animation.Timeline.BeginTime*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: BeginTime
  nameWithType: Timeline.BeginTime
- uid: System.Windows.Media.Animation.Timeline.Clone*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Clone
  nameWithType: Timeline.Clone
- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CloneCurrentValue
  nameWithType: Timeline.CloneCurrentValue
- uid: System.Windows.Media.Animation.Timeline.CreateClock*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: CreateClock
  nameWithType: Timeline.CreateClock
- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: DecelerationRatio
  nameWithType: Timeline.DecelerationRatio
- uid: System.Windows.Media.Animation.Timeline.Duration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Duration
  nameWithType: Timeline.Duration
- uid: System.Windows.Media.Animation.Timeline.FillBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FillBehavior
  nameWithType: Timeline.FillBehavior
- uid: System.Windows.Media.Animation.Timeline.FreezeCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: FreezeCore
  nameWithType: Timeline.FreezeCore
- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: Timeline.GetAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: Timeline.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetDesiredFrameRate
  nameWithType: Timeline.GetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDuration
  nameWithType: Timeline.GetNaturalDuration
- uid: System.Windows.Media.Animation.Timeline.GetNaturalDurationCore*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: GetNaturalDurationCore
  nameWithType: Timeline.GetNaturalDurationCore
- uid: System.Windows.Media.Animation.Timeline.Name*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: Name
  nameWithType: Timeline.Name
- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: RepeatBehavior
  nameWithType: Timeline.RepeatBehavior
- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SetDesiredFrameRate
  nameWithType: Timeline.SetDesiredFrameRate
- uid: System.Windows.Media.Animation.Timeline.SpeedRatio*
  parent: System.Windows.Media.Animation.Timeline
  isExternal: false
  name: SpeedRatio
  nameWithType: Timeline.SpeedRatio
