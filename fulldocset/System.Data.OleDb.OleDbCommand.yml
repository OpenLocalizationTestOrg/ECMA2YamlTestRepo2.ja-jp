### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbCommand
  id: OleDbCommand
  children:
  - System.Data.OleDb.OleDbCommand.#ctor
  - System.Data.OleDb.OleDbCommand.#ctor(System.String)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  - System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  - System.Data.OleDb.OleDbCommand.Cancel
  - System.Data.OleDb.OleDbCommand.Clone
  - System.Data.OleDb.OleDbCommand.CommandText
  - System.Data.OleDb.OleDbCommand.CommandTimeout
  - System.Data.OleDb.OleDbCommand.CommandType
  - System.Data.OleDb.OleDbCommand.Connection
  - System.Data.OleDb.OleDbCommand.CreateDbParameter
  - System.Data.OleDb.OleDbCommand.CreateParameter
  - System.Data.OleDb.OleDbCommand.DbConnection
  - System.Data.OleDb.OleDbCommand.DbParameterCollection
  - System.Data.OleDb.OleDbCommand.DbTransaction
  - System.Data.OleDb.OleDbCommand.DesignTimeVisible
  - System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  - System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  - System.Data.OleDb.OleDbCommand.ExecuteReader
  - System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.ExecuteScalar
  - System.Data.OleDb.OleDbCommand.Parameters
  - System.Data.OleDb.OleDbCommand.Prepare
  - System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  - System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  - System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  - System.Data.OleDb.OleDbCommand.Transaction
  - System.Data.OleDb.OleDbCommand.UpdatedRowSource
  langs:
  - csharp
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
  type: Class
  summary: "SQL ステートメントまたはデータ ソースに対して実行するストアド プロシージャを表します。"
  remarks: "発行のインスタンスが作成されると、読み取り/書き込みプロパティは、初期値に設定されます。 これらの値の一覧は、OleDbCommand コンス トラクターを参照してください。       OleDbCommand 機能をデータ ソースでコマンドを実行する次の方法: |項目 |説明 |  |----------|-----------------|  |<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>|行を返すコマンドを実行します</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>。 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>使用する場合の希望する効果がない可能性があります SQL 設定ステートメントなどのコマンドを実行します |。  |<xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>|SQL の INSERT、DELETE、UPDATE、および一連のステートメントなどのコマンドを実行します |。  |<xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A>|たとえば、データベースから値の集計、単一の値を取得します |。      リセットすることができます、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティと OleDbCommand オブジェクトを再利用します</xref:System.Data.OleDb.OleDbCommand.CommandText%2A></xref:System.Data.OleDb.OleDbCommand.ExecuteScalar%2A></xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A>。</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> ただし、閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>新しいまたは前のコマンドを実行する前にします</xref:System.Data.OleDb.OleDbDataReader>。       致命的なエラー場合<xref:System.Data.OleDb.OleDbException>(たとえば、SQL Server 重大度レベル以上 20 の)、OleDbCommand を実行しているメソッドによって生成される、 <xref:System.Data.OleDb.OleDbConnection>、接続を閉じることができます</xref:System.Data.OleDb.OleDbConnection></xref:System.Data.OleDb.OleDbException>。 ただし、ユーザーことができます、接続を再び開き、続行します。"
  example:
  - "The following example uses the OleDbCommand, along <xref:System.Data.OleDb.OleDbDataAdapter> and <xref:System.Data.OleDb.OleDbConnection>, to select rows from an Access database. The filled <xref:System.Data.DataSet> is then returned. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the source database table.  \n  \n [!code-cs[Classic WebData OleDbCommand Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_9_1.cs)]\n [!code-vb[Classic WebData OleDbCommand Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_9_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RecordsAffected")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OleDbCommandDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem(true)]

      public sealed class OleDbCommand : System.Data.Common.DbCommand, ICloneable, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommand
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommand.ExecuteDbDataReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync
  - System.Data.Common.DbCommand.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Data.CommandBehavior,System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteReaderAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.ExecuteScalarAsync
  - System.Data.Common.DbCommand.ExecuteScalarAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Connection
  - System.Data.Common.DbCommand.System#Data#IDbCommand#CreateParameter
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Parameters
  - System.Data.Common.DbCommand.System#Data#IDbCommand#Transaction
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>クラスです。"
  remarks: "基本コンス トラクターは、すべてのフィールドを既定値を初期化します。 次の表は、 <xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>| 空の文字列 (&quot;&quot;) |  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_21_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_21_1.vb)]"
  syntax:
    content: public OleDbCommand ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>クエリのテキストを持つクラス。"
  remarks: "次の表は、 <xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|null|</xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_19_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_19_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>クエリのテキストを持つクラスと<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;></xref>です。"
  remarks: "次の表は、 <xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|値である新しい<xref:System.Data.OleDb.OleDbConnection>、`connection`パラメーターです |。      これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します</xref:System.Data.OleDb.OleDbConnection></xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/visualbasic/26f0a1c0-3abd-4fd3-81fd-_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.OleDbCommand2 Example#1](~/add/codesnippet/csharp/26f0a1c0-3abd-4fd3-81fd-_1.cs)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>を表すデータ ソースに接続します。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  id: '#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)'
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref> 、クエリのテキストを持つクラス、 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>、 <xref:System.Data.OleDb.OleDbCommand.Transaction*></xref:System.Data.OleDb.OleDbCommand.Transaction*> 。"
  remarks: "次の表は、 <xref:System.Data.OleDb.OleDbCommand>。</xref:System.Data.OleDb.OleDbCommand>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>|`cmdText`|  |<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>|&30; |  |<xref:System.Data.IDbCommand.CommandType%2A>|`Text`|  |<xref:System.Data.OleDb.OleDbCommand.Connection%2A>|値である新しい<xref:System.Data.OleDb.OleDbConnection>、`connection`パラメーターです |。      これらのパラメーターのいずれかの値を変更するには、関連するプロパティを設定します</xref:System.Data.OleDb.OleDbConnection></xref:System.Data.OleDb.OleDbCommand.Connection%2A></xref:System.Data.IDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A></xref:System.Data.OleDb.OleDbCommand.CommandText%2A>。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/csharp/e97c7061-6e79-4e9b-b76e-_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.OleDbCommand3#1](~/add/codesnippet/visualbasic/e97c7061-6e79-4e9b-b76e-_1.vb)]"
  syntax:
    content: public OleDbCommand (string cmdText, System.Data.OleDb.OleDbConnection connection, System.Data.OleDb.OleDbTransaction transaction);
    parameters:
    - id: cmdText
      type: System.String
      description: "クエリのテキスト。"
    - id: connection
      type: System.Data.OleDb.OleDbConnection
      description: "<xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>を表すデータ ソースに接続します。"
    - id: transaction
      type: System.Data.OleDb.OleDbTransaction
      description: "これで、トランザクション、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;> </xref>を実行します。"
  overload: System.Data.OleDb.OleDbCommand.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Cancel
  id: Cancel
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "実行をキャンセルしようとする、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>です。"
  remarks: "[キャンセル] を何も行われませんが、何が発生します。 ただし、プロセスでは、コマンドが、キャンセルの試行が失敗した場合は、例外は生成されません。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, executes it, and then cancels the execution. To accomplish this, the method is passed a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_0_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.Cancel Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_0_1.vb)]"
  syntax:
    content: public override void Cancel ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Clone
  id: Clone
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新たに作成<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>現在のインスタンスのコピーであるオブジェクト。"
  syntax:
    content: public System.Data.OleDb.OleDbCommand Clone ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbCommand
      description: "新しい<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>のこのインスタンスのコピーであるオブジェクト。"
  overload: System.Data.OleDb.OleDbCommand.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandText
  id: CommandText
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または SQL ステートメントまたはデータ ソースで実行するストアド プロシージャを設定します。"
  remarks: "ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります</xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。 ユーザーが、ストアド プロシージャ名に特殊文字が含まれている場合は、エスケープ文字構文を使用する必要あります。 コマンドのいずれかを呼び出すときにこのストアド プロシージャが実行される、`Execute`メソッドです。       ときに<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`TableDirect`、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティにアクセスして、テーブルまたはテーブルの名前に設定する必要があります</xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。 ユーザーが名前付きのテーブルに特殊文字が含まれている場合、エスケープ文字構文を使用する必要あります。 すべての行と列の名前付きのテーブルまたはテーブルが返されますの&1; つを呼び出すときに、`Execute`メソッドです。       設定することはできません、 <xref:System.Data.OleDb.OleDbCommand.Connection%2A>、 <xref:System.Data.OleDb.OleDbCommand.CommandType%2A>、および現在の接続が実行または fetch 操作を実行している場合に、CommandText プロパティ</xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand.Connection%2A>。       OLE DB.NET プロバイダーが SQL ステートメントまたは呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしない、<xref:System.Data.OleDb.OleDbCommand>とき<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`Text`</xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand>。 この場合、疑問符 (?) プレース ホルダーを使用する必要があります。 例:`SELECT * FROM Customers WHERE CustomerID = ?`そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.OleDb.OleDbParameterCollection></xref:System.Data.OleDb.OleDbParameter>。       詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_11_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.CommandText Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_11_1.cs)]"
  syntax:
    content: public override string CommandText { get; set; }
    return:
      type: System.String
      description: "SQL ステートメントまたはストアド プロシージャを実行します。 既定値は、空の文字列です。"
  overload: System.Data.OleDb.OleDbCommand.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  id: CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得またはコマンドを実行する試行を終了し、エラーを生成するまでの待機時間を設定します。"
  remarks: "0 の値を使用して、制限がないことを示します、コマンドを実行すると、無期限に待機するために、CommandTimeout に避ける必要があります。"
  syntax:
    content: public override int CommandTimeout { get; set; }
    return:
      type: System.Int32
      description: "時間 (秒) コマンドの実行を待機します。 既定は 30 秒です。"
  overload: System.Data.OleDb.OleDbCommand.CommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CommandType
  id: CommandType
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または設定を示す値が、どのように<xref:System.Data.OleDb.OleDbCommand.CommandText*>プロパティが解釈されます</xref:System.Data.OleDb.OleDbCommand.CommandText*>。"
  remarks: "CommandType プロパティに設定すると`StoredProcedure`、設定する必要があります、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティをストアド プロシージャの名前にします</xref:System.Data.OleDb.OleDbCommand.CommandText%2A>。 コマンドは、Execute メソッドの&1; つを呼び出すときに、このストアド プロシージャを実行します。       <xref:System.Data.OleDb.OleDbCommand.Connection%2A>、CommandType と<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>、現在の接続が実行または fetch 操作を実行している場合、プロパティを設定することはできません</xref:System.Data.OleDb.OleDbCommand.CommandText%2A></xref:System.Data.OleDb.OleDbCommand.Connection%2A>。       OLE DB .NET プロバイダーは、SQL ステートメントまたはによって呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、 <xref:System.Data.OleDb.OleDbCommand>CommandType をテキストに設定するとします</xref:System.Data.OleDb.OleDbCommand>。 この場合、疑問符 (?) プレース ホルダーを使用する必要があります。 例:`SELECT * FROM Customers WHERE CustomerID = ?`そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>パラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.OleDb.OleDbParameterCollection></xref:System.Data.OleDb.OleDbParameter>。 詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override System.Data.CommandType CommandType { get; set; }
    return:
      type: System.Data.CommandType
      description: "CommandType 値のいずれか。 既定値はテキストです。"
  overload: System.Data.OleDb.OleDbCommand.CommandType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "値は、有効な CommandType ではありませんでした。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Connection
  id: Connection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または設定、 <xref href=&quot;System.Data.OleDb.OleDbConnection&quot;> </xref>のこのインスタンスによって使用される、 <xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>です。"
  remarks: "接続を設定することはできません<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>と<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティの場合は、現在の接続で実行またはフェッチ操作が実行されます</xref:System.Data.OleDb.OleDbCommand.CommandText%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。       トランザクションが進行中は、接続を設定する場合、<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>プロパティが null でない、<xref:System.InvalidOperationException>が生成されます</xref:System.InvalidOperationException></xref:System.Data.OleDb.OleDbCommand.Transaction%2A>。 場合、<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>プロパティが null でないと、トランザクションは既にコミットまたはロールバック<xref:System.Data.OleDb.OleDbCommand.Transaction%2A>設定を null にします</xref:System.Data.OleDb.OleDbCommand.Transaction%2A></xref:System.Data.OleDb.OleDbCommand.Transaction%2A>。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_0_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Connection Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_0_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbConnection Connection { get; set; }
    return:
      type: System.Data.OleDb.OleDbConnection
      description: "データ ソースに接続します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.OleDb.OleDbCommand.Connection*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "トランザクションの処理中に、接続プロパティが変更されました。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  id: CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameter CreateDbParameter ();
    parameters: []
    return:
      type: System.Data.Common.DbParameter
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  id: CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>オブジェクト。"
  remarks: "CreateParameter メソッドは、厳密に型指定されたバージョン<xref:System.Data.IDbCommand.CreateParameter%2A>。</xref:System.Data.IDbCommand.CreateParameter%2A>の"
  syntax:
    content: public System.Data.OleDb.OleDbParameter CreateParameter ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbParameter
      description: "<xref href=&quot;System.Data.OleDb.OleDbParameter&quot;> </xref>オブジェクト。"
  overload: System.Data.OleDb.OleDbCommand.CreateParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  id: DbConnection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbConnection DbConnection { get; set; }
    return:
      type: System.Data.Common.DbConnection
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.DbConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  id: DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbParameterCollection DbParameterCollection { get; }
    return:
      type: System.Data.Common.DbParameterCollection
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  id: DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbTransaction DbTransaction { get; set; }
    return:
      type: System.Data.Common.DbTransaction
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.DbTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  id: DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または、コマンド オブジェクトをカスタマイズした Windows フォーム デザイナー コントロールに表示するかどうかを示す値を設定します。"
  syntax:
    content: public override bool DesignTimeVisible { get; set; }
    return:
      type: System.Boolean
      description: "コマンド オブジェクトをコントロールに表示するかどうかを示す値。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  id: ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader ExecuteDbDataReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "追加します。"
    return:
      type: System.Data.Common.DbDataReader
      description: "追加します。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  id: ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "に対して SQL ステートメントを実行、<xref:System.Data.OleDb.OleDbCommand.Connection*>影響を受ける行の数を返します</xref:System.Data.OleDb.OleDbCommand.Connection*>。"
  remarks: "たとえばカタログ操作を実行する、データベースの構造をクエリまたはテーブルなどのデータベース オブジェクトを作成またはを使用せず、データベース内のデータを変更する、ExecuteNonQuery を使用することができます、 <xref:System.Data.DataSet>UPDATE、INSERT、または DELETE ステートメントを実行しています</xref:System.Data.DataSet>。       ExecuteNonQuery に行が返されなかったが、出力パラメーターまたは戻り値のパラメーターにマップ データが挿入されます。       UPDATE、INSERT、および DELETE ステートメントでは、戻り値は、コマンドによって影響を受ける行の数です。 その他のすべての種類のステートメントは、戻り値は-1 です。 ロールバックが発生した場合、戻り値も-1 にです。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteNonQuery. The example is passed a string that is an SQL statement such as UPDATE, INSERT, or DELETE, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_5_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_5_1.vb)]"
  syntax:
    content: public override int ExecuteNonQuery ();
    parameters: []
    return:
      type: System.Int32
      description: "影響を受ける行の数。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続が存在しません。       または、接続が開かれていません。       - または - 接続が参加した元のコンテキストからとは異なるトランザクション コンテキスト内でコマンドを実行できません。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  id: ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "送信、 <> </> *> を<> *> をビルドし、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;></xref>です。"
  remarks: "ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります</xref:System.Data.OleDb.OleDbCommand.CommandText%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。 コマンドは、ExecuteReader を呼び出すときに、このストアド プロシージャを実行します。       終了する前に、 <xref:System.Data.OleDb.OleDbConnection>、最初に閉じて、<xref:System.Data.OleDb.OleDbDataReader>オブジェクト</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbConnection>。 またを閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>オブジェクトの再利用する予定のかどうか、<xref:System.Data.OleDb.OleDbCommand>オブジェクト</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbDataReader>。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is an SQL SELECT statement, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_11_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteReader1 Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_11_1.vb)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>オブジェクト。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続が参加した元のコンテキストからとは異なるトランザクション コンテキスト内でコマンドを実行することはできません。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  id: ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "送信、 <> </> *> を<> *>、およびビルド、 <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>のいずれかを使用して、 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>値。"
  remarks: "指定すると<xref:System.Data.CommandBehavior>で、<xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>のメソッド、<xref:System.Data.OleDb.OleDbCommand>オブジェクト、.NET Framework Data Provider for OLE DB、OLE DB を使用してバインドを実行する**IRow**インターフェイスの使用可能になる場合</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A></xref:System.Data.CommandBehavior>。 それ以外の場合、使用して、 **IRowset**インターフェイスです。 SQL ステートメントが&1; つの行のみを返すと予想される場合を指定する<xref:System.Data.CommandBehavior>もアプリケーションのパフォーマンスを向上させることができます</xref:System.Data.CommandBehavior>。       ときに、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`StoredProcedure`、<xref:System.Data.OleDb.OleDbCommand.CommandText%2A>プロパティは、ストアド プロシージャの名前に設定する必要があります</xref:System.Data.OleDb.OleDbCommand.CommandText%2A></xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。 コマンドは、 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>。</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>を呼び出すときにこのストアド プロシージャを実行します。       <xref:System.Data.OleDb.OleDbDataReader>を効率的に読み込まれる大きなバイナリ値を有効にする、特殊なモードをサポートしています</xref:System.Data.OleDb.OleDbDataReader>。 詳細については、次を参照してください、 `SequentialAccess` <xref:System.Data.CommandBehavior>。</xref:System.Data.CommandBehavior>の設定。       終了する前に、 <xref:System.Data.OleDb.OleDbConnection>、最初に閉じて、<xref:System.Data.OleDb.OleDbDataReader>オブジェクト</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbConnection>。 またを閉じる必要があります、<xref:System.Data.OleDb.OleDbDataReader>オブジェクトの再利用する予定のかどうか、<xref:System.Data.OleDb.OleDbCommand>オブジェクト</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbDataReader>。 場合、<xref:System.Data.OleDb.OleDbDataReader>で作成された<xref:System.Data.CommandBehavior>&quot;éý&quot;`CloseConnection`を閉じて、<xref:System.Data.OleDb.OleDbDataReader>接続を自動的に閉じます</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.CommandBehavior></xref:System.Data.OleDb.OleDbDataReader>。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand>, and then executes it by passing a string that is a Transact-SQL SELECT statement, and a string to use to connect to the data source. <xref:System.Data.CommandBehavior> is set to <xref:System.Data.CommandBehavior>.  \n  \n [!code-vb[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.ExecuteReader2#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "1 つ、 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>値。"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "<xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>オブジェクト。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteReader*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続が参加した元のコンテキストからとは異なるトランザクション コンテキスト内でコマンドを実行することはできません。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  id: ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "クエリを実行し、クエリによって返される結果セットの最初の行の最初の列を返します。 追加の列または行は無視されます。"
  remarks: "データ ソースから値を取得する&1; つ、たとえば、ExecuteScalar メソッドの集計値を使用します。 <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>メソッド、および&1; つの値の生成に必要な操作を実行することは、 <xref:System.Data.OleDb.OleDbDataReader>。</xref:System.Data.OleDb.OleDbDataReader>によって返されるデータを使用して</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>を使用するよりも少ないコードが必要です。       一般的な ExecuteScalar クエリは、次の c# の例のようにフォーマットできます。```   CommandText = &quot;SELECT COUNT(*) FROM region&quot;;   Int32 count = (int32) ExecuteScalar();   ```"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and then executes it using ExecuteScalar. The example is passed a string that is an SQL statement that returns an aggregate result, and a string to use to connect to the data source.  \n  \n [!code-cs[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_8_1.cs)]\n [!code-vb[Classic WebData OleDbCommand.ExecuteScalar#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_8_1.vb)]"
  syntax:
    content: public override object ExecuteScalar ();
    parameters: []
    return:
      type: System.Object
      description: "結果の最初の行の最初の列は、次の設定、または null 参照場合、結果セットは空にします。"
  overload: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "接続が参加した元のコンテキストからとは異なるトランザクション コンテキスト内でコマンドを実行することはできません。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Parameters
  id: Parameters
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Gets the <xref href=&quot;System.Data.OleDb.OleDbParameterCollection&quot;></xref>."
  remarks: "OLE DB .NET プロバイダーは、SQL ステートメントまたはによって呼び出されるストアド プロシージャにパラメーターを渡すの名前付きパラメーターをサポートしていません、<xref:System.Data.OleDb.OleDbCommand>とき<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`Text`</xref:System.Data.OleDb.OleDbCommand.CommandType%2A></xref:System.Data.OleDb.OleDbCommand>。 この場合、疑問符 (?) プレース ホルダーを使用する必要があります。 例:`SELECT * FROM Customers WHERE CustomerID = ?`そのため、順序<xref:System.Data.OleDb.OleDbParameter>オブジェクトに追加されます、<xref:System.Data.OleDb.OleDbParameterCollection>コマンド テキスト内のパラメーターの疑問符 (?) プレース ホルダーの位置に直接対応する必要があります</xref:System.Data.OleDb.OleDbParameterCollection></xref:System.Data.OleDb.OleDbParameter>。      > [!NOTE] > コレクション内のパラメーターが実行されるクエリの要件が一致しない場合、エラーが発生します。       詳細については、次を参照してください。[構成パラメーターとパラメーターのデータ型](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and displays its parameters. To accomplish this, the method is passed an <xref:System.Data.OleDb.OleDbConnection>, a query string that is an SQL SELECT statement, and an array of <xref:System.Data.OleDb.OleDbParameter> objects.  \n  \n [!code-vb[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/visualbasic/p-system.data.oledb.oled_18_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Parameters Example#1](~/add/codesnippet/csharp/p-system.data.oledb.oled_18_1.cs)]"
  syntax:
    content: public System.Data.OleDb.OleDbParameterCollection Parameters { get; }
    return:
      type: System.Data.OleDb.OleDbParameterCollection
      description: "SQL ステートメントまたはストアド プロシージャのパラメーターです。 既定では、空のコレクションです。"
  overload: System.Data.OleDb.OleDbCommand.Parameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Prepare
  id: Prepare
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "データ ソースにコマンドの準備 (またはコンパイル済み) のバージョンを作成します。"
  remarks: "場合、<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>プロパティに設定されている`TableDirect`準備が何も行われません</xref:System.Data.OleDb.OleDbCommand.CommandType%2A>。 場合<xref:System.Data.OleDb.OleDbCommand.CommandType%2A>に設定されている`StoredProcedure`場合がありますが、準備する呼び出しは成功する必要があります</xref:System.Data.OleDb.OleDbCommand.CommandType%2A>       準備を呼び出す前に、準備されたステートメントの各パラメーターのデータ型を指定します。 可変長データ型を持つパラメーターごとに設定する必要があります、**サイズ**プロパティを必要な最大サイズ。 準備するこれらの条件が満たされない場合はエラーを返します。       呼び出す場合は、 `Execute` Prepare を任意のパラメーター値を呼び出した後のメソッドがで指定された値より大きい、**サイズ**プロパティは、パラメーターの指定した元のサイズを自動的に切り捨てられます、切り捨てエラーは返されません。       出力では、(準備またはない) かどうかをパラメーター ユーザー指定のデータ型である必要があります。 可変長データ型を指定する場合は、最大値も指定する必要があります**サイズ**です。"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbCommand> and opens the connection. The example then prepares a stored procedure on the data source by passing a string that is an SQL SELECT statement and a string to use to connect to the data source.  \n  \n [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_26_1.vb)]\n [!code-cs[Classic WebData OleDbCommand.Prepare Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_26_1.cs)]"
  syntax:
    content: public override void Prepare ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.Prepare*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<> </> *> が設定されていません。      - または -、 <> </> *> が開かれていません。"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  id: ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "リセット、<xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>プロパティを既定値にします</xref:System.Data.OleDb.OleDbCommand.CommandTimeout*>。"
  remarks: "既定値、<xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>は 30 秒です</xref:System.Data.OleDb.OleDbCommand.CommandTimeout%2A>。"
  syntax:
    content: public void ResetCommandTimeout ();
    parameters: []
  overload: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  id: System#Data#IDbCommand#ExecuteReader
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Data.IDbCommand.ExecuteReader%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.OleDb.OleDbCommand>にインスタンスをキャスト、<xref:System.Data.IDbCommand>インターフェイス</xref:System.Data.IDbCommand></xref:System.Data.OleDb.OleDbCommand>。"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader ();
    parameters: []
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>オブジェクト。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  id: System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "実行、 <> </> *> に対して、 <> </> *>、およびビルド、 <xref href=&quot;System.Data.IDataReader&quot;> </xref>のいずれかを使用して、 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>値。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.OleDb.OleDbCommand>にインスタンスをキャスト、<xref:System.Data.IDbCommand>インターフェイス</xref:System.Data.IDbCommand></xref:System.Data.OleDb.OleDbCommand>。       このメンバーの説明、 <xref:System.Data.IDbCommand.ExecuteReader%2A>。</xref:System.Data.IDbCommand.ExecuteReader%2A>を参照してください。"
  syntax:
    content: System.Data.IDataReader IDbCommand.ExecuteReader (System.Data.CommandBehavior behavior);
    parameters:
    - id: behavior
      type: System.Data.CommandBehavior
      description: "1 つ、 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>値。"
    return:
      type: System.Data.IDataReader
      description: "<xref href=&quot;System.Data.IDataReader&quot;> </xref>のいずれかを使用して構築された、 <xref href=&quot;System.Data.CommandBehavior&quot;> </xref>値。"
  overload: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.OleDb.OleDbCommand>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Data.OleDb.OleDbCommand>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しい<xref:System.Object>のこのインスタンスのコピーである</xref:System.Object>。"
  overload: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.Transaction
  id: Transaction
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または設定、 <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;> </xref>を<xref href=&quot;System.Data.OleDb.OleDbCommand&quot;></xref>を実行します。"
  remarks: "場合は、既に特定の値に設定し、コマンドが実行中はトランザクションのプロパティを設定することはできません。 トランザクションのプロパティを設定する場合、<xref:System.Data.OleDb.OleDbTransaction>に同じ接続されていないオブジェクト<xref:System.Data.OleDb.OleDbConnection>として、<xref:System.Data.OleDb.OleDbCommand>オブジェクト、例外がスローされて、次回ステートメントを実行しようとする</xref:System.Data.OleDb.OleDbCommand></xref:System.Data.OleDb.OleDbConnection></xref:System.Data.OleDb.OleDbTransaction>。"
  syntax:
    content: public System.Data.OleDb.OleDbTransaction Transaction { get; set; }
    return:
      type: System.Data.OleDb.OleDbTransaction
      description: "The <xref href=&quot;System.Data.OleDb.OleDbTransaction&quot;></xref>. 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.OleDb.OleDbCommand.Transaction*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  id: UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  langs:
  - csharp
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "取得または設定にコマンドの結果を適用する方法、 <xref href=&quot;System.Data.DataRow&quot;> </xref>で使用された場合、 <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref>のメソッド、 <xref href=&quot;System.Data.OleDb.OleDbDataAdapter&quot;></xref>です。"
  remarks: "UpdatedRowSource šù &quot; è 両方のコマンドが自動的に生成される場合を除き (と同様、 <xref:System.Data.OleDb.OleDbCommandBuilder>) の場合、既定値は None です</xref:System.Data.OleDb.OleDbCommandBuilder>。       UpdatedRowSource プロパティを使用する方法の詳細については、次を参照してください。 [DataAdapter パラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public override System.Data.UpdateRowSource UpdatedRowSource { get; set; }
    return:
      type: System.Data.UpdateRowSource
      description: "1 つ、 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref>値。"
  overload: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "入力された値は、のいずれかでがない、 <xref href=&quot;System.Data.UpdateRowSource&quot;> </xref>値。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommand
  isExternal: false
  name: System.Data.Common.DbCommand
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbCommand.#ctor
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand()
  nameWithType: OleDbCommand.OleDbCommand()
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand()
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String)
  nameWithType: OleDbCommand.OleDbCommand(String)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection)
- uid: System.Data.OleDb.OleDbConnection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbConnection
  nameWithType: OleDbConnection
  fullName: System.Data.OleDb.OleDbConnection
- uid: System.Data.OleDb.OleDbCommand.#ctor(System.String,System.Data.OleDb.OleDbConnection,System.Data.OleDb.OleDbTransaction)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand(String,OleDbConnection,OleDbTransaction)
  nameWithType: OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
  fullName: System.Data.OleDb.OleDbCommand.OleDbCommand(String,OleDbConnection,OleDbTransaction)
- uid: System.Data.OleDb.OleDbTransaction
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbTransaction
  nameWithType: OleDbTransaction
  fullName: System.Data.OleDb.OleDbTransaction
- uid: System.Data.OleDb.OleDbCommand.Cancel
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel()
  nameWithType: OleDbCommand.Cancel()
  fullName: System.Data.OleDb.OleDbCommand.Cancel()
- uid: System.Data.OleDb.OleDbCommand.Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone()
  nameWithType: OleDbCommand.Clone()
  fullName: System.Data.OleDb.OleDbCommand.Clone()
- uid: System.Data.OleDb.OleDbCommand
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand
  fullName: System.Data.OleDb.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.CommandText
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
  fullName: System.Data.OleDb.OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
  fullName: System.Data.OleDb.OleDbCommand.CommandTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbCommand.CommandType
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
  fullName: System.Data.OleDb.OleDbCommand.CommandType
- uid: System.Data.CommandType
  parent: System.Data
  isExternal: false
  name: CommandType
  nameWithType: CommandType
  fullName: System.Data.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
  fullName: System.Data.OleDb.OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter()
  nameWithType: OleDbCommand.CreateDbParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateDbParameter()
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter()
  nameWithType: OleDbCommand.CreateParameter()
  fullName: System.Data.OleDb.OleDbCommand.CreateParameter()
- uid: System.Data.OleDb.OleDbParameter
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameter
  nameWithType: OleDbParameter
  fullName: System.Data.OleDb.OleDbParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
  fullName: System.Data.OleDb.OleDbCommand.DbConnection
- uid: System.Data.Common.DbConnection
  parent: System.Data.Common
  isExternal: false
  name: DbConnection
  nameWithType: DbConnection
  fullName: System.Data.Common.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
  fullName: System.Data.OleDb.OleDbCommand.DbParameterCollection
- uid: System.Data.Common.DbParameterCollection
  parent: System.Data.Common
  isExternal: false
  name: DbParameterCollection
  nameWithType: DbParameterCollection
  fullName: System.Data.Common.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
  fullName: System.Data.OleDb.OleDbCommand.DbTransaction
- uid: System.Data.Common.DbTransaction
  parent: System.Data.Common
  isExternal: false
  name: DbTransaction
  nameWithType: DbTransaction
  fullName: System.Data.Common.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
  fullName: System.Data.OleDb.OleDbCommand.DesignTimeVisible
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbCommand.Dispose(System.Boolean)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OleDbCommand.Dispose(Boolean)
  fullName: System.Data.OleDb.OleDbCommand.Dispose(Boolean)
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteDbDataReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader(CommandBehavior)
- uid: System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: false
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Data.CommandBehavior
  parent: System.Data
  isExternal: false
  name: CommandBehavior
  nameWithType: CommandBehavior
  fullName: System.Data.CommandBehavior
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery()
  nameWithType: OleDbCommand.ExecuteNonQuery()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteNonQuery()
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader()
  nameWithType: OleDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader()
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar()
  nameWithType: OleDbCommand.ExecuteScalar()
  fullName: System.Data.OleDb.OleDbCommand.ExecuteScalar()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbCommand.Parameters
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
  fullName: System.Data.OleDb.OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbParameterCollection
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbParameterCollection
  nameWithType: OleDbParameterCollection
  fullName: System.Data.OleDb.OleDbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.Prepare
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare()
  nameWithType: OleDbCommand.Prepare()
  fullName: System.Data.OleDb.OleDbCommand.Prepare()
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout()
  nameWithType: OleDbCommand.ResetCommandTimeout()
  fullName: System.Data.OleDb.OleDbCommand.ResetCommandTimeout()
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader()
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader()
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader()
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader(System.Data.CommandBehavior)
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
  fullName: System.Data.OleDb.OleDbCommand.System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OleDbCommand.System.ICloneable.Clone()
  fullName: System.Data.OleDb.OleDbCommand.System.ICloneable.Clone()
- uid: System.Data.OleDb.OleDbCommand.Transaction
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
  fullName: System.Data.OleDb.OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
  fullName: System.Data.OleDb.OleDbCommand.UpdatedRowSource
- uid: System.Data.UpdateRowSource
  parent: System.Data
  isExternal: false
  name: UpdateRowSource
  nameWithType: UpdateRowSource
  fullName: System.Data.UpdateRowSource
- uid: System.Data.OleDb.OleDbCommand.#ctor*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: OleDbCommand
  nameWithType: OleDbCommand.OleDbCommand
- uid: System.Data.OleDb.OleDbCommand.Cancel*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Cancel
  nameWithType: OleDbCommand.Cancel
- uid: System.Data.OleDb.OleDbCommand.Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Clone
  nameWithType: OleDbCommand.Clone
- uid: System.Data.OleDb.OleDbCommand.CommandText*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandText
  nameWithType: OleDbCommand.CommandText
- uid: System.Data.OleDb.OleDbCommand.CommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandTimeout
  nameWithType: OleDbCommand.CommandTimeout
- uid: System.Data.OleDb.OleDbCommand.CommandType*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CommandType
  nameWithType: OleDbCommand.CommandType
- uid: System.Data.OleDb.OleDbCommand.Connection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Connection
  nameWithType: OleDbCommand.Connection
- uid: System.Data.OleDb.OleDbCommand.CreateDbParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateDbParameter
  nameWithType: OleDbCommand.CreateDbParameter
- uid: System.Data.OleDb.OleDbCommand.CreateParameter*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: CreateParameter
  nameWithType: OleDbCommand.CreateParameter
- uid: System.Data.OleDb.OleDbCommand.DbConnection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbConnection
  nameWithType: OleDbCommand.DbConnection
- uid: System.Data.OleDb.OleDbCommand.DbParameterCollection*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbParameterCollection
  nameWithType: OleDbCommand.DbParameterCollection
- uid: System.Data.OleDb.OleDbCommand.DbTransaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DbTransaction
  nameWithType: OleDbCommand.DbTransaction
- uid: System.Data.OleDb.OleDbCommand.DesignTimeVisible*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: DesignTimeVisible
  nameWithType: OleDbCommand.DesignTimeVisible
- uid: System.Data.OleDb.OleDbCommand.Dispose*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Dispose
  nameWithType: OleDbCommand.Dispose
- uid: System.Data.OleDb.OleDbCommand.ExecuteDbDataReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteDbDataReader
  nameWithType: OleDbCommand.ExecuteDbDataReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteNonQuery*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteNonQuery
  nameWithType: OleDbCommand.ExecuteNonQuery
- uid: System.Data.OleDb.OleDbCommand.ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteReader
  nameWithType: OleDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.ExecuteScalar*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ExecuteScalar
  nameWithType: OleDbCommand.ExecuteScalar
- uid: System.Data.OleDb.OleDbCommand.Parameters*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Parameters
  nameWithType: OleDbCommand.Parameters
- uid: System.Data.OleDb.OleDbCommand.Prepare*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Prepare
  nameWithType: OleDbCommand.Prepare
- uid: System.Data.OleDb.OleDbCommand.ResetCommandTimeout*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: ResetCommandTimeout
  nameWithType: OleDbCommand.ResetCommandTimeout
- uid: System.Data.OleDb.OleDbCommand.System#Data#IDbCommand#ExecuteReader*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.Data.IDbCommand.ExecuteReader
  nameWithType: OleDbCommand.System.Data.IDbCommand.ExecuteReader
- uid: System.Data.OleDb.OleDbCommand.System#ICloneable#Clone*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OleDbCommand.System.ICloneable.Clone
- uid: System.Data.OleDb.OleDbCommand.Transaction*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: Transaction
  nameWithType: OleDbCommand.Transaction
- uid: System.Data.OleDb.OleDbCommand.UpdatedRowSource*
  parent: System.Data.OleDb.OleDbCommand
  isExternal: false
  name: UpdatedRowSource
  nameWithType: OleDbCommand.UpdatedRowSource
