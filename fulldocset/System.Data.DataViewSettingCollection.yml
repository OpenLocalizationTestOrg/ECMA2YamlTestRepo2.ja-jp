### YamlMime:ManagedReference
items:
- uid: System.Data.DataViewSettingCollection
  id: DataViewSettingCollection
  children:
  - System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  - System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  - System.Data.DataViewSettingCollection.Count
  - System.Data.DataViewSettingCollection.GetEnumerator
  - System.Data.DataViewSettingCollection.IsReadOnly
  - System.Data.DataViewSettingCollection.IsSynchronized
  - System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  - System.Data.DataViewSettingCollection.Item(System.Int32)
  - System.Data.DataViewSettingCollection.Item(System.String)
  - System.Data.DataViewSettingCollection.SyncRoot
  langs:
  - csharp
  name: DataViewSettingCollection
  nameWithType: DataViewSettingCollection
  fullName: System.Data.DataViewSettingCollection
  type: Class
  summary: "読み取り専用コレクションを格納<xref href=&quot;System.Data.DataViewSetting&quot;></xref>ごとにオブジェクト<xref href=&quot;System.Data.DataTable&quot;></xref>で、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  remarks: "ユーザーの追加または削除することはできません、<xref:System.Data.DataViewSetting>をコレクションからの<xref:System.Data.DataViewSetting>特定の<xref:System.Data.DataTable>.</xref:System.Data.DataTable>に対応する</xref:System.Data.DataViewSetting>プロパティを変更できますが、</xref:System.Data.DataViewSetting> 追加または削除、<xref:System.Data.DataTable>データセットから次のように追加しますまたは、対応する削除<xref:System.Data.DataViewSetting>コレクションから。</xref:System.Data.DataViewSetting> </xref:System.Data.DataTable> 。"
  syntax:
    content: >-
      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataViewSettingsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public class DataViewSettingCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: DataViewSettingCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "1 次元にコレクション オブジェクトをコピー<xref:System.Array>インスタンスの指定したインデックスから始まります</xref:System.Array>。"
  syntax:
    content: public void CopyTo (Array ar, int index);
    parameters:
    - id: ar
      type: System.Array
      description: "1 次元<xref:System.Array>の値がコレクションからコピー先であること</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "挿入を開始する配列のインデックス。"
  overload: System.Data.DataViewSettingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  id: CopyTo(System.Data.DataViewSetting[],System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: CopyTo(DataViewSetting[],Int32)
  nameWithType: DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "1 次元にコレクション オブジェクトをコピー<xref:System.Array>インスタンスの指定したインデックスから始まります</xref:System.Array>。"
  syntax:
    content: public void CopyTo (System.Data.DataViewSetting[] ar, int index);
    parameters:
    - id: ar
      type: System.Data.DataViewSetting[]
      description: "1 次元<xref:System.Array>の値がコレクションからコピー先であること</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "挿入を開始する配列のインデックス。"
  overload: System.Data.DataViewSettingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Count
  id: Count
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Count
  nameWithType: DataViewSettingCollection.Count
  fullName: System.Data.DataViewSettingCollection.Count
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "数を取得<xref href=&quot;System.Data.DataViewSetting&quot;></xref>内のオブジェクト、 <xref href=&quot;System.Data.DataViewSettingCollection&quot;></xref>です。"
  remarks: "<xref:System.Data.DataViewSetting>オブジェクトは、 <xref:System.Data.DataTable> <xref:System.Data.DataSet>。</xref:System.Data.DataSet>内のオブジェクト</xref:System.Data.DataTable>の数と同じ</xref:System.Data.DataViewSetting>数"
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "数<xref href=&quot;System.Data.DataViewSetting&quot;></xref>コレクション内のオブジェクト。"
  overload: System.Data.DataViewSettingCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: DataViewSettingCollection.GetEnumerator()
  fullName: System.Data.DataViewSettingCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、<xref:System.Collections.IEnumerator>のコレクション</xref:System.Collections.IEnumerator>。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>オブジェクト</xref:System.Collections.IEnumerator>。"
  overload: System.Data.DataViewSettingCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
  fullName: System.Data.DataViewSettingCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref>は読み取り専用です。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Returns <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Data.DataViewSettingCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
  fullName: System.Data.DataViewSettingCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "示す値を取得するアクセスかどうか、 <xref href=&quot;System.Data.DataViewSettingCollection&quot;> </xref> (スレッド セーフである) が同期されています。"
  remarks: "このプロパティを実装して、<xref:System.Collections.ICollection>インターフェイス</xref:System.Collections.ICollection>。       派生クラスでの同期されたバージョンを提供できる、<xref:System.Data.DataViewSettingCollection>を使用して、<xref:System.Data.DataViewSettingCollection.SyncRoot%2A>プロパティ</xref:System.Data.DataViewSettingCollection.SyncRoot%2A></xref:System.Data.DataViewSettingCollection>。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "このプロパティは常に<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>派生クラスでオーバーライドされない限り、します。"
  overload: System.Data.DataViewSettingCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  id: Item(System.Data.DataTable)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(DataTable)
  nameWithType: DataViewSettingCollection.Item(DataTable)
  fullName: System.Data.DataViewSettingCollection.Item(DataTable)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref>の指定したオブジェクト<xref href=&quot;System.Data.DataTable&quot;></xref>コレクションからです。"
  syntax:
    content: public virtual System.Data.DataViewSetting this[System.Data.DataTable table] { get; set; }
    parameters:
    - id: table
      type: System.Data.DataTable
      description: "<xref href=&quot;System.Data.DataTable&quot;> </xref>を検索します。"
    return:
      type: System.Data.DataViewSetting
      description: "コレクション<xref href=&quot;System.Data.DataViewSetting&quot;></xref>オブジェクト。"
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataViewSettingCollection.Item(Int32)
  fullName: System.Data.DataViewSettingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref>のオブジェクト、 <xref href=&quot;System.Data.DataTable&quot;> </xref>インデックスを使用して指定します。"
  syntax:
    content: public virtual System.Data.DataViewSetting this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Data.DataTable&quot;> </xref>を検索します。"
    return:
      type: System.Data.DataViewSetting
      description: "コレクション<xref href=&quot;System.Data.DataViewSetting&quot;></xref>オブジェクト。"
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataViewSettingCollection.Item(String)
  fullName: System.Data.DataViewSettingCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "取得、 <xref href=&quot;System.Data.DataViewSetting&quot;> </xref>の<xref href=&quot;System.Data.DataTable&quot;></xref>名前によって指定します。"
  syntax:
    content: public virtual System.Data.DataViewSetting this[string tableName] { get; }
    parameters:
    - id: tableName
      type: System.String
      description: "名前、 <xref href=&quot;System.Data.DataTable&quot;> </xref>を検索します。"
    return:
      type: System.Data.DataViewSetting
      description: "コレクション<xref href=&quot;System.Data.DataViewSetting&quot;></xref>オブジェクト。"
  overload: System.Data.DataViewSettingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataViewSettingCollection.SyncRoot
  id: SyncRoot
  parent: System.Data.DataViewSettingCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
  fullName: System.Data.DataViewSettingCollection.SyncRoot
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Data.DataViewSettingCollection&quot;></xref>です。"
  remarks: "派生クラスでの同期されたバージョンを提供できる、 <xref:System.Data.DataViewSettingCollection>SyncRoot プロパティを使用します</xref:System.Data.DataViewSettingCollection>。       プログラム コードがの SyncRoot で同期操作を常に実行する必要があります、 <xref:System.Data.DataViewSettingCollection>、 <xref:System.Data.DataViewSettingCollection>.</xref:System.Data.DataViewSettingCollection>で直接</xref:System.Data.DataViewSettingCollection> これにより、他のオブジェクトから派生したコレクションの正しい操作が保証されます。 具体的には、 <xref:System.Data.DataViewSettingCollection>。</xref:System.Data.DataViewSettingCollection>を同時に変更する可能性がある別スレッドと適切な同期を維持します。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "アクセスを同期するために使用できるオブジェクト、 <xref href=&quot;System.Data.DataViewSettingCollection&quot;></xref>です。"
  overload: System.Data.DataViewSettingCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Array,System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: DataViewSettingCollection.CopyTo(Array,Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataViewSettingCollection.CopyTo(System.Data.DataViewSetting[],System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo(DataViewSetting[],Int32)
  nameWithType: DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
  fullName: System.Data.DataViewSettingCollection.CopyTo(DataViewSetting[],Int32)
- uid: System.Data.DataViewSetting[]
  parent: System.Data
  isExternal: false
  name: DataViewSetting
  nameWithType: DataViewSetting
  fullName: System.Data.DataViewSetting[]
  spec.csharp:
  - uid: System.Data.DataViewSetting
    name: DataViewSetting
    nameWithType: DataViewSetting
    fullName: DataViewSetting[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataViewSettingCollection.Count
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Count
  nameWithType: DataViewSettingCollection.Count
  fullName: System.Data.DataViewSettingCollection.Count
- uid: System.Data.DataViewSettingCollection.GetEnumerator
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: DataViewSettingCollection.GetEnumerator()
  fullName: System.Data.DataViewSettingCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.DataViewSettingCollection.IsReadOnly
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
  fullName: System.Data.DataViewSettingCollection.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataViewSettingCollection.IsSynchronized
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
  fullName: System.Data.DataViewSettingCollection.IsSynchronized
- uid: System.Data.DataViewSettingCollection.Item(System.Data.DataTable)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(DataTable)
  nameWithType: DataViewSettingCollection.Item(DataTable)
  fullName: System.Data.DataViewSettingCollection.Item(DataTable)
- uid: System.Data.DataViewSetting
  parent: System.Data
  isExternal: false
  name: DataViewSetting
  nameWithType: DataViewSetting
  fullName: System.Data.DataViewSetting
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.DataViewSettingCollection.Item(System.Int32)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataViewSettingCollection.Item(Int32)
  fullName: System.Data.DataViewSettingCollection.Item(Int32)
- uid: System.Data.DataViewSettingCollection.Item(System.String)
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataViewSettingCollection.Item(String)
  fullName: System.Data.DataViewSettingCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataViewSettingCollection.SyncRoot
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
  fullName: System.Data.DataViewSettingCollection.SyncRoot
- uid: System.Data.DataViewSettingCollection.CopyTo*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataViewSettingCollection.CopyTo
- uid: System.Data.DataViewSettingCollection.Count*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Count
  nameWithType: DataViewSettingCollection.Count
- uid: System.Data.DataViewSettingCollection.GetEnumerator*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: DataViewSettingCollection.GetEnumerator
- uid: System.Data.DataViewSettingCollection.IsReadOnly*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: DataViewSettingCollection.IsReadOnly
- uid: System.Data.DataViewSettingCollection.IsSynchronized*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: DataViewSettingCollection.IsSynchronized
- uid: System.Data.DataViewSettingCollection.Item*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: Item
  nameWithType: DataViewSettingCollection.Item
- uid: System.Data.DataViewSettingCollection.SyncRoot*
  parent: System.Data.DataViewSettingCollection
  isExternal: false
  name: SyncRoot
  nameWithType: DataViewSettingCollection.SyncRoot
