### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  id: DesignerLoader
  children:
  - System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  - System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  - System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  - System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  - System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  langs:
  - csharp
  name: DesignerLoader
  nameWithType: DesignerLoader
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader
  type: Class
  summary: "カスタム デザイナー ローダーを実装するために使用する基本デザイナー ローダーのインターフェイスを提供します。"
  remarks: "デザイナーとデザイナーのコンポーネントのカスタムの読み込みをサポートするためには、DesignerLoader を実装できます。 デザイナー ローダーは、記憶域に開いているドキュメントの後にドキュメントを読み込むときにローダー変更内容を書き込む担当も、<xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>メソッドが呼び出されます</xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>。       既定では、Visual Studio 開発環境は独自さまざまな基本的なデザイナーのプロジェクトを読み込むことができる DesignerLoader を作成します。 カスタム デザイナー ローダーを作成するから継承し、DesignerLoader、抽象クラスを実装する必要があります。 直接、パブリック コンス トラクターがあるないために、DesignerLoader がインスタンス化することはできません。       ときに<xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A>が呼び出されると、デザイナー ローダー デザイン ドキュメントを読み込みます、デザイナー画面を使用して、表示、<xref:System.ComponentModel.Design.IDesignerHost>インターフェイス、および呼び出し<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>上、<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>インターフェイスの設定が終わったら</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost></xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A></xref:System.ComponentModel.Design.IDesignerHost></xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A>。 <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>実装が同じに<xref:System.ComponentModel.Design.IDesignerHost>。</xref:System.ComponentModel.Design.IDesignerHost>を実装するクラスに通常</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>は、。"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DesignerLoader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>クラスです。"
  syntax:
    content: protected DesignerLoader ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  id: BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "デザイナーの読み込みを開始します。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>に渡される、`host`パラメーターは、通常はデザイナー ホストと同じオブジェクトです</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>。 ローダーのホストにこの参照を使用してデザイナー ローダーはデザイン ドキュメントを再読み込みし、デザイン ドキュメントの読み込みが完了したことを指定できます。"
  syntax:
    content: public abstract void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);
    parameters:
    - id: host
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "ローダー ホストがこのローダーは、コンポーネントを読み込みます。"
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;></xref>です。"
  remarks: "<xref:System.ComponentModel.Design.Serialization.DesignerLoader>。</xref:System.ComponentModel.Design.Serialization.DesignerLoader>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.ComponentModel.Design.Serialization.DesignerLoader>使用不可の状態</xref:System.ComponentModel.Design.Serialization.DesignerLoader>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.ComponentModel.Design.Serialization.DesignerLoader>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.Design.Serialization.DesignerLoader>占有されていた</xref:System.ComponentModel.Design.Serialization.DesignerLoader></xref:System.ComponentModel.Design.Serialization.DesignerLoader>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.ComponentModel.Design.Serialization.DesignerLoader></xref:System.ComponentModel.Design.Serialization.DesignerLoader>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.ComponentModel.Design.Serialization.DesignerLoader>オブジェクトの`Finalize`メソッド</xref:System.ComponentModel.Design.Serialization.DesignerLoader>。"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  id: Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "書き込みが、デザイナーがから読み込まれた場所の変更をキャッシュします。"
  remarks: "デザイナーのホストは、ドキュメントに加えられた変更が、デザイナー ローダーによって保存されたことを確認するには、定期的にこのメソッドを呼び出します。 このメソッドは、パフォーマンスを向上させるために非同期の書き込みスキームを実装するデザイナー ローダーを使用します。 このメソッドの既定の実装では、何も行われません。"
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  id: Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "ローダーが現在のドキュメントを読み込んでいるかどうかを示す値を取得します。"
  syntax:
    content: public virtual bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>現在、ローダーがドキュメントを読み込んでいる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerLoaderHost
  nameWithType: IDesignerLoaderHost
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader
  nameWithType: DesignerLoader.DesignerLoader
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad
  nameWithType: DesignerLoader.BeginLoad
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose
  nameWithType: DesignerLoader.Dispose
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush
  nameWithType: DesignerLoader.Flush
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
