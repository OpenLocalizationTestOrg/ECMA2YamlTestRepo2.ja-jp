### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  id: CatalogZoneBase
  children:
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  - System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState
  langs:
  - csharp
  name: CatalogZoneBase
  nameWithType: CatalogZoneBase
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  type: Class
  summary: "カタログとして機能するすべてのゾーン コントロールの基底クラスとして機能します。 カタログの一覧に含まれる<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;></xref>ユーザーが Web ページに追加できるコントロールです。"
  remarks: "CatalogZoneBase クラスは、<xref:System.Web.UI.WebControls.WebParts.ToolZone>クラス</xref:System.Web.UI.WebControls.WebParts.ToolZone>から継承される基本クラス 派生ゾーンの動作の基本セットを提供します。       CatalogZoneBase クラスには、ユーザーを追加できるように一意のユーザー インターフェイス (UI) が用意されています<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールと Web ページには、他のサーバー コントロールです</xref:System.Web.UI.WebControls.WebParts.WebPart>。 など、CatalogZoneBase クラスから派生したコントロール<xref:System.Web.UI.WebControls.WebParts.CatalogZone>で実際に配置された Web ページをコントロールには</xref:System.Web.UI.WebControls.WebParts.CatalogZone>。 呼ばれる、その他のコントロールのコンテナーとして機能する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ページに追加するユーザー用のサーバー コントロールのリストを作成するコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 CatalogZoneBase クラスから派生するゾーンでは、ページがカタログ表示モードが場合にのみ表示されることができます。      > [!NOTE] > A CatalogZoneBase ゾーンにのみ含めることができます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、およびこれに対し、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールが CatalogZoneBase ゾーンにのみ存在できます</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       サーバー コントロールのカタログを追加するためのメカニズムは、次の一連の基本<xref:System.Web.UI.WebControls.WebParts.CatalogPart>クラス</xref:System.Web.UI.WebControls.WebParts.CatalogPart>から派生した&3; つのコントロール      |コントロール |説明 |  |-------------|-----------------|  |<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|ページで閉じられているコントロールへの参照を保持します</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>。 これらのコントロールできますを再度開く (ページに再度追加する) のユーザーによって |。  |<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Web パーツのカタログの Web ページのマークアップで宣言されているコントロールへの参照が含まれています</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>。 これらのコントロールは、ユーザーが Web ページに追加できます |。  |<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|ユーザーが Web ページにコントロールを追加できるように、カタログに定義ファイルをアップロードするための UI を提供します</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>。 定義ファイルを含む XML ファイルは、します。コントロールの設定をインポートする web パーツのファイル名拡張子。 定義ファイルをインポートする前に、コントロールは、サーバー上に存在する必要があります |。      CatalogZoneBase クラスにはさまざまなプロパティのカタログを表示するための便利な<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>プロパティは、ページに、カタログから選択したコントロールを追加する動詞を参照中に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>プロパティは、カタログを閉じますしてブラウズ モードをページの表示モードを返す動詞を参照します</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティは、すべてのコレクションを参照<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>。 いくつかのテキスト指向プロパティなど<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>、カタログの適切な既定のテキストを提供する基本プロパティをオーバーライドします</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>プロパティにコントロールをどのゾーンに追加されますを選択できるドロップダウン リスト コントロールの横のテキストが含まれています</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>。       CatalogZoneBase クラスでは、その他のいくつかのプロパティが含まれています。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティは、現在選択されている一意の文字列識別子<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>プロパティを関連付けることができるコントロールを設定してアイコンを表示するかどうかを示します、<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>プロパティを<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>。       <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティにはへのリンクのスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンで現在選択されていないコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>。 これに対し、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティにはへのリンクのスタイル属性が含まれています、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>、ユーザーが、ゾーンで現在選択されているコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>。       プロパティに加えて、一部のメソッドにある、標準的なイベント処理に加えて、CatalogZoneBase クラスとは一意にコントロールのカタログを処理するために設計されています、基本の他のコントロールから継承されたメソッドを表示します。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>メソッドを囲む各 chrome (周辺 UI 要素に罫線、動詞、アイコン、および、タイトルなど) を作成する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>、ゾーン内のコントロールも、コントロールのレンダリングを処理します</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは、抽象メソッドです派生クラスでオーバーライドのすべてのインスタンスを作成するために、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンに含まれるコントロール。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> 。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>場合、派生クラスでメソッドを呼び出すことが、コレクションの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンの変更の一部のプログラムによる理由、および派生クラス内のコントロールは、コレクションを再作成する必要があります</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>メソッドが横のチェック ボックスの既存の状態を読み込みます、<xref:System.Web.UI.WebControls.WebParts.WebPart>ページがサーバーにポストバックされるときに、カタログ内のコントロール逆に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>メソッドは、チェック ボックスの状態を保存します</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>。 最後に、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>メソッドを提供する各リンクのすべてのレンダリング<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーンに含まれるコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>。"
  example:
  - "The following code example demonstrates several declarative and programmatic uses of the CatalogZoneBase class. Because the class is abstract, the code examples use the derived <xref:System.Web.UI.WebControls.WebParts.CatalogZone> class that ships with the Web Parts control set, demonstrating the properties and methods that it inherits from the CatalogZoneBase class.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on the Web page.  \n  \n-   A Web page that contains a reference to a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control, and some code that demonstrates usage of some key CatalogZoneBase class members.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control that is added to the custom <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control.  \n  \n-   A description of how the example works in a browser.  \n  \n The first part of this code example is the user control that enables you to change display modes on the page. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#8](~/add/codesnippet/csharp/t-system.web.ui.webcontr_157_1.ascx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#8](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_157_1.ascx)]  \n  \n The second part of the code example is a Web page that contains a declarative reference to a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control. Near the top of the page are two `Register` directives--one for the user control, and one for the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Notice that below the `<asp:WebPartZone>` element is an `<asp: CatalogZone>` element that contains declarative references to the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and to an ASP.NET <xref:System.Web.UI.WebControls.Calendar> control. The zone also has a variety of tags and properties set to determine its appearance and behavior. Between the `<script>` tags in the page is a variety of event-handling code, most of which demonstrates the various programmatic uses of the CatalogZoneBase members.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_157_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_157_2.aspx)]  \n  \n The third part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`. It is declared within the zone, and an end user can add it from the catalog to the page. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a demonstration of both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#9](~/add/codesnippet/csharp/t-system.web.ui.webcontr_157_3.cs)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_157_3.vb)]  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list box to switch to catalog display mode. When the catalog is visible, you can see the two server controls that can be added from the catalog to the page, and you can also note in the UI the effects of the declarative and programmatic uses of the CatalogZoneBase class members."
  syntax:
    content: 'public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler'
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.CompositeControl
  - System.Web.UI.WebControls.WebParts.WebZone
  - System.Web.UI.WebControls.WebParts.ToolZone
  implements:
  - System.Web.UI.IPostBackDataHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.WebControls.CompositeControl.Controls
  - System.Web.UI.WebControls.CompositeControl.DataBind
  - System.Web.UI.WebControls.CompositeControl.RecreateChildControls
  - System.Web.UI.WebControls.CompositeControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeControl.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  - System.Web.UI.WebControls.WebParts.ToolZone.AssociatedDisplayModes
  - System.Web.UI.WebControls.WebParts.ToolZone.Display
  - System.Web.UI.WebControls.WebParts.ToolZone.EditUIStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderCloseVerb
  - System.Web.UI.WebControls.WebParts.ToolZone.HeaderVerbStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.InstructionTextStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.LabelStyle
  - System.Web.UI.WebControls.WebParts.ToolZone.OnDisplayModeChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.ToolZone.OnSelectedWebPartChanged(System.Object,System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.ToolZone.RenderHeader(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.ToolZone.RenderVerb(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebParts.WebPartVerb)
  - System.Web.UI.WebControls.WebParts.ToolZone.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.WebParts.ToolZone.Visible
  - System.Web.UI.WebControls.WebParts.WebZone.BackImageUrl
  - System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneTextStyle
  - System.Web.UI.WebControls.WebParts.WebZone.ErrorStyle
  - System.Web.UI.WebControls.WebParts.WebZone.FooterStyle
  - System.Web.UI.WebControls.WebParts.WebZone.GetEffectiveChromeType(System.Web.UI.WebControls.WebParts.Part)
  - System.Web.UI.WebControls.WebParts.WebZone.HasFooter
  - System.Web.UI.WebControls.WebParts.WebZone.HasHeader
  - System.Web.UI.WebControls.WebParts.WebZone.HeaderStyle
  - System.Web.UI.WebControls.WebParts.WebZone.Padding
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromePadding
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeStyle
  - System.Web.UI.WebControls.WebParts.WebZone.PartChromeType
  - System.Web.UI.WebControls.WebParts.WebZone.PartStyle
  - System.Web.UI.WebControls.WebParts.WebZone.PartTitleStyle
  - System.Web.UI.WebControls.WebParts.WebZone.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebZone.RenderClientScript
  - System.Web.UI.WebControls.WebParts.WebZone.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebZone.TagKey
  - System.Web.UI.WebControls.WebParts.WebZone.VerbButtonType
  - System.Web.UI.WebControls.WebParts.WebZone.VerbStyle
  - System.Web.UI.WebControls.WebParts.WebZone.WebPartManager
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CatalogZoneBase()
  nameWithType: CatalogZoneBase.CatalogZoneBase()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogZoneBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "継承クラス インスタンスによって使用されるクラスを初期化します。 このコンス トラクターは、継承クラスによってのみ呼び出すことができます。"
  remarks: "派生クラスが初期化されるときなど、コンス トラクターが呼び出されます、 <xref:System.Web.UI.WebControls.WebParts.CatalogZone>Web パーツ コントロール セットで提供されるクラス</xref:System.Web.UI.WebControls.WebParts.CatalogZone>。 基本 CatalogZoneBase コンス トラクターは、適切なを渡すことによって、Web パーツ カタログ ユーザー インターフェイス (UI) を表示するページを準備するのに役立ちます<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>オブジェクトを<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロール</xref:System.Web.UI.WebControls.WebParts.WebPartManager></xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>。 具体的には、コンス トラクター パス、<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>オブジェクト</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>。"
  syntax:
    content: protected CatalogZoneBase ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb
  id: AddVerb
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: AddVerb
  nameWithType: CatalogZoneBase.AddVerb
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>カタログから Web パーツ ページにコントロールを追加するエンドユーザーを有効にするオブジェクト。"
  remarks: "Add 動詞が<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>から派生したコントロールに AddVerb プロパティによって参照されます。 Add 動詞は、Web ページに、カタログでエンドユーザーが選択するコントロールを追加します。 通常、add 動詞として表示されます、ユーザー インターフェイス (UI) で、<xref:System.Web.UI.WebControls.Button>を制御することもできますリンクやイメージが</xref:System.Web.UI.WebControls.Button>。       Add 動詞は、ゾーン レベルのコントロールをいくつかありますが<xref:System.Web.UI.WebControls.WebParts.CatalogPart>カタログ内のコントロール、追加動詞は、ユーザーが選択したすべてのコントロールに適用され、選択されたゾーンに追加します</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  example:
  - "The following code example demonstrates how to access the AddVerb property both declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n The first part of the code example shows how to access the <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A> property declaratively in a Web page. This example customizes the text for the verb.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_468_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_468_1.aspx)]  \n  \n The second part of the example shows how to access the AddVerb property programmatically, by using a toggle button to enable or disable it.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_468_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_468_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, you can examine the customized text on the <xref:System.Web.UI.WebControls.Button> control for the add verb, and you can click the **Enable or Disable Verbs** button to demonstrate that you can access the apply verb programmatically."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerb
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>をエンドユーザーをカタログから Web ページにコントロールを追加します。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome
  id: CatalogPartChrome
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CatalogPartChrome
  nameWithType: CatalogZoneBase.CatalogPartChrome
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "インスタンスへの参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartChrome&quot;> </xref>クラスに関連付けられている、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "ときに、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>メソッドが呼び出されると、1 つのインスタンスを作成、<xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>クラス、およびこのインスタンスがすべての周辺機器のユーザー インターフェイス (UI) 要素 (クロムとも呼ばれます) を表示するために使用される<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>。       個々 の chrome 要素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールがその境界線およびタイトルのテキストを記載します</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>Web パーツ コントロール セットに付属するコントロールでは、既定では、ヘッダーの動詞はありません</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartChrome
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartChrome&quot;> </xref>ゾーンに関連付けられています。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts
  id: CatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CatalogParts
  nameWithType: CatalogZoneBase.CatalogParts
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "すべてのコレクションを取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>に含まれるコントロール、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "CatalogParts プロパティは、すべてのコレクションへの参照を提供、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールです</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 両方を参照して、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>Web パーツ コントロール セット、および任意のカスタム コントロール<xref:System.Web.UI.WebControls.WebParts.CatalogPart>をゾーンに追加されるコントロールです</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       別の方法が CatalogParts プロパティにアクセスするし、プロパティは、呼び出しに最初に、コレクションが作成、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッド</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>。      > [!NOTE] > ことに注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogPart>のコレクションに追加されている<xref:System.Web.UI.WebControls.WebParts.CatalogPart>の実装内のコントロール、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>メソッドは、ID プロパティに割り当てられている値を持つ必要があります、CatalogParts プロパティに割り当てられると、コレクション、例外がスローするそれ以外の場合</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A></xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  example:
  - "The following code example demonstrates how to access the CatalogParts property programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n The code example shows how to access the CatalogParts property, iterate through the collection, and list the IDs of all the <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_428_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_428_1.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, you can click the **List CatalogParts** button to demonstrate how the CatalogParts property can be accessed."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>を含むすべての個人<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>ゾーン内のコントロールです。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>コレクションに追加されているがありませんでした、ID プロパティに割り当てられた値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close
  id: Close
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: Close()
  nameWithType: CatalogZoneBase.Close()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "カタログの表示モードから通常のブラウズ モードの Web ページに切り替えます。"
  remarks: "Close メソッドは、カタログ内の現在選択されているコントロールを無視します。 呼び出すだけ、<xref:System.Web.UI.WebControls.WebParts.WebPartManager>コントロールを Web ページをブラウズ モードを返します</xref:System.Web.UI.WebControls.WebParts.WebPartManager>。"
  syntax:
    content: protected override void Close ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb
  id: CloseVerb
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CloseVerb
  nameWithType: CatalogZoneBase.CloseVerb
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "参照を取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>カタログのユーザー インターフェイス (UI) を終了し、ページを通常のブラウズ モードに戻りますにエンドユーザーを有効にするオブジェクト。"
  remarks: "閉じる動詞が<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>クラス</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>から派生したコントロールに CloseVerb プロパティによって参照されます。       ユーザーは、閉じる動詞ゾーンのフッターには、をクリックします。 ユーザーがクリックすると、閉じる動詞、 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>、ユーザーが選択したコントロールは無視されます、UI を閉じると、カタログ、およびページは、通常のブラウズ モードに戻ります</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       閉じる動詞は、ゾーン レベルの制御、そのアクションが全体のゾーンのレベルで適用されることを意味します。 ユーザーには、閉じる動詞がクリックすると、任意のコントロールを選択されましたが、ページに追加されませんが無視されます、カタログは閉じられ、ページは、ブラウズ モードに戻ります。"
  example:
  - "The following code example demonstrates how to access the CloseVerb property both declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n The first part of the code example shows how to access the CloseVerb property declaratively in a Web page. This example customizes the <xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A> property for the verb.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1050_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1050_1.aspx)]  \n  \n The second part of the example shows how to access the CloseVerb property programmatically, by using a toggle button to enable or disable it.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1050_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1050_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, by positioning your mouse pointer over the **Close** button, you can see its description text in a ToolTip. You can also click the **Enable or Disable Verbs** button to demonstrate that you can access the close verb programmatically."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartVerb
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartVerb&quot;> </xref>をエンドユーザーをカタログ UI には、Web ページを閉じます。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome
  id: CreateCatalogPartChrome
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CreateCatalogPartChrome()
  nameWithType: CatalogZoneBase.CreateCatalogPartChrome()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "インスタンスを作成、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartChrome&quot;> </xref>周辺機器のユーザー インターフェイス (UI) 要素を表示するために使用されるオブジェクト<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>ゾーン内のコントロールです。"
  remarks: "CreateCatalogPartChrome メソッドを返します、<xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>オブジェクト</xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>。 個々 の chrome 要素<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールがその境界線およびタイトルのテキストを記載します</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>Web パーツ コントロール セットに付属するコントロールでは、既定では、ヘッダーの動詞はありません</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 ただし、設定することは、<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>のプロパティ、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>制御、最小化したり、必要に応じて、コントロールをプログラムで復元できるようにします</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>。"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartChrome
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartChrome&quot;> </xref>ゾーンの周辺の UI 要素を表示します。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts
  id: CreateCatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CreateCatalogParts()
  nameWithType: CatalogZoneBase.CreateCatalogParts()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "作成の詳細を処理するゾーンを派生する基本メソッド宣言をオーバーライドできますを提供、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>ゾーンに含まれるコントロール。"
  remarks: "CreateCatalogParts メソッドは実装を提供します。 派生クラスで実装するものでは、コレクションのインスタンスを作成するために使用する必要があります<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ホストする Web ページがカタログ モードになるたびに、ゾーンに含まれるコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=fullName>メソッドは、CreateCatalogParts メソッドの実装の&1; つの例を提供します</xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=fullName>。      > [!NOTE] > ことに注意してください<xref:System.Web.UI.WebControls.WebParts.CatalogPart>のコレクションに追加されている<xref:System.Web.UI.WebControls.WebParts.CatalogPart>CreateCatalogParts メソッドの実装内のコントロールは、ID プロパティに割り当てられている値を持つ必要があります、例外がスローする、コレクションに割り当てるときにそれ以外の場合、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A></xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       メソッドを作成できる、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>いくつかのソースからのコントロール: 内で永続化の形式で宣言されているコントロール、<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>コントロール、または XML ファイルやデータベースなどのさまざまなストレージ機構に保存されているコントロール</xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  syntax:
    content: protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.CatalogPartCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPartCollection&quot;> </xref>のコレクションを含む<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>ゾーンに関連付けられているコントロール。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: CatalogZoneBase.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "関連付けられたコントロールの子のセットを作成、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  syntax:
    content: protected override void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText
  id: EmptyZoneText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: EmptyZoneText
  nameWithType: CatalogZoneBase.EmptyZoneText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはゾーンにコントロールが含まれないときに表示されるメッセージを設定します。"
  remarks: "EmptyZoneText プロパティの文字列値は、Web ページがカタログ モードになる場合、表示は、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンが含まれていませんには<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。"
  example:
  - "The following code example demonstrates how to use the EmptyZoneText property declaratively. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the code example declares two `<asp:catalogzone>` elements, and the second one does not declare any <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, though it does assign a value to the EmptyZoneText property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1209_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1209_1.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, notice that below the first zone, which contains two <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, the second zone appears, and displays the contents of the EmptyZoneText property because it contains no controls."
  syntax:
    content: public override string EmptyZoneText { get; set; }
    return:
      type: System.String
      description: "空の領域に表示されるメッセージを含む文字列。 既定のカルチャに固有の文字列は、.NET Framework で提供されます。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: HeaderText
  nameWithType: CatalogZoneBase.HeaderText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはゾーンのヘッダー領域のテキストを設定します。"
  remarks: "HeaderText プロパティの文字列値がのヘッダー領域に表示されます、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン、ゾーンの最上位にある</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。 ページがカタログ モードになるし、カタログのユーザー インターフェイス (UI) が表示され、HeaderText プロパティのテキストが表示されます。"
  example:
  - "The following code example demonstrates how to use the HeaderText property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the code example declares two `<asp:catalogzone>` elements. The second one does not declare any <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, but both declare a value for the HeaderText property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_616_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_616_1.aspx)]  \n  \n In the second part of the code example, the value of the HeaderText property in the first zone is programmatically assigned to a different value.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_616_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_616_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, notice the values of each HeaderText property displayed in the header area of each zone. You can click the **Set Zone Text Properties** button, and the HeaderText property of the upper zone is set to the value assigned to it in the code."
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "ゾーンのヘッダー テキストを含む文字列です。 既定のカルチャに固有の文字列は、.NET Framework で提供されます。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText
  id: InstructionText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: InstructionText
  nameWithType: CatalogZoneBase.InstructionText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはエンドユーザーの指示を提供するゾーンでのテキストを設定します。"
  remarks: "ヘッダー領域のすぐ下 InstructionText プロパティの文字列値が表示されます、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。 ページがカタログ モードになるし、カタログのユーザー インターフェイス (UI) が表示され、InstructionText プロパティのテキストが表示されます。       InstructionText プロパティの目的は、一般的な手順については、カタログの UI が表示される場合の対処方法をユーザーに提供を開始します。"
  example:
  - "The following code example demonstrates how to use the InstructionText property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the code example declares two `<asp:catalogzone>` elements, and the first one declares a value for the InstructionText property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_123_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_123_1.aspx)]  \n  \n In the second part of the code example, the value of the InstructionText property in the first zone is programmatically assigned to a different value.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_123_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_123_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, notice the value of the InstructionText property displayed in the header area of each zone. You can click the **Set Zone Text Properties** button, and the InstructionText property of the upper zone is set to the value assigned to it in the code."
  syntax:
    content: public override string InstructionText { get; set; }
    return:
      type: System.String
      description: "エンドユーザーの指示を含む文字列です。 既定では、カルチャに固有の文字列は、Web パーツ コントロール セットによって提供されます。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts
  id: InvalidateCatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: InvalidateCatalogParts()
  nameWithType: CatalogZoneBase.InvalidateCatalogParts()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コレクションを破棄<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>コントロールに関連付けられている、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "メソッドを呼び出せるによって派生 InvalidateCatalogParts クラスの一覧<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>いくつかの理由から、ゾーンが変更され、派生クラスは、更新の一覧を取得する必要があります<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 派生クラスでは、現在のコレクションを破棄する InvalidateCatalogParts を呼び出す必要があります最初とし、基本クラスは<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>ように更新されたコレクションを作成するために必要です</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>。"
  syntax:
    content: protected void InvalidateCatalogParts ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: CatalogZoneBase.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "コントロールのビュー ステートが無効になっている場合でも、ポストバック間で永続化する必要がありますコントロールのプロパティの前のページ要求の状態を読み込みます。"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "以前に保存された状態データ。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>有効なコントロールの状態はありません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: LoadPostData(String,NameValueCollection)
  nameWithType: CatalogZoneBase.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "プロセスのチェック ボックスをオンの状態、 <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>ページがサーバーにポストされたときに、カタログ内のコントロールです。"
  remarks: "このメソッドは、のコレクションを反復処理<xref:System.Web.UI.WebControls.CheckBox>決定するためのコントロール<xref:System.Web.UI.WebControls.WebParts.WebPart>カタログ内の他のサーバー コントロールは、ユーザーが選択されているか</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.CheckBox>。 選択した項目は、Web ページに対応するコントロールを追加し、処理される内部の配列に割り当てられます。       メソッドは、コードから呼び出されるものでありません。Web パーツ コントロール セットによって内部的に使用されます。"
  syntax:
    content: protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "コントロールのキー識別子。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "サーバーにポスト名前/値ペアのコレクション。"
    return:
      type: System.Boolean
      description: "オーバーライドされた基底メソッドとは異なり、このメソッドは常に返します<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>クラスが変更イベントを公開しないため、します。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: CatalogZoneBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "以前に保存されたゾーンの状態情報を読み込みます。"
  remarks: "このメソッドは、主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドは、まず、既存の状態情報を読み込めません基本メソッドを呼び出します。 次に、add 動詞、close の動詞の状態情報を含むビュー状態データ オブジェクトを追加、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>オブジェクト、および<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>オブジェクト</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>。"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "以前に保存された状態データ。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "サイズ、 <code> savedState </code>オブジェクトが現在のビュー状態オブジェクトのサイズと等しくないです。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: CatalogZoneBase.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ページ コントロールの状態を必要とされるようにページ オブジェクトを登録します。"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: CatalogZoneBase.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "発生させる、 <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>イベントと、ページのオブジェクトがポストバックを要求できるように登録します。"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>イベント データを格納します</xref:System.EventArgs>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle
  id: PartLinkStyle
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: PartLinkStyle
  nameWithType: CatalogZoneBase.PartLinkStyle
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "スタイル属性を含むオブジェクトを取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>ゾーンで現在選択されていないコントロール。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>、ゾーンの種類ごとにリンクが表示されます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart></xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> </xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 ユーザーがクリックしたとき、対応する、リンクのいずれかの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、選択したコントロールになり、その選択したコントロールに含まれる子コントロールが見えるようになります</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       <xref:System.Web.UI.WebControls.Style>PartLinkStyle プロパティによって参照されるオブジェクトにはスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>現在選択されていないコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.Style>。 プロパティによって参照されるオブジェクトは、読み取り専用をそのまま使用する、選択されていないため、基になるスタイル特性を設定する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  example:
  - "The following code example demonstrates how to use the PartLinkStyle property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the first part of the code example declares two `<asp:catalogzone>` elements, and the first one declares a value for the PartLinkStyle property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1069_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1069_1.aspx)]  \n  \n In the second part of the code example, the text color for the unselected <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls is set to a different value.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1069_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1069_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, notice the style attributes of the unselected <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls listed in the zone (by default, the selected <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is the <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> control). You can click the **Change Part Link Styles** button to change the text color of the unselected controls. You can also click the links for the unselected controls, to see how the style attributes change when a control is selected."
  syntax:
    content: public System.Web.UI.WebControls.Style PartLinkStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>現在選択されていないコントロールのスタイル属性を格納しています。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: CatalogZoneBase.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ゾーン動詞のいずれかに関連付けられたアクションを実行するか、サーバーへのポストバック イベントが発生します。"
  remarks: "場合、`eventArgument`パラメーターのデータが追加動詞または close 動詞がクリックされたし、RaisePostBackEvent メソッドは、追加するなどの動詞に関連付けられているアクションを実行することを示す<xref:System.Web.UI.WebControls.WebParts.WebPart> ページで、またはカタログを終了するコントロール</xref:System.Web.UI.WebControls.WebParts.WebPart>。 メソッドは、その他の何らかの理由で呼び出されているが場合、サーバーにポストバック イベントを生成する基本メソッドが呼び出されます。"
  syntax:
    content: protected override void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "A <xref:System.String>、イベントの引数を格納している</xref:System.String>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: CatalogZoneBase.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "指定されたゾーンをレンダリング<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref>オブジェクト。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>メソッドから基本メソッドをオーバーライド、<xref:System.Web.UI.WebControls.WebControl>クラスを呼び出して、<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>メソッドで、実行時に、ゾーン コントロールの HTML フォームが表示されることを確認します</xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A></xref:System.Web.UI.WebControls.WebControl></xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>。 検証した後に、メソッドは、ゾーンの残りの内容を表示します。"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  id: RenderBody(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: RenderBody(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderBody(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "派生したゾーンの本体領域を表示するために基本メソッドをオーバーライドして、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>クラスです。"
  remarks: "RenderBody メソッドの本体領域の表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンでは、ヘッダーとページ フッターの領域間でのメイン コンテンツ領域は、含む<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。       RenderBody メソッドで基本メソッドのオーバーライド、<xref:System.Web.UI.WebControls.WebParts.WebZone>レイアウトとスタイルに対応する特殊な表示属性を提供するクラスがのみに適用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase></xref:System.Web.UI.WebControls.WebParts.WebZone>。 メソッドは、本文の内容全体を含むテーブルを出力し、そのテーブル内に設定など、さまざまな条件に応じて別の属性値数<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールは、ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 複数ある場合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、リンクが作成された各コントロールについて、および現在選択されているコントロールの内容のみが表示されます</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 特別なスタイル属性が設定されて、 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A>、選択したプロパティ<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールと、現在選択されていない</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A>。       ある場合ありません<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロール、RenderBody メソッドは、の値を表示、<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  syntax:
    content: protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの本文の内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)
  id: RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: RenderCatalogPartLinks(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderCatalogPartLinks(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "リンクを個別にレンダリング<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>コントロールで、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "RenderCatalogPartLinks メソッドでは、リンクを表示、個々 に<xref:System.Web.UI.WebControls.WebParts.CatalogPart>が複数ある場合に、ゾーンで制御<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       現在選択されているリンク<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロールを表示する異なる方法で選択されていないコントロールから目立つようにします</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 開発者を使用してリンクについては、選択されていると、選択されていないコントロールのスタイル属性を設定することができます、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>プロパティをそれぞれ</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>。       リンク、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>ゾーン内のコントロールがナビゲーションではないです、コントロールのユーザー インターフェイス (UI) を表示するためです</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 ユーザーは、コントロールへのリンクをクリックすると、表示されている他のコントロールの UI は非表示で、選択したコントロールの UI が表示されます。"
  syntax:
    content: protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンのコントロールへのリンクの内容を受け取る。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)
  id: RenderFooter(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: RenderFooter(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderFooter(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "フッター領域を表示、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "フッター、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーンとは、動詞を追加し、閉じる動詞などゾーン レベルの動詞を含むゾーンの下の領域</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。 マークアップでは、基になる、フッターは、HTML テーブルのセルだけです。       RenderFooter メソッドは、まず、フッターのスタイル属性を作成しを呼び出して、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>メソッドは、追加の表示を閉じる動詞です</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>。"
  syntax:
    content: protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンのフッターの領域を表示します。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  id: RenderVerbs(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: RenderVerbs(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderVerbs(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ページ フッターの領域で、動詞を表示、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>ゾーンです。"
  remarks: "RenderVerbs メソッドは、add 動詞およびフッター領域内で閉じる動詞を表示、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。"
  syntax:
    content: protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>ゾーンの動詞を表示します。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: CatalogZoneBase.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "変更を保存、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref> Web ページがサーバーにポストされた後に発生するコントロールの状態。"
  remarks: "SaveControlState メソッドは、状態データを (インデックスやキーワードの場合) などのコントロールの操作に不可欠であり、コントロールのビュー状態データとは別に関係します。       メソッドは、まず、コントロールの既存の状態データを保存する基本メソッドを呼び出します。 次に、それを決定するかどうか、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>をチェックして、ゾーン内のコントロールは現在選択するかどうか、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>プロパティ値を持つ</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 選択したコントロールがある場合、メソッドは、選択したコントロールの状態データで既存の状態データを更新し、すべての状態データを返します。"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>コントロールの状態データを格納している</xref:System.Object>。 このメソッドを返しますのかどうかがない状態の変更、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: CatalogZoneBase.SaveViewState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ページがサーバーにポストされた後に発生した任意のビュー状態の変更を保存します。"
  remarks: "SaveViewState メソッドに関連付けられているビュー ステートを保存する基本メソッドを呼び出す、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。 次とでの追加と閉じる動詞は、任意のビュー状態を保存、<xref:System.Web.UI.WebControls.Style>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A></xref:System.Web.UI.WebControls.Style>。"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "ゾーン コントロールの現在のビュー ステートを返します。 ビュー ステートがいないかどうか、ゾーンに関連付け、このメソッドが戻る<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID
  id: SelectedCatalogPartID
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: SelectedCatalogPartID
  nameWithType: CatalogZoneBase.SelectedCatalogPartID
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "現在選択されている識別子としての文字列の設定を取得または<xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;></xref>ゾーン内のコントロールです。"
  remarks: "SelectedCatalogPartID プロパティでは、現在選択されている任意の識別子を設定できます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール。</xref:System.Web.UI.WebControls.WebParts.CatalogPart> 。 これは、コントロールは変更されません<xref:System.Web.UI.Control.ID%2A>プロパティの値のプログラムの目的でこのプロパティを使用できるようにします</xref:System.Web.UI.Control.ID%2A>。 たとえば、する場合は常に実行で現在選択されているプログラムによる操作<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、このプロパティを使用するコントロールにアクセスすることを事前に設定する既知の値を使用します</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       テーマまたはスタイル シート テーマによっては、このプロパティを設定できません。 詳細については、次を参照してください<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](~/add/includes/ajax-current-ext-md.md)。</xref:System.Web.UI.ThemeableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the SelectedCatalogPartID property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the first part of the code example declares two `<asp:catalogzone>` elements, and the first one declares a value for the SelectedCatalogPartID property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1347_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1347_1.aspx)]  \n  \n In the second part of the code example, the text value for the SelectedCatalogPartID property of the currently selected control is displayed.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#6](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1347_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1347_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, click one of the links to a <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control to select it. Then click the **Show Selected CatalogPart ID** button to display the property value. Notice that the value of the property is the value that was set declaratively for the zone. If you select the other <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls in the zone, the same value becomes the value of the SelectedCatalogPartID property for each control when it is selected. If you do not set the value of the SelectedCatalogPartID property, the default value is always the value of the <xref:System.Web.UI.Control.ID%2A> property for the currently selected control."
  syntax:
    content: public string SelectedCatalogPartID { get; set; }
    return:
      type: System.String
      description: "現在選択されているコントロールの識別子として機能する文字列。 既定では、コントロールの値<xref:System.Web.UI.Control.ID*>プロパティ</xref:System.Web.UI.Control.ID*>。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle
  id: SelectedPartLinkStyle
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: SelectedPartLinkStyle
  nameWithType: CatalogZoneBase.SelectedPartLinkStyle
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "スタイル属性を含むオブジェクトを取得、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogPart&quot;> </xref>ゾーンで現在選択されているコントロール。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>、ゾーンの種類ごとにリンクが表示されます<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール: <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart></xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> </xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 。 ユーザーがクリックしたとき、対応する、リンクのいずれかの<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール、選択したコントロールになり、その選択したコントロールに含まれる子コントロールが見えるようになります</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。       <xref:System.Web.UI.WebControls.Style>SelectedPartLinkStyle プロパティによって参照されるオブジェクトにはリンクのスタイル属性が含まれています、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>現在選択されているコントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart></xref:System.Web.UI.WebControls.Style>。 プロパティによって参照されるオブジェクトは、読み取り専用をそのまま使用する、選択した基になるスタイル特性を設定する<xref:System.Web.UI.WebControls.WebParts.CatalogPart>コントロール</xref:System.Web.UI.WebControls.WebParts.CatalogPart>。"
  example:
  - "The following code example demonstrates how to use the SelectedPartLinkStyle property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the first part of the code example declares two `<asp:catalogzone>` elements, and the first one declares a value for the SelectedPartLinkStyle property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_484_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_484_1.aspx)]  \n  \n In the second part of the code example, the text color for the selected <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control is set to a different value.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#7](~/add/codesnippet/csharp/p-system.web.ui.webcontr_484_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_484_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, click the link for one of the listed <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controls, and notice the style attributes of the selected control. You can click the **Change Part Link Styles** button to change the text color of the selected control. You can also click the links for the unselected controls, to see how the style attributes change when a control is selected."
  syntax:
    content: public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "A <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref>現在選択されているコントロールのスタイル属性を格納しています。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText
  id: SelectTargetZoneText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: SelectTargetZoneText
  nameWithType: CatalogZoneBase.SelectTargetZoneText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはコントロールの横のテキストをユーザーに、選択したコントロールを追加するには、あるゾーンを選択できるようにカタログ ユーザー インターフェイス (UI) に設定します。"
  remarks: "ユーザーがのいずれかを選択できるカタログ UI が最初に表示されたときに、<xref:System.Web.UI.WebControls.WebParts.CatalogPart>などのコントロール<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>、格納している<xref:System.Web.UI.WebControls.WebParts.WebPart>または Web ページに追加できる他のサーバー コントロールです</xref:System.Web.UI.WebControls.WebParts.WebPart></xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart></xref:System.Web.UI.WebControls.WebParts.CatalogPart>。 ユーザーが&1; つまたは複数のコントロールを選択しを使用して、<xref:System.Web.UI.WebControls.DropDownList>フッターの領域で、カタログを制御し、選択、 <xref:System.Web.UI.WebControls.WebParts.WebPartZone> ページで選択したサーバー コントロールを配置するコントロール</xref:System.Web.UI.WebControls.WebParts.WebPartZone></xref:System.Web.UI.WebControls.DropDownList>。 と共に SelectTargetZoneText プロパティのテキスト値が表示されます、<xref:System.Web.UI.WebControls.DropDownList>単純な命令と同様に制御します</xref:System.Web.UI.WebControls.DropDownList>。       このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](~/add/includes/ajax-current-ext-md.md)。</xref:System.ComponentModel.LocalizableAttribute> 。"
  example:
  - "The following code example demonstrates how to use the SelectTargetZoneText property declaratively and programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> class overview.  \n  \n Notice that the first part of the code example declares two `<asp:catalogzone>` elements, and the first one declares a value for the SelectTargetZoneText property.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_199_1.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_199_1.aspx)]  \n  \n In the second part of the code example, the value of the SelectTargetZoneText property is changed programmatically.  \n  \n [!code-cs[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/csharp/p-system.web.ui.webcontr_199_2.aspx)]\n [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_199_2.aspx)]  \n  \n When you load the page in a browser, you can select **Catalog** from the drop-down list to switch to catalog display mode. When the catalog is visible, note the text displayed alongside the <xref:System.Web.UI.WebControls.DropDownList> control in the footer of the catalog. You can click the **Set Zone Text Properties** button to change the text value of the property."
  syntax:
    content: public virtual string SelectTargetZoneText { get; set; }
    return:
      type: System.String
      description: "ゾーンの選択コントロールの横に表示するテキストを含む文字列です。 既定のカルチャに固有の文字列は、.NET Framework で提供されます。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons
  id: ShowCatalogIcons
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: ShowCatalogIcons
  nameWithType: CatalogZoneBase.ShowCatalogIcons
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "取得またはカタログ内のサーバー コントロールがカタログに対応するアイコンを表示するかどうかを示す値を設定します。"
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPart>コントロールおよびその他のサーバー コントロールとしてラップされている<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>実行時にコントロールがある、<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.GenericWebPart>。</xref:System.Web.UI.WebControls.WebParts.WebPart> このプロパティの値は、コントロールのカタログでコントロールを表すアイコンとして使用するイメージ URL です。       ShowCatalogIcons プロパティがアイコンに関連付けられているかどうかを示す<xref:System.Web.UI.WebControls.WebParts.WebPart>カタログにその他のサーバー コントロールが表示されます</xref:System.Web.UI.WebControls.WebParts.WebPart>。"
  syntax:
    content: public virtual bool ShowCatalogIcons { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、カタログ内のサーバー コントロールに関連付けられているアイコンを表示する必要があります。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  id: System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "実装して、 &lt;xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A?displayProperty=fullName&gt;メソッドを呼び出して、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData*>のメソッド、 <xref href=&quot;System.Web.UI.WebControls.WebParts.CatalogZoneBase&quot;> </xref>クラス</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData*>"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>にインスタンスをキャスト、<xref:System.Web.UI.IPostBackDataHandler>インターフェイス</xref:System.Web.UI.IPostBackDataHandler></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。 メソッドを呼び出すだけ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>メソッドを<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>をさらに、カタログ内のサーバー コントロールに対応するカタログのチェック ボックスの状態を処理するクラス</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>。"
  syntax:
    content: bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);
    parameters:
    - id: postDataKey
      type: System.String
      description: "コントロールのキー識別子。"
    - id: postCollection
      type: System.Collections.Specialized.NameValueCollection
      description: "サーバーにポスト名前/値ペアのコレクション。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>データが変更されたことを示すために、イベントを発生させる場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  id: System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "このメンバーの説明、 <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent*>。</xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>にインスタンスをキャスト、<xref:System.Web.UI.IPostBackDataHandler>インターフェイス</xref:System.Web.UI.IPostBackDataHandler></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>。"
  syntax:
    content: void IPostBackDataHandler.RaisePostDataChangedEvent ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: CatalogZoneBase.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "ゾーン コントロールのビュー ステートの変更を追跡します。"
  remarks: "TrackViewState メソッドは最初基本メソッドを呼び出して、<xref:System.Web.UI.WebControls.WebParts.ToolZone>ビュー状態を追跡するクラスに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>ゾーン</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase></xref:System.Web.UI.WebControls.WebParts.ToolZone>。 次に、メソッドは、閉じる動詞と追加のビュー状態の追跡を開始だけでなく<xref:System.Web.UI.WebControls.Style>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>と<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>プロパティ</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A></xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A></xref:System.Web.UI.WebControls.Style>。"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.ToolZone
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.ToolZone
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogZoneBase()
  nameWithType: CatalogZoneBase.CatalogZoneBase()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogZoneBase()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: AddVerb
  nameWithType: CatalogZoneBase.AddVerb
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb
- uid: System.Web.UI.WebControls.WebParts.WebPartVerb
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartVerb
  nameWithType: WebPartVerb
  fullName: System.Web.UI.WebControls.WebParts.WebPartVerb
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogPartChrome
  nameWithType: CatalogZoneBase.CatalogPartChrome
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome
- uid: System.Web.UI.WebControls.WebParts.CatalogPartChrome
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartChrome
  nameWithType: CatalogPartChrome
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartChrome
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogParts
  nameWithType: CatalogZoneBase.CatalogParts
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts
- uid: System.Web.UI.WebControls.WebParts.CatalogPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: CatalogPartCollection
  nameWithType: CatalogPartCollection
  fullName: System.Web.UI.WebControls.WebParts.CatalogPartCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: Close()
  nameWithType: CatalogZoneBase.Close()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CloseVerb
  nameWithType: CatalogZoneBase.CloseVerb
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateCatalogPartChrome()
  nameWithType: CatalogZoneBase.CreateCatalogPartChrome()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateCatalogParts()
  nameWithType: CatalogZoneBase.CreateCatalogParts()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateChildControls()
  nameWithType: CatalogZoneBase.CreateChildControls()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: EmptyZoneText
  nameWithType: CatalogZoneBase.EmptyZoneText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: HeaderText
  nameWithType: CatalogZoneBase.HeaderText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: InstructionText
  nameWithType: CatalogZoneBase.InstructionText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: InvalidateCatalogParts()
  nameWithType: CatalogZoneBase.InvalidateCatalogParts()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: CatalogZoneBase.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadPostData(String,NameValueCollection)
  nameWithType: CatalogZoneBase.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(String,NameValueCollection)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: CatalogZoneBase.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(Object)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: CatalogZoneBase.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: CatalogZoneBase.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: PartLinkStyle
  nameWithType: CatalogZoneBase.PartLinkStyle
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: CatalogZoneBase.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: CatalogZoneBase.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderBody(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderBody(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderCatalogPartLinks(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderCatalogPartLinks(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderFooter(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderFooter(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderVerbs(HtmlTextWriter)
  nameWithType: CatalogZoneBase.RenderVerbs(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SaveControlState()
  nameWithType: CatalogZoneBase.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SaveViewState()
  nameWithType: CatalogZoneBase.SaveViewState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectedCatalogPartID
  nameWithType: CatalogZoneBase.SelectedCatalogPartID
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectedPartLinkStyle
  nameWithType: CatalogZoneBase.SelectedPartLinkStyle
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectTargetZoneText
  nameWithType: CatalogZoneBase.SelectTargetZoneText
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: ShowCatalogIcons
  nameWithType: CatalogZoneBase.ShowCatalogIcons
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData(String,NameValueCollection)
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: TrackViewState()
  nameWithType: CatalogZoneBase.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogZoneBase
  nameWithType: CatalogZoneBase.CatalogZoneBase
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: AddVerb
  nameWithType: CatalogZoneBase.AddVerb
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogPartChrome
  nameWithType: CatalogZoneBase.CatalogPartChrome
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CatalogParts
  nameWithType: CatalogZoneBase.CatalogParts
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: Close
  nameWithType: CatalogZoneBase.Close
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CloseVerb
  nameWithType: CatalogZoneBase.CloseVerb
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateCatalogPartChrome
  nameWithType: CatalogZoneBase.CreateCatalogPartChrome
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateCatalogParts
  nameWithType: CatalogZoneBase.CreateCatalogParts
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: CreateChildControls
  nameWithType: CatalogZoneBase.CreateChildControls
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: EmptyZoneText
  nameWithType: CatalogZoneBase.EmptyZoneText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: HeaderText
  nameWithType: CatalogZoneBase.HeaderText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: InstructionText
  nameWithType: CatalogZoneBase.InstructionText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: InvalidateCatalogParts
  nameWithType: CatalogZoneBase.InvalidateCatalogParts
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadControlState
  nameWithType: CatalogZoneBase.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadPostData
  nameWithType: CatalogZoneBase.LoadPostData
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: LoadViewState
  nameWithType: CatalogZoneBase.LoadViewState
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: OnInit
  nameWithType: CatalogZoneBase.OnInit
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: OnPreRender
  nameWithType: CatalogZoneBase.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: PartLinkStyle
  nameWithType: CatalogZoneBase.PartLinkStyle
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: CatalogZoneBase.RaisePostBackEvent
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: Render
  nameWithType: CatalogZoneBase.Render
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderBody
  nameWithType: CatalogZoneBase.RenderBody
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderCatalogPartLinks
  nameWithType: CatalogZoneBase.RenderCatalogPartLinks
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderFooter
  nameWithType: CatalogZoneBase.RenderFooter
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: RenderVerbs
  nameWithType: CatalogZoneBase.RenderVerbs
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SaveControlState
  nameWithType: CatalogZoneBase.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SaveViewState
  nameWithType: CatalogZoneBase.SaveViewState
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectedCatalogPartID
  nameWithType: CatalogZoneBase.SelectedCatalogPartID
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectedPartLinkStyle
  nameWithType: CatalogZoneBase.SelectedPartLinkStyle
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: SelectTargetZoneText
  nameWithType: CatalogZoneBase.SelectTargetZoneText
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: ShowCatalogIcons
  nameWithType: CatalogZoneBase.ShowCatalogIcons
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.LoadPostData
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.LoadPostData
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
  nameWithType: CatalogZoneBase.System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent
- uid: System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.CatalogZoneBase
  isExternal: false
  name: TrackViewState
  nameWithType: CatalogZoneBase.TrackViewState
