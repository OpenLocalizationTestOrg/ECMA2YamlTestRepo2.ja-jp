### YamlMime:ManagedReference
items:
- uid: System.Messaging.ActiveXMessageFormatter
  id: ActiveXMessageFormatter
  children:
  - System.Messaging.ActiveXMessageFormatter.#ctor
  - System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Clone
  - System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  - System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  - System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  langs:
  - csharp
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter
  fullName: System.Messaging.ActiveXMessageFormatter
  type: Class
  summary: "シリアル化またはプリミティブ データ型とその他のオブジェクトにまたは MSMQ ActiveX コンポーネントと互換性がある形式を使用して、メッセージ キューのメッセージの本文から逆シリアル化します。"
  remarks: "ActiveXMessageFormatter は MSMQ COM コントロールを使用するアプリケーションとの相互運用性を許可するメッセージ キューの COM コンポーネントを使用して送信されたメッセージと互換性のあります。       ActiveXMessageFormatter では、ほとんどのプリミティブとして実装するオブジェクトをシリアル化できる、 `IPersistStream` OLE インターフェイスです。 同じプリミティブのセットを逆シリアル化できるがを実装する COM オブジェクト (たとえば、Visual Basic 6.0 を使用して作成されたオブジェクト) を逆シリアル化時に、作業がさらに`IPersistStream`です。 逆シリアル化するオブジェクトは、.NET Framework アプリケーションにオブジェクトをインポートして、メモリ内でなければなりません。       アプリケーションがのインスタンスを使用してキューにメッセージを送信すると、<xref:System.Messaging.MessageQueue>クラス、フォーマッタ オブジェクトをストリームにシリアル化し、メッセージ本文に挿入します</xref:System.Messaging.MessageQueue>。 使用して、<xref:System.Messaging.MessageQueue>フォーマッタが<xref:System.Messaging.Message.Body%2A><xref:System.Messaging.Message>。</xref:System.Messaging.Message>プロパティ</xref:System.Messaging.Message.Body%2A>にメッセージ データを逆シリアル化、</xref:System.Messaging.MessageQueue>キューから読み取るときに       ActiveX のシリアル化が非常にコンパクトされるため、使用して、ActiveXMessageFormatter と MSMQ COM がシリアル化の非常に高速メソッドを制御します。"
  syntax:
    content: 'public class ActiveXMessageFormatter : ICloneable, System.Messaging.IMessageFormatter'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Messaging.IMessageFormatter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  id: '#ctor'
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>クラスです。"
  syntax:
    content: public ActiveXMessageFormatter ();
    parameters: []
  overload: System.Messaging.ActiveXMessageFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  id: CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "フォーマッタがメッセージの内容を逆シリアル化できるかどうかを判断します。"
  remarks: "CanRead 返します`false`を実装していない場合、メッセージ本文が、メッセージ キューの ActiveX コントロールの逆シリアル化できるプリミティブではない場合や、`IPersistStream`インターフェイスです。"
  syntax:
    content: public bool CanRead (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>を検査します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>メッセージを逆シリアル化できる、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Messaging.ActiveXMessageFormatter.CanRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  id: Clone
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "インスタンスを作成、 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>現在と同じであるクラス<xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref>です。"
  remarks: "このメソッドを使用して、 <xref:System.Messaging.MessageQueue>(たとえば、アプリケーションが非同期的に受信して) 場合は、同時に複数のメッセージを受信するためにクラス</xref:System.Messaging.MessageQueue>。 通常は、アプリケーション コードでこのメソッドを呼び出す必要はありません。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "オブジェクトのプロパティがこのと同じ<xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;></xref>です。"
  overload: System.Messaging.ActiveXMessageFormatter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  id: InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "COM をシリアル化を支援するためのユーティリティを実装するオブジェクトを提供<xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;></xref>を必要と<xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;></xref>呼び出せるようにします。"
  syntax:
    content: public static void InitStreamedObject (object streamedObject);
    parameters:
    - id: streamedObject
      type: System.Object
      description: "実装する OLE オブジェクト<xref uid=&quot;langword_csharp_IPersistStreamInit&quot; name=&quot;IPersistStreamInit&quot; href=&quot;&quot;></xref>です。"
  overload: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  id: Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "指定されたメッセージの内容を読み取り、逆シリアル化されたメッセージを含むオブジェクトを作成します。"
  remarks: "メッセージの本文がプリミティブ型、メッセージを表すかどうか<xref:System.Messaging.Message.BodyType%2A>プロパティは、次の表で、マネージ型のいずれかを指定する必要があります</xref:System.Messaging.Message.BodyType%2A>。      |BodyType 値 |マネージ型 |  |--------------------|------------------|  |VT_LPSTR |<xref:System.Char>配列 (ASCII エンコーディングを使用して逆シリアル化) |  |VT_BSTR、VT_LPWSTR |<xref:System.String>(Unicode エンコーディングを使用して逆シリアル化) |  |VT_VECTOR |VT_UI1 |<xref:System.Byte>配列 |  |VT_BOOL |<xref:System.Boolean>|  |VT_CLSID |<xref:System.Guid>|  |VT_CY |<xref:System.Decimal>|  |VT_DATE |<xref:System.DateTime>|  |VT_I1、VT_UI1 |<xref:System.Byte>|  |VT_I2 |<xref:System.Int16>|  |VT_UI2 |<xref:System.UInt16>|  |VT_I4 |<xref:System.Int32>|  |VT_UI4 |<xref:System.UInt32>|  |VT_I8 |<xref:System.Int64>|  |VT_UI8 |<xref:System.UInt64>|  |VT_R4 |<xref:System.Single>|  |VT_R8 |<xref:System.Double>|  |VT_ |`null`|  |VT_STREAMED_OBJECT |<xref:System.Object>|</xref:System.Object></xref:System.Double></xref:System.Single></xref:System.UInt64></xref:System.Int64></xref:System.UInt32></xref:System.Int32></xref:System.UInt16></xref:System.Int16></xref:System.Byte></xref:System.DateTime></xref:System.Decimal></xref:System.Guid></xref:System.Boolean></xref:System.Byte></xref:System.String></xref:System.Char>"
  syntax:
    content: public object Read (System.Messaging.Message message);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>、逆シリアル化する、MSMQ ActiveX コントロールの形式でします。"
    return:
      type: System.Object
      description: "逆シリアル化されたメッセージ。"
  overload: System.Messaging.ActiveXMessageFormatter.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Messaging.Message.BodyType*>のプロパティ、 <code> message </code>パラメーターは、プリミティブ型にマップすることはできず、、ストリーム オブジェクトを表してとして渡された</xref:System.Messaging.Message.BodyType*>。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "本文は、格納されているオブジェクトを表します。 <xref href=&quot;System.Messaging.ActiveXMessageFormatter&quot;> </xref>は保存されているオブジェクトの逆シリアル化をサポートしていません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  id: Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  langs:
  - csharp
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
  type: Method
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "メッセージの本文にオブジェクトをシリアル化します。"
  remarks: "次の表は、マネージ型の関係を示していますおよび<xref:System.Messaging.Message.BodyType%2A>プロパティ。</xref:System.Messaging.Message.BodyType%2A> 。 シリアル化するオブジェクトがこれらのマネージ型のいずれかを指定する必要がありますまたは OLE を実装する必要があります`IPersistStream`インターフェイスです。      |BodyType 値 |マネージ型 |  |--------------------|------------------|  |VT_LPSTR |<xref:System.Char>|  |VT_BSTR、VT_LPWSTR |<xref:System.String>|  |VT_VECTOR |VT_UI1 |<xref:System.Byte>|  |VT_BOOL |<xref:System.Boolean>|  |VT_CLSID |<xref:System.Guid>|  |VT_CY |<xref:System.Decimal>|  |VT_DATE |<xref:System.DateTime>|  |VT_I1、VT_UI1 |<xref:System.Byte>|  |VT_I2 |<xref:System.Int16>|  |VT_UI2 |<xref:System.UInt16>|  |VT_I4 |<xref:System.Int32>|  |VT_UI4 |<xref:System.UInt32>|  |VT_I8 |<xref:System.Int64>|  |VT_UI8 |<xref:System.UInt64>|  |VT_R4 |<xref:System.Single>|  |VT_R8 |<xref:System.Double>|  |VT_ |`null`|  |VT_STREAMED_OBJECT |`IPersistStream` (OLE) <xref:System.Object>|</xref:System.Object></xref:System.Double></xref:System.Single></xref:System.UInt64></xref:System.Int64></xref:System.UInt32></xref:System.Int32></xref:System.UInt16></xref:System.Int16></xref:System.Byte></xref:System.DateTime></xref:System.Decimal></xref:System.Guid></xref:System.Boolean></xref:System.Byte></xref:System.String></xref:System.Char>"
  syntax:
    content: public void Write (System.Messaging.Message message, object obj);
    parameters:
    - id: message
      type: System.Messaging.Message
      description: "<xref href=&quot;System.Messaging.Message&quot;> </xref>が<xref:System.Messaging.Message.Body*>プロパティがシリアル化されたオブジェクトが格納されます</xref:System.Messaging.Message.Body*>。"
    - id: obj
      type: System.Object
      description: "メッセージの本文にシリアル化するオブジェクト。"
  overload: System.Messaging.ActiveXMessageFormatter.Write*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "シリアル化するオブジェクトは、プリミティブでも、OLE を実装するストリーム オブジェクト<xref uid=&quot;langword_csharp_IPersistStream&quot; name=&quot;IPersistStream&quot; href=&quot;&quot;></xref>インターフェイスです。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>message</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Messaging.ActiveXMessageFormatter.#ctor
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter()
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter()
  fullName: System.Messaging.ActiveXMessageFormatter.ActiveXMessageFormatter()
- uid: System.Messaging.ActiveXMessageFormatter.CanRead(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead(Message)
  nameWithType: ActiveXMessageFormatter.CanRead(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.CanRead(Message)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ActiveXMessageFormatter.Clone
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone()
  nameWithType: ActiveXMessageFormatter.Clone()
  fullName: System.Messaging.ActiveXMessageFormatter.Clone()
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject(Object)
  nameWithType: ActiveXMessageFormatter.InitStreamedObject(Object)
  fullName: System.Messaging.ActiveXMessageFormatter.InitStreamedObject(Object)
- uid: System.Messaging.ActiveXMessageFormatter.Read(System.Messaging.Message)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read(Message)
  nameWithType: ActiveXMessageFormatter.Read(Message)
  fullName: System.Messaging.ActiveXMessageFormatter.Read(Message)
- uid: System.Messaging.ActiveXMessageFormatter.Write(System.Messaging.Message,System.Object)
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write(Message,Object)
  nameWithType: ActiveXMessageFormatter.Write(Message,Object)
  fullName: System.Messaging.ActiveXMessageFormatter.Write(Message,Object)
- uid: System.Messaging.ActiveXMessageFormatter.#ctor*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: ActiveXMessageFormatter
  nameWithType: ActiveXMessageFormatter.ActiveXMessageFormatter
- uid: System.Messaging.ActiveXMessageFormatter.CanRead*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: CanRead
  nameWithType: ActiveXMessageFormatter.CanRead
- uid: System.Messaging.ActiveXMessageFormatter.Clone*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Clone
  nameWithType: ActiveXMessageFormatter.Clone
- uid: System.Messaging.ActiveXMessageFormatter.InitStreamedObject*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: InitStreamedObject
  nameWithType: ActiveXMessageFormatter.InitStreamedObject
- uid: System.Messaging.ActiveXMessageFormatter.Read*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Read
  nameWithType: ActiveXMessageFormatter.Read
- uid: System.Messaging.ActiveXMessageFormatter.Write*
  parent: System.Messaging.ActiveXMessageFormatter
  isExternal: false
  name: Write
  nameWithType: ActiveXMessageFormatter.Write
