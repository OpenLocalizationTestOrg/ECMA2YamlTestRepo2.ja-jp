### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MarshalByValueComponent
  id: MarshalByValueComponent
  children:
  - System.ComponentModel.MarshalByValueComponent.#ctor
  - System.ComponentModel.MarshalByValueComponent.Container
  - System.ComponentModel.MarshalByValueComponent.DesignMode
  - System.ComponentModel.MarshalByValueComponent.Dispose
  - System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  - System.ComponentModel.MarshalByValueComponent.Disposed
  - System.ComponentModel.MarshalByValueComponent.Events
  - System.ComponentModel.MarshalByValueComponent.Finalize
  - System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  - System.ComponentModel.MarshalByValueComponent.Site
  - System.ComponentModel.MarshalByValueComponent.ToString
  langs:
  - csharp
  name: MarshalByValueComponent
  nameWithType: MarshalByValueComponent
  fullName: System.ComponentModel.MarshalByValueComponent
  type: Class
  summary: "実装して<xref href=&quot;System.ComponentModel.IComponent&quot;></xref>し (シリアル化されたオブジェクトのコピーが渡された) 値は、マーシャ リングするリモート化可能コンポーネントの基本実装を提供します。"
  remarks: "コンポーネントは、コンテナーに格納できます。 コンテナー内の各コンポーネントには、コンテナーは、コンポーネントの管理に使用されるサイトを作成します。 コンポーネントは、コンテナーで提供されるを通じて、主にコンテナーと対話<xref:System.ComponentModel.ISite>、これは、特定のコンテナー、コンポーネントごとの情報のリポジトリ</xref:System.ComponentModel.ISite>。"
  syntax:
    content: >-
      [System.ComponentModel.Designer("System.Windows.Forms.Design.ComponentDocumentDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Component")]

      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ComponentConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class MarshalByValueComponent : IDisposable, IServiceProvider, System.ComponentModel.IComponent
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.#ctor
  id: '#ctor'
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: MarshalByValueComponent()
  nameWithType: MarshalByValueComponent.MarshalByValueComponent()
  fullName: System.ComponentModel.MarshalByValueComponent.MarshalByValueComponent()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ComponentModel.MarshalByValueComponent&quot;> </xref>クラスです。"
  remarks: "コンポーネントは、コンテナーに格納できます。 コンテナー内の各コンポーネントには、コンテナーは、コンポーネントの管理に使用されるサイトを作成します。 コンポーネントは、コンテナーで提供されるを通じて、主にコンテナーと対話<xref:System.ComponentModel.ISite>、これは、特定のコンテナー、コンポーネントごとの情報のリポジトリ</xref:System.ComponentModel.ISite>。"
  syntax:
    content: public MarshalByValueComponent ();
    parameters: []
  overload: System.ComponentModel.MarshalByValueComponent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Container
  id: Container
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Container
  nameWithType: MarshalByValueComponent.Container
  fullName: System.ComponentModel.MarshalByValueComponent.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネントのコンテナーを取得します。"
  syntax:
    content: public virtual System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref>コンポーネントのコンテナーを表すインターフェイスまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>コンポーネントには、サイトがない場合。"
  overload: System.ComponentModel.MarshalByValueComponent.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.DesignMode
  id: DesignMode
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: DesignMode
  nameWithType: MarshalByValueComponent.DesignMode
  fullName: System.ComponentModel.MarshalByValueComponent.DesignMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネントが現在デザイン モードであるかどうかを示す値を取得します。"
  remarks: "かどうか、コンポーネントには、サイトはありません、このメソッドは常`false`です。"
  syntax:
    content: public virtual bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>コンポーネントがデザイン モードである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ComponentModel.MarshalByValueComponent.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Dispose
  id: Dispose
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Dispose()
  nameWithType: MarshalByValueComponent.Dispose()
  fullName: System.ComponentModel.MarshalByValueComponent.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "によって使用されるすべてのリソースを解放、 <xref href=&quot;System.ComponentModel.MarshalByValueComponent&quot;></xref>です。"
  remarks: "<xref:System.ComponentModel.MarshalByValueComponent>。</xref:System.ComponentModel.MarshalByValueComponent>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.ComponentModel.MarshalByValueComponent>使用不可の状態</xref:System.ComponentModel.MarshalByValueComponent>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.ComponentModel.MarshalByValueComponent>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.ComponentModel.MarshalByValueComponent>占有されていた</xref:System.ComponentModel.MarshalByValueComponent></xref:System.ComponentModel.MarshalByValueComponent>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.ComponentModel.MarshalByValueComponent></xref:System.ComponentModel.MarshalByValueComponent>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.ComponentModel.MarshalByValueComponent>オブジェクトの`Finalize`メソッド</xref:System.ComponentModel.MarshalByValueComponent>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.MarshalByValueComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: MarshalByValueComponent.Dispose(Boolean)
  fullName: System.ComponentModel.MarshalByValueComponent.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.ComponentModel.MarshalByValueComponent&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック`Dispose()`メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A>。 `Dispose()`プロテクト呼び出します`Dispose(Boolean)`メソッドを`disposing`パラメーターに設定`true`です。 <xref:System.Object.Finalize%2A>呼び出す`Dispose`で`disposing`&quot;éý&quot;`false`です。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.ComponentModel.MarshalByValueComponent>参照。</xref:System.ComponentModel.MarshalByValueComponent> 。 このメソッドを呼び出して、`Dispose()`参照される各オブジェクトのメソッドです。"
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。"
  overload: System.ComponentModel.MarshalByValueComponent.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Disposed
  id: Disposed
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Disposed
  nameWithType: MarshalByValueComponent.Disposed
  fullName: System.ComponentModel.MarshalByValueComponent.Disposed
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "コンポーネントで破棄されたイベントを待機するイベント ハンドラーを追加します。"
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Events
  id: Events
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Events
  nameWithType: MarshalByValueComponent.Events
  fullName: System.ComponentModel.MarshalByValueComponent.Events
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "このコンポーネントにアタッチされているイベント ハンドラーの一覧を取得します。"
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "<xref href=&quot;System.ComponentModel.EventHandlerList&quot;> </xref>このコンポーネントにデリゲートを提供します。"
  overload: System.ComponentModel.MarshalByValueComponent.Events*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Finalize
  id: Finalize
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Finalize()
  nameWithType: MarshalByValueComponent.Finalize()
  fullName: System.ComponentModel.MarshalByValueComponent.Finalize()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~MarshalByValueComponent ();
    parameters: []
  overload: System.ComponentModel.MarshalByValueComponent.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: MarshalByValueComponent.GetService(Type)
  fullName: System.ComponentModel.MarshalByValueComponent.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "<xref:System.IServiceProvider>。</xref:System.IServiceProvider>の実行者を取得します。"
  remarks: "使用できるデザイナーのサービスの詳細については、次を参照してください。[デザイン時アーキテクチャ](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public virtual object GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "A<xref:System.Type>サービスの型を表す</xref:System.Type>。"
    return:
      type: System.Object
      description: "<xref:System.Object>表す<xref:System.IServiceProvider>。</xref:System.IServiceProvider>の実行者</xref:System.Object>"
  overload: System.ComponentModel.MarshalByValueComponent.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.Site
  id: Site
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: Site
  nameWithType: MarshalByValueComponent.Site
  fullName: System.ComponentModel.MarshalByValueComponent.Site
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "取得またはコンポーネントのサイトを設定します。"
  remarks: "有効な値は、このプロパティの値が`null`コンポーネントがコンテナーに追加されたことを示します。       このプロパティの値が`null`プロパティは、コンポーネントは、コンテナーから削除されていることを示します。 ただし、このプロパティは、コンテナーからコンポーネントを削除されません。"
  syntax:
    content: public virtual System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "実装するオブジェクト、 <xref href=&quot;System.ComponentModel.ISite&quot;> </xref>コンポーネントのサイトを表すインターフェイスです。"
  overload: System.ComponentModel.MarshalByValueComponent.Site*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MarshalByValueComponent.ToString
  id: ToString
  parent: System.ComponentModel.MarshalByValueComponent
  langs:
  - csharp
  name: ToString()
  nameWithType: MarshalByValueComponent.ToString()
  fullName: System.ComponentModel.MarshalByValueComponent.ToString()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "返します、<xref:System.String>の名前を含む、 <xref href=&quot;System.ComponentModel.Component&quot;> </xref>、存在する場合</xref:System.String>。 このメソッドはオーバーライドできません。"
  remarks: "A<xref:System.ComponentModel.Component>可能性がありますまたは名前がない可能性があります</xref:System.ComponentModel.Component>。 場合、<xref:System.ComponentModel.Component>は名前を指定するには、名前は他の<xref:System.ComponentModel.Component>その<xref:System.ComponentModel.IContainer>.</xref:System.ComponentModel.IContainer>内のオブジェクト</xref:System.ComponentModel.Component>間で一意で</xref:System.ComponentModel.Component>       <xref:System.ComponentModel.ISite>格納、<xref:System.ComponentModel.Component>の名前</xref:System.ComponentModel.Component></xref:System.ComponentModel.ISite>。 <xref:System.ComponentModel.Component>には<xref:System.ComponentModel.ISite><xref:System.ComponentModel.IContainer><xref:System.ComponentModel.IContainer>割り当て<xref:System.ComponentModel.ISite>を突き止め</xref:System.ComponentModel.ISite></xref:System.ComponentModel.IContainer>、</xref:System.ComponentModel.IContainer>追加された場合</xref:System.ComponentModel.ISite>にのみ持つことができます。</xref:System.ComponentModel.Component>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A<xref:System.String>の名前を含む、 <xref href=&quot;System.ComponentModel.Component&quot;></xref>存在する場合、</xref:System.String> 。       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.ComponentModel.Component&quot;> </xref>は名前がありません。"
  overload: System.ComponentModel.MarshalByValueComponent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.MarshalByValueComponent.#ctor
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: MarshalByValueComponent()
  nameWithType: MarshalByValueComponent.MarshalByValueComponent()
  fullName: System.ComponentModel.MarshalByValueComponent.MarshalByValueComponent()
- uid: System.ComponentModel.MarshalByValueComponent.Container
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Container
  nameWithType: MarshalByValueComponent.Container
  fullName: System.ComponentModel.MarshalByValueComponent.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.MarshalByValueComponent.DesignMode
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: DesignMode
  nameWithType: MarshalByValueComponent.DesignMode
  fullName: System.ComponentModel.MarshalByValueComponent.DesignMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MarshalByValueComponent.Dispose
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Dispose()
  nameWithType: MarshalByValueComponent.Dispose()
  fullName: System.ComponentModel.MarshalByValueComponent.Dispose()
- uid: System.ComponentModel.MarshalByValueComponent.Dispose(System.Boolean)
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: MarshalByValueComponent.Dispose(Boolean)
  fullName: System.ComponentModel.MarshalByValueComponent.Dispose(Boolean)
- uid: System.ComponentModel.MarshalByValueComponent.Disposed
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Disposed
  nameWithType: MarshalByValueComponent.Disposed
  fullName: System.ComponentModel.MarshalByValueComponent.Disposed
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.MarshalByValueComponent.Events
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Events
  nameWithType: MarshalByValueComponent.Events
  fullName: System.ComponentModel.MarshalByValueComponent.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.ComponentModel.MarshalByValueComponent.Finalize
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Finalize()
  nameWithType: MarshalByValueComponent.Finalize()
  fullName: System.ComponentModel.MarshalByValueComponent.Finalize()
- uid: System.ComponentModel.MarshalByValueComponent.GetService(System.Type)
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: GetService(Type)
  nameWithType: MarshalByValueComponent.GetService(Type)
  fullName: System.ComponentModel.MarshalByValueComponent.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.MarshalByValueComponent.Site
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Site
  nameWithType: MarshalByValueComponent.Site
  fullName: System.ComponentModel.MarshalByValueComponent.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.ComponentModel.MarshalByValueComponent.ToString
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: ToString()
  nameWithType: MarshalByValueComponent.ToString()
  fullName: System.ComponentModel.MarshalByValueComponent.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.MarshalByValueComponent.#ctor*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: MarshalByValueComponent
  nameWithType: MarshalByValueComponent.MarshalByValueComponent
- uid: System.ComponentModel.MarshalByValueComponent.Container*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Container
  nameWithType: MarshalByValueComponent.Container
- uid: System.ComponentModel.MarshalByValueComponent.DesignMode*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: DesignMode
  nameWithType: MarshalByValueComponent.DesignMode
- uid: System.ComponentModel.MarshalByValueComponent.Dispose*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Dispose
  nameWithType: MarshalByValueComponent.Dispose
- uid: System.ComponentModel.MarshalByValueComponent.Events*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Events
  nameWithType: MarshalByValueComponent.Events
- uid: System.ComponentModel.MarshalByValueComponent.Finalize*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Finalize
  nameWithType: MarshalByValueComponent.Finalize
- uid: System.ComponentModel.MarshalByValueComponent.GetService*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: GetService
  nameWithType: MarshalByValueComponent.GetService
- uid: System.ComponentModel.MarshalByValueComponent.Site*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: Site
  nameWithType: MarshalByValueComponent.Site
- uid: System.ComponentModel.MarshalByValueComponent.ToString*
  parent: System.ComponentModel.MarshalByValueComponent
  isExternal: false
  name: ToString
  nameWithType: MarshalByValueComponent.ToString
