### YamlMime:ManagedReference
items:
- uid: System.Drawing.Imaging.BitmapData
  id: BitmapData
  children:
  - System.Drawing.Imaging.BitmapData.#ctor
  - System.Drawing.Imaging.BitmapData.Height
  - System.Drawing.Imaging.BitmapData.PixelFormat
  - System.Drawing.Imaging.BitmapData.Reserved
  - System.Drawing.Imaging.BitmapData.Scan0
  - System.Drawing.Imaging.BitmapData.Stride
  - System.Drawing.Imaging.BitmapData.Width
  langs:
  - csharp
  name: BitmapData
  nameWithType: BitmapData
  fullName: System.Drawing.Imaging.BitmapData
  type: Class
  summary: "ビットマップ イメージの属性を指定します。 BitmapData クラスを使って、 <> </> *> と<> *> のメソッド、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>クラスです。 継承はできません。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the BitmapData class with the <xref:System.Drawing.Bitmap.LockBits%2A> and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's <xref:System.Windows.Forms.Control.Paint> event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/t-system.drawing.imaging_1_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/t-system.drawing.imaging_1_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/t-system.drawing.imaging_1_1.cpp)]"
  syntax:
    content: public sealed class BitmapData
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.#ctor
  id: '#ctor'
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: BitmapData()
  nameWithType: BitmapData.BitmapData()
  fullName: System.Drawing.Imaging.BitmapData.BitmapData()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Imaging.BitmapData&quot;> </xref>クラスです。"
  syntax:
    content: public BitmapData ();
    parameters: []
  overload: System.Drawing.Imaging.BitmapData.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.Height
  id: Height
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: Height
  nameWithType: BitmapData.Height
  fullName: System.Drawing.Imaging.BitmapData.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得または設定のピクセルの高さ、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>オブジェクト。 またとも呼ばスキャン行数を指定します。"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "ピクセルの高さ、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.BitmapData.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.PixelFormat
  id: PixelFormat
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: PixelFormat
  nameWithType: BitmapData.PixelFormat
  fullName: System.Drawing.Imaging.BitmapData.PixelFormat
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得または設定の情報は、ピクセルの形式、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>この返されたオブジェクト<xref href=&quot;System.Drawing.Imaging.BitmapData&quot;></xref>オブジェクト。"
  remarks: "形式は、単一のピクセルの色の情報を格納する必要なメモリのビット数を定義します。"
  syntax:
    content: public System.Drawing.Imaging.PixelFormat PixelFormat { get; set; }
    return:
      type: System.Drawing.Imaging.PixelFormat
      description: "A <xref href=&quot;System.Drawing.Imaging.PixelFormat&quot;> </xref> 、関連するピクセルの情報の形式を指定する<xref href=&quot;System.Drawing.Bitmap&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.BitmapData.PixelFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.Reserved
  id: Reserved
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: Reserved
  nameWithType: BitmapData.Reserved
  fullName: System.Drawing.Imaging.BitmapData.Reserved
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "予約済み。 使用しないでください。"
  syntax:
    content: public int Reserved { get; set; }
    return:
      type: System.Int32
      description: "予約済み。 使用しないでください。"
  overload: System.Drawing.Imaging.BitmapData.Reserved*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.Scan0
  id: Scan0
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: Scan0
  nameWithType: BitmapData.Scan0
  fullName: System.Drawing.Imaging.BitmapData.Scan0
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得またはビットマップのピクセルの最初のデータのアドレスを設定します。 これはもようなもののビットマップ内の最初のスキャン ライン。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, and Scan0 properties; the <xref:System.Drawing.Bitmap.LockBits%2A> and <xref:System.Drawing.Bitmap.UnlockBits%2A> methods; and the <xref:System.Drawing.Imaging.ImageLockMode> enumeration. This example is designed to be used with Windows Forms. To run this example, paste it into a form and handle the form's Paint event by calling the `LockUnlockBitsExample` method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n> [!NOTE]\n>  The following example code was created for use with an image with the <xref:System.Drawing.Imaging.PixelFormat> format.  \n  \n [!code-cs[System.Drawing.BitmapMembers#5](~/add/codesnippet/csharp/p-system.drawing.imaging_1.cs)]\n [!code-vb[System.Drawing.BitmapMembers#5](~/add/codesnippet/visualbasic/p-system.drawing.imaging_1.vb)]\n [!code-cpp[System.Drawing.BitmapMembers#5](~/add/codesnippet/cpp/p-system.drawing.imaging_1.cpp)]"
  syntax:
    content: public IntPtr Scan0 { get; set; }
    return:
      type: System.IntPtr
      description: "ビットマップ内で最初のピクセルのデータのアドレス。"
  overload: System.Drawing.Imaging.BitmapData.Scan0*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.Stride
  id: Stride
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: Stride
  nameWithType: BitmapData.Stride
  fullName: System.Drawing.Imaging.BitmapData.Stride
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得または設定のストライド幅 (スキャン幅とも呼ばれます)、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>オブジェクト。"
  remarks: "Stride とは、4 バイト境界に切り上げられます (スキャン ライン) をピクセル単位の&1; 行の幅です。 Stride が正の場合は、ビットマップが上から下にします。 Stride が負の場合、ビットマップはボトムアップがします。"
  syntax:
    content: public int Stride { get; set; }
    return:
      type: System.Int32
      description: "Stride の幅 (バイト単位) の<xref href=&quot;System.Drawing.Bitmap&quot;></xref>オブジェクト。"
  overload: System.Drawing.Imaging.BitmapData.Stride*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Imaging.BitmapData.Width
  id: Width
  parent: System.Drawing.Imaging.BitmapData
  langs:
  - csharp
  name: Width
  nameWithType: BitmapData.Width
  fullName: System.Drawing.Imaging.BitmapData.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Imaging
  summary: "取得または設定の幅をピクセル単位、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>オブジェクト。 これはもようなものの&1; つのスキャン ラインのピクセル数です。"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "幅をピクセル単位、 <xref href=&quot;System.Drawing.Bitmap&quot;> </xref>オブジェクト。"
  overload: System.Drawing.Imaging.BitmapData.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Drawing.Imaging.BitmapData.#ctor
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: BitmapData()
  nameWithType: BitmapData.BitmapData()
  fullName: System.Drawing.Imaging.BitmapData.BitmapData()
- uid: System.Drawing.Imaging.BitmapData.Height
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Height
  nameWithType: BitmapData.Height
  fullName: System.Drawing.Imaging.BitmapData.Height
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Imaging.BitmapData.PixelFormat
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: PixelFormat
  nameWithType: BitmapData.PixelFormat
  fullName: System.Drawing.Imaging.BitmapData.PixelFormat
- uid: System.Drawing.Imaging.PixelFormat
  parent: System.Drawing.Imaging
  isExternal: false
  name: PixelFormat
  nameWithType: PixelFormat
  fullName: System.Drawing.Imaging.PixelFormat
- uid: System.Drawing.Imaging.BitmapData.Reserved
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Reserved
  nameWithType: BitmapData.Reserved
  fullName: System.Drawing.Imaging.BitmapData.Reserved
- uid: System.Drawing.Imaging.BitmapData.Scan0
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Scan0
  nameWithType: BitmapData.Scan0
  fullName: System.Drawing.Imaging.BitmapData.Scan0
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Imaging.BitmapData.Stride
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Stride
  nameWithType: BitmapData.Stride
  fullName: System.Drawing.Imaging.BitmapData.Stride
- uid: System.Drawing.Imaging.BitmapData.Width
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Width
  nameWithType: BitmapData.Width
  fullName: System.Drawing.Imaging.BitmapData.Width
- uid: System.Drawing.Imaging.BitmapData.#ctor*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: BitmapData
  nameWithType: BitmapData.BitmapData
- uid: System.Drawing.Imaging.BitmapData.Height*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Height
  nameWithType: BitmapData.Height
- uid: System.Drawing.Imaging.BitmapData.PixelFormat*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: PixelFormat
  nameWithType: BitmapData.PixelFormat
- uid: System.Drawing.Imaging.BitmapData.Reserved*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Reserved
  nameWithType: BitmapData.Reserved
- uid: System.Drawing.Imaging.BitmapData.Scan0*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Scan0
  nameWithType: BitmapData.Scan0
- uid: System.Drawing.Imaging.BitmapData.Stride*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Stride
  nameWithType: BitmapData.Stride
- uid: System.Drawing.Imaging.BitmapData.Width*
  parent: System.Drawing.Imaging.BitmapData
  isExternal: false
  name: Width
  nameWithType: BitmapData.Width
