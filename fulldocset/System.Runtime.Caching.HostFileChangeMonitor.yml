### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "ディレクトリおよびファイル パスを監視し、監視対象の項目への変更のキャッシュに通知します。 このクラスは継承できません。"
  remarks: "HostFileChangeMonitor クラスは、の具象実装、<xref:System.Runtime.Caching.FileChangeMonitor>型です</xref:System.Runtime.Caching.FileChangeMonitor>。 このクラスはシールされているため、拡張することはできません。 このクラスは、既存のキャッシュ実装を使用して、ファイルとディレクトリの変更を監視したい場合に便利です。       次の変更のいずれかが発生した場合、指定したファイルまたはディレクトリのパスごと HostFileChangeMonitor クラスが、変更通知をトリガーします。-監視対象のファイルまたはディレクトリの変更の名前。      -指定したファイルまたはディレクトリが、モニターが作成されましたが、後で作成された時にありませんでした。 つまり、ファイルまたはディレクトリは、監視対象のアイテムのスコープで作成されました。      -変更された監視対象のファイルのサイズ。      -監視対象のファイルの内容は次の変更、または、監視対象のディレクトリの内容を変更します。      -アクセスの制御リスト (ACL) のファイルまたはディレクトリが変更されました。      -監視対象のファイルまたはディレクトリが削除されました。       同時の監視対象のファイルまたはディレクトリの多くの変更が発生した場合、HostFileChangeMonitor インスタンスは、特定の変更の見失うことがあります。 このシナリオでは、HostFileChangeMonitor クラスは、変更通知をトリガーします。 このシナリオは HostFileChangeMonitor インスタンスは、ディレクトリを監視し、短時間で、ディレクトリ構造のスコープ内の多くの変更が発生するときに発生する可能性が高くなります。       HostFileChangeMonitor クラスの目的では、監視対象のファイルとディレクトリのセット間で変更があったことを通知するだけであるためとは見なされません重要な特定の変更に関する詳細はキャプチャされません。 HostFileChangeMonitor クラスの目的は、通知の状態を変更できるように、キャッシュ エントリ (またはエントリ) を削除することができますを提供します。 HostFileChangeMonitor クラスは、正確にどのような変更を示しているありません、ため内部変更追跡のオーバーフローは無効です。       HostFileChangeMonitor インスタンスへのパスを指定するときに、ディレクトリおよびファイル パスはディレクトリまたはファイルの完全パスにする必要があります。 相対パスとパスでワイルドカード文字は使用できません。       HostFileChangeMonitor クラス使用すると、ASP.NET アプリケーションの監視対象のアイテムへのアクセスに使用する Windows id は、ASP.NET アプリケーションのアプリケーション id です。 つまり、アプリケーション id はいずれかに、次の:-プロセス id。      -構成済みのアプリケーション id。      -UNC 資格情報、UNC 共有から、アプリケーションが実行されている場合。       HostFileChangeMonitor クラスを非 ASP.NET アプリケーションで使用すると、<xref:System.IO.FileSystemWatcher>ファイルを監視するクラスが内部的に使用します</xref:System.IO.FileSystemWatcher>。 結果として、監視対象のファイルまたはディレクトリに適用されるどのようなアクセス制御リスト (ACL) は、現在のスレッドの Windows id に適用されます。      > [!NOTE] > 呼び出し元がコード アクセス セキュリティ (CAS) アクセス許可の適切なレベルが必要し、すべての監視対象のディレクトリとパスに NTFS アクセス許可が必要です。"
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref>クラスです。"
  remarks: "HostFileChangeMonitor コンス トラクターへの呼び出しでの null 以外の値を提供する必要があります、`filePaths`パラメーター。 少なくともコンス トラクターに渡され、それらのパスの監視を初期化しているパスのコレクションを検証します。      > [!NOTE] > コンス トラクターは、パス名の文字列の検証のみを実行します。 パスが存在することを検証またはパスを正規化したり、しません。"
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "1 つ以上のディレクトリ パスまたは監視へのファイル パスを含むリスト。"
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>0 個の項目が含まれています。       - または - でパス、<code>filePaths</code>リストが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>または空の文字列。"
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "追加します。"
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "ディレクトリおよびに渡されたファイル パスのコレクションを取得、 &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt;コンス トラクターです。"
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "ディレクトリおよびファイル パスのコレクション。"
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "監視対象のファイルまたはパスの最終書き込み時刻を示す読み取り専用の値を取得します。"
  remarks: "複数のファイルまたはパス、ファイルの変更モニターが監視している場合、このプロパティは、すべてのファイルとパスのセットの最終書き込み時刻を返します。"
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "最終書き込み時刻の監視対象のファイルまたはパスをします。"
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "識別子を取得、 <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref>監視対象のディレクトリとファイル パスのセットに基づいているインスタンス。"
  remarks: "UniqueId プロパティの値を構成する文字列は、次の部分から構成されます。-ファイルまたはディレクトリのパス。      最も最新の書き込み時間を UTC 時刻ではタイマー刻みとして計測されますが、16 進数文字列として表されます。      -ファイルのサイズを&16; 進数文字列として表されます。       ファイルの変更モニターが複数のパスを監視している場合、このプロパティによって返される情報はすべての監視対象のディレクトリとファイル パスの&1; つの文字列に連結されます。"
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "変更監視機能の識別子です。"
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
