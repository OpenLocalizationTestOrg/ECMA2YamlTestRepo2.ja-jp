### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDependency
  id: SqlDependency
  children:
  - System.Data.SqlClient.SqlDependency.#ctor
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  - System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.HasChanges
  - System.Data.SqlClient.SqlDependency.Id
  - System.Data.SqlClient.SqlDependency.OnChange
  - System.Data.SqlClient.SqlDependency.Start(System.String)
  - System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  langs:
  - csharp
  name: SqlDependency
  nameWithType: SqlDependency
  fullName: System.Data.SqlClient.SqlDependency
  type: Class
  summary: "SqlDependency オブジェクトは、アプリケーションと SQL Server のインスタンス間でのクエリ通知の依存関係を表します。 アプリケーションを作成できます経由で通知を受信するレジスタ、SqlDependency オブジェクト、 <xref href=&quot;System.Data.SqlClient.OnChangeEventHandler&quot;> </xref>イベント ハンドラー。"
  remarks: "SqlDependency では、キャッシュ、ASP.NET アプリケーションや中間層サービスがメモリにキャッシュされた特定の情報を保持する必要があるシナリオに最適です。 SqlDependency では、キャッシュを更新することができるように、データベース内の元のデータが変更されたときに通知を受信することができます。       依存関係を設定するには、1 つまたは複数の SqlDependency オブジェクトを関連付ける必要があります<xref:System.Data.SqlClient.SqlCommand>オブジェクト</xref:System.Data.SqlClient.SqlCommand>。 通知を受信するをサブスクライブする必要があります、<xref:System.Data.SqlClient.SqlDependency.OnChange>イベント</xref:System.Data.SqlClient.SqlDependency.OnChange>。 通知のクエリを作成するための要件の詳細については、「を作成するクエリ通知の」SQL Server オンライン ブックを参照してください。      > [!NOTE] > SqlDependency が ASP.NET または中間層サービスで使用するように設計されましたが、比較的少数のデータベースに対してアクティブな依存関係にあるサーバーです。 ここで数百または数千のクライアント コンピューターには SqlDependency オブジェクトが&1; つのデータベース サーバーのセットアップ、クライアント アプリケーションで使用向けに設計されていません。 を開発しているアプリケーション データが変更されたときに、信頼性の高いの&1; 秒未満の通知が必要な場合は、セクションを参照**効率的なクエリ通知戦略の計画**と**クエリ通知に代わる方法**で、[通知の計画](http://go.microsoft.com/fwlink/?LinkId=211984)SQL Server オンライン ブックの「します。       詳細については、次を参照してください。 [SQL server クエリ通知](~/add/includes/ajax-current-ext-md.md)と SQL Server オンライン ブックの&quot;通知ソリューションの構築&quot;します。      > [!NOTE] >、<xref:System.Data.SqlClient.SqlDependency.OnChange>コマンドの実行を開始したスレッドから別のスレッドでイベントを生成することができます</xref:System.Data.SqlClient.SqlDependency.OnChange>。       クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表は、SQL Server オンライン ブックの Service Broker とクエリ通知のドキュメントへのリンクを提供します。       **SQL Server オンライン ブック**      -   [通知クエリの作成](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker のセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms166059.aspx)      -   [のセキュリティと保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知サービスのセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms172604.aspx)      -   [クエリ通知の権限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker の国際化に関する考慮事項](http://msdn.microsoft.com/library/ms166028.aspx)      -   [ソリューション設計に関する考慮事項 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開発者向けの情報](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public sealed class SqlDependency
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref>既定の設定を持つクラス。"
  remarks: "コンス トラクターは、<xref:System.Data.SqlClient.SqlDependency>オブジェクトの既定の Service Broker サービス名とタイムアウトを使用します</xref:System.Data.SqlClient.SqlDependency>。 作成した後は、ある時点で使用する必要があります、<xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>にこれを&1; つまたは複数のコマンドを関連付けるメソッド<xref:System.Data.SqlClient.SqlDependency>オブジェクト</xref:System.Data.SqlClient.SqlDependency></xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>。       クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表は、SQL Server オンライン ブックの Service Broker とクエリ通知のドキュメントへのリンクを提供します。       **SQL Server オンライン ブック**      -   [通知クエリの作成](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker のセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms166059.aspx)      -   [のセキュリティと保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知サービスのセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms172604.aspx)      -   [クエリ通知の権限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker の国際化に関する考慮事項](http://msdn.microsoft.com/library/ms166028.aspx)      -   [ソリューション設計に関する考慮事項 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開発者向けの情報](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency ();
    parameters: []
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref>クラスおよびに関連付けます、 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>パラメーター。"
  remarks: "このコンス トラクターが内部的には、インスタンスを作成、<xref:System.Data.Sql.SqlNotificationRequest>クラス、およびバインドに、<xref:System.Data.SqlClient.SqlCommand>オブジェクト</xref:System.Data.SqlClient.SqlCommand></xref:System.Data.Sql.SqlNotificationRequest>。       クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表は、SQL Server オンライン ブックの Service Broker とクエリ通知のドキュメントへのリンクを提供します。       **SQL Server オンライン ブック**      -   [通知クエリの作成](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker のセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms166059.aspx)      -   [のセキュリティと保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知サービスのセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms172604.aspx)      -   [クエリ通知の権限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker の国際化に関する考慮事項](http://msdn.microsoft.com/library/ms166028.aspx)      -   [ソリューション設計に関する考慮事項 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開発者向けの情報](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトに関連付けられているこの<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>オブジェクト。 コンス トラクターが設定されます、 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref>オブジェクトし、コマンドにバインドします。"
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>パラメーターが NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトは既に、 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref>オブジェクトに割り当てられているその<xref:System.Data.SqlClient.SqlCommand.Notification*>プロパティ、およびを<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>この依存関係に関連付けられていない</xref:System.Data.SqlClient.SqlCommand.Notification*>。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  id: '#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref>クラスに関連付けます、 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>パラメーター、通知オプションとタイムアウト値を指定します。"
  remarks: "クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表は、SQL Server オンライン ブックの Service Broker とクエリ通知のドキュメントへのリンクを提供します。       **SQL Server オンライン ブック**      -   [通知クエリの作成](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker のセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms166059.aspx)      -   [のセキュリティと保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知サービスのセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms172604.aspx)      -   [クエリ通知の権限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker の国際化に関する考慮事項](http://msdn.microsoft.com/library/ms166028.aspx)      -   [ソリューション設計に関する考慮事項 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開発者向けの情報](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトに関連付けられているこの<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>オブジェクト。 コンス トラクターを設定、 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref>オブジェクトし、コマンドにバインドします。"
    - id: options
      type: System.String
      description: "この依存関係で使用される通知の要求オプション。  `null`既定のサービスを使用します。"
    - id: timeout
      type: System.Int32
      description: "秒単位では、この通知のタイムアウト値。 既定値は 0 で、サーバーのタイムアウトを使用することを示すです。"
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>パラメーターが NULL です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "タイムアウト値が&0; 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトは既に、 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref>オブジェクトに割り当てられているその<> *> プロパティおよび<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>この依存関係に関連付けられていません。     作成しようとしましたが、 * *SqlDependency** SQLCLR 内からインスタンス化します。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  id: AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "関連付けます、 <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトをこの<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>インスタンス。"
  remarks: "クエリ通知は、特定の要件を満たす SELECT ステートメントでのみサポートされます。 次の表は、SQL Server オンライン ブックの Service Broker とクエリ通知のドキュメントへのリンクを提供します。       **SQL Server オンライン ブック**      -   [通知クエリの作成](http://msdn.microsoft.com/library/ms181122.aspx)      -   [Service Broker のセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms166059.aspx)      -   [のセキュリティと保護 (Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [通知サービスのセキュリティに関する考慮事項](http://msdn.microsoft.com/library/ms172604.aspx)      -   [クエリ通知の権限](http://msdn.microsoft.com/library/ms188311.aspx)      -   [Service Broker の国際化に関する考慮事項](http://msdn.microsoft.com/library/ms166028.aspx)      -   [ソリューション設計に関する考慮事項 (Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [Service Broker 開発者向けの情報](http://msdn.microsoft.com/library/ms166100.aspx)      -   [Developer&quot;s Guide (Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "A <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>通知に対して有効なステートメントを含むオブジェクト。"
  overload: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code>パラメーターが null です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref>オブジェクトは既に、 <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref>オブジェクトに割り当てられているその<xref:System.Data.SqlClient.SqlCommand.Notification*>プロパティ、およびを<xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;></xref>この依存関係に関連付けられていない</xref:System.Data.SqlClient.SqlCommand.Notification*>。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  id: HasChanges
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "依存関係に関連付けられている結果セットのいずれかが変更されたかどうかを示す値を取得します。"
  remarks: "使用していない場合、<xref:System.Data.SqlClient.SqlDependency.OnChange>イベント、クエリの結果が変更されたかどうかを判断 HasChanges プロパティを確認することができます</xref:System.Data.SqlClient.SqlDependency.OnChange>。       HasChanges プロパティでは、データの変更は必ずしも意味しません。 タイムアウトなど、他の状況が期限切れになり、通知要求の設定に失敗したも変更イベントを生成します。"
  syntax:
    content: public bool HasChanges { get; }
    return:
      type: System.Boolean
      description: "結果のいずれかを設定するかどうかを示すブール値が変更されました。"
  overload: System.Data.SqlClient.SqlDependency.HasChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Id
  id: Id
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "このインスタンスを一意に識別する値を取得、 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref>クラスです。"
  remarks: "一意に識別する Id プロパティが使用される、指定された<xref:System.Data.SqlClient.SqlDependency>インスタンス</xref:System.Data.SqlClient.SqlDependency>。"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "各インスタンスに対して生成される GUID の文字列表現、 <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref>クラスです。"
  overload: System.Data.SqlClient.SqlDependency.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.OnChange
  id: OnChange
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "これに関連付けられているコマンドのいずれかの通知を受け取ったときに発生<xref href=&quot;System.Data.SqlClient.SqlDependency&quot;></xref>オブジェクト。"
  remarks: "OnChange は、関連付けられているコマンドの結果を変更するときに発生します。 OnChange を使用していない場合は、確認、<xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>クエリの結果が変更されたかどうかを決定するプロパティ</xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>。       OnChange イベントでは、データの変更は必ずしも意味しません。 タイムアウトなど、他の状況に有効期限が切れてし、通知要求の設定に失敗したも OnChange を生成します。"
  syntax:
    content: public event System.Data.SqlClient.OnChangeEventHandler OnChange;
    return:
      type: System.Data.SqlClient.OnChangeEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  id: Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "接続文字列で指定された SQL Server のインスタンスから依存関係の変更通知を受信するためには、リスナーを開始します。"
  remarks: "このメソッドは、リスナーを開始、<xref:System.AppDomain>のインスタンスから依存関係の通知を受信するため[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]によって指定された、`connectionString`パラメーター</xref:System.AppDomain> 。 このメソッドに対して呼び出すことは&1; 回以上の異なる接続文字列に複数のサーバー。       詳細説明、 <xref:System.Data.SqlClient.SqlDependency.Start%2A>。</xref:System.Data.SqlClient.SqlDependency.Start%2A>を参照してください。"
  syntax:
    content: public static bool Start (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "インスタンスの接続文字列[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]から取得するには、通知を変更します。"
    return:
      type: System.Boolean
      description: '**true**リスナーが正常に初期化される場合**false**互換性のあるリスナーが既に存在する場合。'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>パラメーターが NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code>パラメーターは、このメソッドを前回の呼び出しと同じですが、パラメーターは異なります。       メソッドは、CLR 内からを呼び出されました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元を必須にすることはない<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>コード アクセス セキュリティ (CAS) 許可します。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "同等のメソッドへの後続の呼び出しが行わ<code> connectionString </code>別のユーザーと同じスキーマに特に指定しない限り、ユーザーのパラメーターです。       また、任意の基になる**SqlClient**例外。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "指定された SQL Server Service Broker キューを使用して、接続文字列で指定された SQL Server のインスタンスから依存関係の変更通知を受信するためには、リスナーを開始します。"
  remarks: "このメソッドは、リスナーを開始、<xref:System.AppDomain>で指定された SQL Server のインスタンスから依存関係の通知を受信するため、`connectionString`パラメーター</xref:System.AppDomain> 。 このメソッドに対して呼び出すことは&1; 回以上の異なる接続文字列に複数のサーバー。       キュー名が指定されていない場合<xref:System.Data.SqlClient.SqlDependency>、一時キューおよびプロセスでは、1 つ以上<xref:System.AppDomain>.</xref:System.AppDomain>場合でも、プロセス全体に使用されるサーバーのサービスを作成</xref:System.Data.SqlClient.SqlDependency> キューおよびサービスは、アプリケーションのシャット ダウン時に自動的に削除します。       詳細説明、 <xref:System.Data.SqlClient.SqlDependency.Start%2A>。</xref:System.Data.SqlClient.SqlDependency.Start%2A>を参照してください。"
  syntax:
    content: public static bool Start (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "取得する対象の SQL Server のインスタンスの接続文字列は、通知を変更します。"
    - id: queue
      type: System.String
      description: "使用する既存の SQL Server Service Broker キュー。 場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>既定のキューを使用します。"
    return:
      type: System.Boolean
      description: '**true**リスナーが正常に初期化される場合**false**互換性のあるリスナーが既に存在する場合。'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>パラメーターが NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code>パラメーターは、このメソッドを前回の呼び出しと同じですが、パラメーターは異なります。       メソッドは、CLR 内からを呼び出されました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元を必須にすることはない<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>コード アクセス セキュリティ (CAS) 許可します。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "同等のメソッドへの後続の呼び出しが行わ<code> connectionString </code>パラメーターが、別のユーザーまたは同じスキーマに特に指定しない限り、ユーザー。       また、任意の基になる**SqlClient**例外。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  id: Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "以前に指定された接続用のリスナーを停止する<xref:System.Data.SqlClient.SqlDependency.Start*>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start*>。"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>各メソッドを呼び出す必要があります<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start%2A></xref:System.Data.SqlClient.SqlDependency.Stop%2A>。 指定されたリスナーがのみがシャット ダウン、完全に受信すると、同じ数の<xref:System.Data.SqlClient.SqlDependency.Stop%2A>要求として<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求</xref:System.Data.SqlClient.SqlDependency.Start%2A></xref:System.Data.SqlClient.SqlDependency.Stop%2A>。"
  syntax:
    content: public static bool Stop (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "以前に使用された SQL Server のインスタンスの接続文字列<xref:System.Data.SqlClient.SqlDependency.Start*>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start*>。"
    return:
      type: System.Boolean
      description: '**true**場合は、リスナーが完全に停止しました。**false**場合、 <xref href=&quot;System.AppDomain&quot;> </xref>リスナーからバインドがありませんでしたが、あるが少なくとも&1; つの他の<xref href=&quot;System.AppDomain&quot;></xref>同じリスナーを使用します。'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>パラメーターが NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "メソッドは、SQLCLR 内からを呼び出されました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元を必須にすることはない<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>コード アクセス セキュリティ (CAS) 許可します。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "基になる**SqlClient**例外が発生しました。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  id: Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "以前に指定された接続用のリスナーを停止する<xref:System.Data.SqlClient.SqlDependency.Start*>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start*>。"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>各メソッドを呼び出す必要があります<xref:System.Data.SqlClient.SqlDependency.Start%2A>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start%2A></xref:System.Data.SqlClient.SqlDependency.Stop%2A>。 指定されたリスナーがのみがシャット ダウン、完全に受信すると、同じ数の<xref:System.Data.SqlClient.SqlDependency.Stop%2A>要求として<xref:System.Data.SqlClient.SqlDependency.Start%2A>要求</xref:System.Data.SqlClient.SqlDependency.Start%2A></xref:System.Data.SqlClient.SqlDependency.Stop%2A>。"
  syntax:
    content: public static bool Stop (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "以前に使用された SQL Server のインスタンスの接続文字列<xref:System.Data.SqlClient.SqlDependency.Start*>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start*>。"
    - id: queue
      type: System.String
      description: "以前に使用された SQL Server Service Broker キュー<xref:System.Data.SqlClient.SqlDependency.Start*>呼び出します</xref:System.Data.SqlClient.SqlDependency.Start*>。"
    return:
      type: System.Boolean
      description: '**true**場合は、リスナーが完全に停止しました。**false**場合、 <xref href=&quot;System.AppDomain&quot;> </xref>リスナーからバインドがでしたが、少なくとも&1; つであるその他の<xref href=&quot;System.AppDomain&quot;></xref>同じリスナーを使用します。'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code>パラメーターが NULL です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "メソッドは、SQLCLR 内からを呼び出されました。"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "呼び出し元を必須にすることはない<xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;></xref>コード アクセス セキュリティ (CAS) 許可します。"
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "基になると**SqlClient**例外が発生しました。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDependency.#ctor
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDependency.Id
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.OnChange
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
- uid: System.Data.SqlClient.OnChangeEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: OnChangeEventHandler
  nameWithType: OnChangeEventHandler
  fullName: System.Data.SqlClient.OnChangeEventHandler
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
- uid: System.Data.SqlClient.SqlDependency.#ctor*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency
  nameWithType: SqlDependency.SqlDependency
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency
  nameWithType: SqlDependency.AddCommandDependency
- uid: System.Data.SqlClient.SqlDependency.HasChanges*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
- uid: System.Data.SqlClient.SqlDependency.Id*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.Start*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start
  nameWithType: SqlDependency.Start
- uid: System.Data.SqlClient.SqlDependency.Stop*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop
  nameWithType: SqlDependency.Stop
