### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "クラスの読み込みを制御し、どのようなクラスを読み込むことを要求することができます。"
  remarks: "シリアル化では、フォーマッタは、正しい型およびバージョンのオブジェクトのインスタンスを作成するために必要な情報を送信します。 通常、この情報には、完全な型名とオブジェクトのアセンブリ名が含まれます。 アセンブリ名には、名前、バージョン、および厳密な名前が含まれています (を参照してください[厳密な名前付きアセンブリ](~/add/includes/ajax-current-ext-md.md)) アセンブリのハッシュ。 既定では、逆シリアル化はこの情報を使用して (セキュリティ ポリシーで制限される任意のアセンブリの読み込みの例外) が同一のオブジェクトのインスタンスを作成します。 一部のユーザーは、サーバーとクライアント上のどのクラスを読み込むか、クラスがアセンブリまたはクラスの別のバージョンの間で移動されているために必要なコントロールする必要があります。       SerializationBinder は、セキュリティのためにも使用できます。 信頼できないソースからデータを逆シリアル化しようとするいくつかのセキュリティのぜい弱性があります。 バインダーをどのような種類がアプリケーション ドメインに読み込まれてを検査する機会を提供します。 許可されたタイプの一覧または拒否された種類の一覧を維持するか、どの型が読み込まれる制限からすることができ、インスタンス化します。 どのような情報に配置することネットワーク上の考慮をする必要がありますさらに、(トランスポートまたはメッセージ セキュリティを使用) をセキュリティで保護することも、ネットワーク上で型の名前またはその他のデータを送信するときにします。      > [!WARNING] > を確実に完全にどのような情報をシリアル化の場合にのみ SerializationBinder を使用します。 悪意のある型には、予期しない動作を起こすことができます。       これは、抽象基本クラスです。 すべてのバインダーは、このクラスを拡張します。"
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref>クラスです。"
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "派生クラスでオーバーライドされると、シリアル化されたオブジェクトの型へのバインドを制御します。"
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "オブジェクトの種類、フォーマッタは、新しいインスタンスを作成します。"
    - id: assemblyName
      type: System.String
      description: "指定します、<xref:System.Reflection.Assembly>シリアル化されたオブジェクトの名前</xref:System.Reflection.Assembly>。"
    - id: typeName
      type: System.String
      description: "指定します、<xref:System.Type>シリアル化されたオブジェクトの名前</xref:System.Type>。"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "派生クラスでオーバーライドされると、シリアル化されたオブジェクトの型へのバインドを制御します。"
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "指定します、<xref:System.Reflection.Assembly>シリアル化されたオブジェクトの名前</xref:System.Reflection.Assembly>。"
    - id: typeName
      type: System.String
      description: "指定します、<xref:System.Type>シリアル化されたオブジェクトの名前</xref:System.Type>。"
    return:
      type: System.Type
      description: "オブジェクトの種類、フォーマッタは、新しいインスタンスを作成します。"
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
