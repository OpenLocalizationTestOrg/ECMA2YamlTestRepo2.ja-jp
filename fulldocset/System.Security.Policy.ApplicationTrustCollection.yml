### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustCollection
  id: ApplicationTrustCollection
  children:
  - System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  - System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  - System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  - System.Security.Policy.ApplicationTrustCollection.Clear
  - System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.Count
  - System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  - System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  - System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  - System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  - System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  - System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  - System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  - System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  - System.Security.Policy.ApplicationTrustCollection.SyncRoot
  - System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
  type: Class
  summary: "コレクションを表します<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>オブジェクト。 このクラスは継承できません。"
  remarks: "<xref:System.Security.Policy.ApplicationTrust>オブジェクトは、アプリケーションに関するセキュリティ上の決定をカプセル化します。</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public sealed class ApplicationTrustCollection : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  id: Add(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Add(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Add(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Add(ApplicationTrust)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションに要素を追加します。"
  remarks: "<xref:System.Security.Policy.ApplicationTrust>オブジェクトがコレクションの末尾に追加します</xref:System.Security.Policy.ApplicationTrust>。  追加したアプリケーションの信頼を削除するには、使用、<xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>メソッド</xref:System.Security.Policy.ApplicationTrustCollection.Remove%2A>。"
  syntax:
    content: public int Add (System.Security.Policy.ApplicationTrust trust);
    parameters:
    - id: trust
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>を追加するオブジェクト。"
    return:
      type: System.Int32
      description: "新しい要素の挿入位置のインデックス。"
  overload: System.Security.Policy.ApplicationTrustCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trust</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of the <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  id: AddRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: AddRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrust[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定した要素をコピー <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>コレクションの末尾までの配列。"
  remarks: "<xref:System.Security.Policy.ApplicationTrust>に含まれるオブジェクト、`trusts`配列は、コレクションの末尾に追加されます</xref:System.Security.Policy.ApplicationTrust>。       削除する前に追加したアプリケーションの信頼関係の範囲を使用して、<xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>メソッド</xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>。"
  syntax:
    content: public void AddRange (System.Security.Policy.ApplicationTrust[] trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrust[]
      description: "型の配列<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>コレクションに追加するオブジェクトを格納します。"
  overload: System.Security.Policy.ApplicationTrustCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of an <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  id: AddRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: AddRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定した要素をコピー <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>コレクションの末尾にします。"
  remarks: "<xref:System.Security.Policy.ApplicationTrust>に含まれるオブジェクト`trusts`はコレクションの末尾に追加されます</xref:System.Security.Policy.ApplicationTrust>。       使用してコレクションに各アプリケーションの信頼を手動で追加する代わりに、コレクションを別のアプリケーション信頼オブジェクトのコレクションをすばやく追加 addrange の実行方法を使用することができます、<xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>メソッド</xref:System.Security.Policy.ApplicationTrustCollection.Add%2A>。       削除する前に追加したアプリケーションの信頼関係の範囲を使用して、<xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>メソッド</xref:System.Security.Policy.ApplicationTrustCollection.RemoveRange%2A>。"
  syntax:
    content: public void AddRange (System.Security.Policy.ApplicationTrustCollection trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrustCollection
      description: "A <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>コレクションに追加するオブジェクトを格納します。"
  overload: System.Security.Policy.ApplicationTrustCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> property of an <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> specified in <code>trust</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Clear
  id: Clear
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ApplicationTrustCollection.Clear()
  fullName: System.Security.Policy.ApplicationTrustCollection.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションからすべてのアプリケーションの信頼関係を削除します。"
  remarks: "各<xref:System.Security.Policy.ApplicationTrust>コレクション内で識別されるその<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>プロパティ</xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A></xref:System.Security.Policy.ApplicationTrust>。 場合の値、<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>プロパティの<xref:System.Security.Policy.ApplicationTrust>コレクション内のオブジェクトは`null`、<xref:System.ArgumentException>がスローされます</xref:System.ArgumentException></xref:System.Security.Policy.ApplicationTrust></xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustCollection.Clear*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>、コレクション内の項目のプロパティが<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> 。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  id: CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: CopyTo(ApplicationTrust[],Int32)
  nameWithType: ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "ターゲット配列の指定したインデックスから始まる、互換性のある&1; 次元配列にコレクション全体をコピーします。"
  remarks: >-
    > [!CAUTION]

    >  All the application trusts in the collection are copied into the array starting at the specified index location, overwriting any existing data within the range of objects copied into the array.
  syntax:
    content: public void CopyTo (System.Security.Policy.ApplicationTrust[] array, int index);
    parameters:
    - id: array
      type: System.Security.Policy.ApplicationTrust[]
      description: "型の&1; 次元配列<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>の現在のコレクションから要素がコピー先であること。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Security.Policy.ApplicationTrustCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>下限値よりも小さい<code>array</code>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - 内の要素の数、 <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>から使用可能な領域より大きくなって<code>index</code>変換先の末尾に<code>array</code>です。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Count
  id: Count
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Count
  nameWithType: ApplicationTrustCollection.Count
  fullName: System.Security.Policy.ApplicationTrustCollection.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションに含まれるアイテムの数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "コレクションに含まれるアイテムの数。"
  overload: System.Security.Policy.ApplicationTrustCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  id: Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Find(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定したアプリケーション id に一致するコレクション内のアプリケーション信頼関係を取得します。"
  remarks: "アプリケーションの信頼はオプションの値に基づく、正確なバージョンの一致で選択、`versionMatch`パラメーター。"
  syntax:
    content: public System.Security.Policy.ApplicationTrustCollection Find (ApplicationIdentity applicationIdentity, System.Security.Policy.ApplicationVersionMatch versionMatch);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>を検索するアプリケーションを記述するオブジェクト。"
    - id: versionMatch
      type: System.Security.Policy.ApplicationVersionMatch
      description: "1 つ、 <xref href=&quot;System.Security.Policy.ApplicationVersionMatch&quot;> </xref>値。"
    return:
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>すべて一致するを含む<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>オブジェクト。"
  overload: System.Security.Policy.ApplicationTrustCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ApplicationTrustCollection.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションを反復処理するために使用できるオブジェクトを返します。"
  remarks: "<xref:System.Security.Policy.ApplicationTrustEnumerator>実装、<xref:System.Collections.IEnumerator?displayProperty=fullName>インターフェイスを使用すると、コレクション内で移動します</xref:System.Collections.IEnumerator?displayProperty=fullName></xref:System.Security.Policy.ApplicationTrustEnumerator>。       使用して、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>コレクション内で現在の項目を取得するプロパティが指す</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>。       使用して、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>コレクション内の次の項目に移動するメソッド</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>。       使用して、<xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>列挙子を初期位置に移動するメソッド</xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>。      > [!NOTE] >、列挙子を作成するか、使用して、 <xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>、コレクションの先頭に、列挙子の位置を変更する方法、呼び出す必要があります、<xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName>列挙子は、最初の項目を配置する方法</xref:System.Collections.IEnumerator.MoveNext%2A?displayProperty=fullName></xref:System.Collections.IEnumerator.Reset%2A?displayProperty=fullName>。 によって表される項目のそれ以外の場合、<xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>プロパティが定義されていません</xref:System.Collections.IEnumerator.Current%2A?displayProperty=fullName>。"
  syntax:
    content: public System.Security.Policy.ApplicationTrustEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Security.Policy.ApplicationTrustEnumerator
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustEnumerator&quot;> </xref>コレクションを反復処理に使用できます。"
  overload: System.Security.Policy.ApplicationTrustCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
  fullName: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションへのアクセスが同期されているかどうかを示す値 (スレッド セーフである) を取得します。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Security.Policy.ApplicationTrustCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ApplicationTrustCollection.Item(Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(Int32)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>コレクション内の指定したインデックス位置にあるオブジェクト。"
  remarks: "このメソッドを使用して、取得、<xref:System.Security.Policy.ApplicationTrust>オブジェクトから、<xref:System.Security.Policy.ApplicationTrustCollection>指定したインデックス位置</xref:System.Security.Policy.ApplicationTrustCollection></xref:System.Security.Policy.ApplicationTrust>。"
  syntax:
    content: public System.Security.Policy.ApplicationTrust this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "コレクション内のオブジェクトの&0; から始まるインデックス。"
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>オブジェクト、コレクション内の指定したインデックス位置。"
  overload: System.Security.Policy.ApplicationTrustCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>大きいか、コレクション内のオブジェクトの数と同じです。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>index</code>負の値。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationTrustCollection.Item(String)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(String)
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "取得、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>指定されたアプリケーションのオブジェクト。"
  remarks: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A>の各プロパティ<xref:System.Security.Policy.ApplicationTrust>コレクション内のオブジェクトについて、<xref:System.ApplicationIdentity.FullName%2A>で指定されたアプリケーションに一致するプロパティ値、`appFullName`パラメーター</xref:System.ApplicationIdentity.FullName%2A> </xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity%2A> 。"
  syntax:
    content: public System.Security.Policy.ApplicationTrust this[string appFullName] { get; }
    parameters:
    - id: appFullName
      type: System.String
      description: "アプリケーションの完全名。"
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>指定されたアプリケーションのオブジェクトまたは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトが見つからない場合。"
  overload: System.Security.Policy.ApplicationTrustCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  id: Remove(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Remove(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationTrust)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションから指定したアプリケーションの信頼を削除します。"
  remarks: "コレクション全体が検索され、指定したアプリケーションの信頼のすべてのインスタンスが削除されます。       削除されたオブジェクトの後ろにあるオブジェクトは、空いた位置を上へ移動します。 移動されるオブジェクトのインデックスも更新します。"
  syntax:
    content: public void Remove (System.Security.Policy.ApplicationTrust trust);
    parameters:
    - id: trust
      type: System.Security.Policy.ApplicationTrust
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>削除するオブジェクト。"
  overload: System.Security.Policy.ApplicationTrustCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trust</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*>のプロパティ、 <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref>で指定されたオブジェクト<code> trust </code>は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Security.Policy.ApplicationTrust.ApplicationIdentity*> 。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  id: Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: Remove(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションから指定した条件に一致するすべてのアプリケーションの信頼オブジェクトを削除します。"
  remarks: "アプリケーションの信頼は、バージョンに一致するの値に依存で識別できます、`versionMatch`パラメーター。 <xref:System.Security.Policy.ApplicationTrustCollection.Find%2A>メソッドを使用して、一致するすべてのアプリケーションの信頼関係を検索して一致する項目がコレクションから削除されます</xref:System.Security.Policy.ApplicationTrustCollection.Find%2A>。       削除されたオブジェクトの後ろにあるオブジェクトは、空いた位置を上へ移動します。 移動されるオブジェクトのインデックスも更新します。"
  syntax:
    content: public void Remove (ApplicationIdentity applicationIdentity, System.Security.Policy.ApplicationVersionMatch versionMatch);
    parameters:
    - id: applicationIdentity
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref>の<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>を削除するオブジェクト。"
    - id: versionMatch
      type: System.Security.Policy.ApplicationVersionMatch
      description: "1 つ、 <xref href=&quot;System.Security.Policy.ApplicationVersionMatch&quot;> </xref>値。"
  overload: System.Security.Policy.ApplicationTrustCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  id: RemoveRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: RemoveRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "指定した配列内の信頼のアプリケーション オブジェクトをコレクションから削除します。"
  remarks: "削除されたオブジェクトの後ろにあるオブジェクトは、空いた位置を上へ移動します。 移動されるオブジェクトのインデックスも更新します。"
  syntax:
    content: public void RemoveRange (System.Security.Policy.ApplicationTrust[] trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrust[]
      description: "型の&1; 次元配列を<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref>現在のコレクションから削除する項目を格納しています。"
  overload: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  id: RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: RemoveRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションから指定したコレクション内には、アプリケーションの信頼オブジェクトを削除します。"
  remarks: "削除されたオブジェクトの後ろにあるオブジェクトは、空いた位置を上へ移動します。 移動されるオブジェクトのインデックスも更新します。"
  syntax:
    content: public void RemoveRange (System.Security.Policy.ApplicationTrustCollection trusts);
    parameters:
    - id: trusts
      type: System.Security.Policy.ApplicationTrustCollection
      description: "<xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>現在のコレクションから削除する項目を格納しています。"
  overload: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>trusts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  id: SyncRoot
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
  fullName: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。"
  remarks: "既定の実装では、現在のアプリケーションの信頼オブジェクトを返します。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "コレクションへのアクセスを同期するために使用するオブジェクト。"
  overload: System.Security.Policy.ApplicationTrustCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "要素をコピー、<xref:System.Collections.ICollection>を指定した<xref:System.Array>、内の指定した開始<xref:System.Array>インデックス</xref:System.Array></xref:System.Array></xref:System.Collections.ICollection>。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "<xref:System.Array> <xref:System.Collections.ICollection>。</xref:System.Collections.ICollection>からコピーした要素のコピー先である</xref:System.Array>1 次元 <xref:System.Array>0 から始まるインデックス番号が必要です</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>多次元です。       - または - ソース内の要素の数<xref:System.Collections.ICollection>から使用可能な領域より大きくなって<code>index</code>変換先の末尾に<code>array</code>です。"
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Security.Policy.ApplicationTrustCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コレクションを反復処理する列挙子を返します。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>コレクションを反復処理に使用できる</xref:System.Collections.IEnumerator>。"
  overload: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Policy.ApplicationTrustCollection.Add(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Add(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Add(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Add(ApplicationTrust)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrust[])
- uid: System.Security.Policy.ApplicationTrust[]
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust[]
  spec.csharp:
  - uid: System.Security.Policy.ApplicationTrust
    name: ApplicationTrust
    nameWithType: ApplicationTrust
    fullName: ApplicationTrust[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.AddRange(ApplicationTrustCollection)
- uid: System.Security.Policy.ApplicationTrustCollection
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustCollection
  nameWithType: ApplicationTrustCollection
  fullName: System.Security.Policy.ApplicationTrustCollection
- uid: System.Security.Policy.ApplicationTrustCollection.Clear
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Clear()
  nameWithType: ApplicationTrustCollection.Clear()
  fullName: System.Security.Policy.ApplicationTrustCollection.Clear()
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo(System.Security.Policy.ApplicationTrust[],System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: CopyTo(ApplicationTrust[],Int32)
  nameWithType: ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.CopyTo(ApplicationTrust[],Int32)
- uid: System.Security.Policy.ApplicationTrustCollection.Count
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Count
  nameWithType: ApplicationTrustCollection.Count
  fullName: System.Security.Policy.ApplicationTrustCollection.Count
- uid: System.Security.Policy.ApplicationTrustCollection.Find(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Find(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Find(ApplicationIdentity,ApplicationVersionMatch)
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.Security.Policy.ApplicationVersionMatch
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationVersionMatch
  nameWithType: ApplicationVersionMatch
  fullName: System.Security.Policy.ApplicationVersionMatch
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ApplicationTrustCollection.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.GetEnumerator()
- uid: System.Security.Policy.ApplicationTrustEnumerator
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
  fullName: System.Security.Policy.ApplicationTrustCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ApplicationTrustCollection.Item(Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(Int32)
- uid: System.Security.Policy.ApplicationTrustCollection.Item(System.String)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationTrustCollection.Item(String)
  fullName: System.Security.Policy.ApplicationTrustCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.Security.Policy.ApplicationTrust)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove(ApplicationTrust)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationTrust)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationTrust)
- uid: System.Security.Policy.ApplicationTrustCollection.Remove(System.ApplicationIdentity,System.Security.Policy.ApplicationVersionMatch)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove(ApplicationIdentity,ApplicationVersionMatch)
  nameWithType: ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
  fullName: System.Security.Policy.ApplicationTrustCollection.Remove(ApplicationIdentity,ApplicationVersionMatch)
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrust[])
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange(ApplicationTrust[])
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrust[])
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange(System.Security.Policy.ApplicationTrustCollection)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange(ApplicationTrustCollection)
  nameWithType: ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
  fullName: System.Security.Policy.ApplicationTrustCollection.RemoveRange(ApplicationTrustCollection)
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
  fullName: System.Security.Policy.ApplicationTrustCollection.SyncRoot
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Security.Policy.ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.Add*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Add
  nameWithType: ApplicationTrustCollection.Add
- uid: System.Security.Policy.ApplicationTrustCollection.AddRange*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: AddRange
  nameWithType: ApplicationTrustCollection.AddRange
- uid: System.Security.Policy.ApplicationTrustCollection.Clear*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Clear
  nameWithType: ApplicationTrustCollection.Clear
- uid: System.Security.Policy.ApplicationTrustCollection.CopyTo*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: CopyTo
  nameWithType: ApplicationTrustCollection.CopyTo
- uid: System.Security.Policy.ApplicationTrustCollection.Count*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Count
  nameWithType: ApplicationTrustCollection.Count
- uid: System.Security.Policy.ApplicationTrustCollection.Find*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Find
  nameWithType: ApplicationTrustCollection.Find
- uid: System.Security.Policy.ApplicationTrustCollection.GetEnumerator*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ApplicationTrustCollection.GetEnumerator
- uid: System.Security.Policy.ApplicationTrustCollection.IsSynchronized*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ApplicationTrustCollection.IsSynchronized
- uid: System.Security.Policy.ApplicationTrustCollection.Item*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Item
  nameWithType: ApplicationTrustCollection.Item
- uid: System.Security.Policy.ApplicationTrustCollection.Remove*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: Remove
  nameWithType: ApplicationTrustCollection.Remove
- uid: System.Security.Policy.ApplicationTrustCollection.RemoveRange*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: RemoveRange
  nameWithType: ApplicationTrustCollection.RemoveRange
- uid: System.Security.Policy.ApplicationTrustCollection.SyncRoot*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ApplicationTrustCollection.SyncRoot
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#ICollection#CopyTo*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ApplicationTrustCollection.System.Collections.ICollection.CopyTo
- uid: System.Security.Policy.ApplicationTrustCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Security.Policy.ApplicationTrustCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ApplicationTrustCollection.System.Collections.IEnumerable.GetEnumerator
