### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.QueryStringParameter
  id: QueryStringParameter
  children:
  - System.Web.UI.WebControls.QueryStringParameter.#ctor
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.QueryStringParameter.Clone
  - System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  - System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  langs:
  - csharp
  name: QueryStringParameter
  nameWithType: QueryStringParameter
  fullName: System.Web.UI.WebControls.QueryStringParameter
  type: Class
  summary: "HTTP 要求のクエリ文字列フィールドの値をパラメーター オブジェクトにバインドします。"
  remarks: "QueryStringParameter クラスを使用して、HTTP 要求クエリ文字列の一部としてパラメーター化されたクエリまたはコマンドで使用されるパラメーターに渡されるフィールドの値をバインドできます。 フィールドがから取得した、<xref:System.Web.HttpRequest.QueryString%2A>コレクションです</xref:System.Web.HttpRequest.QueryString%2A>。       パラメーターにデータをバインドするコントロールは、QueryStringParameter オブジェクトを参照すると、対応するクエリ文字列の名前/値ペアが渡されない場合、例外をスロー可能性があります。 同様に、クエリ文字列フィールドの名前が対応する値を指定せずに渡された場合、データは表示されません。 このような状況を避けるためには、次のように設定します、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティに応じて。</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> 。       QueryStringParameter クラスは、提供、<xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>プロパティにバインドするクエリ文字列の値の名前を指定します</xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>。 <xref:System.Web.UI.WebControls.Parameter>クラス</xref:System.Web.UI.WebControls.Parameter>から継承されているプロパティも用意されています。      > [!IMPORTANT] >、QueryStringParameter クラスが渡される値を検証しません。 生の値を提供します。 ただし、データ ソース コントロールで QueryStringParameter オブジェクトの値を検証することができます。 これを行うには、処理、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`データのイベントのソース管理と、イベント ハンドラーのパラメーター値を確認します。 パラメーターの値が検証テストに合格しなかった場合は、設定して、データ操作を取り消すことができます、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>、関連するプロパティ<xref:System.ComponentModel.CancelEventArgs>クラスを`true`</xref:System.ComponentModel.CancelEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。"
  example:
  - "The following example shows how to create a QueryStringParameter object to use as a filter when you display data in a <xref:System.Web.UI.WebControls.GridView> control. You add the QueryStringParameter object to the <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. The parameter object binds the value of the query-string field named `country` to its <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> string. Because no <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property is specified for the parameter, if no field named `country` is passed with the query string, the <xref:System.Web.UI.WebControls.AccessDataSource> control throws a <xref:System.NullReferenceException> exception. If a field named `country` is passed but has no value, the <xref:System.Web.UI.WebControls.GridView> control displays no data.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_4#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_359_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_4#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_359_1.aspx)]  \n  \n The following example shows how to create a QueryStringParameter object to display data from an Access database by using a parameterized SQL query. The <xref:System.Web.UI.WebControls.AccessDataSource> object retrieves records that are then displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control is also editable, and lets users update the status of orders in the Northwind Traders Orders table.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_359_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_359_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("QueryStringField")]

      public class QueryStringParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter()
  nameWithType: QueryStringParameter.QueryStringParameter()
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しい名前のないインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>クラスです。"
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter>QueryStringParameter コンス トラクターを使用して作成されたオブジェクトには、すべてのプロパティの既定値で初期化します</xref:System.Web.UI.WebControls.QueryStringParameter>。 プロパティは次のように初期化されます- <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>、空の文字列に初期化されます (&quot;&quot;)。</xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A> 。      - <xref:System.Web.UI.WebControls.Parameter.Name%2A>、空の文字列に初期化されます (&quot;&quot;).</xref:System.Web.UI.WebControls.Parameter.Name%2A>      - <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.TypeCode?displayProperty=fullName>.</xref:System.TypeCode?displayProperty=fullName>に初期化されます</xref:System.Web.UI.WebControls.Parameter.Type%2A>      - <xref:System.Web.UI.WebControls.Parameter.Direction%2A> <xref:System.Data.ParameterDirection>.</xref:System.Data.ParameterDirection>に初期化されます</xref:System.Web.UI.WebControls.Parameter.Direction%2A>      -<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>に初期化される`null`</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>。"
  example:
  - "The following example shows how to use the QueryStringParameter constructor to create a new <xref:System.Web.UI.WebControls.QueryStringParameter> parameter and add it to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection of an <xref:System.Web.UI.WebControls.AccessDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_83_1.cs)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_83_1.vb)]  \n  \n The <xref:System.Web.UI.WebControls.QueryStringParameter> object is added to the <xref:System.Web.UI.WebControls.AccessDataSource> control and is declared in an ASP.NET Web page. The <xref:System.Web.UI.WebControls.ListBox> control uses the <xref:System.Web.UI.WebControls.AccessDataSource> control to bind and display data whenever the page is requested with a query string that contains a field that is named `empId` and that has a corresponding value.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_83_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_83_2.aspx)]"
  syntax:
    content: public QueryStringParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  id: '#ctor(System.Web.UI.WebControls.QueryStringParameter)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(QueryStringParameter)
  nameWithType: QueryStringParameter.QueryStringParameter(QueryStringParameter)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(QueryStringParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>クラスで指定されているインスタンスの値を使用して、 <code> original </code>パラメーター。"
  remarks: "QueryStringParameter コンス トラクターは、複製に使用される保護されたコピー コンス トラクター、<xref:System.Web.UI.WebControls.QueryStringParameter>インスタンス</xref:System.Web.UI.WebControls.QueryStringParameter>。 値、 <xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>、および<xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティは、新しいインスタンスに転送されます</xref:System.Web.UI.WebControls.Parameter.Type%2A></xref:System.Web.UI.WebControls.Parameter.Name%2A></xref:System.Web.UI.WebControls.QueryStringParameter.QueryStringField%2A>。"
  syntax:
    content: protected QueryStringParameter (System.Web.UI.WebControls.QueryStringParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.QueryStringParameter
      description: "A <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>インスタンスから現在のインスタンスを初期化します。"
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しい名前付きのインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>クラスにバインドするには、どのクエリ文字列フィールドを識別する、指定した文字列を使用します。"
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter>QueryStringParameter コンス トラクターを使用して作成されたオブジェクトには、パラメーターのバインド先のクエリ文字列フィールドを識別する指定されたパラメーター名で初期化します</xref:System.Web.UI.WebControls.QueryStringParameter>。 <xref:System.Web.UI.WebControls.Parameter.Type%2A>と<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティは既定値で初期化されます</xref:System.Web.UI.WebControls.Parameter.Direction%2A></xref:System.Web.UI.WebControls.Parameter.Type%2A>。"
  example:
  - "The following example shows how to create two <xref:System.Web.UI.WebControls.QueryStringParameter> objects by using the QueryStringParameter constructor and add them to an <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. A <xref:System.Web.UI.WebControls.GridView> control displays data if the `employee` and `country` query-string fields are passed with the request and if they have valid values.  \n  \n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_2#1](~/add/codesnippet/visualbasic/28eab08c-8b34-4ee2-bf96-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_2#1](~/add/codesnippet/csharp/28eab08c-8b34-4ee2-bf96-_1.aspx)]"
  syntax:
    content: public QueryStringParameter (string name, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "パラメーターの名前。"
    - id: queryStringField
      type: System.String
      description: "パラメーター オブジェクトにバインドされるクエリ文字列フィールドの名前です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,DbType,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しい名前付きのインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>クラス、指定したクエリ文字列フィールドとパラメーターのデータ型を使用します。"
  syntax:
    content: public QueryStringParameter (string name, System.Data.DbType dbType, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "パラメーターの名前。"
    - id: dbType
      type: System.Data.DbType
      description: "パラメーターのデータ型。"
    - id: queryStringField
      type: System.String
      description: "パラメーター オブジェクトにバインドされるクエリ文字列フィールドの名前です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringParameter(String,TypeCode,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しい名前付きと厳密に型指定されたインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>クラスにバインドするには、どのクエリ文字列フィールドを識別する、指定した文字列を使用します。"
  remarks: "A <xref:System.Web.UI.WebControls.QueryStringParameter>QueryStringParameter コンス トラクターを使用して作成されたオブジェクトには、指定されたパラメーター名、パラメーターの型およびパラメーターのバインド先のクエリ文字列フィールドを識別する文字列で初期化します</xref:System.Web.UI.WebControls.QueryStringParameter>。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>と<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>プロパティは既定値で初期化されます</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A></xref:System.Web.UI.WebControls.Parameter.Direction%2A>。"
  example:
  - "The following example shows how to create a <xref:System.Web.UI.WebControls.QueryStringParameter> object by using the QueryStringParameter constructor and add it to an <xref:System.Web.UI.WebControls.AccessDataSource> control's <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. A <xref:System.Web.UI.WebControls.GridView> control displays data if the `employee` and `country` query-string fields are passed with the request and if they have valid values.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_3#1](~/add/codesnippet/csharp/0cb36b7a-981d-4e88-acd1-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_3#1](~/add/codesnippet/visualbasic/0cb36b7a-981d-4e88-acd1-_1.aspx)]"
  syntax:
    content: public QueryStringParameter (string name, TypeCode type, string queryStringField);
    parameters:
    - id: name
      type: System.String
      description: "パラメーターの名前。"
    - id: type
      type: System.TypeCode
      description: "パラメーターを表す型。 既定値は<xref:System.TypeCode>。</xref:System.TypeCode>"
    - id: queryStringField
      type: System.String
      description: "パラメーター オブジェクトにバインドされるクエリ文字列フィールドの名前です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: QueryStringParameter.Clone()
  fullName: System.Web.UI.WebControls.QueryStringParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "現在の複製を返します<xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;></xref>インスタンス。"
  remarks: "この複製メソッドの呼び出し、<xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>の新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.QueryStringParameter>現在のインスタンスの値を使用してクラス</xref:System.Web.UI.WebControls.QueryStringParameter></xref:System.Web.UI.WebControls.QueryStringParameter.%23ctor%2A>。"
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "現在のインスタンスの複製。"
  overload: System.Web.UI.WebControls.QueryStringParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: QueryStringParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.QueryStringParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新の値を返します、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>オブジェクト。"
  remarks: "<xref:System.Web.UI.WebControls.QueryStringParameter>Evaluate メソッドが呼び出されるたびに、クエリ文字列フィールドにバインドしようとするオブジェクト</xref:System.Web.UI.WebControls.QueryStringParameter>。       `context`パラメーターは、クエリ文字列から指定したクエリ文字列フィールドの値を取得する評価メソッドによって使用されます。 `control`パラメーターは無視されます。"
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;></xref>要求のインスタンス。"
    - id: control
      type: System.Web.UI.Control
      description: "ASP.NET Web に関連付けられている Web サーバー コントロールの場所のページ、 <xref href=&quot;System.Web.UI.WebControls.QueryStringParameter&quot;> </xref>オブジェクトを使用します。       **注**このパラメーターは使用されません。"
    return:
      type: System.Object
      description: "パラメーターの現在の値を表すオブジェクト。 コンテキストまたは要求がある場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、Evaluate メソッドを返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.QueryStringParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  id: QueryStringField
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはパラメーターのバインド先のクエリ文字列フィールドの名前を設定します。"
  remarks: "QueryStringField プロパティでは、クエリ文字列で渡される名前/値ペアを識別します。 一方、QueryStringField プロパティは、ペアの名前を識別、<xref:System.Web.UI.WebControls.QueryStringParameter>プロパティは、実行時に、対応する値にバインドされています</xref:System.Web.UI.WebControls.QueryStringParameter>。 クエリ文字列を使用してページに期待されるクエリ文字列の名前/値ペアが渡されない場合、<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>メソッドは、パラメーターの値をバインドしよう、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティ</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A></xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>。 場合、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティが設定されていない、<xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A>パラメーター値をバインドするメソッドは失敗します</xref:System.Web.UI.WebControls.QueryStringParameter.Evaluate%2A></xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>。"
  example:
  - "The following example shows how to use a <xref:System.Web.UI.WebControls.QueryStringParameter> object together with a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.ListBox> control. The QueryStringField property is set to the name of the expected query-string field, and the parameter is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. A <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> property is provided in case the name/value pair is not passed with the query string.  \n  \n [!code-cs[System.Web.UI.WebControls.QueryStringParameter_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_370_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.QueryStringParameter_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_370_1.aspx)]  \n  \n The following example shows how to use a <xref:System.Web.UI.WebControls.QueryStringParameter> object together with a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.QueryStringParameter> object is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection, together with other parameter objects that are used for the output parameter and return value. To retrieve data, handle the values that are returned from the stored procedure. This code example is part of a larger example that is provided for the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> class.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_370_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_370_2.aspx)]"
  syntax:
    content: public string QueryStringField { get; set; }
    return:
      type: System.String
      description: "パラメーターのバインド先のクエリ文字列フィールドの名前。"
  overload: System.Web.UI.WebControls.QueryStringParameter.QueryStringField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.QueryStringParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
  fullName: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはか、クエリ文字列パラメーターの値が検証されているかどうかを設定します。"
  remarks: "場合のページ プロパティ<xref:System.Web.UI.Page.SkipFormActionValidation%2A>に設定されている`true`、ValidateInput プロパティに設定し、 `false`、クエリ文字列パラメーターは検証されません</xref:System.Web.UI.Page.SkipFormActionValidation%2A>。 ただし場合、page プロパティ<xref:System.Web.UI.Page.SkipFormActionValidation%2A>に設定されている`true`、ValidateInput プロパティに設定および`true`、クエリ文字列パラメーターが検証されます</xref:System.Web.UI.Page.SkipFormActionValidation%2A>。 場合 page プロパティ<xref:System.Web.UI.Page.SkipFormActionValidation%2A>に設定されている`false`、ValidateInput プロパティに設定するかどうかに関係なく、クエリ文字列パラメーターが検証される`true`または`false`</xref:System.Web.UI.Page.SkipFormActionValidation%2A>。"
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クエリ パラメーターの値が検証されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.QueryStringParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter()
  nameWithType: QueryStringParameter.QueryStringParameter()
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter()
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.Web.UI.WebControls.QueryStringParameter)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(QueryStringParameter)
  nameWithType: QueryStringParameter.QueryStringParameter(QueryStringParameter)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(QueryStringParameter)
- uid: System.Web.UI.WebControls.QueryStringParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: QueryStringParameter
  nameWithType: QueryStringParameter
  fullName: System.Web.UI.WebControls.QueryStringParameter
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,DbType,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter(String,TypeCode,String)
  nameWithType: QueryStringParameter.QueryStringParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Clone()
  nameWithType: QueryStringParameter.Clone()
  fullName: System.Web.UI.WebControls.QueryStringParameter.Clone()
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: QueryStringParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.QueryStringParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
  fullName: System.Web.UI.WebControls.QueryStringParameter.QueryStringField
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
  fullName: System.Web.UI.WebControls.QueryStringParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.QueryStringParameter.#ctor*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringParameter
  nameWithType: QueryStringParameter.QueryStringParameter
- uid: System.Web.UI.WebControls.QueryStringParameter.Clone*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Clone
  nameWithType: QueryStringParameter.Clone
- uid: System.Web.UI.WebControls.QueryStringParameter.Evaluate*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: Evaluate
  nameWithType: QueryStringParameter.Evaluate
- uid: System.Web.UI.WebControls.QueryStringParameter.QueryStringField*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: QueryStringField
  nameWithType: QueryStringParameter.QueryStringField
- uid: System.Web.UI.WebControls.QueryStringParameter.ValidateInput*
  parent: System.Web.UI.WebControls.QueryStringParameter
  isExternal: false
  name: ValidateInput
  nameWithType: QueryStringParameter.ValidateInput
