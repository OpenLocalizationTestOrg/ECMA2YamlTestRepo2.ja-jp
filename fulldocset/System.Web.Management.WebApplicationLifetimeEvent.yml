### YamlMime:ManagedReference
items:
- uid: System.Web.Management.WebApplicationLifetimeEvent
  id: WebApplicationLifetimeEvent
  children:
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  - System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  langs:
  - csharp
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent
  fullName: System.Web.Management.WebApplicationLifetimeEvent
  type: Class
  summary: "アプリケーションの有効期間中に重大なイベントを表します。"
  remarks: "配置済みの Web アプリケーションの管理を運用環境と運用スタッフは、ASP.NET の状態監視できます。 <xref:System.Web.Management>名前空間には、アプリケーションの正常性状態のデータおよびプロバイダーの種類は、このデータ処理をパッケージ化する正常性イベントの種類が含まれています</xref:System.Web.Management>。 正常性イベントの管理を支援するサポート型も含まれています。       アプリケーションの有効期間のイベントには、アプリケーションの起動などのイベントとシャット ダウン イベントが含まれます。 アプリケーションが終了した場合は、関連するイベント メッセージのフィールドを表示して理由を確認できます。       WebApplicationLifetimeEvent インスタンスの実行時に ASP.NET の状態監視アプリケーションの有効期間イベントのパフォーマンス カウンターを更新します。 WebApplicationLifetimeEvent オブジェクトを追加することによってこれらのイベント ログに記録できます、`rules`のサブセクション、`healthMonitoring`次の例のように、構成ファイルのセクションです。      ```   <rules>     <add name=&quot;Application Events&quot;       eventName=&quot;Application Lifetime Events&quot;       provider=&quot;EventLogProvider&quot;       profile=&quot;Default&quot;       minInterval=&quot;00:01:00&quot; />   </rules>      ```アプリケーションの有効期間イベントのパフォーマンス カウンターには、ASP.NET の有効期間のすべてのイベントの合計が含まれています。 システム モニター (PerfMon) には、このパフォーマンス カウンターを表示する、**カウンターの追加**ウィンドウ選択**ASP.NET**から、**パフォーマンス オブジェクト**ドロップダウン リスト。 選択、**アプリケーションの有効期間イベント**パフォーマンス カウンター、およびをクリックして、**追加**ボタンをクリックします。 詳細については、「を使用して ASP.NET アプリケーションをシステム モニター (PerfMon)」を参照してください[MSDN](http://go.microsoft.com/fwlink/?linkid=37118)です。 標準でログに記録するイベントを許可するかどうかは<xref:System.Web.Management.EventLogWebEventProvider>を選択してイベント ビューアーで表示できます、**アプリケーション**ログ</xref:System.Web.Management.EventLogWebEventProvider> 詳細については、次を参照してください。[イベント ビューアー](http://go.microsoft.com/fwlink/?linkid=24845&clcid=0x409) TechNet の Windows Server 2003 のドキュメントにします。      > [!CAUTION] > WebApplicationLifetimeEvent オブジェクトは、大量のイベントであるため、ログは、リソースを消費する、システムの速度が低下する可能性があります。 場合は上書きするには、その他のイベントが発生する場合も、<xref:System.Web.Management.EventLogWebEventProvider>イベントの動作をログには大量のイベントと方法のためクラスします</xref:System.Web.Management.EventLogWebEventProvider>。      > [!NOTE] > ほとんどの場合はできる実装されると、ASP.NET の稼働状況の監視の種類を使用して、内の値を指定することで、稼働状況の監視システムを制御する、`healthMonitoring`構成セクション。 独自のカスタム イベントおよびプロバイダーを作成する正常性の監視の種類からも派生できます。 WebApplicationLifetimeEvent クラスから派生するの例は、このトピックで例を参照してください。"
  example:
  - "The following code example shows how to derive from the WebApplicationLifetimeEvent class to create a custom event.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/visualbasic/t-system.web.management._24_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#1](~/add/codesnippet/csharp/t-system.web.management._24_1.cs)]  \n  \n The following configuration-file excerpt shows how to configure the `healthMonitoring` section of a configuration file to add the `SampleWebApplicationLifetimeEvent` code defined above to the ASP.NET health-monitoring system. To add the event to the system, you must define the event by adding a new entry to the `eventMappings` section and map the event to a provider by adding a new entry to the `rules` section.  \n  \n```  \n<healthMonitoring  \n  enabled=\"true\"  \n  heartBeatInterval=\"0\">  \n  \n    <eventMappings>  \n       <clear />  \n       <!-- Configure the application lifetime event -->  \n       <!-- object to handle the Web application events. -->  \n       <add name=\"SampleApplicationLifetimeEvents\"  \n         type=\"System.Web.Management.SampleWebApplicationLifetimeEvent,  \n         System.Web,Version=2.0.3600.0,  \n         Culture=neutral,PublicKeyToken=b03f5f7f11d50a3a\" />  \n     </eventMappings>  \n  \n    <rules>  \n      <clear/>  \n       // Configure the connection between the   \n       // application lifetime event object   \n       // and the provider that must process it.  \n       <add name=\"Custom Application Events\"  \n         eventName=\"SampleApplicationLifetimeEvents\"  \n         provider=\"EventLogProvider\"  \n         profile=\"Default\"  \n         minInterval=\"00:01:00\" />  \n    </rules>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public class WebApplicationLifetimeEvent : System.Web.Management.WebManagementEvent'
  inheritance:
  - System.Object
  - System.Web.Management.WebBaseEvent
  - System.Web.Management.WebManagementEvent
  implements: []
  inheritedMembers:
  - System.Web.Management.WebBaseEvent.ApplicationInformation
  - System.Web.Management.WebBaseEvent.EventCode
  - System.Web.Management.WebBaseEvent.EventDetailCode
  - System.Web.Management.WebBaseEvent.EventID
  - System.Web.Management.WebBaseEvent.EventOccurrence
  - System.Web.Management.WebBaseEvent.EventSequence
  - System.Web.Management.WebBaseEvent.EventSource
  - System.Web.Management.WebBaseEvent.EventTime
  - System.Web.Management.WebBaseEvent.EventTimeUtc
  - System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)
  - System.Web.Management.WebBaseEvent.Message
  - System.Web.Management.WebBaseEvent.Raise
  - System.Web.Management.WebBaseEvent.Raise(System.Web.Management.WebBaseEvent)
  - System.Web.Management.WebBaseEvent.ToString
  - System.Web.Management.WebBaseEvent.ToString(System.Boolean,System.Boolean)
  - System.Web.Management.WebManagementEvent.ProcessInformation
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初期化、 <xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;> </xref>クラス、指定されたパラメーターを使用します。"
  remarks: "このコンス トラクターは、ASP.NET の稼働状況の監視システムで内部的に使用します。 <xref:System.Web.Management.WebApplicationLifetimeEvent>このクラスから継承する独自のイベントの種類を実装する場合は、このコンス トラクターを呼び出すことができますが、クラス</xref:System.Web.Management.WebApplicationLifetimeEvent>のインスタンスを作成するのにことはありません使用されます。      > [!NOTE] >、WebApplicationLifetimeEvent コンス トラクターは、コードから直接使用するものではありません。 ASP.NET によって呼び出されます。 <xref:System.Web.Management.WebApplicationLifetimeEvent>クラス</xref:System.Web.Management.WebApplicationLifetimeEvent>から派生している場合は、WebApplicationLifetimeEvent コンス トラクターを呼び出すことができます。"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/visualbasic/f6897152-ffc5-4ce1-a4ea-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#2](~/add/codesnippet/csharp/f6897152-ffc5-4ce1-a4ea-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode);
    parameters:
    - id: message
      type: System.String
      description: "イベントに関連付けられているメッセージ。"
    - id: eventSource
      type: System.Object
      description: "イベントのソースであるオブジェクト。"
    - id: eventCode
      type: System.Int32
      description: "イベントに関連付けられているコード。 カスタム イベントを実装するときにイベントのコードがより大きくなければなりません<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;></xref>です。"
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Object,System.Int32,System.Int32)'
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "初期化、 <xref href=&quot;System.Web.Management.WebApplicationLifetimeEvent&quot;> </xref>クラス、指定されたパラメーターを使用します。"
  remarks: "このコンス トラクターは、ASP.NET の稼働状況の監視システムで内部的に使用します。 <xref:System.Web.Management.WebApplicationLifetimeEvent>このクラスから継承する独自のイベントの種類を実装する場合は、このコンス トラクターを呼び出すことができますが、クラス</xref:System.Web.Management.WebApplicationLifetimeEvent>のインスタンスを作成するのにことはありません使用されます。      > [!NOTE] >、WebApplicationLifetimeEvent コンス トラクターは、コードから直接使用するものではありません。 ASP.NET によって呼び出されます。 <xref:System.Web.Management.WebApplicationLifetimeEvent>クラス</xref:System.Web.Management.WebApplicationLifetimeEvent>から派生している場合は、WebApplicationLifetimeEvent コンス トラクターを呼び出すことができます。"
  example:
  - "The following code example shows how to use the WebApplicationLifetimeEvent in an ASP.NET custom health event. This code example is mainly intended to show the correct syntax to use.  \n  \n [!code-vb[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/visualbasic/d658829b-c5f1-4bb1-9080-_1.vb)]\n [!code-cs[System.Web.Management.WebApplicationLifetimeEvent#3](~/add/codesnippet/csharp/d658829b-c5f1-4bb1-9080-_1.cs)]"
  syntax:
    content: protected WebApplicationLifetimeEvent (string message, object eventSource, int eventCode, int eventDetailCode);
    parameters:
    - id: message
      type: System.String
      description: "イベントに関連付けられているメッセージ。"
    - id: eventSource
      type: System.Object
      description: "イベントのソースであるオブジェクト。"
    - id: eventCode
      type: System.Int32
      description: "イベントに関連付けられているコード。 カスタム イベントを実装するときにイベントのコードがより大きくなければなりません<xref href=&quot;System.Web.Management.WebEventCodes.WebExtendedBase&quot;></xref>です。"
    - id: eventDetailCode
      type: System.Int32
      description: "<xref href=&quot;System.Web.Management.WebEventCodes&quot;> </xref>イベントの詳細な識別子を指定する値。"
  overload: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  id: IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  langs:
  - csharp
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "パフォーマンス カウンターをインクリメントするには、内部的に使用します。"
  syntax:
    content: protected override void IncrementPerfCounters ();
    parameters: []
  overload: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebManagementEvent
  isExternal: false
  name: System.Web.Management.WebManagementEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
  fullName: System.Web.Management.WebApplicationLifetimeEvent.WebApplicationLifetimeEvent(String,Object,Int32,Int32)
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters()
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters()
  fullName: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters()
- uid: System.Web.Management.WebApplicationLifetimeEvent.#ctor*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: WebApplicationLifetimeEvent
  nameWithType: WebApplicationLifetimeEvent.WebApplicationLifetimeEvent
- uid: System.Web.Management.WebApplicationLifetimeEvent.IncrementPerfCounters*
  parent: System.Web.Management.WebApplicationLifetimeEvent
  isExternal: false
  name: IncrementPerfCounters
  nameWithType: WebApplicationLifetimeEvent.IncrementPerfCounters
