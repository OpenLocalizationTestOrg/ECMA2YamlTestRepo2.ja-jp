### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.AsyncResult
  id: AsyncResult
  children:
  - System.IdentityModel.AsyncResult.#ctor
  - System.IdentityModel.AsyncResult.#ctor(System.Object)
  - System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  - System.IdentityModel.AsyncResult.AsyncState
  - System.IdentityModel.AsyncResult.AsyncWaitHandle
  - System.IdentityModel.AsyncResult.Complete(System.Boolean)
  - System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  - System.IdentityModel.AsyncResult.CompletedSynchronously
  - System.IdentityModel.AsyncResult.Dispose
  - System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  - System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  - System.IdentityModel.AsyncResult.Finalize
  - System.IdentityModel.AsyncResult.IsCompleted
  langs:
  - csharp
  name: AsyncResult
  nameWithType: AsyncResult
  fullName: System.IdentityModel.AsyncResult
  type: Class
  summary: "実装する抽象基本クラス、<xref:System.IAsyncResult>インターフェイス</xref:System.IAsyncResult>。 派生元の基底クラスとして機能<xref:System.IAsyncResult>非同期プログラミングの一般的なシナリオに使用できるオブジェクト</xref:System.IAsyncResult>。"
  remarks: "詳細については、次を参照してください、<xref:System.IAsyncResult?displayProperty=fullName>インターフェイス。</xref:System.IAsyncResult?displayProperty=fullName> 。       <xref:System.IdentityModel.TypedAsyncResult%601>クラス AsyncResult から派生します</xref:System.IdentityModel.TypedAsyncResult%601>。"
  syntax:
    content: 'public abstract class AsyncResult : IAsyncResult, IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IAsyncResult
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor
  id: '#ctor'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "インスタンスを初期化するために派生クラスのコンス トラクターから呼び出される、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>コールバック デリゲートまたは状態オブジェクトがないクラスです。"
  syntax:
    content: protected AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "インスタンスを初期化するために派生クラスのコンス トラクターから呼び出される、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>コールバック デリゲートはありませんは状態オブジェクトが存在するクラス。"
  syntax:
    content: protected AsyncResult (object state);
    parameters:
    - id: state
      type: System.Object
      description: "限定または非同期操作に関する情報を格納するユーザー定義のオブジェクト。"
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  id: '#ctor(System.AsyncCallback,System.Object)'
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "インスタンスを初期化するために派生クラスのコンス トラクターから呼び出される、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>コールバック デリゲートと、状態オブジェクトを持つクラスであります。"
  syntax:
    content: protected AsyncResult (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "非同期操作が完了したときに呼び出されるメソッド。"
    - id: state
      type: System.Object
      description: "限定または非同期操作に関する情報を格納するユーザー定義のオブジェクト。"
  overload: System.IdentityModel.AsyncResult.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncState
  id: AsyncState
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "限定または非同期操作に関する情報を格納するユーザー定義のオブジェクトを取得します。"
  remarks: "詳細については、次を参照してください、<xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName>プロパティ。</xref:System.IAsyncResult.AsyncState%2A?displayProperty=fullName> 。"
  syntax:
    content: public object AsyncState { get; }
    return:
      type: System.Object
      description: "限定または非同期操作に関する情報を格納するユーザー定義のオブジェクト。"
  overload: System.IdentityModel.AsyncResult.AsyncState*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  id: AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "取得、<xref:System.Threading.WaitHandle>非同期操作が完了するまで待機するために使用されます</xref:System.Threading.WaitHandle>。"
  remarks: "詳細については、次を参照してください、<xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName>プロパティ。</xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=fullName> 。"
  syntax:
    content: public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: "A<xref:System.Threading.WaitHandle>非同期操作が完了するまで待機するために使用されます</xref:System.Threading.WaitHandle>。"
  overload: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  id: Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "非同期操作が完了し、例外は発生しなかったときは、このバージョンの完了を呼び出します。 これは、操作の状態を更新し、コールバックを通知します。"
  syntax:
    content: protected void Complete (bool completedSynchronously);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>非同期操作が同期的に完了した場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  id: Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "処理中に例外が発生する場合は、このバージョンの完了を呼び出します。 コールバックを通知するだけでなく、例外をキャプチャし、への呼び出し中にスローされるを格納、<xref:System.IdentityModel.AsyncResult.End*>メソッド</xref:System.IdentityModel.AsyncResult.End*>。"
  syntax:
    content: protected void Complete (bool completedSynchronously, Exception exception);
    parameters:
    - id: completedSynchronously
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>非同期操作が同期的に完了した場合それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    - id: exception
      type: System.Exception
      description: "非同期操作の処理中に発生した例外。"
  overload: System.IdentityModel.AsyncResult.Complete*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  id: CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "非同期操作が同期的に完了したかどうかを示す値を取得します。"
  remarks: "詳細については、次を参照してください、<xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName>プロパティ。</xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=fullName> 。"
  syntax:
    content: public bool CompletedSynchronously { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>非同期操作が同期的に完了した場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.AsyncResult.CompletedSynchronously*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose
  id: Dispose
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "現在のインスタンスによって使用されるリソースを解放、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>クラスです。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "によって呼び出される、 <xref href=&quot;System.IdentityModel.AsyncResult.Dispose&quot;> </xref>と<xref:System.IdentityModel.AsyncResult.Finalize*>の現在のインスタンスによって使用されるマネージ コードとアンマネージ リソースを解放するメソッド、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>クラス</xref:System.IdentityModel.AsyncResult.Finalize*>"
  syntax:
    content: protected virtual void Dispose (bool isExplicitDispose);
    parameters:
    - id: isExplicitDispose
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放します。 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Dispose を明示的に呼び出すことを示します。"
  overload: System.IdentityModel.AsyncResult.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  id: End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "このメソッドを呼び出すときに、`End`関数の非同期操作が完了します。 非同期操作が完了していくつかの一般的な検証を実行することを確認します。"
  syntax:
    content: public static void End (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期操作の状態を表すします</xref:System.IAsyncResult>。"
  overload: System.IdentityModel.AsyncResult.End*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.Finalize
  id: Finalize
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "により、 <xref href=&quot;System.IdentityModel.AsyncResult&quot;> </xref>リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクト。"
  syntax:
    content: ~AsyncResult ();
    parameters: []
  overload: System.IdentityModel.AsyncResult.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.AsyncResult.IsCompleted
  id: IsCompleted
  parent: System.IdentityModel.AsyncResult
  langs:
  - csharp
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "非同期操作が完了したかどうかを示す値を取得します。"
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、操作が完了しました。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IdentityModel.AsyncResult.IsCompleted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.AsyncResult.#ctor
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult()
  nameWithType: AsyncResult.AsyncResult()
  fullName: System.IdentityModel.AsyncResult.AsyncResult()
- uid: System.IdentityModel.AsyncResult.#ctor(System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(Object)
  nameWithType: AsyncResult.AsyncResult(Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(Object)
- uid: System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult(AsyncCallback,Object)
  nameWithType: AsyncResult.AsyncResult(AsyncCallback,Object)
  fullName: System.IdentityModel.AsyncResult.AsyncResult(AsyncCallback,Object)
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.AsyncResult.AsyncState
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
  fullName: System.IdentityModel.AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
  fullName: System.IdentityModel.AsyncResult.AsyncWaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean)
  nameWithType: AsyncResult.Complete(Boolean)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete(Boolean,Exception)
  nameWithType: AsyncResult.Complete(Boolean,Exception)
  fullName: System.IdentityModel.AsyncResult.Complete(Boolean,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
  fullName: System.IdentityModel.AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose()
  nameWithType: AsyncResult.Dispose()
  fullName: System.IdentityModel.AsyncResult.Dispose()
- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AsyncResult.Dispose(Boolean)
  fullName: System.IdentityModel.AsyncResult.Dispose(Boolean)
- uid: System.IdentityModel.AsyncResult.End(System.IAsyncResult)
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End(IAsyncResult)
  nameWithType: AsyncResult.End(IAsyncResult)
  fullName: System.IdentityModel.AsyncResult.End(IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.IdentityModel.AsyncResult.Finalize
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize()
  nameWithType: AsyncResult.Finalize()
  fullName: System.IdentityModel.AsyncResult.Finalize()
- uid: System.IdentityModel.AsyncResult.IsCompleted
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
  fullName: System.IdentityModel.AsyncResult.IsCompleted
- uid: System.IdentityModel.AsyncResult.#ctor*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncResult
  nameWithType: AsyncResult.AsyncResult
- uid: System.IdentityModel.AsyncResult.AsyncState*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncState
  nameWithType: AsyncResult.AsyncState
- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: AsyncWaitHandle
  nameWithType: AsyncResult.AsyncWaitHandle
- uid: System.IdentityModel.AsyncResult.Complete*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Complete
  nameWithType: AsyncResult.Complete
- uid: System.IdentityModel.AsyncResult.CompletedSynchronously*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: CompletedSynchronously
  nameWithType: AsyncResult.CompletedSynchronously
- uid: System.IdentityModel.AsyncResult.Dispose*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Dispose
  nameWithType: AsyncResult.Dispose
- uid: System.IdentityModel.AsyncResult.End*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: End
  nameWithType: AsyncResult.End
- uid: System.IdentityModel.AsyncResult.Finalize*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: Finalize
  nameWithType: AsyncResult.Finalize
- uid: System.IdentityModel.AsyncResult.IsCompleted*
  parent: System.IdentityModel.AsyncResult
  isExternal: false
  name: IsCompleted
  nameWithType: AsyncResult.IsCompleted
