### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptedType
  id: EncryptedType
  children:
  - System.Security.Cryptography.Xml.EncryptedType.#ctor
  - System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  - System.Security.Cryptography.Xml.EncryptedType.CipherData
  - System.Security.Cryptography.Xml.EncryptedType.Encoding
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  - System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  - System.Security.Cryptography.Xml.EncryptedType.GetXml
  - System.Security.Cryptography.Xml.EncryptedType.Id
  - System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  - System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.EncryptedType.MimeType
  - System.Security.Cryptography.Xml.EncryptedType.Type
  langs:
  - csharp
  name: EncryptedType
  nameWithType: EncryptedType
  fullName: System.Security.Cryptography.Xml.EncryptedType
  type: Class
  summary: "元の抽象基本クラスを表すクラス<xref href=&quot;System.Security.Cryptography.Xml.EncryptedData&quot;></xref>と<xref href=&quot;System.Security.Cryptography.Xml.EncryptedKey&quot;></xref>派生します。"
  remarks: "EncryptedType クラスは、元の抽象基本クラスを表すクラス<xref:System.Security.Cryptography.Xml.EncryptedData>と<xref:System.Security.Cryptography.Xml.EncryptedKey>派生します</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData>。 これら&2; つのクラスには、実際の暗号化されたデータや XML 暗号化に重要な情報が含まれます。 XML 暗号化標準に準拠するには、これら&2; つの派生クラスを使用する必要があります。       XML 暗号化の規格の詳細については、http://www.w3.org/TR/xmlenc-core/ を参照してください。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the EncryptedType class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/t-system.security.crypto_24_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/t-system.security.crypto_24_1.vb)]"
  syntax:
    content: public abstract class EncryptedType
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、<xref:System.Security.Cryptography.Xml.EncryptedType>クラス</xref:System.Security.Cryptography.Xml.EncryptedType>の新しいインスタンスを作成します。 このクラスは、元となる抽象基本クラスを表すクラス<xref:System.Security.Cryptography.Xml.EncryptedData>と<xref:System.Security.Cryptography.Xml.EncryptedKey>派生します</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData>。 XML 暗号化標準に準拠するには、2 つの派生クラスを使用してください。 XML 暗号化の規格の詳細については、http://www.w3.org/TR/xmlenc-core/ を参照してください。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_3_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_3_1.vb)]"
  syntax:
    content: protected EncryptedType ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  id: AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "追加、 <xref uid=&quot;langword_csharp_&lt;EncryptionProperty&gt;&quot; name=&quot;&lt;EncryptionProperty&gt;&quot; href=&quot;&quot;> </xref>に子要素、 <xref uid=&quot;langword_csharp_&lt;EncryptedProperties&gt;&quot; name=&quot;&lt;EncryptedProperties&gt;&quot; href=&quot;&quot;> </xref> 、現在の要素<xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> XML 暗号化内のオブジェクト。"
  remarks: "このメソッドを追加するために使用できます`<EncryptionProperty>`子要素を`<EncryptedProperties>`要素。 `<EncryptedProperties>`要素の追加情報を提供、`<EncryptedType>`要素。"
  syntax:
    content: public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);
    parameters:
    - id: ep
      type: System.Security.Cryptography.Xml.EncryptionProperty
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionProperty&quot;> </xref>オブジェクト。"
  overload: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  id: CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;> </xref>のインスタンスの値、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref>クラスです。"
  remarks: "`<CipherData>`要素は、暗号化されたデータを提供する XML 暗号化に必要な要素です。 Base64 でエンコードされたテキストとして、暗号化されたオクテット シーケンスを含んでいるか、<xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>プロパティ、または暗号化のオクテット シーケンスを使用して、含む外部の場所への参照を提供、<xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A>プロパティ</xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A></xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A>。       この要素の詳細については、 <xref:System.Security.Cryptography.Xml.CipherData>。</xref:System.Security.Cryptography.Xml.CipherData>を参照してください。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_62_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_62_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }
    return:
      type: System.Security.Cryptography.Xml.CipherData
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.CipherData&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "CipherData プロパティに設定された<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  id: Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_Encoding&quot; name=&quot;Encoding&quot; href=&quot;&quot;> </xref>の属性、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> XML 暗号化のインスタンス。"
  remarks: "このプロパティは、暗号化されたデータのエンコード方法について説明します。 たとえば、暗号化されたデータが base64 でエンコードされた PNG の場合は、エンコーディングとして指定できました &quot;http://www.w3.org/2000/09/xmldsig#base64&quot; です。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_118_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_118_1.cs)]"
  syntax:
    content: public virtual string Encoding { get; set; }
    return:
      type: System.String
      description: "暗号化されたデータのエンコード方法を説明する文字列。"
  overload: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  id: EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  remarks: "`<EncryptionMethod>`は、暗号化されたデータに適用される暗号化アルゴリズムを表す省略可能な要素です。 要素が存在しない場合、受信者が、暗号化アルゴリズムを認識する必要があります。 または暗号化解除は失敗します。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_36_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_36_1.vb)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionMethod
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>を表すオブジェクト、 <xref uid=&quot;langword_csharp_&lt;EncryptionMethod&gt;&quot; name=&quot;&lt;EncryptionMethod&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  id: EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_&lt;EncryptionProperties&gt;&quot; name=&quot;&lt;EncryptionProperties&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  remarks: "`<EncryptionProperties>`要素の作成に関する追加情報を含めることができます、<xref:System.Security.Cryptography.Xml.EncryptedType>日付と時刻スタンプなどの暗号化中に使用される暗号化のハードウェア シリアル番号のインスタンス</xref:System.Security.Cryptography.Xml.EncryptedType>。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_42_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_42_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }
    return:
      type: System.Security.Cryptography.Xml.EncryptionPropertyCollection
      description: "<xref href=&quot;System.Security.Cryptography.Xml.EncryptionPropertyCollection&quot;> </xref>オブジェクト。"
  overload: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 表現を返します、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref>オブジェクト。"
  remarks: "このメソッドを使用して、出力、 `<EncryptedType>` XML 内の要素。"
  syntax:
    content: public abstract System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>を表すオブジェクト、 <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  overload: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  id: Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref>の属性、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> XML 暗号化のインスタンス。"
  remarks: "`Id`属性は省略可能な属性の`<EncryptedType>`文字列識別子を XML ドキュメント内の要素に割り当てるための標準的な方法を提供する要素。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_111_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_111_1.cs)]"
  syntax:
    content: public virtual string Id { get; set; }
    return:
      type: System.String
      description: "文字列、 <xref uid=&quot;langword_csharp_Id&quot; name=&quot;Id&quot; href=&quot;&quot;> </xref>の属性、 <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.Security.Cryptography.Xml.EncryptedType.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_&lt;KeyInfo&gt;&quot; name=&quot;&lt;KeyInfo&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  remarks: "`<KeyInfo>`要素は、データの暗号化に使用するキーに関する情報を含む省略可能な要素です。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_79_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_79_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "A <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> object."
  overload: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML の情報を読み込み、 <xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;> </xref> XML 暗号化要素です。"
  remarks: "このメソッドを使用してに既存の XML 要素を読み込み、<xref:System.Security.Cryptography.Xml.EncryptedType>オブジェクト</xref:System.Security.Cryptography.Xml.EncryptedType>。"
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/m-system.security.crypto_43_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/m-system.security.crypto_43_1.vb)]"
  syntax:
    content: public abstract void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>で使用する XML 要素を表すオブジェクトを<xref uid=&quot;langword_csharp_&lt;EncryptedType&gt;&quot; name=&quot;&lt;EncryptedType&gt;&quot; href=&quot;&quot;></xref>要素。"
  overload: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> provided is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  id: MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_MimeType&quot; name=&quot;MimeType&quot; href=&quot;&quot;> </xref>の属性、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> XML 暗号化のインスタンス。"
  remarks: 'The `MimeType` attribute is an optional attribute that describes the media type of the encrypted data. The value of this attribute is a string with values defined by [RFC 2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies](http://www.ietf.org/rfc/rfc2045.txt). For example, if the data that is encrypted is a base64-encoded PNG, the `Encoding` attribute would be ''http://www.w3.org/2000/09/xmldsig#base64'' and the `MimeType` would be ''image/png''. This attribute is optional and no validation of the `MimeType` information is required. The attribute does not indicate that the encryption application must do any additional processing. Note that this information may not be necessary if it is already bound to the identifier in the `Type` attribute.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class. This sample then displays various properties of the <xref:System.Security.Cryptography.Xml.EncryptedData> class to the console.  \n  \n [!code-vb[Cryptography.XML.EncryptedData#1](~/add/codesnippet/visualbasic/p-system.security.crypto_19_1.vb)]\n [!code-cs[Cryptography.XML.EncryptedData#1](~/add/codesnippet/csharp/p-system.security.crypto_19_1.cs)]"
  syntax:
    content: public virtual string MimeType { get; set; }
    return:
      type: System.String
      description: "暗号化されたデータのメディアの種類を説明する文字列。"
  overload: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  id: Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  langs:
  - csharp
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>の属性、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptedType&quot;> </xref> XML 暗号化のインスタンス。"
  remarks: 'The `Type` attribute is an optional attribute that identifies type information about the text form of the encrypted content. While optional, this is an important attribute and is used in mandatory processing described in [Processing Rules: Decryption](http://www.w3.org/TR/xmlenc-core/) (section 4.2) of the XML Encryption Syntax and Processing specification (http://www.w3.org/TR/xmlenc-core/). If the `<EncryptedData>` element contains data of type `''element''` or element `''content''`, and replaces that data in an XML document, it is strongly recommended that the `Type` attribute be provided. Without this information, the application attempting to decrypt the information will be unable to automatically restore the XML document to its original text form.'
  example:
  - "The following code example demonstrates how to encrypt and decrypt an XML element using the <xref:System.Security.Cryptography.Xml.EncryptedData> class that derives from the <xref:System.Security.Cryptography.Xml.EncryptedType> class.  \n  \n [!code-cs[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/csharp/p-system.security.crypto_47_1.cs)]\n [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/add/codesnippet/visualbasic/p-system.security.crypto_47_1.vb)]"
  syntax:
    content: public virtual string Type { get; set; }
    return:
      type: System.String
      description: "暗号化されたデータのテキスト形式を説明する文字列。"
  overload: System.Security.Cryptography.Xml.EncryptedType.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType()
  nameWithType: EncryptedType.EncryptedType()
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptedType()
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty(EncryptionProperty)
  nameWithType: EncryptedType.AddProperty(EncryptionProperty)
  fullName: System.Security.Cryptography.Xml.EncryptedType.AddProperty(EncryptionProperty)
- uid: System.Security.Cryptography.Xml.EncryptionProperty
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionProperty
  nameWithType: EncryptionProperty
  fullName: System.Security.Cryptography.Xml.EncryptionProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
  fullName: System.Security.Cryptography.Xml.EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.CipherData
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: CipherData
  nameWithType: CipherData
  fullName: System.Security.Cryptography.Xml.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
  fullName: System.Security.Cryptography.Xml.EncryptedType.Encoding
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
  fullName: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptionPropertyCollection
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: EncryptionPropertyCollection
  nameWithType: EncryptionPropertyCollection
  fullName: System.Security.Cryptography.Xml.EncryptionPropertyCollection
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml()
  nameWithType: EncryptedType.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptedType.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptedType.Id
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
  fullName: System.Security.Cryptography.Xml.EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
  fullName: System.Security.Cryptography.Xml.EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptedType.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptedType.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
  fullName: System.Security.Cryptography.Xml.EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
  fullName: System.Security.Cryptography.Xml.EncryptedType.Type
- uid: System.Security.Cryptography.Xml.EncryptedType.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptedType
  nameWithType: EncryptedType.EncryptedType
- uid: System.Security.Cryptography.Xml.EncryptedType.AddProperty*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: AddProperty
  nameWithType: EncryptedType.AddProperty
- uid: System.Security.Cryptography.Xml.EncryptedType.CipherData*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: CipherData
  nameWithType: EncryptedType.CipherData
- uid: System.Security.Cryptography.Xml.EncryptedType.Encoding*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Encoding
  nameWithType: EncryptedType.Encoding
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptedType.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: EncryptionProperties
  nameWithType: EncryptedType.EncryptionProperties
- uid: System.Security.Cryptography.Xml.EncryptedType.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: GetXml
  nameWithType: EncryptedType.GetXml
- uid: System.Security.Cryptography.Xml.EncryptedType.Id*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Id
  nameWithType: EncryptedType.Id
- uid: System.Security.Cryptography.Xml.EncryptedType.KeyInfo*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: KeyInfo
  nameWithType: EncryptedType.KeyInfo
- uid: System.Security.Cryptography.Xml.EncryptedType.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: LoadXml
  nameWithType: EncryptedType.LoadXml
- uid: System.Security.Cryptography.Xml.EncryptedType.MimeType*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: MimeType
  nameWithType: EncryptedType.MimeType
- uid: System.Security.Cryptography.Xml.EncryptedType.Type*
  parent: System.Security.Cryptography.Xml.EncryptedType
  isExternal: false
  name: Type
  nameWithType: EncryptedType.Type
