### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodBase
  id: _MethodBase
  children:
  - System.Runtime.InteropServices._MethodBase.Attributes
  - System.Runtime.InteropServices._MethodBase.CallingConvention
  - System.Runtime.InteropServices._MethodBase.DeclaringType
  - System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.GetHashCode
  - System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodBase.GetParameters
  - System.Runtime.InteropServices._MethodBase.GetType
  - System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodBase.IsAbstract
  - System.Runtime.InteropServices._MethodBase.IsAssembly
  - System.Runtime.InteropServices._MethodBase.IsConstructor
  - System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodBase.IsFamily
  - System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodBase.IsFinal
  - System.Runtime.InteropServices._MethodBase.IsHideBySig
  - System.Runtime.InteropServices._MethodBase.IsPrivate
  - System.Runtime.InteropServices._MethodBase.IsPublic
  - System.Runtime.InteropServices._MethodBase.IsSpecialName
  - System.Runtime.InteropServices._MethodBase.IsStatic
  - System.Runtime.InteropServices._MethodBase.IsVirtual
  - System.Runtime.InteropServices._MethodBase.MemberType
  - System.Runtime.InteropServices._MethodBase.MethodHandle
  - System.Runtime.InteropServices._MethodBase.Name
  - System.Runtime.InteropServices._MethodBase.ReflectedType
  - System.Runtime.InteropServices._MethodBase.ToString
  langs:
  - csharp
  name: _MethodBase
  nameWithType: _MethodBase
  fullName: System.Runtime.InteropServices._MethodBase
  type: Interface
  summary: "パブリック メンバーを公開、 &lt;xref:System.Reflection.MethodBase?displayProperty=fullName&gt;アンマネージ コードにクラスです。"
  remarks: "このインターフェイスは、アンマネージ コードからマネージ クラスには、アクセスをマネージ コードから呼び出すことはできません。       このインターフェイスの vtable 順序の維持、<xref:System.Reflection.MethodBase?displayProperty=fullName>クラス メンバーのアンマネージ COM オブジェクトでアクセスできる</xref:System.Reflection.MethodBase?displayProperty=fullName>。"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6240837A-707F-3181-8E98-A36AE086766B")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodBase))]

      public interface _MethodBase
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.Attributes*>プロパティ</xref:System.Reflection.MethodBase.Attributes*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.Attributes%2A>プロパティは、このメソッドに関連付けられている属性を取得します</xref:System.Reflection.MethodBase.Attributes%2A>。"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "いずれかの<xref:System.Reflection.MethodAttributes>値</xref:System.Reflection.MethodAttributes>。"
  overload: System.Runtime.InteropServices._MethodBase.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.CallingConvention*>プロパティ</xref:System.Reflection.MethodBase.CallingConvention*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.CallingConvention%2A>プロパティは、このメソッドの呼び出し規約を示す値を取得します</xref:System.Reflection.MethodBase.CallingConvention%2A>。"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "1 つ、<xref:System.Reflection.CallingConventions>値</xref:System.Reflection.CallingConventions>。"
  overload: System.Runtime.InteropServices._MethodBase.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.DeclaringType*>プロパティ</xref:System.Reflection.MemberInfo.DeclaringType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.DeclaringType%2A>プロパティは、このメンバーを宣言するクラスを取得します</xref:System.Reflection.MemberInfo.DeclaringType%2A>。"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>このメンバーを宣言するクラスのオブジェクト。"
  overload: System.Runtime.InteropServices._MethodBase.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.Equals*>メソッド</xref:System.Object.Equals*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Object.Equals%2A>メソッドを判断するかどうか<xref:System.Object>が現在の<xref:System.Object>.</xref:System.Object>に等しい</xref:System.Object>指定</xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>現在<xref:System.Object>。</xref:System.Object>と比較するには</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、指定した<xref:System.Object>が現在に等しい<xref:System.Object>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Object> </xref:System.Object> 。"
  overload: System.Runtime.InteropServices._MethodBase.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.GetCustomAttributes*>メソッド</xref:System.Reflection.MemberInfo.GetCustomAttributes*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>メソッドは、すべてのカスタム属性を含む配列を返します</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>。"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>属性を検索するこのメンバーの継承チェーンを検索するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object[]
      description: "すべてのカスタム属性を格納する配列。 または属性が定義されていない場合はゼロ (0) 要素を含む配列。"
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.GetCustomAttributes*>メソッド</xref:System.Reflection.MemberInfo.GetCustomAttributes*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A> <xref:System.Type>。</xref:System.Type>で識別されるカスタム属性の配列を返します</xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "検索対象の属性の型。 この型に割り当てることができる属性だけが返されます。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>属性を検索するこのメンバーの継承チェーンを検索するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Object[]
      description: "このメンバーに適用されるカスタム属性の配列。 または属性が適用されていない場合はゼロ (0) 要素の配列。"
  overload: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.GetHashCode*>メソッド</xref:System.Object.GetHashCode*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Object.GetHashCode%2A>メソッドは、特定の型のハッシュ関数として機能します</xref:System.Object.GetHashCode%2A>。 <xref:System.Object.GetHashCode%2A>ハッシュ テーブルなどのアルゴリズムとデータの構造体のハッシュでの使用に適しています。</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のインスタンスのハッシュ コード。"
  overload: System.Runtime.InteropServices._MethodBase.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "一連の名前を対応する一連のディスパッチ識別子にマップします。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetIDsOfNames`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "将来の使用のために予約されています。 Iid_ にする必要があります。"
    - id: rgszNames
      type: System.IntPtr
      description: "割り当てる名前の配列。"
    - id: cNames
      type: System.UInt32
      description: "マップする名前の数。"
    - id: lcid
      type: System.UInt32
      description: "名前を解釈するロケール コンテキスト。"
    - id: rgDispId
      type: System.IntPtr
      description: "名前に対応する識別子を受け取る、呼び出し元が割り当てた配列。"
  overload: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>メソッド</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>メンバーを返す、<xref:System.Reflection.MethodImplAttributes>フラグ</xref:System.Reflection.MethodImplAttributes></xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>。"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "1 つ、<xref:System.Reflection.MethodImplAttributes>値</xref:System.Reflection.MethodImplAttributes>。"
  overload: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.GetParameters*>メソッド</xref:System.Reflection.MethodBase.GetParameters*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.GetParameters%2A>メソッドは、指定したメソッドまたはコンス トラクターのパラメーターを取得します</xref:System.Reflection.MethodBase.GetParameters%2A>。"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "型の配列<xref:System.Reflection.ParameterInfo>このインスタンスによって反映されるメソッド (またはコンス トラクター) のシグネチャと一致する情報を含むします</xref:System.Reflection.ParameterInfo>。"
  overload: System.Runtime.InteropServices._MethodBase.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Type.GetType*>メソッド</xref:System.Type.GetType*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、し、マネージ コードから呼び出すことはできません。       <xref:System.Object.GetType%2A>メソッドは、現在のインスタンスの型を取得します</xref:System.Object.GetType%2A>。"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "A<xref:System.Type>オブジェクト</xref:System.Type>。"
  overload: System.Runtime.InteropServices._MethodBase.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "インターフェイスの型情報を取得するために使用できるオブジェクトの型情報を取得します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfo`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "返される型情報。"
    - id: lcid
      type: System.UInt32
      description: "型情報のロケールの識別子です。"
    - id: ppTInfo
      type: System.IntPtr
      description: "要求された型情報オブジェクトへのポインター。"
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "オブジェクトが (0 または 1) を提供する型情報インターフェイスの数を取得します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::GetTypeInfoCount`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "このメソッドが戻るときに、オブジェクトによって提供される型情報インターフェイスの数を受け取る場所へのポインターが含まれています。 このパラメーターは初期化せずに渡されます。"
  overload: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.Invoke*>メソッド</xref:System.Reflection.MethodBase.Invoke*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.Invoke%2A>メソッドは、メソッドまたは指定されたパラメーターを使用して、このオブジェクトによって表されるコンス トラクターを呼び出します</xref:System.Reflection.MethodBase.Invoke%2A>。"
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "このメソッドを作成するインスタンス。"
    - id: parameters
      type: System.Object[]
      description: "呼び出されたメソッドまたはコンス トラクターの引数リスト。 これは、メソッドまたは呼び出されるコンス トラクターのパラメーターとして、同じ数、順序、および型を持つオブジェクトの配列です。 パラメーターがない場合`parameters`する必要があります<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       このインスタンスには、メソッドまたはコンス トラクターによって表される場合、 <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref>パラメーター (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> Visual Basic で)、メソッドまたはコンス トラクターを呼び出すには、そのパラメーターの特殊な属性は不要です。 この値を明示的に初期化されていない配列内のオブジェクトは、そのオブジェクトの種類の既定値が格納されます。 この値は、参照型の要素、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 値型要素は、この値は 0、0.0、または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、特定の要素の型によって異なります。"
    return:
      type: System.Object
      description: "コンス トラクターに関連付けられているクラスのインスタンス。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.Invoke*>メソッド</xref:System.Reflection.MethodBase.Invoke*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.Invoke%2A>メソッドは、これによって反映されるコンス トラクターを呼び出す<xref:System.Reflection.ConstructorInfo>の指定された制約の下で、指定された引数を持つオブジェクト<xref:System.Reflection.Binder>オブジェクト</xref:System.Reflection.Binder></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodBase.Invoke%2A>。"
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "このメソッドを作成するインスタンス。"
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "1 つ、 <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref>バインディングの種類を指定する値。"
    - id: binder
      type: System.Reflection.Binder
      description: "A <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref>を一連のプロパティを定義し、バインディング、引数型の強制変換、リフレクションによるメンバーの呼び出しを有効にします。 If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "型の配列<xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;></xref>数、順序、および制約の下で、このコンス トラクターのパラメーターの型と一致するために使用`binder`です。 このコンス トラクターにパラメーターが必要としない場合は、要素がゼロで配列を渡すように`Object[] parameters = new Object[0]`です。 この値を明示的に初期化されていない配列内のオブジェクトは、そのオブジェクトの種類の既定値が格納されます。 この値は、参照型の要素、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 値型要素は、この値は 0、0.0、または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、特定の要素の型によって異なります。"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "A<xref:System.Globalization.CultureInfo>型の強制変換を制御するために使用されるオブジェクト</xref:System.Globalization.CultureInfo>。 これは、する場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Globalization.CultureInfo>を現在のスレッドを使用します</xref:System.Globalization.CultureInfo>。"
    return:
      type: System.Object
      description: "コンス トラクターに関連付けられているクラスのインスタンス。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "プロパティとオブジェクトによって公開されたメソッドへのアクセスを提供します。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。 詳細については`IDispatch::Invoke`、MSDN ライブラリを参照してください。"
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "メンバーの識別子。"
    - id: riid
      type: System.Guid
      description: "将来の使用のために予約されています。 Iid_ にする必要があります。"
    - id: lcid
      type: System.UInt32
      description: "引数を解釈する対象のロケール コンテキスト。"
    - id: wFlags
      type: System.Int16
      description: "呼び出しのコンテキストを記述するフラグ。"
    - id: pDispParams
      type: System.IntPtr
      description: "引数の配列、名前付き引数、および各配列内の要素の数のカウントの引数 Dispid の配列を含む構造体へのポインター。"
    - id: pVarResult
      type: System.IntPtr
      description: "結果を格納する場所へのポインター。"
    - id: pExcepInfo
      type: System.IntPtr
      description: "例外情報を格納する構造体へのポインター。"
    - id: puArgErr
      type: System.IntPtr
      description: "エラーが発生した最初の引数のインデックス。"
  overload: System.Runtime.InteropServices._MethodBase.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsAbstract*>プロパティ</xref:System.Reflection.MethodBase.IsAbstract*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsAbstract%2A>プロパティは、メソッドが抽象であるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsAbstract%2A>。"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メソッドが abstract 以外の場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsAssembly*>プロパティ</xref:System.Reflection.MethodBase.IsAssembly*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsAssembly%2A>プロパティは、同じアセンブリ内の他のクラスでこのメソッドを呼び出すことがあるかどうかを示す値を取得します。</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは、同じアセンブリの他のクラスを呼び出すことができる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsConstructor*>プロパティ</xref:System.Reflection.MethodBase.IsConstructor*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsConstructor%2A>プロパティは、メソッドがコンス トラクターであるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsConstructor%2A>。"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドがコンス トラクターである場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.IsDefined*>メソッド</xref:System.Reflection.MemberInfo.IsDefined*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.IsDefined%2A>メンバーを示すかどうかの&1; つまたは複数のインスタンス、`attributeType`パラメーターは、このメンバーに適用されます</xref:System.Reflection.MemberInfo.IsDefined%2A>。"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>カスタム属性が適用されるオブジェクトします。"
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>属性を検索するこのメンバーの継承チェーンを検索するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合&1; つ以上のインスタンス、 <code> attributeType </code>パラメーターがこのメンバーに適用されている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsFamily*>プロパティ</xref:System.Reflection.MethodBase.IsFamily*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsFamily%2A>プロパティは、このメソッドへのアクセスは、クラスのメンバーとその派生クラスのメンバーに制限されているかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsFamily%2A>。"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クラスへのアクセスは、クラス自体のメンバーにし、その派生クラスのメンバーに制限されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>プロパティ</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>プロパティは、クラス自体のメンバーと同じアセンブリ内にある場合、派生クラスによってこのメソッドを呼び出すことができるかどうかを示す値を取得</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>する"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドへのアクセスは、クラス自体のメンバーにし、同じアセンブリ内にある派生クラスのメンバーに制限されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>プロパティ</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>プロパティがどこにいても、および同じアセンブリ内のすべてのクラスによって、このメソッドを派生クラスを呼び出すことができるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>。"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>メンバーが派生クラスでこのメソッドへのアクセスが、クラス自体のメンバーに制限されている場合は、任意の場所と同じアセンブリの他のクラスのメンバーそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsFinal*>プロパティ</xref:System.Reflection.MethodBase.IsFinal*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsFinal%2A>プロパティは、このメソッドは、かどうかを示す値を取得`final`</xref:System.Reflection.MethodBase.IsFinal%2A>。"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは場合<xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsHideBySig*>プロパティ</xref:System.Reflection.MethodBase.IsHideBySig*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsHideBySig%2A>プロパティは、派生クラスで正確に同じシグネチャを持つ同じ名前のメンバーだけが非表示かどうかを示す値を取得</xref:System.Reflection.MethodBase.IsHideBySig%2A>する"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>シグネチャで、メンバーが表示されていない場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsPrivate*>プロパティ</xref:System.Reflection.MethodBase.IsPrivate*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsPrivate%2A>プロパティは、このメンバーはプライベートであるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsPrivate%2A>。"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドへのアクセスがクラス自体の他のメンバーに制限されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsPublic*>プロパティ</xref:System.Reflection.MethodBase.IsPublic*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsPublic%2A>プロパティは、このメソッドはパブリックであるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsPublic%2A>。"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドがパブリックの場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsSpecialName*>プロパティ</xref:System.Reflection.MethodBase.IsSpecialName*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsSpecialName%2A>プロパティは、このメソッドは特別な名前であるかどうかを示す値を取得します</xref:System.Reflection.MethodBase.IsSpecialName%2A>。"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは、特別な名前を持つ場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsStatic*>プロパティ</xref:System.Reflection.MethodBase.IsStatic*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsStatic%2A>プロパティ、メソッドは、かどうかを示す値を取得する`static`</xref:System.Reflection.MethodBase.IsStatic%2A>。"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは場合<xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.IsVirtual*>プロパティ</xref:System.Reflection.MethodBase.IsVirtual*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.IsVirtual%2A>プロパティ、メソッドは、かどうかを示す値を取得する`virtual`</xref:System.Reflection.MethodBase.IsVirtual%2A>。"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このメソッドは場合<xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.InteropServices._MethodBase.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.MemberType*>プロパティ</xref:System.Reflection.MemberInfo.MemberType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.MemberType%2A>プロパティを取得、<xref:System.Reflection.MemberTypes>メンバーの種類を示す値、メソッド、コンス トラクター、イベント、およびなど</xref:System.Reflection.MemberTypes></xref:System.Reflection.MemberInfo.MemberType%2A>。"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "いずれかの<xref href=&quot;System.Reflection.MemberTypes&quot;></xref>メンバーの種類を示す値。"
  overload: System.Runtime.InteropServices._MethodBase.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MethodBase.MethodHandle*>プロパティ</xref:System.Reflection.MethodBase.MethodHandle*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MethodBase.MethodHandle%2A>プロパティは、メソッドの内部メタデータ表現へのハンドルを取得します</xref:System.Reflection.MethodBase.MethodHandle%2A>。"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "A<xref:System.RuntimeMethodHandle>オブジェクト</xref:System.RuntimeMethodHandle>。"
  overload: System.Runtime.InteropServices._MethodBase.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.Name*>プロパティ</xref:System.Reflection.MemberInfo.Name*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.Name%2A>プロパティは、現在のメンバーの名前を取得します</xref:System.Reflection.MemberInfo.Name%2A>。"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "A<xref:System.String>このメンバーの名前を表すオブジェクト</xref:System.String>。"
  overload: System.Runtime.InteropServices._MethodBase.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Reflection.MemberInfo.ReflectedType*>プロパティ</xref:System.Reflection.MemberInfo.ReflectedType*>。"
  remarks: "このプロパティは、アンマネージ コードからマネージ クラスには、アクセスと、マネージ コードから呼び出すことはできません。       <xref:System.Reflection.MemberInfo.ReflectedType%2A>プロパティは、これを取得するために使用されたクラス オブジェクトを取得`MemberInfo`オブジェクト</xref:System.Reflection.MemberInfo.ReflectedType%2A>。"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref>これを取得するために使用されたオブジェクト<xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;></xref>オブジェクト。"
  overload: System.Runtime.InteropServices._MethodBase.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodBase.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodBase
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "COM オブジェクトを提供するバージョンに依存しないアクセス権を持つ、<xref:System.Object.ToString*>メソッド</xref:System.Object.ToString*>。"
  remarks: "このメソッドは、アンマネージ コードからマネージ クラスにアクセスするため、およびマネージ コードから呼び出すことはできません。"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "現在<xref:System.Object>。</xref:System.Object>を表す文字列です。"
  overload: System.Runtime.InteropServices._MethodBase.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodBase.Attributes
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
  fullName: System.Runtime.InteropServices._MethodBase.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
  fullName: System.Runtime.InteropServices._MethodBase.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
  fullName: System.Runtime.InteropServices._MethodBase.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodBase.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodBase.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodBase.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodBase.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodBase.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodBase.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodBase.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetParameters
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodBase.GetParameters()
  fullName: System.Runtime.InteropServices._MethodBase.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodBase.GetType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType()
  nameWithType: _MethodBase.GetType()
  fullName: System.Runtime.InteropServices._MethodBase.GetType()
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodBase.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodBase.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodBase.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
  fullName: System.Runtime.InteropServices._MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
  fullName: System.Runtime.InteropServices._MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodBase.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodBase.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodBase.IsFamily
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
  fullName: System.Runtime.InteropServices._MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
  fullName: System.Runtime.InteropServices._MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
  fullName: System.Runtime.InteropServices._MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
  fullName: System.Runtime.InteropServices._MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
  fullName: System.Runtime.InteropServices._MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
  fullName: System.Runtime.InteropServices._MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
  fullName: System.Runtime.InteropServices._MethodBase.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
  fullName: System.Runtime.InteropServices._MethodBase.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
  fullName: System.Runtime.InteropServices._MethodBase.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
  fullName: System.Runtime.InteropServices._MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString()
  nameWithType: _MethodBase.ToString()
  fullName: System.Runtime.InteropServices._MethodBase.ToString()
- uid: System.Runtime.InteropServices._MethodBase.Attributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Attributes
  nameWithType: _MethodBase.Attributes
- uid: System.Runtime.InteropServices._MethodBase.CallingConvention*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodBase.CallingConvention
- uid: System.Runtime.InteropServices._MethodBase.DeclaringType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodBase.DeclaringType
- uid: System.Runtime.InteropServices._MethodBase.Equals*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Equals
  nameWithType: _MethodBase.Equals
- uid: System.Runtime.InteropServices._MethodBase.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodBase.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodBase.GetHashCode*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodBase.GetHashCode
- uid: System.Runtime.InteropServices._MethodBase.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodBase.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodBase.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodBase.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodBase.GetParameters*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetParameters
  nameWithType: _MethodBase.GetParameters
- uid: System.Runtime.InteropServices._MethodBase.GetType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetType
  nameWithType: _MethodBase.GetType
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodBase.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodBase.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodBase.Invoke*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Invoke
  nameWithType: _MethodBase.Invoke
- uid: System.Runtime.InteropServices._MethodBase.IsAbstract*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodBase.IsAbstract
- uid: System.Runtime.InteropServices._MethodBase.IsAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodBase.IsAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsConstructor*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodBase.IsConstructor
- uid: System.Runtime.InteropServices._MethodBase.IsDefined*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsDefined
  nameWithType: _MethodBase.IsDefined
- uid: System.Runtime.InteropServices._MethodBase.IsFamily*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamily
  nameWithType: _MethodBase.IsFamily
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodBase.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodBase.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodBase.IsFinal*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsFinal
  nameWithType: _MethodBase.IsFinal
- uid: System.Runtime.InteropServices._MethodBase.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodBase.IsHideBySig
- uid: System.Runtime.InteropServices._MethodBase.IsPrivate*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodBase.IsPrivate
- uid: System.Runtime.InteropServices._MethodBase.IsPublic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsPublic
  nameWithType: _MethodBase.IsPublic
- uid: System.Runtime.InteropServices._MethodBase.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodBase.IsSpecialName
- uid: System.Runtime.InteropServices._MethodBase.IsStatic*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsStatic
  nameWithType: _MethodBase.IsStatic
- uid: System.Runtime.InteropServices._MethodBase.IsVirtual*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodBase.IsVirtual
- uid: System.Runtime.InteropServices._MethodBase.MemberType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MemberType
  nameWithType: _MethodBase.MemberType
- uid: System.Runtime.InteropServices._MethodBase.MethodHandle*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodBase.MethodHandle
- uid: System.Runtime.InteropServices._MethodBase.Name*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: Name
  nameWithType: _MethodBase.Name
- uid: System.Runtime.InteropServices._MethodBase.ReflectedType*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodBase.ReflectedType
- uid: System.Runtime.InteropServices._MethodBase.ToString*
  parent: System.Runtime.InteropServices._MethodBase
  isExternal: false
  name: ToString
  nameWithType: _MethodBase.ToString
