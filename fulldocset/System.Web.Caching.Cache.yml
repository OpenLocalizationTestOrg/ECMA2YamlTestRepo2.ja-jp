### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.Cache
  id: Cache
  children:
  - System.Web.Caching.Cache.#ctor
  - System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Count
  - System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  - System.Web.Caching.Cache.EffectivePrivateBytesLimit
  - System.Web.Caching.Cache.Get(System.String)
  - System.Web.Caching.Cache.GetEnumerator
  - System.Web.Caching.Cache.Insert(System.String,System.Object)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Item(System.String)
  - System.Web.Caching.Cache.NoAbsoluteExpiration
  - System.Web.Caching.Cache.NoSlidingExpiration
  - System.Web.Caching.Cache.Remove(System.String)
  - System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
  type: Class
  summary: "Web アプリケーションのキャッシュを実装します。 このクラスは継承できません。"
  remarks: "アプリケーション ドメインごとに、このクラスの&1; つのインスタンスが作成され、は、アプリケーション ドメインがアクティブな限り有効です。 このクラスのインスタンスに関する情報はを介して使用できる、`Cache`のプロパティ、<xref:System.Web.HttpContext>オブジェクトまたは`Cache`のプロパティ、<xref:System.Web.UI.Page>オブジェクト</xref:System.Web.UI.Page></xref:System.Web.HttpContext>。      > [!NOTE] > キャッシュ クラスは、ASP.NET アプリケーションの外部で使用するものではありません。 Web アプリケーションのキャッシュを提供する ASP.NET で使用するためのテストし、設計にされました。 <xref:System.Runtime.Caching.ObjectCache>クラス</xref:System.Runtime.Caching.ObjectCache>を使用してコンソール アプリケーションまたは Windows フォーム アプリケーションなどのアプリケーションの他の種類"
  example:
  - "The following example is a page that shows users the value assigned to an item in the cache, and then notifies them when the item is removed from the cache. It creates a `RemovedCallback` method, which has the signature of the `CacheItemRemovedCallback` delegate, to notify users when the cache item is removed, and it uses the <xref:System.Web.Caching.CacheItemRemovedReason> enumeration to tell them why it was removed. In addition, it uses the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property to add objects to the cache and retrieve the value of those objects. In the `AddItemToCache` method, it uses the <xref:System.Web.Caching.Cache.Add%2A?displayProperty=fullName> method to add an item to the cache. To use the `CacheItemRemovedCallback` delegate, you must add an item to the cache with this method or the <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method, so that that ASP.NET can automatically make the proper method calls when the item is removed. The custom `RemoveItemFromCache` method uses the <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName> method to explicitly delete the item from the cache, causing the `RemovedCallback` method to be invoked.  \n  \n> [!NOTE]\n>  The instance of Cache that is accessed by the snippet below is a member of the <xref:System.Web.UI.Page> object that this sample inherits.  \n  \n [!code-cs[System.Web.Caching Examples#1](~/add/codesnippet/csharp/t-system.web.caching.cache_1.aspx)]\n [!code-vb[System.Web.Caching Examples#1](~/add/codesnippet/visualbasic/t-system.web.caching.cache_1.aspx)]"
  syntax:
    content: 'public sealed class Cache : System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.#ctor
  id: '#ctor'
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>クラスです。"
  syntax:
    content: public Cache ();
    parameters: []
  overload: System.Web.Caching.Cache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "指定した項目を追加、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクトの依存関係、有効期限と優先順位ポリシー、およびから挿入した項目が削除されると、アプリケーションに通知に使用できるデリゲートを<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。"
  remarks: "同じ項目の場合、このメソッドを呼び出すは失敗`key`にパラメーターが既に格納されている、`Cache`です。 既存の上書きを`Cache`項目を使用して同じ`key`パラメーターを使用して、<xref:System.Web.Caching.Cache.Insert%2A>メソッド</xref:System.Web.Caching.Cache.Insert%2A>。       両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`<xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.Cache.NoSlidingExpiration>パラメーター。       一定の時間後に期限切れにされてから経過した項目が最後にアクセスする場合は、キャッシュ項目は、設定する、`slidingExpiration`有効期限の間隔にパラメーターおよび`absoluteExpiration`<xref:System.Web.Caching.Cache.NoAbsoluteExpiration></xref:System.Web.Caching.Cache.NoAbsoluteExpiration>パラメーター。"
  example:
  - "The following example creates an `AddItemToCache` method. When this method is called, it sets an `itemRemoved` property to `false` and registers an `onRemove` method with a new instance of the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate. The delegate's signature is used in the `RemovedCallback` method. The `AddItemToCache` method then checks the value associated with the `Key1` key in the cache. If the value is `null`, the `Add` method places an item in the cache with a key of `Key1`, a value of `Value 1`, an absolute expiration of 60 seconds, and a high cache priority. It also uses the `onRemove` method as an argument. This allows the `RemovedCallback` method to be called when this item is removed from the cache.  \n  \n> [!NOTE]\n>  For examples of how to use the <xref:System.Web.Caching.CacheDependency> class and the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Caching Examples#3](~/add/codesnippet/csharp/97b35003-2ed6-4e36-acd6-_1.aspx)]\n [!code-vb[System.Web.Caching Examples#3](~/add/codesnippet/visualbasic/97b35003-2ed6-4e36-acd6-_1.aspx)]"
  syntax:
    content: public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ キー、項目を参照するために使用します。"
    - id: value
      type: System.Object
      description: "キャッシュに追加する項目。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときに、オブジェクトは無効となるキャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "時間を追加するオブジェクトが有効期限が切れるし、キャッシュから削除します。 スライド式有効期限を使用している場合、`absoluteExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>です。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "追加するオブジェクトが最後にアクセスし、そのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分である場合は、オブジェクトは有効期限が切れるし、20 分が最後にアクセスできた後にキャッシュから削除します。 絶対有効期限を使用している場合、`slidingExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>です。"
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "によって表されるオブジェクトの相対的なコスト、 <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref>列挙します。 キャッシュは、オブジェクトが削除されるときにこの値を使用します。コストの低いオブジェクトは、コストの高いオブジェクトの前にキャッシュから削除されます。"
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "オブジェクトがキャッシュから削除されたとき、指定した場合に呼び出されるデリゲート。 アプリケーションに通知するそれらのオブジェクトがキャッシュから削除されたときに、これを行うこともできます。"
    return:
      type: System.Object
      description: "項目がキャッシュに保存されていた場合に追加された項目を表すオブジェクトそれ以外の場合、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Caching.Cache.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> slidingExpiration </code>にパラメーターが設定されているより小さい<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>または&1; 年以上です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>と<code> slidingExpiration </code>パラメーターは両方に追加しようとしている項目の設定、 <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Count
  id: Count
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "キャッシュに格納されているアイテムの数を取得します。"
  remarks: "このプロパティは、アプリケーションのパフォーマンスを監視する場合、または ASP.NET のトレース機能を使用する場合に便利で指定できます。"
  example:
  - "The following example obtains the value of the `Count` property, converts it to a string, and assigns the string to the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> Web server control, `Label1`.  \n  \n [!code-vb[System.Web.Caching.Cache.Count#1](~/add/codesnippet/visualbasic/p-system.web.caching.cac_3_1.aspx)]\n [!code-cs[System.Web.Caching.Cache.Count#1](~/add/codesnippet/csharp/p-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "キャッシュに格納されているアイテムの数。"
  overload: System.Web.Caching.Cache.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  id: EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "ASP.NET がキャッシュからアイテムの削除を開始する前に、アプリケーションで使用できる物理メモリの割合を取得します。"
  remarks: "EffectivePercentagePhysicalMemoryLimit プロパティでは、アプリケーションに使用可能な物理メモリの割合を返します。 使用可能な割合が少なくなると、キャッシュ アルゴリズムは、キャッシュからアイテムの削除を開始します。       EffectivePercentagePhysicalMemoryLimit プロパティを設定することができます、`percentagePhysicalMemoryUsedLimit`の属性、[要素 (ASP.NET 設定スキーマ) をキャッシュにキャッシュするから](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 場合、`percentagePhysicalMemoryUsedLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを指定および EffectivePercentagePhysicalMemoryLimit プロパティが計算されます。       EffectivePercentagePhysicalMemoryLimit は、.NET Framework version 3.5 で導入されました。  詳細については、次を参照してください。[バージョンおよび依存関係](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public long EffectivePercentagePhysicalMemoryLimit { get; }
    return:
      type: System.Int64
      description: "アプリケーションに使用できる物理メモリの割合。"
  overload: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  id: EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "キャッシュの使用可能なバイト数を取得します。"
  remarks: "EffectivePrivateBytesLimit プロパティでは、アプリケーションのプロセスで使用できるバイト数を返します。 この制限に達すると、キャッシュのアルゴリズムは、キャッシュを積極的に清掃を開始します。       EffectivePrivateBytesLimit プロパティを設定することができます、`privateBytesLimit`の属性、[要素 (ASP.NET 設定スキーマ) をキャッシュにキャッシュするから](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299)アプリケーションの構成ファイル内の要素。 ときに、`privateBytesLimit`属性が設定されていない、キャッシュのアルゴリズムは、キャッシュの最大サイズを指定および EffectivePrivateBytesLimit プロパティには、アルゴリズムによって選択したサイズが含まれています。"
  example:
  - <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>
  syntax:
    content: public long EffectivePrivateBytesLimit { get; }
    return:
      type: System.Int64
      description: "キャッシュの使用可能なバイト数。"
  overload: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Get(System.String)
  id: Get(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "指定した項目を取得、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example demonstrates how to retrieve the value cached for an ASP.NET text box server control.  \n  \n [!code-vb[Classic Cache.Get Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_4_1.vb)]\n [!code-cs[Classic Cache.Get Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_4_1.cs)]"
  syntax:
    content: public object Get (string key);
    parameters:
    - id: key
      type: System.String
      description: "取得するキャッシュ項目の識別子。"
    return:
      type: System.Object
      description: "取得するキャッシュ項目または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>キーが見つからない場合。"
  overload: System.Web.Caching.Cache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "キーの設定を反復処理するために使用する、ディクショナリ列挙子と、キャッシュに格納されている値を取得します。"
  remarks: "項目に追加したりこのメソッドは、項目を列挙中にキャッシュから削除します。"
  example:
  - "The following example creates an <xref:System.Collections.IDictionaryEnumerator> object, `CacheEnum`, using the `GetEnumerator` method. The enumerator moves through the cache, converts the value of each cached item to a string, and then writes the values to a Web Forms page.  \n  \n [!code-vb[Cache.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_3_1.aspx)]\n [!code-cs[Cache.GetEnumerator#1](~/add/codesnippet/csharp/m-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "反復処理する列挙子、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクト。"
  overload: System.Web.Caching.Cache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  id: Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "項目を挿入、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>によって提供される既定値を使用して、その場所を参照するキャッシュ キーを持つオブジェクト、 <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref>列挙します。"
  remarks: "このメソッドは一致するキーを持つ既存のキャッシュ アイテムを上書き、`key`パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のないの優先順位でメソッドを挿入<xref:System.Web.Caching.CacheItemPriority>の有効期限の値をスライドさせて<xref:System.Web.Caching.Cache.NoSlidingExpiration>、および<xref:System.Web.Caching.Cache.NoAbsoluteExpiration></xref:System.Web.Caching.Cache.NoAbsoluteExpiration>絶対有効期限値</xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.CacheItemPriority>。"
  example:
  - "The following example demonstrates how to insert an item into an application's cache.  \n  \n [!code-cs[Classic Cache.Insert Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_8_1.cs)]\n [!code-vb[Classic Cache.Insert Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_8_1.vb)]"
  syntax:
    content: public void Insert (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "キャッシュ キー、項目を参照するために使用します。"
    - id: value
      type: System.Object
      description: "キャッシュに挿入するオブジェクト。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "オブジェクトを挿入、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>ファイルまたはキーの依存関係を持ちます。"
  remarks: "このメソッドは一致するキーを持つ既存のキャッシュ アイテムを上書き、`key`パラメーター。 このオーバー ロードを使用して、キャッシュに追加されたオブジェクト、`Insert`ファイルまたはキャッシュ依存関係のないの優先順位でメソッドを挿入<xref:System.Web.Caching.CacheItemPriority>の有効期限の値をスライドさせて<xref:System.Web.Caching.Cache.NoSlidingExpiration>、および<xref:System.Web.Caching.Cache.NoAbsoluteExpiration></xref:System.Web.Caching.Cache.NoAbsoluteExpiration>絶対有効期限値</xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.CacheItemPriority>。"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with a cache dependency on an XML configuration file.  \n  \n [!code-cs[Classic Cache.Insert1 Example#1](~/add/codesnippet/csharp/1f70e8db-a9cf-4467-9e9a-_1.cs)]\n [!code-vb[Classic Cache.Insert1 Example#1](~/add/codesnippet/visualbasic/1f70e8db-a9cf-4467-9e9a-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);
    parameters:
    - id: key
      type: System.String
      description: "アイテムを識別するために使用するキャッシュ キー。"
    - id: value
      type: System.Object
      description: "キャッシュに挿入するオブジェクト。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "ファイルまたはキャッシュ キーの依存関係の挿入されたオブジェクト。 すべての依存関係が変更されたときに、オブジェクトは無効となるキャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "オブジェクトを挿入、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>の依存関係と有効期限ポリシーを使用します。"
  remarks: "このメソッドは、既存`Cache`同じ項目`key`パラメーター。       場合、`slidingExpiration`にパラメーターが設定されている<xref:System.Web.Caching.Cache.NoSlidingExpiration>、スライド式有効期限が無効になっています</xref:System.Web.Caching.Cache.NoSlidingExpiration>。 設定した場合、`slidingExpiration`パラメーターよりも大きい値を<xref:System.TimeSpan.Zero>、`absoluteExpiration`にパラメーターが設定されている<xref:System.DateTime.Now%2A>に含まれる値に加えて、`slidingExpiration`パラメーター</xref:System.DateTime.Now%2A> </xref:System.TimeSpan.Zero> 。 指定された時間の前に、項目がキャッシュから要求された場合、`absoluteExpiration`パラメーター、アイテムをもう一度、キャッシュに配置されますと`absoluteExpiration`にもう一度設定されます`DateTime.Now`に含まれる値に加えて、`slidingExpiration`パラメーター。 かどうか、項目が要求されていないキャッシュからの日付のうち、`absoluteExpiration`パラメーター、項目がキャッシュから削除します。 。 <xref:System.Web.Caching.CacheItemPriority>。</xref:System.Web.Caching.CacheItemPriority>の優先順位を持つ挿入メソッドのこのオーバー ロードを使用して、キャッシュに追加する項目を挿入します。"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with an absolute expiration.  \n  \n> [!NOTE]\n>  Since this form of the `Insert` method supports cache dependencies, if the item has no dependencies, you must declare the `dependency` parameter as `null` (`Nothing` in Visual Basic) in the comma-delimited list of parameters.  \n  \n [!code-vb[Classic Cache.Insert2 Example#1](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_1.vb)]\n [!code-cs[Classic Cache.Insert2 Example#1](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_1.cs)]  \n  \n The following example demonstrates how to insert an item into the cache with a sliding expiration.  \n  \n [!code-vb[Classic Cache.Insert2 Example#2](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_2.vb)]\n [!code-cs[Classic Cache.Insert2 Example#2](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_2.cs)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);
    parameters:
    - id: key
      type: System.String
      description: "オブジェクトを参照するために使用するキャッシュ キー。"
    - id: value
      type: System.Object
      description: "キャッシュに挿入するオブジェクト。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "ファイルまたはキャッシュ キーの依存関係の挿入されたオブジェクト。 すべての依存関係が変更されたときに、オブジェクトは無効となるキャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "時刻を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時間から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <> </> *> なく<> *> このパラメーター値。 絶対有効期限を使用している場合、`slidingExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>です。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "挿入されたオブジェクトが最後にアクセスし、そのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分である場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後 20 分間、キャッシュから削除します。 スライド式有効期限を使用している場合、`absoluteExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>です。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定する、 <code> slidingExpiration </code>パラメーターをより小さい<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>または&1; 年以上に相当します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>と<code> slidingExpiration </code>パラメーターは両方に追加しようとしている項目の設定、 <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "オブジェクトを挿入、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>依存関係、有効期限ポリシー、およびアイテムがキャッシュから削除する前に、アプリケーションに通知を使用できるデリゲートと共にオブジェクト。"
  remarks: "挿入メソッドを使用すると、キャッシュに新しい項目を挿入し、項目がキャッシュから削除する前に呼び出されるデリゲートを指定できます。 デリゲートでは、キャッシュされたアイテムを更新し、これにより、キャッシュから削除されないようにできます。       このメソッドは、既存`Cache`同じ項目`key`パラメーター。       両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`<xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.Cache.NoSlidingExpiration>パラメーター。       項目からの経過時間の設定時間後に期限切れに最後にアクセスする場合は、キャッシュ項目設定する必要が、`slidingExpiration`有効期限の間隔をパラメーターの設定、 `absoluteExpiration` <xref:System.Web.Caching.Cache.NoAbsoluteExpiration></xref:System.Web.Caching.Cache.NoAbsoluteExpiration>パラメーター。"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);
    parameters:
    - id: key
      type: System.String
      description: "オブジェクトを参照するために使用するキャッシュ キー。"
    - id: value
      type: System.Object
      description: "キャッシュに挿入するオブジェクト。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときに、オブジェクトは無効となるキャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "時刻を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時間から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <> </> *> の代わりに<> *> このパラメーター値。 絶対有効期限を使用している場合、`slidingExpiration`にパラメーターを設定する必要があります<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>です。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "キャッシュされたオブジェクトが最後にアクセスしたときにそのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分である場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後 20 分間、キャッシュから削除します。 スライド式有効期限を使用している場合、`absoluteExpiration`にパラメーターを設定する必要があります<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>です。"
    - id: onUpdateCallback
      type: System.Web.Caching.CacheItemUpdateCallback
      description: "オブジェクトがキャッシュから削除される前に呼び出されるデリゲート。 キャッシュされた項目を更新し、キャッシュから削除されていないことを確認するには、これを使用できます。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code>, <code>value</code>, or <code>onUpdateCallback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定する、 <code> slidingExpiration </code>パラメーターをより小さい<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>または&1; 年以上に相当します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>と<code> slidingExpiration </code>パラメーターは両方に追加しようとしている項目の設定、 <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。       -or-       The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, and the <code>absoluteExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>, and the <code>slidingExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "オブジェクトを挿入、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクトの依存関係、有効期限と優先順位ポリシー、およびから挿入した項目が削除されると、アプリケーションに通知に使用できるデリゲートを<xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。"
  remarks: "このメソッドは、既存`Cache`同じ項目`key`パラメーター。       両方を設定することはできません、`absoluteExpiration`と`slidingExpiration`パラメーター。 キャッシュ項目の特定の時間に期限切れにする場合を設定する、 `absoluteExpiration` 、特定の時点へのパラメーターと`slidingExpiration`<xref:System.Web.Caching.Cache.NoSlidingExpiration></xref:System.Web.Caching.Cache.NoSlidingExpiration>パラメーター。       一定の時間後に期限切れが渡された最後にアクセスされた項目にする場合は、キャッシュ項目設定する必要が、`slidingExpiration`有効期限の間隔にパラメーターおよび`absoluteExpiration`<xref:System.Web.Caching.Cache.NoAbsoluteExpiration></xref:System.Web.Caching.Cache.NoAbsoluteExpiration>パラメーター。"
  example:
  - "The following example demonstrates how to assign an item high priority when you insert it into your application's `Cache` object.  \n  \n> [!NOTE]\n>  For more information about how to use this method with the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [How to: Notify an Application When an Item Is Removed from the Cache](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic Cache.Insert3 Example#1](~/add/codesnippet/csharp/50cb7857-3a5b-41d1-859e-_1.cs)]\n [!code-vb[Classic Cache.Insert3 Example#1](~/add/codesnippet/visualbasic/50cb7857-3a5b-41d1-859e-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "オブジェクトを参照するために使用するキャッシュ キー。"
    - id: value
      type: System.Object
      description: "キャッシュに挿入するオブジェクト。"
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "ファイルまたはキャッシュ キーの依存関係アイテムです。 すべての依存関係が変更されたときに、オブジェクトは無効となるキャッシュから削除します。 このパラメーターが含まれる場合、依存関係がない、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: absoluteExpiration
      type: System.DateTime
      description: "時刻を挿入されたオブジェクトが有効期限が切れるし、キャッシュから削除します。 標準時間から夏時間への変更などのローカル時刻と考えられる問題を避けるためには、次のように使用します。 <> </> *> なく<> *> このパラメーター値。 絶対有効期限を使用している場合、`slidingExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>です。"
    - id: slidingExpiration
      type: System.TimeSpan
      description: "挿入されたオブジェクトが最後にアクセスし、そのオブジェクトの有効期限が切れる時刻間の間隔。 この値が 20 分である場合は、オブジェクトは有効期限が切れるし、最後にアクセスした後 20 分間、キャッシュから削除します。 スライド式有効期限を使用している場合、`absoluteExpiration`パラメーターでなければなりません<xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>です。"
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "オブジェクトによって表される、キャッシュに格納されているその他の項目のコスト、 <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref>列挙します。 オブジェクトが削除されるとき、この値が、キャッシュで使用されます。コストの低いオブジェクトは、コストの高いオブジェクトの前にキャッシュから削除されます。"
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "指定した場合ときに、呼び出される、オブジェクトがキャッシュから削除するデリゲート。 アプリケーションに通知するそれらのオブジェクトがキャッシュから削除されたときに、これを行うこともできます。"
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "設定する、 <code> slidingExpiration </code>パラメーターをより小さい<xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;></xref>または&1; 年以上に相当します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> absoluteExpiration </code>と<code> slidingExpiration </code>パラメーターは両方に追加しようとしている項目の設定、 <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Web.Caching.Cache.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "取得または指定したキー キャッシュ項目を設定します。"
  remarks: "このプロパティを使用して、指定されたキャッシュ項目の値を取得するか、キャッシュにそのアイテムと、キーを追加することができます。 呼び出すことと同じでは、項目のプロパティを使用するキャッシュ項目の追加、<xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>メソッド</xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>。"
  example:
  - "The following example uses the `Item` property to retrieve the value of a cached object associated with the `Key1` key. It then uses the <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> method to write the value and introductory text and the B HTML element to a Web Forms page.  \n  \n [!code-cs[System.Web.Caching Examples#5](~/add/codesnippet/csharp/p-system.web.caching.cac_2_1.aspx)]\n [!code-vb[System.Web.Caching Examples#5](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_1.aspx)]  \n  \n The following example demonstrates using this property to insert the value of a text box into the cache.  \n  \n [!code-vb[Classic Cache.this Example#2](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_2.vb)]\n [!code-cs[Classic Cache.this Example#2](~/add/codesnippet/csharp/p-system.web.caching.cac_2_2.cs)]"
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "A<xref:System.String>キャッシュ項目のキーを表すオブジェクト</xref:System.String>。"
    return:
      type: System.Object
      description: "指定されたキャッシュ項目。"
  overload: System.Web.Caching.Cache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  id: NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "使用される、 <code> absoluteExpiration </code>内のパラメーター、<xref:System.Web.Caching.Cache.Insert*>項目を示すためにメソッドの呼び出しは有効期限はありません</xref:System.Web.Caching.Cache.Insert*>。 このフィールドは、読み取り専用です。"
  remarks: "このフィールドが設定を使用する場合、`absoluteExpiration`パラメーターと等しい<xref:System.DateTime>する、最大の可能な限りは、定数を表す`DateTime`値、9999 年 12 月 31 日 11時 59分: 59 pm まで</xref:System.DateTime>"
  example:
  - "The following example demonstrates how to use the `NoAbsoluteExpiration` field to disable absolute expirations when inserting an item in the `Cache`.  \n  \n [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_1_1.vb)]\n [!code-cs[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_1_1.cs)]"
  syntax:
    content: public static readonly DateTime NoAbsoluteExpiration;
    return:
      type: System.DateTime
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "として使用される、 <code> slidingExpiration </code>内のパラメーター、 <> </> *> または<> *> スライディング有効期限の設定を無効にするメソッドの呼び出しです。 このフィールドは、読み取り専用です。"
  remarks: "このフィールドが設定を使用する場合、`slidingExpiration`パラメーターを<xref:System.TimeSpan?displayProperty=fullName>0 の定数値を持つフィールド</xref:System.TimeSpan?displayProperty=fullName>。 キャッシュされた項目に準拠した有効期限が切れる、`absoluteExpiration`パラメーターに関連付けられている、`Insert`または`Add`メソッドの呼び出しです。"
  example:
  - "The following example demonstrates how to use the Insert method to add an item to the <xref:System.Web.Caching.Cache> object using the `NoSlidingExpiration` field.  \n  \n [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_0_1.vb)]\n [!code-cs[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_0_1.cs)]"
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "アプリケーションの指定した項目を削除<xref href=&quot;System.Web.Caching.Cache&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example creates a `RemoveItemFromCache` method. When this method is called, it uses the <xref:System.Web.Caching.Cache.Item%2A> property to check whether the cache contains an object that is associated with a `Key1` key value. If it does, the `Remove` method is called to remove the object.  \n  \n [!code-cs[System.Web.Caching Examples#4](~/add/codesnippet/csharp/m-system.web.caching.cac_9_1.aspx)]\n [!code-vb[System.Web.Caching Examples#4](~/add/codesnippet/visualbasic/m-system.web.caching.cac_9_1.aspx)]"
  syntax:
    content: public object Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "A<xref:System.String>を削除するキャッシュ項目の識別子</xref:System.String>。"
    return:
      type: System.Object
      description: "削除される項目、 <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;></xref>です。 キーのパラメーターの値が見つからない場合に返されます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Caching.Cache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "反復処理できる列挙子を返します、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクトのコレクション。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "反復処理できる列挙子、 <xref href=&quot;System.Web.Caching.Cache&quot;> </xref>オブジェクトのコレクション。"
  overload: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Caching.Cache.#ctor
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Caching.CacheItemPriority
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: System.Web.Caching.CacheItemPriority
- uid: System.Web.Caching.CacheItemRemovedCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemRemovedCallback
  nameWithType: CacheItemRemovedCallback
  fullName: System.Web.Caching.CacheItemRemovedCallback
- uid: System.Web.Caching.Cache.Count
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
- uid: System.Web.Caching.Cache.GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
- uid: System.Web.Caching.CacheItemUpdateCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemUpdateCallback
  nameWithType: CacheItemUpdateCallback
  fullName: System.Web.Caching.CacheItemUpdateCallback
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.Web.Caching.Cache.Item(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
- uid: System.Web.Caching.Cache.Remove(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Caching.Cache.#ctor*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache
  nameWithType: Cache.Cache
- uid: System.Web.Caching.Cache.Add*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add
  nameWithType: Cache.Add
- uid: System.Web.Caching.Cache.Count*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get
  nameWithType: Cache.Get
- uid: System.Web.Caching.Cache.GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator
  nameWithType: Cache.GetEnumerator
- uid: System.Web.Caching.Cache.Insert*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert
  nameWithType: Cache.Insert
- uid: System.Web.Caching.Cache.Item*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item
  nameWithType: Cache.Item
- uid: System.Web.Caching.Cache.Remove*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove
  nameWithType: Cache.Remove
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator
