### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ClientBuildManager
  id: ClientBuildManager
  children:
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  - System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  - System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  - System.Web.Compilation.ClientBuildManager.AppDomainStarted
  - System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  - System.Web.Compilation.ClientBuildManager.CodeGenDir
  - System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  - System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  - System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  - System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  - System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  - System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  - System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  - System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  - System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  - System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  - System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  - System.Web.Compilation.ClientBuildManager.IsHostCreated
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  - System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  - System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  - System.Web.Compilation.ClientBuildManager.Unload
  langs:
  - csharp
  name: ClientBuildManager
  nameWithType: ClientBuildManager
  fullName: System.Web.Compilation.ClientBuildManager
  type: Class
  summary: "ASP.NET アプリケーションのコンパイル サービスを提供します。"
  remarks: "ClientBuildManager クラスの ASP.NET Web アプリケーションをコンパイルし、生成されたアセンブリを取得するメソッドおよびプロパティが用意されていますか、ソース コードを生成します。 クラスのインスタンスはクライアントのアプリケーション ドメインで確立され、ASP.NET ビルド システムの外部で Microsoft インターネット インフォメーション サービス (IIS) へのアクセスを提供します。 クラスは、Web アプリケーションをコンパイルするためのカスタマイズしたツールの開発に使用できます。       コマンド ライン ツールの`aspnet_compiler`ClientBuildManager クラスを使用します。"
  syntax:
    content: 'public sealed class ClientBuildManager : MarshalByRefObject, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref>クラスは、指定したターゲット ディレクトリやプリコンパイル フラグなし。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "アプリケーション ルートの仮想パス。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "アプリケーション ルートへの物理パス。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref>ターゲット ディレクトリを指定しています。"
  remarks: "コンス トラクターのこのフォームは、プリコンパイル ターゲット ディレクトリを指定する、プリコンパイルに通常使用されます。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "アプリケーション ルートの仮想パス。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "アプリケーション ルートへの物理パス。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "プリコンパイルのターゲット ディレクトリです。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref>指定したターゲット ディレクトリ、コンパイル パラメーターを使用します。"
  remarks: "コンス トラクターのこのフォームはプリコンパイルのターゲット ディレクトリとプリコンパイル フラグを指定すると、通常プリコンパイルに使用します。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "アプリケーション ルートの仮想パス。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "アプリケーション ルートへの物理パス。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "プリコンパイルのターゲット ディレクトリです。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "プリコンパイル動作を決定する値。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  id: '#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)'
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.ClientBuildManager&quot;> </xref>クラスは、指定された仮想ディレクトリ、ソース ディレクトリ、ターゲット ディレクトリ、コンパイル パラメーター、および型記述プロバイダーを使用しています。"
  syntax:
    content: public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);
    parameters:
    - id: appVirtualDir
      type: System.String
      description: "アプリケーション ルートの仮想パス。"
    - id: appPhysicalSourceDir
      type: System.String
      description: "アプリケーションのルートの物理パス。"
    - id: appPhysicalTargetDir
      type: System.String
      description: "プリコンパイルのターゲット ディレクトリです。"
    - id: parameter
      type: System.Web.Compilation.ClientBuildManagerParameter
      description: "プリコンパイル動作を決定する値。"
    - id: typeDescriptionProvider
      type: System.ComponentModel.TypeDescriptionProvider
      description: "使用する型説明のプロバイダー。 このパラメーターは、主に Visual Studio のマルチ ターゲット インフラストラクチャをサポートするために使用します。 .NET Framework の特定のバージョンのフィルターは、その型に関するメタデータを取得するために使用されます。"
  overload: System.Web.Compilation.ClientBuildManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  id: AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーション ドメインがシャット ダウンするときに発生します。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  id: AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーション ドメインが起動したときに発生します。"
  syntax:
    content: public event EventHandler AppDomainStarted;
    return:
      type: System.EventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  id: AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーション ドメインがアンロードされるときに発生します。"
  syntax:
    content: public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;
    return:
      type: System.Web.Compilation.BuildManagerHostUnloadEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  id: CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コードの生成に使用するディレクトリへの物理パスを取得します。"
  remarks: "コード生成用のディレクトリは、通常一時 ASP.NET ファイル ディレクトリにします。"
  syntax:
    content: public string CodeGenDir { get; }
    return:
      type: System.String
      description: "A<xref:System.String>コードの生成に使用するディレクトリのパスを格納します</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  id: CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_Code ディレクトリ内のファイル、Global.asax ファイル、リソース ファイル、および Web 参照などのアプリケーションに依存するファイルをコンパイルします。"
  remarks: "CompileApplicationDependencies メソッドでは、リソース、Web 参照、App_Code ディレクトリ内のファイルの App_Browsers ディレクトリ内の .browser ファイル、Global.asax ファイルがコンパイルされたことを確認します。"
  syntax:
    content: public void CompileApplicationDependencies ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  id: CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスで表されるファイルをコンパイルします。"
  syntax:
    content: public void CompileFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "コンパイルするファイルへのパス。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  id: CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスで表されるファイルをコンパイルし、ビルドに関するステータス情報を取得するコールバック クラスを提供します。"
  syntax:
    content: public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: virtualPath
      type: System.String
      description: "コンパイルするファイルへのパス。"
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "コンパイルのステータス情報を取得するオブジェクト。"
  overload: System.Web.Compilation.ClientBuildManager.CompileFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  id: CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET ランタイムのアプリケーション ドメインでオブジェクトを作成します。"
  syntax:
    content: public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);
    parameters:
    - id: type
      type: System.Type
      description: "作成されるオブジェクトの型。"
    - id: failIfExists
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>オブジェクトは、ASP.NET ランタイムのアプリケーション ドメインで既に作成されている場合に例外をスローするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
    return:
      type: System.Web.Hosting.IRegisteredObject
      description: "ASP.NET ランタイムのアプリケーション ドメイン内のオブジェクト。"
  overload: System.Web.Compilation.ClientBuildManager.CreateObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "オブジェクトは、アプリケーション ドメインに既に存在し、 <code> failIfExists </code> 、 <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  id: GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ファイルの内容からコードを生成します。"
  syntax:
    content: public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ファイルへの仮想パス。"
    - id: virtualFileString
      type: System.String
      description: "ファイルの内容です。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。"
    return:
      type: System.String
      description: "A<xref:System.String>生成されたコードが含まれている</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "CodeDOM ツリー、コンパイラ タイプ、およびファイルの仮想パスで表される、コンパイラ パラメーターを返します。"
  remarks: "GenerateCodeCompileUnit メソッドは、ファイルをコンパイルするために必要な情報を取得します。 加え、 <xref:System.CodeDom.CodeCompileUnit>3 台、戻り値としてオブジェクトの`out`のパラメーターです</xref:System.CodeDom.CodeCompileUnit>。 `codeDomProviderType`パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。 `compilerParameters`パラメーターには、コンパイル動作を決定するプロパティが含まれています。 `linePragmasTable`パラメーターには、行プラグマの辞書が含まれています。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ファイルへの仮想パス。"
    - id: codeDomProviderType
      type: System.Type
      description: "このメソッドから制御が戻るときに、コード生成とコンパイルに使用される codeDOM プロバイダーの種類が含まれています。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>指定されたファイルです。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  id: GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "内容、codeDOM ツリー、コンパイラ タイプ、およびファイルの仮想パスで表される、コンパイラ パラメーターを返します。"
  remarks: "GenerateCodeCompileUnit メソッドは、ファイルをコンパイルするために必要な情報を取得します。 加え、 <xref:System.CodeDom.CodeCompileUnit>3 台、戻り値としてオブジェクトの`out`のパラメーターです</xref:System.CodeDom.CodeCompileUnit>。 `codeDomProviderType`パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。 `compilerParameters`パラメーターには、コンパイル動作を決定するプロパティが含まれています。 `linePragmasTable`パラメーターには、行プラグマの辞書が含まれています。"
  syntax:
    content: public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ファイルへの仮想パス。"
    - id: virtualFileString
      type: System.String
      description: "表されるファイルの内容、`virtualPath`パラメーター。"
    - id: codeDomProviderType
      type: System.Type
      description: "このメソッドから制御が戻るときに、コード生成とコンパイルに使用される codeDOM プロバイダーの種類が含まれています。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "このメソッドから制御が戻るときにファイルがによって表される方法を定義するプロパティが含まれています、`virtualPath`パラメーターはコンパイルされます。"
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "このメソッドから制御が戻るときに、行プラグマの辞書が含まれています。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>指定されたファイルです。"
  overload: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  id: GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "辞書を取得ファイルを変更した場合、アプリケーション ドメインがシャット ダウンが発生します。"
  remarks: "特定の最上位ディレクトリのファイルへの変更が発生するアプリケーション ドメインをシャット ダウンします。 箱、App_Code、Global_Resources、Web 参照、および App_Browsers ディレクトリ内のファイルがすべての変更を検出するために監視されます。 変更が検出されると、アプリケーション ドメインをシャット ダウンします。"
  syntax:
    content: public string[] GetAppDomainShutdownDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>最上位のディレクトリ名を含む配列です</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  id: GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ブラウザー要素のコレクションを取得します。"
  remarks: "<xref:System.Collections.IDictionary>オブジェクトには、ブラウザーの名前キーにはが含まれていて、<xref:System.Web.UI.Triplet>オブジェクトの値</xref:System.Web.UI.Triplet></xref:System.Collections.IDictionary>。 <xref:System.Web.UI.Triplet>各オブジェクトには、親ブラウザー要素、説明、および、ブラウザー内の要素のツリーの深さの名前が含まれています</xref:System.Web.UI.Triplet>。"
  syntax:
    content: public System.Collections.IDictionary GetBrowserDefinitions ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>ブラウザーの要素が含まれている</xref:System.Collections.IDictionary>。"
  overload: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  id: GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイラ タイプ、コンパイラ パラメーター、および .wsdl ファイルなどの非コード ファイルから生成されたコード ファイルを格納するディレクトリに関する情報を取得します。"
  remarks: "GetCodeDirectoryInformation メソッドは、コード ディレクトリのビルドに必要な情報を取得します。 3 つを使用してこの情報を返します`out`パラメーター。 `codeDomProviderType`パラメーターは、生成およびコード ディレクトリ内のファイルをコンパイルするため、プロバイダーの種類を返します。 `compilerParameters`パラメーターには、コンパイル動作を決定するプロパティが含まれています。 `generatedFilesDir`パラメーターは、.wsdl ファイルなど、コード ディレクトリ内の非コード ファイルから生成されたすべてのコード ファイルを含むディレクトリのパスを格納します。"
  syntax:
    content: public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);
    parameters:
    - id: virtualCodeDir
      type: System.String
      description: "情報を取得する対象のディレクトリです。"
    - id: codeDomProviderType
      type: System.Type
      description: "このメソッドから制御が戻るときに、コード生成とコンパイルに使用されるプロバイダーの種類が含まれています。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。"
    - id: generatedFilesDir
      type: System.String
      description: "このメソッドから制御が戻るときに、非コード ファイルから生成されたファイルのディレクトリが含まれています。"
  overload: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualCodeDir</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスで表されるファイルをコンパイルし、コンパイルされた型を返します。"
  syntax:
    content: public Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "コンパイルするファイルの仮想パス。"
    return:
      type: System.Type
      description: "<xref:System.Type>のコンパイル済みのファイルです</xref:System.Type>。"
  overload: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  id: GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイラ タイプ、および仮想パスで表されるファイルのビルドに使用されるパラメーターを返します。"
  syntax:
    content: public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);
    parameters:
    - id: virtualPath
      type: System.String
      description: "ファイルへの仮想パス。"
    - id: codeDomProviderType
      type: System.Type
      description: "このメソッドから制御が戻るときに、コード生成とコンパイルに使用されるプロバイダーの種類が含まれています。"
    - id: compilerParameters
      type: System.CodeDom.Compiler.CompilerParameters
      description: "このメソッドから制御が戻るときに、ファイルのコンパイル方法を定義するプロパティが含まれています。"
  overload: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  id: GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "生成されたファイルの仮想パスを返します。"
  syntax:
    content: public string GetGeneratedFileVirtualPath (string filePath);
    parameters:
    - id: filePath
      type: System.String
      description: "生成されたファイルへの完全物理パス。"
    return:
      type: System.String
      description: "A<xref:System.String>の仮想パスが含まれている<code> filePath</code>です</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  id: GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスの生成ファイルへの物理パスを取得します。"
  syntax:
    content: public string GetGeneratedSourceFile (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "取得するファイルの仮想パス。"
    return:
      type: System.String
      description: "A<xref:System.String>を含む、生成されたファイルへの物理パスです</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  id: GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Bin ディレクトリで定義されているアセンブリの配列を返すと、 <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 構成ファイルのセクション。"
  syntax:
    content: public string[] GetTopLevelAssemblyReferences (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "構成の名前とパス。"
    return:
      type: System.String[]
      description: "A<xref:System.String>コードへのパスを含む配列が Bin ディレクトリに基づくと、 <xref uid=&quot;langword_csharp_&lt;assembly&gt;&quot; name=&quot;&lt;assembly&gt;&quot; href=&quot;&quot;> </xref> Web 構成ファイルのセクション</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  id: GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "App_Code ディレクトリとそのサブディレクトリを ASP.NET アプリケーションで仮想パスを返します。"
  syntax:
    content: public string[] GetVirtualCodeDirectories ();
    parameters: []
    return:
      type: System.String[]
      description: "A<xref:System.String>アプリケーションのコード ディレクトリへのすべての仮想パスを含む配列です</xref:System.String>。"
  overload: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーション ドメインは、無限の有効期間リースが作成されることを防ぐことで。"
  remarks: "このメソッドは、<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>その基本クラスのメソッド</xref:System.MarshalByRefObject.InitializeLifetimeService%2A>をオーバーライドします。 常に`null`し、それによって作られるリースであり、アプリケーション ドメインの有効期間が制限されることを防止します。"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  id: IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アセンブリがコード アセンブリかどうかを示します。"
  syntax:
    content: public bool IsCodeAssembly (string assemblyName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "コード アセンブリを識別するアセンブリの名前。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <code> assemblyName </code>パラメーターでは、生成されたコード アセンブリの&1; つと一致する; それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assemblyName</code>null です。"
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  id: IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインが作成されているかどうかを示す値を取得します。"
  syntax:
    content: public bool IsHostCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインが作成されている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  id: PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET アプリケーションをプリコンパイルします。"
  remarks: "ASP.NET には、次の&3; つの形式のプリコンパイルがサポートされています。 1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。 このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。 サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。       配置用プリコンパイルの他の&2; つの形式が使用されます。 サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。 これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。 その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。 どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。       プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>のコンス トラクターです</xref:System.Web.Compilation.ClientBuildManager>。 <xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトの<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>のプリコンパイルを実行する&3; つの形式のコンス トラクターを定義します</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A></xref:System.Web.Compilation.ClientBuildManagerParameter>。       開発者の Web サイトをプリコンパイルすること、`aspnet_compiler`コマンド ライン ツールまたは PrecompileApplication メソッドを呼び出すことによって。"
  syntax:
    content: public void PrecompileApplication ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET アプリケーションをプリコンパイルし、ビルドに関するステータス情報を受信するコールバック メソッドを提供します。"
  remarks: "ASP.NET には、次の&3; つの形式のプリコンパイルがサポートされています。 1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。 このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。 サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。 `callback`パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。       配置用プリコンパイルの他の&2; つの形式が使用されます。 サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。 これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。 その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。 どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。       プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>のコンス トラクターです</xref:System.Web.Compilation.ClientBuildManager>。 <xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトの<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>のプリコンパイルを実行する&3; つの形式のコンス トラクターを定義します</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A></xref:System.Web.Compilation.ClientBuildManagerParameter>。       開発者の Web サイトをプリコンパイルすること、`aspnet_compiler`コマンド ライン ツールまたは PrecompileApplication メソッドを呼び出すことによって。"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>コンパイルの結果を報告するときに呼び出すメソッドが含まれています。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  id: PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET アプリケーションをプリコンパイル、ビルドに関するステータス情報を受信するコールバック メソッドを提供し、クリーン ビルドを作成するかどうかを示します。"
  remarks: "ASP.NET には、次の&3; つの形式のプリコンパイルがサポートされています。 1 つのフォームは、ASP.NET アプリケーションの埋め込み先プリコンパイルできます。 このフォームで、サイトは、実働環境に展開し、プリコンパイルし、ユーザーが初めてアクセスしたときにサイトを動的にコンパイルする必要があります。 サイトの最初のユーザーでは、動的にコンパイルされるサイトに正常に到達した遅延は発生しません。 `callback`パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。       配置用プリコンパイルの他の&2; つの形式が使用されます。 サイトのレイアウトを生成するか、フォームでは、運用コンピューターに配置できるようにします。 これらのフォームのいずれかすると、コンパイル済みのサイトにある程度の更新を実行できるように、マークアップ ページが含まれています。 その他のフォームでは、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。 どのプリコンパイル形式のいずれかで対象となる環境には、ソース コードは配置されません。       プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>のコンス トラクターです</xref:System.Web.Compilation.ClientBuildManager>。 <xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトの<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>のプリコンパイルを実行する&3; つの形式のコンス トラクターを定義します</xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A></xref:System.Web.Compilation.ClientBuildManagerParameter>。       開発者の Web サイトをプリコンパイルすること、`aspnet_compiler`コマンド ライン ツールを呼び出すことによって、または、<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>メソッドです</xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>。"
  syntax:
    content: public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);
    parameters:
    - id: callback
      type: System.Web.Compilation.ClientBuildManagerCallback
      description: "A <xref href=&quot;System.Web.Compilation.ClientBuildManagerCallback&quot;> </xref>コンパイルの結果を報告するときに呼び出すメソッドが含まれています。"
    - id: forceCleanBuild
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>最初にすべてのオブジェクトと中間ファイルを削除するクリーン ビルドを実行するのには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>に変更されたファイルだけを再構築します。 ビルド環境によって依存関係が検出されない可能性がある場合は、true に設定します。"
  overload: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "現在の ASP.NET アプリケーションを終了します。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ClientBuildManager.Unload
  id: Unload
  parent: System.Web.Compilation.ClientBuildManager
  langs:
  - csharp
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ASP.NET Web アプリケーションをコンパイルするためのアプリケーション ドメインをアンロードします。"
  syntax:
    content: public bool Unload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、アプリケーション ドメインがアンロードされます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。"
  overload: System.Web.Compilation.ClientBuildManager.Unload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String)
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter)
- uid: System.Web.Compilation.ClientBuildManagerParameter
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerParameter
  nameWithType: ClientBuildManagerParameter
  fullName: System.Web.Compilation.ClientBuildManagerParameter
- uid: System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  nameWithType: ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
  fullName: System.Web.Compilation.ClientBuildManager.ClientBuildManager(String,String,String,ClientBuildManagerParameter,TypeDescriptionProvider)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainShutdown
  nameWithType: ClientBuildManager.AppDomainShutdown
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainShutdown
- uid: System.Web.Compilation.BuildManagerHostUnloadEventHandler
  parent: System.Web.Compilation
  isExternal: false
  name: BuildManagerHostUnloadEventHandler
  nameWithType: BuildManagerHostUnloadEventHandler
  fullName: System.Web.Compilation.BuildManagerHostUnloadEventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainStarted
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainStarted
  nameWithType: ClientBuildManager.AppDomainStarted
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainStarted
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: AppDomainUnloaded
  nameWithType: ClientBuildManager.AppDomainUnloaded
  fullName: System.Web.Compilation.ClientBuildManager.AppDomainUnloaded
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
  fullName: System.Web.Compilation.ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies()
  nameWithType: ClientBuildManager.CompileApplicationDependencies()
  fullName: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies()
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String)
  nameWithType: ClientBuildManager.CompileFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String)
- uid: System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile(String,ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.CompileFile(String,ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManagerCallback
  parent: System.Web.Compilation
  isExternal: false
  name: ClientBuildManagerCallback
  nameWithType: ClientBuildManagerCallback
  fullName: System.Web.Compilation.ClientBuildManagerCallback
- uid: System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject(Type,Boolean)
  nameWithType: ClientBuildManager.CreateObject(Type,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.CreateObject(Type,Boolean)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode(String,String,IDictionary)
  nameWithType: ClientBuildManager.GenerateCode(String,String,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCode(String,String,IDictionary)
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,Type,CompilerParameters,IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.Compiler.CompilerParameters
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
  fullName: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(String,String,Type,CompilerParameters,IDictionary)
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories()
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions()
  nameWithType: ClientBuildManager.GetBrowserDefinitions()
  fullName: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions()
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(String,Type,CompilerParameters,String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: ClientBuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters(String,Type,CompilerParameters)
  nameWithType: ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
  fullName: System.Web.Compilation.ClientBuildManager.GetCompilerParameters(String,Type,CompilerParameters)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath(String)
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(String)
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile(String)
  nameWithType: ClientBuildManager.GetGeneratedSourceFile(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(String)
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences(String)
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences(String)
  fullName: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(String)
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories()
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories()
  fullName: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories()
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: ClientBuildManager.InitializeLifetimeService()
  fullName: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly(String)
  nameWithType: ClientBuildManager.IsCodeAssembly(String)
  fullName: System.Web.Compilation.ClientBuildManager.IsCodeAssembly(String)
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
  fullName: System.Web.Compilation.ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication()
  nameWithType: ClientBuildManager.PrecompileApplication()
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication()
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback)
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication(ClientBuildManagerCallback,Boolean)
  nameWithType: ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
  fullName: System.Web.Compilation.ClientBuildManager.PrecompileApplication(ClientBuildManagerCallback,Boolean)
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ClientBuildManager.System.IDisposable.Dispose()
  fullName: System.Web.Compilation.ClientBuildManager.System.IDisposable.Dispose()
- uid: System.Web.Compilation.ClientBuildManager.Unload
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload()
  nameWithType: ClientBuildManager.Unload()
  fullName: System.Web.Compilation.ClientBuildManager.Unload()
- uid: System.Web.Compilation.ClientBuildManager.#ctor*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: ClientBuildManager
  nameWithType: ClientBuildManager.ClientBuildManager
- uid: System.Web.Compilation.ClientBuildManager.CodeGenDir*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CodeGenDir
  nameWithType: ClientBuildManager.CodeGenDir
- uid: System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileApplicationDependencies
  nameWithType: ClientBuildManager.CompileApplicationDependencies
- uid: System.Web.Compilation.ClientBuildManager.CompileFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CompileFile
  nameWithType: ClientBuildManager.CompileFile
- uid: System.Web.Compilation.ClientBuildManager.CreateObject*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: CreateObject
  nameWithType: ClientBuildManager.CreateObject
- uid: System.Web.Compilation.ClientBuildManager.GenerateCode*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCode
  nameWithType: ClientBuildManager.GenerateCode
- uid: System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GenerateCodeCompileUnit
  nameWithType: ClientBuildManager.GenerateCodeCompileUnit
- uid: System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetAppDomainShutdownDirectories
  nameWithType: ClientBuildManager.GetAppDomainShutdownDirectories
- uid: System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetBrowserDefinitions
  nameWithType: ClientBuildManager.GetBrowserDefinitions
- uid: System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCodeDirectoryInformation
  nameWithType: ClientBuildManager.GetCodeDirectoryInformation
- uid: System.Web.Compilation.ClientBuildManager.GetCompiledType*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: ClientBuildManager.GetCompiledType
- uid: System.Web.Compilation.ClientBuildManager.GetCompilerParameters*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetCompilerParameters
  nameWithType: ClientBuildManager.GetCompilerParameters
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedFileVirtualPath
  nameWithType: ClientBuildManager.GetGeneratedFileVirtualPath
- uid: System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetGeneratedSourceFile
  nameWithType: ClientBuildManager.GetGeneratedSourceFile
- uid: System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetTopLevelAssemblyReferences
  nameWithType: ClientBuildManager.GetTopLevelAssemblyReferences
- uid: System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: GetVirtualCodeDirectories
  nameWithType: ClientBuildManager.GetVirtualCodeDirectories
- uid: System.Web.Compilation.ClientBuildManager.InitializeLifetimeService*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: ClientBuildManager.InitializeLifetimeService
- uid: System.Web.Compilation.ClientBuildManager.IsCodeAssembly*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsCodeAssembly
  nameWithType: ClientBuildManager.IsCodeAssembly
- uid: System.Web.Compilation.ClientBuildManager.IsHostCreated*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: IsHostCreated
  nameWithType: ClientBuildManager.IsHostCreated
- uid: System.Web.Compilation.ClientBuildManager.PrecompileApplication*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: PrecompileApplication
  nameWithType: ClientBuildManager.PrecompileApplication
- uid: System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ClientBuildManager.System.IDisposable.Dispose
- uid: System.Web.Compilation.ClientBuildManager.Unload*
  parent: System.Web.Compilation.ClientBuildManager
  isExternal: false
  name: Unload
  nameWithType: ClientBuildManager.Unload
