### YamlMime:ManagedReference
items:
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream
  id: IsolatedStorageFileStream
  children:
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  langs:
  - csharp
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream
  type: Class
  summary: "分離ストレージ内のファイルを公開します。"
  remarks: "読み取り、書き込み、および分離ストレージでファイルを作成するには、このクラスを使用します。       このクラスを拡張するため<xref:System.IO.FileStream>、ほとんどの状況で IsolatedStorageFileStream のインスタンスを使用することができます場所、<xref:System.IO.FileStream>される可能性がありますそれ以外の場合、構築、<xref:System.IO.StreamReader>または<xref:System.IO.StreamWriter>.</xref:System.IO.StreamWriter></xref:System.IO.StreamReader>など</xref:System.IO.FileStream></xref:System.IO.FileStream>       この型は、<xref:System.IDisposable>インターフェイス</xref:System.IDisposable>。 型を使用してが完了したらを直接的または間接的にその破棄する必要があります。 型の直接 dispose を呼び出す、<xref:System.IDisposable.Dispose%2A>メソッドで、 `try` / `catch`ブロック</xref:System.IDisposable.Dispose%2A>。 など、使用言語構成要素に直接ことのない dispose `using` (C# の場合) または`Using`(Visual Basic で)。 詳細についてを参照してください&quot;を使用して、オブジェクトを実装する IDisposable&quot;、<xref:System.IDisposable>インターフェイスに関するトピック</xref:System.IDisposable>。      > [!IMPORTANT] > 分離ストレージでは使用できません[!INCLUDE[win8_appname_long](~/add/includes/win8-appname-long-md.md)]アプリ。 代わりに、アプリケーション データ クラスを使用して、`Windows.Storage`に含まれる名前空間、 [!INCLUDE[wrt](~/add/includes/wrt-md.md)] API ローカル データとファイルを保存します。 詳細については、次を参照してください。[アプリケーション データ](http://go.microsoft.com/fwlink/?LinkId=229175)、Windows デベロッパー センターにします。"
  example:
  - "The following console application demonstrates how you can use <xref:System.IO.IsolatedStorage.IsolatedStorageFile> and IsolatedStorageFileStream to write data to an Isolated Storage file. The user is requested to log in. If the user is a new user, a News URL and a Sports URL are recorded as personal preferences in Isolated Storage. If the user is a returning user, the user's current preferences are displayed. The code examples used throughout this namespace are presented in the context of this sample application. You can use the [Storeadm.exe (Isolated Storage Tool)](~/add/includes/ajax-current-ext-md.md) utility to list and remove the Isolated Storage files that are created with this console application.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/visualbasic/t-system.io.isolatedstor_2_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/cpp/t-system.io.isolatedstor_2_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#1](~/add/codesnippet/csharp/t-system.io.isolatedstor_2_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class IsolatedStorageFileStream : System.IO.FileStream
  inheritance:
  - System.IO.Stream
  - System.IO.FileStream
  implements: []
  inheritedMembers:
  - System.IO.FileStream.FlushAsync(System.Threading.CancellationToken)
  - System.IO.FileStream.GetAccessControl
  - System.IO.FileStream.Name
  - System.IO.FileStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - System.IO.FileStream.SetAccessControl(System.Security.AccessControl.FileSecurity)
  - System.IO.FileStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  id: '#ctor(System.String,System.IO.FileMode)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトによって指定されたファイルにアクセスできるように<code> path </code> 、指定した<code> mode</code>です。"
  remarks: "現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。 このストアを開いたままの有効期間にのみ、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFile>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFile></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。       `mode`パラメーターかどうか、新しいファイルを作成する必要があります、これを使用すると、既存のものとなどを示します。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得するときに文字が解釈されないことし、例外をスローする可能性があります。"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "ディレクトリ<code> path </code>存在しません。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されています。<xref href=&quot;System.IO.FileMode&quot;></xref>"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>クラスによって指定されたファイルにアクセスできるように<code> path </code>、指定した<code> mode </code>、種類を使用の<code> access </code>要求します。"
  remarks: "現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。 このストアを開いたままの有効期間にのみ、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFile>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFile></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。       `mode`パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。 `access`パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>クラスによって指定されたファイルにアクセスできるように<code> path </code>、指定した<code> mode</code>のコンテキストでは、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>によって指定された<code> isf</code>です。"
  remarks: "`mode`パラメーターかどうか、新しいファイルを作成する必要があります、これを使用すると、既存のものとなどを示します。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/ed0ff8fa-778f-4b06-9af8-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/ed0ff8fa-778f-4b06-9af8-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/ed0ff8fa-778f-4b06-9af8-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>を開くとき、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>クォータはありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>によって指定されたファイルへのアクセスを提供するクラス<code> path </code>、指定した<code> mode </code>、指定されたファイルに<code> access </code>、共有モードで指定されたファイルを使用して<code> share</code>です。"
  remarks: "現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。 このストアを開いたままの有効期間にのみ、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFile>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFile></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得するときに文字が解釈されないことし、例外をスローする可能性があります。"
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/visualbasic/16e66ff6-8db3-485d-ac06-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/cpp/16e66ff6-8db3-485d-ac06-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#15](~/add/codesnippet/csharp/16e66ff6-8db3-485d-ac06-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
    - id: share
      type: System.IO.FileShare
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileShare&quot;> </xref>値。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>クラスによって指定されたファイルにアクセスできるように<code> path </code> 、指定した<code> mode </code>、指定されたファイルに<code> access</code>のコンテキストでは、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>によって指定された<code> isf</code>です。"
  remarks: "`mode`パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。 `access`パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/visualbasic/404bef15-453e-4818-ab5f-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/cpp/404bef15-453e-4818-ab5f-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#10](~/add/codesnippet/csharp/404bef15-453e-4818-ab5f-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>を開くとき、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "分離ストアは閉じています。"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>クォータはありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>によって指定されたファイルへのアクセスを提供するクラス<code> path </code>、指定した<code> mode </code>、指定されたファイルに<code> access </code>、共有モードで指定されたファイルを使用して<code> share</code>で、 <code> buffersize </code>指定します。"
  remarks: "現在実行中のアセンブリの id が実行されているアプリケーション ドメインのでは使用される分離ストアが対象です。 このストアを開いたままの有効期間にのみ、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 別の分離ストレージのスコープを指定するか、開かれたままにストアを許可する (ので、複数<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>そこからオブジェクトを開くことができます) を受け取るコンス トラクターのフォームを使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFile>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFile></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。       `mode`パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。 `access`パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
    - id: share
      type: System.IO.FileShare
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileShare&quot;> </xref>値。"
    - id: bufferSize
      type: System.Int32
      description: "<xref href=&quot;System.IO.FileStream&quot;> </xref>バッファー サイズ。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>クラスによって指定されたファイルへのアクセスを提供<code> path </code>、指定した<code> mode </code>、指定されたファイルに<code> access </code>、共有モードで指定されたファイルを使用して<code> share</code>のコンテキストでは、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>によって指定された<code> isf</code>です。"
  remarks: "`mode`パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。 `access`パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/d6e9d0e2-c3f3-4d3d-941f-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/d6e9d0e2-c3f3-4d3d-941f-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/d6e9d0e2-c3f3-4d3d-941f-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
    - id: share
      type: System.IO.FileShare
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileShare&quot;> </xref>値。"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>を開くとき、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>クォータはありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  id: '#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)'
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "新しいインスタンスを初期化します、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>クラスによって指定されたファイルへのアクセスを提供<code> path </code>、指定した<code> mode </code>、指定されたファイルに<code> access </code>、共有モードで指定されたファイルを使用して<code> share</code>で、 <code> buffersize </code>指定、およびのコンテキストで、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>によって指定された<code> isf</code>です。"
  remarks: "`mode`パラメーターは、新しいファイルを作成するかどうかまたは既存の使用を示します。 `access`パラメーターは、読み取り専用、読み取り/書き込み、および書き込み専用です。      > [!CAUTION] > 文字のセットをコンパイル時に特定のカルチャ設定を同じ文字を別のカルチャ設定を取得する文字、解釈されないことし、例外をスローする可能性があります。"
  example:
  - "The following code example demonstrates the use of this constructor. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/visualbasic/992df1ce-aff0-4ca4-9ce4-_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/cpp/992df1ce-aff0-4ca4-9ce4-_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#12](~/add/codesnippet/csharp/992df1ce-aff0-4ca4-9ce4-_1.cs)]"
  syntax:
    content: public IsolatedStorageFileStream (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share, int bufferSize, System.IO.IsolatedStorage.IsolatedStorageFile isf);
    parameters:
    - id: path
      type: System.String
      description: "分離ストレージ内でのファイルの相対パス。"
    - id: mode
      type: System.IO.FileMode
      description: "1 つ、 <xref href=&quot;System.IO.FileMode&quot;> </xref>値。"
    - id: access
      type: System.IO.FileAccess
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileAccess&quot;> </xref>値。"
    - id: share
      type: System.IO.FileShare
      description: "ビットごとの組み合わせ、 <xref href=&quot;System.IO.FileShare&quot;> </xref>値"
    - id: bufferSize
      type: System.Int32
      description: "<xref href=&quot;System.IO.FileStream&quot;> </xref>バッファー サイズ。"
    - id: isf
      type: System.IO.IsolatedStorage.IsolatedStorageFile
      description: "<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFile&quot;> </xref>を開くとき、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> path </code>形式が正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "ファイルが見つかりません、 <code> mode </code>に設定されている<xref href=&quot;System.IO.FileMode&quot;></xref>です。"
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "<code>isf</code>クォータはありません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "非同期の読み取りを開始します。"
  remarks: "ストリームの現在の位置は、I/O 操作の完了時ではなく、非同期の読み取りや書き込みを発行したときに更新されます。       呼び出す必要があります<xref:System.IO.Stream.EndRead%2A>この<xref:System.IAsyncResult>読み取られたバイト数を確認する</xref:System.IAsyncResult></xref:System.IO.Stream.EndRead%2A>。"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "データを読み取るバッファー。"
    - id: offset
      type: System.Int32
      description: "内のバイト オフセット`buffer`読み取りを開始する位置。"
    - id: numBytes
      type: System.Int32
      description: "読み取るバイトの最大数。"
    - id: userCallback
      type: System.AsyncCallback
      description: "非同期の読み取り操作したときに呼び出すメソッドが完了するとします。 このパラメーターは省略できます。"
    - id: stateObject
      type: System.Object
      description: "非同期の読み込みの状態です。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>オブジェクトを表す非同期の読み取り、可能性のあるまだ保留中である</xref:System.IAsyncResult>。 これは、<xref:System.IAsyncResult>をこのストリームの渡す必要がある<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*>読み取られたバイト数を調べます</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*></xref:System.IAsyncResult>。 これは、BeginRead を呼び出した同じコードまたは BeginRead に渡されたコールバックで実行できます。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "非同期の読み取りがファイルの終わりを超えて試行されました。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "非同期の書き込みを開始します。"
  remarks: "場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>ストリームの末尾に書き込み、ストリームが拡張は、オブジェクトが書き込み可能です</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。       ストリームの現在の位置は、I/O 操作の完了時ではなく、非同期の読み取りや書き込みを発行したときに更新されます。       呼び出す必要があります<xref:System.IO.Stream.EndWrite%2A>で、<xref:System.IAsyncResult>を書き込まれたバイト数を調べるにはこのメソッドを表すオブジェクト</xref:System.IAsyncResult></xref:System.IO.Stream.EndWrite%2A>。"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int numBytes, AsyncCallback userCallback, object stateObject);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "データを書き込むバッファー。"
    - id: offset
      type: System.Int32
      description: "内のバイト オフセット`buffer`書き込みを開始する位置を示すです。"
    - id: numBytes
      type: System.Int32
      description: "書き込むバイトの最大数。"
    - id: userCallback
      type: System.AsyncCallback
      description: "非同期の書き込み操作が完了したときに呼び出すメソッド。 このパラメーターは省略できます。"
    - id: stateObject
      type: System.Object
      description: "非同期の書き込みの状態です。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>が保留されている可能性がありますが、非同期の書き込みを表す</xref:System.IAsyncResult>。 これは、<xref:System.IAsyncResult>をこのストリームの渡す必要がある<> *> 書き込みが完了したことを確認する方法でリソースを適切に解放し</xref:System.IAsyncResult>。これ行うかを呼び出した同じコード<> *> または<xref:System.IO.Stream.BeginWrite*>.</xref:System.IO.Stream.BeginWrite*>に渡されたコールバックで"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "非同期の書き込みが、ファイルの終わりを超えて試行されました。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  id: CanRead
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "ファイルを読み取れるかどうかを示すブール値を取得します。"
  remarks: "このプロパティを使用しているかどうか、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトを読み取ることができます</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  example:
  - "The following code example demonstrates how you could use the CanRead property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Read%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_1_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/cpp/p-system.io.isolatedstor_1_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#11](~/add/codesnippet/csharp/p-system.io.isolatedstor_1_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトを読み取り、それ以外は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  id: CanSeek
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "シークするかどうかを示すブール値を取得操作がサポートされます。"
  remarks: "このプロパティを使用しているかどうか、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトでサポートされるシーク操作</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトでサポートされるシーク操作、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  id: CanWrite
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "ファイルを書き込むことができるかどうかを示すブール値を取得します。"
  remarks: "このプロパティを使用しているかどうか、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトを書き込むことができます</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  example:
  - "The following code example demonstrates how you could use the CanWrite property, as a check to see whether a stream can be read before calling the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Write%2A> or <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A> methods. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_3_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/cpp/p-system.io.isolatedstor_3_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#13](~/add/codesnippet/csharp/p-system.io.isolatedstor_3_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>書き込まれる、それ以外のオブジェクトを指定できます<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "によって使用されるアンマネージ リソースを解放、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>し、必要に応じてマネージ リソースを解放します。"
  remarks: "このメソッドは、パブリック<xref:System.IDisposable.Dispose%2A>メソッドおよび<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A></xref:System.IDisposable.Dispose%2A>。 <xref:System.IDisposable.Dispose%2A>保護された Dispose メソッドを呼び出し、`disposing`パラメーターが true に設定します。</xref:System.IDisposable.Dispose%2A> <xref:System.Object.Finalize%2A>Dispose を呼び出す`disposing`を false に設定します。</xref:System.Object.Finalize%2A>       ときに、`disposing`パラメーターが true の場合、このメソッドは、すべてのマネージ オブジェクトによって保持されているすべてのリソースを解放しますこの<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>参照。</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> 。 このメソッドを呼び出して、<xref:System.IDisposable.Dispose%2A>参照される各オブジェクトのメソッド</xref:System.IDisposable.Dispose%2A>。"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>マネージ コードとアンマネージ リソースを解放するには<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>アンマネージ リソースだけを解放するには"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "保留中の非同期読み込み要求を終了します。"
  remarks: "EndRead は&1; 回だけ呼び出す必要がありますすべて<xref:System.IAsyncResult>オブジェクトから<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>、 <xref:System.IO.Stream>.</xref:System.IO.Stream>から読み取られたバイト数を確認する唯一の方法は、EndRead を呼び出すと</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A></xref:System.IAsyncResult> EndRead は、I/O 操作が完了するまでブロックされます。"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "保留中の非同期要求。"
    return:
      type: System.Int32
      description: "0 ~ 要求したバイト数の間のストリームから読み取られたバイト数。 ストリームにはストリームの末尾にゼロが返されるだけです。 それ以外の場合、少なくとも&1; バイトが読み取られるまで、ブロックされます。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "非同期の書き込みを終了します。"
  remarks: "EndWrite はすべて<xref:System.IAsyncResult><xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>。</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A></xref:System.IAsyncResult>で&1; 回だけ呼び出す必要があります。       EndWrite は、I/O 操作が完了するまでブロックされます。"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "保留中非同期 I/O の要求を終了します。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  id: Flush
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: IsolatedStorageFileStream.Flush()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "このストリームのバッファーをクリアし、ファイルに書き込まれるバッファー内のデータ。"
  remarks: "読み取りまたは書き込みのいずれかのバッファーを使用できますが、両方ではなく、同時にフラッシュされているために、2 つの関数を実行します。 最初に、以前にバッファーに書き込まれたすべてのデータがファイルにコピーされ、バッファーをクリアします。 場合は、2 番目<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>は`true`とデータが以前の読み取りにバッファーをファイルからコピー、ファイル内の現在位置が、バッファー内の未読のバイト数だけデクリメントします</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>。 バッファーをクリアし、します。       使用して、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29>バッファリングされたすべてのデータの中間ファイル バッファーのことを確認するときのメソッドのオーバー ロードが記述されたディスクにします</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush%28System.Boolean%29>。"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  id: Flush(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Flush(Boolean)
  nameWithType: IsolatedStorageFileStream.Flush(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "このストリームのバッファーをクリアし、ファイルに書き込まれるバッファー内のデータし、もすべての中間ファイル バッファーをクリアします。"
  remarks: "バッファリングされたすべてのデータの中間ファイル バッファーのことを確認する場合は、このオーバー ロードが書き込まれます使用してディスクにします。"
  syntax:
    content: public override void Flush (bool flushToDisk);
    parameters:
    - id: flushToDisk
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべての中間ファイル バッファーをフラッシュするにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  id: Handle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "ファイルのファイル ハンドルを取得、現在<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトによってカプセル化します。 このプロパティへのアクセスは許可されていません、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト、およびスロー、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageException&quot;></xref>です。"
  remarks: "詳細については、 <xref:System.IO.FileStream.Handle%2A>。</xref:System.IO.FileStream.Handle%2A>を参照してください。"
  example:
  - "The following code example demonstrates the Handle property.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_4_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/cpp/p-system.io.isolatedstor_4_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#4](~/add/codesnippet/csharp/p-system.io.isolatedstor_4_1.cs)]"
  syntax:
    content: public override IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "ファイルのファイル ハンドルを現在<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトによってカプセル化します。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "常に、ハンドル プロパティには、この例外が生成されます。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  id: IsAsync
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "示すブール値を取得するかどうか、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトが非同期的または同期的に開かれました。"
  remarks: "非同期<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream><xref:System.IO.FileStream>。</xref:System.IO.FileStream>とは異なり、オブジェクトを作成することはできません。</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> ただし、 <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>、 <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A>、 <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A>、および<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A>メソッドは、いくつかのパフォーマンスの低下との同期のインスタンスでサポートされています</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead%2A></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite%2A></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead%2A></xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite%2A>。"
  example:
  - "The following code example demonstrates how you can use the IsAsync property to verify that an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> is synchronous. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_7_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/cpp/p-system.io.isolatedstor_7_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#7](~/add/codesnippet/csharp/p-system.io.isolatedstor_7_1.cs)]"
  syntax:
    content: public override bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトが非同期アクセスをサポートしている、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  id: Length
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "長さを取得、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  remarks: "長さは、ファイルの現在のバイト数を表します。 分離ストレージのクォータで影響はありません。"
  example:
  - "The following code example demonstrates the Length property.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_6_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_6_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_6_1.cs)]"
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "長さ、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト (バイト単位)。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  id: Lock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Lock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "他のプロセスからの読み取りまたはストリームへの書き込みを禁止します。"
  remarks: "ファイル ストリームの範囲をロックすると、ファイル ストリームの範囲にロックのプロセスの排他アクセスのスレッドが与えられます。"
  syntax:
    content: public override void Lock (long position, long length);
    parameters:
    - id: position
      type: System.Int64
      description: "ロックする範囲の開始位置。 このパラメーターの値は、0 (ゼロ) 以上にする必要があります。"
    - id: length
      type: System.Int64
      description: "ロックするバイト数。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>position</code>または<code>length</code>が負の値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "ファイルは閉じられます。"
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "別のプロセスが、ファイルの一部をロックしているために、プロセスは、ファイルにアクセスできません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  id: Position
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "現在の現在の位置を取得または<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクト。"
  remarks: "このプロパティを設定する場合に有効、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>プロパティは`true`</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek%2A>。"
  example:
  - "The following code example uses the Position property to write data to a file.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/p-system.io.isolatedstor_0_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/p-system.io.isolatedstor_0_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/p-system.io.isolatedstor_0_1.cs)]"
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "現在位置<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクト。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "位置は、負の数を設定できません。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "現在のバッファー内のバイトをコピーする<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトを配列にします。"
  remarks: "`buffer`パラメーターのインスタンスであることができます、<xref:System.Buffer>クラス、または、次の種類の&1; つの配列<xref:System.Byte>、 <xref:System.SByte>、 <xref:System.Char>、 <xref:System.Int16>、 <xref:System.Int32>、 <xref:System.Int64>、 <xref:System.UInt16>、 <xref:System.UInt32>、 <xref:System.UInt64>、 <xref:System.Single>、または<xref:System.Double>。</xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.Char> </xref:System.SByte> </xref:System.Byte> </xref:System.Buffer> 。 `offset`パラメーターは、書き込み (バッファー内のインデックス) を開始する位置を示すバッファー内のバイトのオフセットと`count`パラメーターは現在のストリームから読み込まれるバイトの最大数を指定します。 ストリームの末尾に達した場合は、実際の数バイトを読み取り、または&0; を返されるです。 読み取り操作が成功した場合、ストリームの現在の位置は読み取られたバイト数で進められます。 例外が発生する場合は、ストリームの現在の位置は変更されません。       Read メソッドの処理、`buffer`パラメーターを実際の型に関係なく、バイトのブロックとして。 同様に、`offset`と`count`パラメーターは、常に、バイト単位で指定します。 `buffer`バイト配列以外のパラメーター、つまり、フォームの適切な値をバイト単位で要素のサイズによって、要素のインデックスを乗算する必要があります`offset`または`count`です。       ストリームの末尾に達した場合にのみ、Read メソッドは&0; を返します。 その他の場合は、読み取り常に少なくとも&1; バイトのストリームから読み取りを返す前にします。 データが利用できない場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>読み取りへの呼び出し時にオブジェクト、メソッドは、少なくとも&1; バイトのデータを返すことができるまでブロックします</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "読み取るバッファー。"
    - id: offset
      type: System.Int32
      description: "書き込みを開始する位置を示すバッファー内のオフセット。"
    - id: count
      type: System.Int32
      description: "読み取るバイトの最大数。"
    return:
      type: System.Int32
      description: "読み取られた合計バイト数、 <code> buffer</code>です。 要求したかどうかはバイト数が現在使用できるか、ストリームの末尾に達する場合は&0; をバイト数より小さくできます。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  id: ReadByte
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: IsolatedStorageFileStream.ReadByte()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "1 バイトを読み取り、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>分離ストレージ内のオブジェクト。"
  remarks: ''
  example:
  - "The following code example demonstrates how the ReadByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_13_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_13_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_13_1.cs)]"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "分離ストレージ ファイルから読み取られた 8 ビット符号なし整数値。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*
  exceptions: []
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  id: SafeFileHandle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "取得、 <xref href=&quot;Microsoft.Win32.SafeHandles.SafeFileHandle&quot;> </xref>ファイルのオペレーティング システム ファイル ハンドルを表すオブジェクトを現在<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトによってカプセル化します。"
  remarks: "SafeFileHandle プロパティはサポートされず、常に生成、<xref:System.IO.IsolatedStorage.IsolatedStorageException>例外です</xref:System.IO.IsolatedStorage.IsolatedStorageException>。"
  syntax:
    content: public override Microsoft.Win32.SafeHandles.SafeFileHandle SafeFileHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafeFileHandle
      description: "A <xref href=&quot;Microsoft.Win32.SafeHandles.SafeFileHandle&quot;> </xref>ファイルのオペレーティング システム ファイル ハンドルを表すオブジェクトを現在<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトによってカプセル化します。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "SafeFileHandle プロパティには、常に、この例外が生成されます。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "現在位置を設定<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>オブジェクトを指定した値にします。"
  remarks: "いくつか<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトは、ストリームの長さを超えた位置指定をサポート、他のユーザーここで例外がスローされます</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "新しい位置、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
    - id: origin
      type: System.IO.SeekOrigin
      description: "1 つ、<xref:System.IO.SeekOrigin>値</xref:System.IO.SeekOrigin>。"
    return:
      type: System.Int64
      description: "内の新しい位置、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> origin </code>のいずれかを指定する必要があります、<xref:System.IO.SeekOrigin>値</xref:System.IO.SeekOrigin>。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: IsolatedStorageFileStream.SetLength(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "この長さを設定<xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;></xref>を指定したオブジェクト<code> value</code>です。"
  remarks: "場合、指定した`value`が現在の長さより小さい、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト、ストリームが切り詰められています</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 場合、指定した`value`が現在の長さより大きく、ストリームのストリームが展開されています。 ストリームが展開されている場合、古いクライアント シークレットと新しい長さの間のストリームの内容は未定義です。 このメソッドを使用するために、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトは、書き込みとシークの両方をサポートする必要があります</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "新しい長さ、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>value</code>負の数です。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  id: Unlock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Unlock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "その他のプロセスを以前にロックされたファイルの全部または一部へのアクセスを許可します。"
  syntax:
    content: public override void Unlock (long position, long length);
    parameters:
    - id: position
      type: System.Int64
      description: "ロックを解除する範囲の開始位置。 このパラメーターの値は、0 (ゼロ) 以上にする必要があります。"
    - id: length
      type: System.Int64
      description: "ロックを解除するバイト数。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>position</code>または<code>length</code>が負の値。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "バイトのブロックを書き込みます、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクトのバイト配列から読み取ったデータを使用します。"
  remarks: "`offset`パラメーターはバイトのオフセット、`buffer`読み取りを開始する位置を示す、`count`パラメーターはこれに書き込まれるバイト数<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクト</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 現在の位置の書き込み操作が成功した場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトが書き込まれたバイト数で高度な</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。 例外が発生した、現在の位置の場合、<xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>オブジェクトは変更されません</xref:System.IO.IsolatedStorage.IsolatedStorageFileStream>。"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "書き込むバッファー。"
    - id: offset
      type: System.Int32
      description: "開始位置を示すバッファー内のバイト オフセット。"
    - id: count
      type: System.Int32
      description: "書き込むバイトの最大数。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "書き込み試行のクォータを超えています、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  platform:
  - net462
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.IO.IsolatedStorage
  summary: "1 バイトを書き込みます、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  remarks: ''
  example:
  - "The following code example demonstrates how the WriteByte method can be used to read data from an <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> object. For the complete context of this example, see the <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> overview.  \n  \n [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/visualbasic/m-system.io.isolatedstor_8_1.vb)]\n [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/cpp/m-system.io.isolatedstor_8_1.cpp)]\n [!code-cs[System.IO.IsolatedStorage.IsolatedStorage#14](~/add/codesnippet/csharp/m-system.io.isolatedstor_8_1.cs)]"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "分離ストレージ ファイルに書き込むバイト値。"
  overload: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*
  exceptions:
  - type: System.IO.IsolatedStorage.IsolatedStorageException
    commentId: T:System.IO.IsolatedStorage.IsolatedStorageException
    description: "書き込み試行のクォータを超えています、 <xref href=&quot;System.IO.IsolatedStorage.IsolatedStorageFileStream&quot;> </xref>オブジェクト。"
  platform:
  - net462
references:
- uid: System.IO.FileStream
  isExternal: false
  name: System.IO.FileStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IsolatedStorage.IsolatedStorageException
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageException
  nameWithType: IsolatedStorageException
  fullName: System.IO.IsolatedStorage.IsolatedStorageException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFile
  parent: System.IO.IsolatedStorage
  isExternal: false
  name: IsolatedStorageFile
  nameWithType: IsolatedStorageFile
  fullName: System.IO.IsolatedStorage.IsolatedStorageFile
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32,System.IO.IsolatedStorage.IsolatedStorageFile)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsolatedStorageFileStream(String,FileMode,FileAccess,FileShare,Int32,IsolatedStorageFile)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: IsolatedStorageFileStream.Dispose(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose(Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndRead(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead(IAsyncResult)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(System.IAsyncResult)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: IsolatedStorageFileStream.EndWrite(IAsyncResult)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite(IAsyncResult)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush()
  nameWithType: IsolatedStorageFileStream.Flush()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(System.Boolean)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush(Boolean)
  nameWithType: IsolatedStorageFileStream.Flush(Boolean)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush(Boolean)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Lock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Lock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock(Int64,Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read(Byte[],Int32,Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: IsolatedStorageFileStream.ReadByte()
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte()
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle
- uid: Microsoft.Win32.SafeHandles.SafeFileHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafeFileHandle
  nameWithType: SafeFileHandle
  fullName: Microsoft.Win32.SafeHandles.SafeFileHandle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: IsolatedStorageFileStream.SetLength(Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength(Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(System.Int64,System.Int64)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Unlock(Int64,Int64)
  nameWithType: IsolatedStorageFileStream.Unlock(Int64,Int64)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock(Int64,Int64)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write(Byte[],Int32,Int32)
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(System.Byte)
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: IsolatedStorageFileStream.WriteByte(Byte)
  fullName: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.#ctor*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsolatedStorageFileStream
  nameWithType: IsolatedStorageFileStream.IsolatedStorageFileStream
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginRead
  nameWithType: IsolatedStorageFileStream.BeginRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.BeginWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: IsolatedStorageFileStream.BeginWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanRead
  nameWithType: IsolatedStorageFileStream.CanRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanSeek*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanSeek
  nameWithType: IsolatedStorageFileStream.CanSeek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.CanWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: CanWrite
  nameWithType: IsolatedStorageFileStream.CanWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Dispose*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Dispose
  nameWithType: IsolatedStorageFileStream.Dispose
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndRead*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndRead
  nameWithType: IsolatedStorageFileStream.EndRead
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.EndWrite*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: EndWrite
  nameWithType: IsolatedStorageFileStream.EndWrite
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Flush*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Flush
  nameWithType: IsolatedStorageFileStream.Flush
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Handle*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Handle
  nameWithType: IsolatedStorageFileStream.Handle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.IsAsync*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: IsAsync
  nameWithType: IsolatedStorageFileStream.IsAsync
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Length*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Length
  nameWithType: IsolatedStorageFileStream.Length
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Lock*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Lock
  nameWithType: IsolatedStorageFileStream.Lock
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Position*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Position
  nameWithType: IsolatedStorageFileStream.Position
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Read*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Read
  nameWithType: IsolatedStorageFileStream.Read
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.ReadByte*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: ReadByte
  nameWithType: IsolatedStorageFileStream.ReadByte
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SafeFileHandle*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SafeFileHandle
  nameWithType: IsolatedStorageFileStream.SafeFileHandle
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Seek*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Seek
  nameWithType: IsolatedStorageFileStream.Seek
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.SetLength*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: SetLength
  nameWithType: IsolatedStorageFileStream.SetLength
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Unlock*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Unlock
  nameWithType: IsolatedStorageFileStream.Unlock
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.Write*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: Write
  nameWithType: IsolatedStorageFileStream.Write
- uid: System.IO.IsolatedStorage.IsolatedStorageFileStream.WriteByte*
  parent: System.IO.IsolatedStorage.IsolatedStorageFileStream
  isExternal: false
  name: WriteByte
  nameWithType: IsolatedStorageFileStream.WriteByte
