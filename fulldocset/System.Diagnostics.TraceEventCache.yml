### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceEventCache
  id: TraceEventCache
  children:
  - System.Diagnostics.TraceEventCache.#ctor
  - System.Diagnostics.TraceEventCache.Callstack
  - System.Diagnostics.TraceEventCache.DateTime
  - System.Diagnostics.TraceEventCache.LogicalOperationStack
  - System.Diagnostics.TraceEventCache.ProcessId
  - System.Diagnostics.TraceEventCache.ThreadId
  - System.Diagnostics.TraceEventCache.Timestamp
  langs:
  - csharp
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
  type: Class
  summary: "スレッドおよびプロセスに固有のトレース イベント データを提供します。"
  remarks: "> [!NOTE]>、TraceEventCache クラス トレース リスナーの呼び出しのパフォーマンスを最適化として設計されていますが、カスタム トレース リスナーを作成する開発者にのみ関連します。       TraceEventCache クラスは、トレース イベントのソースを正確に識別するトレース メソッドでパラメーターとして使用されます。 <xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName> <xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName>。</xref:System.Diagnostics.TraceFilter.ShouldTrace%2A?displayProperty=fullName> </xref:System.Diagnostics.TraceListener.TraceEvent%2A?displayProperty=fullName> TraceEventCache を使用する方法の例には <xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>プロパティには関連するトレースとトレースを関連付けるために使用できるデータが含まれています</xref:System.Diagnostics.TraceEventCache.LogicalOperationStack%2A>。"
  syntax:
    content: public class TraceEventCache
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.#ctor
  id: '#ctor'
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref>クラスです。"
  syntax:
    content: public TraceEventCache ();
    parameters: []
  overload: System.Diagnostics.TraceEventCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Callstack
  id: Callstack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "現在のスレッドの呼び出し履歴を取得します。"
  remarks: "呼び出し履歴のプロパティは、<xref:System.Environment.StackTrace%2A><xref:System.Environment>クラス</xref:System.Environment>のプロパティ</xref:System.Environment.StackTrace%2A>から、呼び出し履歴を取得します。 プロパティの値では、メソッド呼び出し時間においてこの順に一覧表示します。 つまり、最新のメソッド呼び出しが最初に記述します。 スタックの各メソッド呼び出しのスタック トレース情報の&1; つの行が表示されます。 詳細については、 <xref:System.Environment.StackTrace%2A>。</xref:System.Environment.StackTrace%2A>を参照してください。"
  syntax:
    content: public string Callstack { get; }
    return:
      type: System.String
      description: "スタック トレース情報を含む文字列。 この値は空の文字列を指定できます (&quot;&quot;) です。"
  overload: System.Diagnostics.TraceEventCache.Callstack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.DateTime
  id: DateTime
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "イベントのトレースが発生した日時を取得します。"
  remarks: "プロパティのインスタンスへのアクセスが初めて、<xref:System.Diagnostics.TraceEventCache>クラス、現在の時刻が返されます</xref:System.Diagnostics.TraceEventCache>。 その同じインスタンス内でこのプロパティの後続のクエリを返す<xref:System.DateTime>値、タイムスタンプとして使用することができる</xref:System.DateTime>。"
  syntax:
    content: public DateTime DateTime { get; }
    return:
      type: System.DateTime
      description: "A<xref:System.DateTime>値が日付と時刻を世界協定時刻 (UTC) で表されます</xref:System.DateTime>。"
  overload: System.Diagnostics.TraceEventCache.DateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  id: LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "スタックに格納されている、関連付けデータを取得します。"
  remarks: "関連付けデータは、名前&quot;System.Diagnostics.Trace.CorrelationManagerSlot&quot;の呼び出しのコンテキスト内のオブジェクトとして格納されます。 <xref:System.Diagnostics.CorrelationManager>クラスはスレッド バインド コンテキストに論理操作の id を格納し、タグ ストアドの id を持つスレッドによって生成される各トレース イベントを自動的に使用されるメソッドを提供します</xref:System.Diagnostics.CorrelationManager>。 <xref:System.Diagnostics.CorrelationManager>を通じてアクセス、<xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName>プロパティ</xref:System.Diagnostics.Trace.CorrelationManager%2A?displayProperty=fullName></xref:System.Diagnostics.CorrelationManager>。 呼び出しごとに、<xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A>メソッド プッシュ、スタック上に新しい論理操作の id</xref:System.Diagnostics.CorrelationManager.StartLogicalOperation%2A> 。 <xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>メソッドは、スタックから論理操作の id を表示</xref:System.Diagnostics.CorrelationManager.StopLogicalOperation%2A>するには、各呼び出し"
  syntax:
    content: public System.Collections.Stack LogicalOperationStack { get; }
    return:
      type: System.Collections.Stack
      description: "A <xref href=&quot;System.Collections.Stack&quot;> </xref>相関関係データを格納します。"
  overload: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ProcessId
  id: ProcessId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "現在のプロセスの一意の識別子を取得します。"
  remarks: "プロセスが終了するまでプロセス識別子は、システム全体でプロセスを一意に識別します。"
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: "システムによって生成された一意の識別子、現在のプロセス。"
  overload: System.Diagnostics.TraceEventCache.ProcessId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.ThreadId
  id: ThreadId
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "現在のマネージ スレッドの一意の識別子を取得します。"
  remarks: "スレッド識別子の値は、<xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>プロパティが文字列として書式設定します</xref:System.Threading.Thread.ManagedThreadId%2A?displayProperty=fullName>。"
  syntax:
    content: public string ThreadId { get; }
    return:
      type: System.String
      description: "このマネージ スレッドの一意の整数識別子を表す文字列。"
  overload: System.Diagnostics.TraceEventCache.ThreadId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceEventCache.Timestamp
  id: Timestamp
  parent: System.Diagnostics.TraceEventCache
  langs:
  - csharp
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "タイマー機構の現在のタイマー刻みの数を取得します。"
  remarks: "Get アクセサーの呼び出し、<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName>タイムスタンプを取得するメソッド</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A?displayProperty=fullName>。 場合、<xref:System.Diagnostics.Stopwatch>クラスは、高解像度のパフォーマンス カウンターを使用して<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>そのカウンターの現在の値を返します</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A></xref:System.Diagnostics.Stopwatch>。 場合の<xref:System.Diagnostics.Stopwatch>クラスは、システム タイマーを<xref:System.Diagnostics.Stopwatch.GetTimestamp%2A><xref:System.DateTime.Ticks%2A><xref:System.DateTime.Now%2A?displayProperty=fullName>.</xref:System.DateTime.Now%2A?displayProperty=fullName>のプロパティ</xref:System.DateTime.Ticks%2A>を返します</xref:System.Diagnostics.Stopwatch.GetTimestamp%2A>を使用して</xref:System.Diagnostics.Stopwatch>"
  syntax:
    content: public long Timestamp { get; }
    return:
      type: System.Int64
      description: "基になるタイマー機構のタイマー刻みカウンター値。"
  overload: System.Diagnostics.TraceEventCache.Timestamp*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Diagnostics.TraceEventCache.#ctor
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache()
  nameWithType: TraceEventCache.TraceEventCache()
  fullName: System.Diagnostics.TraceEventCache.TraceEventCache()
- uid: System.Diagnostics.TraceEventCache.Callstack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
  fullName: System.Diagnostics.TraceEventCache.Callstack
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceEventCache.DateTime
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
  fullName: System.Diagnostics.TraceEventCache.DateTime
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
  fullName: System.Diagnostics.TraceEventCache.LogicalOperationStack
- uid: System.Collections.Stack
  parent: System.Collections
  isExternal: false
  name: Stack
  nameWithType: Stack
  fullName: System.Collections.Stack
- uid: System.Diagnostics.TraceEventCache.ProcessId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
  fullName: System.Diagnostics.TraceEventCache.ProcessId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceEventCache.ThreadId
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
  fullName: System.Diagnostics.TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
  fullName: System.Diagnostics.TraceEventCache.Timestamp
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.TraceEventCache.#ctor*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache.TraceEventCache
- uid: System.Diagnostics.TraceEventCache.Callstack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Callstack
  nameWithType: TraceEventCache.Callstack
- uid: System.Diagnostics.TraceEventCache.DateTime*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: DateTime
  nameWithType: TraceEventCache.DateTime
- uid: System.Diagnostics.TraceEventCache.LogicalOperationStack*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: LogicalOperationStack
  nameWithType: TraceEventCache.LogicalOperationStack
- uid: System.Diagnostics.TraceEventCache.ProcessId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ProcessId
  nameWithType: TraceEventCache.ProcessId
- uid: System.Diagnostics.TraceEventCache.ThreadId*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: ThreadId
  nameWithType: TraceEventCache.ThreadId
- uid: System.Diagnostics.TraceEventCache.Timestamp*
  parent: System.Diagnostics.TraceEventCache
  isExternal: false
  name: Timestamp
  nameWithType: TraceEventCache.Timestamp
