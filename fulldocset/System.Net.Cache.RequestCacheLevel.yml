### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.RequestCacheLevel
  id: RequestCacheLevel
  children:
  - System.Net.Cache.RequestCacheLevel.BypassCache
  - System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.RequestCacheLevel.CacheOnly
  - System.Net.Cache.RequestCacheLevel.Default
  - System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.RequestCacheLevel.Reload
  - System.Net.Cache.RequestCacheLevel.Revalidate
  langs:
  - csharp
  name: RequestCacheLevel
  nameWithType: RequestCacheLevel
  fullName: System.Net.Cache.RequestCacheLevel
  type: Enum
  summary: "使用して取得したリソースのキャッシュ動作を指定<xref:System.Net.WebRequest>とその派生クラス</xref:System.Net.WebRequest>。"
  remarks: "この列挙体のメンバーは、初期化に使用される<xref:System.Net.Cache.RequestCachePolicy>オブジェクト</xref:System.Net.Cache.RequestCachePolicy>。 現在の設定、<xref:System.Net.Cache.RequestCachePolicy>オブジェクトがで使用できる、<xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName>プロパティ</xref:System.Net.Cache.HttpRequestCachePolicy.Level%2A?displayProperty=fullName></xref:System.Net.Cache.RequestCachePolicy>。       これは、<xref:System.Net.Cache.HttpRequestCacheLevel>値は、.NET Framework に付属しているコンピューターの構成ファイルで指定された既定のキャッシュ動作</xref:System.Net.Cache.HttpRequestCacheLevel>。 エントリがないはキャッシュから取得、キャッシュに追加や、クライアントとサーバー間のキャッシュから削除します。       <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>プロパティを取得または設定の既定のキャッシュ ポリシーを使用<xref:System.Net.HttpWebRequest>インスタンス</xref:System.Net.HttpWebRequest></xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>。 <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>プロパティを取得または設定の既定のキャッシュ ポリシーを使用する<xref:System.Net.WebRequest>インスタンス</xref:System.Net.WebRequest></xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>。 <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>を取得または特定の要求のキャッシュ ポリシーを設定するプロパティを使用します</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>。       リソースの応答ストリームが取得され、ストリームの末尾に読み込まれる場合、リソースのコピーはキャッシュに追加だけです。 同じリソースに対して別の要求は、この要求の既定のキャッシュ ポリシー レベルに応じて、キャッシュされたコピーを使用できます。"
  example:
  - "The following code example creates policy that returns a resource only if it is in the cache.  \n  \n [!code-cpp[NclSimpleCache#13](~/add/codesnippet/cpp/t-system.net.cache.reque_0_1.cpp)]\n [!code-cs[NclSimpleCache#13](~/add/codesnippet/csharp/t-system.net.cache.reque_0_1.cs)]"
  syntax:
    content: public enum RequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: RequestCacheLevel.BypassCache
  fullName: System.Net.Cache.RequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "サーバーを使用して要求に応じます。 エントリがないはキャッシュから取得、キャッシュに追加や、クライアントとサーバー間のキャッシュから削除します。 これは、.NET Framework に付属しているコンピューターの構成ファイルで指定された既定のキャッシュ動作です。"
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: RequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "リソースがある場合、キャッシュからのリソースの要求に応じます。それ以外の場合、サーバーをリソースの要求を送信します。 要求された項目がある場合、クライアントとサーバー間の任意のキャッシュには、中間のキャッシュによって、要求を満たす可能性があります。"
  remarks: "リソースの応答ストリームが取得され、ストリームの末尾に読み込まれる場合、要求されたリソースのコピーはキャッシュに追加だけです。 同じリソースに対して、後続の要求では、キャッシュされたコピーを使用します。"
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: RequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "ローカルにキャッシュされたリソースを使用して、要求を満たすアイテムをキャッシュに含まれていない要求を送信しません。 このキャッシュ ポリシー レベルを指定すると、<xref:System.Net.WebException>項目がクライアント キャッシュにない場合、例外がスローされます</xref:System.Net.WebException>。"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: RequestCacheLevel.Default
  fullName: System.Net.Cache.RequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "キャッシュされたリソースのコピーを使用するか、サーバーにリソースの要求を送信することによって、リソースの要求に応じます。 実行されるアクションは、現在のキャッシュ ポリシーとキャッシュ内のコンテンツの年齢によって決まります。 これは、ほとんどのアプリケーションで使用されるキャッシュ レベルです。"
  syntax:
    content: Default
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: RequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "キャッシュからリソースを使用して、要求を満たすことはありませんし、リソースをキャッシュしません。 リソースがローカル キャッシュに存在する場合は削除されます。 このポリシー レベルは、リソースを削除しなければならないことを中間キャッシュを示します。 HTTP プロトコルをキャッシュする場合、これを使用して実現、 <xref uid=&quot;langword_csharp_no-cache&quot; name=&quot;no-cache&quot; href=&quot;&quot;> </xref>キャッシュ制御ディレクティブです。"
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: RequestCacheLevel.Reload
  fullName: System.Net.Cache.RequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "サーバーを使用して要求に応じます。 応答は、キャッシュに保存する可能性があります。 HTTP プロトコルをキャッシュする場合、これを使用して実現、 <xref uid=&quot;langword_csharp_no-cache&quot; name=&quot;no-cache&quot; href=&quot;&quot;> </xref>キャッシュ制御ディレクティブとキャッシュなし<xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;></xref>ヘッダー。"
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.RequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.RequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: RequestCacheLevel.Revalidate
  fullName: System.Net.Cache.RequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "タイムスタンプは、サーバー上のリソースのタイムスタンプと同じ場合は、キャッシュされたリソースのコピーを使用して、要求に応じます。それ以外の場合、リソースはサーバーからダウンロード、呼び出し元に表示される、キャッシュに格納されています。"
  remarks: "リソースの応答ストリームが取得され、ストリームの末尾に読み込まれる場合、リソースのコピーはキャッシュに追加だけです。 同じリソースに対して、後続の要求は、キャッシュされたリソースのタイムスタンプは、サーバー上のリソースのタイムスタンプと同じ場合、キャッシュされたコピーを使用します。"
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.RequestCacheLevel
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.RequestCacheLevel.BypassCache
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: RequestCacheLevel.BypassCache
  fullName: System.Net.Cache.RequestCacheLevel.BypassCache
- uid: System.Net.Cache.RequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: RequestCacheLevel
  nameWithType: RequestCacheLevel
  fullName: System.Net.Cache.RequestCacheLevel
- uid: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: RequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.RequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.RequestCacheLevel.CacheOnly
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: RequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.RequestCacheLevel.CacheOnly
- uid: System.Net.Cache.RequestCacheLevel.Default
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: RequestCacheLevel.Default
  fullName: System.Net.Cache.RequestCacheLevel.Default
- uid: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: RequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.RequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.RequestCacheLevel.Reload
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: RequestCacheLevel.Reload
  fullName: System.Net.Cache.RequestCacheLevel.Reload
- uid: System.Net.Cache.RequestCacheLevel.Revalidate
  parent: System.Net.Cache.RequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: RequestCacheLevel.Revalidate
  fullName: System.Net.Cache.RequestCacheLevel.Revalidate
