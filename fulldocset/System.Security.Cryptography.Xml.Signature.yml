### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.Signature
  id: Signature
  children:
  - System.Security.Cryptography.Xml.Signature.#ctor
  - System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  - System.Security.Cryptography.Xml.Signature.GetXml
  - System.Security.Cryptography.Xml.Signature.Id
  - System.Security.Cryptography.Xml.Signature.KeyInfo
  - System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  - System.Security.Cryptography.Xml.Signature.ObjectList
  - System.Security.Cryptography.Xml.Signature.SignatureValue
  - System.Security.Cryptography.Xml.Signature.SignedInfo
  langs:
  - csharp
  name: Signature
  nameWithType: Signature
  fullName: System.Security.Cryptography.Xml.Signature
  type: Class
  summary: "表す、 <xref uid=&quot;langword_csharp_&lt;Signature&gt;&quot; name=&quot;&lt;Signature&gt;&quot; href=&quot;&quot;> </xref> XML 署名の要素。"
  remarks: "クラスには、署名、 `Signature`> XML デジタル署名の仕様によって定義された XML 署名の要素。 `Signature`> 要素は、XML デジタル署名のルート要素です。 <xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>、 <xref:System.Security.Cryptography.Xml.Signature.SignatureValue%2A>、 <xref:System.Security.Cryptography.Xml.Signature.KeyInfo%2A>、および<xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A>プロパティのサブ要素をカプセル化、 `Signature`> 要素</xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A></xref:System.Security.Cryptography.Xml.Signature.KeyInfo%2A></xref:System.Security.Cryptography.Xml.Signature.SignatureValue%2A></xref:System.Security.Cryptography.Xml.Signature.SignedInfo%2A>。       詳細については、 `Signature`> 要素を参照してください、W3C の仕様 www.w3.org/TR/xmldsig-core/ にします。"
  example:
  - "The following code example uses the Signature class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/t-system.security.crypto_63_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/t-system.security.crypto_63_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/t-system.security.crypto_63_1.cpp)]  \n  \n The following code example uses the Signature class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/t-system.security.crypto_63_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/t-system.security.crypto_63_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/t-system.security.crypto_63_2.vb)]"
  syntax:
    content: public class Signature
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: Signature()
  nameWithType: Signature.Signature()
  fullName: System.Security.Cryptography.Xml.Signature.Signature()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/m-system.security.crypto_70_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/m-system.security.crypto_70_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/m-system.security.crypto_70_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/m-system.security.crypto_70_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/m-system.security.crypto_70_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/m-system.security.crypto_70_2.vb)]"
  syntax:
    content: public Signature ();
    parameters: []
  overload: System.Security.Cryptography.Xml.Signature.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  id: AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: AddObject(DataObject)
  nameWithType: Signature.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.Signature.AddObject(DataObject)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "追加、 <xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>に署名するオブジェクトの一覧にします。"
  remarks: "AddObject メソッドを追加、<xref:System.Security.Cryptography.Xml.DataObject>を使用してアクセスされるコレクションにオブジェクトを<xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A>プロパティ</xref:System.Security.Cryptography.Xml.Signature.ObjectList%2A></xref:System.Security.Cryptography.Xml.DataObject>。"
  syntax:
    content: public void AddObject (System.Security.Cryptography.Xml.DataObject dataObject);
    parameters:
    - id: dataObject
      type: System.Security.Cryptography.Xml.DataObject
      description: "<xref href=&quot;System.Security.Cryptography.Xml.DataObject&quot;> </xref>に署名するオブジェクトの一覧に追加します。"
  overload: System.Security.Cryptography.Xml.Signature.AddObject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: GetXml()
  nameWithType: Signature.GetXml()
  fullName: System.Security.Cryptography.Xml.Signature.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "XML 表現を返します、 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "XML 表現、 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Signature.GetXml*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -or-       The <>*> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.Id
  id: Id
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: Id
  nameWithType: Signature.Id
  fullName: System.Security.Cryptography.Xml.Signature.Id
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "現在の ID を取得または<xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。"
  remarks: "文字列 ID が現在の XML 表現を追加する、Id プロパティを使用して<xref:System.Security.Cryptography.Xml.Signature>要素</xref:System.Security.Cryptography.Xml.Signature>。 ID が使用される参照を<xref:System.Security.Cryptography.Xml.Signature>別の場所から</xref:System.Security.Cryptography.Xml.Signature>。"
  syntax:
    content: public string Id { get; set; }
    return:
      type: System.String
      description: "現在の ID <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Cryptography.Xml.Signature.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo
  id: KeyInfo
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: System.Security.Cryptography.Xml.Signature.KeyInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;> </xref> 、現在の<xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。"
  remarks: "必要な KeyInfo プロパティは、<xref:System.Security.Cryptography.Xml.KeyInfo>を表すオブジェクト、 `KeyInfo`> XML デジタル署名の要素</xref:System.Security.Cryptography.Xml.KeyInfo>。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_0_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_0_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_0_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_0_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_0_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_0_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.KeyInfo
      description: "The <xref href=&quot;System.Security.Cryptography.Xml.KeyInfo&quot;></xref> of the current <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Signature.KeyInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: Signature.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Signature.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "読み込み、 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref>状態の XML 要素からです。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "読み込み元の XML 要素、 <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;> </xref>状態です。"
  overload: System.Security.Cryptography.Xml.Signature.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "<code> value </code>パラメーターが有効な含まれていない<> *> です。      - または -、 <code> value </code>パラメーターが有効な含まれていない<> *> です。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.ObjectList
  id: ObjectList
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: ObjectList
  nameWithType: Signature.ObjectList
  fullName: System.Security.Cryptography.Xml.Signature.ObjectList
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または署名するオブジェクトの一覧を設定します。"
  remarks: "ObjectList プロパティのコレクションを使用して<xref:System.Security.Cryptography.Xml.DataObject>を表すオブジェクト、 `Object`> XML デジタル署名のタグ</xref:System.Security.Cryptography.Xml.DataObject>。       追加することも、<xref:System.Security.Cryptography.Xml.DataObject>を使用してこのコレクションに、<xref:System.Security.Cryptography.Xml.Signature.AddObject%2A>メソッド</xref:System.Security.Cryptography.Xml.Signature.AddObject%2A></xref:System.Security.Cryptography.Xml.DataObject>。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  syntax:
    content: public System.Collections.IList ObjectList { get; set; }
    return:
      type: System.Collections.IList
      description: "署名されるオブジェクトの一覧。"
  overload: System.Security.Cryptography.Xml.Signature.ObjectList*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue
  id: SignatureValue
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: System.Security.Cryptography.Xml.Signature.SignatureValue
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得またはデジタル署名の値を設定します。"
  remarks: "SignatureValue プロパティを表すバイト配列を使用して、 `SignatureValue`> 内に含まれる XML デジタル署名の要素。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  syntax:
    content: public byte[] SignatureValue { get; set; }
    return:
      type: System.Byte[]
      description: "デジタル署名の値を格納するバイト配列。"
  overload: System.Security.Cryptography.Xml.Signature.SignatureValue*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo
  id: SignedInfo
  parent: System.Security.Cryptography.Xml.Signature
  langs:
  - csharp
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: System.Security.Cryptography.Xml.Signature.SignedInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、 <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;> </xref> 、現在の<xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>です。"
  remarks: "SignedInfo プロパティは、<xref:System.Security.Cryptography.Xml.SignedInfo>を表すクラス、 `SignedInfo`> 内に含まれる XML デジタル署名の要素</xref:System.Security.Cryptography.Xml.SignedInfo>。       XML デジタル署名の詳細については、www.w3.org/TR/xmldsig-core/ に W3C の仕様を参照してください。"
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign and verify an XML document using an envelope signature.  \n  \n [!code-cs[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/csharp/p-system.security.crypto_93_1.cs)]\n [!code-vb[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/visualbasic/p-system.security.crypto_93_1.vb)]\n [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/add/codesnippet/cpp/p-system.security.crypto_93_1.cpp)]  \n  \n The following code example uses the <xref:System.Security.Cryptography.Xml.Signature> class with the <xref:System.Security.Cryptography.Xml.SignedXml> class to sign an object and verify an XML document using a detached signature.  \n  \n [!code-cpp[XMLDSIG - Signature - Detached#1](~/add/codesnippet/cpp/p-system.security.crypto_93_2.cpp)]\n [!code-cs[XMLDSIG - Signature - Detached#1](~/add/codesnippet/csharp/p-system.security.crypto_93_2.cs)]\n [!code-vb[XMLDSIG - Signature - Detached#1](~/add/codesnippet/visualbasic/p-system.security.crypto_93_2.vb)]"
  syntax:
    content: public System.Security.Cryptography.Xml.SignedInfo SignedInfo { get; set; }
    return:
      type: System.Security.Cryptography.Xml.SignedInfo
      description: "The <xref href=&quot;System.Security.Cryptography.Xml.SignedInfo&quot;></xref> of the current <xref href=&quot;System.Security.Cryptography.Xml.Signature&quot;></xref>."
  overload: System.Security.Cryptography.Xml.Signature.SignedInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.Signature.#ctor
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Signature()
  nameWithType: Signature.Signature()
  fullName: System.Security.Cryptography.Xml.Signature.Signature()
- uid: System.Security.Cryptography.Xml.Signature.AddObject(System.Security.Cryptography.Xml.DataObject)
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: AddObject(DataObject)
  nameWithType: Signature.AddObject(DataObject)
  fullName: System.Security.Cryptography.Xml.Signature.AddObject(DataObject)
- uid: System.Security.Cryptography.Xml.DataObject
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: DataObject
  nameWithType: DataObject
  fullName: System.Security.Cryptography.Xml.DataObject
- uid: System.Security.Cryptography.Xml.Signature.GetXml
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: GetXml()
  nameWithType: Signature.GetXml()
  fullName: System.Security.Cryptography.Xml.Signature.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.Signature.Id
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Id
  nameWithType: Signature.Id
  fullName: System.Security.Cryptography.Xml.Signature.Id
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: KeyInfo
  nameWithType: Signature.KeyInfo
  fullName: System.Security.Cryptography.Xml.Signature.KeyInfo
- uid: System.Security.Cryptography.Xml.KeyInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: KeyInfo
  nameWithType: KeyInfo
  fullName: System.Security.Cryptography.Xml.KeyInfo
- uid: System.Security.Cryptography.Xml.Signature.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: Signature.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.Signature.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.Signature.ObjectList
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: ObjectList
  nameWithType: Signature.ObjectList
  fullName: System.Security.Cryptography.Xml.Signature.ObjectList
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignatureValue
  nameWithType: Signature.SignatureValue
  fullName: System.Security.Cryptography.Xml.Signature.SignatureValue
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignedInfo
  nameWithType: Signature.SignedInfo
  fullName: System.Security.Cryptography.Xml.Signature.SignedInfo
- uid: System.Security.Cryptography.Xml.SignedInfo
  parent: System.Security.Cryptography.Xml
  isExternal: false
  name: SignedInfo
  nameWithType: SignedInfo
  fullName: System.Security.Cryptography.Xml.SignedInfo
- uid: System.Security.Cryptography.Xml.Signature.#ctor*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Signature
  nameWithType: Signature.Signature
- uid: System.Security.Cryptography.Xml.Signature.AddObject*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: AddObject
  nameWithType: Signature.AddObject
- uid: System.Security.Cryptography.Xml.Signature.GetXml*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: GetXml
  nameWithType: Signature.GetXml
- uid: System.Security.Cryptography.Xml.Signature.Id*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: Id
  nameWithType: Signature.Id
- uid: System.Security.Cryptography.Xml.Signature.KeyInfo*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: KeyInfo
  nameWithType: Signature.KeyInfo
- uid: System.Security.Cryptography.Xml.Signature.LoadXml*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: LoadXml
  nameWithType: Signature.LoadXml
- uid: System.Security.Cryptography.Xml.Signature.ObjectList*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: ObjectList
  nameWithType: Signature.ObjectList
- uid: System.Security.Cryptography.Xml.Signature.SignatureValue*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignatureValue
  nameWithType: Signature.SignatureValue
- uid: System.Security.Cryptography.Xml.Signature.SignedInfo*
  parent: System.Security.Cryptography.Xml.Signature
  isExternal: false
  name: SignedInfo
  nameWithType: Signature.SignedInfo
