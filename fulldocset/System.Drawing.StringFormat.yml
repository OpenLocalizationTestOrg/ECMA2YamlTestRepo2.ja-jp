### YamlMime:ManagedReference
items:
- uid: System.Drawing.StringFormat
  id: StringFormat
  children:
  - System.Drawing.StringFormat.#ctor
  - System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)
  - System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)
  - System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)
  - System.Drawing.StringFormat.Alignment
  - System.Drawing.StringFormat.Clone
  - System.Drawing.StringFormat.DigitSubstitutionLanguage
  - System.Drawing.StringFormat.DigitSubstitutionMethod
  - System.Drawing.StringFormat.Dispose
  - System.Drawing.StringFormat.Finalize
  - System.Drawing.StringFormat.FormatFlags
  - System.Drawing.StringFormat.GenericDefault
  - System.Drawing.StringFormat.GenericTypographic
  - System.Drawing.StringFormat.GetTabStops(System.Single@)
  - System.Drawing.StringFormat.HotkeyPrefix
  - System.Drawing.StringFormat.LineAlignment
  - System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)
  - System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])
  - System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])
  - System.Drawing.StringFormat.ToString
  - System.Drawing.StringFormat.Trimming
  langs:
  - csharp
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
  type: Class
  summary: "(省略記号の挿入や国別の数字の置換) はテキスト レイアウトの配置、方向、タブ ストップなどの情報の表示方法、および OpenType 機能をカプセル化します。 このクラスは継承できません。"
  remarks: "多くの一般的な形式は、提供、<xref:System.Drawing.StringFormatFlags>列挙体です</xref:System.Drawing.StringFormatFlags>。 StringFormat オブジェクトを変更することができます。"
  syntax:
    content: 'public sealed class StringFormat : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.StringFormat.#ctor
  id: '#ctor'
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: StringFormat()
  nameWithType: StringFormat.StringFormat()
  fullName: System.Drawing.StringFormat.StringFormat()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "次の表は、<xref:System.Drawing.StringFormat>クラス</xref:System.Drawing.StringFormat>のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |FormatFlags |&0; (フラグが設定されていない) |  |<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix>|</xref:System.Drawing.Text.HotkeyPrefix></xref:System.Drawing.StringFormat.HotkeyPrefix%2A>"
  syntax:
    content: public StringFormat ();
    parameters: []
  overload: System.Drawing.StringFormat.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)
  id: '#ctor(System.Drawing.StringFormat)'
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: StringFormat(StringFormat)
  nameWithType: StringFormat.StringFormat(StringFormat)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormat)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクトから指定した既存<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following code example demonstrates the following members:  \n  \n-   <xref:System.Drawing.Rectangle.%23ctor%2A>  \n  \n-   <xref:System.Drawing.StringFormat.%23ctor%2A>  \n  \n-   StringFormat  \n  \n-   <xref:System.Drawing.StringFormat.Alignment%2A>  \n  \n-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  \n  \n-   <xref:System.Drawing.StringAlignment>  \n  \n-   <xref:System.Drawing.StringFormatFlags>  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#1](~/add/codesnippet/csharp/m-system.drawing.stringf_1_1.cs)]\n [!code-vb[System.Drawing.Misc2#1](~/add/codesnippet/visualbasic/m-system.drawing.stringf_1_1.vb)]\n [!code-cpp[System.Drawing.Misc2#1](~/add/codesnippet/cpp/m-system.drawing.stringf_1_1.cpp)]"
  syntax:
    content: public StringFormat (System.Drawing.StringFormat format);
    parameters:
    - id: format
      type: System.Drawing.StringFormat
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>オブジェクトから新しいを初期化する<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  overload: System.Drawing.StringFormat.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>format</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)
  id: '#ctor(System.Drawing.StringFormatFlags)'
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: StringFormat(StringFormatFlags)
  nameWithType: StringFormat.StringFormat(StringFormatFlags)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormatFlags)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.StringFormat&quot;></xref>指定したオブジェクト<xref href=&quot;System.Drawing.StringFormatFlags&quot;></xref>列挙します。"
  remarks: ''
  example:
  - "The following code example demonstrates the following members:  \n  \n-   <xref:System.Drawing.Rectangle.%23ctor%2A>  \n  \n-   StringFormat  \n  \n-   <xref:System.Drawing.StringFormat.%23ctor%2A>  \n  \n-   <xref:System.Drawing.StringFormat.Alignment%2A>  \n  \n-   <xref:System.Drawing.StringFormat.LineAlignment%2A>  \n  \n-   <xref:System.Drawing.StringAlignment>  \n  \n-   <xref:System.Drawing.StringFormatFlags>  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#1](~/add/codesnippet/csharp/m-system.drawing.stringf_2_1.cs)]\n [!code-vb[System.Drawing.Misc2#1](~/add/codesnippet/visualbasic/m-system.drawing.stringf_2_1.vb)]\n [!code-cpp[System.Drawing.Misc2#1](~/add/codesnippet/cpp/m-system.drawing.stringf_2_1.cpp)]"
  syntax:
    content: public StringFormat (System.Drawing.StringFormatFlags options);
    parameters:
    - id: options
      type: System.Drawing.StringFormatFlags
      description: "<xref href=&quot;System.Drawing.StringFormatFlags&quot;> </xref>新しい列挙<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  overload: System.Drawing.StringFormat.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)
  id: '#ctor(System.Drawing.StringFormatFlags,System.Int32)'
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: StringFormat(StringFormatFlags,Int32)
  nameWithType: StringFormat.StringFormat(StringFormatFlags,Int32)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormatFlags,Int32)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.StringFormat&quot;></xref>指定したオブジェクト<xref href=&quot;System.Drawing.StringFormatFlags&quot;></xref>列挙体および言語です。"
  syntax:
    content: public StringFormat (System.Drawing.StringFormatFlags options, int language);
    parameters:
    - id: options
      type: System.Drawing.StringFormatFlags
      description: "<xref href=&quot;System.Drawing.StringFormatFlags&quot;> </xref>新しい列挙<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
    - id: language
      type: System.Int32
      description: "テキストの言語を示す値です。"
  overload: System.Drawing.StringFormat.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.Alignment
  id: Alignment
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: Alignment
  nameWithType: StringFormat.Alignment
  fullName: System.Drawing.StringFormat.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または文字列の水平方向の配置を設定します。"
  remarks: "使用して<xref:System.Drawing.StringFormat.LineAlignment%2A>文字列の垂直方向の配置を指定します</xref:System.Drawing.StringFormat.LineAlignment%2A>。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.StringFormat.LineAlignment%2A> and Alignment properties and the <xref:System.Drawing.StringAlignment> enumeration to align strings. This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#1](~/add/codesnippet/csharp/p-system.drawing.stringf_0_1.cs)]\n [!code-vb[System.Drawing.Misc2#1](~/add/codesnippet/visualbasic/p-system.drawing.stringf_0_1.vb)]\n [!code-cpp[System.Drawing.Misc2#1](~/add/codesnippet/cpp/p-system.drawing.stringf_0_1.cpp)]"
  syntax:
    content: public System.Drawing.StringAlignment Alignment { get; set; }
    return:
      type: System.Drawing.StringAlignment
      description: "A <xref href=&quot;System.Drawing.StringAlignment&quot;> </xref>文字列の水平方向の配置を指定する列挙です。"
  overload: System.Drawing.StringFormat.Alignment*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.Clone
  id: Clone
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: Clone()
  nameWithType: StringFormat.Clone()
  fullName: System.Drawing.StringFormat.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの正確なコピーが作成<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.StringFormat&quot;> </xref>オブジェクトのこのメソッドを作成します。"
  overload: System.Drawing.StringFormat.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.DigitSubstitutionLanguage
  id: DigitSubstitutionLanguage
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: DigitSubstitutionLanguage
  nameWithType: StringFormat.DigitSubstitutionLanguage
  fullName: System.Drawing.StringFormat.DigitSubstitutionLanguage
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "西洋の数字をローカルの数字に置換する際に使用される言語を取得します。"
  syntax:
    content: public int DigitSubstitutionLanguage { get; }
    return:
      type: System.Int32
      description: "西洋の数字をローカルの数字に置換する際に使用する言語を識別するサポート NLS (National Language) の言語識別子です。 渡すことができます、 <> </> *> のプロパティ、 <xref:System.Globalization.CultureInfo>NLS 言語識別子とオブジェクト</xref:System.Globalization.CultureInfo>。たとえば、作成する、<xref:System.Globalization.CultureInfo>オブジェクト、文字列&quot;ar-eg&quot;を渡すことによって、<xref:System.Globalization.CultureInfo>コンス トラクター</xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo> 。渡す場合、 <> </> *> と共にその<xref:System.Globalization.CultureInfo>オブジェクトのプロパティ<xref href=&quot;System.Drawing.StringDigitSubstitute&quot;>。</xref></xref:System.Globalization.CultureInfo> <xref:System.Drawing.StringFormat.SetDigitSubstitution*>メソッド、アラビア インド数字代わりが使用されます西洋の数字の表示時にします</xref:System.Drawing.StringFormat.SetDigitSubstitution*>。"
  overload: System.Drawing.StringFormat.DigitSubstitutionLanguage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.DigitSubstitutionMethod
  id: DigitSubstitutionMethod
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: DigitSubstitutionMethod
  nameWithType: StringFormat.DigitSubstitutionMethod
  fullName: System.Drawing.StringFormat.DigitSubstitutionMethod
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "数字の置き換えに使用する方法を取得します。"
  syntax:
    content: public System.Drawing.StringDigitSubstitute DigitSubstitutionMethod { get; }
    return:
      type: System.Drawing.StringDigitSubstitute
      description: "A <xref href=&quot;System.Drawing.StringDigitSubstitute&quot;> </xref>を現在のフォントでサポートされていないために表示できませんを文字列に文字を置き換える方法を示す列挙値。"
  overload: System.Drawing.StringFormat.DigitSubstitutionMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.Dispose
  id: Dispose
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: Dispose()
  nameWithType: StringFormat.Dispose()
  fullName: System.Drawing.StringFormat.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "Dispose を呼び出すことにより、これによって使用されるリソース<xref:System.Drawing.StringFormat>を他の目的を再割り当てするオブジェクト</xref:System.Drawing.StringFormat>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.StringFormat.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.Finalize
  id: Finalize
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: Finalize()
  nameWithType: StringFormat.Finalize()
  fullName: System.Drawing.StringFormat.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~StringFormat ();
    parameters: []
  overload: System.Drawing.StringFormat.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.FormatFlags
  id: FormatFlags
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: FormatFlags
  nameWithType: StringFormat.FormatFlags
  fullName: System.Drawing.StringFormat.FormatFlags
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定、 <xref href=&quot;System.Drawing.StringFormatFlags&quot;> </xref>の書式情報を含む列挙です。"
  syntax:
    content: public System.Drawing.StringFormatFlags FormatFlags { get; set; }
    return:
      type: System.Drawing.StringFormatFlags
      description: "A <xref href=&quot;System.Drawing.StringFormatFlags&quot;> </xref>の書式情報を含む列挙です。"
  overload: System.Drawing.StringFormat.FormatFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.GenericDefault
  id: GenericDefault
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: GenericDefault
  nameWithType: StringFormat.GenericDefault
  fullName: System.Drawing.StringFormat.GenericDefault
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "既定の汎用の取得<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "次の表は、<xref:System.Drawing.StringFormat>クラス</xref:System.Drawing.StringFormat>の汎用的な既定のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Drawing.StringFormat.FormatFlags%2A>|0|  |<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment>|  |<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment>|  |<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming>|  |<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix>|  |<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute>|  |<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|0|      変更を加えた場合、<xref:System.Drawing.StringFormat>オブジェクト プロパティから返された、GenericDefault、これらの変更が永続化、および GenericDefault プロパティへの今後の呼び出しには、これらの変更が反映されます</xref:System.Drawing.StringFormat></xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A></xref:System.Drawing.StringDigitSubstitute></xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A></xref:System.Drawing.Text.HotkeyPrefix></xref:System.Drawing.StringFormat.HotkeyPrefix%2A></xref:System.Drawing.StringTrimming></xref:System.Drawing.StringFormat.Trimming%2A></xref:System.Drawing.StringAlignment></xref:System.Drawing.StringFormat.LineAlignment%2A></xref:System.Drawing.StringAlignment></xref:System.Drawing.StringFormat.Alignment%2A></xref:System.Drawing.StringFormat.FormatFlags%2A>。"
  syntax:
    content: public static System.Drawing.StringFormat GenericDefault { get; }
    return:
      type: System.Drawing.StringFormat
      description: "既定の汎用<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  overload: System.Drawing.StringFormat.GenericDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.GenericTypographic
  id: GenericTypographic
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: GenericTypographic
  nameWithType: StringFormat.GenericTypographic
  fullName: System.Drawing.StringFormat.GenericTypographic
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "傍点を文字のジェネリック型を取得<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "次の表は、<xref:System.Drawing.StringFormat>クラス</xref:System.Drawing.StringFormat>のジェネリック傍点を文字のインスタンスの初期プロパティ値を示しています。      |プロパティ |初期値 |  |--------------|-------------------|  |<xref:System.Drawing.StringFormat.FormatFlags%2A>|&24580; (<xref:System.Drawing.StringFormatFlags>、<xref:System.Drawing.StringFormatFlags>と<xref:System.Drawing.StringFormatFlags>) |。  |<xref:System.Drawing.StringFormat.Alignment%2A>|<xref:System.Drawing.StringAlignment>|  |<xref:System.Drawing.StringFormat.LineAlignment%2A>|<xref:System.Drawing.StringAlignment>|  |<xref:System.Drawing.StringFormat.Trimming%2A>|<xref:System.Drawing.StringTrimming>|  |<xref:System.Drawing.StringFormat.HotkeyPrefix%2A>|<xref:System.Drawing.Text.HotkeyPrefix>|  |<xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A>|<xref:System.Drawing.StringDigitSubstitute>|  |<xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A>|0|</xref:System.Drawing.StringFormat.DigitSubstitutionLanguage%2A></xref:System.Drawing.StringDigitSubstitute></xref:System.Drawing.StringFormat.DigitSubstitutionMethod%2A></xref:System.Drawing.Text.HotkeyPrefix></xref:System.Drawing.StringFormat.HotkeyPrefix%2A></xref:System.Drawing.StringTrimming></xref:System.Drawing.StringFormat.Trimming%2A></xref:System.Drawing.StringAlignment></xref:System.Drawing.StringFormat.LineAlignment%2A></xref:System.Drawing.StringAlignment></xref:System.Drawing.StringFormat.Alignment%2A></xref:System.Drawing.StringFormatFlags></xref:System.Drawing.StringFormatFlags></xref:System.Drawing.StringFormatFlags></xref:System.Drawing.StringFormat.FormatFlags%2A>"
  syntax:
    content: public static System.Drawing.StringFormat GenericTypographic { get; }
    return:
      type: System.Drawing.StringFormat
      description: "印刷用の汎用<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  overload: System.Drawing.StringFormat.GenericTypographic*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.GetTabStops(System.Single@)
  id: GetTabStops(System.Single@)
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: GetTabStops(Single)
  nameWithType: StringFormat.GetTabStops(Single)
  fullName: System.Drawing.StringFormat.GetTabStops(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このタブを取得<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets the tab stops of the <xref:System.Drawing.StringFormat>.  \n  \n-   Draws the string and the layout rectangle. Note that the string contains tabs. The tab settings of the <xref:System.Drawing.StringFormat> specify the offsets of the tabbed text.  \n  \n-   Gets the tab stops and uses or inspects the values.  \n  \n [!code-cpp[System.Drawing.ClassicStringFormatExamples#1](~/add/codesnippet/cpp/m-system.drawing.stringf_4_1.cpp)]\n [!code-cs[System.Drawing.ClassicStringFormatExamples#1](~/add/codesnippet/csharp/m-system.drawing.stringf_4_1.cs)]\n [!code-vb[System.Drawing.ClassicStringFormatExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.stringf_4_1.vb)]"
  syntax:
    content: public float[] GetTabStops (out float firstTabOffset);
    parameters:
    - id: firstTabOffset
      type: System.Single
      description: "テキスト行の先頭と最初のタブ ストップ間の空白の数。"
    return:
      type: System.Single[]
      description: "タブ ストップ間の距離が (のスペースの数) の配列。"
  overload: System.Drawing.StringFormat.GetTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.HotkeyPrefix
  id: HotkeyPrefix
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: HotkeyPrefix
  nameWithType: StringFormat.HotkeyPrefix
  fullName: System.Drawing.StringFormat.HotkeyPrefix
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定、 <xref href=&quot;System.Drawing.Text.HotkeyPrefix&quot;> </xref>オブジェクトの<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "グラフィカル ユーザー インターフェイスでは、ホット キーは (通常は Alt キーなどの別のキーと組み合わせて) 単語内の下線付きの文字、単語を表す機能をアクティブ化するキーボードの押すことができます。"
  example:
  - "The following code example shows how to set a keyboard shortcut using the HotkeyPrefix property. It also demonstrates how to use the <xref:System.Drawing.SystemBrushes.FromSystemColor%2A> method. To run this example, paste the code into a form, handle the form's <xref:System.Windows.Forms.Control.Paint> event and call the following method, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.MiscExamples#2](~/add/codesnippet/csharp/p-system.drawing.stringf_1_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#2](~/add/codesnippet/cpp/p-system.drawing.stringf_1_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#2](~/add/codesnippet/visualbasic/p-system.drawing.stringf_1_1.vb)]"
  syntax:
    content: public System.Drawing.Text.HotkeyPrefix HotkeyPrefix { get; set; }
    return:
      type: System.Drawing.Text.HotkeyPrefix
      description: "<xref href=&quot;System.Drawing.Text.HotkeyPrefix&quot;> </xref>オブジェクトの<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクトの既定値は<xref href=&quot;System.Drawing.Text.HotkeyPrefix&quot;></xref>です。"
  overload: System.Drawing.StringFormat.HotkeyPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.LineAlignment
  id: LineAlignment
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: LineAlignment
  nameWithType: StringFormat.LineAlignment
  fullName: System.Drawing.StringFormat.LineAlignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または文字列の垂直方向の配置を設定します。"
  remarks: "使用して<xref:System.Drawing.StringFormat.Alignment%2A>文字列の水平方向の配置を指定します</xref:System.Drawing.StringFormat.Alignment%2A>。"
  example:
  - "The following code example demonstrates how to use the LineAlignment and <xref:System.Drawing.StringFormat.Alignment%2A> properties and the <xref:System.Drawing.StringAlignment> enumeration to align strings. This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineAndAlignment` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#1](~/add/codesnippet/csharp/p-system.drawing.stringf_3_1.cs)]\n [!code-vb[System.Drawing.Misc2#1](~/add/codesnippet/visualbasic/p-system.drawing.stringf_3_1.vb)]\n [!code-cpp[System.Drawing.Misc2#1](~/add/codesnippet/cpp/p-system.drawing.stringf_3_1.cpp)]"
  syntax:
    content: public System.Drawing.StringAlignment LineAlignment { get; set; }
    return:
      type: System.Drawing.StringAlignment
      description: "A <xref href=&quot;System.Drawing.StringAlignment&quot;> </xref>縦線の配置を表す列挙体です。"
  overload: System.Drawing.StringFormat.LineAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)
  id: SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: SetDigitSubstitution(Int32,StringDigitSubstitute)
  nameWithType: StringFormat.SetDigitSubstitution(Int32,StringDigitSubstitute)
  fullName: System.Drawing.StringFormat.SetDigitSubstitution(Int32,StringDigitSubstitute)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "言語および西洋の数字をローカルの数字に置換する際に使用する方法を指定します。"
  remarks: ''
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets, for the <xref:System.Drawing.StringFormat>, the language to be used and the substitution method to be used.  \n  \n-   Draws the string.  \n  \n-   Repeats the above two steps for two different languages (Arabic and Thai).  \n  \n The National substitution method and Traditional substitution method are demonstrated for each of the two languages. The National method displays digits according to the official national language of the user's locale. The Traditional method displays digits according to the user's native script or language, which may be different from the official national language.  \n  \n [!code-cpp[System.Drawing.ClassicStringFormatExamples#2](~/add/codesnippet/cpp/2e272af8-2358-466e-8833-_1.cpp)]\n [!code-cs[System.Drawing.ClassicStringFormatExamples#2](~/add/codesnippet/csharp/2e272af8-2358-466e-8833-_1.cs)]\n [!code-vb[System.Drawing.ClassicStringFormatExamples#2](~/add/codesnippet/visualbasic/2e272af8-2358-466e-8833-_1.vb)]"
  syntax:
    content: public void SetDigitSubstitution (int language, System.Drawing.StringDigitSubstitute substitute);
    parameters:
    - id: language
      type: System.Int32
      description: "西洋の数字をローカルの数字に置換する際に使用する言語を識別するサポート NLS (National Language) の言語識別子です。 渡すことができます、 <> </> *> のプロパティ、 <xref:System.Globalization.CultureInfo>NLS 言語識別子とオブジェクト</xref:System.Globalization.CultureInfo>。たとえば、作成する、<xref:System.Globalization.CultureInfo>オブジェクト、文字列&quot;ar-eg&quot;を渡すことによって、<xref:System.Globalization.CultureInfo>コンス トラクター</xref:System.Globalization.CultureInfo> </xref:System.Globalization.CultureInfo> 。渡す場合、 <> </> *> プロパティの<xref:System.Globalization.CultureInfo>と共にオブジェクト<xref href=&quot;System.Drawing.StringDigitSubstitute&quot;> </xref> SetDigitSubstitution メソッドに、アラビア インド数字が置き換えられる西洋の数字の表示時にします</xref:System.Globalization.CultureInfo>。"
    - id: substitute
      type: System.Drawing.StringDigitSubstitute
      description: "要素、 <xref href=&quot;System.Drawing.StringDigitSubstitute&quot;> </xref>数字の表示方法を指定する列挙です。"
  overload: System.Drawing.StringFormat.SetDigitSubstitution*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])
  id: SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: SetMeasurableCharacterRanges(CharacterRange[])
  nameWithType: StringFormat.SetMeasurableCharacterRanges(CharacterRange[])
  fullName: System.Drawing.StringFormat.SetMeasurableCharacterRanges(CharacterRange[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "配列を指定<xref href=&quot;System.Drawing.CharacterRange&quot;></xref>への呼び出しで計測された文字の範囲を表す構造体、<xref:System.Drawing.Graphics.MeasureCharacterRanges*>メソッド</xref:System.Drawing.Graphics.MeasureCharacterRanges*>。"
  remarks: "32 を超える文字範囲の設定は許可されていませんなり、 <xref:System.OverflowException?displayProperty=fullName>。</xref:System.OverflowException?displayProperty=fullName>"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets the character ranges of the <xref:System.Drawing.StringFormat>.  \n  \n-   Measures the character ranges for a given string and layout rectangle.  \n  \n-   Draws the string and layout rectangle.  \n  \n-   Paints the regions. Each <xref:System.Drawing.Region> specifies an area that is occupied by a range of characters. The values in the regions are set when the character ranges are measured by the <xref:System.Drawing.Graphics.MeasureCharacterRanges%2A> method.  \n  \n-   Repeats the first four steps, but includes trailing spaces in the measurement of each character range.  \n  \n-   Clears the format flags of the <xref:System.Drawing.StringFormat> so that trailing spaces are not included in the measurement of each character range.  \n  \n-   Repeats the first four steps, but uses a different layout rectangle just to demonstrate that the layout rectangle affects the measurements of the character ranges. The size of the font will also affect the measurement.  \n  \n [!code-cpp[System.Drawing.ClassicStringFormatExamples#3](~/add/codesnippet/cpp/05797dbb-f43b-4fc0-898b-_1.cpp)]\n [!code-cs[System.Drawing.ClassicStringFormatExamples#3](~/add/codesnippet/csharp/05797dbb-f43b-4fc0-898b-_1.cs)]\n [!code-vb[System.Drawing.ClassicStringFormatExamples#3](~/add/codesnippet/visualbasic/05797dbb-f43b-4fc0-898b-_1.vb)]"
  syntax:
    content: public void SetMeasurableCharacterRanges (System.Drawing.CharacterRange[] ranges);
    parameters:
    - id: ranges
      type: System.Drawing.CharacterRange[]
      description: "配列<xref href=&quot;System.Drawing.CharacterRange&quot;></xref>への呼び出しで計測された文字の範囲を指定する構造体、<xref:System.Drawing.Graphics.MeasureCharacterRanges*>メソッド</xref:System.Drawing.Graphics.MeasureCharacterRanges*>。"
  overload: System.Drawing.StringFormat.SetMeasurableCharacterRanges*
  exceptions:
  - type: System.OverflowException
    commentId: T:System.OverflowException
    description: "32 を超える文字の範囲が設定されます。"
  platform:
  - net462
- uid: System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])
  id: SetTabStops(System.Single,System.Single[])
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: SetTabStops(Single,Single[])
  nameWithType: StringFormat.SetTabStops(Single,Single[])
  fullName: System.Drawing.StringFormat.SetTabStops(Single,Single[])
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このタブ ストップを設定<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: "内の各タブ位置オフセット、`tabStops`前に対する相対パスを除く、1 つ目の配列です。 最初のタブ ストップ オフセットは、初期オフセット位置で指定された`firstTabOffset`です。 たとえば、初期オフセット位置 8 で、最初のタブ位置オフセットが 50、最初のタブ ストップは、位置 58 し、します。 初期オフセット位置が 0 の場合は、最初のタブ ストップのオフセットは 0、文字列の原点の位置に対して相対的です。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Sets the tab stops of the <xref:System.Drawing.StringFormat>.  \n  \n-   Draws the string and the layout rectangle. Note that the string contains tabs. The tab settings of the <xref:System.Drawing.StringFormat> specify the offsets of the tabbed text.  \n  \n-   Gets the tab stops and uses or inspects the values.  \n  \n [!code-cpp[System.Drawing.ClassicStringFormatExamples#4](~/add/codesnippet/cpp/m-system.drawing.stringf_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicStringFormatExamples#4](~/add/codesnippet/csharp/m-system.drawing.stringf_0_1.cs)]\n [!code-vb[System.Drawing.ClassicStringFormatExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.stringf_0_1.vb)]"
  syntax:
    content: public void SetTabStops (float firstTabOffset, float[] tabStops);
    parameters:
    - id: firstTabOffset
      type: System.Single
      description: "テキストの行の先頭と最初のタブ間の空白の数を停止します。"
    - id: tabStops
      type: System.Single[]
      description: "指定された単位でのタブ ストップ間の距離の配列、 &lt;xref:System.Drawing.Graphics.PageUnit%2A?displayProperty=fullName&gt;プロパティです。"
  overload: System.Drawing.StringFormat.SetTabStops*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.ToString
  id: ToString
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: ToString()
  nameWithType: StringFormat.ToString()
  fullName: System.Drawing.StringFormat.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この変換<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクトを人間が判読できる文字列。"
  remarks: "値のみ、<xref:System.Drawing.StringFormat.FormatFlags%2A>プロパティが変換されます</xref:System.Drawing.StringFormat.FormatFlags%2A>。"
  example:
  - "The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Converts a <xref:System.Drawing.StringFormat> object to a string.  \n  \n-   Draws the string.  \n  \n-   Changes some properties in the <xref:System.Drawing.StringFormat> object.  \n  \n-   Draws the string. The string will be different because the properties of the <xref:System.Drawing.StringFormat> object have changed.  \n  \n [!code-cpp[System.Drawing.ClassicStringFormatExamples#5](~/add/codesnippet/cpp/m-system.drawing.stringf_3_1.cpp)]\n [!code-cs[System.Drawing.ClassicStringFormatExamples#5](~/add/codesnippet/csharp/m-system.drawing.stringf_3_1.cs)]\n [!code-vb[System.Drawing.ClassicStringFormatExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.stringf_3_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "この文字列表現<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  overload: System.Drawing.StringFormat.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.StringFormat.Trimming
  id: Trimming
  parent: System.Drawing.StringFormat
  langs:
  - csharp
  name: Trimming
  nameWithType: StringFormat.Trimming
  fullName: System.Drawing.StringFormat.Trimming
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定、 <xref href=&quot;System.Drawing.StringTrimming&quot;> </xref>この列挙体<xref href=&quot;System.Drawing.StringFormat&quot;></xref>オブジェクト。"
  remarks: ''
  example:
  - "The following example shows how to set the Trimming property and how to use the <xref:System.Drawing.StringTrimming> enumeration. This example is designed to be used with a Windows Form. Paste this code into a form and call the `ShowStringTrimming` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.Misc2#6](~/add/codesnippet/csharp/p-system.drawing.stringf_2_1.cs)]\n [!code-vb[System.Drawing.Misc2#6](~/add/codesnippet/visualbasic/p-system.drawing.stringf_2_1.vb)]\n [!code-cpp[System.Drawing.Misc2#6](~/add/codesnippet/cpp/p-system.drawing.stringf_2_1.cpp)]"
  syntax:
    content: public System.Drawing.StringTrimming Trimming { get; set; }
    return:
      type: System.Drawing.StringTrimming
      description: "A <xref href=&quot;System.Drawing.StringTrimming&quot;> </xref>を示す列挙体方法でこの描画されたテキスト<xref href=&quot;System.Drawing.StringFormat&quot;></xref>レイアウト四角形のエッジを超えたときに、オブジェクトが切り捨てられます。"
  overload: System.Drawing.StringFormat.Trimming*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.OverflowException
  isExternal: true
  name: System.OverflowException
- uid: System.Drawing.StringFormat.#ctor
  parent: System.Drawing.StringFormat
  isExternal: false
  name: StringFormat()
  nameWithType: StringFormat.StringFormat()
  fullName: System.Drawing.StringFormat.StringFormat()
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormat)
  parent: System.Drawing.StringFormat
  isExternal: false
  name: StringFormat(StringFormat)
  nameWithType: StringFormat.StringFormat(StringFormat)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormat)
- uid: System.Drawing.StringFormat
  parent: System.Drawing
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat
  fullName: System.Drawing.StringFormat
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags)
  parent: System.Drawing.StringFormat
  isExternal: false
  name: StringFormat(StringFormatFlags)
  nameWithType: StringFormat.StringFormat(StringFormatFlags)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormatFlags)
- uid: System.Drawing.StringFormatFlags
  parent: System.Drawing
  isExternal: false
  name: StringFormatFlags
  nameWithType: StringFormatFlags
  fullName: System.Drawing.StringFormatFlags
- uid: System.Drawing.StringFormat.#ctor(System.Drawing.StringFormatFlags,System.Int32)
  parent: System.Drawing.StringFormat
  isExternal: false
  name: StringFormat(StringFormatFlags,Int32)
  nameWithType: StringFormat.StringFormat(StringFormatFlags,Int32)
  fullName: System.Drawing.StringFormat.StringFormat(StringFormatFlags,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.StringFormat.Alignment
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Alignment
  nameWithType: StringFormat.Alignment
  fullName: System.Drawing.StringFormat.Alignment
- uid: System.Drawing.StringAlignment
  parent: System.Drawing
  isExternal: false
  name: StringAlignment
  nameWithType: StringAlignment
  fullName: System.Drawing.StringAlignment
- uid: System.Drawing.StringFormat.Clone
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Clone()
  nameWithType: StringFormat.Clone()
  fullName: System.Drawing.StringFormat.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.StringFormat.DigitSubstitutionLanguage
  parent: System.Drawing.StringFormat
  isExternal: false
  name: DigitSubstitutionLanguage
  nameWithType: StringFormat.DigitSubstitutionLanguage
  fullName: System.Drawing.StringFormat.DigitSubstitutionLanguage
- uid: System.Drawing.StringFormat.DigitSubstitutionMethod
  parent: System.Drawing.StringFormat
  isExternal: false
  name: DigitSubstitutionMethod
  nameWithType: StringFormat.DigitSubstitutionMethod
  fullName: System.Drawing.StringFormat.DigitSubstitutionMethod
- uid: System.Drawing.StringDigitSubstitute
  parent: System.Drawing
  isExternal: false
  name: StringDigitSubstitute
  nameWithType: StringDigitSubstitute
  fullName: System.Drawing.StringDigitSubstitute
- uid: System.Drawing.StringFormat.Dispose
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Dispose()
  nameWithType: StringFormat.Dispose()
  fullName: System.Drawing.StringFormat.Dispose()
- uid: System.Drawing.StringFormat.Finalize
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Finalize()
  nameWithType: StringFormat.Finalize()
  fullName: System.Drawing.StringFormat.Finalize()
- uid: System.Drawing.StringFormat.FormatFlags
  parent: System.Drawing.StringFormat
  isExternal: false
  name: FormatFlags
  nameWithType: StringFormat.FormatFlags
  fullName: System.Drawing.StringFormat.FormatFlags
- uid: System.Drawing.StringFormat.GenericDefault
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GenericDefault
  nameWithType: StringFormat.GenericDefault
  fullName: System.Drawing.StringFormat.GenericDefault
- uid: System.Drawing.StringFormat.GenericTypographic
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GenericTypographic
  nameWithType: StringFormat.GenericTypographic
  fullName: System.Drawing.StringFormat.GenericTypographic
- uid: System.Drawing.StringFormat.GetTabStops(System.Single@)
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GetTabStops(Single)
  nameWithType: StringFormat.GetTabStops(Single)
  fullName: System.Drawing.StringFormat.GetTabStops(Single)
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.StringFormat.HotkeyPrefix
  parent: System.Drawing.StringFormat
  isExternal: false
  name: HotkeyPrefix
  nameWithType: StringFormat.HotkeyPrefix
  fullName: System.Drawing.StringFormat.HotkeyPrefix
- uid: System.Drawing.Text.HotkeyPrefix
  parent: System.Drawing.Text
  isExternal: false
  name: HotkeyPrefix
  nameWithType: HotkeyPrefix
  fullName: System.Drawing.Text.HotkeyPrefix
- uid: System.Drawing.StringFormat.LineAlignment
  parent: System.Drawing.StringFormat
  isExternal: false
  name: LineAlignment
  nameWithType: StringFormat.LineAlignment
  fullName: System.Drawing.StringFormat.LineAlignment
- uid: System.Drawing.StringFormat.SetDigitSubstitution(System.Int32,System.Drawing.StringDigitSubstitute)
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetDigitSubstitution(Int32,StringDigitSubstitute)
  nameWithType: StringFormat.SetDigitSubstitution(Int32,StringDigitSubstitute)
  fullName: System.Drawing.StringFormat.SetDigitSubstitution(Int32,StringDigitSubstitute)
- uid: System.Drawing.StringFormat.SetMeasurableCharacterRanges(System.Drawing.CharacterRange[])
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetMeasurableCharacterRanges(CharacterRange[])
  nameWithType: StringFormat.SetMeasurableCharacterRanges(CharacterRange[])
  fullName: System.Drawing.StringFormat.SetMeasurableCharacterRanges(CharacterRange[])
- uid: System.Drawing.CharacterRange[]
  parent: System.Drawing
  isExternal: false
  name: CharacterRange
  nameWithType: CharacterRange
  fullName: System.Drawing.CharacterRange[]
  spec.csharp:
  - uid: System.Drawing.CharacterRange
    name: CharacterRange
    nameWithType: CharacterRange
    fullName: CharacterRange[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.StringFormat.SetTabStops(System.Single,System.Single[])
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetTabStops(Single,Single[])
  nameWithType: StringFormat.SetTabStops(Single,Single[])
  fullName: System.Drawing.StringFormat.SetTabStops(Single,Single[])
- uid: System.Drawing.StringFormat.ToString
  parent: System.Drawing.StringFormat
  isExternal: false
  name: ToString()
  nameWithType: StringFormat.ToString()
  fullName: System.Drawing.StringFormat.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.StringFormat.Trimming
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Trimming
  nameWithType: StringFormat.Trimming
  fullName: System.Drawing.StringFormat.Trimming
- uid: System.Drawing.StringTrimming
  parent: System.Drawing
  isExternal: false
  name: StringTrimming
  nameWithType: StringTrimming
  fullName: System.Drawing.StringTrimming
- uid: System.Drawing.StringFormat.#ctor*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: StringFormat
  nameWithType: StringFormat.StringFormat
- uid: System.Drawing.StringFormat.Alignment*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Alignment
  nameWithType: StringFormat.Alignment
- uid: System.Drawing.StringFormat.Clone*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Clone
  nameWithType: StringFormat.Clone
- uid: System.Drawing.StringFormat.DigitSubstitutionLanguage*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: DigitSubstitutionLanguage
  nameWithType: StringFormat.DigitSubstitutionLanguage
- uid: System.Drawing.StringFormat.DigitSubstitutionMethod*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: DigitSubstitutionMethod
  nameWithType: StringFormat.DigitSubstitutionMethod
- uid: System.Drawing.StringFormat.Dispose*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Dispose
  nameWithType: StringFormat.Dispose
- uid: System.Drawing.StringFormat.Finalize*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Finalize
  nameWithType: StringFormat.Finalize
- uid: System.Drawing.StringFormat.FormatFlags*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: FormatFlags
  nameWithType: StringFormat.FormatFlags
- uid: System.Drawing.StringFormat.GenericDefault*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GenericDefault
  nameWithType: StringFormat.GenericDefault
- uid: System.Drawing.StringFormat.GenericTypographic*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GenericTypographic
  nameWithType: StringFormat.GenericTypographic
- uid: System.Drawing.StringFormat.GetTabStops*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: GetTabStops
  nameWithType: StringFormat.GetTabStops
- uid: System.Drawing.StringFormat.HotkeyPrefix*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: HotkeyPrefix
  nameWithType: StringFormat.HotkeyPrefix
- uid: System.Drawing.StringFormat.LineAlignment*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: LineAlignment
  nameWithType: StringFormat.LineAlignment
- uid: System.Drawing.StringFormat.SetDigitSubstitution*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetDigitSubstitution
  nameWithType: StringFormat.SetDigitSubstitution
- uid: System.Drawing.StringFormat.SetMeasurableCharacterRanges*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetMeasurableCharacterRanges
  nameWithType: StringFormat.SetMeasurableCharacterRanges
- uid: System.Drawing.StringFormat.SetTabStops*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: SetTabStops
  nameWithType: StringFormat.SetTabStops
- uid: System.Drawing.StringFormat.ToString*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: ToString
  nameWithType: StringFormat.ToString
- uid: System.Drawing.StringFormat.Trimming*
  parent: System.Drawing.StringFormat
  isExternal: false
  name: Trimming
  nameWithType: StringFormat.Trimming
