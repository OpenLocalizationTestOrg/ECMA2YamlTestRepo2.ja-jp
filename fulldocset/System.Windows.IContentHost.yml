### YamlMime:ManagedReference
items:
- uid: System.Windows.IContentHost
  id: IContentHost
  children:
  - System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)
  - System.Windows.IContentHost.HostedElements
  - System.Windows.IContentHost.InputHitTest(System.Windows.Point)
  - System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)
  langs:
  - csharp
  name: IContentHost
  nameWithType: IContentHost
  fullName: System.Windows.IContentHost
  type: Interface
  summary: "このインターフェイスをホストしているレイアウト<xref href=&quot;System.Windows.ContentElement&quot;></xref>です。"
  syntax:
    content: public interface IContentHost
  implements: []
  platform:
  - net462
- uid: System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)
  id: GetRectangles(System.Windows.ContentElement)
  parent: System.Windows.IContentHost
  langs:
  - csharp
  name: GetRectangles(ContentElement)
  nameWithType: IContentHost.GetRectangles(ContentElement)
  fullName: System.Windows.IContentHost.GetRectangles(ContentElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "外接する四角形の子要素のコレクションを返します。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect> GetRectangles (System.Windows.ContentElement child);
    parameters:
    - id: child
      type: System.Windows.ContentElement
      description: "外接する四角形が返されます、子要素です。"
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}
      description: "外接する四角形の子要素のコレクション。"
  overload: System.Windows.IContentHost.GetRectangles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "場合*子*が null です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "場合は、要素は、直接の子孫ではありません (要素などの子である必要があります、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>または<xref href=&quot;System.Windows.ContentElement&quot;></xref>の直接の子孫である、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>)。"
  platform:
  - net462
- uid: System.Windows.IContentHost.HostedElements
  id: HostedElements
  parent: System.Windows.IContentHost
  langs:
  - csharp
  name: HostedElements
  nameWithType: IContentHost.HostedElements
  fullName: System.Windows.IContentHost.HostedElements
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "含む列挙のすべての子孫を取得<xref href=&quot;System.Windows.ContentElement&quot;> </xref>-派生したクラスだけでなくすべて<xref href=&quot;System.Windows.UIElement&quot;> </xref>-派生クラスの直接の子孫である、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>またはその子孫のいずれか<xref href=&quot;System.Windows.ContentElement&quot;></xref>クラスです。"
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Windows.IInputElement> HostedElements { get; }
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}
      description: "すべての子孫を含む列挙<xref href=&quot;System.Windows.ContentElement&quot;> </xref>-派生したクラスだけでなくすべて<xref href=&quot;System.Windows.UIElement&quot;> </xref>-の直接の子孫であるクラスの派生、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>またはその子孫のいずれかの<xref href=&quot;System.Windows.ContentElement&quot;></xref>クラスです。 対象の要素、つまり、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>を示すビジュアル表現を作成 (<xref href=&quot;System.Windows.ContentElement&quot;></xref>-派生クラス) はレイアウトを持つ、実行、または、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref> (第&1; レベルの子孫<xref href=&quot;System.Windows.UIElement&quot;> </xref>-派生クラス)。"
  overload: System.Windows.IContentHost.HostedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.IContentHost.InputHitTest(System.Windows.Point)
  id: InputHitTest(System.Windows.Point)
  parent: System.Windows.IContentHost
  langs:
  - csharp
  name: InputHitTest(Point)
  nameWithType: IContentHost.InputHitTest(Point)
  fullName: System.Windows.IContentHost.InputHitTest(Point)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "子要素のヒット テストを実行します。"
  syntax:
    content: public System.Windows.IInputElement InputHitTest (System.Windows.Point point);
    parameters:
    - id: point
      type: System.Windows.Point
      description: "ContentHost 相対マウス座標です。"
    return:
      type: System.Windows.IInputElement
      description: "子孫<xref href=&quot;System.Windows.IInputElement&quot;> </xref>、または**NULL**このような要素が存在しない場合。"
  overload: System.Windows.IContentHost.InputHitTest*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)
  id: OnChildDesiredSizeChanged(System.Windows.UIElement)
  parent: System.Windows.IContentHost
  langs:
  - csharp
  name: OnChildDesiredSizeChanged(UIElement)
  nameWithType: IContentHost.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ときに呼び出されます、 <xref href=&quot;System.Windows.UIElement&quot;> </xref>-派生クラスによってホストされている、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>その<xref:System.Windows.UIElement.DesiredSize*>.</xref:System.Windows.UIElement.DesiredSize*>の変更"
  syntax:
    content: public void OnChildDesiredSizeChanged (System.Windows.UIElement child);
    parameters:
    - id: child
      type: System.Windows.UIElement
      description: "子要素<xref:System.Windows.UIElement.DesiredSize*>が変更されました</xref:System.Windows.UIElement.DesiredSize*>"
  overload: System.Windows.IContentHost.OnChildDesiredSizeChanged*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "場合*子*が null です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "場合*子*は直接の子孫ではありません (つまり*子*の子である必要があります、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>または<xref href=&quot;System.Windows.ContentElement&quot;></xref>の直接の子孫である、 <xref href=&quot;System.Windows.IContentHost&quot;> </xref>)。"
  platform:
  - net462
references:
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)
  parent: System.Windows.IContentHost
  isExternal: false
  name: GetRectangles(ContentElement)
  nameWithType: IContentHost.GetRectangles(ContentElement)
  fullName: System.Windows.IContentHost.GetRectangles(ContentElement)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Rect}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Rect>
  nameWithType: ReadOnlyCollection<Rect>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Rect>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Windows.Rect>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Rect
    name: Rect
    nameWithType: Rect
    fullName: Rect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.ContentElement
  parent: System.Windows
  isExternal: false
  name: ContentElement
  nameWithType: ContentElement
  fullName: System.Windows.ContentElement
- uid: System.Windows.IContentHost.HostedElements
  parent: System.Windows.IContentHost
  isExternal: false
  name: HostedElements
  nameWithType: IContentHost.HostedElements
  fullName: System.Windows.IContentHost.HostedElements
- uid: System.Collections.Generic.IEnumerator{System.Windows.IInputElement}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<IInputElement>
  nameWithType: IEnumerator<IInputElement>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.IInputElement>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Windows.IInputElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.IInputElement
    name: IInputElement
    nameWithType: IInputElement
    fullName: IInputElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.IContentHost.InputHitTest(System.Windows.Point)
  parent: System.Windows.IContentHost
  isExternal: false
  name: InputHitTest(Point)
  nameWithType: IContentHost.InputHitTest(Point)
  fullName: System.Windows.IContentHost.InputHitTest(Point)
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)
  parent: System.Windows.IContentHost
  isExternal: false
  name: OnChildDesiredSizeChanged(UIElement)
  nameWithType: IContentHost.OnChildDesiredSizeChanged(UIElement)
  fullName: System.Windows.IContentHost.OnChildDesiredSizeChanged(UIElement)
- uid: System.Windows.UIElement
  parent: System.Windows
  isExternal: false
  name: UIElement
  nameWithType: UIElement
  fullName: System.Windows.UIElement
- uid: System.Windows.IContentHost.GetRectangles*
  parent: System.Windows.IContentHost
  isExternal: false
  name: GetRectangles
  nameWithType: IContentHost.GetRectangles
- uid: System.Windows.IContentHost.HostedElements*
  parent: System.Windows.IContentHost
  isExternal: false
  name: HostedElements
  nameWithType: IContentHost.HostedElements
- uid: System.Windows.IContentHost.InputHitTest*
  parent: System.Windows.IContentHost
  isExternal: false
  name: InputHitTest
  nameWithType: IContentHost.InputHitTest
- uid: System.Windows.IContentHost.OnChildDesiredSizeChanged*
  parent: System.Windows.IContentHost
  isExternal: false
  name: OnChildDesiredSizeChanged
  nameWithType: IContentHost.OnChildDesiredSizeChanged
