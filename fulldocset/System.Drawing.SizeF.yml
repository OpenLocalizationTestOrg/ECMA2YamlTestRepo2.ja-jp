### YamlMime:ManagedReference
items:
- uid: System.Drawing.SizeF
  id: SizeF
  children:
  - System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  - System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  - System.Drawing.SizeF.#ctor(System.Single,System.Single)
  - System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.Empty
  - System.Drawing.SizeF.Equals(System.Object)
  - System.Drawing.SizeF.GetHashCode
  - System.Drawing.SizeF.Height
  - System.Drawing.SizeF.IsEmpty
  - System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  - System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  - System.Drawing.SizeF.ToPointF
  - System.Drawing.SizeF.ToSize
  - System.Drawing.SizeF.ToString
  - System.Drawing.SizeF.Width
  langs:
  - csharp
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
  type: Struct
  summary: "浮動小数点数、通常、幅および四角形の高さの順序付けされたペアを格納します。"
  remarks: "SizeF 構造体の単位が異なります、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>の設定、<xref:System.Drawing.Graphics>の描画に使用されるオブジェクト</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A>。"
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/t-system.drawing.sizef_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/t-system.drawing.sizef_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/t-system.drawing.sizef_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Drawing.SizeFConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public struct SizeF
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  id: '#ctor(System.Drawing.PointF)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(PointF)
  nameWithType: SizeF.SizeF(PointF)
  fullName: System.Drawing.SizeF.SizeF(PointF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>から、指定した構造<xref href=&quot;System.Drawing.PointF&quot;></xref>構造体。"
  syntax:
    content: public SizeF (System.Drawing.PointF pt);
    parameters:
    - id: pt
      type: System.Drawing.PointF
      description: "<xref href=&quot;System.Drawing.PointF&quot;> </xref>からこれを初期化するための構造体<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  id: '#ctor(System.Drawing.SizeF)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(SizeF)
  nameWithType: SizeF.SizeF(SizeF)
  fullName: System.Drawing.SizeF.SizeF(SizeF)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>から指定した既存の構造体<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public SizeF (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>新しい作成元の構造体<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: SizeF(Single,Single)
  nameWithType: SizeF.SizeF(Single,Single)
  fullName: System.Drawing.SizeF.SizeF(Single,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>指定したディメンションからの構造体。"
  remarks: ''
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   <xref:System.Drawing.SizeF.op_Addition%2A>  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.s_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.s_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.s_1.vb)]"
  syntax:
    content: public SizeF (float width, float height);
    parameters:
    - id: width
      type: System.Single
      description: "新しいの幅コンポーネント<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
    - id: height
      type: System.Single
      description: "新しい高さコンポーネント<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  overload: System.Drawing.SizeF.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  id: Add(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Add(SizeF,SizeF)
  nameWithType: SizeF.Add(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "幅と高さのいずれかの追加<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を別の高さと幅<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public static System.Drawing.SizeF Add (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "最初の<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を追加します。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "2 番目<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を追加します。"
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>加算演算の結果である構造体。"
  overload: System.Drawing.SizeF.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Empty
  id: Empty
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Empty
  nameWithType: SizeF.Empty
  fullName: System.Drawing.SizeF.Empty
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>を持つ構造体、 <> </> *> と<> *> 0 の値。"
  syntax:
    content: public static readonly System.Drawing.SizeF Empty;
    return:
      type: System.Drawing.SizeF
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SizeF.Equals(Object)
  fullName: System.Drawing.SizeF.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したオブジェクトがあるかどうかを確認するテスト、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>これと同じサイズの構造体<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>テストする</xref:System.Object>"
    return:
      type: System.Boolean
      description: "このメソッドが戻る<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> obj </code>は、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>同じ幅と高さこのが<xref href=&quot;System.Drawing.SizeF&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeF.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.GetHashCode
  id: GetHashCode
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SizeF.GetHashCode()
  fullName: System.Drawing.SizeF.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このハッシュ コードを返します<xref href=&quot;System.Drawing.Size&quot;></xref>構造体。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "このハッシュ値を指定する整数値<xref href=&quot;System.Drawing.Size&quot;></xref>構造体。"
  overload: System.Drawing.SizeF.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Height
  id: Height
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Height
  nameWithType: SizeF.Height
  fullName: System.Drawing.SizeF.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得または設定のこの垂直方向コンポーネント<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  remarks: "高さの単位と<xref:System.Drawing.SizeF.Width%2A>の<xref:System.Drawing.SizeF>構造によって異なります、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>の設定、<xref:System.Drawing.Graphics>描画に使用するオブジェクト</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A></xref:System.Drawing.SizeF></xref:System.Drawing.SizeF.Width%2A>。"
  syntax:
    content: public float Height { get; set; }
    return:
      type: System.Single
      description: "これの垂直方向コンポーネント<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体、通常はピクセル単位で測定されます。"
  overload: System.Drawing.SizeF.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.IsEmpty
  id: IsEmpty
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: System.Drawing.SizeF.IsEmpty
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造がゼロの幅と高さ。"
  syntax:
    content: public bool IsEmpty { get; }
    return:
      type: System.Boolean
      description: "このプロパティを返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ときにこの<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造になります。 幅と高さが&0; です。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeF.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Addition(SizeF,SizeF)
  nameWithType: SizeF.op_Addition(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "幅と高さのいずれかの追加<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を別の高さと幅<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  remarks: ''
  example:
  - "The following code example adds a shadow to a <xref:System.Windows.Forms.ListBox> by using the following members:  \n  \n-   Addition  \n  \n-   <xref:System.Drawing.PointF.op_Addition%2A?displayProperty=fullName>  \n  \n-   <xref:System.Drawing.SolidBrush>  \n  \n This example is designed to be used with a Windows Form. To run this example, paste this code into a form and call the `AddShadow` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event. Verify that the form contains a <xref:System.Windows.Forms.ListBox> named `listBox1`.  \n  \n [!code-cs[System.Drawing.MiscExamples#3](~/add/codesnippet/csharp/m-system.drawing.sizef.o_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#3](~/add/codesnippet/cpp/m-system.drawing.sizef.o_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.sizef.o_1.vb)]"
  syntax:
    content: public static System.Drawing.SizeF op_Addition (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "最初の<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を追加します。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "2 番目<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造を追加します。"
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.Size&quot;> </xref>加算演算の結果である構造体。"
  overload: System.Drawing.SizeF.op_Addition*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Equality(SizeF,SizeF)
  nameWithType: SizeF.op_Equality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体が等しい。"
  syntax:
    content: public static bool op_Equality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>等値演算子の左側にある構造体。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>等値演算子の右側に構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> sz1 </code>と<code> sz2 </code>等幅と高さがある場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.SizeF.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  id: op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Explicit(SizeF)
  nameWithType: SizeF.op_Explicit(SizeF)
  fullName: System.Drawing.SizeF.op_Explicit(SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  syntax:
    content: public static System.Drawing.PointF op_Explicit (System.Drawing.SizeF size);
    parameters:
    - id: size
      type: System.Drawing.SizeF
      description: "追加します。"
    return:
      type: System.Drawing.PointF
      description: "追加します。"
  overload: System.Drawing.SizeF.op_Explicit*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Inequality(SizeF,SizeF)
  nameWithType: SizeF.op_Inequality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "2 つあるかどうかをテスト<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造は異なります。"
  syntax:
    content: public static bool op_Inequality (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>非等値演算子の左側に構造体。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>非等値演算子の右側に構造体。"
    return:
      type: System.Boolean
      description: "この演算子を返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> sz1 </code>と<code> sz2 </code>幅または高さのいずれかが異なる<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>sz1</code> and <code>sz2</code> are equal."
  overload: System.Drawing.SizeF.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  id: op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: op_Subtraction(SizeF,SizeF)
  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)
  type: Operator
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "幅と高さのいずれかの減算<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造から別の高さと幅<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public static System.Drawing.SizeF op_Subtraction (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算子の左側にある構造体。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算子の右側にある構造体。"
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算の結果はします。"
  overload: System.Drawing.SizeF.op_Subtraction*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  id: Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Subtract(SizeF,SizeF)
  nameWithType: SizeF.Subtract(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "幅と高さのいずれかの減算<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造から別の高さと幅<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public static System.Drawing.SizeF Subtract (System.Drawing.SizeF sz1, System.Drawing.SizeF sz2);
    parameters:
    - id: sz1
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算子の左側にある構造体。"
    - id: sz2
      type: System.Drawing.SizeF
      description: "<xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算子の右側にある構造体。"
    return:
      type: System.Drawing.SizeF
      description: "A <xref href=&quot;System.Drawing.SizeF&quot;> </xref>減算演算の結果では構造体。"
  overload: System.Drawing.SizeF.Subtract*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToPointF
  id: ToPointF
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToPointF()
  nameWithType: SizeF.ToPointF()
  fullName: System.Drawing.SizeF.ToPointF()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "変換、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>に構造体、 <xref href=&quot;System.Drawing.PointF&quot;> </xref>構造体。"
  syntax:
    content: public System.Drawing.PointF ToPointF ();
    parameters: []
    return:
      type: System.Drawing.PointF
      description: "返します、 <xref href=&quot;System.Drawing.PointF&quot;> </xref>構造体。"
  overload: System.Drawing.SizeF.ToPointF*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToSize
  id: ToSize
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToSize()
  nameWithType: SizeF.ToSize()
  fullName: System.Drawing.SizeF.ToSize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "変換、 <xref href=&quot;System.Drawing.SizeF&quot;> </xref>に構造体、 <xref href=&quot;System.Drawing.Size&quot;> </xref>構造体。"
  remarks: "<xref:System.Drawing.SizeF>に構造を変換、<xref:System.Drawing.Size>構造体の値を切り捨てることによって、 <xref:System.Drawing.SizeF>[次へ] の下の整数値にします</xref:System.Drawing.SizeF></xref:System.Drawing.Size></xref:System.Drawing.SizeF>。"
  syntax:
    content: public System.Drawing.Size ToSize ();
    parameters: []
    return:
      type: System.Drawing.Size
      description: "返します、 <xref href=&quot;System.Drawing.Size&quot;> </xref>構造体。"
  overload: System.Drawing.SizeF.ToSize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.ToString
  id: ToString
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: ToString()
  nameWithType: SizeF.ToString()
  fullName: System.Drawing.SizeF.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これを表す人間が判読できる文字列を作成<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "これを表す文字列<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  overload: System.Drawing.SizeF.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.SizeF.Width
  id: Width
  parent: System.Drawing.SizeF
  langs:
  - csharp
  name: Width
  nameWithType: SizeF.Width
  fullName: System.Drawing.SizeF.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの水平方向コンポーネントの設定を取得または<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体。"
  remarks: "単位は、<xref:System.Drawing.SizeF.Height%2A>の幅と、<xref:System.Drawing.SizeF>構造によって異なります、<xref:System.Drawing.Graphics.PageUnit%2A>と<xref:System.Drawing.Graphics.PageScale%2A>の設定、<xref:System.Drawing.Graphics>の描画に使用されるオブジェクト</xref:System.Drawing.Graphics></xref:System.Drawing.Graphics.PageScale%2A></xref:System.Drawing.Graphics.PageUnit%2A></xref:System.Drawing.SizeF></xref:System.Drawing.SizeF.Height%2A>。"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "これの水平方向コンポーネント<xref href=&quot;System.Drawing.SizeF&quot;></xref>構造体、通常はピクセル単位で測定されます。"
  overload: System.Drawing.SizeF.Width*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Drawing.SizeF.#ctor(System.Drawing.PointF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(PointF)
  nameWithType: SizeF.SizeF(PointF)
  fullName: System.Drawing.SizeF.SizeF(PointF)
- uid: System.Drawing.PointF
  parent: System.Drawing
  isExternal: false
  name: PointF
  nameWithType: PointF
  fullName: System.Drawing.PointF
- uid: System.Drawing.SizeF.#ctor(System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(SizeF)
  nameWithType: SizeF.SizeF(SizeF)
  fullName: System.Drawing.SizeF.SizeF(SizeF)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Drawing.SizeF.#ctor(System.Single,System.Single)
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF(Single,Single)
  nameWithType: SizeF.SizeF(Single,Single)
  fullName: System.Drawing.SizeF.SizeF(Single,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.SizeF.Add(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Add(SizeF,SizeF)
  nameWithType: SizeF.Add(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Add(SizeF,SizeF)
- uid: System.Drawing.SizeF.Empty
  parent: System.Drawing.SizeF
  isExternal: false
  name: Empty
  nameWithType: SizeF.Empty
  fullName: System.Drawing.SizeF.Empty
- uid: System.Drawing.SizeF.Equals(System.Object)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Equals(Object)
  nameWithType: SizeF.Equals(Object)
  fullName: System.Drawing.SizeF.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.SizeF.GetHashCode
  parent: System.Drawing.SizeF
  isExternal: false
  name: GetHashCode()
  nameWithType: SizeF.GetHashCode()
  fullName: System.Drawing.SizeF.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.SizeF.Height
  parent: System.Drawing.SizeF
  isExternal: false
  name: Height
  nameWithType: SizeF.Height
  fullName: System.Drawing.SizeF.Height
- uid: System.Drawing.SizeF.IsEmpty
  parent: System.Drawing.SizeF
  isExternal: false
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
  fullName: System.Drawing.SizeF.IsEmpty
- uid: System.Drawing.SizeF.op_Addition(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Addition(SizeF,SizeF)
  nameWithType: SizeF.op_Addition(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Addition(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Equality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Equality(SizeF,SizeF)
  nameWithType: SizeF.op_Equality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Equality(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Explicit(System.Drawing.SizeF to System.Drawing.PointF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Explicit(SizeF)
  nameWithType: SizeF.op_Explicit(SizeF)
  fullName: System.Drawing.SizeF.op_Explicit(SizeF)
- uid: System.Drawing.SizeF.op_Inequality(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Inequality(SizeF,SizeF)
  nameWithType: SizeF.op_Inequality(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Inequality(SizeF,SizeF)
- uid: System.Drawing.SizeF.op_Subtraction(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Subtraction(SizeF,SizeF)
  nameWithType: SizeF.op_Subtraction(SizeF,SizeF)
  fullName: System.Drawing.SizeF.op_Subtraction(SizeF,SizeF)
- uid: System.Drawing.SizeF.Subtract(System.Drawing.SizeF,System.Drawing.SizeF)
  parent: System.Drawing.SizeF
  isExternal: false
  name: Subtract(SizeF,SizeF)
  nameWithType: SizeF.Subtract(SizeF,SizeF)
  fullName: System.Drawing.SizeF.Subtract(SizeF,SizeF)
- uid: System.Drawing.SizeF.ToPointF
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToPointF()
  nameWithType: SizeF.ToPointF()
  fullName: System.Drawing.SizeF.ToPointF()
- uid: System.Drawing.SizeF.ToSize
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToSize()
  nameWithType: SizeF.ToSize()
  fullName: System.Drawing.SizeF.ToSize()
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Drawing.SizeF.ToString
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToString()
  nameWithType: SizeF.ToString()
  fullName: System.Drawing.SizeF.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.SizeF.Width
  parent: System.Drawing.SizeF
  isExternal: false
  name: Width
  nameWithType: SizeF.Width
  fullName: System.Drawing.SizeF.Width
- uid: System.Drawing.SizeF.#ctor*
  parent: System.Drawing.SizeF
  isExternal: false
  name: SizeF
  nameWithType: SizeF.SizeF
- uid: System.Drawing.SizeF.Add*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Add
  nameWithType: SizeF.Add
- uid: System.Drawing.SizeF.Equals*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Equals
  nameWithType: SizeF.Equals
- uid: System.Drawing.SizeF.GetHashCode*
  parent: System.Drawing.SizeF
  isExternal: false
  name: GetHashCode
  nameWithType: SizeF.GetHashCode
- uid: System.Drawing.SizeF.Height*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Height
  nameWithType: SizeF.Height
- uid: System.Drawing.SizeF.IsEmpty*
  parent: System.Drawing.SizeF
  isExternal: false
  name: IsEmpty
  nameWithType: SizeF.IsEmpty
- uid: System.Drawing.SizeF.op_Addition*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Addition
  nameWithType: SizeF.op_Addition
- uid: System.Drawing.SizeF.op_Equality*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Equality
  nameWithType: SizeF.op_Equality
- uid: System.Drawing.SizeF.op_Explicit*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Explicit
  nameWithType: SizeF.op_Explicit
- uid: System.Drawing.SizeF.op_Inequality*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Inequality
  nameWithType: SizeF.op_Inequality
- uid: System.Drawing.SizeF.op_Subtraction*
  parent: System.Drawing.SizeF
  isExternal: false
  name: op_Subtraction
  nameWithType: SizeF.op_Subtraction
- uid: System.Drawing.SizeF.Subtract*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Subtract
  nameWithType: SizeF.Subtract
- uid: System.Drawing.SizeF.ToPointF*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToPointF
  nameWithType: SizeF.ToPointF
- uid: System.Drawing.SizeF.ToSize*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToSize
  nameWithType: SizeF.ToSize
- uid: System.Drawing.SizeF.ToString*
  parent: System.Drawing.SizeF
  isExternal: false
  name: ToString
  nameWithType: SizeF.ToString
- uid: System.Drawing.SizeF.Width*
  parent: System.Drawing.SizeF
  isExternal: false
  name: Width
  nameWithType: SizeF.Width
