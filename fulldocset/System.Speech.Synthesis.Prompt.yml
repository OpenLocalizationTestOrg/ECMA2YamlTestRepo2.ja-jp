### YamlMime:ManagedReference
items:
- uid: System.Speech.Synthesis.Prompt
  id: Prompt
  children:
  - System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)
  - System.Speech.Synthesis.Prompt.#ctor(System.String)
  - System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)
  - System.Speech.Synthesis.Prompt.IsCompleted
  langs:
  - csharp
  name: Prompt
  nameWithType: Prompt
  fullName: System.Speech.Synthesis.Prompt
  type: Class
  summary: "表される、テキストまたはオーディオ ファイルのいずれかでに関する情報を表します、 <xref href=&quot;System.Speech.Synthesis.SpeechSynthesizer&quot;></xref>です。"
  remarks: "プロンプトのオブジェクトには、プレーン テキスト、マークアップ言語、またはオーディオ ファイルでフォーマットされたテキストを含めることができます。       <xref:System.Speech.Synthesis.PromptBuilder>。</xref:System.Speech.Synthesis.PromptBuilder>の新しいインスタンスごとにプロンプト、空のオブジェクトを作成します。  <xref:System.Speech.Synthesis.PromptBuilder>クラスが含まれている、空のプロンプト オブジェクトにテキスト、SSML マークアップ、ブックマーク、および (.wav ファイルなど)、オーディオ録音済みのファイルを含むコンテンツを追加するメソッドを提供します</xref:System.Speech.Synthesis.PromptBuilder>。 通常、アプリケーションでは使用<xref:System.Speech.Synthesis.PromptBuilder>、画面の指示を作成し、コンテンツを読み込むには、プロンプト オブジェクトではなく</xref:System.Speech.Synthesis.PromptBuilder>。       プロンプトのオブジェクトの内容から音声を生成するには、使用、<xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>メソッド</xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{_text}")]

      public class Prompt
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)
  id: '#ctor(System.Speech.Synthesis.PromptBuilder)'
  parent: System.Speech.Synthesis.Prompt
  langs:
  - csharp
  name: Prompt(PromptBuilder)
  nameWithType: Prompt.Prompt(PromptBuilder)
  fullName: System.Speech.Synthesis.Prompt.Prompt(PromptBuilder)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref>クラス、 <xref href=&quot;System.Speech.Synthesis.PromptBuilder&quot;> </xref>オブジェクト。"
  syntax:
    content: public Prompt (System.Speech.Synthesis.PromptBuilder promptBuilder);
    parameters:
    - id: promptBuilder
      type: System.Speech.Synthesis.PromptBuilder
      description: "読み上げるコンテンツ。"
  overload: System.Speech.Synthesis.Prompt.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.Prompt.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Speech.Synthesis.Prompt
  langs:
  - csharp
  name: Prompt(String)
  nameWithType: Prompt.Prompt(String)
  fullName: System.Speech.Synthesis.Prompt.Prompt(String)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref>クラスし、読み上げるテキストを指定します。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Speech.Synthesis.Prompt> object from a string and passes the object as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Create a prompt from a string.  \n        Prompt color = new Prompt(\"What is your favorite color?\");  \n  \n        // Speak the contents of the prompt synchronously.  \n        synth.Speak(color);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n```"
  syntax:
    content: public Prompt (string textToSpeak);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "読み上げるテキスト。"
  overload: System.Speech.Synthesis.Prompt.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)
  id: '#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)'
  parent: System.Speech.Synthesis.Prompt
  langs:
  - csharp
  name: Prompt(String,SynthesisTextFormat)
  nameWithType: Prompt.Prompt(String,SynthesisTextFormat)
  fullName: System.Speech.Synthesis.Prompt.Prompt(String,SynthesisTextFormat)
  type: Constructor
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "新しいインスタンスを作成、 <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref>クラスし、読み上げるテキスト、およびその形式がプレーン テキストかマークアップ言語を指定します。"
  remarks: "内容、`textToSpeak`パラメーターを含める必要があります、`speak`要素に従っている必要があります、[音声合成マークアップ言語 (SSML) バージョン 1.0](http://go.microsoft.com/fwlink/?LinkId=201763)です。 詳細については、次を参照してください。[音声合成マークアップ言語リファレンス](http://msdn.microsoft.com/en-us/0c51279e-84d2-4f73-a924-8832039abf94)です。"
  example:
  - "The following example builds a string that contains SSML markup, creates a <xref:System.Speech.Synthesis.Prompt> object from the string, and speaks the prompt.  \n  \n```c#  \nusing System;  \nusing System.Speech.Synthesis;  \n  \nnamespace SampleSynthesis  \n{  \n  class Program  \n  {  \n    static void Main(string[] args)  \n    {  \n  \n      // Initialize a new instance of the SpeechSynthesizer.  \n      using (SpeechSynthesizer synth = new SpeechSynthesizer())  \n      {  \n  \n        // Configure the audio output.   \n        synth.SetOutputToDefaultAudioDevice();  \n  \n        // Build an SSML prompt in a string.  \n        string fileName = \"<speak version=\\\"1.0\\\" \";  \n        fileName += \"xmlns=\\\"http://www.w3.org/2001/10/synthesis\\\" \";  \n        fileName += \"xml:lang=\\\"en-US\\\">\";  \n        fileName += \"Say a name for the new file <mark name=\\\"fileName\\\" />.\";  \n        fileName += \"</speak>\";  \n  \n        // Create a Prompt object from the string.  \n        Prompt ssmlFile = new Prompt(fileName, SynthesisTextFormat.Ssml);  \n  \n        // Speak the contents of the SSML prompt.  \n        synth.Speak(ssmlFile);  \n      }  \n  \n      Console.WriteLine();  \n      Console.WriteLine(\"Press any key to exit...\");  \n      Console.ReadKey();  \n    }  \n  }  \n}  \n  \n```"
  syntax:
    content: public Prompt (string textToSpeak, System.Speech.Synthesis.SynthesisTextFormat media);
    parameters:
    - id: textToSpeak
      type: System.String
      description: "読み上げるテキスト。"
    - id: media
      type: System.Speech.Synthesis.SynthesisTextFormat
      description: "テキストの書式を指定する値。"
  overload: System.Speech.Synthesis.Prompt.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Synthesis.Prompt.IsCompleted
  id: IsCompleted
  parent: System.Speech.Synthesis.Prompt
  langs:
  - csharp
  name: IsCompleted
  nameWithType: Prompt.IsCompleted
  fullName: System.Speech.Synthesis.Prompt.IsCompleted
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Synthesis
  summary: "取得するかどうか、 <xref href=&quot;System.Speech.Synthesis.Prompt&quot;> </xref>再生が完了します。"
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> 、プロンプトが完了している場合は、それ以外の場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Speech.Synthesis.Prompt.IsCompleted*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Synthesis.Prompt.#ctor(System.Speech.Synthesis.PromptBuilder)
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: Prompt(PromptBuilder)
  nameWithType: Prompt.Prompt(PromptBuilder)
  fullName: System.Speech.Synthesis.Prompt.Prompt(PromptBuilder)
- uid: System.Speech.Synthesis.PromptBuilder
  parent: System.Speech.Synthesis
  isExternal: false
  name: PromptBuilder
  nameWithType: PromptBuilder
  fullName: System.Speech.Synthesis.PromptBuilder
- uid: System.Speech.Synthesis.Prompt.#ctor(System.String)
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: Prompt(String)
  nameWithType: Prompt.Prompt(String)
  fullName: System.Speech.Synthesis.Prompt.Prompt(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Synthesis.Prompt.#ctor(System.String,System.Speech.Synthesis.SynthesisTextFormat)
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: Prompt(String,SynthesisTextFormat)
  nameWithType: Prompt.Prompt(String,SynthesisTextFormat)
  fullName: System.Speech.Synthesis.Prompt.Prompt(String,SynthesisTextFormat)
- uid: System.Speech.Synthesis.SynthesisTextFormat
  parent: System.Speech.Synthesis
  isExternal: false
  name: SynthesisTextFormat
  nameWithType: SynthesisTextFormat
  fullName: System.Speech.Synthesis.SynthesisTextFormat
- uid: System.Speech.Synthesis.Prompt.IsCompleted
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: IsCompleted
  nameWithType: Prompt.IsCompleted
  fullName: System.Speech.Synthesis.Prompt.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Speech.Synthesis.Prompt.#ctor*
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: Prompt
  nameWithType: Prompt.Prompt
- uid: System.Speech.Synthesis.Prompt.IsCompleted*
  parent: System.Speech.Synthesis.Prompt
  isExternal: false
  name: IsCompleted
  nameWithType: Prompt.IsCompleted
