### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceListenerCollection
  id: TraceListenerCollection
  children:
  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  - System.Diagnostics.TraceListenerCollection.Clear
  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  - System.Diagnostics.TraceListenerCollection.Count
  - System.Diagnostics.TraceListenerCollection.GetEnumerator
  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.Item(System.String)
  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  - System.Diagnostics.TraceListenerCollection.Remove(System.String)
  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
  type: Class
  summary: "スレッド セーフな一覧を示します<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>オブジェクト。"
  remarks: "出力のリスナーを指定するのには、TraceListenerCollection 一覧を使用してください、<xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>と<xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName>コレクションです。</xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> </xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> 。 このクラスのインスタンスを作成することはできません。       この一覧はスレッド セーフが、一覧と、列挙子にアクセスするために使用するメソッドの同期ロックを取得します。 代わりに、コレクションのコピー、コピーを変更すると、および参照が、コレクションのコピーに設定します。 メソッドと同様に<xref:System.Diagnostics.TraceListenerCollection.Add%2A>、 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>、および<xref:System.Diagnostics.TraceListenerCollection.Clear%2A>コレクション内の要素を変更します</xref:System.Diagnostics.TraceListenerCollection.Clear%2A></xref:System.Diagnostics.TraceListenerCollection.Remove%2A></xref:System.Diagnostics.TraceListenerCollection.Add%2A>。       TraceListenerCollection クラスは、提供、<xref:System.Diagnostics.TraceListenerCollection.Count%2A>リストに関する情報のプロパティ</xref:System.Diagnostics.TraceListenerCollection.Count%2A>。 次のメソッドも用意されています<xref:System.Diagnostics.TraceListenerCollection.Contains%2A>、 <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>、 <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>。</xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> </xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A> </xref:System.Diagnostics.TraceListenerCollection.Contains%2A> 。       このクラスには、一覧を変更する次のメソッドも用意されています: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>、 <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>、 <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>、 <xref:System.Diagnostics.TraceListenerCollection.Remove%2A></xref:System.Diagnostics.TraceListenerCollection.Remove%2A> </xref:System.Diagnostics.TraceListenerCollection.Insert%2A> </xref:System.Diagnostics.TraceListenerCollection.Clear%2A> </xref:System.Diagnostics.TraceListenerCollection.Add%2A> 。 <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>メソッドがリストの一部を配列にコピーします</xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>。 <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>メソッドは、指定したインデックス番号のリストのメンバーを削除します</xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A>。"
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cs[Classic Trace.Listeners Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic Trace.Listeners Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_1_1.vb)]\n [!code-cpp[Classic Trace.Listeners Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_1_1.cpp)]"
  syntax:
    content: 'public class TraceListenerCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  id: Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "追加、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>一覧にします。"
  remarks: ''
  example:
  - "The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/cpp/06848b43-b480-461b-8d6e-_1.cpp)]\n [!code-vb[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/visualbasic/06848b43-b480-461b-8d6e-_1.vb)]\n [!code-cs[Classic TraceListenerCollection.Add Example#1](~/add/codesnippet/csharp/06848b43-b480-461b-8d6e-_1.cs)]"
  syntax:
    content: public int Add (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧に追加します。"
    return:
      type: System.Int32
      description: "新しいリスナーが挿入された位置。"
  overload: System.Diagnostics.TraceListenerCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  id: AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "配列を追加<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>リストするオブジェクト。"
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListener[] value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListener[]
      description: "配列<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>一覧に追加するオブジェクト。"
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  id: AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "別の内容を追加<xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>一覧にします。"
  syntax:
    content: public void AddRange (System.Diagnostics.TraceListenerCollection value);
    parameters:
    - id: value
      type: System.Diagnostics.TraceListenerCollection
      description: "別<xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>内容は、リストに追加されます。"
  overload: System.Diagnostics.TraceListenerCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Clear
  id: Clear
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "一覧からのすべてのリスナーをクリアします。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Diagnostics.TraceListenerCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  id: Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "一覧が、指定されたリスナーを含むかどうかを確認します。"
  remarks: "Contains メソッドがの存在を確認、<xref:System.Diagnostics.TraceListener>さらに操作を実行する前にします</xref:System.Diagnostics.TraceListener>。"
  syntax:
    content: public bool Contains (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>一覧内を検索します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>リスナーが一覧にある場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Diagnostics.TraceListenerCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "現在のセクションをコピー <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>指定したインデックス位置の指定した配列にリストします。"
  syntax:
    content: public void CopyTo (System.Diagnostics.TraceListener[] listeners, int index);
    parameters:
    - id: listeners
      type: System.Diagnostics.TraceListener[]
      description: "型の配列<xref:System.Array>に要素をコピーする</xref:System.Array>。"
    - id: index
      type: System.Int32
      description: "コピーを現在のリストの開始インデックス番号します。"
  overload: System.Diagnostics.TraceListenerCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Count
  id: Count
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "一覧で、リスナーの数を取得します。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "リスト内のリスナーの数。"
  overload: System.Diagnostics.TraceListenerCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "この一覧の列挙子を取得します。"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>。</xref:System.Collections.IEnumerator>の種類の列挙子"
  overload: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  id: IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "指定されたリスナーのインデックスを取得します。"
  syntax:
    content: public int IndexOf (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>一覧内を検索します。"
    return:
      type: System.Int32
      description: "リストで見つからないことができる場合、リスナーのインデックスそれ以外の場合、-1 を返します。"
  overload: System.Diagnostics.TraceListenerCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  id: Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "リスナーは、指定したインデックス位置に挿入します。"
  remarks: "インデックスが等しい場合、リスト内の項目の数、リスナーが、リストの末尾に追加されます。       インデックスは&0; です。 したがって、リスナーを&3; 番目の位置に挿入する場合は、呼び出す必要があります`myTraceListenerColl.Insert(2, myNewListener)`です。"
  syntax:
    content: public void Insert (int index, System.Diagnostics.TraceListener listener);
    parameters:
    - id: index
      type: System.Int32
      description: "新しいを挿入するリスト内の位置<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>です。"
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>をリストに挿入します。"
  overload: System.Diagnostics.TraceListenerCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>リスト内の有効なインデックスではありません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>listener</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得または設定、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>指定したインデックス位置。"
  remarks: "インデックスは&0; です。 そのため、する必要がありますから&1; を減算する特定<xref:System.Diagnostics.TraceListener><xref:System.Diagnostics.TraceListener>。</xref:System.Diagnostics.TraceListener>にアクセスする</xref:System.Diagnostics.TraceListener>の位置を表す数値 たとえば、3 つ目を取得する<xref:System.Diagnostics.TraceListener>を指定する必要があります`myTraceListenerColl[2]`</xref:System.Diagnostics.TraceListener>。"
  syntax:
    content: public System.Diagnostics.TraceListener this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧から取得します。"
    return:
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>指定したインデックス。"
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "最初に取得<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>指定した名前が一覧にします。"
  remarks: "<xref:System.Diagnostics.TraceListenerCollection.Item%2A>プロパティは、名前を検索するとき、大文字小文字を区別します</xref:System.Diagnostics.TraceListenerCollection.Item%2A>。 名&quot;Lname&quot;と&quot;lname&quot;を&2; つのリスナーが存在しない場合、<xref:System.Diagnostics.TraceListenerCollection.Item%2A>プロパティの検索がのみ、<xref:System.Diagnostics.TraceListener>で、<xref:System.Diagnostics.TraceListener.Name%2A>を指定すること、両方は使用できません</xref:System.Diagnostics.TraceListener.Name%2A></xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection.Item%2A>。"
  syntax:
    content: public System.Diagnostics.TraceListener this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧から取得します。"
    return:
      type: System.Diagnostics.TraceListener
      description: "最初の<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>特定<xref:System.Diagnostics.TraceListener.Name*>.</xref:System.Diagnostics.TraceListener.Name*>で、リスト内 この項目が返されます<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>いない場合<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>指定した名前にあります。"
  overload: System.Diagnostics.TraceListenerCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  id: Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "指定したコレクションから削除<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>です。"
  syntax:
    content: public void Remove (System.Diagnostics.TraceListener listener);
    parameters:
    - id: listener
      type: System.Diagnostics.TraceListener
      description: "A <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧から削除します。"
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "1 つ目のコレクションから削除<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>指定した名前です。"
  remarks: "`name`パラメーターは大文字小文字を区別します。 つまり、名&quot;Rname&quot;と&quot;rname&quot;で&2; つのリスナーが存在しない場合、<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>メソッドは名前を特定のリスナーを検索します</xref:System.Diagnostics.TraceListenerCollection.Remove%2A>。"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "名前、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧から削除します。"
  overload: System.Diagnostics.TraceListenerCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "コレクションから削除、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>指定したインデックス位置。"
  remarks: "インデックスは&0; です。 そのため、する必要がありますから&1; を減算する特定<xref:System.Diagnostics.TraceListener><xref:System.Diagnostics.TraceListener>。</xref:System.Diagnostics.TraceListener>を削除する</xref:System.Diagnostics.TraceListener>位置を表す数値 たとえば、3 つ目を削除する<xref:System.Diagnostics.TraceListener>を指定する必要があります`myTraceListenerColl.RemoveAt(2)`</xref:System.Diagnostics.TraceListener>。"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>を一覧から削除します。"
  overload: System.Diagnostics.TraceListenerCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code>リスト内の有効なインデックスではありません。"
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "現在のセクションをコピー <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>の指定した配列に<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>オブジェクト。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>のメソッド、<xref:System.Diagnostics.TraceListenerCollection>を配列にコレクションのすべてまたは一部をコピーするクラス</xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A>。"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 次元配列<xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>オブジェクトからコピーされた要素のコピー先である、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。 配列は、0 から始まるインデックスが必要です。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "アクセスをするかどうかを示す値を取得、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>が同期されている (スレッド セーフである)。"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "現在<xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>オブジェクト。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "トレース リスナーを追加、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.Add%2A>をコレクションに新しいトレース リスナーを追加するメソッド</xref:System.Diagnostics.TraceListenerCollection.Add%2A>。"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "追加するオブジェクト、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
    return:
      type: System.Int32
      description: "新しいトレース リスナーが挿入された位置。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>value</code> is not a <xref href=&quot;System.Diagnostics.TraceListener&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "指定するかどうか、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>特定のオブジェクトが含まれています。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.Contains%2A>のメソッド、<xref:System.Diagnostics.TraceListenerCollection>特定がコレクションに含まれているかどうかを決めるクラスを<xref:System.Diagnostics.TraceListener>オブジェクト</xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.Contains%2A>。"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "内で検索するオブジェクト、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.Object>で見つかった、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Object> 。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "特定のオブジェクトのインデックス番号、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>のメソッド、<xref:System.Diagnostics.TraceListenerCollection>のインデックスを決めるクラスを<xref:System.Diagnostics.TraceListener>コレクション内のオブジェクト</xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>。"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "内で検索するオブジェクト、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
    return:
      type: System.Int32
      description: "インデックス<code> value </code>場合に、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>以外の場合、-1。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "挿入、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>オブジェクトで指定した位置にある、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.Insert%2A>のメソッド、<xref:System.Diagnostics.TraceListenerCollection>を挿入するクラス、<xref:System.Diagnostics.TraceListener>コレクション内のオブジェクト</xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.Insert%2A>。"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "位置の&0; から始まるインデックス`value`挿入する必要があります。"
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>に挿入するオブジェクト、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code><xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>オブジェクト。"
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>のサイズが固定されています。"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;> </xref>は読み取り専用"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得または設定、 <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>で指定したインデックス位置、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.Item%2A>プロパティまたはインデクサーの<xref:System.Diagnostics.TraceListenerCollection>クラスを取得または設定、<xref:System.Diagnostics.TraceListener>コレクション内で</xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.Item%2A>。"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス、`value`を取得します。"
    return:
      type: System.Object
      description: "<xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref>指定したインデックス位置。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Diagnostics.TraceListenerCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "オブジェクトを削除、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  remarks: "使用して、<xref:System.Diagnostics.TraceListenerCollection.Remove%2A>のメソッド、<xref:System.Diagnostics.TraceListenerCollection>を削除するクラス、<xref:System.Diagnostics.TraceListener>コレクションから</xref:System.Diagnostics.TraceListener></xref:System.Diagnostics.TraceListenerCollection></xref:System.Diagnostics.TraceListenerCollection.Remove%2A>。"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "削除するオブジェクト、 <xref href=&quot;System.Diagnostics.TraceListenerCollection&quot;></xref>です。"
  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add(TraceListener)
  nameWithType: TraceListenerCollection.Add(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Add(TraceListener)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListener[])
  nameWithType: TraceListenerCollection.AddRange(TraceListener[])
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListener[])
- uid: System.Diagnostics.TraceListener[]
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener[]
  spec.csharp:
  - uid: System.Diagnostics.TraceListener
    name: TraceListener
    nameWithType: TraceListener
    fullName: TraceListener[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange(TraceListenerCollection)
  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)
  fullName: System.Diagnostics.TraceListenerCollection.AddRange(TraceListenerCollection)
- uid: System.Diagnostics.TraceListenerCollection
  parent: System.Diagnostics
  isExternal: false
  name: TraceListenerCollection
  nameWithType: TraceListenerCollection
  fullName: System.Diagnostics.TraceListenerCollection
- uid: System.Diagnostics.TraceListenerCollection.Clear
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear()
  nameWithType: TraceListenerCollection.Clear()
  fullName: System.Diagnostics.TraceListenerCollection.Clear()
- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains(TraceListener)
  nameWithType: TraceListenerCollection.Contains(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Contains(TraceListener)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo(TraceListener[],Int32)
  nameWithType: TraceListenerCollection.CopyTo(TraceListener[],Int32)
  fullName: System.Diagnostics.TraceListenerCollection.CopyTo(TraceListener[],Int32)
- uid: System.Diagnostics.TraceListenerCollection.Count
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
  fullName: System.Diagnostics.TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TraceListenerCollection.GetEnumerator()
  fullName: System.Diagnostics.TraceListenerCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf(TraceListener)
  nameWithType: TraceListenerCollection.IndexOf(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.IndexOf(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert(Int32,TraceListener)
  nameWithType: TraceListenerCollection.Insert(Int32,TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Insert(Int32,TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TraceListenerCollection.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item(String)
  nameWithType: TraceListenerCollection.Item(String)
  fullName: System.Diagnostics.TraceListenerCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(TraceListener)
  nameWithType: TraceListenerCollection.Remove(TraceListener)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(TraceListener)
- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove(String)
  nameWithType: TraceListenerCollection.Remove(String)
  fullName: System.Diagnostics.TraceListenerCollection.Remove(String)
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TraceListenerCollection.RemoveAt(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.RemoveAt(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Add(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Add(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Contains(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TraceListenerCollection.System.Collections.IList.Item(Int32)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Item(Int32)
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove(Object)
  fullName: System.Diagnostics.TraceListenerCollection.System.Collections.IList.Remove(Object)
- uid: System.Diagnostics.TraceListenerCollection.Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Add
  nameWithType: TraceListenerCollection.Add
- uid: System.Diagnostics.TraceListenerCollection.AddRange*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: AddRange
  nameWithType: TraceListenerCollection.AddRange
- uid: System.Diagnostics.TraceListenerCollection.Clear*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Clear
  nameWithType: TraceListenerCollection.Clear
- uid: System.Diagnostics.TraceListenerCollection.Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Contains
  nameWithType: TraceListenerCollection.Contains
- uid: System.Diagnostics.TraceListenerCollection.CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: CopyTo
  nameWithType: TraceListenerCollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.Count*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Count
  nameWithType: TraceListenerCollection.Count
- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TraceListenerCollection.GetEnumerator
- uid: System.Diagnostics.TraceListenerCollection.IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: IndexOf
  nameWithType: TraceListenerCollection.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Insert
  nameWithType: TraceListenerCollection.Insert
- uid: System.Diagnostics.TraceListenerCollection.Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Item
  nameWithType: TraceListenerCollection.Item
- uid: System.Diagnostics.TraceListenerCollection.Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: Remove
  nameWithType: TraceListenerCollection.Remove
- uid: System.Diagnostics.TraceListenerCollection.RemoveAt*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TraceListenerCollection.RemoveAt
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TraceListenerCollection.System.Collections.IList.Add
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TraceListenerCollection.System.Collections.IList.Contains
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TraceListenerCollection.System.Collections.IList.Insert
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TraceListenerCollection.System.Collections.IList.Item
- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*
  parent: System.Diagnostics.TraceListenerCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TraceListenerCollection.System.Collections.IList.Remove
