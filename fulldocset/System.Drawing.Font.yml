### YamlMime:ManagedReference
items:
- uid: System.Drawing.Font
  id: Font
  children:
  - System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)
  - System.Drawing.Font.#ctor(System.String,System.Single)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)
  - System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)
  - System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  - System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  - System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  - System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  - System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  - System.Drawing.Font.Bold
  - System.Drawing.Font.Clone
  - System.Drawing.Font.Dispose
  - System.Drawing.Font.Equals(System.Object)
  - System.Drawing.Font.Finalize
  - System.Drawing.Font.FontFamily
  - System.Drawing.Font.FromHdc(System.IntPtr)
  - System.Drawing.Font.FromHfont(System.IntPtr)
  - System.Drawing.Font.FromLogFont(System.Object)
  - System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)
  - System.Drawing.Font.GdiCharSet
  - System.Drawing.Font.GdiVerticalFont
  - System.Drawing.Font.GetHashCode
  - System.Drawing.Font.GetHeight
  - System.Drawing.Font.GetHeight(System.Drawing.Graphics)
  - System.Drawing.Font.GetHeight(System.Single)
  - System.Drawing.Font.Height
  - System.Drawing.Font.IsSystemFont
  - System.Drawing.Font.Italic
  - System.Drawing.Font.Name
  - System.Drawing.Font.OriginalFontName
  - System.Drawing.Font.Size
  - System.Drawing.Font.SizeInPoints
  - System.Drawing.Font.Strikeout
  - System.Drawing.Font.Style
  - System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Drawing.Font.SystemFontName
  - System.Drawing.Font.ToHfont
  - System.Drawing.Font.ToLogFont(System.Object)
  - System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)
  - System.Drawing.Font.ToString
  - System.Drawing.Font.Underline
  - System.Drawing.Font.Unit
  langs:
  - csharp
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
  type: Class
  summary: "フォントのフォント フェイス、サイズ、およびスタイル属性を含むテキストの特定の書式を定義します。 このクラスは継承できません。"
  remarks: 'フォントを作成する方法の詳細については、次を参照してください。[する方法: フォント ファミリの構築とフォント](~/add/includes/ajax-current-ext-md.md)です。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 サポートされていないフォントを使用しようとする、またはフォントが、アプリケーションを実行しているコンピューターにインストールされていない、Microsoft Sans Serif フォントが置き換えられます。'
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor and the <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, and <xref:System.Drawing.Font.Unit%2A> properties. This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.ComboBox> named `ComboBox1` that is populated with the strings \"Bigger\" and \"Smaller\" and a <xref:System.Windows.Forms.Label> named `Label1`. Paste the following code into the form and associate the `ComboBox1_SelectedIndexChanged` method with the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event of the <xref:System.Windows.Forms.ComboBox> control.  \n  \n [!code-cs[System.Drawing.FontsExample#1](~/add/codesnippet/csharp/t-system.drawing.font_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#1](~/add/codesnippet/cpp/t-system.drawing.font_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#1](~/add/codesnippet/visualbasic/t-system.drawing.font_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Drawing.Design.FontEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      [System.ComponentModel.TypeConverter(typeof(System.Drawing.FontConverter))]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Font : MarshalByRefObject, ICloneable, IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)
  id: '#ctor(System.Drawing.Font,System.Drawing.FontStyle)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(Font,FontStyle)
  nameWithType: Font.Font(Font,FontStyle)
  fullName: System.Drawing.Font.Font(Font,FontStyle)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>は、指定した既存<xref href=&quot;System.Drawing.Font&quot;></xref>と<xref href=&quot;System.Drawing.FontStyle&quot;></xref>列挙します。"
  remarks: "基づくローカライズされたアプリケーションに対して、 [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] 、以前のリリースでのフォントを指定する`prototype`ときにそのフォントがインストールされていないアプリケーションをビルドするために使用するコンピューターでは代わりに使用する Microsoft Sans Serif フォントが発生します。 この動作に依存するアプリケーションと .NET Framework 3.0 のアプリケーションを再コンパイルする必要がありますの Microsoft Sans Serif フォントを指定する必要があります`prototype`です。"
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Color.op_Inequality%2A> operator, the Font constructor, and the <xref:System.Drawing.Font.Bold%2A> property. This example is designed to be used with a Windows Form that contains a button named `Button2`. Paste the following code into your form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/csharp/m-system.drawing.font.sh_1_1.cs)]\n [!code-cpp[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/cpp/m-system.drawing.font.sh_1_1.cpp)]\n [!code-vb[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/visualbasic/m-system.drawing.font.sh_1_1.vb)]"
  syntax:
    content: public Font (System.Drawing.Font prototype, System.Drawing.FontStyle newStyle);
    parameters:
    - id: prototype
      type: System.Drawing.Font
      description: "既存の<xref href=&quot;System.Drawing.Font&quot;></xref>新しい作成元の<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: newStyle
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいに適用する<xref href=&quot;System.Drawing.Font&quot;></xref>です。 複数の値、 <xref href=&quot;System.Drawing.FontStyle&quot;> </xref>列挙型と組み合わせることができます、 <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref>演算子。"
  overload: System.Drawing.Font.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)
  id: '#ctor(System.Drawing.FontFamily,System.Single)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single)
  nameWithType: Font.Font(FontFamily,Single)
  fullName: System.Drawing.Font.Font(FontFamily,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定サイズを使用します。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle>されその<xref:System.Drawing.Font.Unit%2A>プロパティに<xref:System.Drawing.GraphicsUnit>。</xref:System.Drawing.GraphicsUnit>設定</xref:System.Drawing.Font.Unit%2A></xref:System.Drawing.FontStyle></xref:System.Drawing.Font.Style%2A>"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "Em サイズ、新しいフォントのポイントでします。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single)
  id: '#ctor(System.String,System.Single)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single)
  nameWithType: Font.Font(String,Single)
  fullName: System.Drawing.Font.Font(String,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定サイズを使用します。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Style%2A>プロパティに設定<xref:System.Drawing.FontStyle?displayProperty=fullName>されその<xref:System.Drawing.Font.Unit%2A>プロパティ<xref:System.Drawing.GraphicsUnit?displayProperty=fullName>。</xref:System.Drawing.GraphicsUnit?displayProperty=fullName>に設定</xref:System.Drawing.Font.Unit%2A></xref:System.Drawing.FontStyle?displayProperty=fullName></xref:System.Drawing.Font.Style%2A> Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor. This example is designed to be used with a Windows Form and requires a <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event.  \n  \n [!code-vb[System.Drawing.Misc3#ConstructFontWithString](~/add/codesnippet/visualbasic/m-system.drawing.font.sh_0_1.vb)]\n [!code-cs[System.Drawing.Misc3#ConstructFontWithString](~/add/codesnippet/csharp/m-system.drawing.font.sh_0_1.cs)]"
  syntax:
    content: public Font (string familyName, float emSize);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "Em サイズ、新しいフォントのポイントでします。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)
  id: '#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single,FontStyle)
  nameWithType: Font.Font(FontFamily,Single,FontStyle)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズとスタイルを使用します。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Unit%2A><xref:System.Drawing.GraphicsUnit>。</xref:System.Drawing.GraphicsUnit>プロパティ</xref:System.Drawing.Font.Unit%2A>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Drawing.Font> property of a button to a new, bold-style <xref:System.Drawing.Font>. This example is designed to be used with a Windows Form that contains a button named `Button1`. Paste the following code into your form and associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.MiscExamples#11](~/add/codesnippet/csharp/0609fb84-892c-4bd8-9204-_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#11](~/add/codesnippet/cpp/0609fb84-892c-4bd8-9204-_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#11](~/add/codesnippet/visualbasic/0609fb84-892c-4bd8-9204-_1.vb)]"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "Em サイズ、新しいフォントのポイントでします。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>family</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)
  id: '#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single,GraphicsUnit)
  nameWithType: Font.Font(FontFamily,Single,GraphicsUnit)
  fullName: System.Drawing.Font.Font(FontFamily,Single,GraphicsUnit)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズと単位を使用します。 スタイル設定<xref href=&quot;System.Drawing.FontStyle&quot;></xref>です。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Style%2A><xref:System.Drawing.FontStyle?displayProperty=fullName>。</xref:System.Drawing.FontStyle?displayProperty=fullName>プロパティ</xref:System.Drawing.Font.Style%2A>"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>family</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)
  id: '#ctor(System.String,System.Single,System.Drawing.FontStyle)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single,FontStyle)
  nameWithType: Font.Font(String,Single,FontStyle)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズとスタイルを使用します。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Unit%2A><xref:System.Drawing.GraphicsUnit>。</xref:System.Drawing.GraphicsUnit>プロパティ</xref:System.Drawing.Font.Unit%2A> Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。"
  syntax:
    content: public Font (string familyName, float emSize, System.Drawing.FontStyle style);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "Em サイズ、新しいフォントのポイントでします。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)
  id: '#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single,GraphicsUnit)
  nameWithType: Font.Font(String,Single,GraphicsUnit)
  fullName: System.Drawing.Font.Font(String,Single,GraphicsUnit)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズと単位を使用します。 設定されているスタイル<xref href=&quot;System.Drawing.FontStyle&quot;></xref>です。"
  remarks: "結果として得られるフォントがその<xref:System.Drawing.Font.Style%2A><xref:System.Drawing.FontStyle?displayProperty=fullName>。</xref:System.Drawing.FontStyle?displayProperty=fullName>プロパティ</xref:System.Drawing.Font.Style%2A>"
  syntax:
    content: public Font (string familyName, float emSize, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  id: '#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズ、スタイル、および単位を使用します。"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>family</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  id: '#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single,FontStyle,GraphicsUnit)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>指定したサイズ、スタイル、および単位を使用します。"
  remarks: "Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。"
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor. This example is designed to be used with Windows Forms. To run this example, paste this code into a form that contains a button named `Button2`, and associate the `Button2_Click` method with the <xref:System.Windows.Forms.Control.Click> event of the button.  \n  \n [!code-cs[System.Drawing.FontsExample#3](~/add/codesnippet/csharp/108f836f-1583-49a2-bf9a-_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#3](~/add/codesnippet/cpp/108f836f-1583-49a2-bf9a-_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#3](~/add/codesnippet/visualbasic/108f836f-1583-49a2-bf9a-_1.vb)]"
  syntax:
    content: public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  id: '#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>と文字セットを指定したサイズ、スタイル、単位を使用します。"
  remarks: "`gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
    - id: gdiCharSet
      type: System.Byte
      description: "A<xref:System.Byte>を指定する、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]新しいフォントに使用する一連の文字します</xref:System.Byte>。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>family</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  id: '#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single,FontStyle,GraphicsUnit,Byte)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit,Byte)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit,Byte)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>と文字セットを指定したサイズ、スタイル、単位を使用します。"
  remarks: "`gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。 Windows フォーム アプリケーションでは、TrueType フォントをサポートし、OpenType フォントのサポートが制限されます。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。"
  syntax:
    content: public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
    - id: gdiCharSet
      type: System.Byte
      description: "A<xref:System.Byte>を指定する、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]文字セットがこのフォントに使用する</xref:System.Byte>。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  id: '#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>と文字セットを指定したサイズ、スタイル、単位を使用します。"
  remarks: "`gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。"
  syntax:
    content: public Font (System.Drawing.FontFamily family, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);
    parameters:
    - id: family
      type: System.Drawing.FontFamily
      description: "The <xref href=&quot;System.Drawing.FontFamily&quot;></xref> of the new <xref href=&quot;System.Drawing.Font&quot;></xref>."
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
    - id: gdiCharSet
      type: System.Byte
      description: "A<xref:System.Byte>を指定する、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]文字セットがこのフォントに使用する</xref:System.Byte>。"
    - id: gdiVerticalFont
      type: System.Boolean
      description: "新しいフォントがから派生したかどうかを示すブール値、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]縦書きフォントです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>family</code>します。<xref uid=&quot;langword_csharp_null &quot; name=&quot;null &quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  id: '#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)'
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "新しい初期化<xref href=&quot;System.Drawing.Font&quot;></xref>と文字セットを指定したサイズ、スタイル、単位を使用します。"
  remarks: "`gdiCharSet`パラメーターは Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値を取得します。 場合、`familyName`パラメーターは、置き換えられるフォントをアプリケーションを実行しているコンピューターにインストールされていないか、サポートされていない Microsoft Sans Serif を指定します。"
  syntax:
    content: public Font (string familyName, float emSize, System.Drawing.FontStyle style, System.Drawing.GraphicsUnit unit, byte gdiCharSet, bool gdiVerticalFont);
    parameters:
    - id: familyName
      type: System.String
      description: "文字列表現、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>新しい<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
    - id: emSize
      type: System.Single
      description: "指定された単位で、新しいフォントの em サイズ、`unit`パラメーター。"
    - id: style
      type: System.Drawing.FontStyle
      description: "<xref href=&quot;System.Drawing.FontStyle&quot;> </xref>新しいフォントのです。"
    - id: unit
      type: System.Drawing.GraphicsUnit
      description: "<xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>新しいフォントのです。"
    - id: gdiCharSet
      type: System.Byte
      description: "A<xref:System.Byte>を指定する、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]文字セットがこのフォントに使用する</xref:System.Byte>。"
    - id: gdiVerticalFont
      type: System.Boolean
      description: "示すブール値かどうか、新しい<xref href=&quot;System.Drawing.Font&quot;></xref>から派生した、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]縦書きフォントです。"
  overload: System.Drawing.Font.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>emSize</code>0 に等しいまたはそれよりも小さい、無限大と評価されるか有効な数値ではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.Bold
  id: Bold
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Bold
  nameWithType: Font.Bold
  fullName: System.Drawing.Font.Bold
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Drawing.Font&quot;></xref>は太字です。"
  remarks: ''
  example:
  - "The following code example demonstrates the <xref:System.Drawing.Color.op_Inequality%2A> operator, the <xref:System.Drawing.Font.%23ctor%2A> constructor, and the Bold property. This example is designed to be used with a Windows Form that contains a button named `Button2`. Paste the following code into your form and associate the `Button2_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/csharp/p-system.drawing.font.bold_1.cs)]\n [!code-cpp[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/cpp/p-system.drawing.font.bold_1.cpp)]\n [!code-vb[System.Drawing.CharacterRangeExample#3](~/add/codesnippet/visualbasic/p-system.drawing.font.bold_1.vb)]"
  syntax:
    content: public bool Bold { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Drawing.Font&quot;></xref>太字以外、それ以外の場合は、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.Bold*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Clone
  id: Clone
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Clone()
  nameWithType: Font.Clone()
  fullName: System.Drawing.Font.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの正確なコピーが作成<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code clones a <xref:System.Drawing.Font> and draws text with that font.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#1](~/add/codesnippet/cpp/m-system.drawing.font.cl_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#1](~/add/codesnippet/csharp/m-system.drawing.font.cl_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.font.cl_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref> <xref:System.Object>.</xref:System.Object>としてキャスト、このメソッドを作成"
  overload: System.Drawing.Font.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Dispose
  id: Dispose
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Dispose()
  nameWithType: Font.Dispose()
  fullName: System.Drawing.Font.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これによって使用されるすべてのリソースを解放<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "Dispose を呼び出すことにより、これによって使用されるリソース<xref:System.Drawing.Font>を他の目的に再割り当てされます</xref:System.Drawing.Font>。       <xref:System.Drawing.Font>。</xref:System.Drawing.Font>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Drawing.Font>使用不可の状態</xref:System.Drawing.Font>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Drawing.Font>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Drawing.Font>占有されていた</xref:System.Drawing.Font></xref:System.Drawing.Font>。 詳細については、次を参照してください。[アンマネージ リソースのクリーンアップ](~/add/includes/ajax-current-ext-md.md)と[Dispose メソッドの実装](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] ><xref:System.Drawing.Font></xref:System.Drawing.Font>の最後の参照を解放する前に常に呼び出しが破棄。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Drawing.Font>オブジェクトの`Finalize`メソッド</xref:System.Drawing.Font>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Font.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: Font.Equals(Object)
  fullName: System.Drawing.Font.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定したオブジェクトがあるかどうかを示す、 <xref href=&quot;System.Drawing.Font&quot;> </xref>と、同じ<> *>、 <> </> *>、 <> </> *>、 <> </> *>、 <> </> *>、および<> *> プロパティの値としてこの<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates two <xref:System.Drawing.Font> objects and then tests whether they are equivalent.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#2](~/add/codesnippet/cpp/m-system.drawing.font.eq_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#2](~/add/codesnippet/csharp/m-system.drawing.font.eq_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.font.eq_1.vb)]"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "テストするオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <code>obj</code> parameter is a <xref href=&quot;System.Drawing.Font&quot;></xref> and has the same <>*>, <>*>, <>*>, <>*>, <>*>, and <>*> property values as this <xref href=&quot;System.Drawing.Font&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Drawing.Font.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Finalize
  id: Finalize
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Finalize()
  nameWithType: Font.Finalize()
  fullName: System.Drawing.Font.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "リソースを解放し、それがガベージ コレクションによって回収される前に、他のクリーンアップ操作を実行しようとするオブジェクトを許可します。"
  syntax:
    content: ~Font ();
    parameters: []
  overload: System.Drawing.Font.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.FontFamily
  id: FontFamily
  parent: System.Drawing.Font
  langs:
  - csharp
  name: FontFamily
  nameWithType: Font.FontFamily
  fullName: System.Drawing.Font.FontFamily
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "取得、 <xref href=&quot;System.Drawing.FontFamily&quot;> </xref>これに関連付けられている<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "A<xref:System.Drawing.FontFamily>と同様のフォント フェイス、サイズが異なると (たとえば、Arial、Times New Roman、および Verdana) のスタイルがありますフォントのグループを表します</xref:System.Drawing.FontFamily>。"
  syntax:
    content: public System.Drawing.FontFamily FontFamily { get; }
    return:
      type: System.Drawing.FontFamily
      description: "<xref href=&quot;System.Drawing.FontFamily&quot;> </xref>これに関連付けられている<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.FontFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.FromHdc(System.IntPtr)
  id: FromHdc(System.IntPtr)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: FromHdc(IntPtr)
  nameWithType: Font.FromHdc(IntPtr)
  fullName: System.Drawing.Font.FromHdc(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Font&quot;> </xref>デバイス コンテキストを指定した Windows ハンドルから。"
  remarks: "を使用するには、このメソッドの、`hdc`パラメーターは、フォントが選択されているデバイス コンテキストへのハンドルを含める必要があります。 このメソッドは機能しません、`hdc`ハンドルがから取得した、 [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] <xref:System.Drawing.Graphics>オブジェクトのため、`hdc`ハンドルには、選択されているフォントはありません</xref:System.Drawing.Graphics>。"
  syntax:
    content: public static System.Drawing.Font FromHdc (IntPtr hdc);
    parameters:
    - id: hdc
      type: System.IntPtr
      description: "デバイス コンテキストへのハンドル。"
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>このメソッドを作成します。"
  overload: System.Drawing.Font.FromHdc*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定したデバイス コンテキストのフォントは TrueType フォントではないです。"
  platform:
  - net462
- uid: System.Drawing.Font.FromHfont(System.IntPtr)
  id: FromHfont(System.IntPtr)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: FromHfont(IntPtr)
  nameWithType: Font.FromHfont(IntPtr)
  fullName: System.Drawing.Font.FromHfont(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Font&quot;> </xref>指定した Windows ハンドルから。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Gets a handle to a [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] font.  \n  \n-   Creates a <xref:System.Drawing.Font> from that handle.  \n  \n-   Draws text to the screen, using the new <xref:System.Drawing.Font>.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#3](~/add/codesnippet/cpp/m-system.drawing.font.fr_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#3](~/add/codesnippet/csharp/m-system.drawing.font.fr_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.font.fr_1.vb)]"
  syntax:
    content: public static System.Drawing.Font FromHfont (IntPtr hfont);
    parameters:
    - id: hfont
      type: System.IntPtr
      description: "Windows のハンドル、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]フォントです。"
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>このメソッドを作成します。"
  overload: System.Drawing.Font.FromHfont*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>hfont</code>TrueType フォントではないオブジェクトへのポインター。"
  platform:
  - net462
- uid: System.Drawing.Font.FromLogFont(System.Object)
  id: FromLogFont(System.Object)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: FromLogFont(Object)
  nameWithType: Font.FromLogFont(Object)
  fullName: System.Drawing.Font.FromLogFont(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Font&quot;> </xref>指定した GDI 論理フォントから (`LOGFONT`) 構造体。"
  remarks: "A [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `LOGFONT`、または論理のフォントが特定のフォントを表す 14 個のプロパティを格納する構造体。 詳細についてを参照してください「の論理フォント」で、Windows 開発ドキュメント[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。"
  syntax:
    content: public static System.Drawing.Font FromLogFont (object lf);
    parameters:
    - id: lf
      type: System.Object
      description: "<xref:System.Object>を表す、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref uid=&quot;langword_csharp_LOGFONT&quot; name=&quot;LOGFONT&quot; href=&quot;&quot;> </xref>作成元の構造体、 <xref href=&quot;System.Drawing.Font&quot;> </xref></xref:System.Object> 。"
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>このメソッドが作成されます。"
  overload: System.Drawing.Font.FromLogFont*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)
  id: FromLogFont(System.Object,System.IntPtr)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: FromLogFont(Object,IntPtr)
  nameWithType: Font.FromLogFont(Object,IntPtr)
  fullName: System.Drawing.Font.FromLogFont(Object,IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "作成、 <xref href=&quot;System.Drawing.Font&quot;> </xref>指定した GDI 論理フォントから (`LOGFONT`) 構造体。"
  remarks: "A [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `LOGFONT`、または論理のフォントが特定のフォントを表す 14 個のプロパティを格納する構造体。 詳細についてを参照してください「の論理フォント」で、Windows 開発ドキュメント[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。"
  syntax:
    content: public static System.Drawing.Font FromLogFont (object lf, IntPtr hdc);
    parameters:
    - id: lf
      type: System.Object
      description: "<xref:System.Object>を表す、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] <xref uid=&quot;langword_csharp_LOGFONT&quot; name=&quot;LOGFONT&quot; href=&quot;&quot;> </xref>作成元の構造体、 <xref href=&quot;System.Drawing.Font&quot;> </xref></xref:System.Object> 。"
    - id: hdc
      type: System.IntPtr
      description: "追加情報について説明しているデバイス コンテキストへのハンドル、`lf`構造体。"
    return:
      type: System.Drawing.Font
      description: "<xref href=&quot;System.Drawing.Font&quot;> </xref>このメソッドが作成されます。"
  overload: System.Drawing.Font.FromLogFont*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "フォントは TrueType フォントではありません。"
  platform:
  - net462
- uid: System.Drawing.Font.GdiCharSet
  id: GdiCharSet
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GdiCharSet
  nameWithType: Font.GdiCharSet
  fullName: System.Drawing.Font.GdiCharSet
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "GDI 文字セットをこれを指定するバイト値を取得<xref href=&quot;System.Drawing.Font&quot;></xref>を使用します。"
  remarks: "別の文字セットが指定されていない限り、このプロパティは、1 を返します、<xref:System.Drawing.Font.%23ctor%28System.String%2CSystem.Single%2CSystem.Drawing.FontStyle%2CSystem.Drawing.GraphicsUnit%2CSystem.Byte%29>コンス トラクター</xref:System.Drawing.Font.%23ctor%28System.String%2CSystem.Single%2CSystem.Drawing.FontStyle%2CSystem.Drawing.GraphicsUnit%2CSystem.Byte%29> 。 このプロパティは、Windows SDK のヘッダー ファイル WinGDI.h で定義されている一覧から値をとります。 文字セットとバイト値は、次の表に一覧表示されます。      |文字セット |値 |  |-------------------|-----------|  |ANSI |&0; |  |既定の |&1; |  |シンボル |&2; |  |語は SHIFTJIS |&128; |  |ハングル文字 |&129; |  |ハングル |&129; |  |GB2312 |&134; |  |CHINESEBIG5 |&136; |  |OEM |&255; |  |JOHAB |&130; |  |ヘブライ語 |&177; |  |アラビア語 |&178; |  |ギリシャ語 |&161; |  |トルコ語 |&162; |  |ベトナム語 |&163; |  |タイ語 |&222; |  |EASTEUROPE |&238; |  |ロシア語 |&204; |  |MAC |&77; |  |バルト語 |&186; |"
  syntax:
    content: public byte GdiCharSet { get; }
    return:
      type: System.Byte
      description: "指定するバイト値、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]文字セットをこの<xref href=&quot;System.Drawing.Font&quot;></xref>を使用します。 既定値は 1 です。"
  overload: System.Drawing.Font.GdiCharSet*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.GdiVerticalFont
  id: GdiVerticalFont
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GdiVerticalFont
  nameWithType: Font.GdiVerticalFont
  fullName: System.Drawing.Font.GdiVerticalFont
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示すブール値を取得するかどうかこの<xref href=&quot;System.Drawing.Font&quot;></xref>は GDI 縦書きフォントから派生します。"
  remarks: "このプロパティを使用して、フォントが Unicode 以外のプラットフォームでネイティブの Win32 コントロールとの互換性を判断します。       GdiVerticalFont だけを返す`true`LOGFONT または HFONT と同様に、クラシック GDI フォント定義からこのフォントを作成した場合。"
  syntax:
    content: public bool GdiVerticalFont { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Drawing.Font&quot;></xref>から派生した、[!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)]縦書きフォントです。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.GdiVerticalFont*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.GetHashCode
  id: GetHashCode
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: Font.GetHashCode()
  fullName: System.Drawing.Font.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このハッシュ コードを取得<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Font>.  \n  \n-   Gets the hash code for that font.  \n  \n-   Displays a message box with the value of the hash code.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#4](~/add/codesnippet/cpp/m-system.drawing.font.ge_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#4](~/add/codesnippet/csharp/m-system.drawing.font.ge_0_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.font.ge_0_1.vb)]"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "ハッシュ コードをこの<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.GetHeight
  id: GetHeight
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GetHeight()
  nameWithType: Font.GetHeight()
  fullName: System.Drawing.Font.GetHeight()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "(ピクセル単位) フォントの行間を返します。"
  remarks: "The line spacing of a <xref:System.Drawing.Font> is the vertical distance between the base lines of two consecutive lines of text. Thus, the line spacing includes the blank space between lines along with the height of the character itself.  \n  \n If the <xref:System.Drawing.Font.Unit%2A> property of the font is set to anything other than <xref:System.Drawing.GraphicsUnit?displayProperty=fullName>, the height (in pixels) is calculated using the vertical resolution of the screen display. For example, suppose the font unit is inches and the font size is 0.3. Also suppose that for the corresponding font family, the em-height is 2048 and the line spacing is 2355. For a screen display that has a vertical resolution of 96 dots per inch, you can calculate the height as follows:  \n  \n 2355*(0.3/2048)\\*96 = 33.11719"
  syntax:
    content: public float GetHeight ();
    parameters: []
    return:
      type: System.Single
      description: "行の間隔 (ピクセル単位) のこのフォントです。"
  overload: System.Drawing.Font.GetHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.GetHeight(System.Drawing.Graphics)
  id: GetHeight(System.Drawing.Graphics)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GetHeight(Graphics)
  nameWithType: Font.GetHeight(Graphics)
  fullName: System.Drawing.Font.GetHeight(Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "指定した現在の単位で、行間を返します<xref href=&quot;System.Drawing.Graphics&quot;></xref>フォントのです。"
  remarks: "The line spacing of a <xref:System.Drawing.Font> is the vertical distance between the base lines of two consecutive lines of text. Thus, the line spacing includes the blank space between lines along with the height of the character itself.  \n  \n If the <xref:System.Drawing.Font.Unit%2A> property of the font is set to anything other than <xref:System.Drawing.GraphicsUnit?displayProperty=fullName>, the height, in pixels, is calculated using the vertical resolution of the specified <xref:System.Drawing.Graphics> object. For example, suppose the font unit is inches and the font size is 0.3. Also suppose that for the corresponding font family, the em-height is 2048 and the line spacing is 2355. If the <xref:System.Drawing.Graphics> object has a <xref:System.Drawing.Font.Unit%2A> property value of <xref:System.Drawing.GraphicsUnit?displayProperty=fullName> and a <xref:System.Drawing.Graphics.DpiY%2A> property value of 96 dots per inch, the height is calculated as follows:  \n  \n 2355*(0.3/2048)\\*96 = 33.1171875  \n  \n Continuing with the same example, suppose the <xref:System.Drawing.Font.Unit%2A> property of the <xref:System.Drawing.Graphics> object is set to <xref:System.Drawing.GraphicsUnit?displayProperty=fullName> rather than <xref:System.Drawing.GraphicsUnit?displayProperty=fullName>. Then (using 1 inch = 25.4 millimeters) the height, in millimeters, is calculated as follows:  \n  \n 2355*(0.3/2048)25.4 = 8.762256"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Font>.  \n  \n-   Draws a line of text to the screen, using the new <xref:System.Drawing.Font>.  \n  \n-   Gets the height of the font.  \n  \n-   Draws a second line of text directly below the first line.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#5](~/add/codesnippet/cpp/m-system.drawing.font.ge_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#5](~/add/codesnippet/csharp/m-system.drawing.font.ge_1_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.font.ge_1_1.vb)]"
  syntax:
    content: public float GetHeight (System.Drawing.Graphics graphics);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>ディスプレイ デバイスと同様のページの単位とページのスケール設定のインチあたりのドットで垂直方向の解像度を保持します。"
    return:
      type: System.Single
      description: "行の間隔 (ピクセル単位) のこのフォントです。"
  overload: System.Drawing.Font.GetHeight*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Font.GetHeight(System.Single)
  id: GetHeight(System.Single)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: GetHeight(Single)
  nameWithType: Font.GetHeight(Single)
  fullName: System.Drawing.Font.GetHeight(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これのピクセル単位の高さを返します<xref href=&quot;System.Drawing.Font&quot;></xref>指定の垂直方向の解像度を持つデバイスに描画した場合。"
  remarks: "If the <xref:System.Drawing.Font.Unit%2A> property of the font is set to anything other than <xref:System.Drawing.GraphicsUnit?displayProperty=fullName>, the height (in pixels) is calculated using the vertical resolution of the screen display. For example, suppose the font unit is inches and the font size is 0.3. Also suppose that for the corresponding font family, the em-height is 2048 and the line spacing is 2355. If the specified vertical resolution is 96 dots per inch, the height is calculated as follows:  \n  \n 2355*(0.3/2048)\\*96 = 33.1171875"
  syntax:
    content: public float GetHeight (float dpi);
    parameters:
    - id: dpi
      type: System.Single
      description: "垂直方向の解像度ドット/インチ、フォントの高さを計算するために使用します。"
    return:
      type: System.Single
      description: "高さ (ピクセル単位) のこの<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.GetHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Height
  id: Height
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Height
  nameWithType: Font.Height
  fullName: System.Drawing.Font.Height
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このフォントの行間を取得します。"
  remarks: "The line spacing is the vertical distance between the base lines of two consecutive lines of text. Thus, the line spacing includes the blank space between lines along with the height of the character itself.  \n  \n If the <xref:System.Drawing.Font.Unit%2A> property of the font is set to anything other than <xref:System.Drawing.GraphicsUnit?displayProperty=fullName>, the height (in pixels) is calculated using the vertical resolution of the screen display. For example, suppose the font unit is inches and the font size is 0.3. Also suppose that for the corresponding font family, the em-height is 2048 and the line spacing is 2355. For a screen display that has a vertical resolution of 96 dots per inch, you can calculate the height as follows:  \n  \n 2355*(0.3/2048)\\*96 = 33.11719  \n  \n The value returned by the <xref:System.Drawing.Font.GetHeight%2A> method would be 33.11719, and the value returned by the Height property would be 34. The Height property is the value returned by <xref:System.Drawing.Font.GetHeight%2A>, rounded up to the nearest integer."
  syntax:
    content: public int Height { get; }
    return:
      type: System.Int32
      description: "行の間隔 (ピクセル単位) のこのフォントです。"
  overload: System.Drawing.Font.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.IsSystemFont
  id: IsSystemFont
  parent: System.Drawing.Font
  langs:
  - csharp
  name: IsSystemFont
  nameWithType: Font.IsSystemFont
  fullName: System.Drawing.Font.IsSystemFont
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "フォントのメンバーであるかどうかを示す値を取得<xref href=&quot;System.Drawing.SystemFonts&quot;></xref>です。"
  remarks: "IsSystemFont プロパティが返すことが、ユーザーは、システム フォントを変更するときに`true`場合でも、フォントが実際にはシステム フォントではありません。 アプリケーションでのシステム フォントを使用している場合は、このような状況を避けるため、処理することによりユーザーの基本設定の変更を追跡する必要があります、<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging>または<xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged>イベント</xref:Microsoft.Win32.SystemEvents.UserPreferenceChanged></xref:Microsoft.Win32.SystemEvents.UserPreferenceChanging>。"
  syntax:
    content: public bool IsSystemFont { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>フォントのメンバーである場合<xref href=&quot;System.Drawing.SystemFonts&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.IsSystemFont*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Italic
  id: Italic
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Italic
  nameWithType: Font.Italic
  fullName: System.Drawing.Font.Italic
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このフォントに斜体スタイルが適用が含まれているかどうかを示す値を取得します。"
  syntax:
    content: public bool Italic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>このフォントに斜体スタイルが適用されています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.Italic*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Name
  id: Name
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Name
  nameWithType: Font.Name
  fullName: System.Drawing.Font.Name
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの書体名を取得<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor and the <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, Name, <xref:System.Drawing.Font.Style%2A>, and <xref:System.Drawing.Font.Unit%2A> properties. This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.ComboBox> named `ComboBox1` that is populated with the strings \"Bigger\" and \"Smaller\". Paste the following code into the form and associate the `ComboBox1_SelectedIndexChanged` method with the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event of the <xref:System.Windows.Forms.ComboBox> control.  \n  \n [!code-cs[System.Drawing.FontsExample#1](~/add/codesnippet/csharp/p-system.drawing.font.name_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#1](~/add/codesnippet/cpp/p-system.drawing.font.name_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#1](~/add/codesnippet/visualbasic/p-system.drawing.font.name_1.vb)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "これの書体名の文字列表現<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.OriginalFontName
  id: OriginalFontName
  parent: System.Drawing.Font
  langs:
  - csharp
  name: OriginalFontName
  nameWithType: Font.OriginalFontName
  fullName: System.Drawing.Font.OriginalFontName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "最初に指定されたフォントの名前を取得します。"
  remarks: "元のフォント名と実際のフォントの名前が異なるできます。 システム要件以外、最初に指定されたフォントのフォントの使用があります。"
  syntax:
    content: public string OriginalFontName { get; }
    return:
      type: System.String
      description: "最初に指定されたフォントの名前を表す文字列。"
  overload: System.Drawing.Font.OriginalFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Size
  id: Size
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Size
  nameWithType: Font.Size
  fullName: System.Drawing.Font.Size
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの em サイズを取得<xref href=&quot;System.Drawing.Font&quot;></xref>で指定された単位で測定、<xref:System.Drawing.Font.Unit*>プロパティ</xref:System.Drawing.Font.Unit*>。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor and the Size, <xref:System.Drawing.Font.SizeInPoints%2A>, and <xref:System.Drawing.Font.Unit%2A> properties. This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.ComboBox> named `ComboBox1` that is populated with the strings \"Bigger\" and \"Smaller\". Paste the following code into the form and associate the `ComboBox1_SelectedIndexChanged` method with the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event of the <xref:System.Windows.Forms.ComboBox> control.  \n  \n [!code-cs[System.Drawing.FontsExample#1](~/add/codesnippet/csharp/p-system.drawing.font.size_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#1](~/add/codesnippet/cpp/p-system.drawing.font.size_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#1](~/add/codesnippet/visualbasic/p-system.drawing.font.size_1.vb)]"
  syntax:
    content: public float Size { get; }
    return:
      type: System.Single
      description: "これの em サイズ<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.SizeInPoints
  id: SizeInPoints
  parent: System.Drawing.Font
  langs:
  - csharp
  name: SizeInPoints
  nameWithType: Font.SizeInPoints
  fullName: System.Drawing.Font.SizeInPoints
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "これの em サイズを取得<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor and the <xref:System.Drawing.Font.Size%2A>, SizeInPoints, and <xref:System.Drawing.Font.Unit%2A> properties. This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.ComboBox> named `ComboBox1` that is populated with the strings \"Bigger\" and \"Smaller\". Paste the following code into the form and associate the `ComboBox1_SelectedIndexChanged` method with the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event of the <xref:System.Windows.Forms.ComboBox> control.  \n  \n [!code-cs[System.Drawing.FontsExample#1](~/add/codesnippet/csharp/p-system.drawing.font.si_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#1](~/add/codesnippet/cpp/p-system.drawing.font.si_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#1](~/add/codesnippet/visualbasic/p-system.drawing.font.si_1.vb)]"
  syntax:
    content: public float SizeInPoints { get; }
    return:
      type: System.Single
      description: "Em サイズをポイント単位でこの<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.SizeInPoints*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Strikeout
  id: Strikeout
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Strikeout
  nameWithType: Font.Strikeout
  fullName: System.Drawing.Font.Strikeout
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Drawing.Font&quot;></xref>フォントを通る水平線を指定します。"
  syntax:
    content: public bool Strikeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Drawing.Font&quot;></xref>が水平方向の線が引か; それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.Strikeout*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Style
  id: Style
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Style
  nameWithType: Font.Style
  fullName: System.Drawing.Font.Style
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "スタイルのこの情報を取得<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates how to set the <xref:System.Drawing.Font> property of a button to a new bold font using the <xref:System.Drawing.FontStyle> enumeration. This example is designed to be used with Windows Forms. Create a form containing a button named `Button1` and paste the following code into it. Associate the `Button1_Click` method with the button's <xref:System.Windows.Forms.Control.Click> event.  \n  \n [!code-cs[System.Drawing.MiscExamples#11](~/add/codesnippet/csharp/p-system.drawing.font.st_1.cs)]\n [!code-cpp[System.Drawing.MiscExamples#11](~/add/codesnippet/cpp/p-system.drawing.font.st_1.cpp)]\n [!code-vb[System.Drawing.MiscExamples#11](~/add/codesnippet/visualbasic/p-system.drawing.font.st_1.vb)]"
  syntax:
    content: public System.Drawing.FontStyle Style { get; }
    return:
      type: System.Drawing.FontStyle
      description: "A <xref href=&quot;System.Drawing.FontStyle&quot;> </xref>これのスタイル情報を含む列挙<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Drawing.Font
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Font.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Font.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "追加、 <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>ターゲット オブジェクトをシリアル化するために必要なデータを使用します。"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "<xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>にデータを設定します。"
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "宛先 (を参照してください<xref:System.Runtime.Serialization.StreamingContext>) このシリアル化します</xref:System.Runtime.Serialization.StreamingContext>。"
  overload: System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.SystemFontName
  id: SystemFontName
  parent: System.Drawing.Font
  langs:
  - csharp
  name: SystemFontName
  nameWithType: Font.SystemFontName
  fullName: System.Drawing.Font.SystemFontName
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "場合、システム フォントの名前を取得、<xref:System.Drawing.Font.IsSystemFont*>プロパティから返される<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref></xref:System.Drawing.Font.IsSystemFont*> 。"
  remarks: "SystemFontName プロパティによって返される名前には、メンバーのいずれかになります、<xref:System.Drawing.SystemFonts>文字列に変換されます</xref:System.Drawing.SystemFonts>。"
  syntax:
    content: public string SystemFontName { get; }
    return:
      type: System.String
      description: "システム フォントの名前場合<xref:System.Drawing.Font.IsSystemFont*>返します<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>以外の場合、空の文字列 (&quot;&quot;).</xref:System.Drawing.Font.IsSystemFont*>"
  overload: System.Drawing.Font.SystemFontName*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.ToHfont
  id: ToHfont
  parent: System.Drawing.Font
  langs:
  - csharp
  name: ToHfont()
  nameWithType: Font.ToHfont()
  fullName: System.Drawing.Font.ToHfont()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このハンドルを返します<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "このメソッドを使用する場合は、結果を破棄する必要があります`Hfont`を使用して、 [!INCLUDE[ndptecgdi](~/add/includes/ndptecgdi-md.md)] `DeleteObject`メソッドに、リソースが解放されます。"
  example:
  - "The following code example creates a <xref:System.Drawing.Font> and then gets a handle to that <xref:System.Drawing.Font>. The example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#6](~/add/codesnippet/cpp/m-system.drawing.font.to_0_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#6](~/add/codesnippet/csharp/m-system.drawing.font.to_0_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#6](~/add/codesnippet/visualbasic/m-system.drawing.font.to_0_1.vb)]"
  syntax:
    content: public IntPtr ToHfont ();
    parameters: []
    return:
      type: System.IntPtr
      description: "これを Windows ハンドル<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.ToHfont*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "操作に失敗しました。"
  platform:
  - net462
- uid: System.Drawing.Font.ToLogFont(System.Object)
  id: ToLogFont(System.Object)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: ToLogFont(Object)
  nameWithType: Font.ToLogFont(Object)
  fullName: System.Drawing.Font.ToLogFont(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "GDI 論理フォントを作成 (`LOGFONT`) からこの構造体<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "このメソッドを設定、`logFont`フォントが変換の結果のパラメーターです。 論理フォントの詳細については、次を参照してください。 [LOGFONT 構造](http://msdn.microsoft.com/library/dd145037.aspx)です。"
  syntax:
    content: public void ToLogFont (object logFont);
    parameters:
    - id: logFont
      type: System.Object
      description: "<xref:System.Object>を表す、 <xref uid=&quot;langword_csharp_LOGFONT&quot; name=&quot;LOGFONT&quot; href=&quot;&quot;> </xref>このメソッドによって作成される構造です</xref:System.Object>。"
  overload: System.Drawing.Font.ToLogFont*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)
  id: ToLogFont(System.Object,System.Drawing.Graphics)
  parent: System.Drawing.Font
  langs:
  - csharp
  name: ToLogFont(Object,Graphics)
  nameWithType: Font.ToLogFont(Object,Graphics)
  fullName: System.Drawing.Font.ToLogFont(Object,Graphics)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "GDI 論理フォントを作成 (`LOGFONT`) からこの構造体<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "このメソッドを設定、`logFont`フォントが変換の結果のパラメーターです。 論理フォントの詳細については、次を参照してください。 [LOGFONT 構造](http://msdn.microsoft.com/library/dd145037.aspx)です。"
  syntax:
    content: public void ToLogFont (object logFont, System.Drawing.Graphics graphics);
    parameters:
    - id: logFont
      type: System.Object
      description: "<xref:System.Object>を表す、 <xref uid=&quot;langword_csharp_LOGFONT&quot; name=&quot;LOGFONT&quot; href=&quot;&quot;> </xref>このメソッドによって作成される構造です</xref:System.Object>。"
    - id: graphics
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;> </xref>に関する追加情報を提供する、 <xref uid=&quot;langword_csharp_LOGFONT&quot; name=&quot;LOGFONT&quot; href=&quot;&quot;> </xref>構造体。"
  overload: System.Drawing.Font.ToLogFont*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>graphics</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Font.ToString
  id: ToString
  parent: System.Drawing.Font
  langs:
  - csharp
  name: ToString()
  nameWithType: Font.ToString()
  fullName: System.Drawing.Font.ToString()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "この人間が判読できる文字列形式で返します<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: "返される文字列は、次の形式: [フォント: 名前 =*fontName*、サイズ =*サイズ*、ユニット =*ユニット*、GDiCharSet =*gdiCharSet*、GdiVerticalFont =*ブール*]"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Font>.  \n  \n-   Gets a string that represents the font.  \n  \n-   Displays the string in a message box.  \n  \n [!code-cpp[System.Drawing.ClassicFontsExamples#7](~/add/codesnippet/cpp/m-system.drawing.font.to_1_1.cpp)]\n [!code-cs[System.Drawing.ClassicFontsExamples#7](~/add/codesnippet/csharp/m-system.drawing.font.to_1_1.cs)]\n [!code-vb[System.Drawing.ClassicFontsExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.font.to_1_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "これを表す文字列<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Underline
  id: Underline
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Underline
  nameWithType: Font.Underline
  fullName: System.Drawing.Font.Underline
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "示す値を取得するかどうかこの<xref href=&quot;System.Drawing.Font&quot;></xref>下線が付けられます。"
  syntax:
    content: public bool Underline { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>この場合<xref href=&quot;System.Drawing.Font&quot;> </xref> 、それ以外の下線が引かれた<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Drawing.Font.Underline*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Font.Unit
  id: Unit
  parent: System.Drawing.Font
  langs:
  - csharp
  name: Unit
  nameWithType: Font.Unit
  fullName: System.Drawing.Font.Unit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "このメジャーの単位を取得<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Drawing.Font.%23ctor%2A> constructor and the <xref:System.Drawing.Font.Size%2A>, <xref:System.Drawing.Font.SizeInPoints%2A>, and Unit properties. This example is designed to be used with a Windows Form that contains a <xref:System.Windows.Forms.ComboBox> named `ComboBox1` that is populated with the strings \"Bigger\" and \"Smaller\". Paste the following code into the form and associate the `ComboBox1_SelectedIndexChanged` method with the <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> event of the <xref:System.Windows.Forms.ComboBox> control.  \n  \n [!code-cs[System.Drawing.FontsExample#1](~/add/codesnippet/csharp/p-system.drawing.font.unit_1.cs)]\n [!code-cpp[System.Drawing.FontsExample#1](~/add/codesnippet/cpp/p-system.drawing.font.unit_1.cpp)]\n [!code-vb[System.Drawing.FontsExample#1](~/add/codesnippet/visualbasic/p-system.drawing.font.unit_1.vb)]"
  syntax:
    content: public System.Drawing.GraphicsUnit Unit { get; }
    return:
      type: System.Drawing.GraphicsUnit
      description: "A <xref href=&quot;System.Drawing.GraphicsUnit&quot;> </xref>このメジャーの単位を表す<xref href=&quot;System.Drawing.Font&quot;></xref>です。"
  overload: System.Drawing.Font.Unit*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Drawing.Font.#ctor(System.Drawing.Font,System.Drawing.FontStyle)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(Font,FontStyle)
  nameWithType: Font.Font(Font,FontStyle)
  fullName: System.Drawing.Font.Font(Font,FontStyle)
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Drawing.FontStyle
  parent: System.Drawing
  isExternal: false
  name: FontStyle
  nameWithType: FontStyle
  fullName: System.Drawing.FontStyle
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single)
  nameWithType: Font.Font(FontFamily,Single)
  fullName: System.Drawing.Font.Font(FontFamily,Single)
- uid: System.Drawing.FontFamily
  parent: System.Drawing
  isExternal: false
  name: FontFamily
  nameWithType: FontFamily
  fullName: System.Drawing.FontFamily
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Font.#ctor(System.String,System.Single)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single)
  nameWithType: Font.Font(String,Single)
  fullName: System.Drawing.Font.Font(String,Single)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single,FontStyle)
  nameWithType: Font.Font(FontFamily,Single,FontStyle)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle)
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single,GraphicsUnit)
  nameWithType: Font.Font(FontFamily,Single,GraphicsUnit)
  fullName: System.Drawing.Font.Font(FontFamily,Single,GraphicsUnit)
- uid: System.Drawing.GraphicsUnit
  parent: System.Drawing
  isExternal: false
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: System.Drawing.GraphicsUnit
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single,FontStyle)
  nameWithType: Font.Font(String,Single,FontStyle)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle)
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single,GraphicsUnit)
  nameWithType: Font.Font(String,Single,GraphicsUnit)
  fullName: System.Drawing.Font.Font(String,Single,GraphicsUnit)
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit)
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single,FontStyle,GraphicsUnit)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit)
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single,FontStyle,GraphicsUnit,Byte)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit,Byte)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit,Byte)
- uid: System.Drawing.Font.#ctor(System.Drawing.FontFamily,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  nameWithType: Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  fullName: System.Drawing.Font.Font(FontFamily,Single,FontStyle,GraphicsUnit,Byte,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Font.#ctor(System.String,System.Single,System.Drawing.FontStyle,System.Drawing.GraphicsUnit,System.Byte,System.Boolean)
  parent: System.Drawing.Font
  isExternal: false
  name: Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  nameWithType: Font.Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
  fullName: System.Drawing.Font.Font(String,Single,FontStyle,GraphicsUnit,Byte,Boolean)
- uid: System.Drawing.Font.Bold
  parent: System.Drawing.Font
  isExternal: false
  name: Bold
  nameWithType: Font.Bold
  fullName: System.Drawing.Font.Bold
- uid: System.Drawing.Font.Clone
  parent: System.Drawing.Font
  isExternal: false
  name: Clone()
  nameWithType: Font.Clone()
  fullName: System.Drawing.Font.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Font.Dispose
  parent: System.Drawing.Font
  isExternal: false
  name: Dispose()
  nameWithType: Font.Dispose()
  fullName: System.Drawing.Font.Dispose()
- uid: System.Drawing.Font.Equals(System.Object)
  parent: System.Drawing.Font
  isExternal: false
  name: Equals(Object)
  nameWithType: Font.Equals(Object)
  fullName: System.Drawing.Font.Equals(Object)
- uid: System.Drawing.Font.Finalize
  parent: System.Drawing.Font
  isExternal: false
  name: Finalize()
  nameWithType: Font.Finalize()
  fullName: System.Drawing.Font.Finalize()
- uid: System.Drawing.Font.FontFamily
  parent: System.Drawing.Font
  isExternal: false
  name: FontFamily
  nameWithType: Font.FontFamily
  fullName: System.Drawing.Font.FontFamily
- uid: System.Drawing.Font.FromHdc(System.IntPtr)
  parent: System.Drawing.Font
  isExternal: false
  name: FromHdc(IntPtr)
  nameWithType: Font.FromHdc(IntPtr)
  fullName: System.Drawing.Font.FromHdc(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Font.FromHfont(System.IntPtr)
  parent: System.Drawing.Font
  isExternal: false
  name: FromHfont(IntPtr)
  nameWithType: Font.FromHfont(IntPtr)
  fullName: System.Drawing.Font.FromHfont(IntPtr)
- uid: System.Drawing.Font.FromLogFont(System.Object)
  parent: System.Drawing.Font
  isExternal: false
  name: FromLogFont(Object)
  nameWithType: Font.FromLogFont(Object)
  fullName: System.Drawing.Font.FromLogFont(Object)
- uid: System.Drawing.Font.FromLogFont(System.Object,System.IntPtr)
  parent: System.Drawing.Font
  isExternal: false
  name: FromLogFont(Object,IntPtr)
  nameWithType: Font.FromLogFont(Object,IntPtr)
  fullName: System.Drawing.Font.FromLogFont(Object,IntPtr)
- uid: System.Drawing.Font.GdiCharSet
  parent: System.Drawing.Font
  isExternal: false
  name: GdiCharSet
  nameWithType: Font.GdiCharSet
  fullName: System.Drawing.Font.GdiCharSet
- uid: System.Drawing.Font.GdiVerticalFont
  parent: System.Drawing.Font
  isExternal: false
  name: GdiVerticalFont
  nameWithType: Font.GdiVerticalFont
  fullName: System.Drawing.Font.GdiVerticalFont
- uid: System.Drawing.Font.GetHashCode
  parent: System.Drawing.Font
  isExternal: false
  name: GetHashCode()
  nameWithType: Font.GetHashCode()
  fullName: System.Drawing.Font.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.Font.GetHeight
  parent: System.Drawing.Font
  isExternal: false
  name: GetHeight()
  nameWithType: Font.GetHeight()
  fullName: System.Drawing.Font.GetHeight()
- uid: System.Drawing.Font.GetHeight(System.Drawing.Graphics)
  parent: System.Drawing.Font
  isExternal: false
  name: GetHeight(Graphics)
  nameWithType: Font.GetHeight(Graphics)
  fullName: System.Drawing.Font.GetHeight(Graphics)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Drawing.Font.GetHeight(System.Single)
  parent: System.Drawing.Font
  isExternal: false
  name: GetHeight(Single)
  nameWithType: Font.GetHeight(Single)
  fullName: System.Drawing.Font.GetHeight(Single)
- uid: System.Drawing.Font.Height
  parent: System.Drawing.Font
  isExternal: false
  name: Height
  nameWithType: Font.Height
  fullName: System.Drawing.Font.Height
- uid: System.Drawing.Font.IsSystemFont
  parent: System.Drawing.Font
  isExternal: false
  name: IsSystemFont
  nameWithType: Font.IsSystemFont
  fullName: System.Drawing.Font.IsSystemFont
- uid: System.Drawing.Font.Italic
  parent: System.Drawing.Font
  isExternal: false
  name: Italic
  nameWithType: Font.Italic
  fullName: System.Drawing.Font.Italic
- uid: System.Drawing.Font.Name
  parent: System.Drawing.Font
  isExternal: false
  name: Name
  nameWithType: Font.Name
  fullName: System.Drawing.Font.Name
- uid: System.Drawing.Font.OriginalFontName
  parent: System.Drawing.Font
  isExternal: false
  name: OriginalFontName
  nameWithType: Font.OriginalFontName
  fullName: System.Drawing.Font.OriginalFontName
- uid: System.Drawing.Font.Size
  parent: System.Drawing.Font
  isExternal: false
  name: Size
  nameWithType: Font.Size
  fullName: System.Drawing.Font.Size
- uid: System.Drawing.Font.SizeInPoints
  parent: System.Drawing.Font
  isExternal: false
  name: SizeInPoints
  nameWithType: Font.SizeInPoints
  fullName: System.Drawing.Font.SizeInPoints
- uid: System.Drawing.Font.Strikeout
  parent: System.Drawing.Font
  isExternal: false
  name: Strikeout
  nameWithType: Font.Strikeout
  fullName: System.Drawing.Font.Strikeout
- uid: System.Drawing.Font.Style
  parent: System.Drawing.Font
  isExternal: false
  name: Style
  nameWithType: Font.Style
  fullName: System.Drawing.Font.Style
- uid: System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Drawing.Font
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: Font.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Drawing.Font.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Drawing.Font.SystemFontName
  parent: System.Drawing.Font
  isExternal: false
  name: SystemFontName
  nameWithType: Font.SystemFontName
  fullName: System.Drawing.Font.SystemFontName
- uid: System.Drawing.Font.ToHfont
  parent: System.Drawing.Font
  isExternal: false
  name: ToHfont()
  nameWithType: Font.ToHfont()
  fullName: System.Drawing.Font.ToHfont()
- uid: System.Drawing.Font.ToLogFont(System.Object)
  parent: System.Drawing.Font
  isExternal: false
  name: ToLogFont(Object)
  nameWithType: Font.ToLogFont(Object)
  fullName: System.Drawing.Font.ToLogFont(Object)
- uid: System.Drawing.Font.ToLogFont(System.Object,System.Drawing.Graphics)
  parent: System.Drawing.Font
  isExternal: false
  name: ToLogFont(Object,Graphics)
  nameWithType: Font.ToLogFont(Object,Graphics)
  fullName: System.Drawing.Font.ToLogFont(Object,Graphics)
- uid: System.Drawing.Font.ToString
  parent: System.Drawing.Font
  isExternal: false
  name: ToString()
  nameWithType: Font.ToString()
  fullName: System.Drawing.Font.ToString()
- uid: System.Drawing.Font.Underline
  parent: System.Drawing.Font
  isExternal: false
  name: Underline
  nameWithType: Font.Underline
  fullName: System.Drawing.Font.Underline
- uid: System.Drawing.Font.Unit
  parent: System.Drawing.Font
  isExternal: false
  name: Unit
  nameWithType: Font.Unit
  fullName: System.Drawing.Font.Unit
- uid: System.Drawing.Font.#ctor*
  parent: System.Drawing.Font
  isExternal: false
  name: Font
  nameWithType: Font.Font
- uid: System.Drawing.Font.Bold*
  parent: System.Drawing.Font
  isExternal: false
  name: Bold
  nameWithType: Font.Bold
- uid: System.Drawing.Font.Clone*
  parent: System.Drawing.Font
  isExternal: false
  name: Clone
  nameWithType: Font.Clone
- uid: System.Drawing.Font.Dispose*
  parent: System.Drawing.Font
  isExternal: false
  name: Dispose
  nameWithType: Font.Dispose
- uid: System.Drawing.Font.Equals*
  parent: System.Drawing.Font
  isExternal: false
  name: Equals
  nameWithType: Font.Equals
- uid: System.Drawing.Font.Finalize*
  parent: System.Drawing.Font
  isExternal: false
  name: Finalize
  nameWithType: Font.Finalize
- uid: System.Drawing.Font.FontFamily*
  parent: System.Drawing.Font
  isExternal: false
  name: FontFamily
  nameWithType: Font.FontFamily
- uid: System.Drawing.Font.FromHdc*
  parent: System.Drawing.Font
  isExternal: false
  name: FromHdc
  nameWithType: Font.FromHdc
- uid: System.Drawing.Font.FromHfont*
  parent: System.Drawing.Font
  isExternal: false
  name: FromHfont
  nameWithType: Font.FromHfont
- uid: System.Drawing.Font.FromLogFont*
  parent: System.Drawing.Font
  isExternal: false
  name: FromLogFont
  nameWithType: Font.FromLogFont
- uid: System.Drawing.Font.GdiCharSet*
  parent: System.Drawing.Font
  isExternal: false
  name: GdiCharSet
  nameWithType: Font.GdiCharSet
- uid: System.Drawing.Font.GdiVerticalFont*
  parent: System.Drawing.Font
  isExternal: false
  name: GdiVerticalFont
  nameWithType: Font.GdiVerticalFont
- uid: System.Drawing.Font.GetHashCode*
  parent: System.Drawing.Font
  isExternal: false
  name: GetHashCode
  nameWithType: Font.GetHashCode
- uid: System.Drawing.Font.GetHeight*
  parent: System.Drawing.Font
  isExternal: false
  name: GetHeight
  nameWithType: Font.GetHeight
- uid: System.Drawing.Font.Height*
  parent: System.Drawing.Font
  isExternal: false
  name: Height
  nameWithType: Font.Height
- uid: System.Drawing.Font.IsSystemFont*
  parent: System.Drawing.Font
  isExternal: false
  name: IsSystemFont
  nameWithType: Font.IsSystemFont
- uid: System.Drawing.Font.Italic*
  parent: System.Drawing.Font
  isExternal: false
  name: Italic
  nameWithType: Font.Italic
- uid: System.Drawing.Font.Name*
  parent: System.Drawing.Font
  isExternal: false
  name: Name
  nameWithType: Font.Name
- uid: System.Drawing.Font.OriginalFontName*
  parent: System.Drawing.Font
  isExternal: false
  name: OriginalFontName
  nameWithType: Font.OriginalFontName
- uid: System.Drawing.Font.Size*
  parent: System.Drawing.Font
  isExternal: false
  name: Size
  nameWithType: Font.Size
- uid: System.Drawing.Font.SizeInPoints*
  parent: System.Drawing.Font
  isExternal: false
  name: SizeInPoints
  nameWithType: Font.SizeInPoints
- uid: System.Drawing.Font.Strikeout*
  parent: System.Drawing.Font
  isExternal: false
  name: Strikeout
  nameWithType: Font.Strikeout
- uid: System.Drawing.Font.Style*
  parent: System.Drawing.Font
  isExternal: false
  name: Style
  nameWithType: Font.Style
- uid: System.Drawing.Font.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Drawing.Font
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: Font.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Drawing.Font.SystemFontName*
  parent: System.Drawing.Font
  isExternal: false
  name: SystemFontName
  nameWithType: Font.SystemFontName
- uid: System.Drawing.Font.ToHfont*
  parent: System.Drawing.Font
  isExternal: false
  name: ToHfont
  nameWithType: Font.ToHfont
- uid: System.Drawing.Font.ToLogFont*
  parent: System.Drawing.Font
  isExternal: false
  name: ToLogFont
  nameWithType: Font.ToLogFont
- uid: System.Drawing.Font.ToString*
  parent: System.Drawing.Font
  isExternal: false
  name: ToString
  nameWithType: Font.ToString
- uid: System.Drawing.Font.Underline*
  parent: System.Drawing.Font
  isExternal: false
  name: Underline
  nameWithType: Font.Underline
- uid: System.Drawing.Font.Unit*
  parent: System.Drawing.Font
  isExternal: false
  name: Unit
  nameWithType: Font.Unit
