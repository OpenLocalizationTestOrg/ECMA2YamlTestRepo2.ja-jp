### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CustomAce
  id: CustomAce
  children:
  - System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  - System.Security.AccessControl.CustomAce.BinaryLength
  - System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CustomAce.GetOpaque
  - System.Security.AccessControl.CustomAce.MaxOpaqueLength
  - System.Security.AccessControl.CustomAce.OpaqueLength
  - System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  langs:
  - csharp
  name: CustomAce
  nameWithType: CustomAce
  fullName: System.Security.AccessControl.CustomAce
  type: Class
  summary: "表す、アクセス制御エントリ (ACE) が定義されていないのメンバーのいずれかによって、 <xref href=&quot;System.Security.AccessControl.AceType&quot;> </xref>列挙します。"
  remarks: "CustomAce オブジェクトには、ACE ヘッダーとデータの非透過 blob が含まれています。"
  syntax:
    content: 'public sealed class CustomAce : System.Security.AccessControl.GenericAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])'
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref>クラスです。"
  remarks: "`opaque`データは複製されません。 呼び出し元は、データを変更するデータのソースを信頼していない場合は、このコンス トラクターを呼び出す前に、データを複製する必要があります。"
  syntax:
    content: public CustomAce (System.Security.AccessControl.AceType type, System.Security.AccessControl.AceFlags flags, byte[] opaque);
    parameters:
    - id: type
      type: System.Security.AccessControl.AceType
      description: "型の新しいアクセス制御エントリ (ACE)。 この値より大きくなければなりません<xref href=&quot;System.Security.AccessControl.AceType&quot;></xref>です。"
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "継承、継承の反映、に関する情報を指定するフラグ、および新しい ACE の条件を監査します。"
    - id: opaque
      type: System.Byte[]
      description: "新しい ACE のデータを格納するバイト値の配列。 この値は、 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 この配列の長さの値より大きくすることはできません、 <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref>フィールド、および&4; の倍数である必要があります。"
  overload: System.Security.AccessControl.CustomAce.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値、 <code> type </code>パラメーターを超えない<xref href=&quot;System.Security.AccessControl.AceType&quot;></xref>またはの長さ、 <code> opaque </code>配列は、いずれかの値よりも大きい、 <xref href=&quot;System.Security.AccessControl.CustomAce.MaxOpaqueLength&quot;> </xref>フィールドまたは&4; の倍数ではありません。"
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "長さを取得します (バイト単位)、現在のバイナリ表現の<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。 ACL をバイナリ配列にマーシャ リングする前に、この長さを使用する必要があります、<xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>メソッド</xref:System.Security.AccessControl.CustomAce.GetBinaryForm*>。"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "現在のバイナリ表現の長さ (バイト)、 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref>オブジェクト。"
  overload: System.Security.AccessControl.CustomAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "内容をマーシャ リング、 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref>オブジェクトを指定したオフセットで指定したバイト配列の先頭にします。"
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "先のバイト配列の内容、 <xref href=&quot;System.Security.AccessControl.CustomAce&quot;> </xref>はマーシャ リングします。"
    - id: offset
      type: System.Int32
      description: "マーシャ リングの開始オフセットです。"
  overload: System.Security.AccessControl.CustomAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>負の値または大きすぎる全体<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>にコピーされる<code>array</code>です。"
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  id: GetOpaque
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられている不透明なデータを返します<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  syntax:
    content: public byte[] GetOpaque ();
    parameters: []
    return:
      type: System.Byte[]
      description: "これに関連付けられている不透明なデータを表すバイト値配列<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.CustomAce.GetOpaque*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  id: MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "この非透過データ blob の長さを許可される最大値を返します<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  syntax:
    content: public static readonly int MaxOpaqueLength;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  id: OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられている不透明なデータの長さを取得<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  syntax:
    content: public int OpaqueLength { get; }
    return:
      type: System.Int32
      description: "不透明なコールバックのデータの長さ。"
  overload: System.Security.AccessControl.CustomAce.OpaqueLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  id: SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  langs:
  - csharp
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "これに関連付けられているデータの非透過のコールバックを設定<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  syntax:
    content: public void SetOpaque (byte[] opaque);
    parameters:
    - id: opaque
      type: System.Byte[]
      description: "これを不透明なコールバック データを表すバイト値配列<xref href=&quot;System.Security.AccessControl.CustomAce&quot;></xref>オブジェクト。"
  overload: System.Security.AccessControl.CustomAce.SetOpaque*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.GenericAce
  isExternal: false
  name: System.Security.AccessControl.GenericAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.CustomAce.#ctor(System.Security.AccessControl.AceType,System.Security.AccessControl.AceFlags,System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce(AceType,AceFlags,Byte[])
  nameWithType: CustomAce.CustomAce(AceType,AceFlags,Byte[])
  fullName: System.Security.AccessControl.CustomAce.CustomAce(AceType,AceFlags,Byte[])
- uid: System.Security.AccessControl.AceType
  parent: System.Security.AccessControl
  isExternal: false
  name: AceType
  nameWithType: AceType
  fullName: System.Security.AccessControl.AceType
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CustomAce.BinaryLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
  fullName: System.Security.AccessControl.CustomAce.BinaryLength
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CustomAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CustomAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.CustomAce.GetOpaque
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque()
  nameWithType: CustomAce.GetOpaque()
  fullName: System.Security.AccessControl.CustomAce.GetOpaque()
- uid: System.Security.AccessControl.CustomAce.MaxOpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: CustomAce.MaxOpaqueLength
  fullName: System.Security.AccessControl.CustomAce.MaxOpaqueLength
- uid: System.Security.AccessControl.CustomAce.OpaqueLength
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
  fullName: System.Security.AccessControl.CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque(System.Byte[])
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque(Byte[])
  nameWithType: CustomAce.SetOpaque(Byte[])
  fullName: System.Security.AccessControl.CustomAce.SetOpaque(Byte[])
- uid: System.Security.AccessControl.CustomAce.#ctor*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: CustomAce
  nameWithType: CustomAce.CustomAce
- uid: System.Security.AccessControl.CustomAce.BinaryLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: BinaryLength
  nameWithType: CustomAce.BinaryLength
- uid: System.Security.AccessControl.CustomAce.GetBinaryForm*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CustomAce.GetBinaryForm
- uid: System.Security.AccessControl.CustomAce.GetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: GetOpaque
  nameWithType: CustomAce.GetOpaque
- uid: System.Security.AccessControl.CustomAce.OpaqueLength*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: OpaqueLength
  nameWithType: CustomAce.OpaqueLength
- uid: System.Security.AccessControl.CustomAce.SetOpaque*
  parent: System.Security.AccessControl.CustomAce
  isExternal: false
  name: SetOpaque
  nameWithType: CustomAce.SetOpaque
