### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcCommandBuilder
  id: OdbcCommandBuilder
  children:
  - System.Data.Odbc.OdbcCommandBuilder.#ctor
  - System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  - System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  - System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  - System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  langs:
  - csharp
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder
  fullName: System.Data.Odbc.OdbcCommandBuilder
  type: Class
  summary: "加えられた変更を調整するために使用される単一テーブル コマンドを自動的に生成、 <xref href=&quot;System.Data.DataSet&quot;> </xref>関連付けられているデータ ソースとします。 このクラスは継承できません。"
  remarks: "<xref:System.Data.Odbc.OdbcDataAdapter>に加えられた変更を調整するために必要な SQL ステートメントを自動的に生成しない、<xref:System.Data.DataSet>データ ソースに関連付けられている</xref:System.Data.DataSet></xref:System.Data.Odbc.OdbcDataAdapter>。 ただし、 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>のプロパティ</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>を設定して&1; つのテーブルの更新プログラムの SQL ステートメントを生成する OdbcCommandBuilder オブジェクトを作成できます。 OdbcCommandBuilder を設定しない追加の SQL ステートメントが生成されます。       間のリレーションシップ、<xref:System.Data.Odbc.OdbcDataAdapter>あり、その対応する OdbcCommandBuilder 常に一対一です</xref:System.Data.Odbc.OdbcDataAdapter>。 この対応関係を作成するに設定する、 <xref:System.Data.Odbc.OdbcDataAdapter>OdbcCommandBuilder オブジェクトのプロパティ</xref:System.Data.Odbc.OdbcDataAdapter>。 これが原因で OdbcCommandBuilder <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に影響を与えるイベント</xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>の出力が生成されるリスナーとして登録するには       INSERT、UPDATE、または DELETE ステートメントを生成する、OdbcCommandBuilder を使用して、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>必要な一連のメタデータを取得するプロパティです</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>。 値を変更する場合<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>など、最初の更新後に呼び出す必要は、メタデータが取得された後、<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>にメタデータを更新する方法</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>。      > [!NOTE] > に SELECT ステートメントが割り当てられている場合、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>プロパティで使用されてエイリアス列名、結果として得られる INSERT、UPDATE、および DELETE ステートメントが不正確にまたは失敗する可能性があります</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>。 基になる ODBC ドライバーは、別名の列の適切なベースの列名を提供できない場合 (の SQL_DESC_BASE_COLUMN_NAME 値を使用して`SQLColAttribute`)、生成された INSERT、UPDATE、および DELETE ステートメントで、別名を使用する可能性があります。 たとえば、Microsoft ODBC Driver for Oracle は、ベースの列名としてエイリアス名を返します。 そのため、生成された INSERT、UPDATE、および DELETE ステートメントでは、エラーが発生します。       また、OdbcCommandBuilder、使用、 <xref:System.Data.Odbc.OdbcCommand.Connection%2A>、 <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>、 <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>によって参照されるプロパティ</xref:System.Data.Odbc.OdbcCommand.Transaction%2A>と</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A></xref:System.Data.Odbc.OdbcCommand.Connection%2A> ユーザーが呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>1 つ以上のこれらのプロパティを変更すると場合、またはの値、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>プロパティ自体を変更します</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A></xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>、 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>、および<xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>プロパティは、前回の値を保持します</xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>。       呼び出す場合<xref:System.ComponentModel.Component.Dispose%2A>、OdbcCommandBuilder 関連付けが解除され、 <xref:System.Data.Odbc.OdbcDataAdapter>、され、生成されたコマンドは使用されなく</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.ComponentModel.Component.Dispose%2A>。"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source. The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table. The example then creates an OdbcCommandBuilder.  \n  \n [!code-cs[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcc_1_1.cs)]\n [!code-vb[Classic WebData OdbcCommandBuilder#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcc_1_1.vb)]"
  syntax:
    content: 'public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DbCommandBuilder
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref>クラスです。"
  remarks: "基本コンス トラクターは、すべてのフィールドを既定値を初期化します。"
  syntax:
    content: public OdbcCommandBuilder ();
    parameters: []
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  id: '#ctor(System.Data.Odbc.OdbcDataAdapter)'
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;> </xref> 、関連付けられているクラス<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;></xref>オブジェクト。"
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>自体のリスナーとして登録<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>によって生成されるイベント、<xref:System.Data.Odbc.OdbcDataAdapter>このプロパティで指定します</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating></xref:System.Data.Odbc.OdbcCommandBuilder>。       新しいインスタンスを作成する場合<xref:System.Data.Odbc.OdbcCommandBuilder>、既存<xref:System.Data.Odbc.OdbcCommandBuilder>これに関連付けられている<xref:System.Data.Odbc.OdbcDataAdapter>を解放します</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcCommandBuilder></xref:System.Data.Odbc.OdbcCommandBuilder>。"
  syntax:
    content: public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>オブジェクトに関連付けられているこの<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "追加します。"
    - id: datarow
      type: System.Data.DataRow
      description: "追加します。"
    - id: statementType
      type: System.Data.StatementType
      description: "追加します。"
    - id: whereClause
      type: System.Boolean
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>対象のオブジェクト<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>オブジェクトが SQL ステートメントを生成します。"
  remarks: "<xref:System.Data.Odbc.OdbcCommandBuilder>自体のリスナーとして登録<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>によって生成されるイベント、<xref:System.Data.Odbc.OdbcDataAdapter>このプロパティで指定します</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating></xref:System.Data.Odbc.OdbcCommandBuilder>。       新しいインスタンスを作成する場合<xref:System.Data.Odbc.OdbcCommandBuilder>、既存<xref:System.Data.Odbc.OdbcCommandBuilder>これに関連付けられている<xref:System.Data.Odbc.OdbcDataAdapter>を解放します</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcCommandBuilder></xref:System.Data.Odbc.OdbcCommandBuilder>。"
  syntax:
    content: public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Odbc.OdbcDataAdapter
      description: "<xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>これに関連付けられているオブジェクト<xref href=&quot;System.Data.Odbc.OdbcCommandBuilder&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  id: DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "指定されたストアド プロシージャからパラメーター情報を取得、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>取り込んで、<xref:System.Data.Odbc.OdbcCommand.Parameters*>の指定されたコレクション<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>オブジェクト</xref:System.Data.Odbc.OdbcCommand.Parameters*>。"
  remarks: "DeriveParameters <xref:System.Data.Odbc.OdbcCommand>.</xref:System.Data.Odbc.OdbcCommand>の既存のパラメーター情報が上書きされます。       DeriveParameters は、情報を取得するデータ ソースに追加の呼び出しが必要です。 パラメーター情報が事前にわかっている場合は、情報を明示的に設定して、パラメーター コレクションを設定する方が効率的です。       DeriveParameters は、ストアド プロシージャでのみ使用できます。 DeriveParameters は設定に使用することはできません、<xref:System.Data.Odbc.OdbcParameterCollection>パラメーター化された SELECT ステートメントなど、任意の TRANSACT-SQL ステートメントを使用します</xref:System.Data.Odbc.OdbcParameterCollection>。"
  syntax:
    content: public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);
    parameters:
    - id: command
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>が、パラメーター情報の派生元となるストアド プロシージャを参照します。 派生パラメーターに追加されます、<xref:System.Data.Odbc.OdbcCommand.Parameters*>のコレクション、 <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref></xref:System.Data.Odbc.OdbcCommand.Parameters*> 。"
  overload: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "基になる ODBC ドライバーはストアド プロシージャのパラメーター情報を返すことをサポートしていないか、コマンド テキストが有効なストアド プロシージャ名、または<xref href=&quot;System.Data.CommandType&quot;></xref>が指定された<xref uid=&quot;langword_csharp_CommandType.StoredProcedure&quot; name=&quot;CommandType.StoredProcedure&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>データ ソースの削除を実行するために必要なオブジェクトです。"
  remarks: "返すので、情報やトラブルシューティングの目的で GetDeleteCommand メソッドを使用することができます、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand>。       変更されたコマンドの基礎として GetDeleteCommand を使用することができますもします。 たとえば、可能性があります GetDeleteCommand を呼び出し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetDeleteCommand 正しくない可能性があります、前のステートメントからの情報を使用しているされます。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.Common.DbDataAdapter.Update%2A>または GetDeleteCommand</xref:System.Data.Common.DbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>削除を実行するために必要なオブジェクトです。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>データ ソースの削除を実行するために必要なオブジェクトです。"
  remarks: "使用することができます、<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>メソッド情報やトラブルシューティングの目的を返すので、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。       使用することも<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>変更されたコマンドの基礎として</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>正しくない可能性があります、前のステートメントからの情報を使用する</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.Common.DbDataAdapter.Update%2A>または<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       パラメーター名を生成するときに、既定の動作が使用するには@p1、 @p2、さまざまなパラメーターについてです。 渡す`true`を`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.Odbc.OdbcCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.Odbc.OdbcCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さです</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>削除を実行するために必要なオブジェクトです。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>データ ソースでの挿入を実行するために必要なオブジェクトです。"
  remarks: "返すので、情報やトラブルシューティングの目的で GetInsertCommand メソッドを使用することができます、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand>。       また、変更されたコマンドの基礎として GetInsertCommand を使用することができます。 たとえば、可能性があります GetInsertCommand を呼び出し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetInsertCommand まだを使用する前のステートメントは、正しくない可能性がありますからの情報です。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.Common.DbDataAdapter.Update%2A>または GetInsertCommand</xref:System.Data.Common.DbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>挿入を実行するために必要なオブジェクトです。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>データ ソースでの挿入を実行するために必要なオブジェクトです。"
  remarks: "使用することができます、<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>メソッド情報やトラブルシューティングの目的を返すので、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。       使用することも<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>変更されたコマンドの基礎として</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>正しくない可能性があります、前のステートメントからの情報を使用する</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.Common.DbDataAdapter.Update%2A>または<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。</xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       パラメーター名を生成するときに、既定の動作が使用するには@p1、 @p2、さまざまなパラメーターについてです。 渡す`true`の`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.Common.DbCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.Common.DbCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さです</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>挿入を実行するために必要なオブジェクトです。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "追加します。"
    return:
      type: System.String
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>オブジェクト、データ ソースの更新を実行するために必要です。"
  remarks: "返すので、情報やトラブルシューティングの目的での GetUpdateCommand メソッドを使用することができます、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand>。       変更されたコマンドの基礎として GetUpdateCommand を使用することができますもします。 たとえば、可能性があります GetUpdateCommand を呼び出し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、GetUpdateCommand まだを使用する前のステートメントは、正しくない可能性がありますからの情報です。 SQL ステートメントは、アプリケーションがいずれかの<xref:System.Data.Common.DbDataAdapter.Update%2A>または GetUpdateCommand</xref:System.Data.Common.DbDataAdapter.Update%2A> 。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>オブジェクトの更新を実行するために必要です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "自動的に生成された取得<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>オブジェクト、データ ソースの更新を実行するために必要です。"
  remarks: "使用することができます、<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>メソッド情報やトラブルシューティングの目的を返すので、<xref:System.Data.Odbc.OdbcCommand>を実行するオブジェクト</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。       使用することも<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>変更されたコマンドの基礎として</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。 たとえば、呼び出すことができます<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>し<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>値、および<xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>ことを明示的に設定</xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>を変更</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>       SQL ステートメントを生成した後に明示的に呼び出す必要があります<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>任意の方法で、ステートメントが変更された場合</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>。 それ以外の場合、<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>まだがある情報を使用して前のステートメントは、正しくない可能性があります</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。 SQL ステートメントは、アプリケーションがいずれか<xref:System.Data.Common.DbDataAdapter.Update%2A>または<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。</xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       パラメーター名を生成するときに、既定の動作が使用するには@p1、 @p2、さまざまなパラメーターについてです。 渡す`true`の`useColumnsForParameterNames`パラメーターさせることができます、<xref:System.Data.Common.DbCommandBuilder>を代わりに、列名に基づいたパラメーターを生成します</xref:System.Data.Common.DbCommandBuilder>。 これが成功したら、次の条件が満たされた場合にのみ: -<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>が指定されている、生成されたパラメーター名以上の長さです</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>。      -生成されたパラメーターの名前で指定した条件を満たしている、<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>正規表現</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>。      A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>が指定されています</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>。"
  syntax:
    content: public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、可能な場合に、列名に一致するパラメーター名を生成します。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>、生成@p1、@p2のようにします。"
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "自動的に生成された<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;></xref>オブジェクトの更新を実行するために必要です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "正しいカタログ ケースで囲まれていない識別子、指定したを返します、正しい形式の id を引用符で囲まれました。 これには、識別子に埋め込まれた引用符は、正しくエスケープが含まれます。"
  syntax:
    content: public override string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "元の囲まれていない識別子です。"
    return:
      type: System.String
      description: "引用符で囲まれた識別子のバージョンです。 Id 内に埋め込まれた引用符は、正しくエスケープします。"
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "正しいカタログ ケースで囲まれていない識別子、指定したを返します、正しい形式の id を引用符で囲まれました。 これには、識別子に埋め込まれた引用符は、正しくエスケープが含まれます。"
  syntax:
    content: public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "元の囲まれていない識別子です。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "接続が渡されると、SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR) を呼び出し、ODBC ドライバーから引用文字を取得するマネージ ラッパーが行われます。 接続が渡されない場合、文字列は引用符で囲まれた値を使用して<> *> と<> *> です。"
    return:
      type: System.String
      description: "引用符で囲まれた識別子のバージョンです。 Id 内に埋め込まれた引用符は、正しくエスケープします。"
  overload: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "追加します。"
  overload: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "識別子に埋め込まれた引用符を正しくなど、その識別子の引用符形式が正しくエスケープ解除した引用符で囲まれた識別子を返します。"
  syntax:
    content: public override string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "埋め込まれた引用符が削除される id。"
    return:
      type: System.String
      description: "正しくエスケープ解除された埋め込み文字を引用符で囲まれていない識別子です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  id: UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "識別子に埋め込まれた引用符を正しくなど、その識別子の引用符形式が正しくエスケープ解除した引用符で囲まれた識別子を返します。"
  syntax:
    content: public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "埋め込まれた引用符が削除される id。"
    - id: connection
      type: System.Data.Odbc.OdbcConnection
      description: "The <xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>."
    return:
      type: System.String
      description: "正しくエスケープ解除された埋め込み文字を引用符で囲まれていない識別子です。"
  overload: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: System.Data.Common.DbCommandBuilder
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder()
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder()
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder()
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder(OdbcDataAdapter)
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.OdbcCommandBuilder(OdbcDataAdapter)
- uid: System.Data.Odbc.OdbcDataAdapter
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
  fullName: System.Data.Odbc.OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters(OdbcCommand)
  nameWithType: OdbcCommandBuilder.DeriveParameters(OdbcCommand)
  fullName: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: OdbcCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: OdbcCommandBuilder.GetInsertCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: OdbcCommandBuilder.GetParameterName(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterName(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: OdbcCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand()
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: OdbcCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String,OdbcConnection)
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(String,OdbcConnection)
- uid: System.Data.Odbc.OdbcCommandBuilder.#ctor*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: OdbcCommandBuilder
  nameWithType: OdbcCommandBuilder.OdbcCommandBuilder
- uid: System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: OdbcCommandBuilder.ApplyParameterInfo
- uid: System.Data.Odbc.OdbcCommandBuilder.DataAdapter*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: OdbcCommandBuilder.DataAdapter
- uid: System.Data.Odbc.OdbcCommandBuilder.DeriveParameters*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: DeriveParameters
  nameWithType: OdbcCommandBuilder.DeriveParameters
- uid: System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: OdbcCommandBuilder.GetDeleteCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: OdbcCommandBuilder.GetInsertCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterName*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: OdbcCommandBuilder.GetParameterName
- uid: System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: OdbcCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: OdbcCommandBuilder.GetUpdateCommand
- uid: System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: OdbcCommandBuilder.QuoteIdentifier
- uid: System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: OdbcCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Odbc.OdbcCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: OdbcCommandBuilder.UnquoteIdentifier
