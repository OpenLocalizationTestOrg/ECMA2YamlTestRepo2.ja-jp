### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataAdapter
  id: OdbcDataAdapter
  children:
  - System.Data.Odbc.OdbcDataAdapter.#ctor
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  - System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Odbc.OdbcDataAdapter.RowUpdated
  - System.Data.Odbc.OdbcDataAdapter.RowUpdating
  - System.Data.Odbc.OdbcDataAdapter.SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  langs:
  - csharp
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter
  fullName: System.Data.Odbc.OdbcDataAdapter
  type: Class
  summary: "データ コマンドおよび塗りつぶしに使用されるデータ ソースへの接続のセットを表す、 <xref href=&quot;System.Data.DataSet&quot;> </xref>およびデータ ソースを更新します。 このクラスは継承できません。"
  remarks: "間の仲介役を果たす、OdbcDataAdapter、`DataSet`とデータ ソースを取得して、データを保存します。 使用して、OdbcDataAdapter がこのブリッジを提供<xref:System.Data.Common.DbDataAdapter.Fill%2A>にデータ ソースからデータを読み込む、<xref:System.Data.DataSet>を使用して<xref:System.Data.Common.DbDataAdapter.Update%2A>で行われた変更を送信する、<xref:System.Data.DataSet>データ ソースに戻る</xref:System.Data.DataSet></xref:System.Data.Common.DbDataAdapter.Update%2A></xref:System.Data.DataSet></xref:System.Data.Common.DbDataAdapter.Fill%2A>。       OdbcDataAdapter を入力すると、 <xref:System.Data.DataSet>、まだ存在しない場合は、必要なテーブルと、返されるデータの列を作成します</xref:System.Data.DataSet>。 ただし、主キーの情報は含まれません、暗黙的に作成されたスキーマにしない限り、 <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction>にプロパティが設定されています。</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> OdbcDataAdapter を<xref:System.Data.DataSet>含む主キー情報、 <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>。</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>を使用してデータを入力する前に、</xref:System.Data.DataSet>スキーマを作成することもできます。 詳細については、次を参照してください。[データセットへの既存の制約を追加する](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > を呼び出すと、`Fill`主キー列がないデータ ソースでメソッドを OdbcDataAdapter しようとする主キーを一意の制約の列に昇格します。 プロセスでは、OdbcDataAdapter は null を許容しないと、unique 制約をマークします。 この動作は、unique 制約列の null 値がない限りは動作します。 Null 値がある場合、`Fill`メソッドは、制約違反で失敗します。 このような状況を避けるためには、unique 制約列で null 値を許容しないでください。      > [!NOTE] > ネイティブ ODBC ドライバー, <xref:System.Data.DataTable> <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A>を呼び出すときにこれまでに返される</xref:System.Data.DataTable>1 つだけの制限により これは、複数の SQL バッチ ステートメントを実行するときにも true<xref:System.Data.DataTable>オブジェクトと考えられます</xref:System.Data.DataTable>。       OdbcDataAdapter も含まれています、 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>、 <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>、 <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>、 <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>、および`TableMappings`プロパティの読み込みとデータの更新を容易にします</xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>。"
  example:
  - "The following example uses <xref:System.Data.Odbc.OdbcCommand>, OdbcDataAdapter, and <xref:System.Data.Odbc.OdbcConnection> to select records and populate a `DataSet` with the selected rows.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.OdbcDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class OdbcDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.Common.DbDataAdapter.ClearBatch
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.ExecuteBatch
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.Common.DbDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.InitializeBatching
  - System.Data.Common.DbDataAdapter.TerminateBatching
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.UpdateBatchSize
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>クラスです。"
  remarks: "インスタンスを作成する場合<xref:System.Data.Odbc.OdbcDataAdapter>の表に示すように、次の書き込み専用、読み取り専用プロパティがその既定値に設定されます</xref:System.Data.Odbc.OdbcDataAdapter>。      |プロパティ |既定値 |  |----------------|-------------------|  |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|      これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A></xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_2_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_2_1.vb)]"
  syntax:
    content: public OdbcDataAdapter ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  id: '#ctor(System.Data.Odbc.OdbcCommand)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref>クラスは、指定した SQL SELECT ステートメントを使用します。"
  remarks: "この実装、<xref:System.Data.Odbc.OdbcDataAdapter>コンス トラクターのセット、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>プロパティで指定された値を`selectCommand`パラメーター</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> </xref:System.Data.Odbc.OdbcDataAdapter> 。       インスタンスを作成する場合<xref:System.Data.Odbc.OdbcDataAdapter>の表に示すように、次の書き込み専用、読み取り専用プロパティがその既定値に設定されます</xref:System.Data.Odbc.OdbcDataAdapter>。      |プロパティ |初期値 |  |----------------|-------------------|  |<xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>|`MissingMappingAction.Passthrough`|  |<xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>|`MissingSchemaAction.Add`|      これらのプロパティを個別に呼び出してプロパティのいずれかの値を変更することができます</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A></xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_6_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter1#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_6_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (System.Data.Odbc.OdbcCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>を SQL SELECT ステートメントまたはストアド プロシージャは、として設定されている、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>のプロパティ、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> 。"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  id: '#ctor(System.String,System.Data.Odbc.OdbcConnection)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> SQL SELECT ステートメントを使用してクラスおよび<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;></xref>です。"
  remarks: "この実装、<xref:System.Data.Odbc.OdbcDataAdapter>呼び出す必要のあるアプリケーションで役に立ちます、 `Fill`&2; つ以上のメソッド<xref:System.Data.Odbc.OdbcDataAdapter>オブジェクト</xref:System.Data.Odbc.OdbcDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/visualbasic/d0ba4f92-5ec4-4c3a-b38b-_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter3#1](~/add/codesnippet/csharp/d0ba4f92-5ec4-4c3a-b38b-_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, System.Data.Odbc.OdbcConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "文字列は、SQL SELECT ステートメントまたはストアド プロシージャで使用される、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>のプロパティ、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> 。"
    - id: selectConnection
      type: System.Data.Odbc.OdbcConnection
      description: "<xref href=&quot;System.Data.Odbc.OdbcConnection&quot;> </xref>の接続を表すです。"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref> SQL SELECT ステートメントと接続文字列を持つクラス。"
  remarks: "このオーバー ロード、<xref:System.Data.Odbc.OdbcDataAdapter>コンス トラクターを使用して、`selectConnectionString`を設定するパラメーター、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>プロパティ</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A></xref:System.Data.Odbc.OdbcDataAdapter>。 ただし、接続は開かれません。 引き続き開く必要があります明示的に接続します。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_1_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.OdbcDataAdapter2#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_1_1.cs)]"
  syntax:
    content: public OdbcDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "文字列は、SQL SELECT ステートメントまたはストアド プロシージャで使用される、<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*>のプロパティ、 <xref href=&quot;System.Data.Odbc.OdbcDataAdapter&quot;> </xref></xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand*> 。"
    - id: selectConnectionString
      type: System.String
      description: "接続文字列。"
  overload: System.Data.Odbc.OdbcDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "追加します。"
    - id: command
      type: System.Data.IDbCommand
      description: "追加します。"
    - id: statementType
      type: System.Data.StatementType
      description: "追加します。"
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "追加します。"
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "追加します。"
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "追加します。"
    - id: command
      type: System.Data.IDbCommand
      description: "追加します。"
    - id: statementType
      type: System.Data.StatementType
      description: "追加します。"
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "追加します。"
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "追加します。"
  overload: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、SQL ステートメントまたはストアド プロシージャがデータ ソースのレコードを削除するために使用します。"
  remarks: "DeleteCommand プロパティが割り当てられている場合、以前に作成した<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>は複製されません</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand>。 DeleteCommand が以前に作成した<xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>への参照を保持する代わりに、       DeleteCommand が設定されていない、主キーの情報内に存在する場合、更新操作中、 <xref:System.Data.DataSet>、使用することができます、 <xref:System.Data.Odbc.OdbcCommandBuilder>、DeleteCommand を自動的に生成するクラスし、その他のコマンドは調整するために必要な<xref:System.Data.DataSet>データ ソースにします</xref:System.Data.DataSet></xref:System.Data.Odbc.OdbcCommandBuilder></xref:System.Data.DataSet>。 これを行うには、 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>のプロパティ</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>を設定します。 生成ロジックでは、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列の情報も必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and DeleteCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-vb[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_2_1.vb)]\n [!code-cs[Classic WebData OdbcDataAdapter.DeleteCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_2_1.cs)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand DeleteCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>の削除された行に対応するデータ ソースのレコードを削除する更新操作中に使用される、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、SQL ステートメントまたはストアド プロシージャが、データ ソースに新しいレコードを挿入するために使用します。"
  remarks: "InsertCommand プロパティが割り当てられている場合に以前に作成した<xref:System.Data.Odbc.OdbcCommand>オブジェクト、<xref:System.Data.Odbc.OdbcCommand>は複製されません</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand>。 InsertCommand が以前に作成した<xref:System.Data.Odbc.OdbcCommand>。</xref:System.Data.Odbc.OdbcCommand>への参照を保持する代わりに、       InsertCommand が設定されていない、主キーの情報内に存在する場合、更新操作中、 <xref:System.Data.DataSet>、使用することができます、 <xref:System.Data.Odbc.OdbcCommandBuilder>insert コマンドを自動的に生成するクラスし、その他のコマンドは調整するために必要な<xref:System.Data.DataSet>データ ソースにします</xref:System.Data.DataSet></xref:System.Data.Odbc.OdbcCommandBuilder></xref:System.Data.DataSet>。 これを行うには、 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>のプロパティ</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>を設定します。 生成ロジックでは、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列の情報も必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > にこれらの行を追加することがありますこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.Odbc.OdbcCommand>オブジェクト</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A></xref:System.Data.DataSet>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and InsertCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.InsertCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand InsertCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>レコードを挿入する新しい行に対応するデータ ソースで更新操作中に使用される、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "追加します。"
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "追加します。"
  overload: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "データ ソースに対してコマンドが実行された後に、更新操作中に発生します。"
  remarks: "使用すると<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する&2; つのイベントがある</xref:System.Data.Common.DbDataAdapter.Update%2A>。 実行の順序のとおりです: 1。  内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます</xref:System.Data.DataRow>。      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>イベントが発生します</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>。      3.  コマンドを実行します。      4.  コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果は<xref:System.Data.DataRow>.</xref:System.Data.DataRow>に配置されます。      5.  <xref:System.Data.DataRow>。</xref:System.Data.DataRow>に配置される出力パラメーターがある場合      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントが発生します</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>。      7.  <xref:System.Data.DataRow.AcceptChanges%2A>呼び出されます。</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.Odbc.OdbcRowUpdatedEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "中に発生した<xref:System.Data.Common.DbDataAdapter.Update*>データ ソースに対してコマンドを実行する前にします</xref:System.Data.Common.DbDataAdapter.Update*>。"
  remarks: "使用すると<xref:System.Data.Common.DbDataAdapter.Update%2A>、更新されたデータ行ごとに発生する&2; つのイベントがある</xref:System.Data.Common.DbDataAdapter.Update%2A>。 実行の順序のとおりです: 1。  内の値、<xref:System.Data.DataRow>パラメーターの値に移動されます</xref:System.Data.DataRow>。      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>イベントが発生します</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>。      3.  コマンドを実行します。      4.  コマンドに設定されている場合`FirstReturnedRecord`、最初に返された結果は<xref:System.Data.DataRow>.</xref:System.Data.DataRow>に配置されます。      5.  <xref:System.Data.DataRow>。</xref:System.Data.DataRow>に配置される出力パラメーターがある場合      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>イベントが発生します</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>。      7.  <xref:System.Data.DataRow.AcceptChanges%2A>呼び出されます。</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public event System.Data.Odbc.OdbcRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.Odbc.OdbcRowUpdatingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、SQL ステートメントまたはストアド プロシージャがデータ ソースのレコードを選択するために使用します。"
  remarks: "SelectCommand が割り当てられている場合、以前に作成した<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>は複製されません</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand>。 SelectCommand が以前に作成したへの参照を保持する代わりに、<xref:System.Data.Odbc.OdbcCommand>オブジェクト</xref:System.Data.Odbc.OdbcCommand>。       SelectCommand に行が返されなかった場合のテーブルに追加されて、 <xref:System.Data.DataSet>、例外が発生したことはありません</xref:System.Data.DataSet>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the SelectCommand and <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A> properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_3_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.SelectCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_3_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand SelectCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>に配置するデータ ソースからレコードを選択する塗りつぶし操作中に使用される、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明、 <xref:System.Data.IDbDataAdapter.DeleteCommand*>。</xref:System.Data.IDbDataAdapter.DeleteCommand*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcDataAdapter>にインスタンスをキャスト、<xref:System.Data.IDbDataAdapter>インターフェイス</xref:System.Data.IDbDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter>。"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>更新中に、データ セットの削除された行のデータ ソースのレコードを削除するために使用します。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明、 <xref:System.Data.IDbDataAdapter.InsertCommand*>。</xref:System.Data.IDbDataAdapter.InsertCommand*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcDataAdapter>にインスタンスをキャスト、<xref:System.Data.IDbDataAdapter>インターフェイス</xref:System.Data.IDbDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter>。"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>レコードを挿入するデータ セットに配置するデータ ソースから更新中に使用されます。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明、 <xref:System.Data.IDbDataAdapter.SelectCommand*>。</xref:System.Data.IDbDataAdapter.SelectCommand*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcDataAdapter>にインスタンスをキャスト、<xref:System.Data.IDbDataAdapter>インターフェイス</xref:System.Data.IDbDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter>。"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>データ セット内の配置用のデータ ソースからレコードを選択、更新中に使用されます。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明、 <xref:System.Data.IDbDataAdapter.UpdateCommand*>。</xref:System.Data.IDbDataAdapter.UpdateCommand*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcDataAdapter>にインスタンスをキャスト、<xref:System.Data.IDbDataAdapter>インターフェイス</xref:System.Data.IDbDataAdapter></xref:System.Data.Odbc.OdbcDataAdapter>。"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref>データ セット内で変更された行のデータ ソース内の更新プログラムを更新するレコードの中に使用します。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Data.Odbc.OdbcDataAdapter>にインスタンスをキャスト、<xref:System.ICloneable>インターフェイス</xref:System.ICloneable></xref:System.Data.Odbc.OdbcDataAdapter>。"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "新しい<xref:System.Object>のこのインスタンスのコピーである</xref:System.Object>。"
  overload: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "取得または設定、SQL ステートメントまたはストアド プロシージャが、データ ソースのレコードを更新するために使用します。"
  remarks: "UpdateCommand が割り当てられている場合、以前に作成した<xref:System.Data.Odbc.OdbcCommand>、<xref:System.Data.Odbc.OdbcCommand>は複製されません</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand>。 UpdateCommand が以前に作成したへの参照を保持する代わりに、<xref:System.Data.Odbc.OdbcCommand>オブジェクト</xref:System.Data.Odbc.OdbcCommand>。       UpdateCommand が設定されていない、主キーの情報内に存在する場合、更新操作中、 <xref:System.Data.DataSet>、使用することができます、 <xref:System.Data.Odbc.OdbcCommandBuilder>UpdateCommand が自動的に生成するクラスし、その他のコマンドは調整するために必要な<xref:System.Data.DataSet>データ ソースにします</xref:System.Data.DataSet></xref:System.Data.Odbc.OdbcCommandBuilder></xref:System.Data.DataSet>。 これを行うには、 <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> <xref:System.Data.Odbc.OdbcDataAdapter>。</xref:System.Data.Odbc.OdbcDataAdapter>のプロパティ</xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>を設定します。 生成ロジックでは、 <xref:System.Data.DataSet>。</xref:System.Data.DataSet>に存在するキー列の情報も必要です。 詳細については、次を参照してください。 [Commandbuilder でのコマンドを生成する](~/add/includes/ajax-current-ext-md.md)です。      > [!NOTE] > でこれらの行がマージされる可能性がこのコマンドの実行には、行が返された場合、<xref:System.Data.DataSet>を設定する方法に応じて、<xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A>のプロパティ、<xref:System.Data.Odbc.OdbcCommand>オブジェクト</xref:System.Data.Odbc.OdbcCommand></xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A></xref:System.Data.DataSet>。"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcDataAdapter> and sets the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> and UpdateCommand properties. It assumes that you have already created an <xref:System.Data.Odbc.OdbcConnection> object.  \n  \n [!code-cs[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcd_1_1.cs)]\n [!code-vb[Classic WebData OdbcDataAdapter.UpdateCommand#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcd_1_1.vb)]"
  syntax:
    content: public System.Data.Odbc.OdbcCommand UpdateCommand { get; set; }
    return:
      type: System.Data.Odbc.OdbcCommand
      description: "<xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref>の変更された行に対応するデータ ソースのレコードを更新する更新操作中に使用される、 <xref href=&quot;System.Data.DataSet&quot;></xref>です。"
  overload: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter()
  nameWithType: OdbcDataAdapter.OdbcDataAdapter()
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter()
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.Data.Odbc.OdbcCommand)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(OdbcCommand)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(OdbcCommand)
- uid: System.Data.Odbc.OdbcCommand
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcCommand
  nameWithType: OdbcCommand
  fullName: System.Data.Odbc.OdbcCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.Data.Odbc.OdbcConnection)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,OdbcConnection)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,OdbcConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcConnection
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcConnection
  nameWithType: OdbcConnection
  fullName: System.Data.Odbc.OdbcConnection
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter(String,String)
  nameWithType: OdbcDataAdapter.OdbcDataAdapter(String,String)
  fullName: System.Data.Odbc.OdbcDataAdapter.OdbcDataAdapter(String,String)
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdated
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: OdbcDataAdapter.RowUpdated
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdated
- uid: System.Data.Odbc.OdbcRowUpdatedEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatedEventHandler
  nameWithType: OdbcRowUpdatedEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatedEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.RowUpdating
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: OdbcDataAdapter.RowUpdating
  fullName: System.Data.Odbc.OdbcDataAdapter.RowUpdating
- uid: System.Data.Odbc.OdbcRowUpdatingEventHandler
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcRowUpdatingEventHandler
  nameWithType: OdbcRowUpdatingEventHandler
  fullName: System.Data.Odbc.OdbcRowUpdatingEventHandler
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
  fullName: System.Data.Odbc.OdbcDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.#ctor*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OdbcDataAdapter
  nameWithType: OdbcDataAdapter.OdbcDataAdapter
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.Odbc.OdbcDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: OdbcDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.Odbc.OdbcDataAdapter.DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: OdbcDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: OdbcDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdated*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: OdbcDataAdapter.OnRowUpdated
- uid: System.Data.Odbc.OdbcDataAdapter.OnRowUpdating*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: OdbcDataAdapter.OnRowUpdating
- uid: System.Data.Odbc.OdbcDataAdapter.SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: OdbcDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: OdbcDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.Odbc.OdbcDataAdapter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcDataAdapter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcDataAdapter.UpdateCommand*
  parent: System.Data.Odbc.OdbcDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: OdbcDataAdapter.UpdateCommand
