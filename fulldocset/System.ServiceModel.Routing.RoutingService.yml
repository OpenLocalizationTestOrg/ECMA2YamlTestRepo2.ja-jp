### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Routing.RoutingService
  id: RoutingService
  children:
  - System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  - System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  langs:
  - csharp
  name: RoutingService
  nameWithType: RoutingService
  fullName: System.ServiceModel.Routing.RoutingService
  type: Class
  summary: "フィルター条件に基づいてエンドポイント間でメッセージのルーティングは、ルーティング サービスを定義します。"
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed)]

      [System.ServiceModel.ServiceBehavior(AddressFilterMode=System.ServiceModel.AddressFilterMode.Any, InstanceContextMode=System.ServiceModel.InstanceContextMode.PerSession, UseSynchronizationContext=false, ValidateMustUnderstand=false)]

      public sealed class RoutingService : IDisposable, System.ServiceModel.Routing.IDuplexSessionRouter, System.ServiceModel.Routing.IRequestReplyRouter, System.ServiceModel.Routing.ISimplexDatagramRouter, System.ServiceModel.Routing.ISimplexSessionRouter
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.ServiceModel.Routing.IDuplexSessionRouter
  - System.ServiceModel.Routing.IRequestReplyRouter
  - System.ServiceModel.Routing.ISimplexDatagramRouter
  - System.ServiceModel.Routing.ISimplexSessionRouter
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: RoutingService.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "解放、リリース、またはアンマネージ リソースのリセットに関連付けられているアプリケーション定義のタスクを実行します。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージの非同期処理を開始します。"
  remarks: "IDuplexSessionRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.IDuplexSessionRouter>。</xref:System.ServiceModel.Routing.IDuplexSessionRouter>を参照してください。"
  syntax:
    content: IAsyncResult IDuplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>処理する</xref:System.ServiceModel.Channels.Message>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>、メッセージの処理が完了したときに呼び出されるデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>、結果のポーリング、待機に使用できる、または両方この値は、を呼び出すときにも必要&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23EndProcessMessage%2A&gt;。</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージの処理の非同期実行を完了します。"
  remarks: "IDuplexSessionRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.IDuplexSessionRouter>。</xref:System.ServiceModel.Routing.IDuplexSessionRouter>を参照してください。"
  syntax:
    content: void IDuplexSessionRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IDuplexSessionRouter%23BeginProcessMessage%2A&gt; </xref:System.IAsyncResult>"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージの非同期処理を開始します。"
  remarks: "IRequestReplyRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.IRequestReplyRouter>。</xref:System.ServiceModel.Routing.IRequestReplyRouter>を参照してください。"
  syntax:
    content: IAsyncResult IRequestReplyRouter.BeginProcessRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>処理する</xref:System.ServiceModel.Channels.Message>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>、メッセージの処理が完了したときに呼び出されるデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>、結果のポーリング、待機に使用できる、または両方この値は、を呼び出すときにも必要&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23EndProcessRequest%2A&gt;。</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  id: System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージ処理の非同期実行を終了します。"
  remarks: "IRequestReplyRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.IRequestReplyRouter>。</xref:System.ServiceModel.Routing.IRequestReplyRouter>を参照してください。"
  syntax:
    content: System.ServiceModel.Channels.Message IRequestReplyRouter.EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23IRequestReplyRouter%23BeginProcessRequest%2A&gt; </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "A<xref:System.ServiceModel.Channels.Message>応答を格納している</xref:System.ServiceModel.Channels.Message>。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージの非同期処理を開始します。"
  remarks: "ISimplexDatagramRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>。</xref:System.ServiceModel.Routing.ISimplexDatagramRouter>を参照してください。"
  syntax:
    content: IAsyncResult ISimplexDatagramRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>処理する</xref:System.ServiceModel.Channels.Message>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>、メッセージの処理が完了したときに呼び出されるデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>、結果のポーリング、待機に使用できる、または両方この値は、を呼び出すときにも必要&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23EndProcessMessage%2A&gt;。</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージ処理の非同期実行を終了します。"
  remarks: "ISimplexDatagramRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.ISimplexDatagramRouter>。</xref:System.ServiceModel.Routing.ISimplexDatagramRouter>を参照してください。"
  syntax:
    content: void ISimplexDatagramRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexDatagramRouter%23BeginProcessMessage%2A&gt;</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  id: System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージの非同期処理を開始します。"
  remarks: "ISimplexSessionRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.ISimplexSessionRouter>。</xref:System.ServiceModel.Routing.ISimplexSessionRouter>を参照してください。"
  syntax:
    content: IAsyncResult ISimplexSessionRouter.BeginProcessMessage (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "<xref:System.ServiceModel.Channels.Message>処理する</xref:System.ServiceModel.Channels.Message>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>、メッセージの処理が完了したときに呼び出されるデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "コールバック プロシージャに渡されるユーザー定義の状態オブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>、結果のポーリング、待機に使用できる、または両方この値は、を呼び出すときにも必要&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23EndProcessMessage%2A&gt;。</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  id: System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  isEii: true
  parent: System.ServiceModel.Routing.RoutingService
  langs:
  - csharp
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel.Routing
  namespace: System.ServiceModel.Routing
  summary: "メッセージ処理の非同期実行を終了します。"
  remarks: "ISimplexSessionRouter コントラクトの使用方法の詳細については、 <xref:System.ServiceModel.Routing.ISimplexSessionRouter>。</xref:System.ServiceModel.Routing.ISimplexSessionRouter>を参照してください。"
  syntax:
    content: void ISimplexSessionRouter.EndProcessMessage (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される&lt;xref:System.ServiceModel.Routing.RoutingService.System%23ServiceModel%23Routing%23ISimplexSessionRouter%23BeginProcessMessage%2A&gt;</xref:System.IAsyncResult> 。"
  overload: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: RoutingService.System.IDisposable.Dispose()
  fullName: System.ServiceModel.Routing.RoutingService.System.IDisposable.Dispose()
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage(Message,AsyncCallback,Object)
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage(System.IAsyncResult)
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
  fullName: System.ServiceModel.Routing.RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage(IAsyncResult)
- uid: System.ServiceModel.Routing.RoutingService.System#IDisposable#Dispose*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: RoutingService.System.IDisposable.Dispose
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IDuplexSessionRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.IDuplexSessionRouter.EndProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#BeginProcessRequest*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.BeginProcessRequest
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#IRequestReplyRouter#EndProcessRequest*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest
  nameWithType: RoutingService.System.ServiceModel.Routing.IRequestReplyRouter.EndProcessRequest
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexDatagramRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexDatagramRouter.EndProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#BeginProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.BeginProcessMessage
- uid: System.ServiceModel.Routing.RoutingService.System#ServiceModel#Routing#ISimplexSessionRouter#EndProcessMessage*
  parent: System.ServiceModel.Routing.RoutingService
  isExternal: false
  name: System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage
  nameWithType: RoutingService.System.ServiceModel.Routing.ISimplexSessionRouter.EndProcessMessage
