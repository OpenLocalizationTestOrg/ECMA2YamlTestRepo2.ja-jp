### YamlMime:ManagedReference
items:
- uid: System.Data.Services.QueryInterceptorAttribute
  id: QueryInterceptorAttribute
  children:
  - System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  - System.Data.Services.QueryInterceptorAttribute.EntitySetName
  langs:
  - csharp
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute
  fullName: System.Data.Services.QueryInterceptorAttribute
  type: Class
  summary: "QueryInterceptorAttribute メソッドでは、指定されたエンティティ セットに対するクエリ インターセプターとして、注釈を付けます。"
  remarks: "エンティティ セット レベルの承認と検証は、QueryInterceptorAttribute で注釈を付けたメソッドによって実装されます。 [!INCLUDE[ssAstoria](~/add/includes/ssastoria-md.md)]セキュリティ ポリシーを実装しませんが代わりにサービス開発者が独自のセキュリティ規則やビジネス検証を作成するために必要なインフラストラクチャを提供します。       エンティティ セットのアクセス制御と、クエリ コンポジションを使ったクエリ操作を通じて検証を有効にします。 エンティティ ベースのアクセスを制御するには、実装、メソッドのエンティティ セットごとに次の規則に従って: メソッドはパブリック スコープを持つ必要があり、パラメーターとして設定エンティティの名前を受け取って、QueryInterceptorAttribute で注釈を付けます。       メソッド パラメーターを受け入れません。       メソッドは、型の式を返す必要があります`Expression<Func<T, bool>>`エンティティ セットで構成されるアクティビティ フィルターされています。"
  example:
  - "The following example controls access to the `Customers` entity set. Each `Customer` can only see `Orders` associated with that `Customer`.  \n  \n```  \n[QueryInterceptor(\"Orders\")]  \npublic Expression<Func<Order, bool>> FilterOrders()   \n{  \n    return o => o.Customer.Name == /* Current principal name. */;  \n}   \n  \n// Insures that the user accessing the customer(s) has the appropriate  \n// rights as defined in the QueryRules object to access the customer  \n// resource(s).  \n  \n[QueryInterceptor (\"Customers\")]  \npublic Expression<Func<Customer, bool>> FilterCustomers()   \n{  \n  return c => c.Name == /* Current principal name. */ &&  \n              this.CurrentDataSource.QueryRules.Contains(  \n                rule => rule.Name == c.Name &&  \n                        rule.CustomerAllowedToQuery == true  \n              );  \n}  \n  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]

      public sealed class QueryInterceptorAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  type: Constructor
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.Services.QueryInterceptorAttribute&quot;> </xref>設定で指定されたエンティティのクラス、 <code> entitySetName </code>パラメーター。"
  syntax:
    content: public QueryInterceptorAttribute (string entitySetName);
    parameters:
    - id: entitySetName
      type: System.String
      description: "インターセプターを適用するエンティティを含むエンティティ セットの名前。"
  overload: System.Data.Services.QueryInterceptorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  id: EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  langs:
  - csharp
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "インターセプターを適用するエンティティを含むエンティティ セットの名前を取得します。"
  syntax:
    content: public string EntitySetName { get; }
    return:
      type: System.String
      description: "インターセプターを適用するエンティティを含むエンティティ セットの名前を示す文字列です。"
  overload: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute(String)
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)
  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName
- uid: System.Data.Services.QueryInterceptorAttribute.#ctor*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: QueryInterceptorAttribute
  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute
- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName*
  parent: System.Data.Services.QueryInterceptorAttribute
  isExternal: false
  name: EntitySetName
  nameWithType: QueryInterceptorAttribute.EntitySetName
