### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient
  id: UdpSingleSourceMulticastClient
  children:
  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient
  type: Class
  summary: "単一のソースとも呼ばれるソース特定マルチキャスト (SSM) からのマルチキャスト トラフィックをクライアント受信者です。"
  remarks: "マルチキャスト グループのアドレスとセンダ ソースのアドレスは認識されている必要があります。       マルチキャスト データを特定の送信者から受信だけでなく、UdpSingleSourceMulticastClient クライアントは、送信者に送り返すユニキャスト データも送信できます。       複数のソースから、またはソースが事前にわかっていない場合は、マルチキャストを受信するには、代わりに UdpSingleSourceMulticastClient クラスを使用します。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpSingleSourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "新たに作成<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref> UDP クライアントをグループ アドレスにサブスクライブし、1 つのソースからデータグラムを受信できます。"
  remarks: "UdpSingleSourceMulticastClient コンス トラクターは、グループ アドレスおよびポート、UDP マルチキャスト ソケットに関連付けますが、バインドやしません、ソケットを使用してそれ以外の場合。       `groupAddress`パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。 ただしのアドレス ファミリ、`sourceAddress`と`groupAddress`パラメーターでは、同じ必要があります。       `localPort` 1,024 未満のポート パラメーターを指定する必要があります。"
  syntax:
    content: public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "この受信者にとってサブスクライブ先の送信者の発信元アドレス。"
    - id: groupAddress
      type: System.Net.IPAddress
      description: "この受信者にとってサブスクライブ先マルチキャスト グループのアドレス。"
    - id: localPort
      type: System.Int32
      description: "ローカルのポートにバインドするには、この受信者です。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>sourceAddress</code>および<code>groupAddress</code>同じアドレス ファミリをする必要があります。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceAddress</code>null 参照 (Visual Basic では Nothing) です。       - または -<code>groupAddress</code>は null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>0 より小さい - または -<code>localPort</code>が 65,535 より大きい。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "<code>localPort</code>1024 より小さい値には"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "ソケットをバインドし、マルチキャスト データグラムを&1; つのソース アドレスから受信できるを許可するグループに結合操作を開始します。"
  remarks: "BeginJoinGroup メソッドは、ローカル ポートに UDP マルチキャスト ソケットをバインドし、マルチキャスト データグラムを&1; つのソース アドレスから受信できるを許可するグループを結合します。 マルチキャスト グループのアドレス、1 つのソース アドレスにバインドするローカル ポートがで指定された、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>コンス トラクター</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 。       指定する方法、`callback`パラメーターがマルチキャスト グループへの参加操作が完了したときに呼び出されます。       必要な場合、ランタイムによって、BeginJoinGroup メソッドには、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシーのチェックもを実行します。 クライアントが<xref:System.Net.Sockets.SocketException><xref:System.Net.Sockets.SocketError>。</xref:System.Net.Sockets.SocketError>がスローされ</xref:System.Net.Sockets.SocketException>アクセスを許可されていない場合"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "返します<xref:System.IAsyncResult>。</xref:System.IAsyncResult>       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループは既に結合されているか、結合操作が現在進行中です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "参加したマルチキャスト グループからパケットの受信の操作を開始し、指定された送信元からのグループに、パケットが届いたときに、指定されたコールバックを呼び出します。"
  remarks: "BeginReceiveFromSource メソッドは、単一の送信元からに参加しているマルチキャスト グループから UDP パケットを受け取るの操作を開始します。 ローカル ポート、マルチキャスト グループは、および送信者の発信元アドレスがで指定された、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>コンス トラクター</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> 。 マルチキャストのクライアントで、マルチキャスト グループに結合が完了しましたもする必要があります。       指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。       UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。 ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "受信したデータを格納するバッファー。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`データを格納します。"
    - id: count
      type: System.Int32
      description: "受信および格納するバイトの最大数、`buffer`です。"
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "返します<xref:System.IAsyncResult>。</xref:System.IAsyncResult>       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 より小さい - または -<code>offset</code>がの長さより大きい、<code>buffer</code>です。       - または -<code>count</code>が 0 より小さい - または -<code>offset</code>カウントを加算がの長さより大きい、<code>buffer</code>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "受信するため、ソケットにアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "以前に指定したソースにユニキャスト パケットを送信する操作を開始します。"
  remarks: "BeginSendToSource メソッドは、以前に指定したソースに UDP パケットを送信する操作を開始します。       一部のプロトコルでは、この情報を使用して、サービスの統計、または復旧メッセージの品質のフロー制御を渡します。       指定する方法、`callback`パケットが送信されたときにパラメーターが呼び出されます。       クライアントで、マルチキャスト グループに結合が完了しました必要があります。       宛先ポートが指定されている場合、`remotePort`パラメーターより小さい数は 1,024、 <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError>でがスローされます</xref:System.Net.Sockets.SocketException>       これは、UDP では一般的ななくても、送信操作が同期的に、失敗した場合は、ソケット エラーを設定することです。 ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "送信するデータを格納しているバッファー。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`送信されるデータを読み取れません。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`buffer`です。"
    - id: remotePort
      type: System.Int32
      description: "パケットを送信するリモート ポート。 リモート アドレスが指定された、 &lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;コンス トラクターです。"
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "返します<xref:System.IAsyncResult>。</xref:System.IAsyncResult>       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 より小さい - または -<code>offset</code>がの長さより大きい、<code>buffer</code>です。       - または -<code>count</code>が 0 より小さい - または -<code>offset</code>カウントを加算がの長さより大きい、<code>buffer</code>です。       - または -<code>remotePort</code>が 0 未満か、65,535 より大きい値です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "マルチキャスト グループを維持しの現在のインスタンスによって使用されているすべてのリソースを解放、 <xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>クラスと、基になる<xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>"
  remarks: "<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>使用不可の状態</xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>占有されていた</xref:System.Net.Sockets.UdpSingleSourceMulticastClient></xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。       <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。</xref:System.Net.Sockets.UdpSingleSourceMulticastClient>の最後の参照を解放する前に常に Dispose を呼び出す それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>オブジェクトの<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A></xref:System.Net.Sockets.UdpSingleSourceMulticastClient>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "マルチキャスト グループに、非同期の参加グループの操作を完了します。"
  remarks: "EndJoinGroup メソッドでは、マルチキャスト グループへのソケットと結合操作に非同期のバインドを完了します。       必要な場合、ランタイムによって、EndJoinGroup メソッドには、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシーのチェックもを実行します。 クライアントが<xref:System.Net.Sockets.SocketException><xref:System.Net.Sockets.SocketError>。</xref:System.Net.Sockets.SocketError>がスローされ</xref:System.Net.Sockets.SocketException>アクセスを許可されていない場合       結合のグループの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の結合操作の結果。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "参加したマルチキャスト グループからパケットを受け取るの非同期操作を完了し、受信した情報を提供します。"
  remarks: "EndReceiveFromSource メソッドでは、マルチキャスト グループの&1; つのソースからのパケットを受信する非同期操作を完了します。       受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の結果には、操作が表示されます。"
    - id: sourcePort
      type: System.Int32
      description: "元のエンドポイントからのパケットの受信場所。"
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>を返します。       格納されたメッセージの長さをバイト単位で、 <code> buffer </code>に渡されたパラメーター、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>メソッド</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*>。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  id: EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "単一のソースにユニキャスト パケットを送信する操作を完了します。"
  remarks: "EndSendToSource メソッドでは、以前に指定した&1; つのソースにパケットを送信する非同期操作を完了します。       受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void EndSendToSource (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の送信操作の結果。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得または (バイト単位) の受信バッファーのサイズを設定、<xref:System.Net.Sockets.Socket>このマルチキャストの受信操作に使用される<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;></xref>インスタンス</xref:System.Net.Sockets.Socket>。"
  remarks: "`ReceiveBufferSize`プロパティを取得または基になるの受信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.Socket>このマルチキャストの受信操作に使用される<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>インスタンス</xref:System.Net.Sockets.UdpSingleSourceMulticastClient></xref:System.Net.Sockets.Socket>。 具体的には、`ReceiveBufferSize`プロパティは、パケットが到着すると、アプリケーションがまだ呼び出さいないときに、スタックによって使われるバッファーのサイズを制御、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>メソッド</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>。 このバッファーがいっぱいにし、アプリケーションの呼び出しの前にパケットを受け取った場合、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>と<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>メソッド、古いパケットが削除されます</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A></xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>。 アプリケーションが、古いパケットを受信できなくし、呼び出したときに新しいパケットの受信が代わりに、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>メソッド</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>。       Windows 上の受信バッファーの既定のサイズは 8,192 です。"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>を返します。       受信バッファーのバイト単位のサイズ。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定されたバッファー サイズが 0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得または (バイト単位) の送信バッファーのサイズを設定、<xref:System.Net.Sockets.Socket>このマルチキャスト送信操作に使用される<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;></xref>インスタンス</xref:System.Net.Sockets.Socket>。"
  remarks: "SendBufferSize プロパティを取得または基になるの送信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.Socket>このマルチキャスト送信操作に使用される<xref:System.Net.Sockets.UdpSingleSourceMulticastClient>インスタンス</xref:System.Net.Sockets.UdpSingleSourceMulticastClient></xref:System.Net.Sockets.Socket>。       Mac OS X、SendBufferSize プロパティ制御への呼び出しを追加する前に、ネットワーク スタックの待機中---を送信するバッファーのバイト数を指定できます、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>メソッドが失敗し始めます</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>。 Mac OS X 上のアプリケーションは、短い期間に多数の UDP パケットを送信する場合に、このプロパティで考慮する必要があります。       Windows では、呼び出し、<xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>メソッドの時間が長くなります送信バッファーがいっぱいの場合は、SendBufferSize プロパティの値に応じて、コールバックを呼び出します</xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>。 SendBufferSize プロパティでは、送信が完了するまで、ユーザーのバッファー状態を維持の物理メモリにロックするかについてのみ制御します。       Windows 上の送信バッファーの既定のサイズは 8,192 です。"
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>を返します。       送信バッファーのバイト単位のサイズ。"
  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定されたバッファー サイズが 0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpSingleSourceMulticastClient&quot;> </xref>は破棄されました。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress,IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(Byte[],Int32,Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpSingleSourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource(IAsyncResult,Int32)
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult,Int32)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource(IAsyncResult)
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: UdpSingleSourceMulticastClient
  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: BeginSendToSource
  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpSingleSourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndReceiveFromSource
  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: EndSendToSource
  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpSingleSourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize
