### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Switch
  id: Switch
  children:
  - System.Diagnostics.Switch.#ctor(System.String,System.String)
  - System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.OnValueChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  langs:
  - csharp
  name: Switch
  nameWithType: Switch
  fullName: System.Diagnostics.Switch
  type: Class
  summary: "新しいデバッグおよびトレース スイッチを作成する抽象基本クラスを提供します。"
  remarks: "スイッチは、外部の設定を使用して実行時にトレースとデバッグ出力を制御するための効率的なメカニズムを提供します。 Switch クラスでは、実行時に、スイッチ レベルを変更できるように、スイッチの既定の動作を実装します。       このクラスは、基本クラスの<xref:System.Diagnostics.BooleanSwitch>、<xref:System.Diagnostics.SourceSwitch>と<xref:System.Diagnostics.TraceSwitch>クラス</xref:System.Diagnostics.TraceSwitch></xref:System.Diagnostics.SourceSwitch></xref:System.Diagnostics.BooleanSwitch>。 これらのスイッチは、ほとんどのデバッグおよびトレースの要件を満たしています。 トレース スイッチの詳細については、次を参照してください。[トレース スイッチ](~/add/includes/ajax-current-ext-md.md)です。       トレース出力またはスイッチを使用してデバッグを有効にする必要があります。 次の構文は、コンパイラに固有です。 以外は、c# または Visual Basic コンパイラを使用する場合は、コンパイラのドキュメントを参照してください。      -C# でのデバッグを有効にするには、`/d:DEBUG`するを追加したり、コードをコンパイルするときに、コンパイラのコマンドラインにフラグ`#define DEBUG`ファイルの先頭にします。 Visual basic では、追加、`/d:DEBUG=True`フラグをコンパイラ コマンドライン。      -(C#) を使用してトレースを有効にするには追加、`/d:TRACE`フラグを追加したり、コードをコンパイルすると、コンパイラのコマンドライン`#define TRACE`ファイルの先頭にします。 Visual basic では、追加、`/d:TRACE=True`フラグをコンパイラ コマンドライン。       スイッチのレベルを設定するには、アプリケーションの名前に対応する構成ファイルを編集します。 このファイル内でできますスイッチを追加してその値を設定、スイッチの削除またはオフにするスイッチは、以前、アプリケーションによって設定されたすべてです。 構成ファイルは次の例のように書式設定する必要があります:```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;true&quot; />       </switches>     </system.diagnostics>   </configuration>   ```この例の構成セクションを定義、<xref:System.Diagnostics.BooleanSwitch>で、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティに設定`mySwitch`と<xref:System.Diagnostics.BooleanSwitch.Enabled%2A>値に設定`true`</xref:System.Diagnostics.BooleanSwitch.Enabled%2A></xref:System.Diagnostics.Switch.DisplayName%2A></xref:System.Diagnostics.BooleanSwitch>。 作成して構成されているスイッチの値を使用する、アプリケーション内で、<xref:System.Diagnostics.BooleanSwitch>次のコード例に示すように、同じ名前を持つ</xref:System.Diagnostics.BooleanSwitch>。       [!code-cpp[クラシック スイッチ例&4;](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_1.cpp)][!code-cs[クラシック スイッチ例&4;  ](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_1.cs)]"
  example:
  - "The following example shows how to define a new Switch class with four levels of tracing that can be used to trace a call stack. You can use the switch to instrument your application to log each time the method is entered or exited.  \n  \n The first example creates the enumeration used to set the level of the switch.  \n  \n [!code-cpp[Classic Switch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_2.cpp)]\n [!code-cs[Classic Switch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_2.cs)]\n [!code-vb[Classic Switch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_2.vb)]  \n  \n The following example creates the new switch. The code implements a `Level` property to set the value of the new switch. `Level` calls the protected property <xref:System.Diagnostics.Switch.SwitchSetting%2A> that assigns the value to the new switch. This example also implements two assessor properties to get the assigned value of the switch.  \n  \n [!code-cpp[Classic Switch Example#2](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_3.cpp)]\n [!code-cs[Classic Switch Example#2](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_3.cs)]\n [!code-vb[Classic Switch Example#2](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_3.vb)]  \n  \n The following example creates a new switch in `Main`. It creates a new switch and assigns it a value. Then, depending on the switch settings, it outputs debugging messages for entering and leaving the method.  \n  \n [!code-cpp[Classic Switch Example#3](~/add/codesnippet/cpp/t-system.diagnostics.swi_0_4.cpp)]\n [!code-cs[Classic Switch Example#3](~/add/codesnippet/csharp/t-system.diagnostics.swi_0_4.cs)]\n [!code-vb[Classic Switch Example#3](~/add/codesnippet/visualbasic/t-system.diagnostics.swi_0_4.vb)]"
  syntax:
    content: public abstract class Switch
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.Switch&quot;> </xref>クラスです。"
  remarks: "新規に作成するときに<xref:System.Diagnostics.Switch>オブジェクト、値の`displayName`スイッチの初期設定を検索するパラメーターを使用します</xref:System.Diagnostics.Switch>。 既定値は空の文字列 (&quot;&quot;) です。       XML 構成ファイル内でできますスイッチを追加してその値を設定、スイッチの削除またはオフにするスイッチは、以前、アプリケーションによって設定されたすべてです。 アプリケーションが実行中に、構成ファイルに動的な変更は検出されません。 停止し、構成ファイルへの変更を有効にするには、アプリケーションを再起動する必要があります。 構成ファイルは、次の例のようにフォーマットする必要があります。```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;10&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```"
  syntax:
    content: protected Switch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "スイッチの名前。"
    - id: description
      type: System.String
      description: "スイッチの説明です。"
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Diagnostics.Switch&quot;> </xref>クラス、表示名、説明、およびスイッチの既定値を指定します。"
  remarks: "`displayName`パラメーターの値を設定するため、<xref:System.Diagnostics.Switch.DisplayName%2A>プロパティ、および`description`の値を設定するパラメーターを使用して、<xref:System.Diagnostics.Switch.Description%2A>プロパティ</xref:System.Diagnostics.Switch.Description%2A></xref:System.Diagnostics.Switch.DisplayName%2A>。 `defaultSwitchValue`パラメーターには、スイッチの値がある場合、<xref:System.Diagnostics.Switch.Value%2A>プロパティが設定されていないコードまたは構成ファイルの属性です</xref:System.Diagnostics.Switch.Value%2A>。 参照してください、<xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>追加情報のオーバー ロードします</xref:System.Diagnostics.Switch.%23ctor%28System.String%2CSystem.String%29>。"
  syntax:
    content: protected Switch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "スイッチの名前。"
    - id: description
      type: System.String
      description: "スイッチの説明です。"
    - id: defaultSwitchValue
      type: System.String
      description: "スイッチの既定値です。"
  overload: System.Diagnostics.Switch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Attributes
  id: Attributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "アプリケーション構成ファイルで定義されているカスタム スイッチ属性を取得します。"
  remarks: "属性のプロパティは、アプリケーションの構成ファイルで参照されているカスタム属性を識別します。 参照されていないカスタム属性は列挙されません。 継承するクラス、<xref:System.Diagnostics.Switch>クラスがオーバーライドすることでカスタム属性を追加できる、<xref:System.Diagnostics.Switch.GetSupportedAttributes%2A>メソッドをカスタム属性の名前の文字列配列を返します</xref:System.Diagnostics.Switch.GetSupportedAttributes%2A></xref:System.Diagnostics.Switch>。"
  example:
  - "The following code sample shows how to display the unrecognized attributes for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#15](~/add/codesnippet/csharp/p-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#15](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringDictionary Attributes { get; }
    return:
      type: System.Collections.Specialized.StringDictionary
      description: "A <xref href=&quot;System.Collections.Specialized.StringDictionary&quot;> </xref>トレース スイッチの大文字と小文字のカスタム属性を含むです。"
  overload: System.Diagnostics.Switch.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Description
  id: Description
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "スイッチの説明を取得します。"
  remarks: "このプロパティは、スイッチの機能を示す必要があります。たとえば、「のトレースを有効なディレクトリを監視するコンポーネントです。」 によって、値を設定、`descriptor`内のパラメーター、<xref:System.Diagnostics.Switch.%23ctor%2A>コンス トラクター</xref:System.Diagnostics.Switch.%23ctor%2A> 。"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "スイッチの説明です。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Diagnostics.Switch.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.DisplayName
  id: DisplayName
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "スイッチの識別に使用する名前を取得します。"
  remarks: '新規に作成するときに<xref:System.Diagnostics.Switch>DisplayName がスイッチの初期設定を検索するオブジェクト</xref:System.Diagnostics.Switch>。 詳細については、次を参照してください、<xref:System.Diagnostics.Switch.%23ctor%2A>コンス トラクターと[する方法: 作成、初期化とトレース スイッチを設定する](~/add/includes/ajax-current-ext-md.md)、Visual Studio ドキュメント。</xref:System.Diagnostics.Switch.%23ctor%2A> 。'
  example:
  - "The following code example displays the display name for the switch in use by a trace source.  This code example is part of a larger example that can be found in the <xref:System.Diagnostics.TraceSource> class summary.  \n  \n [!code-cs[System.Diagnostics.TraceSource#10](~/add/codesnippet/csharp/p-system.diagnostics.swi_0_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#10](~/add/codesnippet/visualbasic/p-system.diagnostics.swi_0_1.vb)]"
  syntax:
    content: public string DisplayName { get; }
    return:
      type: System.String
      description: "スイッチを識別するための名前。 既定値は空の文字列 (&quot;&quot;) です。"
  overload: System.Diagnostics.Switch.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "スイッチでサポートされるカスタム属性を取得します。"
  remarks: "GetSupportedAttributes メソッドの既定の実装を返します`null`です。 スイッチが構成ファイルに追加され、GetSupportedAttributes、によって返される文字列の配列に含まれていないカスタム属性が指定された場合、<xref:System.Configuration.ConfigurationException>スイッチが読み込まれるときにスローされます</xref:System.Configuration.ConfigurationException>。"
  example:
  - "The following code sample shows an override of the GetSupportedAttributes method for a custom switch.  \n  \n [!code-cs[System.Diagnostics.TraceSource#34](~/add/codesnippet/csharp/m-system.diagnostics.swi_1_1.cs)]\n [!code-vb[System.Diagnostics.TraceSource#34](~/add/codesnippet/visualbasic/m-system.diagnostics.swi_1_1.vb)]"
  syntax:
    content: protected virtual string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "スイッチでサポートされているカスタム属性の名前を格納する文字列配列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合があるカスタム属性はサポートされていません。"
  overload: System.Diagnostics.Switch.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "呼び出されたときに、<xref:System.Diagnostics.Switch.SwitchSetting*>プロパティが変更された</xref:System.Diagnostics.Switch.SwitchSetting*>。"
  remarks: "OnSwitchSettingChanged に初めてスイッチを読み取りますが呼び出される、<xref:System.Diagnostics.Switch.SwitchSetting%2A>構成ファイルからの値し、スイッチの値が変更されるたびに再度が呼び出されます</xref:System.Diagnostics.Switch.SwitchSetting%2A>。"
  syntax:
    content: protected virtual void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "呼び出されたときに、<xref:System.Diagnostics.Switch.Value*>プロパティが変更された</xref:System.Diagnostics.Switch.Value*>。"
  remarks: "既定の実装の新しい値を解析して、<xref:System.Diagnostics.Switch.Value%2A>プロパティ設定を使用して整数値を<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティ</xref:System.Diagnostics.Switch.SwitchSetting%2A></xref:System.Diagnostics.Switch.Value%2A>。"
  syntax:
    content: protected virtual void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.Switch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.SwitchSetting
  id: SwitchSetting
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得または、このスイッチの現在の設定を設定します。"
  syntax:
    content: protected int SwitchSetting { get; set; }
    return:
      type: System.Int32
      description: "このスイッチの現在の設定。 既定値は&0; です。"
  overload: System.Diagnostics.Switch.SwitchSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Switch.Value
  id: Value
  parent: System.Diagnostics.Switch
  langs:
  - csharp
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "取得またはスイッチの値を設定します。"
  remarks: "<xref:System.Diagnostics.Switch.OnValueChanged%2A>値プロパティの値が変更されたときに、メソッドが呼び出されます</xref:System.Diagnostics.Switch.OnValueChanged%2A>。 <xref:System.Diagnostics.Switch.OnValueChanged%2A>メソッドは、このプロパティの値を解析し、設定を使用して、整数値に変換、<xref:System.Diagnostics.Switch.SwitchSetting%2A>プロパティ</xref:System.Diagnostics.Switch.SwitchSetting%2A></xref:System.Diagnostics.Switch.OnValueChanged%2A>。"
  syntax:
    content: protected string Value { get; set; }
    return:
      type: System.String
      description: "スイッチの値を表す文字列。"
  overload: System.Diagnostics.Switch.Value*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。       または、連続する数字の 0 から 9 まで続けて、省略可能なマイナス記号以外の値はで構成されていません。       - または - の値より小さい数値<xref:System.Int32.MinValue><xref:System.Int32.MaxValue>。</xref:System.Int32.MaxValue>より大きいか</xref:System.Int32.MinValue>を表します。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String)
  nameWithType: Switch.Switch(String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Switch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch(String,String,String)
  nameWithType: Switch.Switch(String,String,String)
  fullName: System.Diagnostics.Switch.Switch(String,String,String)
- uid: System.Diagnostics.Switch.Attributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
  fullName: System.Diagnostics.Switch.Attributes
- uid: System.Collections.Specialized.StringDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: System.Collections.Specialized.StringDictionary
- uid: System.Diagnostics.Switch.Description
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
  fullName: System.Diagnostics.Switch.Description
- uid: System.Diagnostics.Switch.DisplayName
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
  fullName: System.Diagnostics.Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: Switch.GetSupportedAttributes()
  fullName: System.Diagnostics.Switch.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: Switch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.Switch.OnSwitchSettingChanged()
- uid: System.Diagnostics.Switch.OnValueChanged
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged()
  nameWithType: Switch.OnValueChanged()
  fullName: System.Diagnostics.Switch.OnValueChanged()
- uid: System.Diagnostics.Switch.SwitchSetting
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
  fullName: System.Diagnostics.Switch.SwitchSetting
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.Switch.Value
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
  fullName: System.Diagnostics.Switch.Value
- uid: System.Diagnostics.Switch.#ctor*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Switch
  nameWithType: Switch.Switch
- uid: System.Diagnostics.Switch.Attributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Attributes
  nameWithType: Switch.Attributes
- uid: System.Diagnostics.Switch.Description*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Description
  nameWithType: Switch.Description
- uid: System.Diagnostics.Switch.DisplayName*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: DisplayName
  nameWithType: Switch.DisplayName
- uid: System.Diagnostics.Switch.GetSupportedAttributes*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: Switch.GetSupportedAttributes
- uid: System.Diagnostics.Switch.OnSwitchSettingChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: Switch.OnSwitchSettingChanged
- uid: System.Diagnostics.Switch.OnValueChanged*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: OnValueChanged
  nameWithType: Switch.OnValueChanged
- uid: System.Diagnostics.Switch.SwitchSetting*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: SwitchSetting
  nameWithType: Switch.SwitchSetting
- uid: System.Diagnostics.Switch.Value*
  parent: System.Diagnostics.Switch
  isExternal: false
  name: Value
  nameWithType: Switch.Value
