### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.WorkflowQueue
  id: WorkflowQueue
  children:
  - System.Workflow.Runtime.WorkflowQueue.Count
  - System.Workflow.Runtime.WorkflowQueue.Dequeue
  - System.Workflow.Runtime.WorkflowQueue.Enabled
  - System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)
  - System.Workflow.Runtime.WorkflowQueue.Peek
  - System.Workflow.Runtime.WorkflowQueue.QueueItemArrived
  - System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable
  - System.Workflow.Runtime.WorkflowQueue.QueueName
  - System.Workflow.Runtime.WorkflowQueue.QueuingService
  - System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)
  - System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  - System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  langs:
  - csharp
  name: WorkflowQueue
  nameWithType: WorkflowQueue
  fullName: System.Workflow.Runtime.WorkflowQueue
  type: Class
  summary: "ワークフロー キューを表します。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]ワークフロー キューを使用して、ホストまたはホスト サービスとワークフロー内の活動間でメッセージを渡します。 任意のアクティビティが呼び出すことによって、WorkflowQueue を作成できます<xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=fullName>、ホスト、サービス、または別のアクティビティが呼び出すことができます、<xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A>その WorkflowQueue に項目を追加する</xref:System.Workflow.Runtime.WorkflowQueue.Enqueue%2A></xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A?displayProperty=fullName>。 サブスクライブするには、 <xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>WorkflowQueue に項目が到着したときに通知するイベントです</xref:System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable>。 使用することができます<xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A>WorkflowQueue の先頭の項目を調べると<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>WorkflowQueue から項目を削除する</xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A></xref:System.Workflow.Runtime.WorkflowQueue.Peek%2A>。 各 WorkflowQueue に関連付けられている、 <xref:System.Workflow.Runtime.WorkflowQueuingService>、キューの削除など、WorkflowQueue に他の管理操作の実行に使用できる</xref:System.Workflow.Runtime.WorkflowQueuingService>。 <xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A>公開、<xref:System.Workflow.Runtime.WorkflowQueuingService>この WorkflowQueue に関連付けられている</xref:System.Workflow.Runtime.WorkflowQueuingService>。</xref:System.Workflow.Runtime.WorkflowQueue.QueuingService%2A>"
  example:
  - "The following code example demonstrates how you can create a WorkflowQueue by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=fullName> method. It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue. Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#227](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#227)]\n [!code-vb[WF_Samples#227](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#227)]"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class WorkflowQueue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.Count
  id: Count
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: Count
  nameWithType: WorkflowQueue.Count
  fullName: System.Workflow.Runtime.WorkflowQueue.Count
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "含まれるアイテムの数を取得、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: ''
  example:
  - "The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=fullName> method. It also uses the Count property to determine whether any messages exist in the current queue. Finally, the code uses the <xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> method to remove and return the first object in the queue.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#227](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#227)]\n [!code-vb[WF_Samples#227](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#227)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "ワークフロー キュー内の項目の数。"
  overload: System.Workflow.Runtime.WorkflowQueue.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.Dequeue
  id: Dequeue
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: Dequeue()
  nameWithType: WorkflowQueue.Dequeue()
  fullName: System.Workflow.Runtime.WorkflowQueue.Dequeue()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "削除しの先頭にあるオブジェクトを返します、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: "チェックすることができます<xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>を決定するかどうか<xref:System.Workflow.Runtime.WorkflowQueue>、Dequeue の呼び出しまたは<xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>をキャッチする前に空では</xref:System.Workflow.Runtime.WorkflowQueue></xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>"
  example:
  - "The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=fullName> method. It also uses the <xref:System.Workflow.Runtime.WorkflowQueue.Count%2A> property to determine whether any messages exist in the current queue. Finally, the code uses the Dequeue method to remove and return the first object in the queue.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#227](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#227)]\n [!code-vb[WF_Samples#227](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#227)]"
  syntax:
    content: public object Dequeue ();
    parameters: []
    return:
      type: System.Object
      description: "先頭から削除されるオブジェクト、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.Dequeue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>が空です。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.Enabled
  id: Enabled
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: Enabled
  nameWithType: WorkflowQueue.Enabled
  fullName: System.Workflow.Runtime.WorkflowQueue.Enabled
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "取得または設定を指定する値かどうか、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>を有効にします。"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>が有効である場合は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)
  id: Enqueue(System.Object)
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: Enqueue(Object)
  nameWithType: WorkflowQueue.Enqueue(Object)
  fullName: System.Workflow.Runtime.WorkflowQueue.Enqueue(Object)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "末尾にオブジェクトを追加、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  syntax:
    content: public void Enqueue (object item);
    parameters:
    - id: item
      type: System.Object
      description: "追加するオブジェクト、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.Enqueue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>有効ではありません。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.Peek
  id: Peek
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: Peek()
  nameWithType: WorkflowQueue.Peek()
  fullName: System.Workflow.Runtime.WorkflowQueue.Peek()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "先頭にオブジェクトを返します、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>削除することがなくです。"
  remarks: "このメソッドは<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>、メソッドがピーク<xref:System.Workflow.Runtime.WorkflowQueue>。</xref:System.Workflow.Runtime.WorkflowQueue>は変更されません。</xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A> 確認することができます<xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>を決定するかどうか、<xref:System.Workflow.Runtime.WorkflowQueue>を呼び出す前に、空<xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A>、 <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>をキャッチするまたは</xref:System.Workflow.Runtime.WorkflowQueue.Dequeue%2A></xref:System.Workflow.Runtime.WorkflowQueue></xref:System.Workflow.Runtime.WorkflowQueue.Count%2A>"
  syntax:
    content: public object Peek ();
    parameters: []
    return:
      type: System.Object
      description: "先頭にあるオブジェクト、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.Peek*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;> </xref>が空です。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.QueueItemArrived
  id: QueueItemArrived
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: QueueItemArrived
  nameWithType: WorkflowQueue.QueueItemArrived
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueItemArrived
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "この項目が配信されたときに発生<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: "このイベントはワークフロー インスタンスに対するイベント配信と同期して行われる必要がある処理にのみ使用します。 イベント ハンドラーが非ワークフロー スレッドでためへのアクセスなど、ワークフロー オブジェクトを共有いずれかを実行<xref:System.Workflow.ComponentModel.DependencyObject>、保護する必要があります</xref:System.Workflow.ComponentModel.DependencyObject>。"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.QueueEventArgs> QueueItemArrived;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.QueueEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable
  id: QueueItemAvailable
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: QueueItemAvailable
  nameWithType: WorkflowQueue.QueueItemAvailable
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable
  type: Event
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "この項目があるときに発生<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  remarks: "はこのイベントは、非同期的に発生します。 <xref:System.Workflow.ComponentModel.ActivityExecutionContext>サブスクライブする<xref:System.Workflow.ComponentModel.Activity>。</xref:System.Workflow.ComponentModel.Activity></xref:System.Workflow.ComponentModel.ActivityExecutionContext>はこの送信者になります"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.QueueEventArgs> QueueItemAvailable;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.QueueEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.QueueName
  id: QueueName
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: QueueName
  nameWithType: WorkflowQueue.QueueName
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueName
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "ワークフロー キューの名前を取得します。"
  remarks: "ワークフロー キューの名前を設定、<xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>メソッド</xref:System.Workflow.Runtime.WorkflowQueuingService.CreateWorkflowQueue%2A>。"
  syntax:
    content: public IComparable QueueName { get; }
    return:
      type: System.IComparable
      description: "名前、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.QueueName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.QueuingService
  id: QueuingService
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: QueuingService
  nameWithType: WorkflowQueue.QueuingService
  fullName: System.Workflow.Runtime.WorkflowQueue.QueuingService
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "これに関連付けられたキュー サービスを取得<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  syntax:
    content: public System.Workflow.Runtime.WorkflowQueuingService QueuingService { get; }
    return:
      type: System.Workflow.Runtime.WorkflowQueuingService
      description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowQueuingService&quot;> </xref>に関連付けられたキュー サービスを表す<xref href=&quot;System.Workflow.Runtime.WorkflowQueue&quot;></xref>です。"
  overload: System.Workflow.Runtime.WorkflowQueue.QueuingService*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "サブスクライバーを登録、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemArrived&quot;> </xref>イベント。"
  syntax:
    content: public void RegisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> eventListener);
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "サブスクライバー <xref href=&quot;System.Workflow.ComponentModel.QueueEventArgs&quot;> </xref>を実装する、 &lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;インターフェイスです。"
  overload: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "サブスクライバーを登録、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&quot;> </xref>イベント。"
  remarks: ''
  example:
  - "The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=fullName> method. It also uses the RegisterForQueueItemAvailable to register the specified listener.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#225](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#225)]\n [!code-vb[WF_Samples#225](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#225)]"
  syntax:
    content: public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> eventListener);
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "サブスクライバー <xref href=&quot;System.Workflow.ComponentModel.QueueEventArgs&quot;> </xref>を実装する、 &lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;インターフェイスです。"
  overload: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventListener</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)
  id: RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
  nameWithType: WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "サブスクライバーを登録、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&quot;> </xref>イベント。"
  remarks: "によって定期受信するアクティビティの修飾名が指定される`subscriberQualifiedName`で返される<xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName>の<xref:System.Workflow.Runtime.WorkflowQueueInfo>このキューに関連付けられているときに<xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=fullName>と呼びます</xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A?displayProperty=fullName></xref:System.Workflow.Runtime.WorkflowQueueInfo></xref:System.Workflow.Runtime.WorkflowQueueInfo.SubscribedActivityNames%2A?displayProperty=fullName>。"
  syntax:
    content: public void RegisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> eventListener, string subscriberQualifiedName);
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "サブスクライバー <xref href=&quot;System.Workflow.ComponentModel.QueueEventArgs&quot;> </xref>を実装する、 &lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;インターフェイスです。"
    - id: subscriberQualifiedName
      type: System.String
      description: "<xref:System.Workflow.ComponentModel.Activity.QualifiedName*>にサブスクライブしているアクティビティの<xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&quot;></xref>イベントまたは null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で).</xref:System.Workflow.ComponentModel.Activity.QualifiedName*>"
  overload: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventListener</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "サブスクライバーでの登録を解除、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemArrived&quot;> </xref>イベント。"
  remarks: "このメソッドは、内部使用のみに予約されています。"
  syntax:
    content: public void UnregisterForQueueItemArrived (System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> eventListener);
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "サブスクライバー <xref href=&quot;System.Workflow.ComponentModel.QueueEventArgs&quot;> </xref>を実装する、 &lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;インターフェイスです。"
  overload: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventListener</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  id: UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  langs:
  - csharp
  name: UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime
  summary: "サブスクライバーでの登録を解除、 <xref href=&quot;System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable&quot;> </xref>イベント。"
  remarks: ''
  example:
  - "The following code example demonstrates how you can create a <xref:System.Workflow.Runtime.WorkflowQueue> by calling the <xref:System.Workflow.Runtime.WorkflowQueuingService.GetWorkflowQueue%2A?displayProperty=fullName> method. It also uses the UnregisterForQueueItemAvailable to unregister the specified listener.  \n  \n This code example is part of the File Watcher Activity SDK Sample from the FileSystemEvent.cs file. For more information, see [File System Watcher Activity](http://msdn.microsoft.com/en-us/5442b63a-bdad-43d0-b7cf-f0b5d8b56a99).  \n  \n [!code-cs[WF_Samples#226](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#226)]\n [!code-vb[WF_Samples#226](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#226)]"
  syntax:
    content: public void UnregisterForQueueItemAvailable (System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs> eventListener);
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
      description: "サブスクライバー <xref href=&quot;System.Workflow.ComponentModel.QueueEventArgs&quot;> </xref>を実装する、 &lt;xref:System.Workflow.ComponentModel.IActivityEventListener%601&gt;インターフェイスです。"
  overload: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>eventListener</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Runtime.WorkflowQueue.Count
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Count
  nameWithType: WorkflowQueue.Count
  fullName: System.Workflow.Runtime.WorkflowQueue.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.WorkflowQueue.Dequeue
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Dequeue()
  nameWithType: WorkflowQueue.Dequeue()
  fullName: System.Workflow.Runtime.WorkflowQueue.Dequeue()
- uid: System.Workflow.Runtime.WorkflowQueue.Enabled
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Enabled
  nameWithType: WorkflowQueue.Enabled
  fullName: System.Workflow.Runtime.WorkflowQueue.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.WorkflowQueue.Enqueue(System.Object)
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Enqueue(Object)
  nameWithType: WorkflowQueue.Enqueue(Object)
  fullName: System.Workflow.Runtime.WorkflowQueue.Enqueue(Object)
- uid: System.Workflow.Runtime.WorkflowQueue.Peek
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Peek()
  nameWithType: WorkflowQueue.Peek()
  fullName: System.Workflow.Runtime.WorkflowQueue.Peek()
- uid: System.Workflow.Runtime.WorkflowQueue.QueueItemArrived
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueueItemArrived
  nameWithType: WorkflowQueue.QueueItemArrived
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueItemArrived
- uid: System.EventHandler{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<QueueEventArgs>
  nameWithType: EventHandler<QueueEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueueItemAvailable
  nameWithType: WorkflowQueue.QueueItemAvailable
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueItemAvailable
- uid: System.Workflow.Runtime.WorkflowQueue.QueueName
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueueName
  nameWithType: WorkflowQueue.QueueName
  fullName: System.Workflow.Runtime.WorkflowQueue.QueueName
- uid: System.IComparable
  parent: System
  isExternal: true
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.Workflow.Runtime.WorkflowQueue.QueuingService
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueuingService
  nameWithType: WorkflowQueue.QueuingService
  fullName: System.Workflow.Runtime.WorkflowQueue.QueuingService
- uid: System.Workflow.Runtime.WorkflowQueuingService
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowQueuingService
  nameWithType: WorkflowQueuingService
  fullName: System.Workflow.Runtime.WorkflowQueuingService
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<QueueEventArgs>
  nameWithType: IActivityEventListener<QueueEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.QueueEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.QueueEventArgs
    name: QueueEventArgs
    nameWithType: QueueEventArgs
    fullName: QueueEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.String)
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
  nameWithType: WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
  fullName: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived(IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  nameWithType: WorkflowQueue.UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
  fullName: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable(IActivityEventListener<QueueEventArgs>)
- uid: System.Workflow.Runtime.WorkflowQueue.Count*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Count
  nameWithType: WorkflowQueue.Count
- uid: System.Workflow.Runtime.WorkflowQueue.Dequeue*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Dequeue
  nameWithType: WorkflowQueue.Dequeue
- uid: System.Workflow.Runtime.WorkflowQueue.Enabled*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Enabled
  nameWithType: WorkflowQueue.Enabled
- uid: System.Workflow.Runtime.WorkflowQueue.Enqueue*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Enqueue
  nameWithType: WorkflowQueue.Enqueue
- uid: System.Workflow.Runtime.WorkflowQueue.Peek*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: Peek
  nameWithType: WorkflowQueue.Peek
- uid: System.Workflow.Runtime.WorkflowQueue.QueueName*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueueName
  nameWithType: WorkflowQueue.QueueName
- uid: System.Workflow.Runtime.WorkflowQueue.QueuingService*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: QueuingService
  nameWithType: WorkflowQueue.QueuingService
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemArrived*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: RegisterForQueueItemArrived
  nameWithType: WorkflowQueue.RegisterForQueueItemArrived
- uid: System.Workflow.Runtime.WorkflowQueue.RegisterForQueueItemAvailable*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: RegisterForQueueItemAvailable
  nameWithType: WorkflowQueue.RegisterForQueueItemAvailable
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemArrived*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: UnregisterForQueueItemArrived
  nameWithType: WorkflowQueue.UnregisterForQueueItemArrived
- uid: System.Workflow.Runtime.WorkflowQueue.UnregisterForQueueItemAvailable*
  parent: System.Workflow.Runtime.WorkflowQueue
  isExternal: false
  name: UnregisterForQueueItemAvailable
  nameWithType: WorkflowQueue.UnregisterForQueueItemAvailable
