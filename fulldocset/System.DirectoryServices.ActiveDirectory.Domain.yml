### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.Domain
  id: Domain
  children:
  - System.DirectoryServices.ActiveDirectory.Domain.Children
  - System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  - System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Domain.Forest
  - System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  - System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  - System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.Parent
  - System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  - System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  - System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  - System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  langs:
  - csharp
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
  type: Class
  summary: "ドメイン クラスは、Active Directory ドメインを表します。"
  syntax:
    content: 'public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name
  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  id: Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインの子であるドメインを取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainCollection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainCollection&quot;> </xref>子ドメインを含むオブジェクトです。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.Children*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定されたドメインで信頼関係のローカル側を作成します。"
  remarks: "このメソッドは、信頼関係の&1; つの側を作成します。 信頼の両方の側が作成されるまで、信頼は確立されません。       `trustPassword`パラメーターが作成された信頼のパスワードを関連付けます。 信頼の相手側が作成されるが同じパスワードを指定し、2 つのローカルの信頼は互いにバインドしています。       プログラムで&1; つのメソッドの呼び出しで信頼関係の両方の側を作成するには、使用、<xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>メソッド</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship%2A?displayProperty=fullName>。"
  syntax:
    content: public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼が作成されるドメインの DNS 名。"
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref>メンバーをこのドメインに関連の信頼の方向を決定します。"
    - id: trustPassword
      type: System.String
      description: "信頼のパスワード。 以下の「解説」を参照してください。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "信頼関係は既に存在します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>または<code>trustPassword</code>が空です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>trustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;></xref>値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定されたドメインで信頼関係の両方の側を作成します。"
  remarks: "このメソッドは、1 つのメソッドの呼び出しで信頼関係の両側を作成します。 <xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>信頼関係の&1; つだけの側を作成するメソッドを使用します</xref:System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>。"
  syntax:
    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>で作成されている、信頼されるドメインを表すオブジェクト。"
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref>メンバーをこのドメインに関連の信頼の方向を決定します。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "信頼関係は既に存在します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;></xref>値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  id: DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "信頼関係のローカル側を削除します。"
  remarks: "信頼関係の&1; つの側が削除されると、長い信頼が存在します。       削除する&1; つのメソッド呼び出しと信頼関係の両方の側を使用して、<xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>メソッド</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship%2A?displayProperty=fullName>。"
  syntax:
    content: public void DeleteLocalSideOfTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼が存在するドメインの DNS 名。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "信頼関係はありません、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>で指定された、 <code> targetDomainName </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "信頼関係の両方の側を削除します。"
  remarks: "信頼関係の&1; つだけの辺を削除するを使用して、<xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>メソッド</xref:System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>。"
  syntax:
    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>信頼が存在するドメインを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定した信頼関係がない<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;></xref>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  id: DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメイン内のドメイン コント ローラーを取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>このドメインのドメイン コント ローラーを含むオブジェクトです。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  id: DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインが動作しているモードを取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "1 つ、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref>このドメインが動作しているモードを示す値。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  id: DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインが動作しているモード レベルを取得します。"
  syntax:
    content: public int DomainModeLevel { get; }
    return:
      type: System.Int32
      description: "ドメインのモード レベル。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  id: FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメイン内には、すべての探索可能なドメイン コント ローラーを検索します。"
  remarks: "DNS SRV レコードを照会することで、探索可能なドメイン コント ローラーを検索できます。 ジェネリック、サイト固有ではない、ドメイン コント ローラーの SRV レコードを登録するドメイン コント ローラーのみが、このメソッドによって返されます。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>このメソッドによって見つかったドメイン コント ローラー オブジェクトを格納しています。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  id: FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定したサイトにもこのドメイン内には、すべての探索可能なドメイン コント ローラーを検索します。"
  remarks: "DNS SRV レコードを照会することで、探索可能なドメイン コント ローラーを検索できます。  ドメイン コント ローラーが指定されたサイトの SRV レコードを登録していない場合それが返されません、このメソッドにより場合でも、ドメイン コント ローラーがそのサイト内にある物理的に。       指定されたサイトの SRV レコードを登録するすべてのドメイン コント ローラーがそのサイト内に物理的に配置されていない場合でも、このメソッドで返されます。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "ドメイン コント ローラーを検索するサイトの名前。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>このメソッドによって見つかったドメイン コント ローラー オブジェクトを格納しています。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  id: FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメイン内には、すべてのドメイン コント ローラーを検索します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>このメソッドによって見つかったドメイン コント ローラー オブジェクトを格納しています。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  id: FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定したサイトにもこのドメイン内には、すべてのドメイン コント ローラーを検索します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "ドメイン コント ローラーを検索するサイトの名前。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainControllerCollection&quot;> </xref>このメソッドによって見つかったドメイン コント ローラー オブジェクトを格納しています。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  id: FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメイン内の任意のドメイン コント ローラーを検索します。"
  remarks: "このメソッドは、ドメイン内の任意のドメイン コント ローラーを検索します。 同じドメイン コント ローラーはこのメソッドに別の呼び出しによって検出する保証はありません。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>このメソッドによって見つかったドメイン コント ローラーを表すです。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "ドメイン コント ローラーを配置することはできません。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定した条件を満たしているこのドメインのドメイン コント ローラーを検索します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "1 つまたは複数の組み合わせ、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref>メンバーを検索するドメイン コント ローラーの種類を定義します。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>このメソッドによって見つかったドメイン コント ローラーを表すです。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "ドメイン コント ローラーを配置することはできません。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> flag </code>パラメーターに無効な値が含まれています。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  id: FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインおよび指定したサイトは、ドメイン コント ローラーを検索します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "ドメイン コント ローラーを検索するサイトの名前。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>をこのメソッドによって見つかったドメイン コント ローラーを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "ドメイン コント ローラーを配置することはできません。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインおよび指定した条件に一致する指定されたサイトは、ドメイン コント ローラーを検索します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: siteName
      type: System.String
      description: "ドメイン コント ローラーを検索するサイトの名前。"
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "1 つまたは複数の組み合わせ、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref>メンバーを検索するドメイン コント ローラーの種類を定義します。"
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>をこのメソッドによって見つかったドメイン コント ローラーを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "ドメイン コント ローラーを配置することはできません。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "この例外が発生の原因は次のいずれか。      - <code> siteName </code>空の文字列します。      - <code> flag </code>に無効な値が含まれています。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインのメンバーである、フォレストを取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>をこのドメインのメンバーである、フォレストを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  id: GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "すべてのドメインの信頼関係を取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection&quot;> </xref>すべてのドメインの信頼関係を含むオブジェクトです。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  id: GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "取得、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>をローカル コンピューターが参加しているドメインを表すオブジェクト。"
  remarks: "GetComputerDomain メソッドの戻り値は、<xref:System.DirectoryServices.ActiveDirectory.Domain>アプリケーションを実行しているコンピューターが参加しているドメインを表すオブジェクト</xref:System.DirectoryServices.ActiveDirectory.Domain>。  この戻り値は、アプリケーションを実行するドメインの資格情報に依存しないです。 このメソッドでは、下で実行アカウントの信頼されたドメインの資格情報に関係なく、コンピューターのドメインを取得します。  取得する、<xref:System.DirectoryServices.ActiveDirectory.Domain>をユーザーに対応するドメインを表すオブジェクトの資格情報を有効に、アプリケーションが実行されているセキュリティ コンテキストを使用して、<xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A>メソッド代わりにします</xref:System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain%2A></xref:System.DirectoryServices.ActiveDirectory.Domain>。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>をローカル コンピューターが参加しているドメインを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "ドメインへの接続を確立できませんでした。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  id: GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "取得、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>アプリケーションが実行されているセキュリティ コンテキストで有効での現在のユーザー資格情報オブジェクトです。"
  remarks: "GetCurrentDomain メソッドは、アプリケーションが実行されているドメインの資格情報によって決定されます。  取得する、<xref:System.DirectoryServices.ActiveDirectory.Domain>アプリケーションに関連付けられた資格情報に関係なく、アプリケーションを実行しているコンピューターをドメインを表すオブジェクトが参加しているを使用して、<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>メソッド代わりにします</xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A></xref:System.DirectoryServices.ActiveDirectory.Domain>。      ## 関連項目<xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A></xref:System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain%2A>"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>のアプリケーションが実行されているセキュリティ コンテキストの指定したユーザーのドメインを表すオブジェクトが有効で資格情報します。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "現在のコンテキストへの接続を確立されませんでした。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  id: GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "取得、 <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>ドメインの既定の名前付けコンテキストを表すオブジェクト。"
  syntax:
    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "A <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref>ドメインを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "取得、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>指定したコンテキストのオブジェクト。"
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref>ターゲットとオブジェクトの取得に使用する資格情報を含むオブジェクト。 コンテキストの型は、ドメインまたはディレクトリのサーバーである必要があります。"
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>を指定したコンテキストのドメインを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されたターゲットへの接続を<code> context </code>を確立できませんでした。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>正しくありません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  id: GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "入力方向の信頼の認証の種類を決定します。"
  syntax:
    content: public bool GetSelectiveAuthenticationStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼が存在するドメインの DNS 名。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、信頼の認証は、オプションを選択します。<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>認証がドメイン全体である場合。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "信頼関係はありません、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>で指定された、 <code> targetForestName </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "LsaQueryTrustedDomainInfoByName への呼び出しが失敗しました。 詳細については、トピックを参照してください。 [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) MSDN ライブラリで[http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  id: GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "SID フィルター処理の信頼関係の状態を判断します。"
  syntax:
    content: public bool GetSidFilteringStatus (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼関係が存在するドメインの DNS 名。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SID のフィルター処理が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "信頼関係はありません、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>で指定された、 <code> targetForestName </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  id: GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインと指定したドメイン間の信頼関係を取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼関係が存在するドメインの DNS 名。"
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation&quot;> </xref>をこのドメインと指定したドメイン間の信頼関係を表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "信頼関係はありません、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>で指定された、 <code> targetForestName </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  id: InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインのインフラストラクチャ ロールの所有者を取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>インフラストラクチャ ロールの所有者を保持するドメイン コント ローラーを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  id: Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインの親ドメインを取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>をこのドメインの親ドメインを表すオブジェクト。 <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>このドメインは、親ドメインを持ちません。 場合、"
  overload: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  id: PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "取得、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>このドメインのプライマリ ドメイン コント ローラー (PDC) を保持するオブジェクト。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>をこのドメインの PDC エミュレーターの役割を保持するドメイン コント ローラーを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  id: RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "ドメインの操作モードを生成します。"
  remarks: "<xref:System.DirectoryServices.ActiveDirectory.DomainMode>値を発生することができますが、低くありません</xref:System.DirectoryServices.ActiveDirectory.DomainMode>。 つまり、元に戻すことは、ドメインの機能レベルを上げることと、これを行う意思決定を慎重に行う必要があります。       ドメインの操作モードの詳細については、次を参照してください。[ドメインとフォレストの機能](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp)します。       次の表に有効な値を定義する`domainMode`ドメインの現在の操作モードに基づきます。      |現在のモード |モードを発生させることができます |  |------------------|---------------------------|  |<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.DomainMode>|  |<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|  |<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|  |<xref:System.DirectoryServices.ActiveDirectory.DomainMode>|None|</xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode></xref:System.DirectoryServices.ActiveDirectory.DomainMode>"
  syntax:
    content: public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);
    parameters:
    - id: domainMode
      type: System.DirectoryServices.ActiveDirectory.DomainMode
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;> </xref>ドメインの新しい操作レベルを指定する列挙値。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "ドメインの現在の操作モードに基づき、指定した値<code> domainMode </code>が無効です。"
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>domainMode</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainMode&quot;></xref>列挙値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  id: RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "ドメインの機能レベルを引き上げます。"
  syntax:
    content: public void RaiseDomainFunctionalityLevel (int domainMode);
    parameters:
    - id: domainMode
      type: System.Int32
      description: "新しいレベルを表す値です。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "信頼関係を修復します。"
  remarks: "このメソッドは、セキュリティで保護されたチャネルの信頼をリセットすることにより、信頼を修復します。 操作は、セキュリティで保護されたチャネルをリセットする失敗した場合、後もリセットされ、信頼のパスワード。"
  syntax:
    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>を使用する信頼が存在するドメインを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "信頼関係はありません、 <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>で指定された<code> targetDomain</code>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "ターゲットまたはソース サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  id: RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "このドメインの RID マスターの役割所有者を取得します。"
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref>をこのドメインの相対識別子 (RID) マスターの役割を保持するドメイン コント ローラーを表すオブジェクト。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "有効または入力方向の信頼の認証の選択を無効にします。"
  syntax:
    content: public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "入力方向の信頼が存在するドメインの DNS 名。"
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>選択的認証が有効である場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメイン コント ローラーと信頼関係がない<code> targetDomainName</code>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  id: SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "SID フィルター処理の指定されたドメインの状態を設定します。"
  syntax:
    content: public void SetSidFilteringStatus (string targetDomainName, bool enable);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼が存在するドメインの DNS 名。"
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SID のフィルター処理を有効にする必要があります。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと信頼関係がない<code> targetDomainName</code>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "現在のオブジェクトは破棄されました。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "信頼関係のローカル側のパスワードを更新します。"
  remarks: "信頼を再確立するには、同じパスワードを使用して、信頼の両方の側を更新する必要があります。"
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼関係が存在するドメインの DNS 名。"
    - id: newTrustPassword
      type: System.String
      description: "信頼の新しいパスワード。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと信頼関係がない<code> targetDomainName</code>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>または<code>newTrustPassword</code>空の文字列します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "信頼関係のローカル側のパスワードと信頼の方向を更新します。"
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼関係が存在するドメインの DNS 名。"
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref>新しい信頼の方向の信頼関係の値。"
    - id: newTrustPassword
      type: System.String
      description: "信頼の新しいパスワード。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと信頼関係はありません、 <code> targetDomainName </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>または<code>newTrustPassword</code>空の文字列します。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>or <code>newTrustPassword</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;></xref>値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "既存の信頼関係の信頼の方向を更新します。 信頼の方向は、信頼の両方の側で更新されます。"
  syntax:
    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>を使用する信頼が存在するドメインを表すオブジェクト。"
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref>信頼関係の新しい信頼の方向を指定する値。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと信頼関係はありません、 <code> targetDomain </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;></xref>値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  id: VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定されたドメインで以前に確立された出力方向の信頼が有効であることを確認します。"
  remarks: "このメソッドは、信頼関係が完全に確立されていることを確認するを使用します。 信頼の両方の側が作成されるまで、信頼は確立されません。"
  syntax:
    content: public void VerifyOutboundTrustRelationship (string targetDomainName);
    parameters:
    - id: targetDomainName
      type: System.String
      description: "信頼が存在するドメインの DNS 名。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと出力方向の信頼関係がありません<code> targetDomainName</code>です。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetDomainName</code>空の文字列です。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomainName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  langs:
  - csharp
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "指定されたドメインで以前に確立された信頼が有効であることを確認します。"
  remarks: "このメソッドは、信頼関係が完全に確立されたことを確認します。 信頼の両方の側が作成されるまで、信頼は確立されません。"
  syntax:
    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetDomain
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref>を使用する信頼が存在するドメインを表すオブジェクト。"
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref>信頼の方向、このドメインに関連を指定する値。"
  overload: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "指定されているドメインと信頼関係はありません、 <code> targetDomain </code>パラメーター、またはターゲット ドメインがありません。 で指定されている信頼の方向、 <code> direction </code>パラメーター。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "基になるディレクトリ サービスへの呼び出しでエラーが発生します。"
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "対象サーバーは、ビジー状態か使用できません。"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetDomain</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>有効ではありません<xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;></xref>値。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "オブジェクトは破棄されました。"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "指定されたアカウントには、この操作を実行するアクセス許可がありません。"
  platform:
  - net462
references:
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.DomainCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainCollection
  nameWithType: DomainCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.TrustDirection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustDirection
  nameWithType: TrustDirection
  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship(Domain)
  nameWithType: Domain.DeleteTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.DomainMode
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainMode
  nameWithType: DomainMode
  fullName: System.DirectoryServices.ActiveDirectory.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers()
  nameWithType: Domain.FindAllDiscoverableDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers(String)
  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers()
  nameWithType: Domain.FindAllDomainControllers()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers(String)
  nameWithType: Domain.FindAllDomainControllers(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController()
  nameWithType: Domain.FindDomainController()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(LocatorOptions)
  nameWithType: Domain.FindDomainController(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String)
  nameWithType: Domain.FindDomainController(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController(String,LocatorOptions)
  nameWithType: Domain.FindDomainController(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships()
  nameWithType: Domain.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformationCollection
  nameWithType: TrustRelationshipInformationCollection
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain()
  nameWithType: Domain.GetComputerDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain()
  nameWithType: Domain.GetCurrentDomain()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry()
  nameWithType: Domain.GetDirectoryEntry()
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain(DirectoryContext)
  nameWithType: Domain.GetDomain(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus(String)
  nameWithType: Domain.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship(String)
  nameWithType: Domain.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformation
  nameWithType: TrustRelationshipInformation
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality(DomainMode)
  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel(Int32)
  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship(Domain)
  nameWithType: Domain.RepairTrustRelationship(Domain)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Domain.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship(Domain,TrustDirection)
  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Domain.Children*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Children
  nameWithType: Domain.Children
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateLocalSideOfTrustRelationship
  nameWithType: Domain.CreateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: CreateTrustRelationship
  nameWithType: Domain.CreateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship
  nameWithType: Domain.DeleteLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DeleteTrustRelationship
  nameWithType: Domain.DeleteTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainControllers
  nameWithType: Domain.DomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainMode
  nameWithType: Domain.DomainMode
- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: DomainModeLevel
  nameWithType: Domain.DomainModeLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDiscoverableDomainControllers
  nameWithType: Domain.FindAllDiscoverableDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindAllDomainControllers
  nameWithType: Domain.FindAllDomainControllers
- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: FindDomainController
  nameWithType: Domain.FindDomainController
- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Forest
  nameWithType: Domain.Forest
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetAllTrustRelationships
  nameWithType: Domain.GetAllTrustRelationships
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetComputerDomain
  nameWithType: Domain.GetComputerDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetCurrentDomain
  nameWithType: Domain.GetCurrentDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDirectoryEntry
  nameWithType: Domain.GetDirectoryEntry
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetDomain
  nameWithType: Domain.GetDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSelectiveAuthenticationStatus
  nameWithType: Domain.GetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetSidFilteringStatus
  nameWithType: Domain.GetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: GetTrustRelationship
  nameWithType: Domain.GetTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: InfrastructureRoleOwner
  nameWithType: Domain.InfrastructureRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: Parent
  nameWithType: Domain.Parent
- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: PdcRoleOwner
  nameWithType: Domain.PdcRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionality
  nameWithType: Domain.RaiseDomainFunctionality
- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RaiseDomainFunctionalityLevel
  nameWithType: Domain.RaiseDomainFunctionalityLevel
- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RepairTrustRelationship
  nameWithType: Domain.RepairTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: RidRoleOwner
  nameWithType: Domain.RidRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSelectiveAuthenticationStatus
  nameWithType: Domain.SetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: SetSidFilteringStatus
  nameWithType: Domain.SetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship
  nameWithType: Domain.UpdateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: UpdateTrustRelationship
  nameWithType: Domain.UpdateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyOutboundTrustRelationship
  nameWithType: Domain.VerifyOutboundTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Domain
  isExternal: false
  name: VerifyTrustRelationship
  nameWithType: Domain.VerifyTrustRelationship
