### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute
  id: UrlIdentityPermissionAttribute
  children:
  - System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  - System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  langs:
  - csharp
  name: UrlIdentityPermissionAttribute
  nameWithType: UrlIdentityPermissionAttribute
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute
  type: Class
  summary: "により、セキュリティ アクションを<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>宣言セキュリティを使用してコードに適用します。 このクラスは継承できません。"
  remarks: "プロトコル (HTTP、HTTPS、FTP) と、ファイルを含む、完全な URL と見なされます。 たとえば、http://www.fourthcoffee.com/process/grind.htm は完全な URL です。       許可されている宣言のスコープによって異なります、<xref:System.Security.Permissions.SecurityAction>ために使用される</xref:System.Security.Permissions.SecurityAction>。      > [!IMPORTANT] > 以降で、 [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]、id アクセス許可は使用されません。   >> で .NET Framework version 1.0 および 1.1 では、id アクセス許可の要求は、呼び出し元のアセンブリが完全に信頼されている場合でも有効です。 呼び出し元のアセンブリが、完全な信頼がありますが、id アクセス許可の確認要求が失敗したアセンブリが要求されている条件を満たしていない場合。 .NET framework version 2.0 では、id アクセス許可の要求では、呼び出し元のアセンブリに完全な信頼がある場合に効果的です。 これにより、特殊なケースとして id アクセス許可の処理方法を排除すること、すべての権限の一貫性。       セキュリティ属性によって宣言されたセキュリティ情報は、属性の対象のメタデータに格納され、実行時に、システムによってアクセスされます。 セキュリティ属性は、宣言型セキュリティにのみ使用されます。 命令型のセキュリティのアクセス許可の対応するクラスを使用します。"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class UrlIdentityPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: UrlIdentityPermissionAttribute(SecurityAction)
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Permissions.UrlIdentityPermissionAttribute&quot;> </xref> 、指定したクラス<xref href=&quot;System.Security.Permissions.SecurityAction&quot;></xref>です。"
  syntax:
    content: public UrlIdentityPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "1 つ、 <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>値。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "作成して、新しい返します<xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;></xref>です。"
  remarks: "このメソッドは、アプリケーション コードからではなく、セキュリティ システムによってのみ呼び出す必要があります。       コンパイル時に、属性は、セキュリティの宣言をメタデータのシリアル化された形式に変換されます。 メタデータの宣言セキュリティ データは、この属性に対応する権限をこのメソッドが返すから作成されます。"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "A <xref href=&quot;System.Security.Permissions.UrlIdentityPermission&quot;> </xref>この属性に対応します。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  id: Url
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  langs:
  - csharp
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "取得または呼び出し元のコードの完全な URL を設定します。"
  remarks: "完全な URL を考慮すると、たとえばプロトコル (HTTP、HTTPS、FTP) と、ファイルを含む: http://www.fourthcoffee.com/process/grind.htm/ です。       Url 一致するか、最後の位置でのワイルドカードを正確にたとえば: http://www.fourthcoffee.com/process/* です。"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "ホストで指定された URL と一致する URL です。"
  overload: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: UrlIdentityPermissionAttribute(SecurityAction)
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission()
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
  fullName: System.Security.Permissions.UrlIdentityPermissionAttribute.Url
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.#ctor*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: UrlIdentityPermissionAttribute
  nameWithType: UrlIdentityPermissionAttribute.UrlIdentityPermissionAttribute
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.CreatePermission*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: UrlIdentityPermissionAttribute.CreatePermission
- uid: System.Security.Permissions.UrlIdentityPermissionAttribute.Url*
  parent: System.Security.Permissions.UrlIdentityPermissionAttribute
  isExternal: false
  name: Url
  nameWithType: UrlIdentityPermissionAttribute.Url
