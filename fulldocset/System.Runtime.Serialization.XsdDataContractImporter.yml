### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.XsdDataContractImporter
  id: XsdDataContractImporter
  children:
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor
  - System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  - System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  - System.Runtime.Serialization.XsdDataContractImporter.Options
  langs:
  - csharp
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter
  fullName: System.Runtime.Serialization.XsdDataContractImporter
  type: Class
  summary: "共通言語ランタイム (CLR) 型に対応する一連の XML スキーマ ファイル (.xsd) の変換を許可します。"
  remarks: "既存の Web サービス、または XML スキーマからのデータ コントラクト型を作成する必要があります相互運用可能な Web サービスを作成する場合、XsdDataContractImporter を使用します。 XsdDataContractImporter は XML スキーマのセットを変換し、作成、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]選択したプログラミング言語でコントラクトのデータを表す型。 コードを作成するでクラスを使用して、<xref:System.CodeDom>名前空間</xref:System.CodeDom>。       逆に、使用、<xref:System.Runtime.Serialization.XsdDataContractExporter>クラスの CLR 型で表されるデータが組み込まれていると、その他の Web サービスが消費できるように各データ型の XML スキーマをエクスポートする必要がある場合は、Web サービスを作成したときにします</xref:System.Runtime.Serialization.XsdDataContractExporter>。 つまり、 <xref:System.Runtime.Serialization.XsdDataContractExporter>CLR 型のセットを XML スキーマのセットに変換します</xref:System.Runtime.Serialization.XsdDataContractExporter>。      > [!NOTE] > デザイン時に、XML スキーマから CLR 型を生成するには、使用、 [ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md)です。 XSD ファイルからコードを生成するには、`/dataContractOnly`ツールのスイッチ。 場合は必要とする複数のプロセスが細かく制御またはプログラムによって実行する必要があります、XsdDataContractImporter を使用することもできます。"
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#0](~/add/codesnippet/csharp/t-system.runtime.seriali_7_1.cs)]\n [!code-vb[XsdDataContractImporter#0](~/add/codesnippet/visualbasic/t-system.runtime.seriali_7_1.vb)]"
  syntax:
    content: public class XsdDataContractImporter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref>クラスです。"
  syntax:
    content: public XsdDataContractImporter ();
    parameters: []
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  id: '#ctor(System.CodeDom.CodeCompileUnit)'
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  type: Constructor
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Runtime.Serialization.XsdDataContractImporter&quot;> </xref>クラス、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> CLR コードの生成に使用されます。"
  remarks: "コードを追加するこのコンス トラクターを使用して、<xref:System.CodeDom.CodeCompileUnit>が既に生成されている</xref:System.CodeDom.CodeCompileUnit>。"
  example:
  - "The following example creates an <xref:System.Xml.Schema.XmlSchemaSet> and calls the <xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A> method to create a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both Visual C# and Visual Basic code files.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/03617d2d-d820-45ea-9187-_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/03617d2d-d820-45ea-9187-_1.vb)]"
  syntax:
    content: public XsdDataContractImporter (System.CodeDom.CodeCompileUnit codeCompileUnit);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "<xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>されるコードを格納します。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  id: CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "スキーマが含まれるかどうかを示す値を取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に変換できる、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  remarks: ''
  example:
  - "The following example calls the CanImport method to determine whether the <xref:System.CodeDom.CodeCompileUnit> can be generated.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/b2b83fee-fce3-4860-9703-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/b2b83fee-fce3-4860-9703-_1.vb)]"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>を変換するスキーマを格納します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スキーマをデータ コントラクト型に変換できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "インポートに関連するデータ コントラクトが有効ではありません。"
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "指定した型のセットが含まれるかどうかを示す値を取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に生成される CLR 型に変換できる、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>を変換するスキーマを格納します。"
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "&lt;Xref:System.Collections.Generic.ICollection%601&gt;の<xref:System.Xml.XmlQualifiedName>をインポートするスキーマ型のセットを表す</xref:System.Xml.XmlQualifiedName>。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、スキーマを変換することができます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeNames</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "インポートに関連するデータ コントラクトが有効ではありません。"
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "特定のスキーマ要素が含まれるかどうかを示す値を取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>インポートすることができます。"
  remarks: "このメソッドは、種類とそこから参照されるすべてのスキーマ型を確認します。"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>をインポートします。"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "特定の<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref>スキーマのセットをチェックインします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>要素はインポート; で指定できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "インポートに関連するデータ コントラクトが有効ではありません。"
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "スキーマが含まれるかどうかを示す値を取得、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に変換できる、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  remarks: "インポート可能な種類の詳細については、次を参照してください。[データ コントラクト シリアライザーでサポートされる型](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool CanImport (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>スキーマ表現を格納しています。"
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Collections.IList>の<xref:System.Xml.XmlQualifiedName>からインポートする必要があるスキーマ型の名前を指定する、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref></xref:System.Xml.XmlQualifiedName> </xref:System.Collections.IList> 。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>スキーマをデータ コントラクト型に変換できる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.InvalidDataContractException
    commentId: T:System.Runtime.Serialization.InvalidDataContractException
    description: "インポートに関連するデータ コントラクトが有効ではありません。"
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  id: CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "取得、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>生成される CLR 型を格納するために使用します。"
  remarks: "使用してスキーマをインポートした後、このプロパティを呼び出して、<xref:System.Runtime.Serialization.XsdDataContractImporter>にアクセスする、<xref:System.CodeDom.CodeCompileUnit>すべてで生成されたコードが格納されている</xref:System.CodeDom.CodeCompileUnit></xref:System.Runtime.Serialization.XsdDataContractImporter>。"
  example:
  - "The following example uses creates a <xref:System.CodeDom.CodeCompileUnit>. The <xref:System.CodeDom.CodeCompileUnit> is then used to create both a Visual C# and Visual Basic code file.  \n  \n [!code-cs[XsdDataContractImporter#1](~/add/codesnippet/csharp/p-system.runtime.seriali_1_1.cs)]\n [!code-vb[XsdDataContractImporter#1](~/add/codesnippet/visualbasic/p-system.runtime.seriali_1_1.vb)]"
  syntax:
    content: public System.CodeDom.CodeCompileUnit CodeCompileUnit { get; }
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "A <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>生成される CLR 型を格納するために使用します。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "返します、 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>に指定された<xref:System.Xml.XmlQualifiedName></xref:System.Xml.XmlQualifiedName>スキーマ型に対して生成された CLR 型に"
  remarks: "このメソッドを使用して呼び出した後に生成された CLR 型への参照を検索、<xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>メソッド</xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A>。 <xref:System.CodeDom.CodeTypeReference>生成された型の名前が含まれており対応する、 <xref:System.CodeDom.CodeTypeDeclaration> <xref:System.CodeDom.CodeCompileUnit>。</xref:System.CodeDom.CodeCompileUnit></xref:System.CodeDom.CodeTypeDeclaration>検索に使用できます。</xref:System.CodeDom.CodeTypeReference>"
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "の<xref:System.Xml.XmlQualifiedName>中を検索するスキーマ型を指定します。</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>持つスキーマ型に対して生成された CLR 型への参照、 <code> typeName </code>指定します。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  id: GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "返します、 <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>指定された XML の要素とスキーマ要素を修飾します。"
  remarks: "スキーマ要素は、要素のスコープで指定されている型に関するデータが必要です。 この主要な例が XSD 属性`nillable`です。 スキーマで設定`nillable`を`true`null の概念は CLR 型<xref:System.Nullable%601>.</xref:System.Nullable%601>で表現が含まれるスキーマ要素が指定されて 要素は、このインポーターは、要素レベルの情報を検索し、それに応じて正しい型参照を返すようにに渡されます。       各パラメーターが別々 にインポートされる WSDL をインポートするときに、したがってパラメーター要素を個別に渡される必要があります。"
  syntax:
    content: public System.CodeDom.CodeTypeReference GetCodeTypeReference (System.Xml.XmlQualifiedName typeName, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "の<xref:System.Xml.XmlQualifiedName>中を検索するスキーマ型の XML 修飾名を指定します。</xref:System.Xml.XmlQualifiedName>"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> XML スキーマで要素を指定します。"
    return:
      type: System.CodeDom.CodeTypeReference
      description: "A <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>指定したスキーマ型に対して生成された型を表すです。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  id: GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "一覧を返します<xref href=&quot;System.CodeDom.CodeTypeReference&quot;></xref>を指定したスキーマ型のコードを生成するときに生成される既知の型を表すオブジェクト。"
  remarks: "スキーマの種類の CLR 型を生成するときに、既知の型は、スキーマに存在するすべての派生型のも生成されます。 多くの場合、生成されたコードに属性を使用してこれらの既知の型が追加されます。 (たとえば、参照<xref:System.Runtime.Serialization.KnownTypeAttribute>クラス</xref:System.Runtime.Serialization.KnownTypeAttribute> ただし、) 最上位レベルの種類では、する必要があります生成された既知の型のセットを返す方法です。 このメソッドが戻る、<xref:System.CodeDom.CodeTypeReference>が特定のスキーマ型に対して生成された既知の種類</xref:System.CodeDom.CodeTypeReference>。       詳細については、次を参照してください。[データ コントラクトの既知の型](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference> GetKnownTypeReferences (System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "の<xref:System.Xml.XmlQualifiedName>既知の型のデータ型を検索するスキーマ型を表す</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
      description: "A &lt;xref:System.Collections.Generic.IList%601&gt;型の<xref href=&quot;System.CodeDom.CodeTypeReference&quot;></xref>です。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  id: Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "指定したセットに含まれている XML スキーマの変換、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  remarks: ''
  example:
  - "The following example uses the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method to test whether a set of schemas can be imported. If the <xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A> method returns `true`, the code invokes the Import method.  \n  \n [!code-cs[XsdDataContractImporter#2](~/add/codesnippet/csharp/8343a280-8e19-434b-8b6b-_1.cs)]\n [!code-vb[XsdDataContractImporter#2](~/add/codesnippet/visualbasic/8343a280-8e19-434b-8b6b-_1.vb)]"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>の CLR 型を生成するためのスキーマ表現を格納しています。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "変換する、指定したスキーマ型のセットに含まれている、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に生成される CLR 型に、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName> typeNames);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>スキーマ表現を格納しています。"
    - id: typeNames
      type: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
      description: "A &lt;xref:System.Collections.Generic.ICollection%601&gt; (の<xref:System.Xml.XmlQualifiedName>) をインポートするスキーマ型のセットを表す</xref:System.Xml.XmlQualifiedName>。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "指定した XML スキーマのセットに指定したスキーマ要素を変換、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref>を返します、<xref:System.Xml.XmlQualifiedName>を表す、指定した要素のデータ コントラクト名</xref:System.Xml.XmlQualifiedName>。"
  syntax:
    content: public System.Xml.XmlQualifiedName Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.Schema.XmlSchemaElement element);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>を変換するスキーマを格納します。"
    - id: element
      type: System.Xml.Schema.XmlSchemaElement
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref>を変換する特定のスキーマ要素を表すです。"
    return:
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>指定した要素を表す</xref:System.Xml.XmlQualifiedName>。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>element</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  id: Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "含まれる指定した XML スキーマ型を変換、 <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>に、 <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;></xref>です。"
  syntax:
    content: public void Import (System.Xml.Schema.XmlSchemaSet schemas, System.Xml.XmlQualifiedName typeName);
    parameters:
    - id: schemas
      type: System.Xml.Schema.XmlSchemaSet
      description: "A <xref href=&quot;System.Xml.Schema.XmlSchemaSet&quot;> </xref>スキーマ表現を格納しています。"
    - id: typeName
      type: System.Xml.XmlQualifiedName
      description: "A<xref:System.Xml.XmlQualifiedName>をインポートする特定のスキーマ型を表す</xref:System.Xml.XmlQualifiedName>。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Import*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>schemas</code> or <code>typeName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  id: Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  langs:
  - csharp
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
  type: Property
  assemblies:
  - System.Runtime.Serialization
  namespace: System.Runtime.Serialization
  summary: "取得または設定、 <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref>インポート操作の設定可能なオプションを含むです。"
  remarks: "使用して、<xref:System.Runtime.Serialization.ImportOptions>スキーマのインポート中に CLR 型を生成する方法をカスタマイズするクラス</xref:System.Runtime.Serialization.ImportOptions>。"
  syntax:
    content: public System.Runtime.Serialization.ImportOptions Options { get; set; }
    return:
      type: System.Runtime.Serialization.ImportOptions
      description: "A <xref href=&quot;System.Runtime.Serialization.ImportOptions&quot;> </xref>設定可能なオプションを格納しています。"
  overload: System.Runtime.Serialization.XsdDataContractImporter.Options*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.InvalidDataContractException
  isExternal: true
  name: System.Runtime.Serialization.InvalidDataContractException
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter()
  nameWithType: XsdDataContractImporter.XsdDataContractImporter()
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter()
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter(CodeCompileUnit)
  nameWithType: XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.XsdDataContractImporter(CodeCompileUnit)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaSet
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<XmlQualifiedName>
  nameWithType: ICollection<XmlQualifiedName>
  fullName: System.Collections.Generic.ICollection<System.Xml.XmlQualifiedName>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Xml.XmlQualifiedName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xml.XmlQualifiedName
    name: XmlQualifiedName
    nameWithType: XmlQualifiedName
    fullName: XmlQualifiedName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlSchemaElement)
- uid: System.Xml.Schema.XmlSchemaElement
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CanImport(XmlSchemaSet,XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
  fullName: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(XmlQualifiedName,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences(XmlQualifiedName)
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(XmlQualifiedName)
- uid: System.Collections.Generic.ICollection{System.CodeDom.CodeTypeReference}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<CodeTypeReference>
  nameWithType: ICollection<CodeTypeReference>
  fullName: System.Collections.Generic.ICollection<System.CodeDom.CodeTypeReference>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.CodeDom.CodeTypeReference>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.CodeDom.CodeTypeReference
    name: CodeTypeReference
    nameWithType: CodeTypeReference
    fullName: CodeTypeReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,ICollection<XmlQualifiedName>)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlSchemaElement)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlSchemaElement)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import(XmlSchemaSet,XmlQualifiedName)
  nameWithType: XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Import(XmlSchemaSet,XmlQualifiedName)
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
  fullName: System.Runtime.Serialization.XsdDataContractImporter.Options
- uid: System.Runtime.Serialization.ImportOptions
  parent: System.Runtime.Serialization
  isExternal: false
  name: ImportOptions
  nameWithType: ImportOptions
  fullName: System.Runtime.Serialization.ImportOptions
- uid: System.Runtime.Serialization.XsdDataContractImporter.#ctor*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: XsdDataContractImporter
  nameWithType: XsdDataContractImporter.XsdDataContractImporter
- uid: System.Runtime.Serialization.XsdDataContractImporter.CanImport*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CanImport
  nameWithType: XsdDataContractImporter.CanImport
- uid: System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: CodeCompileUnit
  nameWithType: XsdDataContractImporter.CodeCompileUnit
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetCodeTypeReference
  nameWithType: XsdDataContractImporter.GetCodeTypeReference
- uid: System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: GetKnownTypeReferences
  nameWithType: XsdDataContractImporter.GetKnownTypeReferences
- uid: System.Runtime.Serialization.XsdDataContractImporter.Import*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Import
  nameWithType: XsdDataContractImporter.Import
- uid: System.Runtime.Serialization.XsdDataContractImporter.Options*
  parent: System.Runtime.Serialization.XsdDataContractImporter
  isExternal: false
  name: Options
  nameWithType: XsdDataContractImporter.Options
