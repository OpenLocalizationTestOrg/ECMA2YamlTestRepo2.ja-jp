### YamlMime:ManagedReference
items:
- uid: System.Drawing.Drawing2D.HatchBrush
  id: HatchBrush
  children:
  - System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)
  - System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)
  - System.Drawing.Drawing2D.HatchBrush.BackgroundColor
  - System.Drawing.Drawing2D.HatchBrush.Clone
  - System.Drawing.Drawing2D.HatchBrush.ForegroundColor
  - System.Drawing.Drawing2D.HatchBrush.HatchStyle
  langs:
  - csharp
  name: HatchBrush
  nameWithType: HatchBrush
  fullName: System.Drawing.Drawing2D.HatchBrush
  type: Class
  summary: "陰影のスタイル、前景の色、背景色と四角形のブラシを定義します。 このクラスは継承できません。"
  remarks: "2 つの色からハッチ パターンが行われます: によって定義された&1; つ、 <xref:System.Drawing.Drawing2D.HatchBrush.BackgroundColor%2A>、背景とによって定義される背景の上、パターンを形成する、行のいずれかの値を格納する、<xref:System.Drawing.Drawing2D.HatchBrush.ForegroundColor%2A>プロパティ</xref:System.Drawing.Drawing2D.HatchBrush.ForegroundColor%2A></xref:System.Drawing.Drawing2D.HatchBrush.BackgroundColor%2A>。 <xref:System.Drawing.Drawing2D.HatchBrush.HatchStyle%2A>プロパティ定義パターンの種類、ブラシができ、任意の値を<xref:System.Drawing.Drawing2D.HatchStyle>列挙体です</xref:System.Drawing.Drawing2D.HatchStyle></xref:System.Drawing.Drawing2D.HatchBrush.HatchStyle%2A>。 50 以上の要素がある、<xref:System.Drawing.Drawing2D.HatchStyle>列挙体です</xref:System.Drawing.Drawing2D.HatchStyle>。       次の図は、水平方向の陰影パターンで塗りつぶさ楕円を描画します。       ![ハッチ パターン](~/add/media/hatch1.png &quot;ハッチ パターン&quot;)"
  example:
  - "The following example shows how to create the HatchBrush shown in the previous illustration.  \n  \n [!code-cs[System.Drawing.UsingABrush#41](~/add/codesnippet/csharp/t-system.drawing.drawing_2_1.cs)]\n [!code-vb[System.Drawing.UsingABrush#41](~/add/codesnippet/visualbasic/t-system.drawing.drawing_2_1.vb)]"
  syntax:
    content: 'public sealed class HatchBrush : System.Drawing.Brush'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Drawing.Brush
  implements: []
  inheritedMembers:
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)
  id: '#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: HatchBrush(HatchStyle,Color)
  nameWithType: HatchBrush.HatchBrush(HatchStyle,Color)
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchBrush(HatchStyle,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Drawing2D.HatchStyle&quot;></xref>列挙体に、前景色。"
  remarks: "背景色が黒に初期化されます。"
  syntax:
    content: public HatchBrush (System.Drawing.Drawing2D.HatchStyle hatchstyle, System.Drawing.Color foreColor);
    parameters:
    - id: hatchstyle
      type: System.Drawing.Drawing2D.HatchStyle
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.HatchStyle&quot;> </xref>これによって描画されたパターンを表す値<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
    - id: foreColor
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;> </xref>これによって描画される線の色を表す構造<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.HatchBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)
  id: '#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)'
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: HatchBrush(HatchStyle,Color,Color)
  nameWithType: HatchBrush.HatchBrush(HatchStyle,Color,Color)
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchBrush(HatchStyle,Color,Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;> </xref> 、指定したクラス<xref href=&quot;System.Drawing.Drawing2D.HatchStyle&quot;></xref>列挙型、前景色および背景色。"
  remarks: "次の図は、水平方向の陰影パターンで塗りつぶさ楕円を描画します。       ![ハッチ パターン](~/add/media/hatch1.png &quot;ハッチ パターン&quot;)"
  example:
  - "The following example shows how to use the  HatchBrush to create the <xref:System.Drawing.Drawing2D.HatchBrush> shown in the previous illustration.  \n  \n [!code-cs[System.Drawing.UsingABrush#41](~/add/codesnippet/csharp/7e22d67d-2066-4180-8fe1-_1.cs)]\n [!code-vb[System.Drawing.UsingABrush#41](~/add/codesnippet/visualbasic/7e22d67d-2066-4180-8fe1-_1.vb)]"
  syntax:
    content: public HatchBrush (System.Drawing.Drawing2D.HatchStyle hatchstyle, System.Drawing.Color foreColor, System.Drawing.Color backColor);
    parameters:
    - id: hatchstyle
      type: System.Drawing.Drawing2D.HatchStyle
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.HatchStyle&quot;> </xref>これによって描画されたパターンを表す値<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
    - id: foreColor
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;> </xref>これによって描画される線の色を表す構造<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
    - id: backColor
      type: System.Drawing.Color
      description: "<xref href=&quot;System.Drawing.Color&quot;> </xref>これによって描画される線の間のスペースの色を表す構造<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.HatchBrush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.BackgroundColor
  id: BackgroundColor
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: BackgroundColor
  nameWithType: HatchBrush.BackgroundColor
  fullName: System.Drawing.Drawing2D.HatchBrush.BackgroundColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これによって描画される陰影の線の間のスペースの色を取得<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Color BackgroundColor { get; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>これの背景色を表す構造<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.HatchBrush.BackgroundColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.Clone
  id: Clone
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: Clone()
  nameWithType: HatchBrush.Clone()
  fullName: System.Drawing.Drawing2D.HatchBrush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これの正確なコピーが作成<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>オブジェクト。"
  syntax:
    content: public override object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;> </xref>オブジェクトとしてキャスト、このメソッドを作成します。"
  overload: System.Drawing.Drawing2D.HatchBrush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.ForegroundColor
  id: ForegroundColor
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: ForegroundColor
  nameWithType: HatchBrush.ForegroundColor
  fullName: System.Drawing.Drawing2D.HatchBrush.ForegroundColor
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "このハッチの線の色を取得<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Color ForegroundColor { get; }
    return:
      type: System.Drawing.Color
      description: "A <xref href=&quot;System.Drawing.Color&quot;> </xref>これの前景色を表す構造<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.HatchBrush.ForegroundColor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Drawing2D.HatchBrush.HatchStyle
  id: HatchStyle
  parent: System.Drawing.Drawing2D.HatchBrush
  langs:
  - csharp
  name: HatchStyle
  nameWithType: HatchBrush.HatchStyle
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing.Drawing2D
  summary: "これの陰影のスタイルを取得<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>オブジェクト。"
  syntax:
    content: public System.Drawing.Drawing2D.HatchStyle HatchStyle { get; }
    return:
      type: System.Drawing.Drawing2D.HatchStyle
      description: "1 つ、 <xref href=&quot;System.Drawing.Drawing2D.HatchStyle&quot;> </xref>このパターンを表す値<xref href=&quot;System.Drawing.Drawing2D.HatchBrush&quot;></xref>です。"
  overload: System.Drawing.Drawing2D.HatchBrush.HatchStyle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Drawing.Brush
  isExternal: false
  name: System.Drawing.Brush
- uid: System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: HatchBrush(HatchStyle,Color)
  nameWithType: HatchBrush.HatchBrush(HatchStyle,Color)
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchBrush(HatchStyle,Color)
- uid: System.Drawing.Drawing2D.HatchStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: HatchStyle
  nameWithType: HatchStyle
  fullName: System.Drawing.Drawing2D.HatchStyle
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Drawing2D.HatchBrush.#ctor(System.Drawing.Drawing2D.HatchStyle,System.Drawing.Color,System.Drawing.Color)
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: HatchBrush(HatchStyle,Color,Color)
  nameWithType: HatchBrush.HatchBrush(HatchStyle,Color,Color)
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchBrush(HatchStyle,Color,Color)
- uid: System.Drawing.Drawing2D.HatchBrush.BackgroundColor
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: BackgroundColor
  nameWithType: HatchBrush.BackgroundColor
  fullName: System.Drawing.Drawing2D.HatchBrush.BackgroundColor
- uid: System.Drawing.Drawing2D.HatchBrush.Clone
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: Clone()
  nameWithType: HatchBrush.Clone()
  fullName: System.Drawing.Drawing2D.HatchBrush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Drawing2D.HatchBrush.ForegroundColor
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: ForegroundColor
  nameWithType: HatchBrush.ForegroundColor
  fullName: System.Drawing.Drawing2D.HatchBrush.ForegroundColor
- uid: System.Drawing.Drawing2D.HatchBrush.HatchStyle
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: HatchStyle
  nameWithType: HatchBrush.HatchStyle
  fullName: System.Drawing.Drawing2D.HatchBrush.HatchStyle
- uid: System.Drawing.Drawing2D.HatchBrush.#ctor*
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: HatchBrush
  nameWithType: HatchBrush.HatchBrush
- uid: System.Drawing.Drawing2D.HatchBrush.BackgroundColor*
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: BackgroundColor
  nameWithType: HatchBrush.BackgroundColor
- uid: System.Drawing.Drawing2D.HatchBrush.Clone*
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: Clone
  nameWithType: HatchBrush.Clone
- uid: System.Drawing.Drawing2D.HatchBrush.ForegroundColor*
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: ForegroundColor
  nameWithType: HatchBrush.ForegroundColor
- uid: System.Drawing.Drawing2D.HatchBrush.HatchStyle*
  parent: System.Drawing.Drawing2D.HatchBrush
  isExternal: false
  name: HatchStyle
  nameWithType: HatchBrush.HatchStyle
