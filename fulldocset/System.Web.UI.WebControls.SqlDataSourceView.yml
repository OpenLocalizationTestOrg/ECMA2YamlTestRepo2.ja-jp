### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSourceView
  id: SqlDataSourceView
  children:
  - System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  - System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  - System.Web.UI.WebControls.SqlDataSourceView.CanPage
  - System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.SqlDataSourceView.CanSort
  - System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  - System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Deleted
  - System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Deleting
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  - System.Web.UI.WebControls.SqlDataSourceView.Filtering
  - System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  - System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Inserted
  - System.Web.UI.WebControls.SqlDataSourceView.Inserting
  - System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  - System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  - System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  - System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  - System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Selected
  - System.Web.UI.WebControls.SqlDataSourceView.Selecting
  - System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  - System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  - System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSourceView.Updated
  - System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSourceView.Updating
  langs:
  - csharp
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
  type: Class
  summary: "では、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>を制御し、リレーショナル データベースに対して SQL データ操作を実行するデータ バインド コントロールのインターフェイスを提供します。"
  remarks: "SqlDataSourceView クラスものでは、主に、データ バインド コントロール、およびページ コードでプログラミング可能なオブジェクトとしてではなく使用されます。       ASP.NET データ ソース コントロールには、データ ソース ビュー オブジェクトによって表されるデータの&1; つまたは複数のリストが含まれています。 SqlDataSourceView クラスを拡張、<xref:System.Web.UI.DataSourceView>クラスの機能を定義、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを関連付けられているし、データ ソース コントロールの基本的なデータの機能を実装します</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Web.UI.DataSourceView>。 SqlDataSourceView クラス、データの機能を実装、<xref:System.Web.UI.WebControls.SqlDataSource>を制御するなど、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>、および<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作、並べ替え、フィルター処理、および状態で保持されている設定を管理します</xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A></xref:System.Web.UI.WebControls.SqlDataSource>。       ページの開発者によってに SqlDataSourceView オブジェクトが直接公開されませんが、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、そのプロパティの多くは、</xref:System.Web.UI.WebControls.SqlDataSource> 。 データ ソース ビューを実行する最も基本的な操作は、基になるデータベースを使用して、データの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>を取得するメソッド、<xref:System.Collections.IEnumerable>データ項目のコレクション</xref:System.Collections.IEnumerable></xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>。 SqlDataSourceView クラスでは、SQL クエリを使用してリレーショナル データベースからデータの取得を実装します。 SQL クエリはパラメーター化して、柔軟性とセキュリティを向上できます。 次のデータ取得方法、プロパティ、およびイベントを SqlDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元にコントロール: -<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベント -、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント、SqlDataSourceView オブジェクトは、SQL コマンドを使用してリレーショナル データベースにデータの更新をサポートしている</xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSource.Selecting></xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A></xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A></xref:System.Web.UI.WebControls.SqlDataSource>。 SQL コマンドは、柔軟性とセキュリティのパラメーター化することができます。 などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、自動的にその他のコントロールは、SqlDataSourceView を使用して更新プログラムを実行するように構成できます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 次の更新メソッド、プロパティ、およびイベントが、SqlDataSourceView によって実装されるによって直接公開されるその<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベント -、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>イベント、SqlDataSourceView リレーショナル データベースに新しい行のデータを挿入をサポートしています</xref:System.Web.UI.WebControls.SqlDataSource.Updated></xref:System.Web.UI.WebControls.SqlDataSource.Updating></xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A></xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A></xref:System.Web.UI.WebControls.SqlDataSource>。 SQL コマンドで指定されている、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>柔軟性とセキュリティのプロパティをパラメーター化することができます</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>。 などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、自動的にその他のコントロールは、SqlDataSourceView を使用して挿入を実行するように構成できます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 次挿入メソッド、プロパティ、およびイベントが、SqlDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>イベント -、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、SqlDataSourceView オブジェクトを使用して、リレーショナル データベースからデータの削除をサポートしています</xref:System.Web.UI.WebControls.SqlDataSource.Inserted></xref:System.Web.UI.WebControls.SqlDataSource.Inserting></xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A></xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A></xref:System.Web.UI.WebControls.SqlDataSource>。 指定されているが、SQL と同様に他のコマンドでは、コマンド、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>柔軟性とセキュリティのプロパティをパラメーター化することができます</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>。 などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、その他のコントロールできないときに自動的に、SqlDataSourceView を使用して削除を実行するように構成できます</xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 次は、メソッド、プロパティを削除し、イベントが、SqlDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元に制御: -<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>プロパティ -、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベント -、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント データの取得は、データの取得中にデータをフィルター処理に使用される句は、動的な場合より強力な</xref:System.Web.UI.WebControls.SqlDataSource.Deleted></xref:System.Web.UI.WebControls.SqlDataSource.Deleting></xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A></xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A></xref:System.Web.UI.WebControls.SqlDataSource>。 つまり、句が行われていない、柔軟で強力な SQL クエリで WHERE 句内の値が変更できますが、Web フォーム ページ上のコントロールに表示される値などの値にバインドされて静的 SQL クエリ。 SQL の再構築ではなくクエリを実行し、設定、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>使用するすべてのページ読み込みのプロパティを<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>データの取得を動的にフィルターを適用するプロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>。 これらのプロパティが、SqlDataSourceView によって実装され、によって直接公開されるその<xref:System.Web.UI.WebControls.SqlDataSource>データ バインド コントロールを他の呼び出し元の制御</xref:System.Web.UI.WebControls.SqlDataSource>。       取得したデータを並べ替えることができます、 <xref:System.Web.UI.WebControls.SqlDataSource>、ORDER BY 句、これにより、データを取得するときの順序を実行するデータベースを追加することでまたはが取得された後は、メモリ内のデータを順序付けることによって制御されます</xref:System.Web.UI.WebControls.SqlDataSource>。 設定して、SqlDataSourceView する並べ替え式を指定することができます、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>のプロパティ、<xref:System.Web.UI.DataSourceSelectArguments>に渡されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A></xref:System.Web.UI.DataSourceSelectArguments></xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>。 構文、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>の構文と同じプロパティが、<xref:System.Data.DataView.Sort%2A?displayProperty=fullName>プロパティ</xref:System.Data.DataView.Sort%2A?displayProperty=fullName></xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>。 データを取得するストアド プロシージャを使用する場合も行えます、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>具体的には、ストアド プロシージャの呼び出しの結果の並べ替えに使用されるパラメーターを指定するプロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>。       複数のユーザーは、同時にデータベースを変更したり、ときに同時実行の競合が発生する可能性があります。 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールがコントロールで、同時性、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=fullName></xref:System.Web.UI.WebControls.SqlDataSource>。 この機能は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=fullName>。       他の多くの Web サーバー コントロールと同様に、SqlDataSourceView を実装する、<xref:System.Web.UI.IStateManager>インターフェイスと使用法は、ページ要求間での状態を追跡するために状態を表示します</xref:System.Web.UI.IStateManager>。 実装、<xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>およびプロパティと<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>コントロールのビュー状態の追跡を有効にするメソッドが用意されています</xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: 'public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> 、指定された設定クラス<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールを現在のビューの所有者として。"
  remarks: "SqlDataSourceView コンス トラクターを呼び出す、<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>を指定したデータ ソース ビューの新しいインスタンスを返すメソッドを`name`パラメーター</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> 。 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールが&1; つのみ関連付けられる<xref:System.Web.UI.WebControls.SqlDataSourceView>、表示する、任意の時点であり、常にオブジェクト名`Table`<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、いない<xref:System.Web.UI.WebControls.SqlDataSourceView>.</xref:System.Web.UI.WebControls.SqlDataSourceView></xref:System.Web.UI.WebControls.SqlDataSource>によってこの名前付けの制限が課されるが、</xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSource> オーバーライドすることができます、<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>別の名前付け規則にビューをサポートするメソッド</xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>。       <xref:System.Web.HttpContext>によって渡されるオブジェクト、`context`パラメーターがなどのオブジェクトにアクセスするパラメーター、データ ソース ビューで使用されて、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A></xref:System.Web.HttpContext>。"
  syntax:
    content: public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.SqlDataSource
      description: "使用するデータ ソース コントロール、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>が関連付けられています。"
    - id: name
      type: System.String
      description: "データ ソース ビューの所有するデータ ソース コントロールのスコープ内の一意の名前。"
    - id: context
      type: System.Web.HttpContext
      description: "現在<xref href=&quot;System.Web.HttpContext&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または任意のパラメーターであるときに、データ取得操作が取り消されたかどうかを示す値を設定に含まれている、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>にコレクションが評価される<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> 。"
  remarks: "値、<xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティは viewstate に格納される</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>。"
  syntax:
    content: public bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、にパラメーターが含まれているときに、データ取得操作が取り消された場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*>にコレクションが評価される<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>。</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*> 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、削除操作をサポートします。"
  remarks: "CanDelete プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は削除操作が失敗します。"
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、挿入操作をサポートします。"
  remarks: "CanInsert プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は、挿入操作が失敗します。"
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、取得したデータのページングをサポートします。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトはページングをサポートしていません</xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>一連のデータだけでなく、データ行の合計数を取得するコントロールをサポートします。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトが行数の取得をサポートしていません</xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>すべての場合。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、取得したデータの並べ替え済みのビューをサポートします。"
  remarks: "CanSort プロパティから返される`true`場合は、現在<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode>値と<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティが設定します</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A></xref:System.Web.UI.WebControls.SqlDataSourceMode></xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>。"
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、並べ替えがサポートされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトに現在関連付けられている<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、更新操作をサポートします。"
  remarks: "CanUpdate プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>。 すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は削除操作が失敗します。"
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合は、操作がサポートされています。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値が、どのように<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;></xref>コントロールは、更新プログラムを実行して、操作の期間中に、データベースの変更を基になる行のデータを削除します。"
  remarks: "ConflictDetection プロパティに古い値と新しい値のパラメーターを適用するかどうかを決定する、`Update`メソッドです。 たとえば、次のコマンドはで指定された、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティから返される、 <xref:System.Data.DataSet>、列を持つオブジェクト`Name`と`Number`、ConflictDetection プロパティに設定し、 <xref:System.Web.UI.ConflictOptions>、パラメーターが作成された値の`Name`と`Number`更新操作の</xref:System.Web.UI.ConflictOptions></xref:System.Data.DataSet></xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>。 ConflictDetection プロパティ設定されている場合、 <xref:System.Web.UI.ConflictOptions>、パラメーターが作成された値の`Name`、 `Number`、 `original_Name`、および`original_Number`</xref:System.Web.UI.ConflictOptions>。 (元の値のパラメーターの正確な名前が異なります、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>次に、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトかどうかをメソッドをで指定された、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティが一致するパラメーター</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView> 。       同時実行制御は、データ ストア データを読み取るし、複数のクライアントがアクセスして、同じデータを操作するときに、ストアで変更する方法を制御するための手法です。 たとえば、1 つのクライアントは、データを読み取り、別のクライアントが、同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。 両方のユーザーは、データ更新、データ ストレージに送信すると、予期しない結果が発生する、両方のクライアントは、同じデータの異なる値を更新するためです。 これは、競合と見なされます。 ConflictDetection プロパティを設定、<xref:System.Web.UI.ConflictOptions>値、更新操作は競合を検出し、必要に応じてそれらの処理を元のデータ ソースに新旧の値を比較することができますし、</xref:System.Web.UI.ConflictOptions> 。       ビュー内の状態でプロパティは ConflictDetection の値が格納されています。"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "1 つ、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。 既定値は、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用して削除操作を実行、 <> </> *> SQL 文字列をパラメーターで指定されている、 <> </> *> コレクション、および指定した値<code> keys </code>と<code> oldValues </code>コレクション。"
  remarks: "削除メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>渡して、メソッド、`keys`と`oldValues`パラメーター</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> 。"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>のオブジェクトまたは行のキー値の<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*>を削除する操作</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*></xref:System.Collections.IDictionary>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>場合にのみ評価される行の値を格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*></xref:System.Collections.IDictionary>。"
    return:
      type: System.Int32
      description: "基になるデータベースから削除された行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、SQL 文字列、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>を使用して、基になるデータベースからデータを削除します。"
  remarks: "SQL 文字列の構文によって異なりますが、現在使用されている ADO.NET プロバイダーによって別のデータベースの製品では、異なる種類の SQL を使用するため、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。       SQL 文字列がパラメーター化されたクエリまたはコマンドの場合は、パラメーターのプレース ホルダーは、使用している ADO.NET プロバイダーにも依存します。 たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=fullName>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`&quot;@parameterName&quot;`</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=fullName>または<xref:System.Data.OleDb?displayProperty=fullName>、パラメーターのプレース ホルダーは`&quot;?&quot;`</xref:System.Data.OleDb?displayProperty=fullName></xref:System.Data.Odbc?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。       DeleteCommand には、基になるデータベースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。       ビュー内の状態でプロパティは、DeleteCommand の値が格納されています。"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked. Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_947_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_947_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "SQL の文字列を<xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;></xref>を使用してデータを削除します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうかのテキスト、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>プロパティは、SQL ステートメントまたはストアド プロシージャの名前</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>。"
  remarks: "ビュー内の状態でプロパティは DeleteCommandType の値が格納されています。"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。 既定値は、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除操作が完了したときに発生します。"
  remarks: "出力パラメーターの値を確認して、削除操作が完了した後に削除されたイベントを処理します。 出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>。"
  remarks: "場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティは、パラメーター化された SQL クエリを含む、deleteparameters の各コレクションには、いずれかが含まれています<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト</xref:System.Web.UI.WebControls.Parameter></xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>。       パラメーター名の影響を受ける、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティです具体的には、名前は、主キーを識別する場合など、キー指定されたを使用して、`DataKeyNames`プロパティ、または削除、データ バインド コントロールのシナリオを更新し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティがに設定されている、<xref:System.Web.UI.ConflictOptions>値と一連の`oldValues`は対応するデータのメソッドに渡されます。</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> 。 各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。       ADO.NET プロバイダーによって deleteparameters の各コレクションのパラメーターの順序が重要な可能性があります。 <xref:System.Data.OleDb?displayProperty=fullName>と<xref:System.Data.Odbc?displayProperty=fullName>プロバイダーがパラメーター化 SQL クエリで使用されるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます</xref:System.Data.Odbc?displayProperty=fullName></xref:System.Data.OleDb?displayProperty=fullName>。 <xref:System.Data.SqlClient?displayProperty=fullName>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリにプレース ホルダーで、パラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1005_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1005_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "削除操作の前に発生します。"
  remarks: "パラメーターの値を検証する、アプリケーションに固有の追加の初期化の操作を実行する、削除すると、イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、削除操作を実行します</xref:System.Web.UI.WebControls.SqlDataSource>。       基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。 そのため、キャンセルすることはできません、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作を呼び出すことによって直接、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.Data.Common.DbCommand></xref:System.Data.Common.DbCommand.Cancel%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>。 設定して、操作をキャンセルすることができます、ただし、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用して削除操作を実行、 <> </> *> SQL 文字列をパラメーターで指定されている、 <> </> *> コレクション、および指定した値<code> keys </code>と<code> oldValues </code>コレクション。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッドは、データベースからデータを削除する</xref:System.Web.UI.DataSourceView.ExecuteDelete%2A></xref:System.Web.UI.WebControls.SqlDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteDelete メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>。       含まれている値、`keys`コレクションが評価されに含まれる任意の値とマージされた、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクションです</xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>。 場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions>に含まれている値、値、`oldValues`コレクションの書式は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティでありもマージします</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A></xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>。       削除操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting></xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>。 パラメーターの値を確認して、削除する前に処理を実行するこのイベントを処理することができます。       削除操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>テキストおよび関連<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト</xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView>。 削除操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted></xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>。 任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。"
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>ExecuteDelete 操作を削除するオブジェクトまたは行のキー値の</xref:System.Collections.IDictionary>。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>場合にのみ評価される行の値を格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*>プロパティに設定されている、 <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref>値</xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*></xref:System.Collections.IDictionary>。"
    return:
      type: System.Int32
      description: "基になるデータベースから削除された行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The current user does not have the correct permissions to access to the database.  \n  \n \\- or -  \n  \n The instance of the control is an <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control and access is denied to the path specified for the <xref:System.Web.UI.WebControls.AccessDataSource.DataFile*> property."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete*> property is <xref uid=\"langword_csharp_false\" name=\"false\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using an instance of the <xref href=\"System.Web.UI.WebControls.AccessDataSource\"></xref> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "挿入操作を使用して、実行、 <> </> *> SQL 文字列をパラメーターで指定されている、 <> </> *> コレクション、および指定した値<code> values </code>コレクション。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>データベースにデータを挿入するメソッド</xref:System.Web.UI.DataSourceView.ExecuteInsert%2A></xref:System.Web.UI.WebControls.SqlDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteInsert メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>。       挿入操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting></xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>。 パラメーターの値を確認して、挿入する前に処理を実行するこのイベントを処理することができます。       挿入操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト</xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView>。 挿入が完了したら、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted></xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>。 任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>と共に使用される値の<> *> 挿入データベース操作を実行するプロパティ</xref:System.Collections.IDictionary>。クエリに関連付けられているパラメーターがない場合、または場合、 <> </> *> プロパティは、パラメーター化 SQL クエリではありません、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "基になるデータベースに挿入される行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>基になるデータ ソースとの接続を確立することはできません。"
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "現在のユーザーには、データベースにアクセスするために適切なアクセス許可がありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用して基になるデータベースからデータを取得、 <> </> *> 内にある SQL 文字列とパラメーター、 <> </> *> コレクション。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>クラス メソッドを実装、継承された ExecuteSelect データベースからデータを取得します</xref:System.Web.UI.WebControls.SqlDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteSelect メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>。       データの取得が行われる前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting></xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>。 パラメーターの値を確認して、データが取得される前に処理を実行するこのイベントを処理することができます。       操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>、し、基になるデータベースに対して実行します</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A></xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView>。 操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント</xref:System.Web.UI.WebControls.SqlDataSource.Selected></xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>。 戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。       ExecuteSelect メソッドを返します、<xref:System.Data.DataView>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode>、または<xref:System.Data.IDataReader>オブジェクトの場合、 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Web.UI.WebControls.SqlDataSourceMode>.</xref:System.Web.UI.WebControls.SqlDataSourceMode>に設定されている</xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A></xref:System.Data.IDataReader></xref:System.Web.UI.WebControls.SqlDataSourceMode></xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A></xref:System.Data.DataView> 閉じる、<xref:System.Data.IDataReader>オブジェクトのデータの読み取りが完了したら</xref:System.Data.IDataReader>。       場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode>キャッシュが有効になっていると、<xref:System.Web.UI.WebControls.SqlDataSourceView>からデータを取得し、データの処理中にキャッシュにデータを保存します</xref:System.Web.UI.WebControls.SqlDataSourceView></xref:System.Web.UI.WebControls.SqlDataSourceMode></xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>。 キャッシュが作成、破棄、または更新の組み合わせで指定されたキャッシュの動作に基づいて、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A></xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>。      > [!IMPORTANT] > Windows 認証ではクライアントの偽装を使用しているときに最初のユーザー データにアクセスするときにデータをキャッシュします。 別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。 データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。 予定の場合、データにアクセスする複数のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。       場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode>と<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>が指定されている、指定されたいずれかと評価される<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>データ取得操作中のデータの一覧にその結果のフィルターが適用されます</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A></xref:System.Web.UI.WebControls.SqlDataSourceMode></xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>。"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>オブジェクトの基本的なデータの取得を超えたデータ操作を要求するために使用します。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>データ行のリスト</xref:System.Collections.IEnumerable>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n Caching is enabled but the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode*> property of the data source is not set to <xref href=\"System.Web.UI.WebControls.SqlDataSourceMode\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*> property is set but <xref:System.Data.SqlClient.SqlCommand.CommandType*> is not set to <xref href=\"System.Data.CommandType\"></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The data source cannot create a database connection.  \n  \n \\- or -  \n  \n Caching is enabled but the internal cache and command types do not match."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新操作を使用して、実行、 <> </> *> SQL 文字列内にある任意のパラメーター、 <> </> *> コレクション、および指定した値<code> keys </code>、 <code> values </code>、および<code> oldValues </code>コレクション。"
  remarks: "<xref:System.Web.UI.WebControls.SqlDataSourceView>クラスは、データベース内のデータを更新する継承 ExecuteUpdate メソッドを実装します</xref:System.Web.UI.WebControls.SqlDataSourceView>。 ページの開発者およびデータ バインド コントロールの作成者直接呼び出さないでください ExecuteUpdate メソッドです。代わりに、公開される<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>。       含まれる値、`keys`と`values`コレクションが評価されに含まれる任意の値とマージされた、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクションです</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>。 場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている<xref:System.Web.UI.ConflictOptions>に含まれる値、`oldValues`コレクションの書式は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>もマージと</xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A></xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>。       更新操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Updating></xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>。 パラメーターの値を確認し、更新の前に処理を実行するには、このイベントを処理することができます。       操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>ビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト</xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A></xref:System.Data.Common.DbCommand></xref:System.Web.UI.WebControls.SqlDataSourceView>。 操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>イベント</xref:System.Web.UI.WebControls.SqlDataSourceView.Updated></xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>。 任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>で使用する主キーの<> *> プロパティをデータベースの更新操作を実行します</xref:System.Collections.IDictionary>。クエリに関連付けられているキーがない場合、または場合、 <> </> *> プロパティは、パラメーター化 SQL クエリではありません、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>で使用する値の<> *> プロパティをデータベースの更新操作を実行します</xref:System.Collections.IDictionary>。クエリに関連付けられているパラメーターがない場合、または場合、 <> </> *> がパラメーター化 SQL クエリで渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>、データベースの元の値を表す</xref:System.Collections.IDictionary>。 クエリに関連付けられているパラメーターがない場合、または場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>プロパティは、パラメーター化 SQL クエリではありません、渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> 。"
    return:
      type: System.Int32
      description: "基になるデータベースで更新された行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref href=\"System.Web.UI.WebControls.SqlDataSource\"></xref> cannot establish a connection with the underlying data source.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*> property is set to the <xref href=\"System.Web.UI.ConflictOptions\"></xref> value and no <code>oldValues</code> parameters are passed."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "現在のユーザーには、データベースにアクセスするために適切なアクセス許可がありません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定するフィルター式が適用されるときに、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>メソッドが呼び出されます</xref:System.Web.UI.WebControls.SqlDataSourceView.Select*>。"
  remarks: "FilterExpression プロパティに使用される構文は、書式文字列 – スタイル構文です。 FilterExpression プロパティでは、パラメーターを含めることができます。 パラメーターの型が文字列または文字の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符がある場合は、必要ではありません。       <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>コレクションに含まれているプレース ホルダーに評価されるパラメーターが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>。       <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、データのフィルター処理をサポートしている時にのみ`DataSet`モード</xref:System.Web.UI.WebControls.SqlDataSource>。       ビュー内の状態でプロパティは FilterExpression の値が格納されています。      > [!IMPORTANT] > クライアントから受信したフィルターのパラメーター値を検証する必要があります。 ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView>。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>、フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1180_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1180_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "使用してデータを取得するときに適用されるフィルター式を表す文字列、<xref:System.Web.UI.WebControls.SqlDataSource.Select*>メソッド</xref:System.Web.UI.WebControls.SqlDataSource.Select*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "FilterExpression プロパティが設定されたときに、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>では、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref>モード。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "フィルター操作の前に発生します。"
  remarks: "前に、のフィルター パラメーターの値の検証操作を実行する、フィルター イベントを処理、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトは、フィルター操作を実行します</xref:System.Web.UI.WebControls.SqlDataSourceView>。 取り消すことができます、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>を設定することによって、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>オブジェクトを`true`</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>。 場合にのみこのイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティが設定されています</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>。      > [!IMPORTANT] > クライアントから受信したフィルターのパラメーター値を検証する必要があります。 ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView>。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>、フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "内の任意のパラメーター プレース ホルダーに関連付けられているパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>文字列</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>。"
  remarks: "FilterParameters コレクション内のパラメーターで指定されているすべてのパラメーターに割り当てられた、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>。 指定されているパラメーターのプレース ホルダー、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>が順序で評価され、FilterParameters コレクション内のパラメーター オブジェクトに一致したときに、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドが呼び出されます</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A></xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>。      > [!IMPORTANT] > クライアントから受信したフィルターのパラメーター値を検証する必要があります。 ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A></xref:System.Data.DataView>。 使用している場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>、フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてプロパティ</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>。"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_165_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_165_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>で見つかったすべてのパラメーター プレース ホルダーに関連付けられているパラメーターのセットを含む、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "挿入操作を使用して、実行、 <> </> *> SQL 文字列をパラメーターで指定されている、 <> </> *> コレクション、および指定した値<code> values </code>コレクション。"
  remarks: "挿入メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>渡して、メソッド、`values`パラメーター</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> 。"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>のパラメーターの<> *> プロパティを使用してデータベースの挿入操作を実行します</xref:System.Collections.IDictionary>。クエリに関連付けられているパラメーターがない場合、または場合、 <> </> *> がパラメーター化 SQL クエリで渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    return:
      type: System.Int32
      description: "基になるデータベースに挿入される行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>基になるデータ ソースとの接続を確立することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、SQL 文字列、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトを使用して、基になるデータベースにデータを挿入します。"
  remarks: "SQL 文字列の構文によって異なりますが、現在使用されている ADO.NET プロバイダーによって別のデータベースの製品では、異なる種類の SQL を使用するため、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。 SQL 文字列がパラメーター化されたクエリまたはコマンドの場合は、パラメーターのプレース ホルダーは、使用している ADO.NET プロバイダーにも依存します。 たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=fullName>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`&quot;@parameterName&quot;`</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=fullName>または<xref:System.Data.OleDb?displayProperty=fullName>、パラメーターのプレース ホルダーは`&quot;?&quot;`</xref:System.Data.OleDb?displayProperty=fullName></xref:System.Data.Odbc?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。       InsertCommand プロパティには、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。       ビュー内の状態でプロパティは、InsertCommand の値が格納されています。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1299_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1299_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "SQL の文字列を<xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;></xref>を使用してデータを挿入します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうかのテキスト、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>プロパティは、SQL ステートメントまたはストアド プロシージャの名前</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>。"
  remarks: "ビュー内の状態でプロパティは InsertCommandType の値が格納されています。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_733_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_733_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。 値が、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "挿入操作が完了したときに発生します。"
  remarks: "挿入操作が完了した後は、出力パラメーターの値を調べるに挿入したイベントを処理します。 出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_39_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_39_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "挿入操作の前に発生します。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行する挿入イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、挿入操作を実行します</xref:System.Web.UI.WebControls.SqlDataSource>。       基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。 そのため、呼び出すことによって直接、データベースの操作を取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.Data.Common.DbCommand></xref:System.Data.Common.DbCommand.Cancel%2A>。 ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control. The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>。"
  remarks: "場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティは、パラメーター化された SQL クエリを含む、InsertParameters コレクションには、いずれかが含まれています<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト</xref:System.Web.UI.WebControls.Parameter></xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>。       ADO.NET プロバイダーによって InsertParameters コレクション内のパラメーターの順序が重要な可能性があります。 <xref:System.Data.OleDb?displayProperty=fullName>と<xref:System.Data.Odbc?displayProperty=fullName>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます</xref:System.Data.Odbc?displayProperty=fullName></xref:System.Data.OleDb?displayProperty=fullName>。 <xref:System.Data.SqlClient?displayProperty=fullName>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_530_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_530_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトのビューステートへ変更を保存します。"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ ソース ビューの以前に保存したビューステートを復元します。"
  remarks: "このメソッドは、主に使用、[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]インフラストラクチャ コードから直接使用するものではありません。  ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。       LoadViewState メソッドのビュー ステート情報の復元、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって保存された前回のページ要求からのオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッド</xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A></xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>状態を復元します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定に渡されるパラメーターの名前に適用する書式指定文字列、 <> </> *> または<> *> メソッドです。"
  remarks: "によって識別されるものなど OldValuesParameterFormatString 書式指定文字列が主キーのみに適用される、`DataKeyNames`プロパティ、または削除、データ バインド コントロールの更新シナリオと場所、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions>値と一連の`oldValues`は対応するデータのメソッドに渡されます</xref:System.Web.UI.ConflictOptions></xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>。 各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。 詳細については、 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>。</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=fullName>を参照してください。       ビュー内の状態でプロパティは OldValuesParameterFormatString の値が格納されています。"
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "いずれかの名前に適用される書式指定文字列を表す文字列<code> oldValues </code>に渡されるパラメーター、 <> </> *> または<> *> メソッドです。 既定値が必要な場合は、&quot;0&quot;} を使用しています。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleted&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールが削除操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnDeleted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Deleting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールが削除操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnDeleting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an OnDeleting handler is added to attempt to back up the database to disk before the delete is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/359c75a9-ee0e-4d55-bdc1-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/359c75a9-ee0e-4d55-bdc1-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Filtering&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールは、select 操作の結果をフィルター処理します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnFiltering メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserted&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールの挿入操作が完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnInserted メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the OnInserted event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/81209d4c-52a2-4147-b8d8-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/81209d4c-52a2-4147-b8d8-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Inserting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールが挿入操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnInserting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the OnInserting event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/ff2f58f9-1a94-4cce-ae83-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/ff2f58f9-1a94-4cce-ae83-_1.aspx)]"
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selected&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールがデータの取得操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnSelected メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Selecting&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールは、データ取得操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnSelecting メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させます、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updated&quot;> </xref>後のイベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールが、更新操作を完了します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnUpdated メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/9236d411-d01f-4dc8-b1eb-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/9236d411-d01f-4dc8-b1eb-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceStatusEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "発生させる、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView.Updating&quot;> </xref>前に、イベント、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>コントロールが更新操作を試行します。"
  remarks: "イベントを発生させるには、イベント ハンドラーがデリゲートからを呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。       OnUpdating メソッドでは、派生クラスでデリゲートを結び付けずに、イベントを処理することもできます。 これは、派生クラスでイベントを処理するための手法をお勧めします。"
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/29c8c16e-94d1-48d3-be46-_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/29c8c16e-94d1-48d3-be46-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
      description: "A <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandEventArgs&quot;> </xref>イベント データを格納します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  id: ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "パラメーター化 SQL クエリのパラメーター プレース ホルダーをプレフィックスとして使用する文字列を取得します。"
  remarks: "SQL クエリとコマンド パラメーター化できる、実行時に、クエリにバインドされている値のプレース ホルダーを格納したものにします。 設定されている ADO.NET プロバイダーによって、<xref:System.Web.UI.WebControls.SqlDataSource>によって識別される、コントロール、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ、パラメーターによって評価されますのエイリアスまたはそれらの順序によって、<xref:System.Web.UI.WebControls.ParameterCollection>オブジェクト</xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A></xref:System.Web.UI.WebControls.SqlDataSource>。       場合、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>が設定されていないかに設定されている、<xref:System.Data.SqlClient?displayProperty=fullName>パラメーターでは別名によって評価、およびにパラメーター プレフィックスを追加する ParameterPrefix プロパティが使用される、<xref:System.Web.UI.WebControls.Parameter.Name%2A>の各プロパティ<xref:System.Web.UI.WebControls.Parameter>内のオブジェクト、<xref:System.Web.UI.WebControls.ParameterCollection>データの取得やデータ操作の操作中に</xref:System.Web.UI.WebControls.ParameterCollection></xref:System.Web.UI.WebControls.Parameter></xref:System.Web.UI.WebControls.Parameter.Name%2A></xref:System.Data.SqlClient?displayProperty=fullName></xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。 場合、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティに設定されている、<xref:System.Data.OleDb?displayProperty=fullName>または<xref:System.Data.Odbc?displayProperty=fullName>、順序と、ParameterPrefix によって、パラメーターが評価および<xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティは無視されます</xref:System.Web.UI.WebControls.Parameter.Name%2A></xref:System.Data.Odbc?displayProperty=fullName></xref:System.Data.OleDb?displayProperty=fullName></xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。       拡張する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView>クラス以外の場合、プレフィックスを指定する ParameterPrefix プロパティをオーバーライドすることができます、`&quot;@&quot;`文字列、必要な場合</xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: protected virtual string ParameterPrefix { get; }
    return:
      type: System.String
      description: "&quot;@&quot;文字列。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  id: RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "に対して要求された機能を比較して、 <> </> *> ビューをサポートし、これらの操作によって呼び出される、 <> </> *> メソッドです。"
  remarks: "RaiseUnsupportedCapabilityError メソッドは個々 のデータ バインドされたコントロールによって要求されている機能によって表されるを確認するために使用されて、データ ソース ビューで、<xref:System.Web.UI.DataSourceSelectArguments>に渡されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッド、およびそれらのデータ ソース ビューでサポートされている機能を提供する機能を比較する</xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A></xref:System.Web.UI.DataSourceSelectArguments>。 によって表されている機能のため、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトし、データ ソース ビューでサポートされていない、<xref:System.NotSupportedException>例外がスローされます</xref:System.NotSupportedException></xref:System.Web.UI.DataSourceSelectArguments>。"
  syntax:
    content: protected override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);
    parameters:
    - id: capability
      type: System.Web.UI.DataSourceCapabilities
      description: "1 つ、 <xref href=&quot;System.Web.UI.DataSourceCapabilities&quot;> </xref>ビューをサポートする機能が比較される値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "データ ソースを選択したいない<code> capability </code>有効にします。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "ビュー ステートに変更を保存、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>コントロール、ページがサーバーにポストされた時間以降。"
  remarks: "SaveViewState メソッドは、主にコントロールの開発者によって使用されます。       ビュー ステートが、サーバー コントロールのプロパティの値の累積します。 これらの値は<xref:System.Web.UI.Control.ViewState%2A>、<xref:System.Web.UI.StateBag>クラス</xref:System.Web.UI.StateBag>のインスタンスは、サーバー コントロールのプロパティ</xref:System.Web.UI.Control.ViewState%2A>に自動的に配置します。 <xref:System.Web.UI.Control.ViewState%2A>保存状態のサーバー コントロールのライフ サイクルの段階後に、サーバー コントロールは、文字列オブジェクトに永続化し、の値します</xref:System.Web.UI.Control.ViewState%2A>。       HTML に格納されている変数として、保存状態の段階のサーバー コントロールのライフ サイクルの後に永続化された文字列オブジェクトがクライアントに返されるビューステートを保存すると、`Hidden`要素。 SaveViewState メソッドをオーバーライドし、効率を向上できますとカスタム サーバー コントロールを作成するときに、`ViewState`サーバー コントロールのプロパティです。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "変更を格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> 、それ以外の状態を表示<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトに関連付けられているビュー ステートがない場合は、します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "使用して基になるデータベースからデータを取得、 <> </> *> 内にある SQL 文字列とパラメーター、 <> </> *> コレクション。"
  remarks: "Select メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>渡して、メソッド、`selectArgs`パラメーター</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 。       <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>メソッドを返します、<xref:System.Data.DataView>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティがに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode>または値を返します、<xref:System.Data.IDataReader>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティがに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode>値。</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 。 閉じる、<xref:System.Data.IDataReader>オブジェクトのデータの読み取りが完了したら</xref:System.Data.IDataReader>。"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "A <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref>基本的なデータの取得を超えたデータの処理を要求するために使用します。"
    return:
      type: System.Collections.IEnumerable
      description: "<xref:System.Collections.IEnumerable>データ行のリスト</xref:System.Collections.IEnumerable>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code> selectArgs </code>渡されるデータ ソースはページングまたは取得したデータの並び替えを有効にするデータの取得中にいくつか追加の作業を実行する必要がありますが、データ ソース コントロールが要求された機能をサポートしていないことを選択するメソッドを指定します。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>基になるデータ ソースとの接続を確立することはできません。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、SQL 文字列、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトを使用して、基になるデータベースからデータを取得します。"
  remarks: "SQL 文字列の構文によって異なりますが、現在使用されている ADO.NET プロバイダーによって別のデータベースの製品では、異なる種類の SQL を使用するため、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。 SQL 文字列がパラメーター化されたクエリまたはコマンドの場合は、パラメーターのプレース ホルダーは、使用している ADO.NET プロバイダーにも依存します。 たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=fullName>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`&quot;@parameterName&quot;`</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=fullName>または<xref:System.Data.OleDb?displayProperty=fullName>、パラメーターのプレース ホルダーは`&quot;?&quot;`</xref:System.Data.OleDb?displayProperty=fullName></xref:System.Data.Odbc?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。       SelectCommand プロパティには、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。      > [!IMPORTANT] > SelectCommand プロパティに SQL ステートメントよりも、ストアド プロシージャを使用する方が安全です。       ビュー内の状態でプロパティは、SelectCommand の値が格納されています。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_1.aspx)]  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_519_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_519_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "SQL の文字列を<xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;></xref>を使用してデータを取得します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうかのテキスト、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>プロパティは、SQL クエリまたはストアド プロシージャの名前</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>。"
  remarks: "ビュー内の状態でプロパティは SelectCommandType の値が格納されています。"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_934_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_934_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。 既定値は、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データ取得操作が完了したときに発生します。"
  remarks: "データ取得操作が完了した後、出力パラメーターの値を調べ、選択したイベントを処理します。 出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "データの取得操作の前に発生します。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行するを選択するとイベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータの取得操作を実行します</xref:System.Web.UI.WebControls.SqlDataSource>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>。"
  remarks: "場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれていますが selectparameters のどのコレクションには、いずれかが含まれている<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 。       ADO.NET プロバイダーによって SelectParameters コレクション内のパラメーターの順序が重要な可能性があります。 <xref:System.Data.OleDb?displayProperty=fullName>と<xref:System.Data.Odbc?displayProperty=fullName>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます</xref:System.Data.Odbc?displayProperty=fullName></xref:System.Data.OleDb?displayProperty=fullName>。 <xref:System.Data.SqlClient?displayProperty=fullName>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection. In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_723_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_723_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得またはストアド プロシージャを使用してデータの取得が実行されるときに取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を設定します。"
  remarks: "SortParameterName プロパティが評価されるだけで、SQL コマンドに含まれる、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティは、ストアド プロシージャの名前</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>。 この場合、SortParameterName プロパティが設定されている場合は、ストアド プロシージャの結果の並べ替えに使用されるパラメーターの名前を表します。       場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>プロパティが設定されて、先頭 SortParameterName プロパティに追加します</xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>。       ビュー内の状態で、SortParameterName プロパティの値が格納されています。"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "ストアド プロシージャを使用してデータの取得が実行されるときに取得したデータの並べ替えに使用されるストアド プロシージャのパラメーターの名前。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.IStateManager.IsTrackingViewState*>。</xref:System.Web.UI.IStateManager.IsTrackingViewState*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、その状態を保存するデータ ソース ビューがマークされている場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 &lt;xref:System.Web.UI.IStateManager.LoadViewState%28System.Object%29?displayProperty=fullName&gt;です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "表すオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>状態を復元します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明は、次を参照してください。 <xref href=&quot;System.Web.UI.IStateManager.SaveViewState&quot;></xref>です。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "変更を格納しているオブジェクト、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> 、それ以外の状態を表示<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>オブジェクトに関連付けられているビュー ステートがない場合は、します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "このメンバーの説明、 <xref:System.Web.UI.IStateManager.TrackViewState*>。</xref:System.Web.UI.IStateManager.TrackViewState*>を参照してください。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイス</xref:System.Web.UI.IStateManager></xref:System.Web.UI.WebControls.SqlDataSourceView>。"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "により、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>に変更を保存できるように、ビュー ステートへの変更を追跡するオブジェクト、 <xref href=&quot;System.Web.UI.StateBag&quot;> </xref>制御と同じページの間で永続化された要求オブジェクト。"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新操作を使用して、実行、 <> </> *> SQL 文字列内にある任意のパラメーター、 <> </> *> コレクション、および指定した値<code> keys </code>、 <code> values </code>、および<code> oldValues </code>コレクション。"
  remarks: "更新メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>渡して、メソッド、 `keys`、 `values`、および`oldValues`パラメーター</xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> 。 詳細については、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>。</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=fullName>を参照してください。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/0d500e90-6fd2-4112-8e56-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/0d500e90-6fd2-4112-8e56-_1.aspx)]"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>で使用する主キーの<> *> プロパティをデータベースの更新操作を実行します</xref:System.Collections.IDictionary>。クエリに関連付けられているキーがない場合、または場合、 <> </> *> がパラメーター化 SQL クエリで渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: values
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>で使用する値の<> *> プロパティをデータベースの更新操作を実行します</xref:System.Collections.IDictionary>。クエリに関連付けられているパラメーターがない場合、または場合、 <> </> *> がパラメーター化 SQL クエリで渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
    - id: oldValues
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>、データベースの元の値を表す</xref:System.Collections.IDictionary>。 クエリに関連付けられているパラメーターがない場合、または場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>がパラメーター化 SQL クエリで渡す<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*> 。"
    return:
      type: System.Int32
      description: "基になるデータベースで更新された行の数を表す値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>基になるデータ ソースとの接続を確立することはできません。"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*>プロパティは<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*> 。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定、SQL 文字列、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref>オブジェクトを使用して基になるデータベース内のデータを更新します。"
  remarks: "SQL 文字列の構文によって異なりますが、現在使用されている ADO.NET プロバイダーによって別のデータベースの製品では、異なる種類の SQL を使用するため、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>。 SQL 文字列がパラメーター化されたクエリまたはコマンドの場合は、パラメーターのプレース ホルダーは、使用している ADO.NET プロバイダーにも依存します。 たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=fullName>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`&quot;@parameterName&quot;`</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=fullName>または<xref:System.Data.OleDb?displayProperty=fullName>、パラメーターのプレース ホルダーは`&quot;?&quot;`</xref:System.Data.OleDb?displayProperty=fullName></xref:System.Data.Odbc?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。       UpdateCommand プロパティには、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。       ビュー内の状態でプロパティは、UpdateCommand の値が格納されています。"
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected. This example also includes some post-processing—after a record is updated, an e-mail message notification is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1335_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1335_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "SQL の文字列を<xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;></xref>を使用してデータを更新します。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "取得または設定を示す値かどうかのテキスト、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>プロパティは、SQL ステートメントまたはストアド プロシージャの名前</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>。"
  remarks: "ビュー内の状態でプロパティは UpdateCommandType の値が格納されています。"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "1 つ、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。 既定値は、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "選択した値は、のいずれかではありません、 <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref>値。"
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新操作が完了したときに発生します。"
  remarks: "出力パラメーターの値を確認して、更新操作が完了した後に更新されたイベントを処理します。 出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an e-mail message notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_139_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_139_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "によって使用されているパラメーターを含むパラメーターのコレクションを取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>。"
  remarks: "場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティは、パラメーター化された SQL クエリを含む、UpdateParameters コレクションには、いずれかが含まれています<xref:System.Web.UI.WebControls.Parameter>SQL 文字列内にあるパラメーターのプレース ホルダーに対応するオブジェクト</xref:System.Web.UI.WebControls.Parameter></xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>。       パラメーター名の影響を受ける、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティです具体的には、名前は、主キーを識別する場合など、キー指定されたを使用して、`DataKeyNames`プロパティ、またはで削除と更新シナリオ場所、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティがに設定されている、<xref:System.Web.UI.ConflictOptions>値、および一連の`oldValues`は対応するデータのメソッドに渡されます。</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> 。 各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。       ADO.NET プロバイダーによって UpdateParameters コレクション内のパラメーターの順序が重要な可能性があります。 <xref:System.Data.OleDb?displayProperty=fullName>と<xref:System.Data.Odbc?displayProperty=fullName>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます</xref:System.Data.Odbc?displayProperty=fullName></xref:System.Data.OleDb?displayProperty=fullName>。 <xref:System.Data.SqlClient?displayProperty=fullName>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます</xref:System.Web.UI.WebControls.SqlDataSource></xref:System.Data.SqlClient?displayProperty=fullName>。 パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](~/add/includes/ajax-current-ext-md.md)です。"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1249_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1249_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "A <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref>によって使用されるパラメーターを格納している、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>プロパティ</xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*>。"
  overload: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "更新操作の前に発生します。"
  remarks: "そのため、パラメーターの値を検証する、アプリケーション固有の追加の初期化の操作を実行する、更新イベントを処理またはパラメーターを変更する前に値、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、更新操作を実行します</xref:System.Web.UI.WebControls.SqlDataSource>。       基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。 そのため、操作を呼び出すことによって直接取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.Data.Common.DbCommand></xref:System.Data.Common.DbCommand.Cancel%2A>。 ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs></xref:System.ComponentModel.CancelEventArgs.Cancel%2A>。       イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。"
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView(SqlDataSource,String,HttpContext)
  nameWithType: SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SqlDataSourceView(SqlDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.SqlDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Deleting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: SqlDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.Filtering
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: SqlDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserted
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.Inserting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Inserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventArgs
  nameWithType: SqlDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventArgs
  nameWithType: SqlDataSourceCommandEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering(SqlDataSourceFilteringEventArgs)
  nameWithType: SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(SqlDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventArgs
  nameWithType: SqlDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserted(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnInserting(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelected(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting(SqlDataSourceSelectingEventArgs)
  nameWithType: SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(SqlDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventArgs
  nameWithType: SqlDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated(SqlDataSourceStatusEventArgs)
  nameWithType: SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(SqlDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating(SqlDataSourceCommandEventArgs)
  nameWithType: SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(SqlDataSourceCommandEventArgs)
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
  fullName: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(DataSourceCapabilities)
- uid: System.Web.UI.DataSourceCapabilities
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCapabilities
  nameWithType: DataSourceCapabilities
  fullName: System.Web.UI.DataSourceCapabilities
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selected
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selected
  nameWithType: SqlDataSourceView.Selected
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selected
- uid: System.Web.UI.WebControls.SqlDataSourceView.Selecting
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updated
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updated
  nameWithType: SqlDataSourceView.Updated
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updated
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Updating
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Updating
  nameWithType: SqlDataSourceView.Updating
  fullName: System.Web.UI.WebControls.SqlDataSourceView.Updating
- uid: System.Web.UI.WebControls.SqlDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSourceView.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: SqlDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: SqlDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: SqlDataSourceView.CanPage
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: SqlDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: SqlDataSourceView.CanSort
- uid: System.Web.UI.WebControls.SqlDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: SqlDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSourceView.Delete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Delete
  nameWithType: SqlDataSourceView.Delete
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSourceView.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSourceView.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: SqlDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: SqlDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: SqlDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: SqlDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.Insert*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Insert
  nameWithType: SqlDataSourceView.Insert
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSourceView.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSourceView.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: SqlDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: SqlDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: SqlDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: SqlDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: SqlDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: SqlDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: SqlDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: SqlDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: SqlDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.SqlDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: SqlDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: ParameterPrefix
  nameWithType: SqlDataSourceView.ParameterPrefix
- uid: System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: RaiseUnsupportedCapabilityError
  nameWithType: SqlDataSourceView.RaiseUnsupportedCapabilityError
- uid: System.Web.UI.WebControls.SqlDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Select*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Select
  nameWithType: SqlDataSourceView.Select
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSourceView.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSourceView.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: SqlDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSourceView.Update*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: Update
  nameWithType: SqlDataSourceView.Update
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSourceView.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSourceView.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSourceView.UpdateParameters
