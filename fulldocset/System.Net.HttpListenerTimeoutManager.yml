### YamlMime:ManagedReference
items:
- uid: System.Net.HttpListenerTimeoutManager
  id: HttpListenerTimeoutManager
  children:
  - System.Net.HttpListenerTimeoutManager.DrainEntityBody
  - System.Net.HttpListenerTimeoutManager.EntityBody
  - System.Net.HttpListenerTimeoutManager.HeaderWait
  - System.Net.HttpListenerTimeoutManager.IdleConnection
  - System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  - System.Net.HttpListenerTimeoutManager.RequestQueue
  langs:
  - csharp
  name: HttpListenerTimeoutManager
  nameWithType: HttpListenerTimeoutManager
  fullName: System.Net.HttpListenerTimeoutManager
  type: Class
  summary: "使用するタイムアウト マネージャー、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>オブジェクト。"
  remarks: "タイムアウト マネージャーの接続タイムアウトの制限を定義する、<xref:System.Net.HttpListener>インスタンス</xref:System.Net.HttpListener>。"
  syntax:
    content: public class HttpListenerTimeoutManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  id: DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または設定時間を秒単位の許可、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>をキープ アライブ接続でのエンティティ ボディをドレインします。"
  remarks: "このプロパティの既定値は、2 分です。       アプリは、要求に対する応答を送信し、要求する前にエンティティ ボディが完全に到着した後、Keep-alive の接続で、<xref:System.Net.HttpListener>パイプライン処理クライアントからの要求をドレインして、可能性のある別に到達するエンティティ本体の残りの部分を開始します</xref:System.Net.HttpListener>。 他のエンティティ ボディをドレインする時間が許可されている時間を超えた場合、接続がタイムアウトしました。"
  syntax:
    content: public TimeSpan DrainEntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>。</xref:System.TimeSpan>を返します。       時間 (秒)、許可、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>をキープ アライブ接続でのエンティティ ボディをドレインします。"
  overload: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  id: EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または到着する要求エンティティ本体のできる秒で、時間を設定します。"
  remarks: "このプロパティの既定値は、2 分です。       <xref:System.Net.HttpListener>要求エンティティ本体が含まれる場合、このタイマーをオンにします</xref:System.Net.HttpListener>。 タイマーの期限が構成されている値に初期設定されます。 ときに、<xref:System.Net.HttpListener>受信追加のデータがないか、要求で、接続に別の範囲を提供するタイマーをリセットします</xref:System.Net.HttpListener>。"
  syntax:
    content: public TimeSpan EntityBody { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>。</xref:System.TimeSpan>を返します。       時間を秒単位では、到着する要求エンティティ本体を使用できます。"
  overload: System.Net.HttpListenerTimeoutManager.EntityBody*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  id: HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または設定時間を秒単位の許可、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>要求ヘッダーを解析します。"
  remarks: "このプロパティの既定値は、2 分です。       このタイムアウトは<xref:System.Net.HttpListener>。</xref:System.Net.HttpListener>接続での最初の要求をルーティングした後にのみ適用されます。       システムには、要求キューまたはヘッダーが解析されるまでに、要求が関連付けられている URL グループを特定できません。 したがって、<xref:System.Net.HttpListener>接続での最初の要求の既定 HeaderWait タイマーを強制します</xref:System.Net.HttpListener>。 キープ アライブ接続での後続の要求では、このプロパティで設定された値を使用します。"
  syntax:
    content: public TimeSpan HeaderWait { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>。</xref:System.TimeSpan>を返します。       時間 (秒)、許可、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>要求ヘッダーを解析します。"
  overload: System.Net.HttpListenerTimeoutManager.HeaderWait*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  id: IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得またはアイドル状態の接続を許可する秒単位で、時間を設定します。"
  remarks: "このプロパティの既定値は、2 分です。       このタイムアウトは<xref:System.Net.HttpListener>。</xref:System.Net.HttpListener>接続での最初の要求をルーティングした後にのみ適用されます。       システムには、要求キューまたはヘッダーが解析されるまでに、要求が関連付けられている URL グループを特定できません。 したがって、<xref:System.Net.HttpListener>接続での最初の要求の既定 IdleConnection タイマーを強制します</xref:System.Net.HttpListener>。 キープ アライブ接続での後続の要求では、このプロパティで設定された値を使用します。"
  syntax:
    content: public TimeSpan IdleConnection { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>。</xref:System.TimeSpan>を返します。       時間を秒単位では、アイドル状態の接続を使用できます。"
  overload: System.Net.HttpListenerTimeoutManager.IdleConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  id: MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または最小の送信速度をバイト数-1 秒あたりの応答に設定します。"
  remarks: "既定の応答の送信比率は、150 バイト/秒です。       このタイマーを無効にするには、MAXULONG に MinSendBytesPerSecond を設定します。"
  syntax:
    content: public long MinSendBytesPerSecond { get; set; }
    return:
      type: System.Int64
      description: "<xref:System.Int64>。</xref:System.Int64>を返します。       最小値は、バイト数-1 秒あたりの応答ので、レートを送信します。"
  overload: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  exceptions: []
  platform:
  - net462
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  id: RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  langs:
  - csharp
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
  type: Property
  assemblies:
  - System
  namespace: System.Net
  summary: "取得または設定 (秒単位) の前に、要求キュー内に存続する要求に対して許可、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>がそれを取得します。"
  remarks: "このプロパティの既定値は、2 分です。"
  syntax:
    content: public TimeSpan RequestQueue { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>。</xref:System.TimeSpan>を返します。       要求のままにする前に、要求キュー内に許可される時間を秒単位で、 <xref href=&quot;System.Net.HttpListener&quot;> </xref>がそれを取得します。"
  overload: System.Net.HttpListenerTimeoutManager.RequestQueue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
  fullName: System.Net.HttpListenerTimeoutManager.DrainEntityBody
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.HttpListenerTimeoutManager.EntityBody
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
  fullName: System.Net.HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
  fullName: System.Net.HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
  fullName: System.Net.HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
  fullName: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
  fullName: System.Net.HttpListenerTimeoutManager.RequestQueue
- uid: System.Net.HttpListenerTimeoutManager.DrainEntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: DrainEntityBody
  nameWithType: HttpListenerTimeoutManager.DrainEntityBody
- uid: System.Net.HttpListenerTimeoutManager.EntityBody*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: EntityBody
  nameWithType: HttpListenerTimeoutManager.EntityBody
- uid: System.Net.HttpListenerTimeoutManager.HeaderWait*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: HeaderWait
  nameWithType: HttpListenerTimeoutManager.HeaderWait
- uid: System.Net.HttpListenerTimeoutManager.IdleConnection*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: IdleConnection
  nameWithType: HttpListenerTimeoutManager.IdleConnection
- uid: System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: MinSendBytesPerSecond
  nameWithType: HttpListenerTimeoutManager.MinSendBytesPerSecond
- uid: System.Net.HttpListenerTimeoutManager.RequestQueue*
  parent: System.Net.HttpListenerTimeoutManager
  isExternal: false
  name: RequestQueue
  nameWithType: HttpListenerTimeoutManager.RequestQueue
