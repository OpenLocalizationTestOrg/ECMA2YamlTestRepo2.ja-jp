### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  id: ClaimTypeRequirement
  children:
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  - System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  langs:
  - csharp
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  type: Class
  summary: "フェデレーション資格情報に出現する見込み必須およびオプションのクレームの種類を指定します。"
  remarks: "フェデレーション シナリオでは、サービスは、受信資格情報について要件を記述します。 たとえば、受信の資格情報は、一連のクレームの種類を処理する必要があります。 この要件は、セキュリティ ポリシーで示されています。 クライアントがセキュリティ トークン サービスからセキュリティ トークンを要求する場合 (たとえば、 [!INCLUDE[infocard](~/add/includes/infocard-md.md)])、これにより、要件をトークン要求セキュリティ トークン サービスは、要件どおりのセキュリティ トークンを発行できます。"
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/t-system.servicemodel.se_14_1.cs)]  \n  \n The following config file is used with the preceding code.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public class ClaimTypeRequirement
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref>必須のクレームの指定した型のクラスです。"
  remarks: "<xref:System.IdentityModel.Claims.ClaimTypes>。</xref:System.IdentityModel.Claims.ClaimTypes>に定義済みのクレームの種類があります。"
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/82f0f677-aea6-40fd-b2fa-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType);
    parameters:
    - id: claimType
      type: System.String
      description: "要求の種類。"
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.Tokens.ClaimTypeRequirement&quot;> </xref>指定した種類のクレームのクラスです。"
  remarks: ''
  example:
  - "The following code adds two claim type requirements to a security binding.  \n  \n [!code-cs[S_UEClaimTypeRequirement#1](~/add/codesnippet/csharp/5f45f1b5-1008-4244-927f-_1.cs)]"
  syntax:
    content: public ClaimTypeRequirement (string claimType, bool isOptional);
    parameters:
    - id: claimType
      type: System.String
      description: "要求の種類。"
    - id: isOptional
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>クレームは必須です。 それ以外の場合、は省略可能です。"
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  id: ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "コンス トラクターで指定された要求の種類を取得します。"
  remarks: "このプロパティは、クレームの種類を定義する URI です。  たとえば、Web サイトから製品を購入するユーザーが提示する有効なクレジット_カード番号のための十分なクレジットの上限であります。 要求の種類は、クレジット_カードの URI になります。"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_5_1.cs)]"
  syntax:
    content: public string ClaimType { get; }
    return:
      type: System.String
      description: "要求の種類。"
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  id: IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  langs:
  - csharp
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security.Tokens
  summary: "クレームが省略可能かどうかを示す値を取得します。"
  remarks: "このプロパティを使用する方法の例は、サービスがいくつかの情報を求めるプロンプトが必要のないシナリオです。 たとえば、名、姓、名、およびアドレスを入力する必要しますが、電話番号は省略可能です。"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[S_UEClaimTypeRequirement#2](~/add/codesnippet/csharp/p-system.servicemodel.se_17_1.cs)]"
  syntax:
    content: public bool IsOptional { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>クラスのこのインスタンスが省略可能なクレーム; 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>必須のクレームを指定する場合。"
  overload: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement(String,Boolean)
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimTypeRequirement(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
  fullName: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimTypeRequirement
  nameWithType: ClaimTypeRequirement.ClaimTypeRequirement
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: ClaimType
  nameWithType: ClaimTypeRequirement.ClaimType
- uid: System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional*
  parent: System.ServiceModel.Security.Tokens.ClaimTypeRequirement
  isExternal: false
  name: IsOptional
  nameWithType: ClaimTypeRequirement.IsOptional
