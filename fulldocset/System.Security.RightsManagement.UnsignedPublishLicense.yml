### YamlMime:ManagedReference
items:
- uid: System.Security.RightsManagement.UnsignedPublishLicense
  id: UnsignedPublishLicense
  children:
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  - System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  - System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  - System.Security.RightsManagement.UnsignedPublishLicense.Grants
  - System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  - System.Security.RightsManagement.UnsignedPublishLicense.Owner
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  - System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  - System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  - System.Security.RightsManagement.UnsignedPublishLicense.ToString
  langs:
  - csharp
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense
  fullName: System.Security.RightsManagement.UnsignedPublishLicense
  type: Class
  summary: "署名されていない権限管理<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>または unsigned <xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;> </xref>テンプレート。"
  remarks: "<xref:System.Security.RightsManagement.PublishLicense>権限、ユーザー、およびその他のセキュリティに関連する情報に関するセキュリティ データを定義します。</xref:System.Security.RightsManagement.PublishLicense>  ライセンスは、特定のコンピューター上の特定のユーザーが指定された権限が管理されたコンテンツを使用する方法を定義します。       発行プロセスで、UnsignedPublishLicense 権利の情報を定義するドキュメントの作成者から始まります。  次に、オーサリングを呼び出して、UnsignedPublishLicense します。<xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>符号付き<xref:System.Security.RightsManagement.PublishLicense>。</xref:System.Security.RightsManagement.PublishLicense>を作成する方法</xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A>  署名<xref:System.Security.RightsManagement.PublishLicense><xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>を要求するエンドユーザー <xref:System.Security.RightsManagement.UseLicense>。</xref:System.Security.RightsManagement.UseLicense></xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A>呼び出すことができるエンドユーザー クライアント アプリケーションに提供できるし、</xref:System.Security.RightsManagement.PublishLicense>  返された<xref:System.Security.RightsManagement.UseLicense>し、により、ユーザーに与えられている権限を行使するクライアント アプリケーション</xref:System.Security.RightsManagement.UseLicense>。       ドキュメントの作成者は、署名を作成する UnsignedPublishLicense クラスをいずれも使用できます<xref:System.Security.RightsManagement.PublishLicense>、または、ビルドし、シリアル化、<xref:System.Security.RightsManagement.PublishLicense>テンプレート</xref:System.Security.RightsManagement.PublishLicense></xref:System.Security.RightsManagement.PublishLicense>。       その他の同様<xref:System.Security.RightsManagement>型、UnsignedPublishLicense は完全信頼アプリケーションでは使用できません</xref:System.Security.RightsManagement>。      <a name=&quot;xamlTextUsage_UnsignedPublishLicense&quot;></a>## この型は、通常では使用されない XAML テキスト使用[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class UnsignedPublishLicense
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  id: '#ctor'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>クラスです。"
  remarks: "<xref:System.Security.RightsManagement.UnsignedPublishLicense>空で、署名されていない発行ライセンスを作成します。</xref:System.Security.RightsManagement.UnsignedPublishLicense>"
  syntax:
    content: public UnsignedPublishLicense ();
    parameters: []
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;> </xref>から、指定したクラス[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]公開ライセンス テンプレート。"
  remarks: "`publishLicenseTemplate` [!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)] `<RANGETIME>`または`<INTERVALTIME>`要素は無視されるときに、 <xref:System.Security.RightsManagement.UnsignedPublishLicense>UnsignedPublishLicense(String) コンス トラクターによって作成された</xref:System.Security.RightsManagement.UnsignedPublishLicense>。  発行ライセンスに対してこれらの値を指定する、<xref:System.Security.RightsManagement.ContentGrant>プロパティ<xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>と<xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>明示的に設定する必要があります</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A></xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A></xref:System.Security.RightsManagement.ContentGrant>。  次の例は、明示的に設定する方法を示します、<xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>と<xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A>プロパティ</xref:System.Security.RightsManagement.ContentGrant.ValidUntil%2A></xref:System.Security.RightsManagement.ContentGrant.ValidFrom%2A>。       [!code-vb[UnsignedPubLicense_snip #RmPkgPubGrants](~/add/codesnippet/visualbasic/unsignedpublicense/window1.xaml.vb#rmpkgpubgrants)][!code-cs[UnsignedPubLicense_snip #RmPkgPubGrants  ](~/add/codesnippet/csharp/UnsignedPubLicense/Window1.xaml.cs#rmpkgpubgrants)]"
  example:
  - "The following example shows how to use this constructor.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public UnsignedPublishLicense (string publishLicenseTemplate);
    parameters:
    - id: publishLicenseTemplate
      type: System.String
      description: "[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]公開ライセンス テンプレートを使用してこのライセンスを作成します。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  id: ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得または発行者が作成したコンテンツ識別子を設定します。"
  remarks: "パブリッシャー<xref:System.Security.RightsManagement.UseLicense>と<xref:System.Security.RightsManagement.PublishLicense>。</xref:System.Security.RightsManagement.PublishLicense></xref:System.Security.RightsManagement.UseLicense>権限管理コンテンツを特定のコンテンツ Id を作成します。"
  syntax:
    content: public Guid ContentId { get; set; }
    return:
      type: System.Guid
      description: "発行者が作成した権限管理コンテンツ識別子。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  id: Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "割り当てられたユーザー権限のコレクションを取得します。"
  syntax:
    content: public System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant> Grants { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
      description: "本ライセンスに記載されている割り当てられたユーザー権限のコレクション。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  id: LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "名前と説明のペアのコレクションを取得します。"
  syntax:
    content: public System.Collections.Generic.IDictionary<int,System.Security.RightsManagement.LocalizedNameDescriptionPair> LocalizedNameDescriptionDictionary { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
      description: "名前と説明のペアのコレクション。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  id: Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得またはコンテンツの所有者を設定します。"
  remarks: "所有者が<xref:System.Security.RightsManagement.PublishLicense>。</xref:System.Security.RightsManagement.PublishLicense>を所有するユーザーを指定します       所有者は、発行ライセンスの所有者ノードに関連付けられても[!INCLUDE[TLA#tla_xrml](~/add/includes/ajax-current-ext-md.md)]します。"
  example:
  - "The following example shows how to use this property to assign a <xref:System.Security.RightsManagement.ContentUser>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubunpublic)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubUnPubLic](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubunpublic)]"
  syntax:
    content: public System.Security.RightsManagement.ContentUser Owner { get; set; }
    return:
      type: System.Security.RightsManagement.ContentUser
      description: "公開されたコンテンツを所有するユーザー。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  id: ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "取得または作成者やコンテンツの発行元の連絡先名を設定します。"
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoName&quot;></a>## この型の XAML テキスト使用状況のメンバーは、通常では使用されない[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: public string ReferralInfoName { get; set; }
    return:
      type: System.String
      description: "作成者またはコンテンツの発行元の連絡先の名前。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  id: ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "連絡先の設定を取得または[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]作成者またはコンテンツの発行元。"
  remarks: "<a name=&quot;xamlTextUsage_ReferralInfoUri&quot;></a>## この型の XAML テキスト使用状況のメンバーは、通常では使用されない[!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)]です。"
  syntax:
    content: public Uri ReferralInfoUri { get; set; }
    return:
      type: System.Uri
      description: "連絡先[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]作成者またはコンテンツの発行元。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  id: Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "符号付き作成<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>を返します、 <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>ドキュメントの作成者の。"
  remarks: ''
  example:
  - "The following example shows how to use this class to initialize a <xref:System.Security.RightsManagement.PublishLicense>.  \n  \n [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/visualbasic/rmpackagepublish/window1.xaml.vb#rmpkgpubencrypt)]\n [!code-cs[RightsManagedPackagePublish#RmPkgPubEncrypt](~/add/codesnippet/csharp/RmPackagePublish/Window1.xaml.cs#rmpkgpubencrypt)]"
  syntax:
    content: public System.Security.RightsManagement.PublishLicense Sign (System.Security.RightsManagement.SecureEnvironment secureEnvironment, out System.Security.RightsManagement.UseLicense authorUseLicense);
    parameters:
    - id: secureEnvironment
      type: System.Security.RightsManagement.SecureEnvironment
      description: "ライセンスの有効化およびバインディングをセキュリティで保護された環境。"
    - id: authorUseLicense
      type: System.Security.RightsManagement.UseLicense
      description: "返される、 <xref href=&quot;System.Security.RightsManagement.UseLicense&quot;> </xref>ドキュメントの作成者にします。"
    return:
      type: System.Security.RightsManagement.PublishLicense
      description: "サインインした<xref href=&quot;System.Security.RightsManagement.PublishLicense&quot;></xref>この署名によって作成<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;></xref>です。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  exceptions: []
  platform:
  - net462
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  id: ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  langs:
  - csharp
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Security.RightsManagement
  summary: "作成されたシリアル化されたテンプレートを返します、[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]の<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;></xref>です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "シリアル化されたテンプレートから作成された、[!INCLUDE[TLA2#tla_xrml](~/add/includes/tla2sharptla-xrml-md.md)]の<xref href=&quot;System.Security.RightsManagement.UnsignedPublishLicense&quot;></xref>です。"
  overload: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense()
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense(String)
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense(String)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.UnsignedPublishLicense(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ContentId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Grants
- uid: System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ContentGrant>
  nameWithType: ICollection<ContentGrant>
  fullName: System.Collections.Generic.ICollection<System.Security.RightsManagement.ContentGrant>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Security.RightsManagement.ContentGrant>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.RightsManagement.ContentGrant
    name: ContentGrant
    nameWithType: ContentGrant
    fullName: ContentGrant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<Int32,LocalizedNameDescriptionPair>
  nameWithType: IDictionary<Int32,LocalizedNameDescriptionPair>
  fullName: System.Collections.Generic.IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Security.RightsManagement.LocalizedNameDescriptionPair
    name: LocalizedNameDescriptionPair
    nameWithType: LocalizedNameDescriptionPair
    fullName: LocalizedNameDescriptionPair
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.ContentUser
  parent: System.Security.RightsManagement
  isExternal: false
  name: ContentUser
  nameWithType: ContentUser
  fullName: System.Security.RightsManagement.ContentUser
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign(SecureEnvironment,UseLicense)
  nameWithType: UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.Sign(SecureEnvironment,UseLicense)
- uid: System.Security.RightsManagement.PublishLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: PublishLicense
  nameWithType: PublishLicense
  fullName: System.Security.RightsManagement.PublishLicense
- uid: System.Security.RightsManagement.SecureEnvironment
  parent: System.Security.RightsManagement
  isExternal: false
  name: SecureEnvironment
  nameWithType: SecureEnvironment
  fullName: System.Security.RightsManagement.SecureEnvironment
- uid: System.Security.RightsManagement.UseLicense
  parent: System.Security.RightsManagement
  isExternal: false
  name: UseLicense
  nameWithType: UseLicense
  fullName: System.Security.RightsManagement.UseLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString()
  nameWithType: UnsignedPublishLicense.ToString()
  fullName: System.Security.RightsManagement.UnsignedPublishLicense.ToString()
- uid: System.Security.RightsManagement.UnsignedPublishLicense.#ctor*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: UnsignedPublishLicense
  nameWithType: UnsignedPublishLicense.UnsignedPublishLicense
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ContentId*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ContentId
  nameWithType: UnsignedPublishLicense.ContentId
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Grants*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Grants
  nameWithType: UnsignedPublishLicense.Grants
- uid: System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: LocalizedNameDescriptionDictionary
  nameWithType: UnsignedPublishLicense.LocalizedNameDescriptionDictionary
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Owner*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Owner
  nameWithType: UnsignedPublishLicense.Owner
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoName*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoName
  nameWithType: UnsignedPublishLicense.ReferralInfoName
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ReferralInfoUri*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ReferralInfoUri
  nameWithType: UnsignedPublishLicense.ReferralInfoUri
- uid: System.Security.RightsManagement.UnsignedPublishLicense.Sign*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: Sign
  nameWithType: UnsignedPublishLicense.Sign
- uid: System.Security.RightsManagement.UnsignedPublishLicense.ToString*
  parent: System.Security.RightsManagement.UnsignedPublishLicense
  isExternal: false
  name: ToString
  nameWithType: UnsignedPublishLicense.ToString
