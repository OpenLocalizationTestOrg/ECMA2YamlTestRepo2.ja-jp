### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification
  id: ScopedMessagePartSpecification
  children:
  - System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  - System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  - System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  - System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  - System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  - System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  - System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  langs:
  - csharp
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification
  type: Class
  summary: "メッセージに含める部分を指定します。"
  remarks: "このクラスに含まれる、 <xref:System.ServiceModel.Security.MessagePartSpecification>、メッセージ アクションで識別される異なるメッセージのインスタンスは、.</xref:System.ServiceModel.Security.MessagePartSpecification>"
  syntax:
    content: public class ScopedMessagePartSpecification
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ScopedMessagePartSpecification()
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref>クラスです。"
  syntax:
    content: public ScopedMessagePartSpecification ();
    parameters: []
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  id: '#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)'
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref>このクラスの別のインスタンスからのクラスです。"
  syntax:
    content: public ScopedMessagePartSpecification (System.ServiceModel.Security.ScopedMessagePartSpecification other);
    parameters:
    - id: other
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "他の<xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;></xref>です。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  id: Actions
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "アクション キーのコレクションを取得します。"
  syntax:
    content: public System.Collections.Generic.ICollection<string> Actions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "&lt;Xref:System.Collections.Generic.ICollection%601&gt;型の<xref:System.String>アクション部分のコレクションのキーを格納している</xref:System.String>。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  id: AddParts(System.ServiceModel.Security.MessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: AddParts(MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "このクラスのインスタンス内のコレクションにチャネル メッセージ部分を追加します。"
  syntax:
    content: public void AddParts (System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>を追加する部分を格納しています。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parts</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  id: AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: AddParts(MessagePartSpecification,String)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "メッセージ部分を追加、 <xref uid=&quot;langword_csharp_MessagePartSpecification&quot; name=&quot;MessagePartSpecification&quot; href=&quot;&quot;> </xref>指定されたアクションに対応します。"
  syntax:
    content: public void AddParts (System.ServiceModel.Security.MessagePartSpecification parts, string action);
    parameters:
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "<xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>を追加する部分を格納しています。"
    - id: action
      type: System.String
      description: "一致するアクション キー。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parts</code>or <code>action</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>は読み取り専用です。"
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  id: ChannelParts
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "チャネル部分を含むメッセージ部分仕様を取得します。"
  remarks: "チャネル部分は、すべてのメッセージに共通のメッセージ部分を表します。"
  syntax:
    content: public System.ServiceModel.Security.MessagePartSpecification ChannelParts { get; }
    return:
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "A <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>チャネル部分を格納しています。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  id: IsReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "仕様が読み取り専用かどうかを示します。"
  remarks: "使用することができます<xref:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly%2A>にこのプロパティを設定する`true`</xref:System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly%2A>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、仕様が読み取り専用です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  id: MakeReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "仕様を読み取り専用に設定します。"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: TryGetParts(String,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指定したアクション キーと一致する部分があるかどうかを確認します。"
  remarks: "指定されたアクションがない場合、 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>、ワイルドカード アクション用に構成されたメッセージ部分 (&quot;*&quot;) が返されます</xref:System.ServiceModel.Security.ScopedMessagePartSpecification>。"
  syntax:
    content: public bool TryGetParts (string action, out System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: action
      type: System.String
      description: "アクション キー。"
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "このメソッドが戻るとき、 <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>見つかった部分を格納しています。 このパラメーターは初期化されていない状態で渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>一致するパートが見つかった場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  id: TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  langs:
  - csharp
  name: TryGetParts(String,Boolean,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "指定したアクション キーと一致する部分があるかどうかを確認します。"
  remarks: "指定されたアクションがない場合、 <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>、ワイルドカード アクション用に構成されたメッセージ部分 (&quot;*&quot;) が返されます</xref:System.ServiceModel.Security.ScopedMessagePartSpecification>。"
  syntax:
    content: public bool TryGetParts (string action, bool excludeChannelScope, out System.ServiceModel.Security.MessagePartSpecification parts);
    parameters:
    - id: action
      type: System.String
      description: "アクション キー。"
    - id: excludeChannelScope
      type: System.Boolean
      description: "ときに<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、現在のチャネルに部品を制限します。"
    - id: parts
      type: System.ServiceModel.Security.MessagePartSpecification
      description: "このメソッドが戻るとき、 <xref href=&quot;System.ServiceModel.Security.MessagePartSpecification&quot;> </xref>見つかった部分を格納しています。 このパラメーターは初期化されていない状態で渡されます。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>一致するパートが見つかった場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification()
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification()
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor(System.ServiceModel.Security.ScopedMessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ScopedMessagePartSpecification(ScopedMessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts(MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification)
- uid: System.ServiceModel.Security.MessagePartSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: MessagePartSpecification
  nameWithType: MessagePartSpecification
  fullName: System.ServiceModel.Security.MessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(System.ServiceModel.Security.MessagePartSpecification,System.String)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts(MessagePartSpecification,String)
  nameWithType: ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts(MessagePartSpecification,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: MakeReadOnly()
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly()
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly()
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts(String,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,MessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(System.String,System.Boolean,System.ServiceModel.Security.MessagePartSpecification@)
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts(String,Boolean,MessagePartSpecification)
  nameWithType: ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts(String,Boolean,MessagePartSpecification)
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.#ctor*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification.ScopedMessagePartSpecification
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.Actions*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: Actions
  nameWithType: ScopedMessagePartSpecification.Actions
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.AddParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: AddParts
  nameWithType: ScopedMessagePartSpecification.AddParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.ChannelParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: ChannelParts
  nameWithType: ScopedMessagePartSpecification.ChannelParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.IsReadOnly*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: IsReadOnly
  nameWithType: ScopedMessagePartSpecification.IsReadOnly
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.MakeReadOnly*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: MakeReadOnly
  nameWithType: ScopedMessagePartSpecification.MakeReadOnly
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification.TryGetParts*
  parent: System.ServiceModel.Security.ScopedMessagePartSpecification
  isExternal: false
  name: TryGetParts
  nameWithType: ScopedMessagePartSpecification.TryGetParts
