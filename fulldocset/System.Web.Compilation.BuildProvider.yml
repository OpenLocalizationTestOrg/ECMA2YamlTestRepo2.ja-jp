### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildProvider
  id: BuildProvider
  children:
  - System.Web.Compilation.BuildProvider.#ctor
  - System.Web.Compilation.BuildProvider.CodeCompilerType
  - System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  - System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  - System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  - System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  - System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.OpenReader
  - System.Web.Compilation.BuildProvider.OpenReader(System.String)
  - System.Web.Compilation.BuildProvider.OpenStream
  - System.Web.Compilation.BuildProvider.OpenStream(System.String)
  - System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  - System.Web.Compilation.BuildProvider.ReferencedAssemblies
  - System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  - System.Web.Compilation.BuildProvider.VirtualPath
  - System.Web.Compilation.BuildProvider.VirtualPathDependencies
  langs:
  - csharp
  name: BuildProvider
  nameWithType: BuildProvider
  fullName: System.Web.Compilation.BuildProvider
  type: Class
  summary: "ASP.NET ビルド環境でソース コードの生成のプロパティとメソッドのセットを定義します。 このクラスは抽象クラスです。"
  remarks: "ASP.NET ビルド環境では、BuildProvider オブジェクトを使用して、アプリケーション内で別のファイルの種類のソース コードを生成します。 主に BuildProvider から派生したクラスは、ファイル、Web ページ、リソース、およびその他のカスタム項目のソース コードを提供します。       通常、BuildProvider クラスのインスタンスを直接作成する実行されません。 代わりに、BuildProvider から派生するクラスを実装し、ASP.NET ビルド環境で使用するための BuildProvider 実装を構成します。       BuildProvider クラスのインスタンスの併用<xref:System.Web.Compilation.AssemblyBuilder>オブジェクトに&1; つまたは複数のファイルをコンパイルされたアセンブリに組み込む</xref:System.Web.Compilation.AssemblyBuilder>。 BuildProvider インスタンスは、個々 のファイルに対する適切な言語でソース コードを生成し、<xref:System.Web.Compilation.AssemblyBuilder>オブジェクトが&1; つのアセンブリには、各 BuildProvider インスタンスから提供されたソースを結合します</xref:System.Web.Compilation.AssemblyBuilder>。       ASP.NET ビルド環境では、アプリケーション内でファイルをビルドするのに BuildProvider クラスのインスタンスを使用します。 <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>BuildProvider クラスのプロパティを構築できるファイルのパスを示します</xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>。 アプリケーション内の各ファイルのファイル拡張子は、対応するビルド プロバイダーにマップされます。 ASP.NET ビルド環境では、ファイル拡張子に基づいてファイルごとに BuildProvider インスタンスを初期化し、BuildProvider メソッドを使用して、ファイルのソース コードを生成します。 ASP.NET ビルド環境、<xref:System.Web.Compilation.AssemblyBuilder>オブジェクト優先コンパイラ言語と、コンテキストに基づいて、BuildProvider メソッドにファイルの&1; つまたは複数のファイルからアセンブリを作成するときにできるように、BuildProvider インスタンスは、全体的なアセンブリには、そのファイルのソース コードを行うことができます</xref:System.Web.Compilation.AssemblyBuilder>。       カスタムのビルドを定義するには、ファイルの操作は、ASP.NET アプリケーション内で入力 BuildProvider からクラスを派生、ファイルの種類を作成するため、派生クラス内のメンバーを実装および構成する必要、アプリケーション構成ファイル内の対応するファイル拡張子のビルド プロバイダー。       サポートされているファイルのファイル拡張子を指定し、ビルド プロバイダーがコード ファイル、Web ファイル、リソース ファイル、またはすべてのファイルをサポートするかどうか。 使用して、`type`ビルド プロバイダーの実装の完全修飾型名を指定する属性。 使用して、<xref:System.Web.Compilation.BuildProviderAppliesToAttribute>ビルド プロバイダーが App_Code ディレクトリ内のファイル、ディレクトリ内のファイル、Web コンテンツにグローバルまたはローカル リソース、またはすべてのファイルを適用するかどうかを指定するクラス</xref:System.Web.Compilation.BuildProviderAppliesToAttribute>。 使用して、 `extension` BuildProvider クラスでサポートされるファイルを識別するためのファイル拡張子を指定する属性。 使用して、<xref:System.Web.Configuration.BuildProviderCollection>を確認するクラスが、構成ファイル内のプロバイダーをビルドします</xref:System.Web.Configuration.BuildProviderCollection>。 ビルド プロバイダーの構成の詳細については、次を参照してください。 [buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)です。       カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装する BuildProvider からクラスを派生させ、 <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>、サポートされているファイルの種類のソース コードを生成する方法</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>。 生成されたソースを追加、 <xref:System.Web.Compilation.AssemblyBuilder>CodeDOM グラフのまたは物理ソース コード ファイルを表すコンテンツとしてフォーム内のオブジェクト</xref:System.Web.Compilation.AssemblyBuilder>。 ビルド プロバイダーは、特定のプログラミング言語を必要とする場合は、上書き、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>返されるプロパティを<xref:System.Web.Compilation.CompilerType>サポートされているプログラミング言語のオブジェクト</xref:System.Web.Compilation.CompilerType></xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>。 ビルド プロバイダーに固有のプログラミング言語が必要としない場合は無効、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>プロパティです使用する基本クラスの実装のビルド プロバイダーが Visual Basic や c# など、任意の .NET Framework 言語を使用できることを示します。</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> 。       Web コンテンツのソース コードを生成するビルド プロバイダーを実装するクラスを派生 BuildProvider およびオーバーライド、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>を返すメソッドを<xref:System.Type>BuildProvider によって生成されるクラス</xref:System.Type></xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>。 上書き、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>サポートされているファイルによって提供された型のソース コードを生成する方法</xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>。      > [!NOTE] > Web.config ファイルにカスタマイズされた BuildProvider クラスを追加する ASP.NET Web サイトでは動作しますが、ASP.NET Web アプリケーション プロジェクトでは機能しません。 Web アプリケーション プロジェクトでは、アプリケーションで BuildProvider クラスによって生成されるコードを含めることができません。 詳細については、次を参照してください。 [ASP.NET Web アプリケーション プロジェクト プリコンパイル概要](http://msdn.microsoft.com/en-us/b940abbd-178d-4570-b441-52914fa7b887)です。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract BuildProvider base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class. The example does not include the implementation of the `SampleClassGenerator` class. For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/t-system.web.compilation_0_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/t-system.web.compilation_0_1.vb)]"
  syntax:
    content: public abstract class BuildProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref>クラスです。"
  remarks: "<xref:System.Web.Compilation.BuildProvider>クラスは抽象クラスのインスタンスを作成することはできません<xref:System.Web.Compilation.BuildProvider>コンス トラクターを使用して直接</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildProvider>。       派生している場合、<xref:System.Web.Compilation.BuildProvider>クラス、ビルド プロバイダーの実装にカスタムの初期化のアクションを実装するコンス トラクターをオーバーライドします</xref:System.Web.Compilation.BuildProvider>。"
  syntax:
    content: protected BuildProvider ();
    parameters: []
  overload: System.Web.Compilation.BuildProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  id: CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーがカスタム ファイルの種類のソース コードを生成するために使用するコンパイラ タイプを表します。"
  remarks: "<xref:System.Web.Compilation.BuildProvider>。</xref:System.Web.Compilation.BuildProvider>を実装するためのソース コードのコンパイルの設定を提供するのに CodeCompilerType プロパティを使用します。 CodeCompilerType プロパティは`null`かどうかビルド プロバイダーは必要ありません、特定のコード言語の生成とソース コードをコンパイルします。       値を設定する、<xref:System.Web.Compilation.CompilerType>ビルド プロバイダーの実装を使用して内のオブジェクト、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>または<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>メソッド</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A></xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A></xref:System.Web.Compilation.CompilerType>。       <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>プロパティを指定します、<xref:System.CodeDom.Compiler.CodeDomProvider>実装を生成し、ビルド プロバイダーのソース コードをコンパイルするために使用します</xref:System.CodeDom.Compiler.CodeDomProvider></xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>。 <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>プロパティは、ソース コードをアセンブリにコンパイルするために使用される設定を定義します</xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the CodeCompilerType, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/p-system.web.compilation_4_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/p-system.web.compilation_4_1.vb)]"
  syntax:
    content: public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }
    return:
      type: System.Web.Compilation.CompilerType
      description: "読み取り専用<xref href=&quot;System.Web.Compilation.CompilerType&quot;></xref>コード ジェネレーター、コード コンパイラ、および仮想パスのソース コードを構築するために使用するコンパイラ設定を表すです。 基本クラスを返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.BuildProvider.CodeCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  id: GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーの仮想パスのソース コードを生成し、ソース コードを指定したアセンブリ ビルダーに追加します。"
  remarks: "カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>クラス、およびサポートされているファイルの種類のソース コードを生成する GenerateCode メソッドをオーバーライドします</xref:System.Web.Compilation.BuildProvider>。       通常、ビルド プロバイダーの GenerateCode 実装を読み取り、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティ、内容を解析しを指定した、生成されたソース コードに追加<xref:System.Web.Compilation.AssemblyBuilder>オブジェクト</xref:System.Web.Compilation.AssemblyBuilder></xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>。 ソース コードの形式でアセンブリに協力することができます、<xref:System.IO.TextWriter>オブジェクトまたは CodeDOM グラフ</xref:System.IO.TextWriter>。 ソース コードからアセンブリを追加する、<xref:System.IO.TextWriter>オブジェクトを使用して、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A></xref:System.IO.TextWriter>。 CodeDOM グラフのソース コードをアセンブリに追加するには、使用、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>。       オーバーライドする必要がありますビルド プロバイダーは、特定のプログラミング言語でソース コードを生成する場合、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>返されるプロパティを<xref:System.Web.Compilation.CompilerType>サポートされているプログラミング言語のオブジェクト</xref:System.Web.Compilation.CompilerType></xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>。"
  example:
  - "The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class. The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and GenerateCode members of the base class.  \n  \n [!code-cs[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/csharp/fc642c18-5414-4093-bd92-_1.cs)]\n [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/add/codesnippet/visualbasic/fc642c18-5414-4093-bd92-_1.vb)]"
  syntax:
    content: public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);
    parameters:
    - id: assemblyBuilder
      type: System.Web.Compilation.AssemblyBuilder
      description: "ビルド プロバイダーによって生成されたソース コードを参照するアセンブリ ビルダー。"
  overload: System.Web.Compilation.BuildProvider.GenerateCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  id: GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "生成された CodeDOM グラフのコンテナーを表します。"
  remarks: "このメソッドを使用できます、<xref:System.Web.Compilation.ClientBuildManager>クラスの構文の強調表示とデザイナーは、Visual Studio でサポートします</xref:System.Web.Compilation.ClientBuildManager>。"
  syntax:
    content: protected virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);
    parameters:
    - id: linePragmasTable
      type: System.Collections.IDictionary
      description: "このメソッドが戻るときに、すべての関連付けられている行番号およびソース コードの行プラグマを格納するディクショナリが含まれています。 このパラメーターは初期化せずに渡されます。"
    return:
      type: System.CodeDom.CodeCompileUnit
      description: "によって生成された CodeDOM グラフのコンテナー、 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref>インスタンス。"
  overload: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  id: GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "コンパイル済みのアセンブリに保存される文字列を生成します。"
  remarks: "<xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>のメソッド、<xref:System.Web.Compilation.BuildManager>オブジェクトが入力の仮想パスのビルド プロバイダーのインスタンスを作成しの GetCustomString メソッドを呼び出し、<xref:System.Web.Compilation.BuildProvider>オブジェクト</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildManager></xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>。       基本<xref:System.Web.Compilation.BuildProvider>クラスを返します`null`GetCustomString が実装されていないことを示す、GetCustomString メソッド</xref:System.Web.Compilation.BuildProvider>。       特定のビルド プロバイダーの実装は、の代わりに GetCustomString を実装できます、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>メソッド</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>。 <xref:System.Web.Compilation.BuildProvider>オブジェクトは通常<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、<xref:System.Type>仮想パスのオブジェクト</xref:System.Type>を返すを</xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>使用して</xref:System.Web.Compilation.BuildProvider> GetCustomString メソッドを使用してあることを示すただし、<xref:System.Web.Compilation.BuildProvider>オブジェクトは、仮想パスからの複数の型を生成できます</xref:System.Web.Compilation.BuildProvider>"
  syntax:
    content: public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "ビルド プロバイダーの仮想パスのコンパイル結果。"
    return:
      type: System.String
      description: "ビルド環境に保存される文字列または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Web.Compilation.BuildProvider&quot;> </xref>インスタンスは GetCustomString を実装していません。"
  overload: System.Web.Compilation.BuildProvider.GetCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  id: GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "アプリケーションの既定の言語のコンパイラ設定を返します。"
  remarks: "ビルド プロバイダーの既定のコンパイラ型を調べるには、GetDefaultCompilerType メソッドを使用します。 使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>ビルド プロバイダーの特定の言語名で構成されているコンパイラの型をチェックするメソッド</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>。       基本<xref:System.Web.Compilation.BuildProvider>クラスは、既定値の型を使用してコンパイラによって異なる、`defaultLanguage`属性の値は、アプリケーション構成ファイルのセクションでします</xref:System.Web.Compilation.BuildProvider>。 使用してコンパイラの既定値の型を設定する compilation セクション内の既定の言語設定がない場合、<xref:Microsoft.VisualBasic.VBCodeProvider>言語プロバイダー</xref:Microsoft.VisualBasic.VBCodeProvider> 。       派生している場合、<xref:System.Web.Compilation.BuildProvider>クラス、設定に GetDefaultCompilerType を使用することができます、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>実装内のプロパティ</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A></xref:System.Web.Compilation.BuildProvider>。"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();
    parameters: []
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref>アプリケーションの既定の言語のコンパイラ設定を表すです。 基本クラスでは、アプリケーション構成ファイルに基づく既定コンパイラを返します。"
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  id: GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定された言語に基づくビルド プロバイダーのコンパイラ設定を返します。"
  remarks: "GetDefaultCompilerTypeForLanguage メソッドを使用して、特定の言語名のビルド プロバイダーで構成されているコンパイラ タイプを調べます。 使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>ビルド プロバイダーのコンパイラの既定値の型をチェックするメソッド</xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>。       基本<xref:System.Web.Compilation.BuildProvider>クラスは、既定値の型を使用してコンパイラによって異なる、<xref:System.Web.Configuration.Compiler>内の要素、<xref:System.Web.Configuration.CompilationSection.Compilers%2A>のプロパティ、<xref:System.Web.Configuration.CompilationSection>構成ファイルのオブジェクト</xref:System.Web.Configuration.CompilationSection></xref:System.Web.Configuration.CompilationSection.Compilers%2A></xref:System.Web.Configuration.Compiler></xref:System.Web.Compilation.BuildProvider>。 これは、およびの構成ファイルのセクションでは、要素内の要素を確認するのには等価です。 たとえば、 `language` VB、基本クラスのメソッドの値が<xref:System.Web.Compilation.CompilerType><xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>.</xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=fullName>のインスタンスの構成済みの設定に対応するオブジェクト</xref:System.Web.Compilation.CompilerType>を返します       継承する場合、<xref:System.Web.Compilation.BuildProvider>クラス、設定に GetDefaultCompilerTypeForLanguage を使用することができます、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、実装でサポートされる言語のプロパティの値</xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A></xref:System.Web.Compilation.BuildProvider>。"
  syntax:
    content: protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);
    parameters:
    - id: language
      type: System.String
      description: "コード言語の名前。"
    return:
      type: System.Web.Compilation.CompilerType
      description: "A <xref href=&quot;System.Web.Compilation.CompilerType&quot;> </xref>を表す、指定した言語に基づくビルド プロバイダーのコンパイラ設定します。 基本クラスは、既定のアプリケーション構成ファイルに基づく言語のコンパイラ設定を返します。"
  overload: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>language</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>language</code>ビルド プロバイダーの構成済みのコンパイラは一致しません。"
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  id: GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスからビルド プロバイダーによって生成された型を返します。"
  remarks: ".Aspx ファイルなどの Web コンテンツのソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>クラス メソッドをオーバーライドして、GetGeneratedType ビルド プロバイダーによって生成された型を返します</xref:System.Web.Compilation.BuildProvider>。       ASP.NET ビルド システムが各ビルド プロバイダーのファイルをコンパイルし、生成、<xref:System.CodeDom.Compiler.CompilerResults>は GetGeneratedType メソッドに渡されるオブジェクト</xref:System.CodeDom.Compiler.CompilerResults>。 通常、ビルド プロバイダーの GetGeneratedType 実装を使用して、<xref:System.Reflection.Assembly.GetType%2A>メソッドを<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>入力のプロパティ`results`指定された型を取得するオブジェクト</xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A></xref:System.Reflection.Assembly.GetType%2A>。"
  syntax:
    content: public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "ビルド プロバイダーの仮想パスのコンパイル結果。"
    return:
      type: System.Type
      description: "仮想パスのビルド プロバイダーによって生成される型。 基本クラスを返します<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Web.Compilation.BuildProvider.GetGeneratedType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  id: GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "仮想パスが構築されたときに必要なアクションを示す値を返します。"
  remarks: "インスタンスを使用するときに、ASP.NET ビルド環境によって GetResultFlags メソッドが使用される、<xref:System.Web.Compilation.BuildProvider>ファイルをビルドおよびコンパイル済みのアセンブリをロードするクラス</xref:System.Web.Compilation.BuildProvider>。       基本<xref:System.Web.Compilation.BuildProvider>クラスのメソッドを返します、<xref:System.Web.Compilation.BuildProviderResultFlags>特別な操作が不要である仮想パスが構築されたときを示す、フィールドの値</xref:System.Web.Compilation.BuildProviderResultFlags></xref:System.Web.Compilation.BuildProvider>。       <xref:System.Web.Compilation.BuildProvider>クラスを別の<xref:System.Web.Compilation.BuildProviderResultFlags>カスタム ファイルの種類または仮想パスの値</xref:System.Web.Compilation.BuildProviderResultFlags>を返す GetResultFlags メソッドを実装することができます</xref:System.Web.Compilation.BuildProvider>から派生している場合 たとえば場合の再構築、仮想パスが必要ですを含む、<xref:System.AppDomain>オブジェクトを再読み込みされ、返すことができます、 <xref:System.Web.Compilation.BuildProviderResultFlags>GetResultFlags メソッドから列挙値</xref:System.Web.Compilation.BuildProviderResultFlags></xref:System.AppDomain>。"
  syntax:
    content: public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "ビルド プロバイダーの仮想パスのコンパイル結果。"
    return:
      type: System.Web.Compilation.BuildProviderResultFlags
      description: "A <xref href=&quot;System.Web.Compilation.BuildProviderResultFlags&quot;> </xref>ビルド環境、ASP.NET での仮想パスが構築された後に必要なアクションを示す値。"
  overload: System.Web.Compilation.BuildProvider.GetResultFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader
  id: OpenReader
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "現在のビルド プロバイダー オブジェクトの仮想パスから読み込むのためのテキスト リーダーを開きます。"
  remarks: "使用して、<xref:System.IO.TextReader.Read%2A>メソッドで返された<xref:System.IO.TextReader>オブジェクトの内容を読み取る、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティを<xref:System.Web.Compilation.BuildProvider>オブジェクト</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildProvider.VirtualPath%2A></xref:System.IO.TextReader></xref:System.IO.TextReader.Read%2A>。       使用する必要があります OpenReader メソッドを呼び出した後、<xref:System.IO.TextReader.Close%2A>を終了するメソッド、<xref:System.IO.TextReader>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.TextReader></xref:System.IO.TextReader.Close%2A>。"
  syntax:
    content: protected System.IO.TextReader OpenReader ();
    parameters: []
    return:
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader> <xref:System.Web.Compilation.BuildProvider.VirtualPath*>。</xref:System.Web.Compilation.BuildProvider.VirtualPath*>の内容の読み取りに使用できる</xref:System.IO.TextReader>のオープン"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  id: OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定した仮想パスから読み込むのためのテキスト リーダーを開きます。"
  remarks: "<xref:System.IO.TextReader.Read%2A>返された<xref:System.IO.TextReader>仮想パスの内容を読み取るためのオブジェクト</xref:System.IO.TextReader>のメソッド</xref:System.IO.TextReader.Read%2A>を使用します。       呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>メソッドを使用する必要あります、<xref:System.IO.TextReader.Close%2A>を終了するメソッド、<xref:System.IO.TextReader>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.TextReader></xref:System.IO.TextReader.Close%2A></xref:System.Web.Compilation.BuildProvider.OpenReader%2A>。"
  syntax:
    content: protected System.IO.TextReader OpenReader (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "読み取るへの仮想パス。"
    return:
      type: System.IO.TextReader
      description: "<xref:System.IO.TextReader>指定された仮想パスのコンテンツの読み取りに使用できる</xref:System.IO.TextReader>のオープン"
  overload: System.Web.Compilation.BuildProvider.OpenReader*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream
  id: OpenStream
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "現在のビルド プロバイダー オブジェクトの仮想パスを読み取るためのストリームを開きます。"
  remarks: "使用して、<xref:System.IO.Stream.Read%2A>メソッドで返された<xref:System.IO.Stream>の仮想パスの内容を読み取るためのオブジェクト、<xref:System.Web.Compilation.BuildProvider>オブジェクト</xref:System.Web.Compilation.BuildProvider></xref:System.IO.Stream></xref:System.IO.Stream.Read%2A>。       使用する必要があります OpenStream メソッドを呼び出した後、<xref:System.IO.Stream.Close%2A>を終了するメソッド、<xref:System.IO.Stream>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.Stream></xref:System.IO.Stream.Close%2A>。"
  syntax:
    content: protected System.IO.Stream OpenStream ();
    parameters: []
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream> <xref:System.Web.Compilation.BuildProvider.VirtualPath*>。</xref:System.Web.Compilation.BuildProvider.VirtualPath*>の内容の読み取りに使用できる</xref:System.IO.Stream>のオープン"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  id: OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "指定した仮想パスから読み取るのためのストリームを開きます。"
  remarks: "<xref:System.IO.Stream.Read%2A>返された<xref:System.IO.Stream>仮想パスの内容を読み取るためのオブジェクト</xref:System.IO.Stream>のメソッド</xref:System.IO.Stream.Read%2A>を使用します。       呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>メソッドを使用する必要あります、<xref:System.IO.Stream.Close%2A>を終了するメソッド、<xref:System.IO.Stream>オブジェクトし、関連付けられたシステム リソースを解放します</xref:System.IO.Stream></xref:System.IO.Stream.Close%2A></xref:System.Web.Compilation.BuildProvider.OpenStream%2A>。"
  syntax:
    content: protected System.IO.Stream OpenStream (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "読み取るへの仮想パス。"
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>指定された仮想パスのコンテンツの読み取りに使用できる</xref:System.IO.Stream>のオープン"
  overload: System.Web.Compilation.BuildProvider.OpenStream*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  id: ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "派生クラスでオーバーライドされると、詳細を提供することを変更できるように、コンパイラ エラー メッセージを確認できます。"
  remarks: "通常、エラー テキストをユーザーにとってより便利に行うために表示される前に、コンパイラ エラーを修正できますようには、このメソッドをオーバーライドします。 これは、特定のエラーのコンテキストを知るし、それらを修正する方法についてユーザーに情報を提供することができますのシナリオで役立ちます。 元のコンパイラ エラー メッセージは通常、特定の言語コンストラクトに固有、可能性がありますいない実際的な原因やソリューション明白なユーザーにします。       使用して、エラーにアクセスすることができます、<xref:System.CodeDom.Compiler.CompilerResults>メソッドに渡されるオブジェクト</xref:System.CodeDom.Compiler.CompilerResults>。"
  syntax:
    content: public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);
    parameters:
    - id: results
      type: System.CodeDom.Compiler.CompilerResults
      description: "コンパイラが発生します。"
  overload: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーによって生成されたソースでコンパイルしてアセンブリを表します。"
  remarks: "ASP.NET は、環境によって初期化されたビルド プロバイダーによって参照されるアセンブリのコレクションをビルドします。 ビルド プロバイダーによって生成されたソース コードでは、参照されたアセンブリでパブリック型を使用できます。 参照アセンブリのコレクションは、他の ASP.NET アプリケーションでビルドされたアセンブリおよび構成ファイル内の要素の一覧にアセンブリで構成されます。       ビルド プロバイダーを使用して、追加のアセンブリに追加のビルド プロバイダーは、追加のアセンブリを参照するソース コードを生成する場合、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>。 ASP.NET ビルド環境では、プロバイダーとの参照で使用できるアセンブリの既定のコレクションをビルドによって追加された両方の参照先アセンブリを使用してアセンブリのコンパイル時に外部のタイプを解決します。       ReferencedAssemblies コレクションを介して他のビルド プロバイダーによって参照に追加されるアセンブリを含まない、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>メソッド</xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>。"
  syntax:
    content: protected System.Collections.ICollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.ICollection
      description: "ビルド プロバイダーによって生成されたソース コードで参照できるアセンブリの読み取り専用コレクション。"
  overload: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  id: RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーを登録します。"
  remarks: "このメソッドを使用するには、Web.config ファイルで定義することではなくビルド プロバイダーを登録します。 ビルド プロバイダーの詳細については、次を参照してください、<xref:System.Web.Compilation.BuildProvider>クラスと[buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)。</xref:System.Web.Compilation.BuildProvider> 。"
  syntax:
    content: public static void RegisterBuildProvider (string extension, Type providerType);
    parameters:
    - id: extension
      type: System.String
      description: "ビルド プロバイダーが、ファイル名拡張子。"
    - id: providerType
      type: System.Type
      description: "ビルド プロバイダーのクラスです。"
  overload: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  id: VirtualPath
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "このビルド プロバイダーの実装でビルドするファイルを表します。"
  remarks: "仮想パス、<xref:System.Web.Compilation.BuildProvider>オブジェクトは、ビルド プロバイダーによってコンパイルされるファイルへのパス</xref:System.Web.Compilation.BuildProvider>。 たとえば、カスタム構成した場合<xref:System.Web.Compilation.BuildProvider>.abc のカスタム拡張機能がある Web サイトのすべてのファイルを作成するクラス、VirtualPath プロパティに値が含まれています、Web サイトにより、WebSite1 という名前は、Web サイトに Example.abc をという名前のファイルが含まれている場合は、 `/WebSite1/Example.abc`</xref:System.Web.Compilation.BuildProvider> 。       アプリケーション内の各ファイルのファイル拡張子は、ファイルの種類とファイルの種類に対応するビルド プロバイダーを決定します。 ASP.NET ビルド環境によって初期化、<xref:System.Web.Compilation.BuildProvider>オブジェクトの各ファイルのファイルの種類に基づいてを使用して、<xref:System.Web.Compilation.BuildProvider>各ファイルのソースを生成するメソッド</xref:System.Web.Compilation.BuildProvider></xref:System.Web.Compilation.BuildProvider>。       ビルド プロバイダーの構成の詳細については、次を参照してください。 [buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/en-us/40fa889d-5412-487a-b6a9-21eb011c2384)です。"
  syntax:
    content: protected string VirtualPath { get; }
    return:
      type: System.String
      description: "このビルド プロバイダーによってコンパイルされるファイルの仮想パスを指定する読み取り専用の文字列。"
  overload: System.Web.Compilation.BuildProvider.VirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  id: VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  langs:
  - csharp
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "ビルド プロバイダーがコードを生成する前に構築する必要がある仮想パスのコレクションを表します。"
  remarks: "VirtualPathDependencies プロパティは使用する前にコンパイルする必要がある仮想パスのコレクション、<xref:System.Web.Compilation.BuildProvider>インスタンスは、ソース コードを生成します</xref:System.Web.Compilation.BuildProvider>。 コンパイルへの参照として VirtualPathDependencies 内の仮想パスからアセンブリが追加、<xref:System.Web.Compilation.BuildProvider>インスタンス</xref:System.Web.Compilation.BuildProvider>。"
  syntax:
    content: public virtual System.Collections.ICollection VirtualPathDependencies { get; }
    return:
      type: System.Collections.ICollection
      description: "ビルド プロバイダーのこのインスタンスが依存する仮想パスを表す文字列の読み取り専用コレクション。"
  overload: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildProvider.#ctor
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider()
  nameWithType: BuildProvider.BuildProvider()
  fullName: System.Web.Compilation.BuildProvider.BuildProvider()
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
  fullName: System.Web.Compilation.BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.CompilerType
  parent: System.Web.Compilation
  isExternal: false
  name: CompilerType
  nameWithType: CompilerType
  fullName: System.Web.Compilation.CompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode(AssemblyBuilder)
  nameWithType: BuildProvider.GenerateCode(AssemblyBuilder)
  fullName: System.Web.Compilation.BuildProvider.GenerateCode(AssemblyBuilder)
- uid: System.Web.Compilation.AssemblyBuilder
  parent: System.Web.Compilation
  isExternal: false
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Web.Compilation.AssemblyBuilder
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit(IDictionary)
  nameWithType: BuildProvider.GetCodeCompileUnit(IDictionary)
  fullName: System.Web.Compilation.BuildProvider.GetCodeCompileUnit(IDictionary)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString(CompilerResults)
  nameWithType: BuildProvider.GetCustomString(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetCustomString(CompilerResults)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerResults
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CompilerResults
  nameWithType: CompilerResults
  fullName: System.CodeDom.Compiler.CompilerResults
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType()
  nameWithType: BuildProvider.GetDefaultCompilerType()
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerType()
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage(String)
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage(String)
  fullName: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(String)
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType(CompilerResults)
  nameWithType: BuildProvider.GetGeneratedType(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetGeneratedType(CompilerResults)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags(CompilerResults)
  nameWithType: BuildProvider.GetResultFlags(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.GetResultFlags(CompilerResults)
- uid: System.Web.Compilation.BuildProviderResultFlags
  parent: System.Web.Compilation
  isExternal: false
  name: BuildProviderResultFlags
  nameWithType: BuildProviderResultFlags
  fullName: System.Web.Compilation.BuildProviderResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader()
  nameWithType: BuildProvider.OpenReader()
  fullName: System.Web.Compilation.BuildProvider.OpenReader()
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Web.Compilation.BuildProvider.OpenReader(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader(String)
  nameWithType: BuildProvider.OpenReader(String)
  fullName: System.Web.Compilation.BuildProvider.OpenReader(String)
- uid: System.Web.Compilation.BuildProvider.OpenStream
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream()
  nameWithType: BuildProvider.OpenStream()
  fullName: System.Web.Compilation.BuildProvider.OpenStream()
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildProvider.OpenStream(System.String)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream(String)
  nameWithType: BuildProvider.OpenStream(String)
  fullName: System.Web.Compilation.BuildProvider.OpenStream(String)
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors(CompilerResults)
  nameWithType: BuildProvider.ProcessCompileErrors(CompilerResults)
  fullName: System.Web.Compilation.BuildProvider.ProcessCompileErrors(CompilerResults)
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
  fullName: System.Web.Compilation.BuildProvider.ReferencedAssemblies
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider(String,Type)
  nameWithType: BuildProvider.RegisterBuildProvider(String,Type)
  fullName: System.Web.Compilation.BuildProvider.RegisterBuildProvider(String,Type)
- uid: System.Web.Compilation.BuildProvider.VirtualPath
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
  fullName: System.Web.Compilation.BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
  fullName: System.Web.Compilation.BuildProvider.VirtualPathDependencies
- uid: System.Web.Compilation.BuildProvider.#ctor*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: BuildProvider
  nameWithType: BuildProvider.BuildProvider
- uid: System.Web.Compilation.BuildProvider.CodeCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: CodeCompilerType
  nameWithType: BuildProvider.CodeCompilerType
- uid: System.Web.Compilation.BuildProvider.GenerateCode*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GenerateCode
  nameWithType: BuildProvider.GenerateCode
- uid: System.Web.Compilation.BuildProvider.GetCodeCompileUnit*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCodeCompileUnit
  nameWithType: BuildProvider.GetCodeCompileUnit
- uid: System.Web.Compilation.BuildProvider.GetCustomString*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetCustomString
  nameWithType: BuildProvider.GetCustomString
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerType
  nameWithType: BuildProvider.GetDefaultCompilerType
- uid: System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetDefaultCompilerTypeForLanguage
  nameWithType: BuildProvider.GetDefaultCompilerTypeForLanguage
- uid: System.Web.Compilation.BuildProvider.GetGeneratedType*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetGeneratedType
  nameWithType: BuildProvider.GetGeneratedType
- uid: System.Web.Compilation.BuildProvider.GetResultFlags*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: GetResultFlags
  nameWithType: BuildProvider.GetResultFlags
- uid: System.Web.Compilation.BuildProvider.OpenReader*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenReader
  nameWithType: BuildProvider.OpenReader
- uid: System.Web.Compilation.BuildProvider.OpenStream*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: OpenStream
  nameWithType: BuildProvider.OpenStream
- uid: System.Web.Compilation.BuildProvider.ProcessCompileErrors*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ProcessCompileErrors
  nameWithType: BuildProvider.ProcessCompileErrors
- uid: System.Web.Compilation.BuildProvider.ReferencedAssemblies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: BuildProvider.ReferencedAssemblies
- uid: System.Web.Compilation.BuildProvider.RegisterBuildProvider*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: RegisterBuildProvider
  nameWithType: BuildProvider.RegisterBuildProvider
- uid: System.Web.Compilation.BuildProvider.VirtualPath*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPath
  nameWithType: BuildProvider.VirtualPath
- uid: System.Web.Compilation.BuildProvider.VirtualPathDependencies*
  parent: System.Web.Compilation.BuildProvider
  isExternal: false
  name: VirtualPathDependencies
  nameWithType: BuildProvider.VirtualPathDependencies
