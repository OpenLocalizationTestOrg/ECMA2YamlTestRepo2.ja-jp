### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.TouchPoint
  id: TouchPoint
  children:
  - System.Windows.Input.TouchPoint.#ctor(System.Windows.Input.TouchDevice,System.Windows.Point,System.Windows.Rect,System.Windows.Input.TouchAction)
  - System.Windows.Input.TouchPoint.Action
  - System.Windows.Input.TouchPoint.Bounds
  - System.Windows.Input.TouchPoint.Position
  - System.Windows.Input.TouchPoint.Size
  - System.Windows.Input.TouchPoint.System#IEquatable{System#Windows#Input#TouchPoint}#Equals(System.Windows.Input.TouchPoint)
  - System.Windows.Input.TouchPoint.TouchDevice
  langs:
  - csharp
  name: TouchPoint
  nameWithType: TouchPoint
  fullName: System.Windows.Input.TouchPoint
  type: Class
  summary: "マルチタッチ メッセージ ソースから単一のタッチ ポイントを表します。"
  syntax:
    content: 'public class TouchPoint : IEquatable<System.Windows.Input.TouchPoint>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Windows.Input.TouchPoint>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.#ctor(System.Windows.Input.TouchDevice,System.Windows.Point,System.Windows.Rect,System.Windows.Input.TouchAction)
  id: '#ctor(System.Windows.Input.TouchDevice,System.Windows.Point,System.Windows.Rect,System.Windows.Input.TouchAction)'
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: TouchPoint(TouchDevice,Point,Rect,TouchAction)
  nameWithType: TouchPoint.TouchPoint(TouchDevice,Point,Rect,TouchAction)
  fullName: System.Windows.Input.TouchPoint.TouchPoint(TouchDevice,Point,Rect,TouchAction)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Input.TouchPoint&quot;> </xref>クラスです。"
  remarks: "これの座標空間`position`と`bounds`一貫性のある必要があります。"
  syntax:
    content: public TouchPoint (System.Windows.Input.TouchDevice device, System.Windows.Point position, System.Windows.Rect bounds, System.Windows.Input.TouchAction action);
    parameters:
    - id: device
      type: System.Windows.Input.TouchDevice
      description: "これが発生したタッチ デバイス<xref href=&quot;System.Windows.Input.TouchPoint&quot;></xref>です。"
    - id: position
      type: System.Windows.Point
      description: "タッチ ポイントの場所です。"
    - id: bounds
      type: System.Windows.Rect
      description: "指が画面の接触している領域の境界。"
    - id: action
      type: System.Windows.Input.TouchAction
      description: "発生した最後のアクションのこの位置には、このデバイスでします。"
  overload: System.Windows.Input.TouchPoint.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>device</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.Action
  id: Action
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: Action
  nameWithType: TouchPoint.Action
  fullName: System.Windows.Input.TouchPoint.Action
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "この場所で発生した最後のアクションを取得します。"
  syntax:
    content: public System.Windows.Input.TouchAction Action { get; }
    return:
      type: System.Windows.Input.TouchAction
      description: "この場所で発生した最後のアクション。"
  overload: System.Windows.Input.TouchPoint.Action*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.Bounds
  id: Bounds
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: Bounds
  nameWithType: TouchPoint.Bounds
  fullName: System.Windows.Input.TouchPoint.Bounds
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "指が画面の接触している領域の境界を取得します。"
  remarks: "座標空間は、このオブジェクトのプロバイダーによって定義されます。"
  syntax:
    content: public System.Windows.Rect Bounds { get; }
    return:
      type: System.Windows.Rect
      description: "指が画面の接触している領域の境界。"
  overload: System.Windows.Input.TouchPoint.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.Position
  id: Position
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: Position
  nameWithType: TouchPoint.Position
  fullName: System.Windows.Input.TouchPoint.Position
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "タッチ ポイントの場所を取得します。"
  syntax:
    content: public System.Windows.Point Position { get; }
    return:
      type: System.Windows.Point
      description: "タッチ ポイントの場所です。"
  overload: System.Windows.Input.TouchPoint.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.Size
  id: Size
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: Size
  nameWithType: TouchPoint.Size
  fullName: System.Windows.Input.TouchPoint.Size
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "サイズを取得、<xref:System.Windows.Input.TouchPoint.Bounds*>プロパティ</xref:System.Windows.Input.TouchPoint.Bounds*>。"
  syntax:
    content: public System.Windows.Size Size { get; }
    return:
      type: System.Windows.Size
      description: "サイズ、<xref:System.Windows.Input.TouchPoint.Bounds*>プロパティ</xref:System.Windows.Input.TouchPoint.Bounds*>。"
  overload: System.Windows.Input.TouchPoint.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.System#IEquatable{System#Windows#Input#TouchPoint}#Equals(System.Windows.Input.TouchPoint)
  id: System#IEquatable{System#Windows#Input#TouchPoint}#Equals(System.Windows.Input.TouchPoint)
  isEii: true
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: System.IEquatable(TouchPoint)
  nameWithType: TouchPoint.System.IEquatable(TouchPoint)
  fullName: System.Windows.Input.TouchPoint.System.IEquatable(TouchPoint)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  syntax:
    content: bool IEquatable<TouchPoint>.Equals (System.Windows.Input.TouchPoint other);
    parameters:
    - id: other
      type: System.Windows.Input.TouchPoint
      description: "追加します。"
    return:
      type: System.Boolean
      description: "追加します。"
  overload: System.Windows.Input.TouchPoint.System#IEquatable<System#Windows#Input#TouchPoint>#Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Input.TouchPoint.TouchDevice
  id: TouchDevice
  parent: System.Windows.Input.TouchPoint
  langs:
  - csharp
  name: TouchDevice
  nameWithType: TouchPoint.TouchDevice
  fullName: System.Windows.Input.TouchPoint.TouchDevice
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: "これが発生したタッチ デバイスを取得<xref href=&quot;System.Windows.Input.TouchPoint&quot;></xref>です。"
  syntax:
    content: public System.Windows.Input.TouchDevice TouchDevice { get; }
    return:
      type: System.Windows.Input.TouchDevice
      description: "これが発生したタッチ デバイス<xref href=&quot;System.Windows.Input.TouchPoint&quot;></xref>です。"
  overload: System.Windows.Input.TouchPoint.TouchDevice*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Input.TouchPoint.#ctor(System.Windows.Input.TouchDevice,System.Windows.Point,System.Windows.Rect,System.Windows.Input.TouchAction)
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: TouchPoint(TouchDevice,Point,Rect,TouchAction)
  nameWithType: TouchPoint.TouchPoint(TouchDevice,Point,Rect,TouchAction)
  fullName: System.Windows.Input.TouchPoint.TouchPoint(TouchDevice,Point,Rect,TouchAction)
- uid: System.Windows.Input.TouchDevice
  parent: System.Windows.Input
  isExternal: false
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: System.Windows.Input.TouchDevice
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Rect
  parent: System.Windows
  isExternal: false
  name: Rect
  nameWithType: Rect
  fullName: System.Windows.Rect
- uid: System.Windows.Input.TouchAction
  parent: System.Windows.Input
  isExternal: false
  name: TouchAction
  nameWithType: TouchAction
  fullName: System.Windows.Input.TouchAction
- uid: System.Windows.Input.TouchPoint.Action
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Action
  nameWithType: TouchPoint.Action
  fullName: System.Windows.Input.TouchPoint.Action
- uid: System.Windows.Input.TouchPoint.Bounds
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Bounds
  nameWithType: TouchPoint.Bounds
  fullName: System.Windows.Input.TouchPoint.Bounds
- uid: System.Windows.Input.TouchPoint.Position
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Position
  nameWithType: TouchPoint.Position
  fullName: System.Windows.Input.TouchPoint.Position
- uid: System.Windows.Input.TouchPoint.Size
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Size
  nameWithType: TouchPoint.Size
  fullName: System.Windows.Input.TouchPoint.Size
- uid: System.Windows.Size
  parent: System.Windows
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Windows.Size
- uid: System.Windows.Input.TouchPoint.System#IEquatable{System#Windows#Input#TouchPoint}#Equals(System.Windows.Input.TouchPoint)
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: System.IEquatable(TouchPoint)
  nameWithType: TouchPoint.System.IEquatable(TouchPoint)
  fullName: System.Windows.Input.TouchPoint.System.IEquatable(TouchPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Input.TouchPoint
  parent: System.Windows.Input
  isExternal: false
  name: TouchPoint
  nameWithType: TouchPoint
  fullName: System.Windows.Input.TouchPoint
- uid: System.Windows.Input.TouchPoint.TouchDevice
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: TouchDevice
  nameWithType: TouchPoint.TouchDevice
  fullName: System.Windows.Input.TouchPoint.TouchDevice
- uid: System.Windows.Input.TouchPoint.#ctor*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: TouchPoint
  nameWithType: TouchPoint.TouchPoint
- uid: System.Windows.Input.TouchPoint.Action*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Action
  nameWithType: TouchPoint.Action
- uid: System.Windows.Input.TouchPoint.Bounds*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Bounds
  nameWithType: TouchPoint.Bounds
- uid: System.Windows.Input.TouchPoint.Position*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Position
  nameWithType: TouchPoint.Position
- uid: System.Windows.Input.TouchPoint.Size*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: Size
  nameWithType: TouchPoint.Size
- uid: System.Windows.Input.TouchPoint.System#IEquatable<System#Windows#Input#TouchPoint>#Equals*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: System.IEquatable<System.Windows.Input.TouchPoint>.Equals
  nameWithType: TouchPoint.System.IEquatable<System.Windows.Input.TouchPoint>.Equals
- uid: System.Windows.Input.TouchPoint.TouchDevice*
  parent: System.Windows.Input.TouchPoint
  isExternal: false
  name: TouchDevice
  nameWithType: TouchPoint.TouchDevice
