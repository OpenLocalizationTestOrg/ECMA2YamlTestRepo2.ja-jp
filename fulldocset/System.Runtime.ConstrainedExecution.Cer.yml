### YamlMime:ManagedReference
items:
- uid: System.Runtime.ConstrainedExecution.Cer
  id: Cer
  children:
  - System.Runtime.ConstrainedExecution.Cer.MayFail
  - System.Runtime.ConstrainedExecution.Cer.None
  - System.Runtime.ConstrainedExecution.Cer.Success
  langs:
  - csharp
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
  type: Enum
  summary: "制約された実行領域内で呼び出されたときに、メソッドの動作を指定します。"
  remarks: "Cer 列挙型では、メソッド、型、または制約された実行領域 (CER) 内にあるアセンブリの動作を指定します。 エンティティが成功になっていることを示すために使用できる&3; つの値のいずれかの使用は、CER の知識がないかを成功または失敗をレポートできなくなる可能性があります (確定的に)。       CER コード領域に実行される保証は、中断のない中止されたスレッドのメモリ不足の例外、またはスタック オーバーフローなど、非同期例外が発生した場合でもです。"
  example:
  - "The following code example demonstrates the use of the Cer enumeration when specifying a constrained execution region for a method. This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.  \n  \n [!code-vb[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/visualbasic/t-system.runtime.constra_2_1.vb)]\n [!code-cs[System.Runtime.ConstrainedExecution#3](~/add/codesnippet/csharp/t-system.runtime.constra_2_1.cs)]"
  syntax:
    content: public enum Cer
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  id: MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "例外条件は、メソッドが失敗する可能性があります。 この場合、メソッドに報告呼び出し元のメソッドが成功したか失敗しました。 メソッドには、戻り値を報告できることを確認するには、メソッドの本文の周り CER 必要があります。"
  syntax:
    content: MayFail
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.None
  id: None
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: 'メソッド、型、またはアセンブリには、CER の概念がありません。 CER 保証の利点は取りません。 これは、次を意味します。'
  remarks: "-例外条件は、メソッドが失敗します。      -メソッドは、可能性がありますか、失敗したレポートしない可能性があります (これは、非決定的です)。      -メソッドを念頭に置いては、最も可能性の高いシナリオ) Cer に書き込まれません。       暗黙的に設定されているメソッド、型、またはアセンブリが明示的にマークされていない場合は成功、`Cer.None`です。"
  syntax:
    content: None
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  id: Success
  parent: System.Runtime.ConstrainedExecution.Cer
  langs:
  - csharp
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.ConstrainedExecution
  summary: "例外条件は、メソッドが正常に保証されます。 常に CER 以外領域内から呼び出された場合でも、呼び出されるメソッドの周囲の CER を構築する必要があります。 メソッドは、どのようなものでは実行された場合は成功です。 たとえば、マークすること<xref:System.Collections.ArrayList.Count*>で`ReliabilityContractAttribute(Cer.Success)`、CER 下で実行されるときに常が返されることにある要素の数を意味、 <xref href=&quot;System.Collections.ArrayList&quot;> </xref>不定状態で内部フィールドを離れませんおよび</xref:System.Collections.ArrayList.Count*>。"
  syntax:
    content: Success
    return:
      type: System.Runtime.ConstrainedExecution.Cer
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Runtime.ConstrainedExecution.Cer.MayFail
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: MayFail
  nameWithType: Cer.MayFail
  fullName: System.Runtime.ConstrainedExecution.Cer.MayFail
- uid: System.Runtime.ConstrainedExecution.Cer
  parent: System.Runtime.ConstrainedExecution
  isExternal: false
  name: Cer
  nameWithType: Cer
  fullName: System.Runtime.ConstrainedExecution.Cer
- uid: System.Runtime.ConstrainedExecution.Cer.None
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: None
  nameWithType: Cer.None
  fullName: System.Runtime.ConstrainedExecution.Cer.None
- uid: System.Runtime.ConstrainedExecution.Cer.Success
  parent: System.Runtime.ConstrainedExecution.Cer
  isExternal: false
  name: Success
  nameWithType: Cer.Success
  fullName: System.Runtime.ConstrainedExecution.Cer.Success
