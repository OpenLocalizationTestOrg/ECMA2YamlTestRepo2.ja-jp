### YamlMime:ManagedReference
items:
- uid: System.Device.Location.GeoCoordinate
  id: GeoCoordinate
  children:
  - System.Device.Location.GeoCoordinate.#ctor
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  - System.Device.Location.GeoCoordinate.Altitude
  - System.Device.Location.GeoCoordinate.Course
  - System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Equals(System.Object)
  - System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.GetHashCode
  - System.Device.Location.GeoCoordinate.HorizontalAccuracy
  - System.Device.Location.GeoCoordinate.IsUnknown
  - System.Device.Location.GeoCoordinate.Latitude
  - System.Device.Location.GeoCoordinate.Longitude
  - System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  - System.Device.Location.GeoCoordinate.Speed
  - System.Device.Location.GeoCoordinate.ToString
  - System.Device.Location.GeoCoordinate.Unknown
  - System.Device.Location.GeoCoordinate.VerticalAccuracy
  langs:
  - csharp
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
  type: Class
  summary: "緯度と経度によって決定される地理的な場所を表す座標。 またなどがありますの高度精度、速度、コース情報。"
  syntax:
    content: 'public class GeoCoordinate : IEquatable<System.Device.Location.GeoCoordinate>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Device.Location.GeoCoordinate>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor
  id: '#ctor'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "新しいインスタンスを初期化<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>データ フィールドが設定されていません。"
  remarks: "すべてのデータ フィールドが<xref:System.Double.NaN>。</xref:System.Double.NaN>に設定されます。  <xref:System.Device.Location.GeoCoordinate> <xref:System.Device.Location.GeoCoordinate.Unknown>。</xref:System.Device.Location.GeoCoordinate.Unknown>と等価</xref:System.Device.Location.GeoCoordinate>の新しいインスタンス       このコンス トラクターは、シリアル化に使用する必要があります。"
  syntax:
    content: public GeoCoordinate ();
    parameters: []
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  id: '#ctor(System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>緯度と経度のデータからのクラスです。"
  remarks: "緯度と経度の値は必要があります、地球上の実際の場所に対応しています。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "場所の緯度です。 90.0 ~-90.0 から範囲可能性があります。"
    - id: longitude
      type: System.Double
      description: "場所の経度です。 範囲は-180.0 ~ 180.0 です。"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "緯度や経度は、範囲外です。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>緯度、経度、および高度のデータからのクラスです。"
  remarks: "緯度と経度の値は必要があります、地球上の実際の場所に対応しています。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude);
    parameters:
    - id: latitude
      type: System.Double
      description: "緯度です。 90.0 ~-90.0 から範囲可能性があります。"
    - id: longitude
      type: System.Double
      description: "経度です。 許容範囲は-180.0 180.0 ~"
    - id: altitude
      type: System.Double
      description: "メートル単位で高度です。 負の場合があります 0、正の値、または<xref:System.Double>不明な場合、</xref:System.Double> 。"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code>、 <code>longitude</code>、または<code>altitude</code>が範囲外です。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)'
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>緯度、経度、高度、精度の水平方向、垂直方向の精度、速度、およびコースからクラスです。"
  syntax:
    content: public GeoCoordinate (double latitude, double longitude, double altitude, double horizontalAccuracy, double verticalAccuracy, double speed, double course);
    parameters:
    - id: latitude
      type: System.Double
      description: "場所の緯度です。 90.0 ~-90.0 から範囲可能性があります。"
    - id: longitude
      type: System.Double
      description: "場所の経度です。 範囲は-180.0 ~ 180.0 です。"
    - id: altitude
      type: System.Double
      description: "メートル単位で高度です。 負の場合があります 0、正の値、または<xref:System.Double>不明な場合、</xref:System.Double> 。"
    - id: horizontalAccuracy
      type: System.Double
      description: "メートル単位での緯度と経度座標の精度。 0 以上にする必要があります。 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*> <xref:System.Double.NaN>。</xref:System.Double.NaN>プロパティを設定するが</xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy*>、このコンス トラクターに 0 の値を指定する場合"
    - id: verticalAccuracy
      type: System.Double
      description: "メートル単位での高度の精度。 0 以上にする必要があります。 <xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*> <xref:System.Double.NaN>。</xref:System.Double.NaN>プロパティを設定するが</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy*>、このコンス トラクターに 0 の値を指定する場合"
    - id: speed
      type: System.Double
      description: "速度は、1 秒あたりメートル単位で測定されます。 負の場合があります 0、正の値、または<xref:System.Double>不明な場合、</xref:System.Double> 。  負の速度は、逆の順序で移動を指定できます。"
    - id: course
      type: System.Double
      description: "印刷の向きではなく、移動の方向です。 このパラメーターは、true 北相対度数で測定されます。 範囲は 0 ~ 360.0 または<xref:System.Double>。</xref:System.Double>をする必要があります。"
  overload: System.Device.Location.GeoCoordinate.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>latitude</code>, <code>longitude</code>, <code>horizontalAccuracy</code>, <code>verticalAccuracy,</code> or <code>course</code> is out of range."
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Altitude
  id: Altitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "高度を取得、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>、メートル単位で。"
  remarks: "高度が sea レベルに対する与えられます。"
  syntax:
    content: public double Altitude { get; set; }
    return:
      type: System.Double
      description: "高度、メートル単位で。"
  overload: System.Device.Location.GeoCoordinate.Altitude*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Course
  id: Course
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または見出しを度、北米の場合は true に設定します。"
  remarks: "有効な範囲は 0.0 ~ 360.0 の値を含むと`Double.NaN`見出しが定義されていない場合。"
  example:
  - "The following example prints the Course and <xref:System.Device.Location.GeoCoordinate.Speed%2A> properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Course { get; set; }
    return:
      type: System.Double
      description: "True 北相対の角度での見出しです。"
  overload: System.Device.Location.GeoCoordinate.Course*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "コースは、有効範囲外に設定されています。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  id: Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "かどうかを<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>オブジェクトは緯度と経度のみに基づいて、パラメーターに相当します。"
  remarks: "等価<xref:System.Device.Location.GeoCoordinate>オブジェクトが同じである<xref:System.Device.Location.GeoCoordinate.Latitude%2A>と<xref:System.Device.Location.GeoCoordinate.Longitude%2A>プロパティ</xref:System.Device.Location.GeoCoordinate.Longitude%2A></xref:System.Device.Location.GeoCoordinate.Latitude%2A></xref:System.Device.Location.GeoCoordinate>。 <xref:System.Device.Location.GeoCoordinate.Altitude%2A>、 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>、および<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>に対して等価性を決定するプロパティは使用されません</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.Altitude%2A>。"
  syntax:
    content: public bool Equals (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>呼び出し元のオブジェクトと比較するオブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>オブジェクトが等しい。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "かどうかを指定した<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>が現在に等しい<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>のみに基づいて、緯度と経度です。"
  remarks: "等価<xref:System.Device.Location.GeoCoordinate>オブジェクトが同じである<xref:System.Device.Location.GeoCoordinate.Latitude%2A>と<xref:System.Device.Location.GeoCoordinate.Longitude%2A>プロパティ</xref:System.Device.Location.GeoCoordinate.Longitude%2A></xref:System.Device.Location.GeoCoordinate.Latitude%2A></xref:System.Device.Location.GeoCoordinate>。 <xref:System.Device.Location.GeoCoordinate.Altitude%2A>、 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>、および<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>に対して等価性を決定するプロパティは使用されません</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.Altitude%2A>。"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "比較するオブジェクト、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>にします。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>オブジェクトが等しい。 それ以外の場合、<xref uid=&quot;langword_csharp_ false&quot; name=&quot; false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  id: GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "これで指定されている緯度と経度座標の間の距離を返します<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>と指定した別<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>です。"
  remarks: "球面上の数式は距離の計算に使用されます。  球面上の数式は、地球の曲率のアカウントしますが、楕円体ではなく、球体地球を前提としています。 遠く離れた場所には、球面上の数式には、0.1% 未満のエラーが導入されています。       までの距離を計算する高度は使用されません。"
  syntax:
    content: public double GetDistanceTo (System.Device.Location.GeoCoordinate other);
    parameters:
    - id: other
      type: System.Device.Location.GeoCoordinate
      description: "<xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>までの距離を計算する場所です。"
    return:
      type: System.Double
      description: "メートル単位で、2 つの座標間の距離。"
  overload: System.Device.Location.GeoCoordinate.GetDistanceTo*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  id: GetHashCode
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "ハッシュ関数として機能、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>です。"
  remarks: "<xref:System.Device.Location.GeoCoordinate>等価であるオブジェクトでは、同じハッシュ コードがあります。</xref:System.Device.Location.GeoCoordinate> 等価<xref:System.Device.Location.GeoCoordinate>オブジェクトが同じである<xref:System.Device.Location.GeoCoordinate.Latitude%2A>と<xref:System.Device.Location.GeoCoordinate.Longitude%2A>プロパティ</xref:System.Device.Location.GeoCoordinate.Longitude%2A></xref:System.Device.Location.GeoCoordinate.Latitude%2A></xref:System.Device.Location.GeoCoordinate>。 <xref:System.Device.Location.GeoCoordinate.Altitude%2A>、 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>、および<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>に対して等価性を決定するプロパティは使用されません</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.Altitude%2A>。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在のハッシュ コード<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  id: HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または設定の緯度と経度で指定された精度、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>、メートル単位で。"
  remarks: "精度は、緯度と経度のデータの確実性の半径を見なすことができます。  円形の領域として中心として radius 緯度と経度座標の精度で形成されるには、実際の場所が含まれています。"
  syntax:
    content: public double HorizontalAccuracy { get; set; }
    return:
      type: System.Double
      description: "緯度と経度をメートル単位での精度。"
  overload: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "HorizontalAccuracy は、有効範囲外に設定されています。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  id: IsUnknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>緯度や経度のデータは含まれません。"
  remarks: "<xref:System.Device.Location.GeoCoordinate>緯度を格納していないか経度のデータと<xref:System.Device.Location.GeoCoordinate.Unknown>。</xref:System.Device.Location.GeoCoordinate.Unknown>等しい</xref:System.Device.Location.GeoCoordinate>"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is <xref:System.Device.Location.GeoCoordinate.Unknown> before printing out its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public bool IsUnknown { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>緯度や経度のデータは含まれません。 それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.IsUnknown*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Latitude
  id: Latitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または設定の緯度、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>です。"
  remarks: "緯度の範囲は-90.0 90.0 ~ です。 北または南、赤道から緯度は度数で測定されます。 正の値は、赤道の北、負の値、赤道南します。"
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Latitude { get; set; }
    return:
      type: System.Double
      description: "場所の緯度です。"
  overload: System.Device.Location.GeoCoordinate.Latitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "緯度は、有効範囲外に設定されています。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Longitude
  id: Longitude
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または設定の経度、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>です。"
  remarks: "経度の範囲は-180.0 180.0 です。 子午線から東または経度は度数で測定されます。 負の値は、子午線、西、正の値の子午線です。"
  example:
  - "The following example prints the latitude and longitude values that are obtained from a <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-vb[System.Device.Location.LocationEvent1#1](~/add/codesnippet/visualbasic/locationevent/locationevent.vb#1)]\n [!code-cs[System.Device.Location.LocationEvent1#1](~/add/codesnippet/csharp/locationevent/locationevent.cs#1)]"
  syntax:
    content: public double Longitude { get; set; }
    return:
      type: System.Double
      description: "経度です。"
  overload: System.Device.Location.GeoCoordinate.Longitude*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "経度は、有効範囲外に設定されています。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>オブジェクトが同じ場所を参照してください。"
  remarks: "等価<xref:System.Device.Location.GeoCoordinate>オブジェクトが同じである<xref:System.Device.Location.GeoCoordinate.Latitude%2A>と<xref:System.Device.Location.GeoCoordinate.Longitude%2A>プロパティ</xref:System.Device.Location.GeoCoordinate.Longitude%2A></xref:System.Device.Location.GeoCoordinate.Latitude%2A></xref:System.Device.Location.GeoCoordinate>。 <xref:System.Device.Location.GeoCoordinate.Altitude%2A>、 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>、および<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>に対して等価性を決定するプロパティは使用されません</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.Altitude%2A>。"
  syntax:
    content: public static bool op_Equality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "最初の<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>を比較します。"
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "2 番目<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>に同等です。 それ以外の場合、あるオブジェクトと判断<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  id: op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  type: Operator
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "2 つあるかどうかを決定<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>オブジェクトが別の場所に対応します。"
  remarks: "等価<xref:System.Device.Location.GeoCoordinate>オブジェクトが同じである<xref:System.Device.Location.GeoCoordinate.Latitude%2A>と<xref:System.Device.Location.GeoCoordinate.Longitude%2A>プロパティ</xref:System.Device.Location.GeoCoordinate.Longitude%2A></xref:System.Device.Location.GeoCoordinate.Latitude%2A></xref:System.Device.Location.GeoCoordinate>。 <xref:System.Device.Location.GeoCoordinate.Altitude%2A>、 <xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A>、および<xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A>に対して等価性を決定するプロパティは使用されません</xref:System.Device.Location.GeoCoordinate.VerticalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.HorizontalAccuracy%2A></xref:System.Device.Location.GeoCoordinate.Altitude%2A>。"
  syntax:
    content: public static bool op_Inequality (System.Device.Location.GeoCoordinate left, System.Device.Location.GeoCoordinate right);
    parameters:
    - id: left
      type: System.Device.Location.GeoCoordinate
      description: "最初の<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>を比較します。"
    - id: right
      type: System.Device.Location.GeoCoordinate
      description: "2 番目<xref href=&quot;System.Device.Location.GeoCoordinate&quot;></xref>を比較します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>、場合、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>オブジェクトを、それ以外のさまざまな判断される<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Device.Location.GeoCoordinate.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Speed
  id: Speed
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または&1; 秒あたりメートル単位で速度を設定します。"
  remarks: ''
  example:
  - "The following example prints the <xref:System.Device.Location.GeoCoordinate.Course%2A> and Speed properties of the current location's <xref:System.Device.Location.GeoCoordinate>.  \n  \n [!code-cs[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/csharp/courseandspeed/courseandspeed.cs#2)]\n [!code-vb[System.Device.Location.CourseAndSpeed#2](~/add/codesnippet/visualbasic/courseandspeed/courseandspeed.vb#2)]"
  syntax:
    content: public double Speed { get; set; }
    return:
      type: System.Double
      description: "1 秒あたりのメーターの速度です。 速度が&0;、または<xref:System.Double>。</xref:System.Double>以上にする必要があります。"
  overload: System.Device.Location.GeoCoordinate.Speed*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: System.ArgumentOutOfRangeException
    description: "速度は、有効範囲外に設定されています。"
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.ToString
  id: ToString
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
  type: Method
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "緯度と経度を表す文字列を返します。"
  remarks: "このメソッドによって返される文字列の形式はもののみデバッグでの使用です。 このメソッドは、任意のロケール固有の書式設定の緯度と経度は返されません。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "緯度と経度、コンマで区切られたを表す文字列。"
  overload: System.Device.Location.GeoCoordinate.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.Unknown
  id: Unknown
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
  type: Field
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "表す、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>された不明なオブジェクト緯度と経度のフィールドです。"
  remarks: "<xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>プロパティは、ことを確認するために使用できるかどうか、<xref:System.Device.Location.GeoCoordinate>データが含まれていません</xref:System.Device.Location.GeoCoordinate></xref:System.Device.Location.GeoCoordinate.IsUnknown%2A>。"
  example:
  - "The following code example verifies whether the <xref:System.Device.Location.GeoCoordinate> that corresponds to a location is Unknown before printingout its latitude and longitude.  \n  \n [!code-cs[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/csharp/getlocationdatasynchandleunknown/getlocationdatasynchandleunknown.cs#1)]\n [!code-vb[System.Device.Location.GetLocationDataSyncHandleUnknown#1](~/add/codesnippet/visualbasic/System.Device.Location.GetLocationDataSyncHandleUnknown/GetLocationDataSyncHandleUnknown.vb#1)]"
  syntax:
    content: public static readonly System.Device.Location.GeoCoordinate Unknown;
    return:
      type: System.Device.Location.GeoCoordinate
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  id: VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  langs:
  - csharp
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
  type: Property
  assemblies:
  - System.Device
  namespace: System.Device.Location
  summary: "取得または設定によって指定された高度の精度、 <xref href=&quot;System.Device.Location.GeoCoordinate&quot;> </xref>、メートル単位で。"
  syntax:
    content: public double VerticalAccuracy { get; set; }
    return:
      type: System.Double
      description: "メートル単位での高度の精度。"
  overload: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "VerticalAccuracy は、有効範囲外に設定されています。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Device.Location.GeoCoordinate.#ctor
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate()
  nameWithType: GeoCoordinate.GeoCoordinate()
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate()
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  nameWithType: GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
  fullName: System.Device.Location.GeoCoordinate.GeoCoordinate(Double,Double,Double,Double,Double,Double,Double)
- uid: System.Device.Location.GeoCoordinate.Altitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
  fullName: System.Device.Location.GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
  fullName: System.Device.Location.GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(GeoCoordinate)
  nameWithType: GeoCoordinate.Equals(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.Equals(GeoCoordinate)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Device.Location.GeoCoordinate
  parent: System.Device.Location
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate
  fullName: System.Device.Location.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Equals(System.Object)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals(Object)
  nameWithType: GeoCoordinate.Equals(Object)
  fullName: System.Device.Location.GeoCoordinate.Equals(Object)
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo(GeoCoordinate)
  nameWithType: GeoCoordinate.GetDistanceTo(GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.GetDistanceTo(GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.GetHashCode
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode()
  nameWithType: GeoCoordinate.GetHashCode()
  fullName: System.Device.Location.GeoCoordinate.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
  fullName: System.Device.Location.GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
  fullName: System.Device.Location.GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
  fullName: System.Device.Location.GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
  fullName: System.Device.Location.GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Equality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality(GeoCoordinate,GeoCoordinate)
  nameWithType: GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
  fullName: System.Device.Location.GeoCoordinate.op_Inequality(GeoCoordinate,GeoCoordinate)
- uid: System.Device.Location.GeoCoordinate.Speed
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
  fullName: System.Device.Location.GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString()
  nameWithType: GeoCoordinate.ToString()
  fullName: System.Device.Location.GeoCoordinate.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Device.Location.GeoCoordinate.Unknown
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Unknown
  nameWithType: GeoCoordinate.Unknown
  fullName: System.Device.Location.GeoCoordinate.Unknown
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
  fullName: System.Device.Location.GeoCoordinate.VerticalAccuracy
- uid: System.Device.Location.GeoCoordinate.#ctor*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GeoCoordinate
  nameWithType: GeoCoordinate.GeoCoordinate
- uid: System.Device.Location.GeoCoordinate.Altitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Altitude
  nameWithType: GeoCoordinate.Altitude
- uid: System.Device.Location.GeoCoordinate.Course*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Course
  nameWithType: GeoCoordinate.Course
- uid: System.Device.Location.GeoCoordinate.Equals*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Equals
  nameWithType: GeoCoordinate.Equals
- uid: System.Device.Location.GeoCoordinate.GetDistanceTo*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetDistanceTo
  nameWithType: GeoCoordinate.GetDistanceTo
- uid: System.Device.Location.GeoCoordinate.GetHashCode*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: GetHashCode
  nameWithType: GeoCoordinate.GetHashCode
- uid: System.Device.Location.GeoCoordinate.HorizontalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: HorizontalAccuracy
  nameWithType: GeoCoordinate.HorizontalAccuracy
- uid: System.Device.Location.GeoCoordinate.IsUnknown*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: IsUnknown
  nameWithType: GeoCoordinate.IsUnknown
- uid: System.Device.Location.GeoCoordinate.Latitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Latitude
  nameWithType: GeoCoordinate.Latitude
- uid: System.Device.Location.GeoCoordinate.Longitude*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Longitude
  nameWithType: GeoCoordinate.Longitude
- uid: System.Device.Location.GeoCoordinate.op_Equality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Equality
  nameWithType: GeoCoordinate.op_Equality
- uid: System.Device.Location.GeoCoordinate.op_Inequality*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: op_Inequality
  nameWithType: GeoCoordinate.op_Inequality
- uid: System.Device.Location.GeoCoordinate.Speed*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: Speed
  nameWithType: GeoCoordinate.Speed
- uid: System.Device.Location.GeoCoordinate.ToString*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: ToString
  nameWithType: GeoCoordinate.ToString
- uid: System.Device.Location.GeoCoordinate.VerticalAccuracy*
  parent: System.Device.Location.GeoCoordinate
  isExternal: false
  name: VerticalAccuracy
  nameWithType: GeoCoordinate.VerticalAccuracy
