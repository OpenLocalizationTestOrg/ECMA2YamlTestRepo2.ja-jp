### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceBehaviorAttribute
  id: ServiceBehaviorAttribute
  children:
  - System.ServiceModel.ServiceBehaviorAttribute.#ctor
  - System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  - System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  - System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  - System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  - System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  - System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  - System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  - System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  - System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  - System.ServiceModel.ServiceBehaviorAttribute.Name
  - System.ServiceModel.ServiceBehaviorAttribute.Namespace
  - System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  - System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  - System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  - System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  langs:
  - csharp
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute
  fullName: System.ServiceModel.ServiceBehaviorAttribute
  type: Class
  summary: "サービス コントラクトの実装の内部実行動作を指定します。"
  remarks: "ServiceBehaviorAttribute 属性をサービス全体の実行動作を指定するサービスの実装に適用されます。 (メソッド レベルでの実行動作を指定するには、使用、<xref:System.ServiceModel.OperationBehaviorAttribute>属性です)</xref:System.ServiceModel.OperationBehaviorAttribute> 。この属性は、サービスの実装にのみ適用できます。 実施例については、次を参照してください。、[サービスの動作サンプル](http://msdn.microsoft.com/en-us/4e3c6513-a7ff-4b35-8dcf-b5506c6f39a7)です。       ServiceBehaviorAttribute プロパティは、[!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]プログラミング モデルの機能を開発者がそれ以外の場合は、実装する必要がある一般的な機能を有効にします。 これらおよびその他の動作に関する詳細については、次を参照してください。[サービスの実行時の動作を指定する](~/add/includes/ajax-current-ext-md.md)です。 基になるランタイム プロパティの詳細については、次のプロパティ セットの一部を参照してください[ServiceHost を拡張して、サービス モデル レイヤー](~/add/includes/ajax-current-ext-md.md)です。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>プロパティは、ディスパッチャー システムが使用して要求を処理するエンドポイントを検索するフィルターの種類を指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>プロパティは、チャネルが閉じられ、サービスの残りのメッセージがすべての処理が完了すると、セッションを自動的に閉じます</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>プロパティは再入可能またはマルチ スレッド サービスのサポートを有効にすると、内部スレッド モデルを制御します</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>で使用するための名前を宣言するプロパティを使用、`name`の属性、`<service>`構成ファイル内の要素</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>プロパティを使用してメッセージを処理する必要がない余分なシリアル化情報を無視するランタイム</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>プロパティは、サービスでハンドルされない例外を SOAP エラーとして返されるかどうかを指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>。 これはデバッグ目的でのみです。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>プロパティは、サービスとそれらのサービス オブジェクトは、クライアントとのメッセージ交換時にリサイクルするかどうかとタイミングを指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>シリアル化されるオブジェクト グラフ内のアイテムの数に制限するプロパティ</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>と<xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>プロパティ名と名前空間サービス要素の WSDL 表現を制御します</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A></xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>プロパティは、トランザクションが完了すると、サービス オブジェクトをリサイクルするかどうかを指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>プロパティは、セッションを閉じるときに、未処理のトランザクションが完了したかどうかを指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>プロパティ、コントラクトがサポートするトランザクション分離レベルを指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>プロパティは、トランザクションを完了する必要がありますか中止される制限時間を指定します</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>プロパティは、ユーザー インターフェイス スレッドを受信したメソッド呼び出しを自動的に同期するかどうかを示します</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>プロパティは、としてマークされた SOAP ヘッダーを確認する必要があるかどうかをシステムに通知`MustUnderstand`、実際には、認識された</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>。       <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>プロパティは、アプリケーション構成ファイルを使用して設定することもできます</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>。 詳細については、 <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>。</xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A>を参照してください。"
  example:
  - "The following code example demonstrates the ServiceBehaviorAttribute properties. The `BehaviorService` class uses the ServiceBehaviorAttribute attribute to indicate that:  \n  \n-   The service object is recycled when the transaction completes.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public sealed class ServiceBehaviorAttribute : Attribute, System.ServiceModel.Description.IServiceBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.ServiceBehaviorAttribute&quot;> </xref>クラスです。"
  remarks: "に対して、既定値、<xref:System.ServiceModel.ServiceBehaviorAttribute>いる:- <xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A> <xref:System.ServiceModel.AddressFilterMode>.</xref:System.ServiceModel.AddressFilterMode>に設定されている</xref:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode%2A></xref:System.ServiceModel.ServiceBehaviorAttribute>      -<xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>プロパティは`true`</xref:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown%2A>。      - <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> <xref:System.ServiceModel.ConcurrencyMode>。</xref:System.ServiceModel.ConcurrencyMode>に設定されています。</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>プロパティは、アセンブリ情報なしで型の名前空間で修飾された名前</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>プロパティは`false`</xref:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>プロパティが 64 KB に設定します</xref:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>プロパティは、名前空間またはアセンブリの情報がない場合、サービスの種類の名前</xref:System.ServiceModel.ServiceBehaviorAttribute.Name%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>プロパティが&quot;http://tempuri.org&quot;です</xref:System.ServiceModel.ServiceBehaviorAttribute.Namespace%2A>。      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>プロパティは`true`</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>。      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A> is `false`.</xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A>      -   <xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A> is `true`.</xref:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext%2A>      -<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>プロパティは`false`</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose%2A>。      <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A>プロパティは<xref:System.Transactions.IsolationLevel>。</xref:System.Transactions.IsolationLevel> </xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel%2A> -      - <xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A> <xref:System.TimeSpan.Zero>。</xref:System.TimeSpan.Zero>にプロパティが設定されています。</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout%2A>      -<xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>プロパティは`true`</xref:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand%2A>。"
  syntax:
    content: public ServiceBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  id: AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または設定、 <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref>受信メッセージを適切なエンドポイントにルーティングするディスパッチャーによって使用されます。"
  syntax:
    content: public System.ServiceModel.AddressFilterMode AddressFilterMode { get; set; }
    return:
      type: System.ServiceModel.AddressFilterMode
      description: "<xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref>ディスパッチャーが受信メッセージを適切なエンドポイントにルーティングするために使用できるオブジェクト。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.ServiceModel.AddressFilterMode&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  id: AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "クライアントが出力セッションを閉じたときにセッションを自動的に閉じるかどうかを指定します。"
  remarks: "既定では、クライアントが出力セッションを閉じるし、サービスの残りのメッセージがすべての処理が終了したときに、サーバーはセッションを閉じます。 設定 AutomaticSessionShutdown`false`により、サーバーを自動的にセッションを閉じると、セッションの有効期間のカスタム制御が可能です。"
  syntax:
    content: public bool AutomaticSessionShutdown { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サービスが自動的にクライアントが、出力セッションを閉じたときにセッションを閉じる場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  id: ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはサービスが&1; つのスレッド、複数のスレッド、または再入可能呼び出しをサポートするかどうかを設定します。"
  remarks: "このプロパティは、およびサービスのインスタンスは、1 つのスレッドまたは同時に実行される複数のスレッドを処理できるかどうかを示します。 シングル スレッドで、かどうか再入をサポートします。      > [!NOTE] >、ConcurrencyMode プロパティは、その他のいくつかの設定と対話します。 たとえば場合、の<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>値は<xref:System.ServiceModel.InstanceContextMode>、結果はサービスが<xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode>ConcurrencyMode 値も設定しない限り、一度に&1; つのメッセージを処理のみを</xref:System.ServiceModel.InstanceContextMode>に設定</xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>。 このプロパティと組み合わせて動作も生成されます、<xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>プロパティ</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>。 詳細については、「[セッション、インスタンス化、および同時実行](~/add/includes/ajax-current-ext-md.md)です。       設定<xref:System.ServiceModel.ConcurrencyMode>に<xref:System.ServiceModel.ConcurrencyMode>1 つのスレッドの実行時に、スレッド処理の問題に対応することから解放するのに、サービスのインスタンスを制限するシステムに指示します</xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode>。 値<xref:System.ServiceModel.ConcurrencyMode>任意の時点で複数のスレッドで実行できるサービス オブジェクトを示します</xref:System.ServiceModel.ConcurrencyMode>。 この場合、スレッド セーフを確保する必要があります。       <xref:System.ServiceModel.ConcurrencyMode>同時に&1; つのスレッドへのアクセスを制限します。操作は処理中に他のメッセージ操作に加わることなしです。</xref:System.ServiceModel.ConcurrencyMode> 操作中に別のサービスへの呼び出しを離れると、現在のメッセージは他のメッセージの処理が可能にすると、操作のロックを失います。 サービスのコール アウトが戻る、ロックが再確立し、元のメッセージは、最後に、または別のコール アウトが発生するまで処理を続行できます。      > [!IMPORTANT] > にもかかわらず<xref:System.ServiceModel.ConcurrencyMode>インスタンスを制限、同時実行の 1 つのスレッドにサービスの設定も必要<xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A>を 1 に、順序不定なメッセージはありません</xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentCalls%2A></xref:System.ServiceModel.ConcurrencyMode>。   >> コールアウトの前に一貫性のあるオブジェクトの状態のままにする必要がまた、操作のローカル データがコール アウト後有効であることを確認する必要があります。 サービス インスタンスが経由で別のサービスを呼び出すことによってのみロックを解除する、[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)]チャネル。 ここでは、呼び出されたサービスは、コールバックを使用して最初のサービスを再入力できます。 最初のサービスが再入可能でない場合、一連の呼び出し結果、デッドロックが発生します。 詳細については、 <xref:System.ServiceModel.ConcurrencyMode>。</xref:System.ServiceModel.ConcurrencyMode>を参照してください。       処理操作から送信呼び出しには、中には、操作にローカルではないデータを変更することができます。 (ローカル状態データは保証、元のメッセージが処理を再開したときに有効になります。)その結果、送信呼び出しの前にローカルでない他の受信呼び出しにとって有効では、そのデータ、送信呼び出しが戻った後に、ローカル以外のデータを再検証を確認する必要があります。       次の擬似コードは、再入を正常にサポートに必要なパターンを示しています。      ```c#   public void MyMethod()   {     this.SomeNonLocalDataState;     // Here you need to clean nonlocal state for other users     OutboundProxy proxy = new OutboundProxy();     int returnValue = proxy.CallOutOfOperation();     // Ensure that this.SomeNonLocalDataState is valid for continued use.     this.ModifyNonLocalState;     return returnValue;   }      ```送信呼び出しの Begin/end 非同期呼び出しパターンを使用して、ConcurrencyMode が<xref:System.ServiceModel.ConcurrencyMode>、例外が発生します</xref:System.ServiceModel.ConcurrencyMode>。 非同期の送信呼び出し ConcurrencyMode の操作を必要と<xref:System.ServiceModel.ConcurrencyMode>、後者の同期に関する問題を処理する必要があります</xref:System.ServiceModel.ConcurrencyMode>。       一般に場合は、同時実行モードに違反するインスタンス メッセージが到着すると、メッセージは、インスタンスが使用可能なまたはタイムアウトになるまで待機します。       さらに場合、<xref:System.ServiceModel.ConcurrencyMode>に設定されている<xref:System.ServiceModel.ConcurrencyMode>解放されるインスタンスの待機中に再入可能呼び出しがブロックされると、システムはデッドロックを検出し、例外をスローします</xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode>。      > [!NOTE] > A<xref:System.InvalidOperationException>場合に、実行時にスローされる<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>は`true` <xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode> ConcurrencyMode プロパティを設定すると</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A></xref:System.InvalidOperationException>。       明示的に設定する必要があります注<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>に`false`使用して、操作がある場合<xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName>に設定<xref:System.ServiceModel.ConcurrencyMode></xref:System.ServiceModel.ConcurrencyMode>ConcurrencyMode を設定して true</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> 。 に検証例外をスローするそれ以外の場合、既定値の<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>は`true`</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A>。       ConcurrencyMode と実行時の動作を変更するその他のプロパティの対話ができます。 これらの相互作用の詳細については、次を参照してください。[セッション、インスタンス化、および同時実行](../Topic/Sessions,%20Instancing,%20and%20Concurrency.md)です。"
  example:
  - "The following code example demonstrates the different between using <xref:System.ServiceModel.ConcurrencyMode>, <xref:System.ServiceModel.ConcurrencyMode>, and <xref:System.ServiceModel.ConcurrencyMode>. This sample does not compile without a real implementation behind it, but does demonstrate the kind of threading guarantees that [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] makes and what that means for your operation code.  \n  \n [!code-cs[C_BestPractices-Concurrency#1](~/add/codesnippet/csharp/reentrantandmultiple/reentrantandmultiple.cs#1)]"
  syntax:
    content: public System.ServiceModel.ConcurrencyMode ConcurrencyMode { get; set; }
    return:
      type: System.ServiceModel.ConcurrencyMode
      description: "1 つ、 <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref>値以外の既定値は<xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.ServiceModel.ConcurrencyMode&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  id: ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはアプリケーション構成ファイル内でサービス要素を検索するための値を設定します。"
  remarks: "この値を使用すると、構成ファイルで特定のサービスを指定できます。"
  syntax:
    content: public string ConfigurationName { get; set; }
    return:
      type: System.String
      description: "構成ファイル内で検索する値。 既定値は、アセンブリ情報を持たない完全修飾型名です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値は null です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、空の文字列です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  id: EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または順番どおりのディスパッチ、サービスことを確認するかどうかを示す値を設定します。"
  syntax:
    content: public bool EnsureOrderedDispatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>サービスの順番どおりのディスパッチは保証です。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  id: GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービスを実装して、サービスのシングルトン インスタンスとして使用されるオブジェクトを取得または<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>シングルトン インスタンスがない場合。"
  remarks: "以外`null`値は、サービス宛てのすべてのメッセージをディスパッチするサービス インスタンスを提供します。"
  syntax:
    content: public object GetWellKnownSingleton ();
    parameters: []
    return:
      type: System.Object
      description: "サービスの実装です。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  id: IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または不明なシリアル化データをネットワークに送信するかどうかを示す値を設定します。"
  remarks: "If a type implements the <xref:System.Runtime.Serialization.IExtensibleDataObject> interface, it stores any extra data it doesn’t know about that comes over the wire when deserializing into that type. For example, if a type `Person` has members `FirstName` and `LastName`, and an element called `PhoneNumber` comes in, it is stored. When later serializing the type, `PhoneNumber` will be re-emitted. The problem is that the schema for `Person` exported by that service only has `FirstName` and `LastName`, so [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] generates a schema-invalid instance! If strict schema compliance is important, you can set IgnoreExtensionDataObject to `true` to turn this re-emitting behavior off.  \n  \n Regardless IgnoreExtensionDataObject setting, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] always processes known data (both in and out) and does not throw exceptions when extra data comes in. You can also set this property using the [\\&lt;dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md) element in an application configuration file."
  example:
  - "The following example shows the use of IgnoreExtensionDataObject and an implementation of <xref:System.Runtime.Serialization.IExtensibleDataObject>. In this sample, with IgnoreExtensionDataObject set to `false`, the extra data that the client knows about is round-tripped back to the client.  \n  \n [!code-cs[DCAContainerNoValidation#1](~/add/codesnippet/csharp/dcacontainernovalidation.client/services.cs#1)]"
  syntax:
    content: public bool IgnoreExtensionDataObject { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>不明なシリアル化データが送信されることはありません。 場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  id: IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または一般的な未処理の実行例外に変換することを指定する値を設定、 &lt;xref:System.ServiceModel.FaultException%601?displayProperty=fullName&gt;型の&lt;xref:System.ServiceModel.ExceptionDetail?displayProperty=fullName&gt;フォールト メッセージとして送信します。 これを設定して<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サービスをトラブルシューティングする開発時のみです。"
  remarks: "Set IncludeExceptionDetailInFaults to `true` to enable exception information to flow to clients for debugging purposes. This property requires a binding that supports either request-response or duplex messaging.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications, methods that implement service operations communicate error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] applications execute under both types of error systems, any managed exception information that needs to be sent to the client must be converted from exceptions into SOAP faults. For more information, see [Specifying and Handling Faults in Contracts and Services](~/add/includes/ajax-current-ext-md.md).  \n  \n During development, you may want your service to also send other exceptions back to the client to assist you in debugging. This is a development-only feature and should not be employed in deployed services.  \n  \n To facilitate debugging development, set the IncludeExceptionDetailInFaults to `true` either in code or using an application configuration file.  \n  \n When enabled, the service automatically returns safer exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException%601> objects of type <xref:System.ServiceModel.ExceptionDetail>.  \n  \n> [!IMPORTANT]\n>  Setting IncludeExceptionDetailInFaultsto `true` enables clients to obtain information about internal service method exceptions; it is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.ServiceModel.ExceptionDetail>. Clients must expect the possibility of an unknown SOAP fault to obtain the debugging information properly.  \n  \n Setting this property to `true` can also be done using an application configuration file and the [\\&lt;serviceDebug\\&gt;](../Topic/%3CserviceDebug%3E.md) element, as the following code example shows.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool IncludeExceptionDetailInFaults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>未処理の例外は、SOAP エラー; として返される場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  id: InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または新しいサービス オブジェクトの作成時に示す値を設定します。"
  remarks: "使用して、<xref:System.ServiceModel.InstanceContextMode>プロパティを新しいサービス オブジェクトの作成時に指定する</xref:System.ServiceModel.InstanceContextMode>。 サービス オブジェクトが、通信チャネルに直接接続されていないため、サービス オブジェクトの有効期間は、クライアントとサービス アプリケーション間のチャネルの有効期間の独立したです。 既定値は<xref:System.ServiceModel.InstanceContextMode>、クライアントとサービス アプリケーションの間で新しい通信セッションが確立されたときに、新しいサービス オブジェクトを作成するサービス アプリケーションに指示します</xref:System.ServiceModel.InstanceContextMode>。 同じセッションで後続の呼び出しは、同じオブジェクトによって処理されます。       <xref:System.ServiceModel.InstanceContextMode>各サービス オブジェクトが&1; つのクライアント チャネルからの要求を処理することを示します。</xref:System.ServiceModel.InstanceContextMode>      > [!NOTE] >、InstanceContextMode プロパティがその他のいくつかの設定と対話します。 たとえば、InstanceContextMode 値は<xref:System.ServiceModel.InstanceContextMode>、結果は<xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A><xref:System.ServiceModel.ConcurrencyMode>。</xref:System.ServiceModel.ConcurrencyMode>値</xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A>も設定していない場合、サービスが、一度に&1; つのプロセス メッセージのみをできること</xref:System.ServiceModel.InstanceContextMode>に設定 このプロパティと組み合わせて動作も生成されます、<xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>プロパティ</xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=fullName>。 詳細については、「[セッション、インスタンス化、および同時実行](~/add/includes/ajax-current-ext-md.md)です。       シングルトン有効期間動作 (ホスト アプリケーションを呼び出す場合など、<xref:System.ServiceModel.ServiceHost.%23ctor%2A>コンス トラクター、サービスとして使用するオブジェクトを渡す)、サービス クラスに InstanceContextMode を設定する必要があります`Single`、または実行時に、例外がスローされます</xref:System.ServiceModel.ServiceHost.%23ctor%2A>。"
  example:
  - "The following code example demonstrates the <xref:System.ServiceModel.ServiceBehaviorAttribute> properties. The `BehaviorService` class uses the <xref:System.ServiceModel.ServiceBehaviorAttribute> attribute to indicate that:  \n  \n-   Implementation methods are invoked on the UI thread.  \n  \n-   There is one service object for each session.  \n  \n-   The service is single-threaded and does not support reentrant calls.  \n  \n Furthermore, at the operation level, the <xref:System.ServiceModel.OperationBehaviorAttribute> values indicate that the `TxWork` method automatically enlists in flowed transactions or creates a new transaction to do the work, and that the transaction is committed automatically if an unhandled exception does not occur.  \n  \n [!code-cs[OperationBehaviorAttribute1#2](~/add/codesnippet/csharp/operationbehaviorattribute1.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute1#2](~/add/codesnippet/visualbasic/operationbehaviorattribute1.client/services.vb#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows the configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.ServiceModel.InstanceContextMode InstanceContextMode { get; set; }
    return:
      type: System.ServiceModel.InstanceContextMode
      description: "1 つ、 <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>値以外の既定値は<xref href=&quot;System.ServiceModel.InstanceContextMode&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.ServiceModel.InstanceContextMode&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  id: MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはシリアル化されたオブジェクトで許可される項目の最大数を設定します。"
  remarks: "プロパティは、シリアル化されるオブジェクト グラフ内のアイテムの数に制限を設定 MaxItemsInObjectGraph を使用します。 使用してこのプロパティを設定することも、 [ \\&lt; dataContractSerializer\\&gt;](../Topic/%3CdataContractSerializer%3E.md)アプリケーション構成ファイル内の要素。"
  syntax:
    content: public int MaxItemsInObjectGraph { get; set; }
    return:
      type: System.Int32
      description: "オブジェクトで許可される項目の最大数。 既定では 65536 バイト (64 KB) です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  id: Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または Web サービス記述言語 (WSDL) でのサービス要素の name 属性の値を設定します。"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "内の name 属性の値、 <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref>要素のエクスポート時にします。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または Web サービス記述言語 (WSDL) で、サービスのターゲットの名前空間の値を設定します。"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "値、 <xref uid=&quot;langword_csharp_targetNamespace&quot; name=&quot;targetNamespace&quot; href=&quot;&quot;> </xref>属性を<xref uid=&quot;langword_csharp_&lt;wsdl:definitions&gt;&quot; name=&quot;&lt;wsdl:definitions&gt;&quot; href=&quot;&quot;></xref>要素を含む、 <xref uid=&quot;langword_csharp_&lt;wsdl:service&gt;&quot; name=&quot;&lt;wsdl:service&gt;&quot; href=&quot;&quot;> </xref>要素。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  id: ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または現在のトランザクションが完了したときに、サービス オブジェクトを解放するかどうかを指定する値を設定します。"
  remarks: "Note that you must explicitly set ReleaseServiceInstanceOnTransactionComplete to `false` if there is an operation with <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=fullName> set to true and you set <xref:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode%2A> to <xref:System.ServiceModel.ConcurrencyMode>. Otherwise a validation exception is thrown because the default value of ReleaseServiceInstanceOnTransactionComplete is `true`.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were `false`."
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, disables support for concurrent transactions, requires a flowed transaction from the operation call, and commits the transaction on the service automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool ReleaseServiceInstanceOnTransactionComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、サービス オブジェクトが解放されます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  id: SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービスを実装して、サービスのシングルトン インスタンスとして使用されるオブジェクトを指定します。"
  remarks: "これは、サービス宛てのすべてのメッセージをディスパッチするサービス インスタンスを提供します。       SetWellKnownSingleton が以外に設定されている場合`null`値、<xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>に設定する必要があります<xref:System.ServiceModel.InstanceContextMode>または<xref:System.InvalidOperationException>がスローされます</xref:System.InvalidOperationException></xref:System.ServiceModel.InstanceContextMode></xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A>。"
  syntax:
    content: public void SetWellKnownSingleton (object value);
    parameters:
    - id: value
      type: System.Object
      description: "サービスのシングルトン インスタンス。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "設定値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  id: ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>。"
  syntax:
    content: public bool ShouldSerializeConfigurationName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*> 。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  id: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>。"
  syntax:
    content: public bool ShouldSerializeReleaseServiceInstanceOnTransactionComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*> 。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  id: ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>。"
  syntax:
    content: public bool ShouldSerializeTransactionAutoCompleteOnSessionClose ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*> 。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  id: ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>。"
  syntax:
    content: public bool ShouldSerializeTransactionIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*> 。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  id: ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "示す値を返すかどうか、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>プロパティがその既定値から変更し、シリアル化する必要があります</xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>。"
  syntax:
    content: public bool ShouldSerializeTransactionTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、<xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*>プロパティの値が、それ以外のシリアル化する必要があります<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*> 。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "動作プロパティをサポートするバインディングにカスタム データ オブジェクトを渡します。"
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "サービスの説明。"
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "サービス ホスト。"
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "サービス エンドポイント。"
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "動作をサポートするバインディングに必要なデータ オブジェクト。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス動作プロパティをサポートするためにランタイムをカスタマイズします。"
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "サービスの説明。"
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "サービス ホスト。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービスの説明とサービス ホストが動作をサポートできることを確認します。"
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "サービスの説明。"
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "サービス ホスト。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  id: TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または完了を指定するかどうか保留中のトランザクションは、現在のセッションがエラーなしで閉じたときに値を設定します。"
  syntax:
    content: public bool TransactionAutoCompleteOnSessionClose { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>保留中のトランザクションか、現在のセッションがエラーなしで閉じたときに完了するにはそれ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。 既定値は<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  id: TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいトランザクションのトランザクション分離レベルが、サービスの内部に作成され、クライアントからフローされる受信トランザクションを指定します。"
  remarks: "変更が加えられたときにデータを処理する方法、トランザクションの実行を決定する分離レベルは、他のトランザクションと、トランザクションがこれらの変更を防ぐためにロックを保持する期間。 たとえば、既定値、 <xref:System.Transactions.IsolationLevel>、更新または挿入できないこと、トランザクションが完了するまでを指定します</xref:System.Transactions.IsolationLevel>。       このプロパティは、分離を制限するのには使用も、クライアントからフローされる受信トランザクションのレベルです。"
  example:
  - "The following code example sets the transaction isolation level to <xref:System.Transactions.IsolationLevel>, does not support concurrent transactions, requires a flowed transaction from the method call, and commits the transaction automatically if no unhandled exception occurs.  \n  \n [!code-vb[SBA.Transactions#2](~/add/codesnippet/visualbasic/sba.transactions.client/services.vb#2)]\n [!code-cs[SBA.Transactions#2](~/add/codesnippet/csharp/sba.transactions.client/services.cs#2)]  \n  \n The underlying binding must support flowed transactions for the following code example to execute properly. To support flowed transactions using the <xref:System.ServiceModel.WSHttpBinding>, for example, set the <xref:System.ServiceModel.WSHttpBindingBase.TransactionFlow%2A> property to `true` in code or in an application configuration file. The following code example shows a configuration file for the preceding sample.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: "A <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>トランザクション分離レベルを指定する値。 既定値は<xref href=&quot;System.Transactions.IsolationLevel&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値は、のいずれかではありません、 <xref href=&quot;System.Transactions.IsolationLevel&quot;> </xref>値。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  id: TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはトランザクションを完了する必要があります期間を設定します。"
  remarks: "この値の設定、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName>プロパティ</xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout%2A?displayProperty=fullName>。 使用してこのプロパティを設定することも、 [ \\&lt; serviceTimeouts\\&gt;](../Topic/%3CserviceTimeouts%3E.md)アプリケーション構成ファイル内の要素。"
  example:
  - "The following configuration file specifies a transaction timeout period of three minutes.  \n  \n [!code-cs[SBA.TransactionTimeout#2](~/add/codesnippet/csharp/sba.transactiontimeout.client/services.cs#2)]\n [!code-vb[SBA.TransactionTimeout#2](~/add/codesnippet/visualbasic/sba.transactiontimeout.client/services.vb#2)]"
  syntax:
    content: public string TransactionTimeout { get; set; }
    return:
      type: System.String
      description: "A<xref:System.TimeSpan>内部でトランザクションが完了する必要がありますか、自動的に中止される時刻を表すオブジェクト</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値は null です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値より小さい&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;以上&lt;xref:System.TimeSpan.MaxValue?displayProperty=fullName&gt;です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  id: UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または現在の同期コンテキストを使用して、実行のスレッドを選択するかどうかを示す値を設定します。"
  remarks: "このプロパティを使用して、一部のアプリケーションを必要とするユーザー インターフェイス スレッド アフィニティを提供します。 たとえば、Windows フォーム アプリケーションは、シングルトン サービス オブジェクトとして登録する可能性があります。 この場合、サービスのすべての呼び出しは、Windows フォーム スレッドで実行する必要があります。 既定では、UseSynchronizationContext に設定されている`true`、 <xref:System.Threading.SynchronizationContext?displayProperty=fullName>.</xref:System.Threading.SynchronizationContext?displayProperty=fullName>からキャプチャされたスレッド上で実行するすべてのサービス呼び出しの同期"
  syntax:
    content: public bool UseSynchronizationContext { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>サービスへのすべての呼び出しがで指定されたスレッドで実行する必要があるかどうか、 <xref:System.Threading.SynchronizationContext>、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref></xref:System.Threading.SynchronizationContext> 。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  id: ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  langs:
  - csharp
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "システムまたはアプリケーションが SOAP を強制するかどうかを指定する値の設定を取得または<xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;></xref>ヘッダー処理します。"
  remarks: "ValidateMustUnderstand プロパティを使用して、到達したメッセージ ヘッダーの検証の実施をオフにします。 通常の実行、メッセージ ヘッダーと比較されます、<xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>プロパティをサービスによって、到着したヘッダーが明示的に処理されることを確認します</xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>。 これを設定して`false`この確認を無効にします。 設定すると`false`アプリケーションの MustUnderstand でマークされたヘッダーを確認する必要があります =&quot;true&quot;と、それらの&1; つ以上が理解されなかった場合に、エラーを返します。 これは、受信 SOAP メッセージをすべて受け入れ (型指定を使用する場合など、型指定されていないメッセージ) とカスタム ヘッダー処理を実行するアプリケーションをサポートしているときに便利です。"
  syntax:
    content: public bool ValidateMustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>SOAP ヘッダーを実行する場合は、システム<xref uid=&quot;langword_csharp_MustUnderstand&quot; name=&quot;MustUnderstand&quot; href=&quot;&quot;></xref>それ以外の処理<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>アプリケーションがこの処理を実行することを示します。 既定値は<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>です。"
  overload: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute()
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ServiceBehaviorAttribute()
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.AddressFilterMode
  parent: System.ServiceModel
  isExternal: false
  name: AddressFilterMode
  nameWithType: AddressFilterMode
  fullName: System.ServiceModel.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
  fullName: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ConcurrencyMode
  parent: System.ServiceModel
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ConcurrencyMode
  fullName: System.ServiceModel.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
  fullName: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton()
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
  fullName: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
  fullName: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.InstanceContextMode
  parent: System.ServiceModel
  isExternal: false
  name: InstanceContextMode
  nameWithType: InstanceContextMode
  fullName: System.ServiceModel.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
  fullName: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
  fullName: System.ServiceModel.ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton(Object)
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(Object)
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel()
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout()
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout()
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
  fullName: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
  fullName: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
  fullName: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand
- uid: System.ServiceModel.ServiceBehaviorAttribute.#ctor*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ServiceBehaviorAttribute
  nameWithType: ServiceBehaviorAttribute.ServiceBehaviorAttribute
- uid: System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AddressFilterMode
  nameWithType: ServiceBehaviorAttribute.AddressFilterMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: AutomaticSessionShutdown
  nameWithType: ServiceBehaviorAttribute.AutomaticSessionShutdown
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConcurrencyMode
  nameWithType: ServiceBehaviorAttribute.ConcurrencyMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ConfigurationName
  nameWithType: ServiceBehaviorAttribute.ConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.EnsureOrderedDispatch*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: EnsureOrderedDispatch
  nameWithType: ServiceBehaviorAttribute.EnsureOrderedDispatch
- uid: System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: GetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.GetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IgnoreExtensionDataObject
  nameWithType: ServiceBehaviorAttribute.IgnoreExtensionDataObject
- uid: System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: IncludeExceptionDetailInFaults
  nameWithType: ServiceBehaviorAttribute.IncludeExceptionDetailInFaults
- uid: System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: InstanceContextMode
  nameWithType: ServiceBehaviorAttribute.InstanceContextMode
- uid: System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: MaxItemsInObjectGraph
  nameWithType: ServiceBehaviorAttribute.MaxItemsInObjectGraph
- uid: System.ServiceModel.ServiceBehaviorAttribute.Name*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Name
  nameWithType: ServiceBehaviorAttribute.Name
- uid: System.ServiceModel.ServiceBehaviorAttribute.Namespace*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: Namespace
  nameWithType: ServiceBehaviorAttribute.Namespace
- uid: System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: SetWellKnownSingleton
  nameWithType: ServiceBehaviorAttribute.SetWellKnownSingleton
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeConfigurationName
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeConfigurationName
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeReleaseServiceInstanceOnTransactionComplete
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ShouldSerializeTransactionTimeout
  nameWithType: ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceBehaviorAttribute.System.ServiceModel.Description.IServiceBehavior.Validate
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionAutoCompleteOnSessionClose
  nameWithType: ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionIsolationLevel
  nameWithType: ServiceBehaviorAttribute.TransactionIsolationLevel
- uid: System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: TransactionTimeout
  nameWithType: ServiceBehaviorAttribute.TransactionTimeout
- uid: System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: UseSynchronizationContext
  nameWithType: ServiceBehaviorAttribute.UseSynchronizationContext
- uid: System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand*
  parent: System.ServiceModel.ServiceBehaviorAttribute
  isExternal: false
  name: ValidateMustUnderstand
  nameWithType: ServiceBehaviorAttribute.ValidateMustUnderstand
