### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ICallbackEventHandler
  id: ICallbackEventHandler
  children:
  - System.Web.UI.ICallbackEventHandler.GetCallbackResult
  - System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  langs:
  - csharp
  name: ICallbackEventHandler
  nameWithType: ICallbackEventHandler
  fullName: System.Web.UI.ICallbackEventHandler
  type: Interface
  summary: "コントロールが、サーバー上のコールバック イベントの対象にできることを示すために使用されます。"
  remarks: "コールバック イベントを受信する必要があるカスタム コントロールに対して ICallbackEventHandler インターフェイスを実装します。 詳細については、次を参照してください。[ポストバックなしクライアント コールバックの実装](~/add/includes/ajax-current-ext-md.md)です。       ICallbackEventHandler インターフェイスを実装するコントロールの例として、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.TreeView>コントロール</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 コールバック イベント ICallbackEventHandler インターフェイスを実装するコントロールの対象の場合、<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>イベント引数をパラメーターとして渡すと共に、イベントを処理するメソッドが呼び出されたと<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>メソッドがコールバックの結果を返します</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A></xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>。       同期または非同期では、コールバック中にデータ ソース コントロールからデータを取得するコントロールでこれを実行できます。 ASP.NET コントロールと同様に<xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.TreeView>同期的に実装されます</xref:System.Web.UI.WebControls.TreeView></xref:System.Web.UI.WebControls.DetailsView></xref:System.Web.UI.WebControls.GridView>。 同期コールバックは妨げませんユーザー ブラウザーで作業します。 同期モードで最後のコールバックが優先順位で、一度に&1; つだけのコールバックは実行できます。 Web コントロールが非同期動作をサポートするために実装されている場合は、複数のコールバックを同時に発生することができます。 非同期プログラミングの詳細については、「[イベント ベースの非同期パターン (EAP)](~/add/includes/ajax-current-ext-md.md)です。       ICallbackEventHandler インターフェイスを実装するコントロールによって表示されるユーザー インターフェイスから送信されたコールバック イベントを検証するかどうかを指定することができます。 イベントの検証は、適切なセキュリティ プラクティスです。 ただし、パフォーマンス上の理由は無効にできます。 かどうかを制御するは、イベントの検証はコールバック イベントの実行、設定、`enableEventValidation`の属性、 [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4)ディレクティブまたは`enableEventValidation`の属性、[要素 (ASP.NET 設定スキーマ) のページ](http://msdn.microsoft.com/en-us/4123bb66-3fe4-4d62-b70e-33758656b458)Web.config ファイルのです。 設定した場合、<xref:System.Web.UI.Page.EnableEventValidation%2A>でコードでは、プロパティを設定して、`Page_Init`ページ処理のフェーズ</xref:System.Web.UI.Page.EnableEventValidation%2A>。 分散パフォーマンス コストがそのイベントの検証のセキュリティ上の利点の詳細については、次を参照してください。 [ASP.NET パフォーマンス概要](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public interface ICallbackEventHandler
  implements: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  id: GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールを対象とするコールバック イベントの結果を返します。"
  remarks: "スローされた例外<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>GetCallbackResult が呼び出されると、結果を返すことを防ぐことはできません</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>。 GetCallbackResult が結果を返さないようにするには、フラグを設定で例外がスローされたときに<xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>GetCallbackResult から空の文字列を返します</xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A>。"
  syntax:
    content: public string GetCallbackResult ();
    parameters: []
    return:
      type: System.String
      description: "コールバックの結果。"
  overload: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  id: RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  langs:
  - csharp
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "コントロールを対象とするコールバック イベントを処理します。"
  remarks: "ときに`null`使用、イベントの引数パラメーターとして文字列がシリアル化される、サーバーに&quot;null&quot;と送信のバックアップを作成します。 区別する手段がないため`null`&quot;null&quot;、および使用を避ける必要があります`null`コールバックの引数のパラメーターです。       RaiseCallbackEvent でスローされた例外ができなくなります<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>呼び出されると、結果を返すからです</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。 <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>避けるため</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>に、結果を返すから RaiseCallbackEvent で例外がスローされたときにフラグを設定<xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>。</xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>から空の文字列を返す"
  syntax:
    content: public void RaiseCallbackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "イベント ハンドラーに渡すイベント引数を表す文字列。"
  overload: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult()
  nameWithType: ICallbackEventHandler.GetCallbackResult()
  fullName: System.Web.UI.ICallbackEventHandler.GetCallbackResult()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent(String)
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent(String)
  fullName: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(String)
- uid: System.Web.UI.ICallbackEventHandler.GetCallbackResult*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: GetCallbackResult
  nameWithType: ICallbackEventHandler.GetCallbackResult
- uid: System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent*
  parent: System.Web.UI.ICallbackEventHandler
  isExternal: false
  name: RaiseCallbackEvent
  nameWithType: ICallbackEventHandler.RaiseCallbackEvent
