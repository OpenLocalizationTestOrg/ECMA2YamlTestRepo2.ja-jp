### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  id: WorkflowPersistenceService
  children:
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  - System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  langs:
  - csharp
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  type: Class
  summary: "サービスの派生するすべての永続化ストアから抽象基本クラス。"
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]特定の条件には、ワークフローの実行中に発生した場合、ワークフロー ランタイム エンジンは、ワークフロー インスタンスに関する状態情報を保持します。 永続化できます行われるなど、アトミック トランザクションが完了したとき、ワークフロー インスタンスがアイドル状態のホストが呼び出したときに<xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName>のワークフロー インスタンス、またはワークフロー インスタンスが終了または完了したとき</xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=fullName>。 永続化を実行することは、ワークフロー ランタイム エンジンのセマンティクスで決まると、ワークフロー ランタイム エンジンは、ワークフロー インスタンスに関する状態情報を保存する永続性サービスによって提供されるメソッドを呼び出します。 同様に、ワークフロー ランタイム エンジンは、以前に永続化されたワークフロー インスタンスを復元する必要がある、この状態情報を読み込む永続性サービスによって提供されるメソッドを呼び出します。 ワークフロー ランタイム エンジンは、永続化を実行するタイミングに関するすべてのセマンティクスを処理します。 永続性サービスは、実際に保存およびにまたはデータ ストアからワークフローの状態情報の読み込みを処理します。       永続性サービスを作成するには、WorkflowPersistenceService クラスからクラスを派生します。  永続性サービスをワークフロー ランタイム エンジンに追加するには呼び出すことによって<xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>またはアプリケーション構成ファイルで適切なエントリを行うことによって</xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。 <xref:System.Workflow.Runtime.WorkflowRuntime>1 つの永続性サービスのみを含める必要があります</xref:System.Workflow.Runtime.WorkflowRuntime>。 Windows Workflow foundation、<xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>クラスで、既定の永続性サービス、か、拡張を使用することができます</xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>。       ワークフロー ランタイム エンジンは、環境、異なるプロセスで実行される永続性サービスの可能性がありますを&1; つのデータ ストアで使用するためのワークフロー状態情報をロックするためのセマンティクスを持ちます。 WorkflowPersistenceService クラスへのパラメーターを提供することによって、ワークフロー ランタイム エンジンのこの機能をサポートする機能を提供する<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>メソッドを提供して、データ ストア内には、ワークフロー インスタンスの状態情報のロックを解除するかどうかを指定する<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>以前ロックを解除するには、ワークフロー状態情報をロックします</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>。 呼び出しのロックを実装する永続性サービスに<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>ワークフロー インスタンスの状態情報をロックする必要があります</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>。       永続性サービスをスローする必要があります、<xref:System.Workflow.Runtime.Hosting.PersistenceException>をデータ ストアに状態情報を保存または、データ ストアから状態情報を読み込みに失敗した場合</xref:System.Workflow.Runtime.Hosting.PersistenceException>。 ワークフロー ランタイム エンジンには、この動作が期待しています。       バッチ メカニズムは、ワークフロー状態情報を保存する永続的ストアを使用するサービスに対して提供されます。 このような場合、永続性サービスによって使用される永続的ストアとワークフロー ランタイム エンジンの内部状態の間の一貫性を維持する必要があります。 によって<xref:System.Workflow.Runtime.IPendingWork>、サービスへのインターフェイスし<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>変更を作業<xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>。</xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>項目として、データ ストアに追加することで</xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>提供するワークフロー トランザクション バッチに参加し、</xref:System.Workflow.Runtime.IPendingWork>定義されている機能を追加することができます。 永続的ストア自体を実装する必要があります、<xref:System.Transactions.IEnlistmentNotification>インターフェイス、トランザクションのロールバックが発生した場合にワークフロー情報が誤って永続いないできるようにします</xref:System.Transactions.IEnlistmentNotification>。 詳細については、「<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>または<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>の使用」を参照してください。"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスで実装された場合の新しいインスタンスを初期化、 <xref href=&quot;System.Workflow.Runtime.Hosting.WorkflowPersistenceService&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - "The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`). This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.  For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \n  \n [!code-cs[WF_Samples#161](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#161)]\n [!code-vb[WF_Samples#161](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#161)]"
  syntax:
    content: protected WorkflowPersistenceService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  id: GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "シリアル化された既定の形式を取得、 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>です。"
  syntax:
    content: protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>のシリアル化された形式を要求します。"
    return:
      type: System.Byte[]
      description: "シリアル化された既定の形式の<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>です。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  id: GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "指定したアクティビティがブロックされているかどうかを示します。"
  syntax:
    content: protected static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "ワークフロー インスタンスのルート アクティビティ。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合は、指定されたアクティビティはブロックされます。それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  id: GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "指定したアクティビティの情報を中断または終了を取得します。"
  syntax:
    content: protected static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "ワークフロー インスタンスのルート アクティビティ。"
    return:
      type: System.String
      description: "A<xref:System.String>を終了または中断の情報</xref:System.String>。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  id: GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "ワークフローの状態を取得します。"
  syntax:
    content: protected static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "ワークフロー インスタンスのルート アクティビティ。"
    return:
      type: System.Workflow.Runtime.WorkflowStatus
      description: "A <xref href=&quot;System.Workflow.Runtime.WorkflowStatus&quot;> </xref>ワークフローの状態を示す列挙値。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  id: LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスで実装された場合、指定した完了スコープをメモリに読み込みます。"
  remarks: "ワークフロー ランタイム エンジンは、補正を実装するのに LoadCompletedContextActivity を使用します。 完了したスコープの完全なコピーを復元する必要があります。 これを行うには、復元する必要あります、有効な<xref:System.IO.Stream>ストアのデータで完了したスコープを表すものからです</xref:System.IO.Stream>。 これを渡す必要があります<xref:System.IO.Stream>のオーバー ロードされたメソッドのいずれかに<xref:System.Workflow.ComponentModel.Activity.Load%2A>スコープの逆シリアル化を実行する</xref:System.Workflow.ComponentModel.Activity.Load%2A></xref:System.IO.Stream>。       場合は、永続性サービスは、そのデータ ストアから完了したスコープを読み込むことができませんがスローされます、<xref:System.Workflow.Runtime.Hosting.PersistenceException>適切なメッセージを使用します</xref:System.Workflow.Runtime.Hosting.PersistenceException>。"
  example:
  - "The following example demonstrates an implementation of the `LoadCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: scopeId
      type: System.Guid
      description: "<xref:System.Guid>完了したスコープの</xref:System.Guid>。"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>完了スコープを囲むアクティビティを表すです。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>完了スコープを表すです。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  id: LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスで実装された場合、メモリに指定したワークフロー インスタンスの状態を読み込みます。"
  remarks: "アクティビティの完全なコピーを復元する必要があります。 これを行うには、復元する必要あります、有効な<xref:System.IO.Stream>のデータ ストア内のワークフロー インスタンスを表すものから、渡す必要がありますこれ<xref:System.IO.Stream>オーバー ロードされたいずれかに<xref:System.Workflow.ComponentModel.Activity.Load%2A>インスタンス状態のワークフローを逆シリアル化するメソッド</xref:System.Workflow.ComponentModel.Activity.Load%2A></xref:System.IO.Stream></xref:System.IO.Stream>。 場合は、永続性サービスは、そのデータ ストアからワークフロー インスタンスの状態を読み込むことができませんがスローされます、<xref:System.Workflow.Runtime.Hosting.PersistenceException>適切なメッセージを使用します</xref:System.Workflow.Runtime.Hosting.PersistenceException>。       ワークフロー ランタイム エンジンでは、データ ストアに保存されているワークフロー インスタンス状態へのアクセスを制限するためのロック セマンティクスを実装します。 これは、複数のプロセスで実行される永続性サービスによってアクセスできます。 ロック セマンティクスは、同じワークフロー インスタンスを同時をメモリに読み込む&2; つの異なるプロセスで実行される永続性サービスを防ぐために設計されています。 永続性サービスが対応している環境の種類によってをサポートすることもできますこの機能をサポートするかどうか。 ランタイム ロック セマンティクスをサポートするために選択して、このワークフロー インスタンスの状態は既に別のプロセスによってロックされている場合は、し、必要がありますをスローする<xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> それ以外の場合、データ ストア内のワークフロー インスタンス状態へのアクセスをロックする必要があります。 呼び出しによってワークフロー インスタンスの状態のロックを解除することができます<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>への呼び出しまたは<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>ロック解除パラメーターを設定した`true`</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>。"
  example:
  - "The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#266](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#266)]\n [!code-vb[WF_Samples#266](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#266)]"
  syntax:
    content: protected abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);
    parameters:
    - id: instanceId
      type: System.Guid
      description: "<xref:System.Guid>ワークフロー インスタンスのルート アクティビティの</xref:System.Guid>。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>ワークフロー インスタンスのルート アクティビティを表すです。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  id: RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "復元、 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>シリアル化された形式からです。"
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#269](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#269)]\n [!code-vb[WF_Samples#269](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#269)]"
  syntax:
    content: protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: activityBytes
      type: System.Byte[]
      description: "シリアル化形式の<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>です。"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "外側<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>を含む、 <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>を復元します。"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "復元された<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;></xref>です。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  id: SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスとして実装された場合は、指定した完了スコープをデータ ストアに保存します。"
  remarks: "ワークフロー ランタイム エンジンは、補正を実装するために完了したスコープのアクティビティの状態を保存します。 オーバー ロードされたいずれかを呼び出す必要があります<xref:System.Workflow.ComponentModel.Activity.Save%2A>シリアル化するメソッド`activity`に、 <xref:System.IO.Stream>; にさらに処理し、こともできます、<xref:System.IO.Stream>データ ストアに書き込む前にします</xref:System.IO.Stream></xref:System.IO.Stream></xref:System.Workflow.ComponentModel.Activity.Save%2A>。 ただし、ワークフロー ランタイム エンジンを呼び出すと<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>、アクティビティの完全なコピーを復元する必要があります</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>。       インスタンスに関連付ける完了したスコープの外側のワークフローにワークフロー インスタンスが完了するかは、データ ストア内のスコープを不要とマークする必要がありますが終了します。 そのため、保存する必要ありますも、<xref:System.Guid>この、完了したスコープに関連付けられているワークフロー インスタンスから取得できます、<xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A>のプロパティ、<xref:System.Workflow.Runtime.WorkflowInstance>に関連付けられている`activity`</xref:System.Workflow.Runtime.WorkflowInstance></xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A></xref:System.Guid>。       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A><xref:System.Guid>をパラメーターとして完了したスコープの</xref:System.Guid>。</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> したがって、する必要がありますも保存する、<xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A>プロパティに関連付けられている`activity`</xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A>。 このプロパティはを通じて参照できます、<xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>フィールドの`activity`</xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty>。       永続的ストアを使用する永続性サービスを実装している場合、ワークフロー ランタイム エンジンの内部状態と一貫性を維持するためにする必要がありますに参加ワークフロー トランザクション バッチに、永続的ストアへの実際の書き込みをワークフロー コミット ポイントまで延期します。 バッチに参加するを作業項目を追加、<xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>プロパティをデータベースに保留中の変更を表し、実装、<xref:System.Workflow.Runtime.IPendingWork>永続性サービスのインターフェイス</xref:System.Workflow.Runtime.IPendingWork></xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>。       スローする必要がある場合は、データ ストアに完了したスコープを保存することはできません、<xref:System.Workflow.Runtime.Hosting.PersistenceException>適切なエラー メッセージを使用します</xref:System.Workflow.Runtime.Hosting.PersistenceException>。"
  example:
  - "The following example demonstrates an implementation of the `SaveCompletedContextActivity` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#268](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#268)]\n [!code-vb[WF_Samples#268](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#268)]"
  syntax:
    content: protected abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>完了スコープを表すです。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  id: SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスとして実装された場合は、データ ストアにワークフロー インスタンスの状態を保存します。"
  remarks: "オーバー ロードされたいずれかを呼び出す必要があります<xref:System.Workflow.ComponentModel.Activity.Save%2A>をシリアル化するメソッド`rootActivity` <xref:System.IO.Stream></xref:System.IO.Stream> </xref:System.Workflow.ComponentModel.Activity.Save%2A> 。 さらに処理できますし、<xref:System.IO.Stream>データ ストアに書き込む前にします</xref:System.IO.Stream>。 ただし、ワークフロー ランタイム エンジンを呼び出すと<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>、ルート アクティビティの完全なコピーを復元する必要があります</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>。 スローする必要がある場合は、データ ストアにワークフロー インスタンスの状態を保存することはできません、<xref:System.Workflow.Runtime.Hosting.PersistenceException>適切なエラー メッセージを使用します</xref:System.Workflow.Runtime.Hosting.PersistenceException>。       ワークフロー ランタイム エンジンは、データ ストアに保存されているワークフロー インスタンス状態へのアクセスを制限するためのロック セマンティクスを提供します。 これは、複数のホストで実行されており、同じデータ ストアへの永続性サービスによってアクセスできます。 ロック セマンティクスは、同時に同じワークフロー インスタンスをメモリに読み込み、2 つの異なるワークフロー ランタイムで実行される永続性サービスを防ぐために設計されています。 永続性サービスがサポートするために目的の環境の種類に応じて、この機能をサポートするかどうかを選択できます。 ランタイム ロック セマンティクスをサポートする場合は、その後、永続性サービスが、別の永続性サービスによって既にロックされているワークフロー インスタンスの状態を保存しようとしています。 場合必要がありますをスローする<xref:System.Workflow.Runtime.WorkflowOwnershipException>.</xref:System.Workflow.Runtime.WorkflowOwnershipException> 場合`unlock`は`true`、保存した後、ワークフロー インスタンス状態へのアクセスをロック解除する必要があります。       <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A><xref:System.Guid>をパラメーターとしてワークフロー インスタンスの</xref:System.Guid>。</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> したがって、この<xref:System.Guid>。</xref:System.Guid>を保存する必要があります。 これを使用することもできます<xref:System.Guid>その完了スコープの保存された状態を持つワークフロー インスタンスに関連付けます</xref:System.Guid>。 これを行うときに、不必要なとしてような完了スコープをマークする必要がありますので、ワークフロー インスタンスの完了します。       ワークフロー ランタイム エンジンは、ワークフロー インスタンスが完了または終了したときに最後に SaveWorkflowInstanceState を呼び出します。 したがって場合、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A>等しく<xref:System.Workflow.Runtime.WorkflowStatus>または<xref:System.Workflow.Runtime.WorkflowStatus>、データ ストアから安全にワークフロー インスタンスとその関連付けられている完了したスコープはすべてを削除することができます</xref:System.Workflow.Runtime.WorkflowStatus></xref:System.Workflow.Runtime.WorkflowStatus></xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A>。 代わりをサブスクライブすることができます、<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>または<xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated>イベントである場合、ワークフロー インスタンスに関連付けられているレコードを削除しても安全を確認します</xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated></xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted>。 実際には、データ ストアからレコードを削除するかどうかは、実装によって異なります。       永続的ストアを使用する永続性サービスを実装する場合に、ワークフロー ランタイム エンジンの内部状態と一貫性を維持するためにする必要があります参加ワークフロー トランザクション バッチをワークフロー コミット ポイントに達するまで、永続的ストアへの実際の書き込みを遅延します。 バッチに参加するに、永続的ストアへの保留中の変更を表す作業項目を追加、<xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>プロパティ、および実装、<xref:System.Workflow.Runtime.IPendingWork>永続性サービスのインターフェイス</xref:System.Workflow.Runtime.IPendingWork></xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>。"
  example:
  - "The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#264](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#264)]\n [!code-vb[WF_Samples#264](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#264)]"
  syntax:
    content: protected abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "ワークフロー インスタンスのルート アクティビティ。"
    - id: unlock
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>ワークフロー インスタンスがロックされていない必要があります。 場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>場合は、ワークフロー インスタンスをロックする必要があります。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  id: UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "かどうか、ワークフローをアンロードするかアイドル状態のときを判断します。"
  remarks: ''
  example:
  - "The following example demonstrates an implementation of the `UnloadOnIdle` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#270](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#270)]\n [!code-vb[WF_Samples#270](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#270)]"
  syntax:
    content: protected abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);
    parameters:
    - id: activity
      type: System.Workflow.ComponentModel.Activity
      description: "<xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>完了スコープを表すです。"
    return:
      type: System.Boolean
      description: "場合<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>、アイドル状態になったときに、ワークフロー ランタイム エンジンが指定したワークフローをアンロードします。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  id: UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  langs:
  - csharp
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "派生クラスでオーバーライドされると、ワークフロー インスタンスの状態のロックを解除します。"
  remarks: "ロックおよびロック解除に関する既定の実装が含まれていないために、このメソッドは抽象、です。       カスタムの永続性サービスを実装するには、中に場合は、ロック スキームを実装する必要がありますこのメソッドをオーバーライドし、ロック/ロック解除メカニズムを提供する、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>メソッドが、ロック解除パラメーターの値に基づきます</xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>。"
  example:
  - "The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method. This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file. For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/en-us/869dfadf-5298-4551-bc80-f4cf7918729d).  \n  \n [!code-cs[WF_Samples#267](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#267)]\n [!code-vb[WF_Samples#267](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#267)]"
  syntax:
    content: protected abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Workflow.ComponentModel.Activity
      description: "ワークフロー インスタンスのルート アクティビティ。"
  overload: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowRuntimeService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService()
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService()
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.WorkflowPersistenceService()
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm(Activity)
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(Activity)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked(Activity)
  nameWithType: WorkflowPersistenceService.GetIsBlocked(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo(Activity)
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(Activity)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus(Activity)
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(Activity)
- uid: System.Workflow.Runtime.WorkflowStatus
  parent: System.Workflow.Runtime
  isExternal: false
  name: WorkflowStatus
  nameWithType: WorkflowStatus
  fullName: System.Workflow.Runtime.WorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity(Guid,Activity)
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(Guid,Activity)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState(Guid)
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(Guid)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm(Byte[],Activity)
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(Byte[],Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity(Activity)
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState(Activity,Boolean)
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(Activity,Boolean)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle(Activity)
  nameWithType: WorkflowPersistenceService.UnloadOnIdle(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState(Activity)
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
  fullName: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(Activity)
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: WorkflowPersistenceService
  nameWithType: WorkflowPersistenceService.WorkflowPersistenceService
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.GetDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetIsBlocked
  nameWithType: WorkflowPersistenceService.GetIsBlocked
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetSuspendOrTerminateInfo
  nameWithType: WorkflowPersistenceService.GetSuspendOrTerminateInfo
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: GetWorkflowStatus
  nameWithType: WorkflowPersistenceService.GetWorkflowStatus
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadCompletedContextActivity
  nameWithType: WorkflowPersistenceService.LoadCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: LoadWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.LoadWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: RestoreFromDefaultSerializedForm
  nameWithType: WorkflowPersistenceService.RestoreFromDefaultSerializedForm
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveCompletedContextActivity
  nameWithType: WorkflowPersistenceService.SaveCompletedContextActivity
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: SaveWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.SaveWorkflowInstanceState
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnloadOnIdle
  nameWithType: WorkflowPersistenceService.UnloadOnIdle
- uid: System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState*
  parent: System.Workflow.Runtime.Hosting.WorkflowPersistenceService
  isExternal: false
  name: UnlockWorkflowInstanceState
  nameWithType: WorkflowPersistenceService.UnlockWorkflowInstanceState
