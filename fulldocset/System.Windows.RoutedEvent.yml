### YamlMime:ManagedReference
items:
- uid: System.Windows.RoutedEvent
  id: RoutedEvent
  children:
  - System.Windows.RoutedEvent.AddOwner(System.Type)
  - System.Windows.RoutedEvent.HandlerType
  - System.Windows.RoutedEvent.Name
  - System.Windows.RoutedEvent.OwnerType
  - System.Windows.RoutedEvent.RoutingStrategy
  - System.Windows.RoutedEvent.ToString
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
  type: Class
  summary: "表すとルーティング イベントを識別およびその特性を宣言します。"
  remarks: "このクラスに含まれる、 <xref:System.Windows.RoutedEvent.Name%2A>、 <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>、 <xref:System.Windows.RoutedEvent.HandlerType%2A>、および<xref:System.Windows.RoutedEvent.OwnerType%2A>プロパティ</xref:System.Windows.RoutedEvent.OwnerType%2A></xref:System.Windows.RoutedEvent.HandlerType%2A></xref:System.Windows.RoutedEvent.RoutingStrategy%2A></xref:System.Windows.RoutedEvent.Name%2A>。 Null 値を持つこれらのどのメンバーことができます。       このクラスの値を提供するためのものが排他的 XAML の使用方法には、<xref:System.Windows.EventTrigger.RoutedEvent%2A>のプロパティ、 <xref:System.Windows.EventTrigger>(または派生クラス)、または、<xref:System.Windows.EventSetter.Event%2A>のプロパティ、 <xref:System.Windows.EventSetter>(またはその派生クラス).</xref:System.Windows.EventSetter> </xref:System.Windows.EventSetter.Event%2A> </xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger.RoutedEvent%2A> 詳細については<xref:System.Windows.EventTrigger>、 <xref:System.Windows.EventSetter>、これらのクラスの XAML の使用方法を参照してください、[ルーティング イベントの概要](~/add/includes/ajax-current-ext-md.md)</xref:System.Windows.EventSetter></xref:System.Windows.EventTrigger>。      <a name=&quot;xamlAttributeUsage_RoutedEvent&quot;></a>## XAML 属性の使用```   <object property=&quot;eventName&quot;/>   - or -   <object property=&quot;type.eventName&quot;/>      ``` <a name=&quot;xamlValues_RoutedEvent&quot;> </a> ## XAML 値*eventName*修飾されていないイベント名と同じ、 <xref:System.Windows.RoutedEvent.Name%2A>RoutedEvent フィールドのプロパティ、実際のメンバー名ではなく型の中で RoutedEvent 識別子フィールドです</xref:System.Windows.RoutedEvent.Name%2A>。       限定なく*eventName*イベント<xref:System.Windows.Style.TargetType%2A>の現在のスタイルを含む、<xref:System.Windows.EventSetter>または<xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger></xref:System.Windows.EventSetter></xref:System.Windows.Style.TargetType%2A>である型に検出されるように名前を付けます       *型*イベント名を修飾するために使用する型。 場合は、プレフィックスなしで提供*型*は既定の XAML 名前空間内にある型にする必要は既存の CLR 型にマップすることができます。 カスタム イベント、または既定の XAML 名前空間の文字列は、外部型のイベントでは*型*マップされている XAML 名前空間のプレフィックスを含めることができます。 その XAML 名前空間は、バッキング CLR の型にマップできる XAML の型を含める必要があり、その CLR 型が目的のルーティング イベントの識別子を定義する必要があります。 XAML 名前空間のマッピングの詳細については、「 [XAML 名前空間と WPF XAML 向け Namespace マッピング](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      [System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")]

      public sealed class RoutedEvent
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  id: AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "によって表されるルーティング イベントを別の所有者の種類を関連付けます、 <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref>インスタンスし、イベントとその処理のルーティングを有効にします。"
  remarks: "所有者の型がによって内部的に使用イベントを解決するときに名前。"
  example:
  - "The following example adds the current class as another owner of an event defined in a different class. Here, `AnotherEditContainer` is the current class, and the `EditStateChangedEvent`<xref:System.Windows.RoutedEvent> field is defined as a member of that class. The `MyEditContainer` class originally defined the event, registering it with the identically named `EditStateChangedEvent`identifier.  \n  \n [!code-vb[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/visualbasic/ClassHandling.sdksamplelibrary/class1.vb#routedeventaddowner)]\n [!code-cs[ClassHandling#RoutedEventAddOwner](~/add/codesnippet/csharp/ClassHandling/SDKSampleLibrary/class1.cs#routedeventaddowner)]"
  syntax:
    content: public System.Windows.RoutedEvent AddOwner (Type ownerType);
    parameters:
    - id: ownerType
      type: System.Type
      description: "ルーティング イベントを追加する位置の型。"
    return:
      type: System.Windows.RoutedEvent
      description: "イベントの識別子フィールドです。 この戻り値は、フィールドを設定するパブリック静的な読み取り専用で所有している型でルーティング イベントの形式の識別子を格納するために使用する必要があります。 このフィールドはユーザー コードは、ルーティング イベントを使用する場合のインスタンス ハンドラーをアタッチするためにフィールドを参照する必要がありますので、通常、パブリック アクセスの定義、<xref:System.Windows.UIElement.AddHandler*>ユーティリティ メソッド</xref:System.Windows.UIElement.AddHandler*>。"
  overload: System.Windows.RoutedEvent.AddOwner*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.HandlerType
  id: HandlerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ルーティング イベントのハンドラーの型を取得します。"
  remarks: "ハンドラーの型はこの<xref:System.Windows.RoutedEvent>。</xref:System.Windows.RoutedEvent>によって表されるイベントをリッスンするハンドラーを実装するときに使用されるイベント ハンドラー デリゲート"
  syntax:
    content: public Type HandlerType { get; }
    return:
      type: System.Type
      description: "ルーティング イベントのハンドラーの型。"
  overload: System.Windows.RoutedEvent.HandlerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.Name
  id: Name
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ルーティング イベントの識別名を取得します。"
  remarks: "ルーティング イベントの名前は、各所有者型内で一意である必要がありますが、グローバルに一意である必要はありません。       このプロパティの値に由来<xref:System.Windows.EventManager.RegisterRoutedEvent%2A><xref:System.Windows.RoutedEvent>。</xref:System.Windows.RoutedEvent>を定義する方法</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 具体的には、名前の値は、 `name` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>に渡されたパラメーター値"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "ルーティング イベントの名前。"
  overload: System.Windows.RoutedEvent.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.OwnerType
  id: OwnerType
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ルーティング イベントの登録済み所有者の種類を取得します。"
  remarks: "この型は、必ずしも<xref:System.Windows.DependencyObject>。</xref:System.Windows.DependencyObject>を上限とする任意のオブジェクト型を指定できます。 追加された所有者のルーティング イベントの場合は、このプロパティは、最初に宣言された所有者を返します。       このプロパティの値に由来<xref:System.Windows.EventManager.RegisterRoutedEvent%2A><xref:System.Windows.RoutedEvent>。</xref:System.Windows.RoutedEvent>を定義する方法</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 具体的には、OwnerType 値は、 `ownerType` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>に渡されたパラメーター値"
  syntax:
    content: public Type OwnerType { get; }
    return:
      type: System.Type
      description: "ルーティング イベントの所有者の種類。"
  overload: System.Windows.RoutedEvent.OwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.RoutingStrategy
  id: RoutingStrategy
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "ルーティング イベントのルーティング方法を取得します。"
  remarks: "規則では、トンネルのルーティング イベントには名のプレフィックス「プレビュー」と定義されている、関連付けられているバブル イベントがあります。 あることがトンネル バージョンのみと一致するバブル バージョンではなくまれな場合があります。 詳細については、次を参照してください。[する方法: カスタム ルーティング イベントを作成する](~/add/includes/ajax-current-ext-md.md)です。       このプロパティの値に由来<xref:System.Windows.EventManager.RegisterRoutedEvent%2A><xref:System.Windows.RoutedEvent>。</xref:System.Windows.RoutedEvent>を定義する方法</xref:System.Windows.EventManager.RegisterRoutedEvent%2A> 具体的には、RoutingStrategy の値は、 `routingStrategy` <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</xref:System.Windows.EventManager.RegisterRoutedEvent%2A>に渡されたパラメーター値"
  syntax:
    content: public System.Windows.RoutingStrategy RoutingStrategy { get; }
    return:
      type: System.Windows.RoutingStrategy
      description: "列挙値の&1; つ。 既定値は列挙体の既定<xref href=&quot;System.Windows.RoutingStrategy&quot;></xref>です。"
  overload: System.Windows.RoutedEvent.RoutingStrategy*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.RoutedEvent.ToString
  id: ToString
  parent: System.Windows.RoutedEvent
  langs:
  - csharp
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows
  summary: "この文字列表現を返します<xref href=&quot;System.Windows.RoutedEvent&quot;></xref>です。"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "<xref:System.Windows.RoutedEvent.Name*>。</xref:System.Windows.RoutedEvent.Name*>によって返される値と同一では、このオブジェクトの文字列表現"
  overload: System.Windows.RoutedEvent.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.RoutedEvent.AddOwner(System.Type)
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner(Type)
  nameWithType: RoutedEvent.AddOwner(Type)
  fullName: System.Windows.RoutedEvent.AddOwner(Type)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.RoutedEvent.HandlerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
  fullName: System.Windows.RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
  fullName: System.Windows.RoutedEvent.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.RoutedEvent.OwnerType
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
  fullName: System.Windows.RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
  fullName: System.Windows.RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutingStrategy
  parent: System.Windows
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutingStrategy
  fullName: System.Windows.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString()
  nameWithType: RoutedEvent.ToString()
  fullName: System.Windows.RoutedEvent.ToString()
- uid: System.Windows.RoutedEvent.AddOwner*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: AddOwner
  nameWithType: RoutedEvent.AddOwner
- uid: System.Windows.RoutedEvent.HandlerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: HandlerType
  nameWithType: RoutedEvent.HandlerType
- uid: System.Windows.RoutedEvent.Name*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: Name
  nameWithType: RoutedEvent.Name
- uid: System.Windows.RoutedEvent.OwnerType*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: OwnerType
  nameWithType: RoutedEvent.OwnerType
- uid: System.Windows.RoutedEvent.RoutingStrategy*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: RoutingStrategy
  nameWithType: RoutedEvent.RoutingStrategy
- uid: System.Windows.RoutedEvent.ToString*
  parent: System.Windows.RoutedEvent
  isExternal: false
  name: ToString
  nameWithType: RoutedEvent.ToString
