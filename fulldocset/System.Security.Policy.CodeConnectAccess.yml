### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.CodeConnectAccess
  id: CodeConnectAccess
  children:
  - System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)
  - System.Security.Policy.CodeConnectAccess.AnyScheme
  - System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)
  - System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)
  - System.Security.Policy.CodeConnectAccess.DefaultPort
  - System.Security.Policy.CodeConnectAccess.Equals(System.Object)
  - System.Security.Policy.CodeConnectAccess.GetHashCode
  - System.Security.Policy.CodeConnectAccess.OriginPort
  - System.Security.Policy.CodeConnectAccess.OriginScheme
  - System.Security.Policy.CodeConnectAccess.Port
  - System.Security.Policy.CodeConnectAccess.Scheme
  langs:
  - csharp
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
  type: Class
  summary: "コードに付与されているネットワーク リソースへのアクセスを指定します。"
  remarks: "このクラスと組み合わせて使用、<xref:System.Security.Policy.NetCodeGroup>からダウンロードされたコードを実行する接続方法、サイトにそれを制御するクラス</xref:System.Security.Policy.NetCodeGroup>。 これらのクラスのプログラムによる制御を提供する、<xref:System.Net.WebPermission>どのスキームとコードで使用できるポートの配信元サイトへのアクセスを制御するためのコードの実行を許可します</xref:System.Net.WebPermission>。 スキームおよびポートに基づいての組み合わせは許可されているコードの発生源 URL のスキームを指定できます。       コードの元のスキームに基づく CodeConnectAccess オブジェクトを作成するを使用して、<xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>メソッド</xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>。       任意のスキームを使用できますが、ポートは制限されている CodeConnectAccess オブジェクトを作成するを使用して、<xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A>メソッド</xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A>。"
  example:
  - "The following code example creates a <xref:System.Security.Policy.NetCodeGroup> object and adds it to the User policy level.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/t-system.security.policy_5_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/t-system.security.policy_5_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeConnectAccess
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: CodeConnectAccess(String,Int32)
  nameWithType: CodeConnectAccess.CodeConnectAccess(String,Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CodeConnectAccess(String,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>クラスです。"
  remarks: "<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>プロパティを使用して、`allowScheme`パラメーター</xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> 。 スキームは、小文字に変換されます。 値<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>ネットワーク リソースへの接続に使用できるコードを実行するスキームを制御します</xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>。       <xref:System.Security.Policy.CodeConnectAccess.Port%2A>プロパティを使用して、`allowPort`パラメーター</xref:System.Security.Policy.CodeConnectAccess.Port%2A> 。 値<xref:System.Security.Policy.CodeConnectAccess.Port%2A>ネットワーク リソースへの接続に使用できるコードを実行してポートを制御します</xref:System.Security.Policy.CodeConnectAccess.Port%2A>。"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.CodeConnectAccess> object that permits downloaded code to connect back to its origin server using the HTTP protocol and the same port it was downloaded on. For an example that demonstrates using <xref:System.Security.Policy.CodeConnectAccess> objects to create a code group and adding the code group to a policy level, see the <xref:System.Security.Policy.CodeConnectAccess> class overview.  \n  \n [!code-cs[NclCodeGroup#2](~/add/codesnippet/csharp/m-system.security.policy_3_1.cs)]\n [!code-cpp[NclCodeGroup#2](~/add/codesnippet/cpp/m-system.security.policy_3_1.cpp)]"
  syntax:
    content: public CodeConnectAccess (string allowScheme, int allowPort);
    parameters:
    - id: allowScheme
      type: System.String
      description: "現在のインスタンスによって表される URI スキーム。"
    - id: allowPort
      type: System.Int32
      description: "現在のインスタンスによって表されるポート。"
  overload: System.Security.Policy.CodeConnectAccess.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>allowScheme</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - または -<code>allowScheme</code>空の文字列 (&quot;&quot;) です。       - または -<code>allowScheme</code>スキームでは許可されない文字が含まれています。       - または -<code>allowPort</code>が 0 未満です。       - または -<code>allowPort</code>が 65,535 より大きい。"
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.AnyScheme
  id: AnyScheme
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: AnyScheme
  nameWithType: CodeConnectAccess.AnyScheme
  fullName: System.Security.Policy.CodeConnectAccess.AnyScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "スキームのワイルドカードを表す文字列値が含まれています。"
  remarks: "作成する代わりに、<xref:System.Security.Policy.CodeConnectAccess>オブジェクト、この値を使用して呼び出すことができます、<xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A>を取得するメソッド、<xref:System.Security.Policy.CodeConnectAccess>指定されたポートと任意のスキームを表すオブジェクト</xref:System.Security.Policy.CodeConnectAccess></xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A></xref:System.Security.Policy.CodeConnectAccess>。       このフィールドの値は&quot;*&quot;です。"
  example:
  - "The following code example displays the value of this field.  \n  \n [!code-cs[NclCodeGroup#6](~/add/codesnippet/csharp/f-system.security.policy_2_1.cs)]\n [!code-cpp[NclCodeGroup#6](~/add/codesnippet/cpp/f-system.security.policy_2_1.cpp)]"
  syntax:
    content: public static readonly string AnyScheme;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)
  id: CreateAnySchemeAccess(System.Int32)
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: CreateAnySchemeAccess(Int32)
  nameWithType: CodeConnectAccess.CreateAnySchemeAccess(Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "返します、 <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>を任意のスキームを使用して、指定したポートにアクセスを表すインスタンス。"
  remarks: "<xref:System.Security.Policy.CodeConnectAccess>このメソッドによって返されるインスタンス、スキームのワイルドカード文字を使用して<xref:System.Security.Policy.CodeConnectAccess>(&quot;*&quot;) をスキームを表します</xref:System.Security.Policy.CodeConnectAccess></xref:System.Security.Policy.CodeConnectAccess>。"
  example:
  - "The following code example demonstrates calling this method. For an example that demonstrates using <xref:System.Security.Policy.CodeConnectAccess> objects to create a code group and adding the code group to a policy level, see the <xref:System.Security.Policy.CodeConnectAccess> class overview.  \n  \n [!code-cs[NclCodeGroup#5](~/add/codesnippet/csharp/m-system.security.policy_25_1.cs)]\n [!code-cpp[NclCodeGroup#5](~/add/codesnippet/cpp/m-system.security.policy_25_1.cpp)]"
  syntax:
    content: public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);
    parameters:
    - id: allowPort
      type: System.Int32
      description: "返されたインスタンスによって表されるポート。"
    return:
      type: System.Security.Policy.CodeConnectAccess
      description: "A <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>指定したポートのインスタンス。"
  overload: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>allowPort</code>0 未満です。       - または -<code>allowPort</code>が 65,535 より大きい。"
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)
  id: CreateOriginSchemeAccess(System.Int32)
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: CreateOriginSchemeAccess(Int32)
  nameWithType: CodeConnectAccess.CreateOriginSchemeAccess(Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "返します、 <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>を元のコードのスキームを使用して、指定したポートにアクセスを表すインスタンス。"
  remarks: "<xref:System.Security.Policy.CodeConnectAccess>このメソッドによって返されるインスタンスが<xref:System.Security.Policy.CodeConnectAccess>。</xref:System.Security.Policy.CodeConnectAccess>の設定値</xref:System.Security.Policy.CodeConnectAccess> 元のスキームは、コードが送信元である URI からスキーム値です。"
  example:
  - "The following code example demonstrates using <xref:System.Security.Policy.CodeConnectAccess> objects to create a code group and adding the code group to a policy level.  \n  \n [!code-cs[NclCodeGroup#3](~/add/codesnippet/csharp/492d74c3-750c-4ac2-93f8-_1.cs)]\n [!code-cpp[NclCodeGroup#3](~/add/codesnippet/cpp/492d74c3-750c-4ac2-93f8-_1.cpp)]"
  syntax:
    content: public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);
    parameters:
    - id: allowPort
      type: System.Int32
      description: "返されたインスタンスによって表されるポート。"
    return:
      type: System.Security.Policy.CodeConnectAccess
      description: "A <xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;> </xref>指定したポートのインスタンス。"
  overload: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>allowPort</code>0 未満です。       - または -<code>allowPort</code>が 65,535 より大きい。"
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.DefaultPort
  id: DefaultPort
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: DefaultPort
  nameWithType: CodeConnectAccess.DefaultPort
  fullName: System.Security.Policy.CodeConnectAccess.DefaultPort
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "既定のポートを表すために使用される値が含まれています。"
  remarks: "作成する、<xref:System.Security.Policy.CodeConnectAccess>を指定されたスキームの既定のポートを持つオブジェクトとしては、このフィールドを使用して、`allowPort`のパラメーター、<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>コンス トラクター</xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> </xref:System.Security.Policy.CodeConnectAccess> 。       このフィールドの値は、-3 です。"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.CodeConnectAccess> object that specifies FTP for the scheme and the default port for FTP.  \n  \n [!code-cs[NclCodeGroup#1](~/add/codesnippet/csharp/f-system.security.policy_0_1.cs)]\n [!code-cpp[NclCodeGroup#1](~/add/codesnippet/cpp/f-system.security.policy_0_1.cpp)]"
  syntax:
    content: public static readonly int DefaultPort;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CodeConnectAccess.Equals(Object)
  fullName: System.Security.Policy.CodeConnectAccess.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "2 つあるかどうかを示す値を返します<xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;></xref>オブジェクトは、同じスキームおよびポートを表します。"
  remarks: "2 つ<xref:System.Security.Policy.CodeConnectAccess>オブジェクトが等しい場合は、<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>と<xref:System.Security.Policy.CodeConnectAccess.Port%2A>プロパティの値が等しい</xref:System.Security.Policy.CodeConnectAccess.Port%2A></xref:System.Security.Policy.CodeConnectAccess.Scheme%2A></xref:System.Security.Policy.CodeConnectAccess>。"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "現在と比較するオブジェクト<xref href=&quot;System.Security.Policy.CodeConnectAccess&quot;></xref>オブジェクト。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>2 つのオブジェクトが同じスキームおよびポートを表す場合それ以外の場合、 <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Security.Policy.CodeConnectAccess.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CodeConnectAccess.GetHashCode()
  fullName: System.Security.Policy.CodeConnectAccess.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "特定の種類のハッシュ関数として機能します。"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "現在<xref:System.Object>。</xref:System.Object>のハッシュ コード"
  overload: System.Security.Policy.CodeConnectAccess.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.OriginPort
  id: OriginPort
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: OriginPort
  nameWithType: CodeConnectAccess.OriginPort
  fullName: System.Security.Policy.CodeConnectAccess.OriginPort
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コードが送信元である URI のポート値を表すために使用される値が含まれています。"
  remarks: "作成する、<xref:System.Security.Policy.CodeConnectAccess>を実行中のコードの URL 証拠のポートと同じポートを持つオブジェクトとしては、このフィールドを使用して、`allowPort`のパラメーター、<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>コンス トラクター</xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> </xref:System.Security.Policy.CodeConnectAccess> 。       このフィールドの値は-4 です。"
  example:
  - "The following code example demonstrates creating a <xref:System.Security.Policy.CodeConnectAccess> object that specifies the HTTP scheme and origin port.  \n  \n [!code-cs[NclCodeGroup#2](~/add/codesnippet/csharp/f-system.security.policy_1_1.cs)]\n [!code-cpp[NclCodeGroup#2](~/add/codesnippet/cpp/f-system.security.policy_1_1.cpp)]"
  syntax:
    content: public static readonly int OriginPort;
    return:
      type: System.Int32
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.OriginScheme
  id: OriginScheme
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: OriginScheme
  nameWithType: CodeConnectAccess.OriginScheme
  fullName: System.Security.Policy.CodeConnectAccess.OriginScheme
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "コードが送信元である URL のスキームを表すために使用される値が含まれています。"
  remarks: "このフィールドには使用しないでください、<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>コンス トラクター</xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A> 。 代わりに、使用、<xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>メソッド</xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>。       このフィールドの値は、&quot;$origin&quot;です。"
  example:
  - "The following code example displays the value of this field.  \n  \n [!code-cs[NclCodeGroup#6](~/add/codesnippet/csharp/f-system.security.policy_3_1.cs)]\n [!code-cpp[NclCodeGroup#6](~/add/codesnippet/cpp/f-system.security.policy_3_1.cpp)]"
  syntax:
    content: public static readonly string OriginScheme;
    return:
      type: System.String
      description: "追加します。"
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.Port
  id: Port
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: Port
  nameWithType: CodeConnectAccess.Port
  fullName: System.Security.Policy.CodeConnectAccess.Port
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のインスタンスによって表されるポートを取得します。"
  remarks: "ポートの値は、0 ~ 65,535 をします。 <xref:System.Security.Policy.CodeConnectAccess>。</xref:System.Security.Policy.CodeConnectAccess>のインスタンスを作成するときに、ポートの値を指定します。"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cs[NclCodeGroup#4](~/add/codesnippet/csharp/p-system.security.policy_5_1.cs)]\n [!code-cpp[NclCodeGroup#4](~/add/codesnippet/cpp/p-system.security.policy_5_1.cpp)]"
  syntax:
    content: public int Port { get; }
    return:
      type: System.Int32
      description: "A<xref:System.Int32>と組み合わせて使用するコンピューターのポートを識別する値、<xref:System.Security.Policy.CodeConnectAccess.Scheme*>プロパティ</xref:System.Security.Policy.CodeConnectAccess.Scheme*></xref:System.Int32>。"
  overload: System.Security.Policy.CodeConnectAccess.Port*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.CodeConnectAccess.Scheme
  id: Scheme
  parent: System.Security.Policy.CodeConnectAccess
  langs:
  - csharp
  name: Scheme
  nameWithType: CodeConnectAccess.Scheme
  fullName: System.Security.Policy.CodeConnectAccess.Scheme
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "現在のインスタンスによって表される URI スキームを取得します。"
  remarks: "スキーム値は、 <xref:System.Security.Policy.CodeConnectAccess>。</xref:System.Security.Policy.CodeConnectAccess>のインスタンスを作成するときに指定します。"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cs[NclCodeGroup#4](~/add/codesnippet/csharp/p-system.security.policy_10_1.cs)]\n [!code-cpp[NclCodeGroup#4](~/add/codesnippet/cpp/p-system.security.policy_10_1.cpp)]"
  syntax:
    content: public string Scheme { get; }
    return:
      type: System.String
      description: "A<xref:System.String>小文字に変換して、URI スキームを識別します</xref:System.String>。"
  overload: System.Security.Policy.CodeConnectAccess.Scheme*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CodeConnectAccess(String,Int32)
  nameWithType: CodeConnectAccess.CodeConnectAccess(String,Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CodeConnectAccess(String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.CodeConnectAccess.AnyScheme
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: AnyScheme
  nameWithType: CodeConnectAccess.AnyScheme
  fullName: System.Security.Policy.CodeConnectAccess.AnyScheme
- uid: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CreateAnySchemeAccess(Int32)
  nameWithType: CodeConnectAccess.CreateAnySchemeAccess(Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(Int32)
- uid: System.Security.Policy.CodeConnectAccess
  parent: System.Security.Policy
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess
  fullName: System.Security.Policy.CodeConnectAccess
- uid: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CreateOriginSchemeAccess(Int32)
  nameWithType: CodeConnectAccess.CreateOriginSchemeAccess(Int32)
  fullName: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(Int32)
- uid: System.Security.Policy.CodeConnectAccess.DefaultPort
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: DefaultPort
  nameWithType: CodeConnectAccess.DefaultPort
  fullName: System.Security.Policy.CodeConnectAccess.DefaultPort
- uid: System.Security.Policy.CodeConnectAccess.Equals(System.Object)
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Equals(Object)
  nameWithType: CodeConnectAccess.Equals(Object)
  fullName: System.Security.Policy.CodeConnectAccess.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.CodeConnectAccess.GetHashCode
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: GetHashCode()
  nameWithType: CodeConnectAccess.GetHashCode()
  fullName: System.Security.Policy.CodeConnectAccess.GetHashCode()
- uid: System.Security.Policy.CodeConnectAccess.OriginPort
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: OriginPort
  nameWithType: CodeConnectAccess.OriginPort
  fullName: System.Security.Policy.CodeConnectAccess.OriginPort
- uid: System.Security.Policy.CodeConnectAccess.OriginScheme
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: OriginScheme
  nameWithType: CodeConnectAccess.OriginScheme
  fullName: System.Security.Policy.CodeConnectAccess.OriginScheme
- uid: System.Security.Policy.CodeConnectAccess.Port
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Port
  nameWithType: CodeConnectAccess.Port
  fullName: System.Security.Policy.CodeConnectAccess.Port
- uid: System.Security.Policy.CodeConnectAccess.Scheme
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Scheme
  nameWithType: CodeConnectAccess.Scheme
  fullName: System.Security.Policy.CodeConnectAccess.Scheme
- uid: System.Security.Policy.CodeConnectAccess.#ctor*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CodeConnectAccess
  nameWithType: CodeConnectAccess.CodeConnectAccess
- uid: System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CreateAnySchemeAccess
  nameWithType: CodeConnectAccess.CreateAnySchemeAccess
- uid: System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: CreateOriginSchemeAccess
  nameWithType: CodeConnectAccess.CreateOriginSchemeAccess
- uid: System.Security.Policy.CodeConnectAccess.Equals*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Equals
  nameWithType: CodeConnectAccess.Equals
- uid: System.Security.Policy.CodeConnectAccess.GetHashCode*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: GetHashCode
  nameWithType: CodeConnectAccess.GetHashCode
- uid: System.Security.Policy.CodeConnectAccess.Port*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Port
  nameWithType: CodeConnectAccess.Port
- uid: System.Security.Policy.CodeConnectAccess.Scheme*
  parent: System.Security.Policy.CodeConnectAccess
  isExternal: false
  name: Scheme
  nameWithType: CodeConnectAccess.Scheme
