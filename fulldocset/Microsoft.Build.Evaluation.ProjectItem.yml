### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Evaluation.ProjectItem
  id: ProjectItem
  children:
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  - Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.IsImported
  - Microsoft.Build.Evaluation.ProjectItem.ItemType
  - Microsoft.Build.Evaluation.ProjectItem.Metadata
  - Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  - Microsoft.Build.Evaluation.ProjectItem.Project
  - Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  - Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  - Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  - Microsoft.Build.Evaluation.ProjectItem.Xml
  langs:
  - csharp
  name: ProjectItem
  nameWithType: ProjectItem
  fullName: Microsoft.Build.Evaluation.ProjectItem
  type: Class
  summary: "デザイン時の評価されたプロジェクト項目を表します。"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")]

      public class ProjectItem
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  id: DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "すべての項目メタデータに対する列挙子を取得します。"
  remarks: "項目定義からのメタデータは含まれません。 &quot;FullPath&quot;などの組み込みのメタデータは含まれません。"
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata> DirectMetadata { get; }
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "列挙子を返します上、すべてのアイテム メタデータを null することはできません。"
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  id: DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "この項目のメタデータの数を取得します。"
  remarks: "項目定義からのメタデータは含まれません。 &quot;FullPath&quot;などの組み込みのメタデータは含まれません。"
  syntax:
    content: public int DirectMetadataCount { get; }
    return:
      type: System.Int32
      description: "この項目のメタデータの数を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  id: EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "Include 属性の評価値を取得します。"
  remarks: "エスケープ文字は存在しません。"
  syntax:
    content: public string EvaluatedInclude { get; }
    return:
      type: System.String
      description: "Include 属性の評価値を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  id: GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "この項目の指定したメタデータの評価値を取得します。"
  remarks: "項目定義からのメタデータがあります。 &quot;FullPath&quot;などの組み込みのメタデータは含まれません。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "値を取得するメタデータの名前。"
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "この項目の指定したメタデータの評価値を取得します。 指定した名前のメタデータが存在しない場合は null を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  id: GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "項目の定義に基づくメタデータを含め、この項目の指定したメタデータの評価値を取得します。"
  remarks: "メタデータが存在するかどうかを特定するには、かどうか値かは、使用<xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>。</xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>       このメソッドは&quot;FullPath&quot;などの組み込みのメタデータの値にアクセスするために可能性があります。"
  syntax:
    content: public string GetMetadataValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "値を取得するメタデータの名前。"
    return:
      type: System.String
      description: "項目の定義に基づくメタデータを含め、この項目のメタデータを特定の評価値を返します。 指定した名前のメタデータが存在しない場合は、空の文字列を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  id: HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "指定した名前のメタデータがこの項目に対して定義されているかどうかを判断します。"
  remarks: "組み込みメタデータには項目の定義に基づくメタデータが含まれます。"
  syntax:
    content: public bool HasMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "検索対象のメタデータの名前。"
    return:
      type: System.Boolean
      description: "この項目に指定した名前のメタデータが定義されている場合、true を返しますfalse それ以外の場合。"
  overload: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  id: IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "インポートされたファイルからこの項目の発生元かどうかを判断します。"
  syntax:
    content: public bool IsImported { get; }
    return:
      type: System.Boolean
      description: "この項目がインポートされたファイルから生成する場合は true を返すfalse それ以外の場合。"
  overload: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  id: ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得またはこの項目の種類を設定します。"
  syntax:
    content: public string ItemType { get; set; }
    return:
      type: System.String
      description: "項目の種類を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  id: Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "この項目のすべてのメタデータを取得します。"
  remarks: "&quot;FullPath&quot;などの組み込みのメタデータは含まれません。       追加、削除、または組み込みメタデータの値を変更、<xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>および<xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A></xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A>を使用します。"
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata> Metadata { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
      description: "この項目のすべてのメタデータを返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  id: MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "項目定義から送信されたすべてのメタデータを含め、この項目のメタデータと組み込みメタデータの数を取得します。"
  syntax:
    content: public int MetadataCount { get; }
    return:
      type: System.Int32
      description: "項目定義から送信されたすべてのメタデータを含め、この項目のメタデータと組み込みメタデータの数を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  id: Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "このプロジェクト項目を含むプロジェクトを取得します。"
  remarks: "プロジェクト項目は、プロジェクトによって常に格納されます。"
  syntax:
    content: public Microsoft.Build.Evaluation.Project Project { get; }
    return:
      type: Microsoft.Build.Evaluation.Project
      description: "このプロジェクト項目を含むプロジェクトを返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Project*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  id: RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "指定した名前のすべてのメタデータを削除します。"
  remarks: "メタデータ名が&quot;FullPath&quot;のように、組み込みのメタデータを参照している場合は、InvalidArgumentException をスローします。       メタデータ名は、項目定義から発信されるメタデータを参照する場合は、InvalidOperationException をスローします。"
  syntax:
    content: public bool RemoveMetadata (string name);
    parameters:
    - id: name
      type: System.String
      description: "削除するメタデータの名前。"
    return:
      type: System.Boolean
      description: "削除前に、指定した名前のメタデータが存在する場合、true を返しますfalse それ以外の場合。"
  overload: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  id: Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "項目を指定した名前に変更します。"
  remarks: "等しい設定、<xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>値</xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A>。 一般に、評価が発生しないため、この結果、複数の項目を&1; つの項目の名前変更のコンテキストで意味を持ちません。 ただし場合は、項目を分割する必要はありませんし、新しい値を正確に&1; つの項目を評価、し、その評価の Include 属性は評価された値で更新されます。"
  syntax:
    content: public void Rename (string name);
    parameters:
    - id: name
      type: System.String
      description: "項目の新しい名前。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Rename*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  id: SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "項目に指定された名前と未評価の値を持つメタデータを追加します。"
  remarks: "その項目の定義から発生していない限りは、指定した名前のアイテムでは、メタデータが既に存在する場合の既存のメタデータの値を更新します。 評価済みのプロジェクトでは、ソフトウェア更新プログラムが再評価されるまでプロジェクト内の他に何も影響しません。       たとえば、項目の種類&quot;i&quot;でメタデータ&quot;m&quot;をという名前の部分を追加する場合には影響しません&quot;j&quot;から評価される&quot;@(&quot;% (m)&quot;-> j)&quot;再評価されるまでです。 評価によって、「$(p)」、変更が何かに&quot;m&quot;の未評価の値が設定されている場合、評価された値は設定することもをそのまま「$(p)」再評価されるまでです。       未評価の値に特殊文字はエスケープ文字に変換する必要があります。"
  syntax:
    content: public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "追加するメタデータの名前。"
    - id: unevaluatedValue
      type: System.String
      description: "追加するメタデータの未評価の値。"
    return:
      type: Microsoft.Build.Evaluation.ProjectMetadata
      description: "新しいメタデータを返します。 指定した名前のメタデータが既に存在する場合は、このメタデータを返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  id: UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "取得または未評価の Include 属性の値を設定します。"
  syntax:
    content: public string UnevaluatedInclude { get; set; }
    return:
      type: System.String
      description: "未評価の Include 属性の値を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  id: Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  langs:
  - csharp
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Evaluation
  summary: "この項目に関連付けられている項目要素を取得します。"
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement Xml { get; }
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "この項目に関連付けられている項目要素を返します。"
  overload: Microsoft.Build.Evaluation.ProjectItem.Xml*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectMetadata>
  nameWithType: IEnumerable<ProjectMetadata>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata(String)
  nameWithType: ProjectItem.GetMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectMetadata
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectMetadata
  nameWithType: ProjectMetadata
  fullName: Microsoft.Build.Evaluation.ProjectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue(String)
  nameWithType: ProjectItem.GetMetadataValue(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata(String)
  nameWithType: ProjectItem.HasMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.HasMetadata(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
  fullName: Microsoft.Build.Evaluation.ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
  fullName: Microsoft.Build.Evaluation.ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
  fullName: Microsoft.Build.Evaluation.ProjectItem.Metadata
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Evaluation.ProjectMetadata}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectMetadata>
  nameWithType: ICollection<ProjectMetadata>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Evaluation.ProjectMetadata>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Evaluation.ProjectMetadata
    name: ProjectMetadata
    nameWithType: ProjectMetadata
    fullName: ProjectMetadata
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
  fullName: Microsoft.Build.Evaluation.ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
  fullName: Microsoft.Build.Evaluation.ProjectItem.Project
- uid: Microsoft.Build.Evaluation.Project
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: Project
  nameWithType: Project
  fullName: Microsoft.Build.Evaluation.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata(String)
  nameWithType: ProjectItem.RemoveMetadata(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename(String)
  nameWithType: ProjectItem.Rename(String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.Rename(String)
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue(String,String)
  nameWithType: ProjectItem.SetMetadataValue(String,String)
  fullName: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(String,String)
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
  fullName: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
  fullName: Microsoft.Build.Evaluation.ProjectItem.Xml
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadata
  nameWithType: ProjectItem.DirectMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: DirectMetadataCount
  nameWithType: ProjectItem.DirectMetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: EvaluatedInclude
  nameWithType: ProjectItem.EvaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadata
  nameWithType: ProjectItem.GetMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: GetMetadataValue
  nameWithType: ProjectItem.GetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.HasMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: HasMetadata
  nameWithType: ProjectItem.HasMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.IsImported*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: IsImported
  nameWithType: ProjectItem.IsImported
- uid: Microsoft.Build.Evaluation.ProjectItem.ItemType*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: ItemType
  nameWithType: ProjectItem.ItemType
- uid: Microsoft.Build.Evaluation.ProjectItem.Metadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Metadata
  nameWithType: ProjectItem.Metadata
- uid: Microsoft.Build.Evaluation.ProjectItem.MetadataCount*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: MetadataCount
  nameWithType: ProjectItem.MetadataCount
- uid: Microsoft.Build.Evaluation.ProjectItem.Project*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Project
  nameWithType: ProjectItem.Project
- uid: Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: RemoveMetadata
  nameWithType: ProjectItem.RemoveMetadata
- uid: Microsoft.Build.Evaluation.ProjectItem.Rename*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Rename
  nameWithType: ProjectItem.Rename
- uid: Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: SetMetadataValue
  nameWithType: ProjectItem.SetMetadataValue
- uid: Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: UnevaluatedInclude
  nameWithType: ProjectItem.UnevaluatedInclude
- uid: Microsoft.Build.Evaluation.ProjectItem.Xml*
  parent: Microsoft.Build.Evaluation.ProjectItem
  isExternal: false
  name: Xml
  nameWithType: ProjectItem.Xml
