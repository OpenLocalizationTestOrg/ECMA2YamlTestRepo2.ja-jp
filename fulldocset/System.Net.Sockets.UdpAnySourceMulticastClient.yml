### YamlMime:ManagedReference
items:
- uid: System.Net.Sockets.UdpAnySourceMulticastClient
  id: UdpAnySourceMulticastClient
  children:
  - System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  - System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  - System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  - System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  - System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  langs:
  - csharp
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient
  type: Class
  summary: "Any ソース マルチキャスト (ASM) またはインターネット標準マルチキャスト (ISM) とも呼ばれる任意のソースからのマルチキャスト トラフィック用のクライアント受信者です。"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      [System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)]

      public class UdpAnySourceMulticastClient : IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  id: '#ctor(System.Net.IPAddress,System.Int32)'
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "新たに作成<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref> UDP クライアントをグループ アドレスにサブスクライブし、任意のソースからデータグラムを受信できます。"
  remarks: "UdpAnySourceMulticastClient コンス トラクターは、グループ アドレスおよびポート、UDP マルチキャスト ソケットに関連付けますが、バインドやしません、ソケットを使用してそれ以外の場合。       `groupAddress`パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。       `localPort` 1,024 未満のポート パラメーターを指定する必要があります。"
  syntax:
    content: public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);
    parameters:
    - id: groupAddress
      type: System.Net.IPAddress
      description: "この受信者にとってサブスクライブ先マルチキャスト グループのアドレス。"
    - id: localPort
      type: System.Int32
      description: "ローカルのポートにバインドするには、この受信者です。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupAddress</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>. 参照"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>localPort</code>0 より小さい - または -<code>localPort</code>が 65,535 より大きい。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  id: BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "ソケットをバインドし、マルチキャスト データグラムをすべてのグループ参加要素から受信できるを許可するグループに結合操作を開始します。"
  remarks: "BeginJoinGroup メソッドは、ローカル ポートに UDP マルチキャスト ソケットをバインドし、マルチキャスト データグラムをすべてマルチキャスト グループの参加要素から受信できるようにグループを結合します。 ローカル ポートとマルチキャスト グループのアドレスが指定されて、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>コンス トラクター</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> 。       指定する方法、`callback`パラメーターがマルチキャスト グループへの参加操作が完了したときに呼び出されます。       必要な場合、ランタイムによって、BeginJoinGroup メソッドには、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシーのチェックもを実行します。 クライアントが<xref:System.Net.Sockets.SocketException><xref:System.Net.Sockets.SocketError>。</xref:System.Net.Sockets.SocketError>がスローされ</xref:System.Net.Sockets.SocketException>アクセスを許可されていない場合"
  syntax:
    content: public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>。</xref:System.IAsyncResult>を返します。       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループは既に結合されているか、結合操作が現在進行中です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "参加したマルチキャスト グループからパケットの受信の操作を開始し、すべての送信者からのグループに、パケットが届いたときに、指定されたコールバックを呼び出します。"
  remarks: "BeginReceiveFromGroup メソッドは、任意の送信者からに参加しているマルチキャスト グループから UDP パケットの受信の操作を開始します。 ローカル ポートとマルチキャスト グループのアドレスが指定されて、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A>コンス トラクター</xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> 。 マルチキャストのクライアントで、マルチキャスト グループに結合が完了しましたもする必要があります。       指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。       UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。 ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "受信したデータを格納するバッファー。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`データを格納します。"
    - id: count
      type: System.Int32
      description: "受信および格納するバイトの最大数、`buffer`です。"
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>。</xref:System.IAsyncResult>を返します。       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 より小さい - または -<code>offset</code>がの長さより大きい、<code>buffer</code>です。       - または -<code>count</code>が 0 より小さい - または -<code>offset</code>カウントを加算がの長さより大きい、<code>buffer</code>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  id: BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "指定した宛先にユニキャスト パケットを送信する操作を開始します。"
  remarks: "BeginSendTo メソッドは、参加しているマルチキャスト グループに UDP パケットを送信する操作を開始します。       クライアントで、マルチキャスト グループに結合が完了しました必要があります。 指定された宛先アドレス、`remoteEndPoint`パラメーター必要がありますは既に送信マルチキャスト パケットをこの受信側にします。 一部のプロトコルでは、この情報を使用して、サービスの統計、または復旧メッセージの品質のフロー制御を渡します。       指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。       アドレスが指定されている場合にのみ転送は許可されて、`remoteEndPoint`パラメーターがこの受信者にマルチキャスト パケットを送信して既にです。 クライアントが<xref:System.Net.Sockets.SocketException><xref:System.Net.Sockets.SocketError>。</xref:System.Net.Sockets.SocketError>がスローされ</xref:System.Net.Sockets.SocketException>アクセスを許可されていない場合       宛先ポートが指定されている場合、`remoteEndPoint`パラメーターより小さい数は 1,024、 <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError>でがスローされます</xref:System.Net.Sockets.SocketException>       UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。 ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "送信するデータを格納しているバッファー。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`送信されるデータを読み取れません。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`buffer`です。"
    - id: remoteEndPoint
      type: System.Net.IPEndPoint
      description: "パケットを送信するリモート エンドポイント。"
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>。</xref:System.IAsyncResult>を返します。       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 より小さい - または -<code>offset</code>がの長さより大きい、<code>buffer</code>です。       - または -<code>count</code>が 0 より小さい - または -<code>offset</code>カウントを加算がの長さより大きい、<code>buffer</code>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "参加しているマルチキャスト グループにパケットを送信する操作を開始し、グループにパケットが送信されましたが、指定されたコールバックを呼び出します。"
  remarks: "BeginSendToGroup メソッドは、参加しているマルチキャスト グループに UDP パケットを送信する操作を開始します。       クライアントで、マルチキャスト グループに結合が完了しました必要があります。       指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。       UDP では一般的ななくても、受信操作が同期的に、失敗した場合は、ソケット エラーを設定することができます。 ソケット エラーが発生した場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "送信するデータを格納しているバッファー。"
    - id: offset
      type: System.Int32
      description: "先頭からのバイト単位のオフセット、`buffer`送信されるデータを読み取れません。"
    - id: count
      type: System.Int32
      description: "送信するバイト数、`buffer`です。"
    - id: callback
      type: System.AsyncCallback
      description: "操作が完了するときに呼び出されるコールバック メソッド。"
    - id: state
      type: System.Object
      description: "省略可能な状態に渡す情報を`callback`のこの操作のメソッドです。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>。</xref:System.IAsyncResult>を返します。       <xref:System.IAsyncResult>この操作を参照する</xref:System.IAsyncResult>。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>0 より小さい - または -<code>offset</code>がの長さより大きい、<code>buffer</code>です。       - または -<code>count</code>が 0 より小さい - または -<code>offset</code>カウントを加算がの長さより大きい、<code>buffer</code>です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  id: BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "そこから発生のマルチキャスト パケットが受信されないように、ソースをブロックします。"
  remarks: "BlockSource メソッドでは、受信されてから、指定したソース アドレスから送信元マルチキャスト パケットをブロックします。 クライアントで、マルチキャスト グループに結合が完了しました必要があります。       `sourceAddress`パラメーターは、IPv4 または IPv6 のアドレスをする可能性がありますが、`sourceAddress`パラメーターは、クライアントが参加しているマルチキャスト グループのアドレス ファミリと一致する必要があります。       指定する方法、`callback`パラメーターが、パケットが受信したときに呼び出されます。       ブロックのソースの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void BlockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "ブロックする送信元のアドレス。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  id: Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "マルチキャスト グループを維持しの現在のインスタンスによって使用されているすべてのリソースを解放、 <xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>クラスと、基になる<xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>"
  remarks: "<xref:System.Net.Sockets.UdpAnySourceMulticastClient>。</xref:System.Net.Sockets.UdpAnySourceMulticastClient>の使用が終了したときに、Dispose を呼び出す Dispose メソッドは、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>使用不可の状態</xref:System.Net.Sockets.UdpAnySourceMulticastClient>。 Dispose を呼び出した後は、すべての参照を解放する必要があります、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>ガベージ コレクターがメモリを再利用できるようにする、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>占有されていた</xref:System.Net.Sockets.UdpAnySourceMulticastClient></xref:System.Net.Sockets.UdpAnySourceMulticastClient>。       常に呼び出す Disposebefore <xref:System.Net.Sockets.UdpAnySourceMulticastClient>。</xref:System.Net.Sockets.UdpAnySourceMulticastClient>の最後の参照を解放します。 それ以外の場合、使用されているリソースは解放されませんガベージ コレクター呼び出すまで、<xref:System.Net.Sockets.UdpAnySourceMulticastClient>オブジェクトの<xref:System.Object.Finalize%2A>メソッド</xref:System.Object.Finalize%2A></xref:System.Net.Sockets.UdpAnySourceMulticastClient>。"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  id: EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "マルチキャスト グループに、非同期の参加グループの操作を完了します。"
  remarks: "EndJoinGroup メソッドでは、マルチキャスト グループへのソケットと結合操作に非同期のバインドを完了します。       必要な場合、ランタイムによって、EndJoinGroup メソッドには、クライアントがマルチキャスト グループへのアクセスを許可されていることを確認するポリシーのチェックもを実行します。 クライアントが<xref:System.Net.Sockets.SocketException><xref:System.Net.Sockets.SocketError>。</xref:System.Net.Sockets.SocketError>がスローされ</xref:System.Net.Sockets.SocketException>アクセスを許可されていない場合       結合のグループの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void EndJoinGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の結合操作の結果。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  id: EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "参加したマルチキャスト グループからパケットを受け取るの非同期操作を完了し、受信した情報を提供します。"
  remarks: "EndReceiveFromGroup メソッドでは、マルチキャスト グループからパケットを受信する非同期操作を完了します。       受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の結果には、操作が表示されます。"
    - id: source
      type: System.Net.IPEndPoint
      description: "元のエンドポイントからのパケットの受信場所。"
    return:
      type: System.Int32
      description: "渡されるバッファー パラメーターに格納されたメッセージの長さをバイト単位で、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>メソッド</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*>。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  id: EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "指定した宛先にユニキャスト パケットを送信する操作を完了します。"
  remarks: "EndSendTo メソッドでは、指定された宛先アドレスに対してパケットを送信する非同期操作を完了します。       受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void EndSendTo (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の送信操作の結果。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  id: EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "マルチキャスト グループにパケットを送信する操作を完了します。"
  remarks: "EndSendToGroup メソッドは、マルチキャスト グループにパケットを送信する非同期操作を完了します。       受信操作の実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void EndSendToGroup (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "非同期の送信操作の結果。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>result</code>null 参照 (Visual Basic では Nothing) です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  id: MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得または発信マルチキャスト パケットが送信元アプリケーションに配信されるかどうかを指定する値を設定します。"
  remarks: "マルチキャスト トラフィックは、インターネット上の多対多の通信用のスケーラブルな方法です。 プロセスは、マルチキャスト グループのアドレスをサブスクライブします。 次に、マルチキャスト グループにサブスクライブしているプロセスによって送信されるすべてのパケットは、マルチキャスト アドレスをサブスクライブしている他のすべてのプロセスによって受信されます。 MulticastLoopback プロパティは、ローカル コンピューター上のどのプロセスが、マルチキャスト グループにこのクライアントから送信マルチキャスト パケットを受け取るかどうかを制御します。"
  syntax:
    content: public bool MulticastLoopback { get; set; }
    return:
      type: System.Boolean
      description: "<xref:System.Boolean>。</xref:System.Boolean>を返します。       マルチキャスト グループに発信パケットが送信元アプリケーションに配信されるかどうかを示す値。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  id: ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得または (バイト単位) の受信バッファーのサイズを設定、<xref:System.Net.Sockets.Socket>このマルチキャストの受信操作に使用される<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;></xref>インスタンス</xref:System.Net.Sockets.Socket>。"
  remarks: "ReceiveBufferSize プロパティを取得または基になるの受信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.Socket>このマルチキャストの受信操作に使用される<xref:System.Net.Sockets.UdpAnySourceMulticastClient>インスタンス</xref:System.Net.Sockets.UdpAnySourceMulticastClient></xref:System.Net.Sockets.Socket>。 ReceiveBufferSize プロパティが具体的には、パケットが到着すると、アプリケーションがまだ呼び出さいないときに、スタックによって使われるバッファーのサイズを制御、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>メソッド</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>。 このバッファーがいっぱいにし、アプリケーションの呼び出しの前にパケットを受け取った場合、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>と<xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A>メソッド、古いパケットが削除されます</xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A></xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>。 アプリケーションが、古いパケットを受信できなくし、呼び出したときに新しいパケットの受信が代わりに、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>メソッド</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A>。       Windows 上の受信バッファーの既定のサイズは、8,192 バイトです。"
  syntax:
    content: public int ReceiveBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>を返します。       受信バッファーのバイト単位のサイズ。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定されたバッファー サイズが 0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  id: SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  type: Property
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "取得または (バイト単位) の送信バッファーのサイズを設定、<xref:System.Net.Sockets.Socket>このマルチキャスト送信操作に使用される<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;></xref>インスタンス</xref:System.Net.Sockets.Socket>。"
  remarks: "SendBufferSize プロパティを取得またはこのマルチキャスト送信操作に使用される基になるソケットの送信バッファーのバイト単位のサイズを設定<xref:System.Net.Sockets.UdpAnySourceMulticastClient>インスタンス</xref:System.Net.Sockets.UdpAnySourceMulticastClient>。       呼び出し、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>または<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A>メソッドの時間が長くなります送信バッファーがいっぱいの場合は、SendBufferSize プロパティの値に応じて、コールバックを呼び出します</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A></xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A>。 SendBufferSize プロパティでは、送信が完了するまで、ユーザーのバッファー状態を維持の物理メモリにロックするかについてのみ制御します。       Windows 上の送信バッファーの既定のサイズは、8,192 バイトです。"
  syntax:
    content: public int SendBufferSize { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>。</xref:System.Int32>を返します。       送信バッファーのバイト単位のサイズ。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "指定されたバッファー サイズが 0 未満です。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  platform:
  - net462
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  id: UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  langs:
  - csharp
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.Sockets
  summary: "以前の呼び出しによってブロックされていた元のブロックを解除、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>メソッドから送信元マルチキャスト パケットを受信できるようにします</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*>。"
  remarks: "UnblockSource メソッドには、受け取ることができますので、指定したソース アドレスから送信元マルチキャスト パケットがブロック解除します。 指定したソース アドレス必要がありますがブロックされていたへの呼び出しによって、<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>メソッド</xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>。       クライアントで、マルチキャスト グループに結合が完了しました必要があります。       `sourceAddress`パラメーターには、IPv4 または IPv6 のマルチキャスト アドレス。       指定したソースに対応する場合、`sourceAddress`パラメーターがこの<xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>メソッドは、 <xref:System.Net.Sockets.SocketException> <xref:System.Net.Sockets.SocketError>.</xref:System.Net.Sockets.SocketError>でがスローされます</xref:System.Net.Sockets.SocketException></xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A>への呼び出しによって既にブロックされていません。       ブロックを解除するソースの操作を実行中にソケット エラーがある場合、<xref:System.Net.Sockets.SocketException>がスローされます</xref:System.Net.Sockets.SocketException>。 受信したエラーがのメンバーとして指定された、<xref:System.Net.Sockets.SocketError>列挙体です</xref:System.Net.Sockets.SocketError>。"
  syntax:
    content: public void UnblockSource (System.Net.IPAddress sourceAddress);
    parameters:
    - id: sourceAddress
      type: System.Net.IPAddress
      description: "ブロックを解除するソースのアドレス。"
  overload: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "マルチキャスト グループはまだ結合されていません。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Net.Sockets.UdpAnySourceMulticastClient&quot;> </xref>は破棄されました。"
  - type: System.Net.Sockets.SocketException
    commentId: T:System.Net.Sockets.SocketException
    description: "ソケットへのアクセスしようとするときにエラーが発生しました。 詳細については「解説」セクションを参照してください。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Sockets.SocketException
  isExternal: true
  name: System.Net.Sockets.SocketException
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient(IPAddress,Int32)
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UdpAnySourceMulticastClient(IPAddress,Int32)
- uid: System.Net.IPAddress
  parent: System.Net
  isExternal: true
  name: IPAddress
  nameWithType: IPAddress
  fullName: System.Net.IPAddress
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup(AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(Byte[],Int32,Int32,IPEndPoint,AsyncCallback,Object)
- uid: System.Net.IPEndPoint
  parent: System.Net
  isExternal: true
  name: IPEndPoint
  nameWithType: IPEndPoint
  fullName: System.Net.IPEndPoint
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.BlockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose()
  nameWithType: UdpAnySourceMulticastClient.Dispose()
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose()
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(IAsyncResult,IPEndPoint)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup(IAsyncResult)
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(IAsyncResult)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource(IPAddress)
  nameWithType: UdpAnySourceMulticastClient.UnblockSource(IPAddress)
  fullName: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(IPAddress)
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.#ctor*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UdpAnySourceMulticastClient
  nameWithType: UdpAnySourceMulticastClient.UdpAnySourceMulticastClient
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginJoinGroup
  nameWithType: UdpAnySourceMulticastClient.BeginJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.BeginReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendTo
  nameWithType: UdpAnySourceMulticastClient.BeginSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BeginSendToGroup
  nameWithType: UdpAnySourceMulticastClient.BeginSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: BlockSource
  nameWithType: UdpAnySourceMulticastClient.BlockSource
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.Dispose*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: Dispose
  nameWithType: UdpAnySourceMulticastClient.Dispose
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndJoinGroup
  nameWithType: UdpAnySourceMulticastClient.EndJoinGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndReceiveFromGroup
  nameWithType: UdpAnySourceMulticastClient.EndReceiveFromGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendTo
  nameWithType: UdpAnySourceMulticastClient.EndSendTo
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: EndSendToGroup
  nameWithType: UdpAnySourceMulticastClient.EndSendToGroup
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: MulticastLoopback
  nameWithType: UdpAnySourceMulticastClient.MulticastLoopback
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: ReceiveBufferSize
  nameWithType: UdpAnySourceMulticastClient.ReceiveBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: SendBufferSize
  nameWithType: UdpAnySourceMulticastClient.SendBufferSize
- uid: System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource*
  parent: System.Net.Sockets.UdpAnySourceMulticastClient
  isExternal: false
  name: UnblockSource
  nameWithType: UdpAnySourceMulticastClient.UnblockSource
