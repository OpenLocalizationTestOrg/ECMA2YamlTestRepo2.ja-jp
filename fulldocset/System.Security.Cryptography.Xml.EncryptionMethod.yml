### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Xml.EncryptionMethod
  id: EncryptionMethod
  children:
  - System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  - System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  - System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  - System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  - System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  - System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  langs:
  - csharp
  name: EncryptionMethod
  nameWithType: EncryptionMethod
  fullName: System.Security.Cryptography.Xml.EncryptionMethod
  type: Class
  summary: "XML 暗号化に使用される暗号化アルゴリズムをカプセル化します。"
  remarks: "`<EncryptionMethod>`タグでは、統一リソース識別子 (URI) を使用して、XML データの暗号化を解除するために使用する必要があります、暗号化アルゴリズムを識別します。  EncryptionMethod クラスによってカプセル化、 `<EncryptionMethod>` http://www.w3.org/TR/xmlenc-core/ に World Wide Web Consortium の XML 暗号化の仕様で定義されているタグがあります。       関連付けられている暗号化アルゴリズムを識別する EncryptionMethod クラスを使用して、<xref:System.Security.Cryptography.Xml.EncryptedData>要素または<xref:System.Security.Cryptography.Xml.EncryptedKey>要素</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData>。       Http://www.w3.org/TR/xmlenc-core/ にある World Wide Web Consortium の XML 暗号化の仕様で定義されている URI 識別子の&1; つを使用します。  すべての URI 識別子は、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラス</xref:System.Security.Cryptography.Xml.EncryptedXml>の静的フィールドとしてアクセス"
  example:
  - "The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \n  \n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/t-system.security.crypto_113_1.cpp)]\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_113_1.vb)]\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/t-system.security.crypto_113_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/t-system.security.crypto_113_2.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/t-system.security.crypto_113_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/t-system.security.crypto_113_2.cs)]"
  syntax:
    content: public class EncryptionMethod
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: EncryptionMethod()
  nameWithType: EncryptionMethod.EncryptionMethod()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>クラスです。"
  remarks: "このコンス トラクターは、の新しいインスタンスを初期化します、<xref:System.Security.Cryptography.Xml.EncryptionMethod>クラス、Uniform Resource Identifier () の暗号化アルゴリズムを指定することがない場合</xref:System.Security.Cryptography.Xml.EncryptionMethod>。"
  syntax:
    content: public EncryptionMethod ();
    parameters: []
  overload: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: EncryptionMethod(String)
  nameWithType: EncryptionMethod.EncryptionMethod(String)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod(String)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>アルゴリズム (Uniform Resource Identifier) を指定します。"
  remarks: "このコンス トラクターは、の新しいインスタンスを初期化します、<xref:System.Security.Cryptography.Xml.EncryptionMethod>クラス暗号化アルゴリズムの URI を使用します</xref:System.Security.Cryptography.Xml.EncryptionMethod>。       Http://www.w3.org/TR/xmlenc-core/ にある World Wide Web Consortium の XML 暗号化の仕様で定義されている URI 識別子の&1; つを使用します。  すべての URI 識別子は、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラス</xref:System.Security.Cryptography.Xml.EncryptedXml>の静的フィールドとしてアクセス"
  example:
  - "The following code example demonstrates how to create a simple utility class that uses the <xref:System.Security.Cryptography.TripleDES> algorithm to encrypt an XML document.  \n  \n [!code-cpp[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/cpp/m-system.security.crypto_76_1.cpp)]\n [!code-vb[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/visualbasic/m-system.security.crypto_76_1.vb)]\n [!code-cs[Cryptography.XML.MainXMLEncDecryptDataOOP#1](~/add/codesnippet/csharp/m-system.security.crypto_76_1.cs)]  \n  \n The following code example demonstrates how to encrypt an XML document using a symmetric key. This example does not include any key information in the encrypted XML document.  \n  \n [!code-cpp[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/cpp/m-system.security.crypto_76_2.cpp)]\n [!code-vb[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/visualbasic/m-system.security.crypto_76_2.vb)]\n [!code-cs[Cryptography.XML.XMLEncMinimalDecryptData#1](~/add/codesnippet/csharp/m-system.security.crypto_76_2.cs)]"
  syntax:
    content: public EncryptionMethod (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Uniform Resource Identifier () のインスタンスによって表されるアルゴリズムを表す、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>クラスです。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  id: GetXml
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: GetXml()
  nameWithType: EncryptionMethod.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.GetXml()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "返します、 <xref href=&quot;System.Xml.XmlElement&quot;> </xref>のインスタンスをカプセル化するオブジェクト、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>クラスです。"
  remarks: "GetXml メソッドの形式を返します、`<EncryptionMethod>`要素。"
  syntax:
    content: public System.Xml.XmlElement GetXml ();
    parameters: []
    return:
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>のインスタンスをカプセル化するオブジェクト、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>クラスです。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.GetXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  id: KeyAlgorithm
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または設定、Uniform Resource Identifier () を XML 暗号化に使用するアルゴリズムについて説明します。"
  remarks: "KeyAlgorithm プロパティには、Uniform Resource Identifier () のいずれかに関連付けられているデータの暗号化に使用される暗号化アルゴリズムがについて説明します、<xref:System.Security.Cryptography.Xml.EncryptedData>要素または<xref:System.Security.Cryptography.Xml.EncryptedKey>要素</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData>。       Http://www.w3.org/TR/xmlenc-core/ にある World Wide Web Consortium の XML 暗号化の仕様で定義されている URI 識別子の&1; つを使用します。  すべての URI 識別子は、<xref:System.Security.Cryptography.Xml.EncryptedXml>クラス</xref:System.Security.Cryptography.Xml.EncryptedXml>の静的フィールドとしてアクセス"
  syntax:
    content: public string KeyAlgorithm { get; set; }
    return:
      type: System.String
      description: "識別子 URI (Uniform Resource) XML 暗号化に使用するアルゴリズムを表すです。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  id: KeySize
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "取得または XML 暗号化に使用するアルゴリズムのキーのサイズを設定します。"
  remarks: "KeySize プロパティには、いずれかに関連付けられているデータの暗号化に使用される暗号化アルゴリズムのキーのサイズがについて説明します、<xref:System.Security.Cryptography.Xml.EncryptedData>要素または<xref:System.Security.Cryptography.Xml.EncryptedKey>要素</xref:System.Security.Cryptography.Xml.EncryptedKey></xref:System.Security.Cryptography.Xml.EncryptedData>。"
  syntax:
    content: public int KeySize { get; set; }
    return:
      type: System.Int32
      description: "アルゴリズム キー サイズをビット単位、XML 暗号化に使用します。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.KeySize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "KeySize プロパティは、値が 0 より小さい値が設定されました。"
  platform:
  - net462
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  id: LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  langs:
  - csharp
  name: LoadXml(XmlElement)
  nameWithType: EncryptionMethod.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(XmlElement)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Xml
  summary: "指定した解析<xref href=&quot;System.Xml.XmlElement&quot;></xref>オブジェクトし、の内部状態を構成、 <xref href=&quot;System.Security.Cryptography.Xml.EncryptionMethod&quot;> </xref>と一致するオブジェクト。"
  remarks: "LoadXml メソッドは、構成、<xref:System.Security.Cryptography.Xml.EncryptionMethod>の状態と一致するオブジェクト、<xref:System.Xml.XmlElement>オブジェクト</xref:System.Xml.XmlElement></xref:System.Security.Cryptography.Xml.EncryptionMethod>。"
  syntax:
    content: public void LoadXml (System.Xml.XmlElement value);
    parameters:
    - id: value
      type: System.Xml.XmlElement
      description: "<xref href=&quot;System.Xml.XmlElement&quot;> </xref>オブジェクトを解析します。"
  overload: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "表されるキーのサイズ、 <code> value </code>パラメーターが 0 未満です。"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod()
  nameWithType: EncryptionMethod.EncryptionMethod()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod()
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor(System.String)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod(String)
  nameWithType: EncryptionMethod.EncryptionMethod(String)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.EncryptionMethod(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: GetXml()
  nameWithType: EncryptionMethod.GetXml()
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.GetXml()
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.KeySize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(System.Xml.XmlElement)
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: LoadXml(XmlElement)
  nameWithType: EncryptionMethod.LoadXml(XmlElement)
  fullName: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml(XmlElement)
- uid: System.Security.Cryptography.Xml.EncryptionMethod.#ctor*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: EncryptionMethod
  nameWithType: EncryptionMethod.EncryptionMethod
- uid: System.Security.Cryptography.Xml.EncryptionMethod.GetXml*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: GetXml
  nameWithType: EncryptionMethod.GetXml
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeyAlgorithm*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeyAlgorithm
  nameWithType: EncryptionMethod.KeyAlgorithm
- uid: System.Security.Cryptography.Xml.EncryptionMethod.KeySize*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: KeySize
  nameWithType: EncryptionMethod.KeySize
- uid: System.Security.Cryptography.Xml.EncryptionMethod.LoadXml*
  parent: System.Security.Cryptography.Xml.EncryptionMethod
  isExternal: false
  name: LoadXml
  nameWithType: EncryptionMethod.LoadXml
