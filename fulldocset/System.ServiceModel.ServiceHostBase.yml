### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.ServiceHostBase
  id: ServiceHostBase
  children:
  - System.ServiceModel.ServiceHostBase.#ctor
  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  - System.ServiceModel.ServiceHostBase.ApplyConfiguration
  - System.ServiceModel.ServiceHostBase.Authentication
  - System.ServiceModel.ServiceHostBase.Authorization
  - System.ServiceModel.ServiceHostBase.BaseAddresses
  - System.ServiceModel.ServiceHostBase.ChannelDispatchers
  - System.ServiceModel.ServiceHostBase.CloseTimeout
  - System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  - System.ServiceModel.ServiceHostBase.Credentials
  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  - System.ServiceModel.ServiceHostBase.Description
  - System.ServiceModel.ServiceHostBase.Extensions
  - System.ServiceModel.ServiceHostBase.ImplementedContracts
  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  - System.ServiceModel.ServiceHostBase.InitializeRuntime
  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  - System.ServiceModel.ServiceHostBase.OnAbort
  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnClosed
  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  - System.ServiceModel.ServiceHostBase.OnOpened
  - System.ServiceModel.ServiceHostBase.OpenTimeout
  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  langs:
  - csharp
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
  type: Class
  summary: "カスタム プログラミング モデルを公開するホストを実装する ServiceHostBase クラスを拡張します。"
  remarks: "ServiceHostBase クラスを使用すると、カスタム プログラミング モデルを提供するホストを作成します。 [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]サービス プログラミング モデル<xref:System.ServiceModel.ServiceHost>クラス</xref:System.ServiceModel.ServiceHost>を使用します。       このクラスから派生するマネージ C++ ユーザーに対する特別な注意:-デストラクターではなく、クリーンアップ コードを (On) (Begin) Close (または OnAbort) を配置します。      避けるデストラクターです。コンパイラが<xref:System.IDisposable>。</xref:System.IDisposable>を自動生成      非参照メンバーを避ける自動生成<xref:System.IDisposable>。</xref:System.IDisposable>コンパイラを招く可能性があります。      ファイナライザーを避ける1 つを含める場合、ビルドの警告と呼び出しを抑制する必要がありますが、<xref:System.GC.SuppressFinalize%28System.Object%29>と、ファイナライザー自体を (On) (Begin) Close (または OnAbort) となっていた自動生成をエミュレートするために<xref:System.IDisposable>動作</xref:System.IDisposable></xref:System.GC.SuppressFinalize%28System.Object%29>。"
  example:
  - "This sample uses the <xref:System.ServiceModel.ServiceHost> class, which is derived from ServiceHostBase.  \n  \n [!code-cs[S_SelfHost#1](~/add/codesnippet/csharp/t-system.servicemodel.se_10_1.cs)]\n [!code-vb[S_SelfHost#1](~/add/codesnippet/visualbasic/t-system.servicemodel.se_10_1.vb)]"
  syntax:
    content: 'public abstract class ServiceHostBase : System.ServiceModel.Channels.CommunicationObject, IDisposable, System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>'
  inheritance:
  - System.ServiceModel.Channels.CommunicationObject
  implements:
  - System.IDisposable
  - System.ServiceModel.IExtensibleObject<System.ServiceModel.ServiceHostBase>
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref>クラスです。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#30](~/add/codesnippet/csharp/m-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: protected ServiceHostBase ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  id: AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストにベース アドレスを追加します。"
  remarks: "このプロパティにより、ユーザーの拡張<xref:System.ServiceModel.ServiceHostBase>ホストを構築した後、ベース アドレスを提供する</xref:System.ServiceModel.ServiceHostBase>。 AddBaseAddress はベース アドレスを追加、既存のホストに使用できますが、説明は既に初期化されている場合、例外をスローします。"
  syntax:
    content: protected void AddBaseAddress (Uri baseAddress);
    parameters:
    - id: baseAddress
      type: System.Uri
      description: "A <xref:System.Uri>、現在のホストでホストされるサービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> baseAddress </code>呼び出すことができません。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  id: AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "既定のバインディングと、サービス ホストで検出された各コントラクト内のすべてのベース アドレスのサービス エンドポイントを追加します。"
  syntax:
    content: public virtual System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint> AddDefaultEndpoints ();
    parameters: []
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
      description: "既定のエンドポイントの読み取り専用コレクション。"
  overload: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  id: AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホステッド サービスに指定したサービス エンドポイントを追加します。"
  remarks: "メソッドを使用する場合、サービス ホストはコントラクトの説明に&quot;によって-構成-name&quot;検証は。 つまり、ホストを検証する<xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A>サービスによって実装されたサービス コントラクトの構成名の一覧に存在します</xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A>。 かどうか、検証が成功で説明、<xref:System.ServiceModel.Description.ServiceEndpoint>これは、使用場合でも、<xref:System.ServiceModel.Description.ContractDescription>から反映された、サービスが異なる</xref:System.ServiceModel.Description.ContractDescription></xref:System.ServiceModel.Description.ServiceEndpoint>。       たとえば、ServiceEndpoint の説明と、サービスから反映されたコントラクトの説明がある名が同じで、さまざまな操作の動作と仮定します。 「構成の名前による」検証のみの影響は、検証の動作は同じと更新があるいずれか&1; つの説明を別の説明のためのことがないことです。       場合、`address`のベース アドレスのいずれかを相対 uri、 <xref:System.ServiceModel.ServiceHost>(バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます</xref:System.ServiceModel.ServiceHost>。"
  syntax:
    content: public virtual void AddServiceEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "サービス エンドポイント。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>Endpoint</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストが Created または Opening 状態ではなく、またはがない<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>ホステッド サービス。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>Address</code>, <code>Binding, </code> or <code>Contract</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、およびエンドポイント アドレスでホステッド サービスにサービス エンドポイントを追加します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#40](~/add/codesnippet/csharp/edf6e090-b786-4010-8e21-_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "エンドポイントによって実装されたコントラクト。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.String
      description: "追加されたエンドポイントのアドレス。 これは、絶対または相対 URI を指定できます。 相対 URI のベース アドレスのいずれかであるかどうか、 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ホステッド サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされていない、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態または存在がない<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>ホステッド サービスのエンドポイントを追加することはできませんまたはバインディングにバインディング スキームのトランスポートがない</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、およびエンドポイント アドレスを格納する URI を持つホストされるサービスにサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);
    parameters:
    - id: implementedContract
      type: System.String
      description: "エンドポイントによって実装されたコントラクト。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>追加されたエンドポイントのアドレスを格納している</xref:System.Uri>。 これは、絶対または相対 URI を指定できます。 相対 URI のベース アドレスのいずれかであるかどうか、 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ホステッド サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされていない、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態または存在がない<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>ホステッド サービスのエンドポイントを追加することはできません</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、エンドポイント アドレスおよびがリッスンするアドレスを格納する URI を持つホストされるサービスにサービス エンドポイントを追加します。"
  remarks: "場合、`address`のベース アドレスのいずれかを相対 uri、 <xref:System.ServiceModel.ServiceHost>(バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます</xref:System.ServiceModel.ServiceHost>。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "エンドポイントによって実装されたコントラクト。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.String
      description: "追加されたエンドポイントのアドレス。 このアドレスは、絶対または相対 URI を指定できます。 相対 URI のベース アドレスのいずれかであるかどうか、 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>エンドポイントが受信メッセージをリッスンするアドレスを格納している</xref:System.Uri>。 この URI は相対パスまたは絶対にできます。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ホステッド サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされていない、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態または存在がない<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>ホステッド サービスのエンドポイントを追加することはできません</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  id: AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定したコントラクト、バインディング、およびエンドポイント アドレスとリッスン アドレスを含む Uri でホストされるサービスにサービス エンドポイントを追加します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (string implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);
    parameters:
    - id: implementedContract
      type: System.String
      description: "エンドポイントによって実装されたコントラクト。"
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>エンドポイントを追加します</xref:System.ServiceModel.Channels.Binding>。"
    - id: address
      type: System.Uri
      description: "<xref:System.Uri>追加されたエンドポイントのアドレスを格納している</xref:System.Uri>。 相対 URI のベース アドレスのいずれかであるかどうか、 <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> (バインド プロトコルに応じて)、エンドポイントのベース アドレスとして使用されます。"
    - id: listenUri
      type: System.Uri
      description: "<xref:System.Uri>エンドポイントが受信メッセージをリッスンするアドレスを格納している</xref:System.Uri>。"
    return:
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "<xref:System.ServiceModel.Description.ServiceEndpoint>ホステッド サービスに追加します</xref:System.ServiceModel.Description.ServiceEndpoint>。 この URI は、絶対または相対を指定できます。"
  overload: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>implementedContract</code>or <code>binding</code> or <code>address</code> or is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされていない、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態または存在がない<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;></xref>ホステッド サービスのエンドポイントを追加することはできません</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  id: ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "構成ファイルからサービスの説明情報を読み込み、構築中のランタイムに適用されます。"
  syntax:
    content: protected virtual void ApplyConfiguration ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされるサービスの説明が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authentication
  id: Authentication
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービスの認証動作を取得します。"
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthenticationBehavior Authentication { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthenticationBehavior
      description: "サービスの認証動作。"
  overload: System.ServiceModel.ServiceHostBase.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Authorization
  id: Authorization
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホストされるサービスの承認の動作を取得します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#36](~/add/codesnippet/csharp/p-system.servicemodel.se_20_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceAuthorizationBehavior Authorization { get; }
    return:
      type: System.ServiceModel.Description.ServiceAuthorizationBehavior
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref>ホストされるサービス用です。"
  overload: System.ServiceModel.ServiceHostBase.Authorization*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  id: BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホステッド サービスで使用されるベース アドレスを取得します。"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<Uri> BaseAddresses { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
      description: "A &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;型の<xref:System.Uri>ホステッド サービスのベース アドレスを格納している</xref:System.Uri>。"
  overload: System.ServiceModel.ServiceHostBase.BaseAddresses*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  id: ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストによって使用されるチャネル ディスパッチャーのコレクションを取得します。"
  syntax:
    content: public System.ServiceModel.Dispatcher.ChannelDispatcherCollection ChannelDispatchers { get; }
    return:
      type: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
      description: "<xref href=&quot;System.ServiceModel.Dispatcher.ChannelDispatcherCollection&quot;> </xref>サービス ホストによって使用されるチャネル ディスパッチャーを格納しています。"
  overload: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  id: CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはサービス ホストを閉じておける期間を設定します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#33](~/add/codesnippet/csharp/p-system.servicemodel.se_0_1.cs)]'
  syntax:
    content: public TimeSpan CloseTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>サービス ホストを閉じておける期間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.CloseTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "ミリ秒単位で、値が 0 より小さいかよりも大きい<xref:System.Int32.MaxValue>(2,147, 483,647 または 16 進表記で 0X7FFFFFFF) です</xref:System.Int32.MaxValue>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストが、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "ホストは既に、<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "ホストが、<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "派生クラスとして実装された場合は、ホステッド サービスの説明を作成します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#41](~/add/codesnippet/csharp/08a56b4f-56f2-446f-b0f7-_1.cs)]'
  syntax:
    content: protected abstract System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);
    parameters:
    - id: implementedContracts
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt;を格納している、<xref:System.ServiceModel.Description.ContractDescription>サービスのオブジェクト</xref:System.ServiceModel.Description.ContractDescription>。"
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>ホステッド サービス。"
  overload: System.ServiceModel.ServiceHostBase.CreateDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Credentials
  id: Credentials
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホストされるサービスの資格情報を取得します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#37](~/add/codesnippet/csharp/p-system.servicemodel.se_11_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceCredentials Credentials { get; }
    return:
      type: System.ServiceModel.Description.ServiceCredentials
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceCredentials&quot;> </xref>ホストされるサービス用です。"
  overload: System.ServiceModel.ServiceHostBase.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  id: DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストを閉じておける既定の間隔を取得します。"
  syntax:
    content: protected override TimeSpan DefaultCloseTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>サービス ホストを閉じておける既定の間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  id: DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストを開いておける既定の間隔を取得します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#35](~/add/codesnippet/csharp/p-system.servicemodel.se_16_1.cs)]'
  syntax:
    content: protected override TimeSpan DefaultOpenTimeout { get; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>サービス ホストを開いておける既定の間隔を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Description
  id: Description
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホストされるサービスの説明を取得します。"
  remarks: ''
  example:
  - '[!code-cs[S_SelfHost#38](~/add/codesnippet/csharp/p-system.servicemodel.se_3_1.cs)]'
  syntax:
    content: public System.ServiceModel.Description.ServiceDescription Description { get; }
    return:
      type: System.ServiceModel.Description.ServiceDescription
      description: "<xref href=&quot;System.ServiceModel.Description.ServiceDescription&quot;> </xref>ホステッド サービス。"
  overload: System.ServiceModel.ServiceHostBase.Description*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.Extensions
  id: Extensions
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "現在の指定されたサービス ホストの拡張機能を取得します。"
  syntax:
    content: public System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase> Extensions { get; }
    return:
      type: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
      description: "&lt;Xref:System.ServiceModel.IExtensionCollection%601&gt;型の<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;></xref>です。"
  overload: System.ServiceModel.ServiceHostBase.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  id: ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホストされるサービスによって実装されるコントラクトを取得します。"
  syntax:
    content: protected System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> ImplementedContracts { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
      description: "&lt;Xref:System.Collections.Generic.IDictionary%602&gt;を格納している、<xref:System.ServiceModel.Description.ContractDescription>サービスのオブジェクト</xref:System.ServiceModel.Description.ContractDescription>。"
  overload: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  id: IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定された増分でのホステッド サービスへのメッセージ フロー レートの制限が向上します。"
  remarks: "この制限を使用してアクセスできる、<xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>プロパティ</xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A>。"
  example:
  - '[!code-cs[S_SelfHost#42](~/add/codesnippet/csharp/84777560-890d-4922-a9a5-_1.cs)]'
  syntax:
    content: public int IncrementManualFlowControlLimit (int incrementBy);
    parameters:
    - id: incrementBy
      type: System.Int32
      description: "フロー制御制限を増やすに使用するメッセージの数。"
    return:
      type: System.Int32
      description: "増分値を追加した後は、新しい制限します。"
  overload: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値が&0; 未満です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  id: InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "作成して、コントラクトおよびサービスの説明を含むサービス ホストを初期化します。"
  syntax:
    content: protected void InitializeDescription (System.ServiceModel.UriSchemeKeyedCollection baseAddresses);
    parameters:
    - id: baseAddresses
      type: System.ServiceModel.UriSchemeKeyedCollection
      description: "A <xref href=&quot;System.ServiceModel.UriSchemeKeyedCollection&quot;> </xref>ホストされるサービスのベース アドレスを格納します。"
  overload: System.ServiceModel.ServiceHostBase.InitializeDescription*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  id: InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストのランタイムを初期化します。"
  syntax:
    content: protected virtual void InitializeRuntime ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされるサービスの説明が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  id: LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホステッド サービスの構成ファイルからサービス要素を読み込みます。"
  syntax:
    content: protected void LoadConfigurationSection (System.ServiceModel.Configuration.ServiceElement serviceSection);
    parameters:
    - id: serviceSection
      type: System.ServiceModel.Configuration.ServiceElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.ServiceElement&quot;> </xref>構成から読み込まれる。"
  overload: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serviceSection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストされるサービスの説明が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  id: ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得または、ホストされるサービスによって受信されたメッセージのフロー制御制限を設定します。"
  remarks: "この制限を使用して増分できます、<xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>メソッド</xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29>。"
  example:
  - '[!code-cs[S_SelfHost#39](~/add/codesnippet/csharp/p-system.servicemodel.se_10_1.cs)]'
  syntax:
    content: public int ManualFlowControlLimit { get; set; }
    return:
      type: System.Int32
      description: "ホストされるサービスによって受信されたメッセージのフロー制御制限。"
  overload: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値が&0; 未満です。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  id: OnAbort
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービスを中止します。"
  syntax:
    content: protected override void OnAbort ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnAbort*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストの終了時に呼び出される非同期の操作を開始します。"
  syntax:
    content: protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>閉じるときに操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期操作の終了時の完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の終了時操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期の終了時操作を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.ServiceHostBase.OnBeginClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストの開始時に呼び出される非同期の操作を開始します。"
  syntax:
    content: protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>開くときに操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>非同期操作が開くときに完了の通知を受信するデリゲート</xref:System.AsyncCallback>。"
    - id: state
      type: System.Object
      description: "非同期の開くときに操作に関連付けられている状態情報を格納する、アプリケーションで指定されたオブジェクト。"
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>非同期の開くときに操作を参照する</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  id: OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "チャネル ディスパッチャーと関連付けられたインスタンス コンテキストとリスナーを含む、ホステッド サービスを閉じます。"
  remarks: "OnClose を呼び出して、次の処理:-すべての入力が閉じ<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>も終了するそれに関連付けられた<xref:System.ServiceModel.Channels.IChannelListener>インスタンス</xref:System.ServiceModel.Channels.IChannelListener></xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。 これは、すべての新しいチャネルの受け入れを停止します。      -呼び出し<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>すべて<xref:System.ServiceModel.InstanceContext>オブジェクトで、新しいメッセージの受け入れが停止されることを意味します</xref:System.ServiceModel.InstanceContext></xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A>。      -すべての待機<xref:System.ServiceModel.InstanceContext>を閉じるため、オブジェクト、関連付けられたチャネルは、すべての保留メッセージの送信を完了するとどうなります</xref:System.ServiceModel.InstanceContext>。      -終了、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher>ホストに関連付けられているオブジェクト</xref:System.ServiceModel.Dispatcher.ChannelDispatcher>。"
  syntax:
    content: protected override void OnClose (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>閉じるときに操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.OnClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  id: OnClosed
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストによって使用されているリソースを解放します。"
  syntax:
    content: protected override void OnClosed ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  id: OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストの終了時に呼び出される非同期操作を完了します。"
  syntax:
    content: protected override void OnEndClose (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、 &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッド</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.ServiceHostBase.OnEndClose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  id: OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストの開始時に呼び出される非同期操作を完了します。"
  syntax:
    content: protected override void OnEndOpen (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>への呼び出しによって返される、 &lt;xref:System.ServiceModel.ServiceHostBase.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;メソッド</xref:System.IAsyncResult>。"
  overload: System.ServiceModel.ServiceHostBase.OnEndOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  id: OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "チャネル ディスパッチャーを開きます。"
  syntax:
    content: protected override void OnOpen (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>開くときに操作が開始がタイムアウトになるまでの時間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.OnOpen*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  id: OnOpened
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホステッド サービスのサービスの資格情報、サービスの認証と承認の動作を取得します。"
  remarks: "これらの動作は、初期化後、サービスを開くときに変更することはできません。"
  syntax:
    content: protected override void OnOpened ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.OnOpened*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  id: OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "取得またはサービス ホストを開いておける期間を設定します。"
  syntax:
    content: public TimeSpan OpenTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>サービス ホストを開いておける期間を指定します</xref:System.TimeSpan>。"
  overload: System.ServiceModel.ServiceHostBase.OpenTimeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "値が 0 より小さいかよりも大きい<xref:System.Int32.MaxValue>(2,147, 483,647 または 16 進表記で 0X7FFFFFFF) です</xref:System.Int32.MaxValue>。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "ホストが、<xref:System.ServiceModel.CommunicationState>または<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState></xref:System.ServiceModel.CommunicationState>。"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "ホストは既に、<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState>。"
  - type: System.ServiceModel.CommunicationObjectFaultedException
    commentId: T:System.ServiceModel.CommunicationObjectFaultedException
    description: "ホストが、<xref:System.ServiceModel.CommunicationState>状態にあり、変更できません</xref:System.ServiceModel.CommunicationState>。"
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  id: ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "ホステッド サービスのサービスとチャネル ディスパッチャー パフォーマンス カウンターを解放します。"
  remarks: "<xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>および<xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29>。</xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29></xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29>を呼び出す場合、このメソッドが呼び出されます"
  syntax:
    content: protected void ReleasePerformanceCounters ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  id: SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "指定されたアドレスを指定したエンドポイントのエンドポイント アドレスを設定します。"
  syntax:
    content: public void SetEndpointAddress (System.ServiceModel.Description.ServiceEndpoint endpoint, string relativeAddress);
    parameters:
    - id: endpoint
      type: System.ServiceModel.Description.ServiceEndpoint
      description: "サービス エンドポイント。"
    - id: relativeAddress
      type: System.String
      description: "エンドポイント アドレス。"
  overload: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "サービス ホストを閉じます。"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  id: UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  langs:
  - csharp
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  type: Event
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "不明なメッセージを受信したときに発生します。"
  remarks: >-
    > [!WARNING]

    >  When using <xref:System.ServiceModel.WorkflowServiceHost>, exposing a hosting endpoint, and a UnknownMessageReceived exception is thrown, the host passes the message to the event handler. If an attempt is made to read this message an <xref:System.InvalidOperationException> is thrown. The description of the exception will say “This message cannot support the operation because it has been read.”  The WCF infrastructure reads the message while extracting the message parameters. This message is then passed to the event handler and any attempt to read it causes an exception. If you need to access message parameters in your <xref:System.InvalidOperationException> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)] hosting endpoints see [Workflow Service Host Extensibility](~/add/includes/ajax-current-ext-md.md)
  syntax:
    content: public event EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs> UnknownMessageReceived;
    return:
      type: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
      description: "追加します。"
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Channels.CommunicationObject
  isExternal: false
  name: System.ServiceModel.Channels.CommunicationObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ServiceModel.CommunicationObjectFaultedException
  isExternal: true
  name: System.ServiceModel.CommunicationObjectFaultedException
- uid: System.ServiceModel.ServiceHostBase.#ctor
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase()
  nameWithType: ServiceHostBase.ServiceHostBase()
  fullName: System.ServiceModel.ServiceHostBase.ServiceHostBase()
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress(Uri)
  nameWithType: ServiceHostBase.AddBaseAddress(Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddBaseAddress(Uri)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints()
  nameWithType: ServiceHostBase.AddDefaultEndpoints()
  fullName: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<ServiceEndpoint>
  nameWithType: ReadOnlyCollection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(ServiceEndpoint)
  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)
- uid: System.ServiceModel.Description.ServiceEndpoint
  parent: System.ServiceModel.Description
  isExternal: true
  name: ServiceEndpoint
  nameWithType: ServiceEndpoint
  fullName: System.ServiceModel.Description.ServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,String,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,String,Uri)
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint(String,Binding,Uri,Uri)
  nameWithType: ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
  fullName: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(String,Binding,Uri,Uri)
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration()
  nameWithType: ServiceHostBase.ApplyConfiguration()
  fullName: System.ServiceModel.ServiceHostBase.ApplyConfiguration()
- uid: System.ServiceModel.ServiceHostBase.Authentication
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
  fullName: System.ServiceModel.ServiceHostBase.Authentication
- uid: System.ServiceModel.Description.ServiceAuthenticationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthenticationBehavior
  nameWithType: ServiceAuthenticationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthenticationBehavior
- uid: System.ServiceModel.ServiceHostBase.Authorization
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
  fullName: System.ServiceModel.ServiceHostBase.Authorization
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
  fullName: System.ServiceModel.ServiceHostBase.BaseAddresses
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Uri}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<Uri>
  nameWithType: ReadOnlyCollection<Uri>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Uri>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Uri>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
  fullName: System.ServiceModel.ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
  parent: System.ServiceModel.Dispatcher
  isExternal: false
  name: ChannelDispatcherCollection
  nameWithType: ChannelDispatcherCollection
  fullName: System.ServiceModel.Dispatcher.ChannelDispatcherCollection
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.CloseTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription(IDictionary<String,ContractDescription>)
  nameWithType: ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
  fullName: System.ServiceModel.ServiceHostBase.CreateDescription(IDictionary<String,ContractDescription>)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ContractDescription>
  nameWithType: IDictionary<String,ContractDescription>
  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.Credentials
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
  fullName: System.ServiceModel.ServiceHostBase.Credentials
- uid: System.ServiceModel.Description.ServiceCredentials
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceCredentials
  nameWithType: ServiceCredentials
  fullName: System.ServiceModel.Description.ServiceCredentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
  fullName: System.ServiceModel.ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
  fullName: System.ServiceModel.ServiceHostBase.Extensions
- uid: System.ServiceModel.IExtensionCollection{System.ServiceModel.ServiceHostBase}
  parent: System.ServiceModel
  isExternal: true
  name: IExtensionCollection<ServiceHostBase>
  nameWithType: IExtensionCollection<ServiceHostBase>
  fullName: System.ServiceModel.IExtensionCollection<System.ServiceModel.ServiceHostBase>
  spec.csharp:
  - uid: System.ServiceModel.IExtensionCollection`1
    name: IExtensionCollection
    nameWithType: IExtensionCollection
    fullName: IExtensionCollection<System.ServiceModel.ServiceHostBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.ServiceHostBase
    name: ServiceHostBase
    nameWithType: ServiceHostBase
    fullName: ServiceHostBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
  fullName: System.ServiceModel.ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit(Int32)
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)
  fullName: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription(UriSchemeKeyedCollection)
  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
  fullName: System.ServiceModel.ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)
- uid: System.ServiceModel.UriSchemeKeyedCollection
  parent: System.ServiceModel
  isExternal: false
  name: UriSchemeKeyedCollection
  nameWithType: UriSchemeKeyedCollection
  fullName: System.ServiceModel.UriSchemeKeyedCollection
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime()
  nameWithType: ServiceHostBase.InitializeRuntime()
  fullName: System.ServiceModel.ServiceHostBase.InitializeRuntime()
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection(ServiceElement)
  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)
  fullName: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(ServiceElement)
- uid: System.ServiceModel.Configuration.ServiceElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: ServiceElement
  nameWithType: ServiceElement
  fullName: System.ServiceModel.Configuration.ServiceElement
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
  fullName: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort()
  nameWithType: ServiceHostBase.OnAbort()
  fullName: System.ServiceModel.ServiceHostBase.OnAbort()
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginClose(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen(TimeSpan,AsyncCallback,Object)
  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
  fullName: System.ServiceModel.ServiceHostBase.OnBeginOpen(TimeSpan,AsyncCallback,Object)
- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose(TimeSpan)
  nameWithType: ServiceHostBase.OnClose(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnClose(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnClosed
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed()
  nameWithType: ServiceHostBase.OnClosed()
  fullName: System.ServiceModel.ServiceHostBase.OnClosed()
- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndClose(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen(IAsyncResult)
  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)
  fullName: System.ServiceModel.ServiceHostBase.OnEndOpen(IAsyncResult)
- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen(TimeSpan)
  nameWithType: ServiceHostBase.OnOpen(TimeSpan)
  fullName: System.ServiceModel.ServiceHostBase.OnOpen(TimeSpan)
- uid: System.ServiceModel.ServiceHostBase.OnOpened
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened()
  nameWithType: ServiceHostBase.OnOpened()
  fullName: System.ServiceModel.ServiceHostBase.OnOpened()
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
  fullName: System.ServiceModel.ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters()
  nameWithType: ServiceHostBase.ReleasePerformanceCounters()
  fullName: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters()
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress(ServiceEndpoint,String)
  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
  fullName: System.ServiceModel.ServiceHostBase.SetEndpointAddress(ServiceEndpoint,String)
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ServiceHostBase.System.IDisposable.Dispose()
  fullName: System.ServiceModel.ServiceHostBase.System.IDisposable.Dispose()
- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: UnknownMessageReceived
  nameWithType: ServiceHostBase.UnknownMessageReceived
  fullName: System.ServiceModel.ServiceHostBase.UnknownMessageReceived
- uid: System.EventHandler{System.ServiceModel.UnknownMessageReceivedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<UnknownMessageReceivedEventArgs>
  nameWithType: EventHandler<UnknownMessageReceivedEventArgs>
  fullName: System.EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.ServiceModel.UnknownMessageReceivedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.UnknownMessageReceivedEventArgs
    name: UnknownMessageReceivedEventArgs
    nameWithType: UnknownMessageReceivedEventArgs
    fullName: UnknownMessageReceivedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.ServiceHostBase.#ctor*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase.ServiceHostBase
- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddBaseAddress
  nameWithType: ServiceHostBase.AddBaseAddress
- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddDefaultEndpoints
  nameWithType: ServiceHostBase.AddDefaultEndpoints
- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: AddServiceEndpoint
  nameWithType: ServiceHostBase.AddServiceEndpoint
- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ApplyConfiguration
  nameWithType: ServiceHostBase.ApplyConfiguration
- uid: System.ServiceModel.ServiceHostBase.Authentication*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authentication
  nameWithType: ServiceHostBase.Authentication
- uid: System.ServiceModel.ServiceHostBase.Authorization*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Authorization
  nameWithType: ServiceHostBase.Authorization
- uid: System.ServiceModel.ServiceHostBase.BaseAddresses*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: BaseAddresses
  nameWithType: ServiceHostBase.BaseAddresses
- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ChannelDispatchers
  nameWithType: ServiceHostBase.ChannelDispatchers
- uid: System.ServiceModel.ServiceHostBase.CloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CloseTimeout
  nameWithType: ServiceHostBase.CloseTimeout
- uid: System.ServiceModel.ServiceHostBase.CreateDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: CreateDescription
  nameWithType: ServiceHostBase.CreateDescription
- uid: System.ServiceModel.ServiceHostBase.Credentials*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Credentials
  nameWithType: ServiceHostBase.Credentials
- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultCloseTimeout
  nameWithType: ServiceHostBase.DefaultCloseTimeout
- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: DefaultOpenTimeout
  nameWithType: ServiceHostBase.DefaultOpenTimeout
- uid: System.ServiceModel.ServiceHostBase.Description*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Description
  nameWithType: ServiceHostBase.Description
- uid: System.ServiceModel.ServiceHostBase.Extensions*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: Extensions
  nameWithType: ServiceHostBase.Extensions
- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ImplementedContracts
  nameWithType: ServiceHostBase.ImplementedContracts
- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: IncrementManualFlowControlLimit
  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.InitializeDescription*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeDescription
  nameWithType: ServiceHostBase.InitializeDescription
- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: InitializeRuntime
  nameWithType: ServiceHostBase.InitializeRuntime
- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: LoadConfigurationSection
  nameWithType: ServiceHostBase.LoadConfigurationSection
- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ManualFlowControlLimit
  nameWithType: ServiceHostBase.ManualFlowControlLimit
- uid: System.ServiceModel.ServiceHostBase.OnAbort*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnAbort
  nameWithType: ServiceHostBase.OnAbort
- uid: System.ServiceModel.ServiceHostBase.OnBeginClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginClose
  nameWithType: ServiceHostBase.OnBeginClose
- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnBeginOpen
  nameWithType: ServiceHostBase.OnBeginOpen
- uid: System.ServiceModel.ServiceHostBase.OnClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClose
  nameWithType: ServiceHostBase.OnClose
- uid: System.ServiceModel.ServiceHostBase.OnClosed*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnClosed
  nameWithType: ServiceHostBase.OnClosed
- uid: System.ServiceModel.ServiceHostBase.OnEndClose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndClose
  nameWithType: ServiceHostBase.OnEndClose
- uid: System.ServiceModel.ServiceHostBase.OnEndOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnEndOpen
  nameWithType: ServiceHostBase.OnEndOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpen*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpen
  nameWithType: ServiceHostBase.OnOpen
- uid: System.ServiceModel.ServiceHostBase.OnOpened*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OnOpened
  nameWithType: ServiceHostBase.OnOpened
- uid: System.ServiceModel.ServiceHostBase.OpenTimeout*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: OpenTimeout
  nameWithType: ServiceHostBase.OpenTimeout
- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: ReleasePerformanceCounters
  nameWithType: ServiceHostBase.ReleasePerformanceCounters
- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: SetEndpointAddress
  nameWithType: ServiceHostBase.SetEndpointAddress
- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose*
  parent: System.ServiceModel.ServiceHostBase
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ServiceHostBase.System.IDisposable.Dispose
