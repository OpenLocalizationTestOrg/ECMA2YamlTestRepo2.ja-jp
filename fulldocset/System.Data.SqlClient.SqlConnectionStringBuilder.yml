### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlConnectionStringBuilder
  id: SqlConnectionStringBuilder
  children:
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  - System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  - System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  - System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  - System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  - System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  - System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  - System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  - System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  - System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  - System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  - System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  - System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  - System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  - System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  - System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  - System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  - System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  - System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  - System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  - System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  - System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  - System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  - System.Data.SqlClient.SqlConnectionStringBuilder.Password
  - System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  - System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  - System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  - System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  - System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  - System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  - System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  - System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  - System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  - System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  - System.Data.SqlClient.SqlConnectionStringBuilder.Values
  - System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  langs:
  - csharp
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder
  type: Class
  summary: "作成および管理で使用される接続文字列の内容を簡単な方法を提供、 <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref>クラスです。"
  remarks: "接続文字列ビルダーには、クラスのプロパティとメソッドを使用して開発者はプログラムで正しい構文の接続文字列を作成し、解析し、既存の接続文字列を再構築ができます。 接続文字列ビルダーは、SQL Server で許可されている既知のキー/値ペアに対応する厳密に型指定のプロパティを提供します。 アプリケーションの一部として接続文字列を作成する必要がある開発者は、接続文字列を構築および変更 SqlConnectionStringBuilder クラスを使用できます。 クラスでは、アプリケーション構成ファイルに格納された接続文字列を管理しやすいです。       SqlConnectionStringBuilder は、有効なキー/値ペアのチェックを実行します。 そのため、このクラスを使用して; 無効な接続文字列を作成することはできません。無効なペアを追加しようとすると、例外がスローされます。 クラスでは、シノニムの固定コレクションを保持され、対応する既知のキー名に、特定のシノニムに変換できます。       たとえば、使用、**項目**値を取得するプロパティを必要とするキーに対応するシノニムを含む文字列を指定できます。 たとえばを指定できます&quot;Network Address&quot;、&quot;addr&quot;、または接続文字列内にあるこのキーの他の任意の許容可能なシノニムように、キー名を含む文字列を必要とするメンバーを使用するときに、**項目**プロパティまたは<xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A>メソッド</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Remove%2A>。 参照してください、<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>使用可能なシノニムの完全なリストのプロパティ</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>。       **項目**プロパティは、悪意のあるエントリを挿入しようを処理します。 たとえば、既定の Item プロパティ (c# のインデクサー) を正しく使用して、次のコードは、入れ子になったキー/値ペアをエスケープします。 [Visual Basic] ```   Dim builder As New System.Data.SqlClient.SqlConnectionStringBuilder   builder(&quot;Data Source&quot;) = &quot;(local)&quot;   builder(&quot;Integrated Security&quot;) = True   builder(&quot;Initial Catalog&quot;) = &quot;AdventureWorks;NewValue=Bad&quot;   Console.WriteLine(builder.ConnectionString)   ``` [c#] ```   System.Data.SqlClient.SqlConnectionStringBuilder builder =     new System.Data.SqlClient.SqlConnectionStringBuilder();   builder[&quot;Data Source&quot;] = &quot;(local)&quot;;   builder[&quot;integrated Security&quot;] = true;   builder[&quot;Initial Catalog&quot;] = &quot;AdventureWorks;NewValue=Bad&quot;;   Console.WriteLine(builder.ConnectionString);      ``` 、結果は安全な方法で、無効な値を処理する次の接続文字列。```   Source=(local);Initial Catalog=&quot;AdventureWorks;NewValue=Bad&quot;;   Integrated Security=True   ```"
  example:
  - "The following console application builds connection strings for a [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] database. The code uses a SqlConnectionStringBuilder class to create the connection string, and then passes the <xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A> property of the SqlConnectionStringBuilder instance to the constructor of the connection class. The example also parses an existing connection string and demonstrates various ways of manipulating the connection string's contents.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how SqlConnectionStringBuilder works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/csharp/t-system.data.sqlclient._13_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DataSource")]

      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlConnectionStringBuilder/SqlConnectionStringBuilderConverter))]

      public sealed class SqlConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder
  inheritance:
  - System.Object
  - System.Data.Common.DbConnectionStringBuilder
  implements: []
  inheritedMembers:
  - System.Data.Common.DbConnectionStringBuilder.Add(System.String,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String)
  - System.Data.Common.DbConnectionStringBuilder.AppendKeyValuePair(System.Text.StringBuilder,System.String,System.String,System.Boolean)
  - System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString
  - System.Data.Common.DbConnectionStringBuilder.ClearPropertyDescriptors
  - System.Data.Common.DbConnectionStringBuilder.ConnectionString
  - System.Data.Common.DbConnectionStringBuilder.Count
  - System.Data.Common.DbConnectionStringBuilder.EquivalentTo(System.Data.Common.DbConnectionStringBuilder)
  - System.Data.Common.DbConnectionStringBuilder.IsReadOnly
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#IsSynchronized
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#ICollection#SyncRoot
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Contains(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Item(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IDictionary#Remove(System.Object)
  - System.Data.Common.DbConnectionStringBuilder.System#Collections#IEnumerable#GetEnumerator
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetAttributes
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetClassName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetComponentName
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetConverter
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])
  - System.Data.Common.DbConnectionStringBuilder.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)
  - System.Data.Common.DbConnectionStringBuilder.ToString
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>クラスです。"
  syntax:
    content: public SqlConnectionStringBuilder ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>クラスです。 指定された接続文字列は、インスタンスの内部的な接続情報、データを提供します。"
  remarks: "<xref:System.Data.SqlClient.SqlConnectionStringBuilder>クラスには、キー/値ペアの固定の内部コレクションが用意されています</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。 コンス トラクターで接続文字列の値の小さなサブセットのみを指定した場合でも、オブジェクトは常にキー/値の各ペアの既定値を提供します。 ときに、`ConnectionString`オブジェクトのプロパティを取得、文字列には、キーと値のペア、値は、項目の既定値のみにはが含まれています。"
  example:
  - "The following example supplies a simple SQL Server connection string in the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object's constructor, and then iterates through all the key/value pairs within the object. Note that the collection provides default values for each item. Also note that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the well-known keys so that they are consistent with the well-known names.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/csharp/m-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Password#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._44_1.vb)]"
  syntax:
    content: public SqlConnectionStringBuilder (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "オブジェクトの内部的な接続情報のベース。 名前/値ペアに解析します。 無効なキー名が<xref:System.Collections.Generic.KeyNotFoundException>。</xref:System.Collections.Generic.KeyNotFoundException>を発生させる"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  exceptions:
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "接続文字列内の無効なキー名。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "接続文字列に無効な値 (具体的には、ときに、ブール値または数値の値が必要ですが指定されていません)。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "指定された<code> connectionString </code>が無効です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  id: ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "SQL Server 可用性グループ内のデータベースに接続するときに、アプリケーション ワークロードの種類を宣言します。 このプロパティの値を設定することができます<xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;></xref>です。 Always On 可用性グループに対する SqlClient サポートの詳細については、次を参照してください。 [High Availability, Disaster Recovery の SqlClient サポート](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public System.Data.SqlClient.ApplicationIntent ApplicationIntent { get; set; }
    return:
      type: System.Data.SqlClient.ApplicationIntent
      description: "プロパティの現在の値を返します (型の値<xref href=&quot;System.Data.SqlClient.ApplicationIntent&quot;> </xref>)。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  id: ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または接続文字列に関連付けられているアプリケーションの名前を設定します。"
  remarks: "このプロパティは、接続文字列内での「アプリケーション名」および&quot;app&quot;キーに対応します。"
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and assigns a connection string in the object's constructor. The code displays the parsed and recreated version of the connection string, and then modifies the ApplicationName property of the object. Finally, the code displays the new connection string, including the new key/value pair.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/csharp/p-system.data.sqlclient._44_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ApplicationName#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._44_1.vb)]  \n  \n The sample displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nApplicationName=\".Net SqlClient Data Provider\"  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True;Application Name=\"My Application\"  \n```"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "アプリケーション、または&quot;.NET SqlClient Data Provider&quot;名前が指定されていない場合の名前です。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  id: AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または非同期処理が、この接続文字列を使用して作成した接続で許可されているかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Asynchronous Processing&quot;および&quot;async&quot;キーに対応します。 によって提供される非同期処理を活用するために、<xref:System.Data.SqlClient.SqlCommand>オブジェクトをこのキー/値ペアが関連付けられている接続文字列内で含める必要があります<xref:System.Data.SqlClient.SqlConnection>オブジェクト</xref:System.Data.SqlClient.SqlConnection></xref:System.Data.SqlClient.SqlCommand>。"
  example:
  - "The following example retrieves a connection string and verifies that the connection string is configured to allow for asynchronous processing. (In this case, the string comes from a procedure within the application, but in a production application, the connection string might come from a configuration file, or some other source.) Then, the example performs an asynchronous operation, updating values within a sample database on a background thread.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._47_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Async#1](~/add/codesnippet/csharp/p-system.data.sqlclient._47_1.cs)]"
  syntax:
    content: public bool AsynchronousProcessing { get; set; }
    return:
      type: System.Boolean
      description: "AsynchronousProcessing プロパティの値または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>値が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  id: AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはプライマリ データ ファイルの名前を表す文字列を設定します。 これには、アタッチできるデータベースの完全なパス名が含まれます。"
  remarks: "このプロパティは、&quot;AttachDBFilename&quot;、&quot;extended properties&quot;、および接続文字列内の&quot;initial file name&quot;キーに対応します。       `AttachDBFilename`.mdf ファイルの拡張子を持つプライマリ データ ファイルにのみサポートされます。       データ ファイルと同じディレクトリにログ ファイルが存在して、プライマリ データ ファイルをアタッチするときに、&quot;database&quot; キーワードが使用される場合、エラーが生成されます。 この場合、ログ ファイルを削除します。 データベースがアタッチされると、新しいログ ファイルがされるに基づいて自動的に生成の物理パス。"
  example:
  - "The following example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, and sets the `AttachDBFilename` property in order to specify the name of an attached data file.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._58_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.AttachDBFilename#1](~/add/codesnippet/csharp/p-system.data.sqlclient._58_1.cs)]"
  syntax:
    content: public string AttachDBFilename { get; set; }
    return:
      type: System.String
      description: "値、 <xref uid=&quot;langword_csharp_AttachDBFilename&quot; name=&quot;AttachDBFilename&quot; href=&quot;&quot;> </xref>プロパティ、または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>値が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  id: Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "接続文字列の認証を取得します。"
  syntax:
    content: public System.Data.SqlClient.SqlAuthenticationMethod Authentication { get; set; }
    return:
      type: System.Data.SqlClient.SqlAuthenticationMethod
      description: "接続文字列の認証です。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  id: Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "内容をクリア、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>インスタンス。"
  remarks: "<xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A>メソッドからのすべてのキー/値ペアの削除、 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>、し、すべての対応するプロパティをリセットします</xref:System.Data.SqlClient.SqlConnectionStringBuilder></xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A>。 これには、設定が含まれます、<xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>プロパティを 0 であり、設定、<xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A>プロパティを空の文字列にします</xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A></xref:System.Data.Common.DbConnectionStringBuilder.Count%2A>。"
  example:
  - "The following example demonstrates calling the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method. This example populates the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> with some key/value pairs, and then calls the <xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A> method and shows the results.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/csharp/m-system.data.sqlclient._15_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Clear#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._15_1.vb)]"
  syntax:
    content: public override void Clear ();
    parameters: []
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  id: ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得し、接続文字列ビルダーの暗号化の設定を列に設定します。"
  syntax:
    content: public System.Data.SqlClient.SqlConnectionColumnEncryptionSetting ColumnEncryptionSetting { get; set; }
    return:
      type: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
      description: "接続文字列ビルダーの列暗号化設定です。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  id: ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "今後使用しません。 取得または接続プールからが描画されるときに、接続をリセットするかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、内の&quot;Connection Reset&quot;キーに対応しています、<xref:System.Data.SqlClient.SqlConnection>接続文字列は、.NET Framework のバージョン 3.5 SP1 から削除されました</xref:System.Data.SqlClient.SqlConnection>。"
  syntax:
    content: public bool ConnectionReset { get; set; }
    return:
      type: System.Boolean
      description: "ConnectionReset プロパティ、または値が指定されていない場合は true の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  id: ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[.NET Framework 4.5.1 以降のバージョンでサポート]      再接続の回数は、アイドル状態の接続エラーがあったことを特定したらしようとしました。 これには、0 から 255 までの整数があります。 既定値は 1 です。 失敗したアイドル接続の再接続を無効にする 0 に設定します。 <xref:System.ArgumentException>スローされた場合に設定されます、許容範囲外の値</xref:System.ArgumentException>。"
  syntax:
    content: public int ConnectRetryCount { get; set; }
    return:
      type: System.Int32
      description: "再接続の回数は、アイドル状態の接続エラーがあったことを特定したらしようとしました。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "[.NET Framework 4.5.1 以降のバージョンでサポート]      時間 (秒単位) の再接続試行間アイドル状態の接続エラーが発生したことが特定された後の量。 これにより、1 から 60 までの整数がある必要があります。 既定値は、10 秒です。 <xref:System.ArgumentException>スローされた場合に設定されます、許容範囲外の値</xref:System.ArgumentException>。"
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    return:
      type: System.Int32
      description: "時間 (秒単位) の再接続試行間アイドル状態の接続エラーが発生したことが特定された後の量。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  id: ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはサーバーへの接続を試行を終了し、エラーが発生する前に待機する時間 (秒単位) の長さを設定します。"
  remarks: "このプロパティは、&quot;Connect Timeout&quot;、&quot;connection timeout&quot;、および接続文字列内の&quot;timeout&quot;キーに対応します。       Azure SQL データベースへの接続を開くときに、30 秒に、接続タイムアウトを設定します。"
  example:
  - "The following example first displays the contents of a connection string that does not specify the \"Connect Timeout\" value, sets the ConnectTimeout property, and then displays the new connection string.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._3_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.ConnectTimeout#1](~/add/codesnippet/csharp/p-system.data.sqlclient._3_1.cs)]"
  syntax:
    content: public int ConnectTimeout { get; set; }
    return:
      type: System.Int32
      description: "ConnectTimeout プロパティ、または値が指定されていない場合は 15 秒の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "指定するかどうか、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>特定のキーが含まれています。"
  remarks: "<xref:System.Data.SqlClient.SqlConnectionStringBuilder>キー/値ペアの固定サイズ コレクションが含まれています、<xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>特定のキー名が有効なかどうか、メソッドがだけを判断します</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A></xref:System.Data.SqlClient.SqlConnectionStringBuilder>。"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlConnectionStringBuilder> instance, sets some of its properties, and then tries to determine whether various keys exist within the object by calling the **ContainsKey** method.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/csharp/m-system.data.sqlclient._9_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.ContainsKey#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._9_1.vb)]  \n  \n The example displays the following output in the console window:  \n  \n```  \nConnection string = Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nTrue  \nTrue  \nTrue  \nFalse  \n```"
  syntax:
    content: public override bool ContainsKey (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "内で検索するキー、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "true の場合、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>を指定したキーを持つ要素が含まれています。 それ以外の場合は false。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  id: ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはクライアント/サーバーまたは SQL Server への接続をインプロセスを作成するかどうかを示す値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Context Connection&quot;キーに対応しています。      > [!NOTE] >、<xref:System.Data.SqlClient.SqlConnection.DataSource%2A>プロパティから返される`null`場合、接続文字列が、<xref:System.Data.SqlClient.SqlConnection>は&quot;コンテキスト接続 = true&quot;.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.DataSource%2A>"
  syntax:
    content: public bool ContextConnection { get; set; }
    return:
      type: System.Boolean
      description: "ContextConnection プロパティの値または<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  id: CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server Language レコード名を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Current Language&quot;および&quot;language&quot;キーに対応します。"
  syntax:
    content: public string CurrentLanguage { get; set; }
    return:
      type: System.String
      description: "CurrentLanguage プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>値が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  id: DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはへの接続に SQL Server のインスタンスの名前またはネットワーク アドレスを設定します。"
  remarks: "このプロパティは、&quot;Data Source&quot;、&quot;server&quot;、&quot;address&quot;、&quot;addr&quot;、および接続文字列内の&quot;network address&quot;キーに対応します。 上記のどの値が指定されています、指定された接続文字列内に関係なく、によって作成された接続文字列、`SqlConnectionStringBuilder`よく知られた&quot;Data Source&quot;キーが使用されます。"
  example:
  - "The following example demonstrates that the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class converts synonyms for the \"Data Source\" connection string key into the well-known key:  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._51_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.DataSource#1](~/add/codesnippet/csharp/p-system.data.sqlclient._51_1.cs)]"
  syntax:
    content: public string DataSource { get; set; }
    return:
      type: System.String
      description: "DataSource プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  id: Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server が、サーバーにインストールされている証明書がある場合に、クライアントとサーバー間で送信されるすべてのデータに対して SSL 暗号化を使用するかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Encrypt&quot;キーに対応しています。"
  syntax:
    content: public bool Encrypt { get; set; }
    return:
      type: System.Boolean
      description: "Encrypt プロパティの値または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  id: Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server の接続プーラーが、作成スレッドの現在のトランザクション コンテキストに接続を自動的に登録するかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Enlist&quot;キーに対応します。"
  syntax:
    content: public bool Enlist { get; set; }
    return:
      type: System.Boolean
      description: "参加プロパティの値または<xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  id: FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または名またはプライマリ サーバーがダウンした場合に接続するパートナー サーバーのアドレスを設定します。"
  syntax:
    content: public string FailoverPartner { get; set; }
    return:
      type: System.String
      description: "FailoverPartner プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  id: GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void GetProperties (System.Collections.Hashtable propertyDescriptors);
    parameters:
    - id: propertyDescriptors
      type: System.Collections.Hashtable
      description: "追加します。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  id: InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または接続に関連付けられているデータベースの名前を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Initial Catalog&quot;および&quot;database&quot;キーに対応します。"
  example:
  - "The following example creates a simple connection string and then uses the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> class to add the name of the database to the connection string. The code displays the contents of the InitialCatalog property, just to verify that the class was able to convert from the synonym (\"Database\") to the appropriate property value.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/csharp/p-system.data.sqlclient._46_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.InitialCatalog#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._46_1.vb)]"
  syntax:
    content: public string InitialCatalog { get; set; }
    return:
      type: System.String
      description: "InitialCatalog プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  id: IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または設定を接続でユーザー ID とパスワードを指定するかどうかを示すブール値 (ときに<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>) 認証のため、現在の Windows アカウントの資格情報を使用するかどうか、または (ときに<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>)。"
  remarks: "このプロパティは、接続文字列内での&quot;Integrated Security&quot;および&quot;trusted_connection&quot;キーに対応します。"
  example:
  - "The following example converts an existing connection string from using SQL Server Authentication to using integrated security. The example does its work by removing the user name and password from the connection string and then setting the IntegratedSecurity property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/csharp/p-system.data.sqlclient._35_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.IntegratedSecurity#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._35_1.vb)]"
  syntax:
    content: public bool IntegratedSecurity { get; set; }
    return:
      type: System.Boolean
      description: "IntegratedSecurity プロパティの値または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  id: IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>のサイズが固定されています。"
  syntax:
    content: public override bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>すべてのケースであるため、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>キー/値ペアの固定サイズのコレクションを提供します。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  id: Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または指定されたキーに関連付けられている値を設定します。 C# では、このプロパティは、インデクサーは。"
  remarks: "<xref:System.Data.SqlClient.SqlConnectionStringBuilder> <xref:System.Collections.Generic.KeyNotFoundException>.</xref:System.Collections.Generic.KeyNotFoundException>をスローする、ディクショナリ内に存在しないキーを追加しようとして、固定サイズのディクショナリが含まれています</xref:System.Data.SqlClient.SqlConnectionStringBuilder>"
  example:
  - "The following code, in a console application, creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder> and adds key/value pairs to its connection string, using the Item property.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._4_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Item#1](~/add/codesnippet/csharp/p-system.data.sqlclient._4_1.cs)]"
  syntax:
    content: public override object this[string keyword] { get; set; }
    parameters:
    - id: keyword
      type: System.String
      description: "取得または設定する項目のキー。"
    return:
      type: System.Object
      description: "指定したキーに関連付けられている値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null 参照 (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: "使用可能なキー内に存在しないキーを追加しようとしています。"
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "接続文字列に無効な値 (具体的には、ブール値または数値が必要ですが指定されていません)。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  id: Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得、<xref:System.Collections.ICollection>内のキーを格納している、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  remarks: "内の値の順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられている値と同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A>プロパティ</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Values%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。"
  example:
  - "The following console application example creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>. The code loops through the <xref:System.Collections.ICollection> returned by the Keys property displaying the key/value pairs.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._0_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Keys#1](~/add/codesnippet/csharp/p-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>内のキーを格納している、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または接続が接続プール内で破棄されるまでの秒単位で時間の最小値を設定します。"
  remarks: "このプロパティは、&quot;Load Balance Timeout&quot;キーおよび&quot;connection lifetime&quot;キー、接続文字列内に対応しています。"
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    return:
      type: System.Int32
      description: "LoadBalanceTimeout プロパティ、またはが指定されていない場合は 0 の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  id: MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または特定の接続文字列の接続プールに使用できる接続の最大数を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Max Pool Size&quot;キーに対応しています。"
  syntax:
    content: public int MaxPoolSize { get; set; }
    return:
      type: System.Int32
      description: "MaxPoolSize プロパティ、または 100 が指定されていない場合の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  id: MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または特定の接続文字列の接続プールで許可される接続の最小数を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Min Pool Size&quot;キーに対応しています。"
  syntax:
    content: public int MinPoolSize { get; set; }
    return:
      type: System.Int32
      description: "MinPoolSize プロパティ、またはが指定されていない場合は 0 の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "True の場合、アプリケーションが複数のアクティブな結果セット (MARS) を維持することができます。 False の場合、アプリケーションは処理か、その接続で他のバッチを実行する前に、1 つのバッチからのすべての結果セットを取り消す必要があります。       詳細については、次を参照してください。[複数のアクティブな結果セット (MARS)](http://msdn.microsoft.com//library/cfa084cz.aspx)です。"
  remarks: "このプロパティは、接続文字列内の&quot;MultipleActiveResultSets&quot;キーに対応しています。"
  example:
  - "The following example explicitly disables the Multiple Active Result Sets feature.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/csharp/p-system.data.sqlclient._53_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.MARS#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._53_1.vb)]"
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    return:
      type: System.Boolean
      description: "MultipleActiveResultSets プロパティの値または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "MultiSubnetFailover の設定は、異なるサブネット上の AlwaysOn 可用性グループ (AG) に、アプリケーションが接続する場合は、= true は、迅速に検出し、(現在) アクティブなサーバーへの接続を提供します。 Always On 可用性グループに対する SqlClient サポートの詳細については、次を参照してください。 [High Availability, Disaster Recovery の SqlClient サポート](~/add/includes/ajax-current-ext-md.md)です。"
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    return:
      type: System.Boolean
      description: "返します<xref:System.Boolean>プロパティの現在の値を示すします</xref:System.Boolean>。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  id: NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server への接続を確立するために使用されるネットワーク ライブラリの名前を表す文字列を設定します。"
  remarks: "このプロパティは、&quot;Network Library&quot;、「ネットワーク」、および接続文字列内で&quot;net&quot;キーに対応します。       このプロパティのサポートされている値には、dbnmpntw (名前付きパイプ)、dbmsrpcn (マルチ プロトコル)、dbmsadsn (AppleTalk)、dbmsgnet (VIA)、dbmslpcn (共有メモリ)、dbmsspxn (IPX/SPX)、および dbmssocn (TCP/IP) が含まれます。 対応するネットワーク DLL は、接続先システムにインストールする必要があります。 ネットワークを指定しないし、ローカル サーバーを使用する場合 (たとえば、&quot;です。&quot;または&quot;(local)&quot;)、共有メモリが使用します。"
  syntax:
    content: public string NetworkLibrary { get; set; }
    return:
      type: System.String
      description: "れるネットワーク ライブラリ プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  id: PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server のインスタンスとの通信に使用されるネットワーク パケットのバイト単位のサイズを設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Packet Size&quot;キーに対応しています。"
  syntax:
    content: public int PacketSize { get; set; }
    return:
      type: System.Int32
      description: "PacketSize プロパティまたは 8000 が指定されていない場合の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  id: Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server アカウントのパスワードを設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Password&quot;および&quot;pwd&quot;キーに対応します。       戻り値が<xref:System.String>。</xref:System.String>でパスワードが設定されていない場合、値を取得します。 接続文字列のパスワードをリセットするには、項目のプロパティに null を渡します。"
  example:
  - "The following example shows how to set Password.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._40_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Password.2#1](~/add/codesnippet/csharp/p-system.data.sqlclient._40_1.cs)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Password プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "パスワードが正しく設定されませんを null にします。  次のコード例を参照してください。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはかどうか、パスワードなどの機密情報は返されません、接続の一環として、接続が開いているか、開いている状態になった場合を示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Persist Security Info&quot;および&quot;persistsecurityinfo&quot;キーに対応します。"
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    return:
      type: System.Boolean
      description: "PersistSecurityInfo プロパティの値または<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  id: PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "接続プールのブロック期間ビヘイビアー。"
  remarks: "接続プールが有効になっているとタイムアウト エラーやその他のログイン エラーが発生した、例外がスローされ、[次へ]、5 秒間の&quot;ブロック期間&quot;中の以降の接続試行は失敗します。 アプリケーションが、ブロックしている期間内に接続しようとすると、最初の例外が再度スローされます。 前のブロック期間中に、最大&1; 分のと同じくらいは&2; 回新しいブロック期間ブロック期間の終了後、その後のエラーが発生します。       Azure SQL データベースに接続しようとしています。 が数秒以内に回復された通常一時的なエラーで失敗することができます。 ただし、ブロック期間動作接続プールでないことができます、データベースが使用可能な場合でも、データベースを長期間にわたってに到達します。 これは、高速に表示するために必要とするアプリで特に問題です。 **PoolBlockingPeriod**をアプリに最適なブロッキング期間を選択することができます。 参照してください、 [PoolBlockingPeriod 列挙](~/add/includes/ajax-current-ext-md.md)使用可能な設定をします。"
  syntax:
    content: public System.Data.SqlClient.PoolBlockingPeriod PoolBlockingPeriod { get; set; }
    return:
      type: System.Data.SqlClient.PoolBlockingPeriod
      description: "使用可能なブロック期間の設定。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  id: Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または接続がプール済みまたは接続が要求されるたびを明示的に開くかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Pooling&quot;キーに対応します。"
  syntax:
    content: public bool Pooling { get; set; }
    return:
      type: System.Boolean
      description: "プール プロパティの値または<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "指定したキーを持つエントリを削除、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref>インスタンス。"
  remarks: "**削除**メソッドの成功を示す値を返します、キーからキー/値ペアを削除する前に検索する必要はありません、<xref:System.Data.SqlClient.SqlConnectionStringBuilder>インスタンス</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。 <xref:System.Data.SqlClient.SqlConnectionStringBuilder>削除メソッドを呼び出すと、キー/値ペアの値が既定値にバックアップの再設定するだけ、キー/値ペアの固定サイズ コレクションを保持します</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。       キーのコレクションがサポートされているため、<xref:System.Data.SqlClient.SqlConnectionStringBuilder>は既知の既定値は、コレクション内のすべての項目を修正、.</xref:System.Data.SqlClient.SqlConnectionStringBuilder> 次の表は各ときのキーと値を示します、<xref:System.Data.SqlClient.SqlConnectionStringBuilder>が初めて初期化された、または削除メソッドが呼び出された後</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。      |キー |既定値 |  |---------|-------------------|  |アプリケーション名 |&quot;です。SqlClient データ プロバイダーの net&quot;|  |非同期処理 |False |  |AttachDBFilename |空の文字列 |  |接続タイムアウト |&15; |  |コンテキスト接続 |False |  |現在の言語 |空の文字列 |  |データ ソース |空の文字列 |  |暗号化 |False |  |参加 |True |  |フェールオーバー パートナー |空の文字列 |  |Initial Catalog |空の文字列 |  |統合セキュリティ |False |  |読み込む Balance Timeout |&0; |  |最大プール サイズ |&100; |  |Min Pool Size |&0; |  |MultipleActiveResultSets |False |  |ネットワーク ライブラリ |空の文字列 |  |パケット サイズ |&8000; |  |パスワード |空の文字列 |  |Persist Security Info |False |  |プール |True |  |レプリケーション |False |  |トランザクション バインディング |暗黙的なバインドを解除 |  |ユーザー ID |空の文字列 |  |ユーザー インスタンス |False |  |ワークステーション ID |空の文字列 |"
  example:
  - "The following example converts an existing connection string from using Windows Authentication to using integrated security. The example works by removing the user name and password from the connection string, and then setting the <xref:System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity%2A> property of the <xref:System.Data.SqlClient.SqlConnectionStringBuilder> object.  \n  \n> [!NOTE]\n>  This example includes a password to demonstrate how <xref:System.Data.SqlClient.SqlConnectionStringBuilder> works with connection strings. In your applications, we recommend that you use Windows Authentication. If you must use a password, do not include a hard-coded password in your application.  \n  \n [!code-cs[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/csharp/m-system.data.sqlclient._7_1.cs)]\n [!code-vb[DataWorks SqlConnectionStringBuilder.Remove#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._7_1.vb)]  \n  \n The example displays the following text in the console window:  \n  \n```  \nOriginal: Data Source=(local);Initial Catalog=AdventureWorks;User ID=ab;Password= a1Pass@@11  \nModified: Data Source=(local);Initial Catalog=AdventureWorks;Integrated Security=True  \nDatabase = AdventureWorks  \n```"
  syntax:
    content: public override bool Remove (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "この接続文字列から削除するキー/値ペアのキー <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>キーは、接続文字列内に存在し、削除された場合<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>キーが存在しなかった場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual basic)"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  id: Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または接続を使用してレプリケーションをサポートするかどうかを示すブール値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;Replication&quot;キーに対応しています。"
  syntax:
    content: public bool Replication { get; set; }
    return:
      type: System.Boolean
      description: "レプリケーション プロパティ、またはが指定されていない場合は false の値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  id: ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "これで、指定したキーが存在するかどうかを示す<xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref>インスタンス。"
  remarks: "このメソッドの動作と同じように、<xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>メソッド</xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A>。"
  syntax:
    content: public override bool ShouldSerialize (string keyword);
    parameters:
    - id: keyword
      type: System.String
      description: "内で検索するキー、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref>です。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref> 、指定したエントリを含むキー、それ以外の<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  id: TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "接続が参加するいるとの関連付けを維持する方法を示す文字列値の設定を取得または<xref uid=&quot;langword_csharp_System.Transactions&quot; name=&quot;System.Transactions&quot; href=&quot;&quot;></xref>トランザクションです。"
  remarks: "<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A><xref:System.Data.SqlClient.SqlConnection>参加している<xref:System.Transactions.Transaction>。</xref:System.Transactions.Transaction>バインド</xref:System.Data.SqlClient.SqlConnection>を制御</xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>の Transaction Binding キーワード       次の表は、可能なプロパティの値、TransactionBinding: |値 |説明 |  |-----------|-----------------|  |暗黙的なバインドを解除 |既定値です。 これが終了すると、トランザクションからデタッチへの接続が発生します。 デタッチするには後の接続に対する追加の要求は、自動コミット モードで実行されます。 <xref:System.Transactions.Transaction.Current%2A>がアクティブで、トランザクション中に要求を実行するときにプロパティがチェックされません</xref:System.Transactions.Transaction.Current%2A>。 追加の要求が自動コミット モードで実行されるトランザクションの終了後、. |  |明示的なバインドを解除 |原因のままにして、接続に接続されているトランザクションまで、または接続が閉じられるまで<xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>してを呼び出すと、 `null` (`Nothing` Visual Basic で) 値です</xref:System.Data.SqlClient.SqlConnection.EnlistTransaction%2A>。 <xref:System.InvalidOperationException>場合にスローされる<xref:System.Transactions.Transaction.Current%2A>参加しているトランザクションではない、または登録済みのトランザクションがアクティブでない場合</xref:System.Transactions.Transaction.Current%2A></xref:System.InvalidOperationException>。 この動作に必要な厳密なスコープ規則の適用<xref:System.Transactions.TransactionScope>をサポートします |</xref:System.Transactions.TransactionScope> 。"
  syntax:
    content: public string TransactionBinding { get; set; }
    return:
      type: System.String
      description: "TransactionBinding プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  id: TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはブール値を設定します。"
  syntax:
    content: public bool TransparentNetworkIPResolution { get; set; }
    return:
      type: System.Boolean
      description: "ブール値。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  id: TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または、証明書チェーン信頼を検証する処理をバイパスして、チャネルを暗号化するかどうかを示す値を設定します。"
  remarks: "ときに`TrustServerCertificate`に設定されている`true`トランスポート層では SSL を使用してチャネルを暗号化し、信頼性を検証する証明書チェーンをバイパスします。 場合`TrustServerCertificate`に設定されている`true`と暗号化をオンにして、サーバーで指定された暗号化レベルが使用される場合でも`Encrypt`に設定されている`false`です。 それ以外の場合、接続に失敗します。       詳細については、「暗号化階層」と「を使用して検証を伴わない暗号化」SQL Server オンライン ブックを参照してください。"
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    return:
      type: System.Boolean
      description: "A <xref uid=&quot;langword_csharp_Boolean&quot; name=&quot;Boolean&quot; href=&quot;&quot;></xref>. Recognized values are <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_yes&quot; name=&quot;yes&quot; href=&quot;&quot;></xref>, and <xref uid=&quot;langword_csharp_no&quot; name=&quot;no&quot; href=&quot;&quot;></xref>."
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "これから提供されたキーに対応する値を取得<xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;></xref>です。"
  remarks: "TryGetValue メソッドにより、開発者は安全に値を取得、<xref:System.Data.SqlClient.SqlConnectionStringBuilder>提供されたキー名が有効なキー名であることを確認する必要はありません</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。 **TryGetValue**例外は発生しませんを呼び出すし、存在しないキーを渡してはその値を取得する前にキーを検索する必要はありません。  呼び出す**TryGetValue**存在しないキーを使用して null 値が配置されます (`Nothing` Visual Basic で) で、`value`パラメーター。"
  example:
  - "The following example demonstrates the behavior of the **TryGetValue** method.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/visualbasic/25aa2e92-0892-4821-a220-_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.TryGetValue#1](~/add/codesnippet/csharp/25aa2e92-0892-4821-a220-_1.cs)]  \n  \n The sample displays the following results:  \n  \n```  \nData Source=(local)  \nTrusted_Connection=True  \nUnable to retrieve value for 'InvalidKey'  \nUnable to retrieve value for null key.  \n```"
  syntax:
    content: public override bool TryGetValue (string keyword, out object value);
    parameters:
    - id: keyword
      type: System.String
      description: "取得する項目のキー。"
    - id: value
      type: System.Object
      description: "対応する値。`keyword.`"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> keyword </code> 、それ以外の接続文字列内で見つかった<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyword</code>null 値が含まれています (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> Visual Basic で)。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  id: TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得またはで想定される型システム、アプリケーションを示す文字列値を設定します。"
  remarks: "`TypeSystemVersion`のダウンレベル バージョンを指定するプロパティを使用できます[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]そのバージョンに対して記述されたアプリケーションにします。 新しいバージョンの互換性のない型に関して考えられる問題を回避できます[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]アプリケーションを中断するが発生する可能性があります。"
  syntax:
    content: public string TypeSystemVersion { get; set; }
    return:
      type: System.String
      description: "次の表は、TypeSystemVersion プロパティの値を示しています。       <table><thead><tr><th> 値       </th><th> 説明       </th></tr></thead><tbody><tr><td> [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 2005       </td><td> 使用して、 [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] 2005 システムと入力します。 現在のバージョンの ADO.NET 変換は行われません。       </td></tr><tr><td> SQL Server 2008       </td><td> SQL Server 2008 の型システムを使用します。       </td></tr><tr><td> 最新       </td><td> このクライアント/サーバー ペアで処理できるよりも、最新バージョンを使用します。 これも自動的に繰り、クライアントとサーバー コンポーネントをアップグレードするとき。       </td></tr></tbody></table>"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  id: UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server に接続するときに使用されるユーザー ID を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;User ID&quot;、&quot;user&quot;、および&quot;uid&quot;キーに対応します。"
  syntax:
    content: public string UserID { get; set; }
    return:
      type: System.String
      description: "ユーザー Id プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  id: UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または既定の SQL Server Express インスタンスから、呼び出し元のアカウントで実行時に開始されるインスタンスへの接続をリダイレクトするかどうかを示す値を設定します。"
  remarks: "このプロパティは、接続文字列内の&quot;User Instance&quot;キーに対応しています。      > [!NOTE] > この機能でのみ使用可能な[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]Express Edition。 ユーザー インスタンスの詳細については、次を参照してください。 [SQL Server Express ユーザー インスタンス](~/add/includes/ajax-current-ext-md.md)と&quot;ユーザー インスタンスの非管理者&quot;で[!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)]オンライン ブック。"
  syntax:
    content: public bool UserInstance { get; set; }
    return:
      type: System.Boolean
      description: "UserInstance プロパティの値または<xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  id: Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得、<xref:System.Collections.ICollection>で値を含む、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  remarks: "内の値の順序、<xref:System.Collections.ICollection>は指定しませんが、関連付けられているキーと同じ順序、<xref:System.Collections.ICollection>によって返される、<xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A>プロパティ</xref:System.Data.SqlClient.SqlConnectionStringBuilder.Keys%2A></xref:System.Collections.ICollection></xref:System.Collections.ICollection>。 の各インスタンス、<xref:System.Data.SqlClient.SqlConnectionStringBuilder>常に同じキー、プロパティは常に固定の一連のキーと同じ順序でのキーに対応する値を返しますの値の固定セットが含まれています</xref:System.Data.SqlClient.SqlConnectionStringBuilder>。"
  example:
  - "The following example first creates a new <xref:System.Data.SqlClient.SqlConnectionStringBuilder>, and then iterates through all the values within the object.  \n  \n [!code-vb[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._29_1.vb)]\n [!code-cs[DataWorks SqlConnectionStringBuilder.Values#1](~/add/codesnippet/csharp/p-system.data.sqlclient._29_1.cs)]"
  syntax:
    content: public override System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>で値を含む、 <xref href=&quot;System.Data.SqlClient.SqlConnectionStringBuilder&quot;> </xref></xref:System.Collections.ICollection> 。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  id: WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  langs:
  - csharp
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "取得または SQL Server に接続するワークステーションの名前を設定します。"
  remarks: "このプロパティは、接続文字列内での&quot;Workstation ID&quot;および&quot;wsid&quot;キーに対応します。"
  syntax:
    content: public string WorkstationID { get; set; }
    return:
      type: System.String
      description: "WorkstationID プロパティの値または<xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;></xref>が指定されていない場合。"
  overload: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "値を null に設定するには使用<xref href=&quot;System.DBNull.Value&quot;></xref>です。"
  platform:
  - net462
references:
- uid: System.Data.Common.DbConnectionStringBuilder
  isExternal: false
  name: System.Data.Common.DbConnectionStringBuilder
- uid: System.Collections.Generic.KeyNotFoundException
  isExternal: true
  name: System.Collections.Generic.KeyNotFoundException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder()
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder(String)
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.SqlConnectionStringBuilder(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: false
  name: ApplicationIntent
  nameWithType: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlAuthenticationMethod
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlAuthenticationMethod
  nameWithType: SqlAuthenticationMethod
  fullName: System.Data.SqlClient.SqlAuthenticationMethod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear()
  nameWithType: SqlConnectionStringBuilder.Clear()
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Clear()
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnectionColumnEncryptionSetting
  nameWithType: SqlConnectionColumnEncryptionSetting
  fullName: System.Data.SqlClient.SqlConnectionColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey(String)
  nameWithType: SqlConnectionStringBuilder.ContainsKey(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(System.Collections.Hashtable)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties(Hashtable)
  nameWithType: SqlConnectionStringBuilder.GetProperties(Hashtable)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties(Hashtable)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item(String)
  nameWithType: SqlConnectionStringBuilder.Item(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Item(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.PoolBlockingPeriod
  parent: System.Data.SqlClient
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: PoolBlockingPeriod
  fullName: System.Data.SqlClient.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove(String)
  nameWithType: SqlConnectionStringBuilder.Remove(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Remove(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(System.String)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize(String)
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize(String)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize(String)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(System.String,System.Object@)
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue(String,Object)
  nameWithType: SqlConnectionStringBuilder.TryGetValue(String,Object)
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue(String,Object)
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
  fullName: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.#ctor*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: SqlConnectionStringBuilder
  nameWithType: SqlConnectionStringBuilder.SqlConnectionStringBuilder
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationIntent*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationIntent
  nameWithType: SqlConnectionStringBuilder.ApplicationIntent
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ApplicationName*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ApplicationName
  nameWithType: SqlConnectionStringBuilder.ApplicationName
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AsynchronousProcessing*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AsynchronousProcessing
  nameWithType: SqlConnectionStringBuilder.AsynchronousProcessing
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.AttachDBFilename*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: AttachDBFilename
  nameWithType: SqlConnectionStringBuilder.AttachDBFilename
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Authentication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Authentication
  nameWithType: SqlConnectionStringBuilder.Authentication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Clear*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Clear
  nameWithType: SqlConnectionStringBuilder.Clear
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ColumnEncryptionSetting*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ColumnEncryptionSetting
  nameWithType: SqlConnectionStringBuilder.ColumnEncryptionSetting
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectionReset*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectionReset
  nameWithType: SqlConnectionStringBuilder.ConnectionReset
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryCount*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryCount
  nameWithType: SqlConnectionStringBuilder.ConnectRetryCount
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectRetryInterval*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectRetryInterval
  nameWithType: SqlConnectionStringBuilder.ConnectRetryInterval
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ConnectTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ConnectTimeout
  nameWithType: SqlConnectionStringBuilder.ConnectTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContainsKey*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContainsKey
  nameWithType: SqlConnectionStringBuilder.ContainsKey
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ContextConnection*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ContextConnection
  nameWithType: SqlConnectionStringBuilder.ContextConnection
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.CurrentLanguage*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: CurrentLanguage
  nameWithType: SqlConnectionStringBuilder.CurrentLanguage
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.DataSource*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: DataSource
  nameWithType: SqlConnectionStringBuilder.DataSource
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Encrypt*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Encrypt
  nameWithType: SqlConnectionStringBuilder.Encrypt
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Enlist*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Enlist
  nameWithType: SqlConnectionStringBuilder.Enlist
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.FailoverPartner*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: FailoverPartner
  nameWithType: SqlConnectionStringBuilder.FailoverPartner
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.GetProperties*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: GetProperties
  nameWithType: SqlConnectionStringBuilder.GetProperties
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.InitialCatalog*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: InitialCatalog
  nameWithType: SqlConnectionStringBuilder.InitialCatalog
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IntegratedSecurity*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IntegratedSecurity
  nameWithType: SqlConnectionStringBuilder.IntegratedSecurity
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.IsFixedSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: IsFixedSize
  nameWithType: SqlConnectionStringBuilder.IsFixedSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Item*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Item
  nameWithType: SqlConnectionStringBuilder.Item
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Keys*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Keys
  nameWithType: SqlConnectionStringBuilder.Keys
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.LoadBalanceTimeout*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionStringBuilder.LoadBalanceTimeout
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MaxPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MaxPoolSize
  nameWithType: SqlConnectionStringBuilder.MaxPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MinPoolSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MinPoolSize
  nameWithType: SqlConnectionStringBuilder.MinPoolSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultipleActiveResultSets*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionStringBuilder.MultipleActiveResultSets
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.MultiSubnetFailover*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: MultiSubnetFailover
  nameWithType: SqlConnectionStringBuilder.MultiSubnetFailover
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.NetworkLibrary*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: NetworkLibrary
  nameWithType: SqlConnectionStringBuilder.NetworkLibrary
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PacketSize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PacketSize
  nameWithType: SqlConnectionStringBuilder.PacketSize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Password*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Password
  nameWithType: SqlConnectionStringBuilder.Password
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PersistSecurityInfo*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PersistSecurityInfo
  nameWithType: SqlConnectionStringBuilder.PersistSecurityInfo
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.PoolBlockingPeriod*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: PoolBlockingPeriod
  nameWithType: SqlConnectionStringBuilder.PoolBlockingPeriod
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Pooling*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Pooling
  nameWithType: SqlConnectionStringBuilder.Pooling
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Remove*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Remove
  nameWithType: SqlConnectionStringBuilder.Remove
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Replication*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Replication
  nameWithType: SqlConnectionStringBuilder.Replication
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.ShouldSerialize*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: ShouldSerialize
  nameWithType: SqlConnectionStringBuilder.ShouldSerialize
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransactionBinding*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransactionBinding
  nameWithType: SqlConnectionStringBuilder.TransactionBinding
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TransparentNetworkIPResolution*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TransparentNetworkIPResolution
  nameWithType: SqlConnectionStringBuilder.TransparentNetworkIPResolution
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TrustServerCertificate*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TrustServerCertificate
  nameWithType: SqlConnectionStringBuilder.TrustServerCertificate
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TryGetValue*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TryGetValue
  nameWithType: SqlConnectionStringBuilder.TryGetValue
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.TypeSystemVersion*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: TypeSystemVersion
  nameWithType: SqlConnectionStringBuilder.TypeSystemVersion
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserID
  nameWithType: SqlConnectionStringBuilder.UserID
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.UserInstance*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: UserInstance
  nameWithType: SqlConnectionStringBuilder.UserInstance
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.Values*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: Values
  nameWithType: SqlConnectionStringBuilder.Values
- uid: System.Data.SqlClient.SqlConnectionStringBuilder.WorkstationID*
  parent: System.Data.SqlClient.SqlConnectionStringBuilder
  isExternal: false
  name: WorkstationID
  nameWithType: SqlConnectionStringBuilder.WorkstationID
