### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.VisualCollection
  id: VisualCollection
  children:
  - System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Capacity
  - System.Windows.Media.VisualCollection.Clear
  - System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  - System.Windows.Media.VisualCollection.Count
  - System.Windows.Media.VisualCollection.GetEnumerator
  - System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.IsReadOnly
  - System.Windows.Media.VisualCollection.IsSynchronized
  - System.Windows.Media.VisualCollection.Item(System.Int32)
  - System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  - System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  - System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  - System.Windows.Media.VisualCollection.SyncRoot
  - System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: VisualCollection
  nameWithType: VisualCollection
  fullName: System.Windows.Media.VisualCollection
  type: Class
  summary: "順序付けられたコレクションを表す<xref href=&quot;System.Windows.Media.Visual&quot;></xref>オブジェクト。"
  remarks: "コンテキストのアフィニティが暗黙的に与え、VisualCollection です。 場合は、プロシージャが、所有元のコンテキストとは異なるコンテキストから、VisualCollection にアクセスしようとしています<xref:System.Windows.Media.ContainerVisual>、例外がスローされます。</xref:System.Windows.Media.ContainerVisual> 。"
  example:
  - "The following example shows how to create a VisualCollection and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: 'public sealed class VisualCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  id: '#ctor(System.Windows.Media.Visual)'
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>クラスです。"
  syntax:
    content: public VisualCollection (System.Windows.Media.Visual parent);
    parameters:
    - id: parent
      type: System.Windows.Media.Visual
      description: "ビジュアルの親オブジェクト<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>が返されます。"
  overload: System.Windows.Media.VisualCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  id: Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "追加、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>の末尾に、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "追加する、<xref:System.Windows.Media.Visual>値がある`null`は許可されており、例外は発生しません</xref:System.Windows.Media.Visual>。       Add メソッドが所有者である親、ビジュアル間の親子関係を設定もの<xref:System.Windows.Media.VisualCollection>、および子`visual`</xref:System.Windows.Media.VisualCollection>。       カスタム クラスの visual の子オブジェクトの基になる記憶域実装大きい低レベルの制御を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッド</xref:System.Windows.Media.Visual.RemoveVisualChild%2A></xref:System.Windows.Media.Visual.AddVisualChild%2A>。 独自のストレージの実装を定義する必要があり、 <xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>を使用しないこれらのメソッドを使用する場合"
  example:
  - "The following example shows how to create a <xref:System.Windows.Media.VisualCollection> and add members to it.  \n  \n [!code-cs[DrawingVisualSample#100](~/add/codesnippet/csharp/DrawingVisual/Window1.xaml.cs#100)]\n [!code-vb[DrawingVisualSample#100](~/add/codesnippet/visualbasic/drawingvisual/window1.xaml.vb#100)]  \n  \n> [!NOTE]\n>  For the complete sample, see [Hit Test Using DrawingVisuals Sample](http://go.microsoft.com/fwlink/?LinkID=159994)."
  syntax:
    content: public int Add (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>を追加する、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
    return:
      type: System.Int32
      description: "コレクション内のインデックス<code> visual </code>が追加されました。"
  overload: System.Windows.Media.VisualCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.ArgumentException>場合にスローされますが、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>はルート要素です</xref:System.ArgumentException>。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Capacity
  id: Capacity
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定要素の数、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>含めることができます。"
  remarks: "容量の値が要素の数を<xref:System.Windows.Media.VisualCollection>が格納できる</xref:System.Windows.Media.VisualCollection>。 <xref:System.Windows.Media.VisualCollection.Count%2A><xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>が実際にビジュアルの数です。</xref:System.Windows.Media.VisualCollection.Count%2A> 容量は、常に<xref:System.Windows.Media.VisualCollection.Count%2A>。</xref:System.Windows.Media.VisualCollection.Count%2A>以上 場合<xref:System.Windows.Media.VisualCollection.Count%2A>の容量の要素を追加中に容量を超えています、<xref:System.Windows.Media.VisualCollection>は増加します</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Count%2A>。 既定では容量は&0; です。"
  syntax:
    content: public int Capacity { get; set; }
    return:
      type: System.Int32
      description: "要素の数を<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>含めることができます。"
  overload: System.Windows.Media.VisualCollection.Capacity*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "容量が<xref:System.Windows.Media.VisualCollection.Count*>。</xref:System.Windows.Media.VisualCollection.Count*>よりも小さい値に設定されています。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Clear
  id: Clear
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "すべての要素を削除、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "<xref:System.Windows.Media.VisualCollection.Count%2A>はゼロにリセットします</xref:System.Windows.Media.VisualCollection.Count%2A>。 値、<xref:System.Windows.Media.VisualCollection.Capacity%2A>は変更されません</xref:System.Windows.Media.VisualCollection.Capacity%2A>。 容量をリセットする、 <xref:System.Windows.Media.VisualCollection>、設定、<xref:System.Windows.Media.VisualCollection.Capacity%2A>プロパティを目的のサイズ</xref:System.Windows.Media.VisualCollection.Capacity%2A></xref:System.Windows.Media.VisualCollection>。"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.VisualCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  id: Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "返します、<xref:System.Boolean>を示す値かどうか、指定した<xref href=&quot;System.Windows.Media.Visual&quot;></xref>コレクションに含まれる</xref:System.Boolean>。"
  remarks: "この関数の最悪のシナリオの実行時のシナリオは`O(n)`ここで、 `n` <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>内の項目の数です"
  syntax:
    content: public bool Contains (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>コレクション内で検索します。"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>場合<code> visual </code> 、それ以外のコレクションに含まれている<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Media.VisualCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "特定の配列インデックスを開始位置、配列にコレクション内の項目をコピーします。"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "1 次元<xref:System.Array>からコピーされる要素の先は、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref></xref:System.Array> 。"
    - id: index
      type: System.Int32
      description: "内の&0; から始まるインデックス`array`コピーの開始位置。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  id: CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "渡された現在のコレクションをコピー <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>配列。"
  syntax:
    content: public void CopyTo (System.Windows.Media.Visual[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.Visual[]
      description: "配列<xref href=&quot;System.Windows.Media.Visual&quot;></xref>オブジェクト (を&0; から始まるインデックスを持つ必要があります)。"
    - id: index
      type: System.Int32
      description: "内からコピーを開始するインデックス`array`です。"
  overload: System.Windows.Media.VisualCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Count
  id: Count
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "コレクション内の要素の数を取得します。"
  remarks: "数は実際に<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>内にある要素の数 <xref:System.Windows.Media.VisualCollection.Capacity%2A>要素の数を<xref:System.Windows.Media.VisualCollection>が格納できる</xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection.Capacity%2A>       Count は常に<xref:System.Windows.Media.VisualCollection.Capacity%2A>。</xref:System.Windows.Media.VisualCollection.Capacity%2A>以下 数を超える場合<xref:System.Windows.Media.VisualCollection.Capacity%2A>前の要素をコピーし、新しい要素を追加する前に、内部の配列を自動的に再割り当てして要素を追加するときに、リストの容量が&2; 倍にします</xref:System.Windows.Media.VisualCollection.Capacity%2A>。"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "要素の数を<xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>が含まれています。"
  overload: System.Windows.Media.VisualCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "反復処理できる列挙子を取得、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  syntax:
    content: public System.Windows.Media.VisualCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.VisualCollection.Enumerator
      description: "コレクションを反復処理に使用できる列挙子。"
  overload: System.Windows.Media.VisualCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  id: IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "0 から始まるインデックスを返します、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  remarks: "場合、<xref:System.Windows.Media.Visual>に含まれていない、 <xref:System.Windows.Media.VisualCollection>、-1 が返されます</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.Visual>。 場合`null`メソッドを持つ最初のエントリのインデックスに渡される`null`が返されます。 Null のエントリがない場合は、-1 が返されます。"
  syntax:
    content: public int IndexOf (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>内で検索する、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
    return:
      type: System.Int32
      description: "インデックス、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
  overload: System.Windows.Media.VisualCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  id: Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "要素を挿入、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>指定したインデックス位置。"
  remarks: "場合<xref:System.Windows.Media.VisualCollection.Count%2A>既に同じ<xref:System.Windows.Media.VisualCollection.Capacity%2A>の容量、<xref:System.Windows.Media.VisualCollection>が増加する前に、新しい<xref:System.Windows.Media.Visual>を挿入します</xref:System.Windows.Media.Visual></xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.VisualCollection.Capacity%2A></xref:System.Windows.Media.VisualCollection.Count%2A>。 場合`index`と等しい<xref:System.Windows.Media.VisualCollection.Count%2A>、 `visual` <xref:System.Windows.Media.VisualCollection>.</xref:System.Windows.Media.VisualCollection>の末尾に追加された</xref:System.Windows.Media.VisualCollection.Count%2A> 任意の既存のビジュアル オブジェクトを以上になると、`index`に合わせて新しいシフト<xref:System.Windows.Media.Visual>、およびそのインデックス値が更新されます</xref:System.Windows.Media.Visual>。       Insert メソッドが所有者である親、ビジュアル間の親子関係を設定もの<xref:System.Windows.Media.VisualCollection>、および子`visual`</xref:System.Windows.Media.VisualCollection>。       さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッド</xref:System.Windows.Media.Visual.RemoveVisualChild%2A></xref:System.Windows.Media.Visual.AddVisualChild%2A>。 独自のストレージの実装を定義して<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>を使用しないこれらのメソッドを使用する場合"
  syntax:
    content: public void Insert (int index, System.Windows.Media.Visual visual);
    parameters:
    - id: index
      type: System.Int32
      description: "値を挿入する位置の&0; から始まるインデックス。"
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>に挿入する、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  overload: System.Windows.Media.VisualCollection.Insert*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 より大きいか小さい<xref:System.Windows.Media.VisualCollection.Count*>です。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "示す値を取得するかどうか、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>は読み取り専用です。"
  remarks: "このプロパティは常に`false`すべて<xref:System.Windows.Media.VisualCollection>オブジェクト</xref:System.Windows.Media.VisualCollection>。"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "値を示すかどうか、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>は読み取り専用です。"
  overload: System.Windows.Media.VisualCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "示す値を取得するアクセスかどうか、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> (スレッド セーフである) が同期されています。"
  remarks: "このプロパティは常に`false`すべて<xref:System.Windows.Media.VisualCollection>オブジェクト</xref:System.Windows.Media.VisualCollection>。"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "値を示すかどうか、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref> (スレッド セーフである) が同期されています。"
  overload: System.Windows.Media.VisualCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "取得または設定、 <xref href=&quot;System.Windows.Media.Visual&quot;> </xref>の&0; から始まるインデックス位置に格納されている、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "このプロパティは、固有の仕様にアクセスする機能を提供<xref:System.Windows.Media.Visual>で、<xref:System.Windows.Media.VisualCollection>インデックスを使用します</xref:System.Windows.Media.VisualCollection></xref:System.Windows.Media.Visual>。"
  syntax:
    content: public System.Windows.Media.Visual this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "0 から始まるインデックス、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;> </xref>を取得または設定する、 <xref href=&quot;System.Windows.Media.Visual&quot;></xref>です。"
    return:
      type: System.Windows.Media.Visual
      description: "The <xref href=&quot;System.Windows.Media.Visual&quot;></xref> that is stored at <code>index</code>."
  overload: System.Windows.Media.VisualCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満または<code>index</code>と等しいかより大きい<xref:System.Windows.Media.VisualCollection.Count*>です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "新しい子要素には既に親、または指定したインデックス位置の値が<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  id: Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "指定された削除<xref href=&quot;System.Windows.Media.Visual&quot;></xref>オブジェクトから、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。 場合`visual`は`null`、最初の`null`エントリを削除します。 削除することに注意してください、`null`エントリは、コレクションのサイズに比例します。       Remove メソッドは、所有者であるビジュアルで親との間の親子リレーションシップを削除するもの<xref:System.Windows.Media.VisualCollection>とその子`visual`</xref:System.Windows.Media.VisualCollection>。       さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッド</xref:System.Windows.Media.Visual.RemoveVisualChild%2A></xref:System.Windows.Media.Visual.AddVisualChild%2A>。 独自のストレージの実装を定義して<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>を使用しないこれらのメソッドを使用する場合"
  syntax:
    content: public void Remove (System.Windows.Media.Visual visual);
    parameters:
    - id: visual
      type: System.Windows.Media.Visual
      description: "<xref href=&quot;System.Windows.Media.Visual&quot;> </xref>から削除する、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  overload: System.Windows.Media.VisualCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "指定したインデックス位置のビジュアル オブジェクトを削除、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。       RemoveAt メソッドも、所有者であるビジュアルで親との間の親子リレーションシップを削除の<xref:System.Windows.Media.VisualCollection>、および子`visual`</xref:System.Windows.Media.VisualCollection>。       さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッド</xref:System.Windows.Media.Visual.RemoveVisualChild%2A></xref:System.Windows.Media.Visual.AddVisualChild%2A>。 独自のストレージの実装を定義して<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>を使用しないこれらのメソッドを使用する場合"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "削除するビジュアルの&0; から始まるインデックス。"
  overload: System.Windows.Media.VisualCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満または<code>index</code>と等しいかより大きい<xref:System.Windows.Media.VisualCollection.Count*>です。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "ビジュアルからのオブジェクトの範囲を削除、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  remarks: "削除されたオブジェクトの後ろにある visual オブジェクトは、空いた位置を占めるようにシフトされ、インデックスの値が更新されます。       RemoveRange メソッドでは、親のビジュアル、所有者である間の親子リレーションシップも削除されますの<xref:System.Windows.Media.VisualCollection>、および子ビジュアルの範囲</xref:System.Windows.Media.VisualCollection>。       さらに低レベル制御 visual の子オブジェクトの基になるストレージの実装を必要がある場合は、使用を検討して、<xref:System.Windows.Media.Visual.AddVisualChild%2A>と<xref:System.Windows.Media.Visual.RemoveVisualChild%2A>メソッド</xref:System.Windows.Media.Visual.RemoveVisualChild%2A></xref:System.Windows.Media.Visual.AddVisualChild%2A>。 独自のストレージの実装を定義して<xref:System.Windows.Media.VisualCollection>。</xref:System.Windows.Media.VisualCollection>を使用しないこれらのメソッドを使用する場合"
  syntax:
    content: public void RemoveRange (int index, int count);
    parameters:
    - id: index
      type: System.Int32
      description: "削除する要素の範囲の&0; から始まるインデックス。"
    - id: count
      type: System.Int32
      description: "削除する要素の数。"
  overload: System.Windows.Media.VisualCollection.RemoveRange*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>0 未満または<code>count</code>が&0; 未満です。"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>index</code>および<code>count</code>内の要素の有効な範囲を参照しない、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.SyncRoot
  id: SyncRoot
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "アクセスを同期するために使用できるオブジェクトを取得、 <xref href=&quot;System.Windows.Media.VisualCollection&quot;></xref>です。"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "<xref:System.Object>。</xref:System.Object>型の値"
  overload: System.Windows.Media.VisualCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.VisualCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "このメンバーをサポートしている、[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]インフラストラクチャ コードから直接使用するものではありません。 このメンバーの説明、 <xref:System.Collections.IEnumerable.GetEnumerator*>。</xref:System.Collections.IEnumerable.GetEnumerator*>を参照してください。"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "コレクションを反復処理に使用できるオブジェクト。"
  overload: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection(Visual)
  nameWithType: VisualCollection.VisualCollection(Visual)
  fullName: System.Windows.Media.VisualCollection.VisualCollection(Visual)
- uid: System.Windows.Media.Visual
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual
- uid: System.Windows.Media.VisualCollection.Add(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add(Visual)
  nameWithType: VisualCollection.Add(Visual)
  fullName: System.Windows.Media.VisualCollection.Add(Visual)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.VisualCollection.Capacity
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
  fullName: System.Windows.Media.VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear()
  nameWithType: VisualCollection.Clear()
  fullName: System.Windows.Media.VisualCollection.Clear()
- uid: System.Windows.Media.VisualCollection.Contains(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains(Visual)
  nameWithType: VisualCollection.Contains(Visual)
  fullName: System.Windows.Media.VisualCollection.Contains(Visual)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: VisualCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo(Visual[],Int32)
  nameWithType: VisualCollection.CopyTo(Visual[],Int32)
  fullName: System.Windows.Media.VisualCollection.CopyTo(Visual[],Int32)
- uid: System.Windows.Media.Visual[]
  parent: System.Windows.Media
  isExternal: false
  name: Visual
  nameWithType: Visual
  fullName: System.Windows.Media.Visual[]
  spec.csharp:
  - uid: System.Windows.Media.Visual
    name: Visual
    nameWithType: Visual
    fullName: Visual[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.VisualCollection.Count
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
  fullName: System.Windows.Media.VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: VisualCollection.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.GetEnumerator()
- uid: System.Windows.Media.VisualCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: VisualCollection+Enumerator
  nameWithType: VisualCollection+Enumerator
  fullName: System.Windows.Media.VisualCollection+Enumerator
- uid: System.Windows.Media.VisualCollection.IndexOf(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf(Visual)
  nameWithType: VisualCollection.IndexOf(Visual)
  fullName: System.Windows.Media.VisualCollection.IndexOf(Visual)
- uid: System.Windows.Media.VisualCollection.Insert(System.Int32,System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert(Int32,Visual)
  nameWithType: VisualCollection.Insert(Int32,Visual)
  fullName: System.Windows.Media.VisualCollection.Insert(Int32,Visual)
- uid: System.Windows.Media.VisualCollection.IsReadOnly
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
  fullName: System.Windows.Media.VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
  fullName: System.Windows.Media.VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: VisualCollection.Item(Int32)
  fullName: System.Windows.Media.VisualCollection.Item(Int32)
- uid: System.Windows.Media.VisualCollection.Remove(System.Windows.Media.Visual)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove(Visual)
  nameWithType: VisualCollection.Remove(Visual)
  fullName: System.Windows.Media.VisualCollection.Remove(Visual)
- uid: System.Windows.Media.VisualCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: VisualCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveAt(Int32)
- uid: System.Windows.Media.VisualCollection.RemoveRange(System.Int32,System.Int32)
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange(Int32,Int32)
  nameWithType: VisualCollection.RemoveRange(Int32,Int32)
  fullName: System.Windows.Media.VisualCollection.RemoveRange(Int32,Int32)
- uid: System.Windows.Media.VisualCollection.SyncRoot
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
  fullName: System.Windows.Media.VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.VisualCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.VisualCollection.#ctor*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: VisualCollection
  nameWithType: VisualCollection.VisualCollection
- uid: System.Windows.Media.VisualCollection.Add*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Add
  nameWithType: VisualCollection.Add
- uid: System.Windows.Media.VisualCollection.Capacity*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Capacity
  nameWithType: VisualCollection.Capacity
- uid: System.Windows.Media.VisualCollection.Clear*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Clear
  nameWithType: VisualCollection.Clear
- uid: System.Windows.Media.VisualCollection.Contains*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Contains
  nameWithType: VisualCollection.Contains
- uid: System.Windows.Media.VisualCollection.CopyTo*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: CopyTo
  nameWithType: VisualCollection.CopyTo
- uid: System.Windows.Media.VisualCollection.Count*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Count
  nameWithType: VisualCollection.Count
- uid: System.Windows.Media.VisualCollection.GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: VisualCollection.GetEnumerator
- uid: System.Windows.Media.VisualCollection.IndexOf*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IndexOf
  nameWithType: VisualCollection.IndexOf
- uid: System.Windows.Media.VisualCollection.Insert*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Insert
  nameWithType: VisualCollection.Insert
- uid: System.Windows.Media.VisualCollection.IsReadOnly*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: VisualCollection.IsReadOnly
- uid: System.Windows.Media.VisualCollection.IsSynchronized*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: VisualCollection.IsSynchronized
- uid: System.Windows.Media.VisualCollection.Item*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Item
  nameWithType: VisualCollection.Item
- uid: System.Windows.Media.VisualCollection.Remove*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: Remove
  nameWithType: VisualCollection.Remove
- uid: System.Windows.Media.VisualCollection.RemoveAt*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveAt
  nameWithType: VisualCollection.RemoveAt
- uid: System.Windows.Media.VisualCollection.RemoveRange*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: RemoveRange
  nameWithType: VisualCollection.RemoveRange
- uid: System.Windows.Media.VisualCollection.SyncRoot*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: SyncRoot
  nameWithType: VisualCollection.SyncRoot
- uid: System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.VisualCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: VisualCollection.System.Collections.IEnumerable.GetEnumerator
