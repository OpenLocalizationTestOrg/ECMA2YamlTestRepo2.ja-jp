### YamlMime:ManagedReference
items:
- uid: System.Windows.Trigger
  id: Trigger
  children:
  - System.Windows.Trigger.#ctor
  - System.Windows.Trigger.Property
  - System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  - System.Windows.Trigger.Setters
  - System.Windows.Trigger.SourceName
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  - System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Trigger.Value
  langs:
  - csharp
  name: Trigger
  nameWithType: Trigger
  fullName: System.Windows.Trigger
  type: Class
  summary: "プロパティ値を適用または条件付きでアクションを実行するトリガーを表します。"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]など、エンドユーザーのアクションに対応するプロパティを定義、<xref:System.Windows.UIElement.IsMouseOver%2A>プロパティに設定されている`true`ユーザーが、<xref:System.Windows.UIElement>または対応する<xref:System.Windows.ContentElement.IsMouseOver%2A><xref:System.Windows.ContentElement></xref:System.Windows.ContentElement>プロパティ</xref:System.Windows.ContentElement.IsMouseOver%2A></xref:System.Windows.UIElement>上にカーソルを置く場合</xref:System.Windows.UIElement.IsMouseOver%2A>。 により、プロパティの値、トリガー要素と共にでエンドユーザーの操作を表す[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)]プロパティ値を変更するスタイルに基づいてそのエンドユーザー操作からすべてマークアップ内で。       トリガーによって変更されたプロパティは、トリガーの条件が満たされて不要になった場合に自動的に前の値にリセットされます。 一時的な状態のされる頻度を変更する<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>と<xref:System.Windows.Controls.Button><xref:System.Windows.Controls.ListBoxItem.IsSelected%2A><xref:System.Windows.Controls.ListBoxItem>。</xref:System.Windows.Controls.ListBoxItem></xref:System.Windows.Controls.ListBoxItem.IsSelected%2A></xref:System.Windows.Controls.Button></xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>など、元に戻り値の状態のトリガーに最適化されました。 <xref:System.Windows.Trigger.Property%2A>関心のある依存関係プロパティをする必要があります</xref:System.Windows.Trigger.Property%2A>。       両方を指定する必要があります、<xref:System.Windows.Trigger.Property%2A>と<xref:System.Windows.Trigger.Value%2A>意味を持つように、トリガーのトリガーのプロパティ</xref:System.Windows.Trigger.Value%2A></xref:System.Windows.Trigger.Property%2A>。 1 つまたは両方のプロパティが設定されていない場合、例外がスローされます。       <xref:System.Windows.Trigger.Setters%2A>トリガー オブジェクトのプロパティのみで構成できます<xref:System.Windows.Setter>オブジェクト</xref:System.Windows.Setter></xref:System.Windows.Trigger.Setters%2A>。 追加する、<xref:System.Windows.Setter>トリガー オブジェクトに子が暗黙的に追加して、<xref:System.Windows.SetterBaseCollection>トリガー オブジェクトの</xref:System.Windows.SetterBaseCollection></xref:System.Windows.Setter>。 <xref:System.Windows.EventSetter>オブジェクトはサポートされていません。のみ<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>サポート<xref:System.Windows.EventSetter>オブジェクト</xref:System.Windows.EventSetter></xref:System.Windows.Style.Setters%2A?displayProperty=fullName>。</xref:System.Windows.EventSetter>       トリガーの他の種類があります。 <xref:System.Windows.MultiTrigger>複数のプロパティの状態に基づいて変更を適用できます。</xref:System.Windows.MultiTrigger> <xref:System.Windows.EventTrigger>イベントの発生時に変更を適用できます。</xref:System.Windows.EventTrigger> <xref:System.Windows.DataTrigger>および<xref:System.Windows.MultiDataTrigger>は、データ バインドされたプロパティ</xref:System.Windows.MultiDataTrigger>。</xref:System.Windows.DataTrigger>"
  example:
  - "The following example shows a named <xref:System.Windows.Style> available to <xref:System.Windows.Controls.Button> controls. The <xref:System.Windows.Style> defines a Trigger element that changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is `true`.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Setters")]

      [System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")]

      public class Trigger : System.Windows.TriggerBase, System.ComponentModel.ISupportInitialize, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.ComponentModel.ISupportInitialize
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.Trigger.#ctor
  id: '#ctor'
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "新しいインスタンスを初期化、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>クラスです。"
  syntax:
    content: public Trigger ();
    parameters: []
  overload: System.Windows.Trigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Property
  id: Property
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定のプロパティと比較される値を返す、<xref:System.Windows.Trigger.Value*>トリガーのプロパティ</xref:System.Windows.Trigger.Value*>。 比較では参照等価性のチェックです。"
  remarks: "このプロパティによって返される値で指定された値と比較は、<xref:System.Windows.Trigger.Value%2A>プロパティ</xref:System.Windows.Trigger.Value%2A>。 実行される比較は、参照の等価性チェックです。 2 つの値と一致する場合、関連付けられている<xref:System.Windows.Setter>s が、指定したプロパティの値を適用します</xref:System.Windows.Setter>。       使用して、`ClassName.PropertyName`かどうかスタイルまたはテンプレートをこのトリガーを含む必要はありませんを指定するプロパティを修飾するための構文、`TargetType`プロパティ セットです。       両方のプロパティを指定する必要があることおよび<xref:System.Windows.Trigger.Value%2A>プロパティを<xref:System.Windows.Trigger>の意味を持つようにトリガーします</xref:System.Windows.Trigger></xref:System.Windows.Trigger.Value%2A>。 1 つまたは両方のプロパティが設定されていない場合、例外がスローされます。"
  example:
  - "The following example contains two triggers. The first changes the <xref:System.Windows.Controls.Control.Background%2A> property of a <xref:System.Windows.Controls.Button> when the <xref:System.Windows.UIElement.IsMouseOver%2A> property is **true**. The second changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**. The <xref:System.Windows.Style.TargetType%2A> of the <xref:System.Windows.Style> is set to <xref:System.Windows.Controls.Button> and therefore there is no need to qualify the `Property` properties with the class name.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public System.Windows.DependencyProperty Property { get; set; }
    return:
      type: System.Windows.DependencyProperty
      description: "A <xref href=&quot;System.Windows.DependencyProperty&quot;> </xref>要素のプロパティの値を返します。 既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Trigger.Property*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A <xref href=&quot;System.Windows.Style&quot;> </xref>含めることはできません、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>を参照する、 <xref href=&quot;System.Windows.Style&quot;> </xref>プロパティです。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後に、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>は使用中で、変更できません。"
  platform:
  - net462
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  id: ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "実行する型コンバーターがのプロパティの値を提供する場合の処理、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>オブジェクト。"
  remarks: "これは、適用されているによって参照されるメソッド<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>このメソッドがの値を設定するすべての試行を処理することを意味するクラス レベルで属性<xref:System.Windows.Trigger>型コンバーターを使用した</xref:System.Windows.Trigger></xref:System.Windows.Markup.XamlSetTypeConverterAttribute>。 呼び出すことはない通常このメソッド直接。"
  syntax:
    content: public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);
    parameters:
    - id: targetObject
      type: System.Object
      description: "型コンバーターは、値が設定されるオブジェクト。"
    - id: eventArgs
      type: System.Windows.Markup.XamlSetTypeConverterEventArgs
      description: "型コンバーターの処理に関連するデータ。"
  overload: System.Windows.Trigger.ReceiveTypeConverter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Setters
  id: Setters
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "コレクションを取得<xref href=&quot;System.Windows.Setter&quot;></xref>オブジェクトで、指定した条件が満たされているときに適用するプロパティの値を説明します。"
  remarks: "<a name=&quot;xamlPropertyElementUsage_Setters&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.Setters>       ZeroOrMoreSetters     </object.Setters>   </object>   ``` <a name=&quot;xamlValues_Setters&quot;> </a> ## XAML 値*ZeroOrMoreSetters*&0; 個以上<xref:System.Windows.Setter>オブジェクト</xref:System.Windows.Setter>。       サポートしていません<xref:System.Windows.EventSetter>オブジェクト</xref:System.Windows.EventSetter>。       A<xref:System.Windows.Trigger>を使用することができます<xref:System.Windows.Setter>プロパティを適用する値の要素が、指定した条件を満たす場合です</xref:System.Windows.Setter></xref:System.Windows.Trigger>。 たとえば、フォーカスにあるときに、要素の背景色を変更することがあります。       同じプロパティが複数回設定されている場合は、最後のプロパティ値が適用されます。       Set アクセス操作子のプロパティ、<xref:System.Windows.Trigger>オブジェクトのみで構成できます<xref:System.Windows.Setter>オブジェクト</xref:System.Windows.Setter></xref:System.Windows.Trigger>。 追加する、<xref:System.Windows.Setter>に子、<xref:System.Windows.Trigger>オブジェクトが暗黙的に追加して、<xref:System.Windows.SetterBaseCollection>の<xref:System.Windows.Trigger>オブジェクト</xref:System.Windows.Trigger></xref:System.Windows.SetterBaseCollection></xref:System.Windows.Trigger></xref:System.Windows.Setter>。 <xref:System.Windows.EventSetter>オブジェクトはサポートされていません。のみ<xref:System.Windows.Style.Setters%2A?displayProperty=fullName>サポート<xref:System.Windows.EventSetter>オブジェクト</xref:System.Windows.EventSetter></xref:System.Windows.Style.Setters%2A?displayProperty=fullName>。</xref:System.Windows.EventSetter>"
  example:
  - "As mentioned above, adding a <xref:System.Windows.Setter> child to a <xref:System.Windows.Trigger> object implicitly adds it to the <xref:System.Windows.SetterBaseCollection> for the <xref:System.Windows.Trigger> object. In the following example, `<Trigger.Setters>` is implicit.  \n  \n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/photostore/window1.xaml#triggersettersref)]\n [!code-xml[PhotoStoreDemoStyled#TriggerSettersRef](~/add/codesnippet/xaml/p-system.windows.trigger_3_1.xaml)]"
  syntax:
    content: public System.Windows.SetterBaseCollection Setters { get; }
    return:
      type: System.Windows.SetterBaseCollection
      description: "既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。"
  overload: System.Windows.Trigger.Setters*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.SourceName
  id: SourceName
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または設定を適用する関連付けられている setter の原因となるプロパティを使用してオブジェクトの名前。"
  remarks: "Where のスコープ内の要素の名前に、このプロパティを設定することができます、トリガーのコレクション (コレクションこの<xref:System.Windows.Trigger>の一部である) を適用します</xref:System.Windows.Trigger>。 通常、この<xref:System.Windows.Trigger>。</xref:System.Windows.Trigger>を格納しているテンプレート内にある名前付き要素       オブジェクトを使用して、名前を付けることができます、 [X:name ディレクティブ](~/add/includes/ajax-current-ext-md.md)構文です。"
  example:
  - "One scenario when you would use the SourceName property is when the property of interest is not a property of the templated parent, as in the following example:  \n  \n [!code-xml[ControlTemplateExamples#TriggerSourceName](~/add/codesnippet/xaml/controltemplateexamples/resources/menu.xaml#triggersourcename)]"
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "既定のプロパティは<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 このプロパティが場合<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>、<xref:System.Windows.Trigger.Property*>プロパティは、このスタイルまたはテンプレート (スタイルを指定した親またはテンプレートの親) に適用されている要素に対して評価されます</xref:System.Windows.Trigger.Property*>。"
  overload: System.Windows.Trigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後に、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>は使用中で、変更できません。"
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  id: System#ComponentModel#ISupportInitialize#BeginInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "オブジェクトに通知しますその初期化を開始します。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Setter>にインスタンスをキャスト、<xref:System.ComponentModel.ISupportInitialize>インターフェイス</xref:System.ComponentModel.ISupportInitialize></xref:System.Windows.Setter>。"
  syntax:
    content: void ISupportInitialize.BeginInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  id: System#ComponentModel#ISupportInitialize#EndInit
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "オブジェクトに通知します初期化が完了しました。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Setter>にインスタンスをキャスト、<xref:System.ComponentModel.ISupportInitialize>インターフェイス</xref:System.ComponentModel.ISupportInitialize></xref:System.Windows.Setter>。"
  syntax:
    content: void ISupportInitialize.EndInit ();
    parameters: []
  overload: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "子オブジェクトを追加します。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Trigger>にインスタンスをキャスト、<xref:System.Windows.Markup.IAddChild>インターフェイス</xref:System.Windows.Markup.IAddChild></xref:System.Windows.Trigger>。"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "追加する子オブジェクト。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "オブジェクトにノードのテキスト コンテンツを追加します。"
  remarks: "このメンバーは、明示的なインターフェイス メンバーの実装です。 使用する場合にのみ、<xref:System.Windows.Trigger>にインスタンスをキャスト、<xref:System.Windows.Markup.IAddChild>インターフェイス</xref:System.Windows.Markup.IAddChild></xref:System.Windows.Trigger>。"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "オブジェクトに追加するテキスト。"
  overload: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Trigger.Value
  id: Value
  parent: System.Windows.Trigger
  langs:
  - csharp
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "取得または要素のプロパティの値と比較する値を設定します。 比較では参照等価性のチェックです。"
  remarks: "この値は<xref:System.Windows.Trigger.Property%2A><xref:System.Windows.Trigger>。</xref:System.Windows.Trigger>プロパティ</xref:System.Windows.Trigger.Property%2A>によって返されるプロパティの値と比較します。 実行される比較は、参照品質チェックです。 2 つの値が等しいかどうか、関連付けられた場合<xref:System.Windows.Setter>s が、指定したプロパティの値を適用します</xref:System.Windows.Setter>。       両方を指定する必要があります、<xref:System.Windows.Trigger.Property%2A>でプロパティを値と、<xref:System.Windows.Trigger>の意味を持つようにトリガーします</xref:System.Windows.Trigger></xref:System.Windows.Trigger.Property%2A>。 そのため、1 つまたは両方のプロパティが指定されていない場合は、例外がスローされます。      <a name=&quot;xamlPropertyElementUsage_Value&quot;></a>## XAML プロパティ要素の使用```   <object>     <object.Value>       Value     </object.Value>   </object>   ```"
  example:
  - "The following example changes the <xref:System.Windows.Controls.Control.Foreground%2A> property of a button when the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property is **true**.  \n  \n [!code-xml[BtnStyles#2](~/add/codesnippet/xaml/ButtonStyles2/app.xaml#2)]"
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "既定値は<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>です。 [例外] セクションを参照してください。"
  overload: System.Windows.Trigger.Value*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "バインドなどの式はサポートされていません。"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "後に、 <xref href=&quot;System.Windows.Trigger&quot;> </xref>は使用中で、変更できません。"
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.Trigger.#ctor
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger()
  nameWithType: Trigger.Trigger()
  fullName: System.Windows.Trigger.Trigger()
- uid: System.Windows.Trigger.Property
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
  fullName: System.Windows.Trigger.Property
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Trigger.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  nameWithType: Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
  fullName: System.Windows.Trigger.ReceiveTypeConverter(Object,XamlSetTypeConverterEventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Markup.XamlSetTypeConverterEventArgs
  parent: System.Windows.Markup
  isExternal: false
  name: XamlSetTypeConverterEventArgs
  nameWithType: XamlSetTypeConverterEventArgs
  fullName: System.Windows.Markup.XamlSetTypeConverterEventArgs
- uid: System.Windows.Trigger.Setters
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
  fullName: System.Windows.Trigger.Setters
- uid: System.Windows.SetterBaseCollection
  parent: System.Windows
  isExternal: false
  name: SetterBaseCollection
  nameWithType: SetterBaseCollection
  fullName: System.Windows.SetterBaseCollection
- uid: System.Windows.Trigger.SourceName
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
  fullName: System.Windows.Trigger.SourceName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.BeginInit()
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit()
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit()
  fullName: System.Windows.Trigger.System.ComponentModel.ISupportInitialize.EndInit()
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Trigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.Trigger.Value
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
  fullName: System.Windows.Trigger.Value
- uid: System.Windows.Trigger.#ctor*
  parent: System.Windows.Trigger
  isExternal: false
  name: Trigger
  nameWithType: Trigger.Trigger
- uid: System.Windows.Trigger.Property*
  parent: System.Windows.Trigger
  isExternal: false
  name: Property
  nameWithType: Trigger.Property
- uid: System.Windows.Trigger.ReceiveTypeConverter*
  parent: System.Windows.Trigger
  isExternal: false
  name: ReceiveTypeConverter
  nameWithType: Trigger.ReceiveTypeConverter
- uid: System.Windows.Trigger.Setters*
  parent: System.Windows.Trigger
  isExternal: false
  name: Setters
  nameWithType: Trigger.Setters
- uid: System.Windows.Trigger.SourceName*
  parent: System.Windows.Trigger
  isExternal: false
  name: SourceName
  nameWithType: Trigger.SourceName
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#BeginInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.BeginInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.BeginInit
- uid: System.Windows.Trigger.System#ComponentModel#ISupportInitialize#EndInit*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.ComponentModel.ISupportInitialize.EndInit
  nameWithType: Trigger.System.ComponentModel.ISupportInitialize.EndInit
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Trigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Trigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: Trigger.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Trigger.Value*
  parent: System.Windows.Trigger
  isExternal: false
  name: Value
  nameWithType: Trigger.Value
